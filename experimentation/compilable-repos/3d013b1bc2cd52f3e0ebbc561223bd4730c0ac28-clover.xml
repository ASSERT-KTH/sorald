<?xml version="1.0" encoding="UTF-8"?>
<coverage generated="1594407923132" clover="4.4.1">
   <project name="Leokom Chess 0.6-SNAPSHOT" timestamp="1594407917741">
      <metrics coveredelements="4413" complexity="1248" loc="13965" methods="1042" classes="182" statements="3445" packages="19" coveredconditionals="251" coveredmethods="956" elements="4777" ncloc="8712" files="170" conditionals="290" coveredstatements="3206"/>
      <package name="com.leokom.games.chess.players">
         <metrics coveredelements="99" complexity="30" loc="244" methods="24" classes="3" statements="73" coveredconditionals="2" coveredmethods="24" elements="99" ncloc="178" files="2" conditionals="2" coveredstatements="73"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/players/CommandLinePlayers.java" name="CommandLinePlayers.java">
            <metrics coveredelements="30" coveredconditionals="2" complexity="11" loc="91" coveredmethods="5" methods="5" elements="30" classes="2" ncloc="64" statements="23" conditionals="2" coveredstatements="23"/>
            <class name="CommandLinePlayers">
               <metrics coveredelements="26" coveredconditionals="2" complexity="9" coveredmethods="3" methods="3" elements="26" statements="21" conditionals="2" coveredstatements="21"/>
            </class>
            <class name="CommandLinePlayers.ChessSystemProperty">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="CommandLinePlayers()" num="30" count="15" type="method"/>
            <line num="31" count="15" type="stmt"/>
            <line num="32" count="15" type="stmt"/>
            <line complexity="1" visibility="package" signature="ChessSystemProperty(String)" num="42" count="30" type="method"/>
            <line num="43" count="30" type="stmt"/>
            <line complexity="1" visibility="package" signature="getFor(Side) : Optional&lt;String&gt;" num="46" count="24" type="method"/>
            <line num="47" count="24" type="stmt"/>
            <line complexity="2" visibility="public" signature="apply(Side) : Player" num="61" count="15" type="method"/>
            <line num="63" count="15" type="stmt"/>
            <line num="64" count="3" type="stmt"/>
            <line num="65" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="65" type="cond"/>
            <line num="68" count="15" type="stmt"/>
            <line complexity="6" visibility="private" signature="getPlayer(Side,String) : Player" num="71" count="15" type="method"/>
            <line num="72" count="15" type="stmt"/>
            <line num="73" count="15" type="stmt"/>
            <line num="74" count="9" type="stmt"/>
            <line num="75" count="9" type="stmt"/>
            <line num="78" count="9" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="86" count="2" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/players/CommandLinePlayersTest.java" name="CommandLinePlayersTest.java">
            <metrics coveredelements="69" coveredconditionals="0" complexity="19" loc="153" coveredmethods="19" methods="19" elements="69" classes="1" ncloc="114" statements="50" conditionals="0" coveredstatements="50"/>
            <class name="CommandLinePlayersTest">
               <metrics coveredelements="69" complexity="19" methods="19" testruns="15" statements="50" coveredconditionals="0" coveredmethods="19" elements="69" testfailures="0" testduration="0.038000000000000006" conditionals="0" coveredstatements="50" testpasses="15"/>
            </class>
            <line complexity="1" visibility="public" signature="noSystemPropertiesDefaultPlayerBlack() : void" num="17" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="19" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="canSelectSimpleBrainForWhite() : void" num="23" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="25" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="canSelectRandomBrainForBlack() : void" num="31" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="canSelectDenormalizedBrainForWhite() : void" num="39" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="failFastOnUnsupportedEngine() : void" num="47" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertIsSimple(Player) : void" num="54" count="1" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="canSelectWinboardForBlack() : void" num="58" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="noSystemPropertiesDefaultPlayerWhite() : void" num="66" testsuccess="true" count="1" testduration="0.008" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="normalizedSelectedBlack() : void" num="72" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertHasNormalizedBrain(Player) : void" num="80" count="3" type="method"/>
            <line num="81" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertIsRandom(Player) : void" num="84" count="1" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="normalizedSelectedWhite() : void" num="88" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="90" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="depth2FromCommandLineRespectedForWhite() : void" num="96" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="depth1FromCommandLineRespectedForWhite() : void" num="105" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="depth1FromCommandLineRespectedForBlack() : void" num="114" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="depth2FromCommandLineRespectedForBlack() : void" num="123" testsuccess="true" count="1" testduration="0.015" type="method"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="normalizedBrainDepthCanBeProvidedEvenIfEngineIsNotProvided() : void" num="132" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="135" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="defaultDepthIs1() : void" num="141" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="143" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertDepth(Player,int) : void" num="149" count="6" type="method"/>
            <line num="151" count="6" type="stmt"/>
         </file>
      </package>
      <package name="com.leokom.games.chess.engine">
         <metrics coveredelements="2217" complexity="605" loc="6034" methods="508" classes="57" statements="1637" coveredconditionals="114" coveredmethods="495" elements="2267" ncloc="3790" files="56" conditionals="122" coveredstatements="1608"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/engine/Board.java" name="Board.java">
            <metrics coveredelements="58" coveredconditionals="6" complexity="26" loc="153" coveredmethods="16" methods="17" elements="63" classes="1" ncloc="90" statements="40" conditionals="6" coveredstatements="36"/>
            <class name="Board">
               <metrics coveredelements="58" coveredconditionals="6" complexity="26" coveredmethods="16" methods="17" elements="63" statements="40" conditionals="6" coveredstatements="36"/>
            </class>
            <line complexity="1" visibility="private" signature="Board()" num="22" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="fileOfSquare(String) : char" num="38" count="22184321" type="method"/>
            <line num="39" count="22184321" type="stmt"/>
            <line complexity="1" visibility="package" signature="rankOfSquare(String) : int" num="42" count="22264675" type="method"/>
            <line num="43" count="22264675" type="stmt"/>
            <line complexity="3" visibility="private" signature="fileTo(char,HorizontalDirection,int) : char" num="46" count="21712567" type="method"/>
            <line num="47" count="21712567" type="stmt"/>
            <line num="48" count="12247409" type="stmt"/>
            <line num="49" count="12247409" type="stmt"/>
            <line num="50" count="9465158" type="stmt"/>
            <line num="51" count="9465158" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="3" visibility="package" signature="&lt;clinit&gt;, line 60()" num="60" count="1" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line falsecount="1" truecount="8" num="63" type="cond"/>
            <line num="64" count="8" type="stmt"/>
            <line falsecount="8" truecount="64" num="64" type="cond"/>
            <line num="65" count="64" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="squareTo(String,HorizontalDirection,int,VerticalDirection,int) : Optional&lt;String&gt;" num="72" count="21712567" type="method"/>
            <line num="73" count="21712567" type="stmt"/>
            <line num="74" count="21712567" type="stmt"/>
            <line num="76" count="21712567" type="stmt"/>
            <line num="77" count="21712567" type="stmt"/>
            <line num="79" count="21712567" type="stmt"/>
            <line complexity="1" visibility="package" signature="square(char,int) : String" num="88" count="21990167" type="method"/>
            <line num="92" count="21990167" type="stmt"/>
            <line complexity="1" visibility="private" signature="squareTo(String,HorizontalDirection) : Optional&lt;String&gt;" num="95" count="2709737" type="method"/>
            <line num="96" count="2709737" type="stmt"/>
            <line complexity="1" visibility="private" signature="squareTo(String,HorizontalDirection,int) : Optional&lt;String&gt;" num="99" count="2709737" type="method"/>
            <line num="100" count="2709737" type="stmt"/>
            <line complexity="1" visibility="private" signature="squareTo(String,VerticalDirection) : Optional&lt;String&gt;" num="103" count="2728983" type="method"/>
            <line num="105" count="2728983" type="stmt"/>
            <line complexity="5" visibility="package" signature="squareTo(String,Direction) : Optional&lt;String&gt;" num="108" count="5438720" type="method"/>
            <line num="109" count="5438720" type="stmt"/>
            <line num="110" count="1363889" type="stmt"/>
            <line num="110" count="1363889" type="stmt"/>
            <line num="111" count="1365094" type="stmt"/>
            <line num="111" count="1365094" type="stmt"/>
            <line num="112" count="1363322" type="stmt"/>
            <line num="112" count="1363322" type="stmt"/>
            <line num="113" count="1346415" type="stmt"/>
            <line num="113" count="1346415" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="rankTo(int,VerticalDirection,int) : int" num="118" count="23054138" type="method"/>
            <line num="119" count="23054138" type="stmt"/>
            <line falsecount="10068832" truecount="12985306" num="120" type="cond"/>
            <line complexity="1" visibility="package" signature="rankTo(int,VerticalDirection) : int" num="125" count="1341571" type="method"/>
            <line num="126" count="1341571" type="stmt"/>
            <line complexity="1" visibility="package" signature="sameFile(String,String) : boolean" num="135" count="129386" type="method"/>
            <line num="136" count="129386" type="stmt"/>
            <line complexity="1" visibility="private" signature="squareDiagonally(String,HorizontalDirection,VerticalDirection,int) : Optional&lt;String&gt;" num="139" count="11258399" type="method"/>
            <line num="140" count="11258399" type="stmt"/>
            <line complexity="1" visibility="package" signature="squareDiagonally(String,HorizontalDirection,VerticalDirection) : Optional&lt;String&gt;" num="144" count="11258399" type="method"/>
            <line num="145" count="11258399" type="stmt"/>
            <line complexity="1" visibility="package" signature="getSquaresBetween(char,char,int) : Stream&lt;String&gt;" num="148" count="16680" type="method"/>
            <line num="150" count="16680" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/engine/Direction.java" name="Direction.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="34" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="Direction">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="package" signature="all() : Set&lt; Direction &gt;" num="31" count="1278230" type="method"/>
            <line num="32" count="1278230" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/engine/HorizontalDirection.java" name="HorizontalDirection.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="32" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="HorizontalDirection">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="package" signature="all() : Set&lt; HorizontalDirection &gt;" num="29" count="5043947" type="method"/>
            <line num="30" count="5043947" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/engine/InitialPosition.java" name="InitialPosition.java">
            <metrics coveredelements="29" coveredconditionals="2" complexity="6" loc="73" coveredmethods="4" methods="5" elements="30" classes="1" ncloc="49" statements="23" conditionals="2" coveredstatements="23"/>
            <class name="InitialPosition">
               <metrics coveredelements="29" coveredconditionals="2" complexity="6" coveredmethods="4" methods="5" elements="30" statements="23" conditionals="2" coveredstatements="23"/>
            </class>
            <line complexity="1" visibility="private" signature="InitialPosition()" num="11" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="getPawnInitialRank(Side) : int" num="25" count="1022236" type="method"/>
            <line num="26" count="1022236" type="stmt"/>
            <line complexity="1" visibility="package" signature="getNotPawnInitialRank(Side) : int" num="30" count="9032" type="method"/>
            <line num="31" count="9032" type="stmt"/>
            <line complexity="2" visibility="package" signature="generate(Rules) : Position" num="34" count="267" type="method"/>
            <line num="35" count="267" type="stmt"/>
            <line num="36" count="267" type="stmt"/>
            <line num="38" count="267" type="stmt"/>
            <line num="39" count="267" type="stmt"/>
            <line num="40" count="267" type="stmt"/>
            <line num="41" count="267" type="stmt"/>
            <line num="42" count="267" type="stmt"/>
            <line num="44" count="267" type="stmt"/>
            <line num="45" count="534" type="stmt"/>
            <line falsecount="534" truecount="4272" num="45" type="cond"/>
            <line num="46" count="4272" type="stmt"/>
            <line num="49" count="534" type="stmt"/>
            <line num="51" count="534" type="stmt"/>
            <line num="52" count="1068" type="stmt"/>
            <line num="55" count="534" type="stmt"/>
            <line num="56" count="1068" type="stmt"/>
            <line num="59" count="534" type="stmt"/>
            <line num="60" count="1068" type="stmt"/>
            <line num="63" count="534" type="stmt"/>
            <line num="64" count="534" type="stmt"/>
            <line num="67" count="267" type="stmt"/>
            <line complexity="1" visibility="package" signature="generate() : Position" num="70" count="243" type="method"/>
            <line num="71" count="243" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/engine/Move.java" name="Move.java">
            <metrics coveredelements="49" coveredconditionals="7" complexity="22" loc="201" coveredmethods="17" methods="18" elements="53" classes="2" ncloc="95" statements="27" conditionals="8" coveredstatements="25"/>
            <class name="Move">
               <metrics coveredelements="43" coveredconditionals="7" complexity="19" coveredmethods="14" methods="15" elements="47" statements="24" conditionals="8" coveredstatements="22"/>
            </class>
            <class name="Move.SpecialMove">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="package" signature="SpecialMove()" num="36" count="4" type="method"/>
            <line num="37" count="4" type="stmt"/>
            <line complexity="1" visibility="package" signature="get() : Move" num="40" count="4" type="method"/>
            <line num="41" count="4" type="stmt"/>
            <line complexity="1" visibility="package" signature="fromMove(Move) : SpecialMove" num="44" count="219" type="method"/>
            <line num="45" count="219" type="stmt"/>
            <line complexity="1" visibility="public" signature="Move(String,String)" num="86" count="408941" type="method"/>
            <line num="88" count="408941" type="stmt"/>
            <line num="89" count="408941" type="stmt"/>
            <line num="90" count="408941" type="stmt"/>
            <line complexity="1" visibility="public" signature="isSpecial() : boolean" num="101" count="224407" type="method"/>
            <line num="102" count="224407" type="stmt"/>
            <line complexity="1" visibility="private" signature="Move()" num="105" count="4" type="method"/>
            <line num="108" count="4" type="stmt"/>
            <line num="109" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFrom() : String" num="112" count="982523" type="method"/>
            <line num="113" count="982523" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTo() : String" num="116" count="223641" type="method"/>
            <line num="117" count="223641" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="125" count="3317946" type="method"/>
            <line num="127" count="3317946" type="stmt"/>
            <line falsecount="3317946" truecount="0" num="127" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line num="133" count="3317946" type="stmt"/>
            <line falsecount="2800551" truecount="517395" num="133" type="cond"/>
            <line num="134" count="517395" type="stmt"/>
            <line num="137" count="2800551" type="stmt"/>
            <line num="138" count="2800551" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="142" count="231531" type="method"/>
            <line num="148" count="231531" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="151" count="14647" type="method"/>
            <line num="153" count="14647" type="stmt"/>
            <line falsecount="14428" truecount="219" num="153" type="cond"/>
            <line complexity="1" visibility="public" signature="isPromotion() : boolean" num="158" count="51" type="method"/>
            <line num="159" count="51" type="stmt"/>
            <line complexity="1" visibility="package" signature="isPromotion(String) : boolean" num="162" count="690377" type="method"/>
            <line num="163" count="690377" type="stmt"/>
            <line complexity="1" visibility="package" signature="getDestinationSquare() : String" num="166" count="89252" type="method"/>
            <line num="167" count="89252" type="stmt"/>
            <line complexity="1" visibility="package" signature="getPromotionPieceType() : PieceType" num="170" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getPromotionPieceType(String) : PieceType" num="174" count="104" type="method"/>
            <line num="177" count="104" type="stmt"/>
            <line num="178" count="104" type="stmt"/>
            <line complexity="2" visibility="package" signature="getDestinationSquare(String) : String" num="187" count="555955" type="method"/>
            <line num="188" count="555955" type="stmt"/>
            <line falsecount="555631" truecount="324" num="188" type="cond"/>
            <line complexity="1" visibility="public" signature="toOldStringPresentation() : String" num="198" count="27" type="method"/>
            <line num="199" count="27" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/engine/Piece.java" name="Piece.java">
            <metrics coveredelements="14" coveredconditionals="1" complexity="7" loc="49" coveredmethods="5" methods="6" elements="18" classes="1" ncloc="32" statements="10" conditionals="2" coveredstatements="8"/>
            <class name="Piece">
               <metrics coveredelements="14" coveredconditionals="1" complexity="7" coveredmethods="5" methods="6" elements="18" statements="10" conditionals="2" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="package" signature="Piece(PieceType,Side)" num="15" count="448124" type="method"/>
            <line num="16" count="448124" type="stmt"/>
            <line num="17" count="448124" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPieceType() : PieceType" num="20" count="5792718" type="method"/>
            <line num="21" count="5792718" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSide() : Side" num="24" count="17085858" type="method"/>
            <line num="25" count="17085858" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="28" count="1539" type="method"/>
            <line num="30" count="1539" type="stmt"/>
            <line complexity="2" visibility="public" signature="equals(Object) : boolean" num="33" count="6427497" type="method"/>
            <line num="35" count="6427497" type="stmt"/>
            <line falsecount="6427497" truecount="0" num="35" type="cond"/>
            <line num="36" count="0" type="stmt"/>
            <line num="39" count="6427497" type="stmt"/>
            <line num="40" count="6427497" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/engine/PieceType.java" name="PieceType.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="3" loc="72" coveredmethods="3" methods="3" elements="6" classes="1" ncloc="23" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="PieceType">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="package" signature="PieceType(String)" num="58" count="6" type="method"/>
            <line num="59" count="6" type="stmt"/>
            <line complexity="1" visibility="package" signature="byNotation(String) : PieceType" num="62" count="104" type="method"/>
            <line num="63" count="104" type="stmt"/>
            <line complexity="1" visibility="package" signature="getNotation() : String" num="69" count="140" type="method"/>
            <line num="70" count="140" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/engine/Position.java" name="Position.java">
            <metrics coveredelements="388" coveredconditionals="46" complexity="143" loc="1079" coveredmethods="99" methods="99" elements="396" classes="1" ncloc="567" statements="249" conditionals="48" coveredstatements="243"/>
            <class name="Position">
               <metrics coveredelements="388" coveredconditionals="46" complexity="143" coveredmethods="99" methods="99" elements="396" statements="249" conditionals="48" coveredstatements="243"/>
            </class>
            <line complexity="1" visibility="package" signature="setHasKingMoved(Side) : void" num="92" count="7860" type="method"/>
            <line num="93" count="7860" type="stmt"/>
            <line complexity="1" visibility="package" signature="setHasARookMoved(Side) : void" num="96" count="2130" type="method"/>
            <line num="97" count="2130" type="stmt"/>
            <line complexity="1" visibility="package" signature="setHasHRookMoved(Side) : void" num="100" count="2175" type="method"/>
            <line num="101" count="2175" type="stmt"/>
            <line complexity="1" visibility="package" signature="setHasCastlingExecuted(Side) : void" num="104" count="24" type="method"/>
            <line num="105" count="24" type="stmt"/>
            <line complexity="1" visibility="package" signature="setEnPassantFile(Character) : void" num="108" count="134389" type="method"/>
            <line num="108" count="134389" type="stmt"/>
            <line complexity="1" visibility="public" signature="Position(Side)" num="135" count="226171" type="method"/>
            <line num="136" count="226171" type="stmt"/>
            <line complexity="1" visibility="public" signature="Position(Side,Side)" num="139" count="226796" type="method"/>
            <line num="140" count="226796" type="stmt"/>
            <line num="141" count="226796" type="stmt"/>
            <line num="142" count="226796" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialPosition() : Position" num="151" count="243" type="method"/>
            <line num="152" count="243" type="stmt"/>
            <line complexity="1" visibility="private" signature="isSquareValid(String) : boolean" num="156" count="232970" type="method"/>
            <line num="157" count="232970" type="stmt"/>
            <line complexity="1" visibility="package" signature="getMovesFrom(String) : Set&lt;String&gt;" num="174" count="136195" type="method"/>
            <line num="175" count="136195" type="stmt"/>
            <line num="177" count="136195" type="stmt"/>
            <line num="183" count="136195" type="stmt"/>
            <line num="188" count="136195" type="stmt"/>
            <line num="194" count="136195" type="stmt"/>
            <line num="196" count="136195" type="stmt"/>
            <line complexity="7" visibility="private" signature="getPotentialMoves(String) : Set&lt;String&gt;" num="203" count="136195" type="method"/>
            <line num="204" count="136195" type="stmt"/>
            <line num="205" count="16810" type="stmt"/>
            <line num="206" count="16810" type="stmt"/>
            <line num="207" count="16950" type="stmt"/>
            <line num="208" count="16950" type="stmt"/>
            <line num="209" count="17255" type="stmt"/>
            <line num="210" count="17255" type="stmt"/>
            <line num="211" count="8531" type="stmt"/>
            <line num="212" count="8531" type="stmt"/>
            <line num="213" count="9404" type="stmt"/>
            <line num="214" count="9404" type="stmt"/>
            <line num="215" count="67245" type="stmt"/>
            <line num="216" count="67245" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getKingMoves(String) : Set&lt;String&gt;" num="224" count="9404" type="method"/>
            <line num="225" count="9404" type="stmt"/>
            <line num="227" count="9404" type="stmt"/>
            <line num="232" count="9404" type="stmt"/>
            <line complexity="12" visibility="private" signature="generatePossibleCastlingDestinations(String) : Set&lt;String&gt;" num="235" count="9404" type="method"/>
            <line num="236" count="9404" type="stmt"/>
            <line num="238" count="9404" type="stmt"/>
            <line num="241" count="9404" type="stmt"/>
            <line falsecount="9130" truecount="274" num="241" type="cond"/>
            <line num="242" count="274" type="stmt"/>
            <line num="246" count="9130" type="stmt"/>
            <line falsecount="9032" truecount="98" num="246" type="cond"/>
            <line num="247" count="98" type="stmt"/>
            <line num="250" count="9032" type="stmt"/>
            <line num="254" count="9032" type="stmt"/>
            <line num="255" count="9032" type="stmt"/>
            <line falsecount="676" truecount="8356" num="255" type="cond"/>
            <line num="257" count="8356" type="stmt"/>
            <line num="258" count="8356" type="stmt"/>
            <line falsecount="8349" truecount="7" num="258" type="cond"/>
            <line num="262" count="7" type="stmt"/>
            <line num="265" count="8356" type="stmt"/>
            <line num="266" count="8356" type="stmt"/>
            <line falsecount="8351" truecount="5" num="266" type="cond"/>
            <line num="270" count="5" type="stmt"/>
            <line num="274" count="9032" type="stmt"/>
            <line complexity="1" visibility="private" signature="isFreeRankBetween(char,char,int) : boolean" num="285" count="16680" type="method"/>
            <line num="286" count="16680" type="stmt"/>
            <line complexity="7" visibility="private" signature="getSquaresAttackedFromSquare(String) : Set&lt; String &gt;" num="290" count="4912607" type="method"/>
            <line num="292" count="4912607" type="stmt"/>
            <line num="293" count="2441673" type="stmt"/>
            <line num="294" count="2441673" type="stmt"/>
            <line num="295" count="610121" type="stmt"/>
            <line num="296" count="610121" type="stmt"/>
            <line num="297" count="617773" type="stmt"/>
            <line num="298" count="617773" type="stmt"/>
            <line num="299" count="614531" type="stmt"/>
            <line num="300" count="614531" type="stmt"/>
            <line num="301" count="307500" type="stmt"/>
            <line num="302" count="307500" type="stmt"/>
            <line num="303" count="321009" type="stmt"/>
            <line num="304" count="321009" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getSquaresAttackedByKing(String) : Set&lt;String&gt;" num="310" count="330413" type="method"/>
            <line num="313" count="330413" type="stmt"/>
            <line num="316" count="330413" type="stmt"/>
            <line num="317" count="660826" type="stmt"/>
            <line num="318" count="1321652" type="stmt"/>
            <line num="324" count="330413" type="stmt"/>
            <line num="325" count="1321652" type="stmt"/>
            <line num="329" count="330413" type="stmt"/>
            <line complexity="1" visibility="private" signature="getSquaresAttackedByQueen(String) : Set&lt;String&gt;" num="332" count="307500" type="method"/>
            <line num="333" count="307500" type="stmt"/>
            <line num="334" count="307500" type="stmt"/>
            <line num="335" count="307500" type="stmt"/>
            <line complexity="3" visibility="private" signature="getSquaresAttackedByRook(String) : Set&lt;String&gt;" num="338" count="947817" type="method"/>
            <line num="339" count="947817" type="stmt"/>
            <line num="341" count="947817" type="stmt"/>
            <line num="342" count="3791268" type="stmt"/>
            <line num="344" count="3791268" type="stmt"/>
            <line num="345" count="4117068" type="stmt"/>
            <line num="346" count="4117068" type="stmt"/>
            <line falsecount="3791268" truecount="325800" num="347" type="cond"/>
            <line num="350" count="947817" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSquaresOccupied() : Set&lt;String&gt;" num="353" count="573912" type="method"/>
            <line num="355" count="573912" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSquaresOccupiedBySide(Side) : Set&lt;String&gt;" num="358" count="9817" type="method"/>
            <line num="359" count="9817" type="stmt"/>
            <line complexity="1" visibility="private" signature="getSquaresOccupiedBySideToStream(Side) : Stream&lt;String&gt;" num="362" count="341998" type="method"/>
            <line num="363" count="341998" type="stmt"/>
            <line complexity="1" visibility="private" signature="isKingInCheck(Side) : boolean" num="366" count="215154" type="method"/>
            <line num="367" count="215154" type="stmt"/>
            <line complexity="1" visibility="private" signature="isSquareAttacked(Side,String) : boolean" num="373" count="230902" type="method"/>
            <line num="374" count="230902" type="stmt"/>
            <line complexity="1" visibility="private" signature="kingStream(Side) : Stream&lt; String &gt;" num="379" count="215154" type="method"/>
            <line num="380" count="215154" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSquaresAttackedBy(Side) : Set&lt; String &gt;" num="391" count="8510" type="method"/>
            <line num="392" count="8510" type="stmt"/>
            <line complexity="1" visibility="private" signature="getSquaresAttackedByToStream(Side) : Stream&lt; String &gt;" num="395" count="239412" type="method"/>
            <line num="396" count="239412" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSquaresAttackingSquare(Side,String) : Stream&lt; String &gt;" num="408" count="83378" type="method"/>
            <line num="409" count="83378" type="stmt"/>
            <line complexity="1" visibility="private" signature="getQueenMoves(String) : Set&lt;String&gt;" num="417" count="8531" type="method"/>
            <line num="423" count="8531" type="stmt"/>
            <line complexity="3" visibility="private" signature="getSquaresAttackedByBishop(String) : Set&lt;String&gt;" num="427" count="950754" type="method"/>
            <line num="428" count="950754" type="stmt"/>
            <line num="430" count="950754" type="stmt"/>
            <line num="431" count="1901508" type="stmt"/>
            <line num="432" count="3803016" type="stmt"/>
            <line num="433" count="3803016" type="stmt"/>
            <line num="434" count="4918911" type="stmt"/>
            <line num="435" count="4918911" type="stmt"/>
            <line falsecount="3803016" truecount="1115895" num="438" type="cond"/>
            <line num="441" count="950754" type="stmt"/>
            <line complexity="1" visibility="private" signature="getSquaresAttackedByPawn(String) : Stream&lt; String &gt;" num="446" count="2508918" type="method"/>
            <line num="447" count="2508918" type="stmt"/>
            <line num="449" count="5017836" type="stmt"/>
            <line num="451" count="5017836" type="stmt"/>
            <line complexity="3" visibility="private" signature="getPawnMoves(String) : Set&lt;String&gt;" num="455" count="67245" type="method"/>
            <line num="456" count="67245" type="stmt"/>
            <line num="458" count="67245" type="stmt"/>
            <line num="459" count="67245" type="stmt"/>
            <line num="462" count="67245" type="stmt"/>
            <line num="464" count="67245" type="stmt"/>
            <line falsecount="67218" truecount="27" num="464" type="cond"/>
            <line num="465" count="27" type="stmt"/>
            <line num="468" count="27" type="stmt"/>
            <line num="476" count="67218" type="stmt"/>
            <line num="477" count="67218" type="stmt"/>
            <line falsecount="5736" truecount="61482" num="477" type="cond"/>
            <line num="478" count="61482" type="stmt"/>
            <line num="481" count="67218" type="stmt"/>
            <line num="488" count="67245" type="stmt"/>
            <line num="489" count="67245" type="stmt"/>
            <line complexity="1" visibility="private" signature="canEnPassant(Side,String) : boolean" num="495" count="117098" type="method"/>
            <line num="496" count="117098" type="stmt"/>
            <line complexity="1" visibility="private" signature="canBeAttackedUsually(Side,String) : boolean" num="500" count="206908" type="method"/>
            <line num="501" count="206908" type="stmt"/>
            <line complexity="1" visibility="private" signature="getSquaresAttackedByKnight(String) : Set&lt;String&gt;" num="504" count="626931" type="method"/>
            <line num="507" count="626931" type="stmt"/>
            <line num="509" count="626931" type="stmt"/>
            <line num="510" count="626931" type="stmt"/>
            <line num="511" count="1253862" type="stmt"/>
            <line num="512" count="2507724" type="stmt"/>
            <line num="513" count="5015448" type="stmt"/>
            <line num="520" count="626931" type="stmt"/>
            <line complexity="1" visibility="private" signature="canPawnMove(String,String) : boolean" num="523" count="129384" type="method"/>
            <line num="524" count="129384" type="stmt"/>
            <line num="527" count="129384" type="stmt"/>
            <line complexity="1" visibility="private" signature="isPawnDoubleMoveProhibited(String,String) : boolean" num="534" count="126107" type="method"/>
            <line num="535" count="126107" type="stmt"/>
            <line num="536" count="126107" type="stmt"/>
            <line num="537" count="126107" type="stmt"/>
            <line complexity="2" visibility="public" signature="getSide(String) : Side" num="547" count="6165628" type="method"/>
            <line num="548" count="6165628" type="stmt"/>
            <line num="549" count="6165628" type="stmt"/>
            <line falsecount="6165530" truecount="98" num="549" type="cond"/>
            <line complexity="1" visibility="private" signature="getPawnDoubleMoveIntermediateRank(Side) : int" num="557" count="153472" type="method"/>
            <line num="559" count="153472" type="stmt"/>
            <line complexity="1" visibility="package" signature="getEnPassantPossibleRank(Side) : int" num="569" count="134371" type="method"/>
            <line num="570" count="134371" type="stmt"/>
            <line complexity="1" visibility="private" signature="getPawnNextRank(int,Side) : int" num="579" count="1274326" type="method"/>
            <line num="580" count="1274326" type="stmt"/>
            <line num="581" count="1274326" type="stmt"/>
            <line complexity="2" visibility="private" signature="getPawnMovementDirection(Side) : VerticalDirection" num="584" count="6359407" type="method"/>
            <line num="585" count="6359407" type="stmt"/>
            <line falsecount="3248586" truecount="3110821" num="585" type="cond"/>
            <line complexity="1" visibility="private" signature="getPawnPreviousRank(int,Side) : int" num="590" count="67245" type="method"/>
            <line num="591" count="67245" type="stmt"/>
            <line num="594" count="67245" type="stmt"/>
            <line complexity="1" visibility="private" signature="getRankBeforePromotion(Side) : int" num="601" count="67245" type="method"/>
            <line num="602" count="67245" type="stmt"/>
            <line complexity="1" visibility="private" signature="getPromotionRank(Side) : int" num="605" count="67385" type="method"/>
            <line num="606" count="67385" type="stmt"/>
            <line complexity="1" visibility="private" signature="getPromotionResult(char,Side) : Stream&lt; String &gt;" num="616" count="35" type="method"/>
            <line num="617" count="35" type="stmt"/>
            <line complexity="1" visibility="private" signature="isOccupiedBy(String,Side) : boolean" num="629" count="10977342" type="method"/>
            <line num="631" count="10977342" type="stmt"/>
            <line num="632" count="10977342" type="stmt"/>
            <line complexity="1" visibility="private" signature="isOccupiedBy(String,PieceType) : boolean" num="635" count="202948" type="method"/>
            <line num="636" count="202948" type="stmt"/>
            <line num="637" count="202948" type="stmt"/>
            <line complexity="1" visibility="private" signature="isOccupied(String) : boolean" num="640" count="190015" type="method"/>
            <line num="641" count="190015" type="stmt"/>
            <line complexity="1" visibility="package" signature="getDoubleMoveRank(Side) : int" num="644" count="603554" type="method"/>
            <line num="645" count="603554" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(String,String) : Position" num="652" count="163" type="method"/>
            <line num="653" count="163" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(Move) : Position" num="668" count="224076" type="method"/>
            <line num="670" count="224076" type="stmt"/>
            <line complexity="2" visibility="public" signature="getPieceType(String) : PieceType" num="673" count="761412" type="method"/>
            <line num="674" count="761412" type="stmt"/>
            <line falsecount="2" truecount="761410" num="674" type="cond"/>
            <line complexity="1" visibility="public" signature="hasARookMoved(Side) : boolean" num="677" count="11540" type="method"/>
            <line num="678" count="11540" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasHRookMoved(Side) : boolean" num="681" count="11534" type="method"/>
            <line num="682" count="11534" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasKingMoved(Side) : boolean" num="685" count="6006" type="method"/>
            <line num="686" count="6006" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasCastlingExecuted(Side) : boolean" num="689" count="6016" type="method"/>
            <line num="690" count="6016" type="stmt"/>
            <line complexity="1" visibility="package" signature="copyStateTo(Position) : void" num="698" count="226177" type="method"/>
            <line num="700" count="226177" type="stmt"/>
            <line num="702" count="6755293" type="stmt"/>
            <line num="707" count="226177" type="stmt"/>
            <line num="708" count="226177" type="stmt"/>
            <line num="709" count="226177" type="stmt"/>
            <line num="710" count="226177" type="stmt"/>
            <line num="713" count="226177" type="stmt"/>
            <line num="715" count="226177" type="stmt"/>
            <line num="716" count="226177" type="stmt"/>
            <line num="717" count="226177" type="stmt"/>
            <line num="719" count="226177" type="stmt"/>
            <line complexity="1" visibility="public" signature="toMirror() : Position" num="731" count="2102" type="method"/>
            <line num="732" count="2102" type="stmt"/>
            <line num="733" count="2102" type="stmt"/>
            <line num="734" count="2102" type="stmt"/>
            <line complexity="1" visibility="package" signature="isFree(String) : boolean" num="742" count="5510456" type="method"/>
            <line num="743" count="5510456" type="stmt"/>
            <line complexity="1" visibility="package" signature="getPossibleEnPassantFile() : Character" num="751" count="134432" type="method"/>
            <line num="752" count="134432" type="stmt"/>
            <line complexity="1" visibility="package" signature="addPawn(Side,String) : void" num="755" count="134477" type="method"/>
            <line num="756" count="134477" type="stmt"/>
            <line complexity="1" visibility="package" signature="addQueen(Side,String) : void" num="759" count="25" type="method"/>
            <line num="760" count="25" type="stmt"/>
            <line complexity="2" visibility="public" signature="add(Side,String,PieceType) : void" num="766" count="232970" type="method"/>
            <line num="767" count="232970" type="stmt"/>
            <line falsecount="232969" truecount="1" num="767" type="cond"/>
            <line num="768" count="1" type="stmt"/>
            <line num="771" count="232969" type="stmt"/>
            <line complexity="1" visibility="package" signature="hasQueen(Side,String) : boolean" num="774" count="4" type="method"/>
            <line num="775" count="4" type="stmt"/>
            <line complexity="1" visibility="package" signature="hasPawn(Side,String) : boolean" num="786" count="32" type="method"/>
            <line num="787" count="32" type="stmt"/>
            <line complexity="1" visibility="package" signature="hasPiece(Side,String,PieceType) : boolean" num="790" count="84" type="method"/>
            <line num="791" count="84" type="stmt"/>
            <line num="792" count="84" type="stmt"/>
            <line complexity="1" visibility="package" signature="getPiece(String) : Piece" num="797" count="447295" type="method"/>
            <line num="798" count="447295" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="802" count="55" type="method"/>
            <line num="804" count="55" type="stmt"/>
            <line complexity="1" visibility="package" signature="removePiece(String) : void" num="809" count="223634" type="method"/>
            <line num="810" count="223634" type="stmt"/>
            <line complexity="2" visibility="package" signature="moveUnconditionally(String,String) : void" num="817" count="24" type="method"/>
            <line num="818" count="24" type="stmt"/>
            <line num="819" count="24" type="stmt"/>
            <line num="820" count="24" type="stmt"/>
            <line num="822" count="24" type="stmt"/>
            <line falsecount="24" truecount="0" num="822" type="cond"/>
            <line num="823" count="0" type="stmt"/>
            <line num="826" count="24" type="stmt"/>
            <line complexity="7" visibility="public" signature="getMoves() : Set&lt; Move &gt;" num="836" count="9890" type="method"/>
            <line num="838" count="9890" type="stmt"/>
            <line falsecount="9391" truecount="499" num="838" type="cond"/>
            <line num="839" count="499" type="stmt"/>
            <line num="842" count="9391" type="stmt"/>
            <line num="848" count="9391" type="stmt"/>
            <line falsecount="67" truecount="9324" num="848" type="cond"/>
            <line num="852" count="9324" type="stmt"/>
            <line falsecount="9306" truecount="18" num="852" type="cond"/>
            <line num="853" count="18" type="stmt"/>
            <line num="854" count="18" type="stmt"/>
            <line num="855" count="18" type="stmt"/>
            <line num="858" count="9306" type="stmt"/>
            <line falsecount="8996" truecount="310" num="858" type="cond"/>
            <line num="859" count="310" type="stmt"/>
            <line num="862" count="9306" type="stmt"/>
            <line num="863" count="9306" type="stmt"/>
            <line num="864" count="9306" type="stmt"/>
            <line falsecount="9232" truecount="74" num="864" type="cond"/>
            <line num="865" count="74" type="stmt"/>
            <line num="867" count="67" type="stmt"/>
            <line falsecount="52" truecount="15" num="867" type="cond"/>
            <line num="868" count="15" type="stmt"/>
            <line num="869" count="15" type="stmt"/>
            <line num="872" count="9373" type="stmt"/>
            <line complexity="1" visibility="private" signature="markDraw() : void" num="875" count="33" type="method"/>
            <line num="879" count="33" type="stmt"/>
            <line num="881" count="33" type="stmt"/>
            <line num="883" count="33" type="stmt"/>
            <line complexity="1" visibility="private" signature="isObligatoryDraw() : boolean" num="886" count="9324" type="method"/>
            <line num="887" count="9324" type="stmt"/>
            <line num="888" count="9324" type="stmt"/>
            <line complexity="1" visibility="private" signature="canClaimDraw() : boolean" num="891" count="9306" type="method"/>
            <line num="892" count="9306" type="stmt"/>
            <line complexity="1" visibility="private" signature="enoughMovesWithoutPawnMovementAndCapture(int) : boolean" num="895" count="18230" type="method"/>
            <line num="896" count="18230" type="stmt"/>
            <line complexity="1" visibility="public" signature="isLegal(Move) : boolean" num="905" count="37" type="method"/>
            <line num="908" count="37" type="stmt"/>
            <line complexity="1" visibility="package" signature="getNormalMoves() : Set&lt; Move &gt;" num="914" count="3" type="method"/>
            <line num="915" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPieces(Side) : Stream&lt; Piece &gt;" num="918" count="4190" type="method"/>
            <line num="919" count="4190" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSideToMove() : Side" num="922" count="765192" type="method"/>
            <line num="923" count="765192" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMovedSide() : Side" num="926" count="14254" type="method"/>
            <line num="927" count="14254" type="stmt"/>
            <line complexity="1" visibility="package" signature="setSideToMove(Side) : void" num="930" count="271" type="method"/>
            <line num="931" count="271" type="stmt"/>
            <line complexity="1" visibility="package" signature="setSideToMove(Side,Side) : void" num="934" count="271" type="method"/>
            <line num="935" count="271" type="stmt"/>
            <line num="936" count="271" type="stmt"/>
            <line complexity="1" visibility="public" signature="isTerminal() : boolean" num="946" count="5368" type="method"/>
            <line num="947" count="5368" type="stmt"/>
            <line complexity="1" visibility="public" signature="getGameResult() : Result" num="955" count="22" type="method"/>
            <line num="956" count="22" type="stmt"/>
            <line num="958" count="22" type="stmt"/>
            <line complexity="3" visibility="public" signature="getWinningSide() : Side" num="968" count="277" type="method"/>
            <line num="969" count="277" type="stmt"/>
            <line num="977" count="277" type="stmt"/>
            <line falsecount="65" truecount="212" num="977" type="cond"/>
            <line falsecount="35" truecount="30" num="977" type="cond"/>
            <line complexity="2" visibility="private" signature="validateGameIsOver() : void" num="980" count="299" type="method"/>
            <line num="981" count="299" type="stmt"/>
            <line falsecount="299" truecount="0" num="981" type="cond"/>
            <line num="982" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="setTerminal(Side) : void" num="990" count="358" type="method"/>
            <line num="991" count="358" type="stmt"/>
            <line num="992" count="358" type="stmt"/>
            <line complexity="1" visibility="package" signature="setWaitingForAcceptDraw(boolean) : void" num="995" count="224075" type="method"/>
            <line num="996" count="224075" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialPosition(Rules) : Position" num="999" count="24" type="method"/>
            <line num="1000" count="24" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRules() : Rules" num="1003" count="6" type="method"/>
            <line num="1004" count="6" type="stmt"/>
            <line complexity="1" visibility="package" signature="setRules(Rules) : void" num="1007" count="274" type="method"/>
            <line num="1008" count="274" type="stmt"/>
            <line complexity="1" visibility="package" signature="incPliesCount() : void" num="1011" count="223596" type="method"/>
            <line num="1012" count="223596" type="stmt"/>
            <line complexity="1" visibility="package" signature="restartObligatoryDrawCounter() : void" num="1015" count="135645" type="method"/>
            <line num="1016" count="135645" type="stmt"/>
            <line complexity="1" visibility="package" signature="isCapture(Move) : boolean" num="1024" count="89225" type="method"/>
            <line num="1025" count="89225" type="stmt"/>
            <line complexity="1" visibility="private" signature="isEnPassant(Move) : boolean" num="1033" count="87953" type="method"/>
            <line num="1034" count="87953" type="stmt"/>
            <line complexity="1" visibility="private" signature="isCaptureByPawn(Move) : boolean" num="1038" count="87953" type="method"/>
            <line num="1039" count="87953" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMovesForOpponent() : Set&lt;Move&gt;" num="1048" count="4" type="method"/>
            <line num="1049" count="4" type="stmt"/>
            <line num="1051" count="4" type="stmt"/>
            <line num="1052" count="4" type="stmt"/>
            <line falsecount="1" truecount="3" num="1052" type="cond"/>
            <line num="1053" count="3" type="stmt"/>
            <line num="1055" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMoveNumber() : int" num="1071" count="22" type="method"/>
            <line num="1072" count="22" type="stmt"/>
            <line complexity="1" visibility="package" signature="setGameResult(Result) : void" num="1075" count="358" type="method"/>
            <line num="1076" count="358" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/engine/PositionBuilder.java" name="PositionBuilder.java">
            <metrics coveredelements="36" coveredconditionals="0" complexity="15" loc="92" coveredmethods="13" methods="15" elements="43" classes="1" ncloc="63" statements="28" conditionals="0" coveredstatements="23"/>
            <class name="PositionBuilder">
               <metrics coveredelements="36" coveredconditionals="0" complexity="15" coveredmethods="13" methods="15" elements="43" statements="28" conditionals="0" coveredstatements="23"/>
            </class>
            <line complexity="1" visibility="public" signature="PositionBuilder()" num="16" count="284" type="method"/>
            <line num="19" count="284" type="stmt"/>
            <line complexity="1" visibility="public" signature="initial() : PositionBuilder" num="22" count="2" type="method"/>
            <line num="23" count="2" type="stmt"/>
            <line num="24" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(Side,String,PieceType) : PositionBuilder" num="27" count="437" type="method"/>
            <line num="28" count="437" type="stmt"/>
            <line num="29" count="437" type="stmt"/>
            <line complexity="1" visibility="public" signature="setSideOf(String) : PositionBuilder" num="32" count="256" type="method"/>
            <line num="33" count="256" type="stmt"/>
            <line complexity="1" visibility="public" signature="setSide(Side) : PositionBuilder" num="36" count="271" type="method"/>
            <line num="37" count="271" type="stmt"/>
            <line num="38" count="271" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSideToMove() : Side" num="41" count="2" type="method"/>
            <line num="42" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : Position" num="45" count="248" type="method"/>
            <line num="46" count="248" type="stmt"/>
            <line complexity="1" visibility="public" signature="addPawn(Side,String) : PositionBuilder" num="49" count="192" type="method"/>
            <line num="50" count="192" type="stmt"/>
            <line num="51" count="192" type="stmt"/>
            <line complexity="1" visibility="package" signature="addQueen(Side,String) : PositionBuilder" num="54" count="20" type="method"/>
            <line num="55" count="20" type="stmt"/>
            <line num="56" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(String,String) : Position" num="59" count="40" type="method"/>
            <line num="60" count="40" type="stmt"/>
            <line num="61" count="40" type="stmt"/>
            <line complexity="1" visibility="package" signature="setEnPassantFile(Character) : PositionBuilder" num="64" count="11" type="method"/>
            <line num="65" count="11" type="stmt"/>
            <line num="66" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="rules(Rules) : PositionBuilder" num="69" count="7" type="method"/>
            <line num="70" count="7" type="stmt"/>
            <line num="71" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="pliesCount(int) : PositionBuilder" num="74" count="2" type="method"/>
            <line num="76" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="winningSide(Side) : PositionBuilder" num="81" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="draw(Side) : PositionBuilder" num="86" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/engine/PositionGenerator.java" name="PositionGenerator.java">
            <metrics coveredelements="157" coveredconditionals="37" complexity="50" loc="306" coveredmethods="20" methods="20" elements="165" classes="1" ncloc="182" statements="105" conditionals="40" coveredstatements="100"/>
            <class name="PositionGenerator">
               <metrics coveredelements="157" coveredconditionals="37" complexity="50" coveredmethods="20" methods="20" elements="165" statements="105" conditionals="40" coveredstatements="100"/>
            </class>
            <line complexity="1" visibility="package" signature="PositionGenerator(Position)" num="19" count="224076" type="method"/>
            <line num="20" count="224076" type="stmt"/>
            <line complexity="2" visibility="package" signature="generate(Move) : Position" num="28" count="224076" type="method"/>
            <line num="29" count="224076" type="stmt"/>
            <line num="31" count="224075" type="stmt"/>
            <line falsecount="123" truecount="223952" num="31" type="cond"/>
            <line num="32" count="223952" type="stmt"/>
            <line num="35" count="224075" type="stmt"/>
            <line num="37" count="224075" type="stmt"/>
            <line complexity="3" visibility="private" signature="updateMovesCounter(Position,Move) : void" num="46" count="224075" type="method"/>
            <line num="48" count="224075" type="stmt"/>
            <line falsecount="223594" truecount="481" num="48" type="cond"/>
            <line num="49" count="481" type="stmt"/>
            <line num="52" count="223594" type="stmt"/>
            <line num="54" count="223594" type="stmt"/>
            <line falsecount="87951" truecount="135643" num="54" type="cond"/>
            <line num="55" count="135643" type="stmt"/>
            <line complexity="1" visibility="private" signature="needRestartObligatoryDrawCounter(Move) : boolean" num="59" count="223594" type="method"/>
            <line num="60" count="223594" type="stmt"/>
            <line complexity="1" visibility="private" signature="isCapture(Move) : boolean" num="63" count="89223" type="method"/>
            <line num="64" count="89223" type="stmt"/>
            <line complexity="1" visibility="private" signature="didPawnMove(Move) : boolean" num="67" count="223594" type="method"/>
            <line num="68" count="223594" type="stmt"/>
            <line complexity="5" visibility="private" signature="getPosition(Move) : Position" num="71" count="224076" type="method"/>
            <line num="72" count="224076" type="stmt"/>
            <line falsecount="223746" truecount="330" num="72" type="cond"/>
            <line num="73" count="330" type="stmt"/>
            <line num="76" count="223746" type="stmt"/>
            <line falsecount="223623" truecount="123" num="76" type="cond"/>
            <line num="77" count="123" type="stmt"/>
            <line num="80" count="223623" type="stmt"/>
            <line falsecount="223605" truecount="18" num="80" type="cond"/>
            <line num="81" count="18" type="stmt"/>
            <line num="84" count="223605" type="stmt"/>
            <line falsecount="223595" truecount="10" num="84" type="cond"/>
            <line num="85" count="10" type="stmt"/>
            <line num="88" count="223595" type="stmt"/>
            <line complexity="1" visibility="private" signature="getClaimDrawPosition() : Position" num="91" count="10" type="method"/>
            <line num="92" count="10" type="stmt"/>
            <line complexity="7" visibility="private" signature="getPositionAfterStandardMove(Move) : Position" num="95" count="223595" type="method"/>
            <line num="96" count="223595" type="stmt"/>
            <line num="98" count="223594" type="stmt"/>
            <line num="99" count="223594" type="stmt"/>
            <line num="100" count="223594" type="stmt"/>
            <line num="101" count="223594" type="stmt"/>
            <line num="102" count="43524" type="stmt"/>
            <line num="103" count="15414" type="stmt"/>
            <line num="104" count="12140" type="stmt"/>
            <line num="105" count="71078" type="stmt"/>
            <line num="106" count="10285" type="stmt"/>
            <line num="107" count="10285" type="stmt"/>
            <line num="108" count="7860" type="stmt"/>
            <line num="109" count="7860" type="stmt"/>
            <line num="110" count="134371" type="stmt"/>
            <line num="111" count="134371" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getOfferDrawPosition() : Position" num="117" count="123" type="method"/>
            <line num="119" count="123" type="stmt"/>
            <line num="120" count="123" type="stmt"/>
            <line num="121" count="123" type="stmt"/>
            <line num="122" count="123" type="stmt"/>
            <line complexity="1" visibility="private" signature="getAcceptDrawPosition() : Position" num="125" count="18" type="method"/>
            <line num="126" count="18" type="stmt"/>
            <line complexity="5" visibility="private" signature="validateStandardMove(Move) : void" num="129" count="223595" type="method"/>
            <line num="130" count="223595" type="stmt"/>
            <line falsecount="223595" truecount="0" num="130" type="cond"/>
            <line num="131" count="0" type="stmt"/>
            <line num="134" count="223595" type="stmt"/>
            <line falsecount="223594" truecount="1" num="134" type="cond"/>
            <line num="135" count="1" type="stmt"/>
            <line num="138" count="223594" type="stmt"/>
            <line falsecount="223594" truecount="0" num="138" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line num="142" count="223594" type="stmt"/>
            <line falsecount="223594" truecount="0" num="142" type="cond"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="createTerminalPosition(Side,Result) : Position" num="147" count="358" type="method"/>
            <line num="148" count="358" type="stmt"/>
            <line num="149" count="358" type="stmt"/>
            <line num="151" count="358" type="stmt"/>
            <line num="152" count="358" type="stmt"/>
            <line num="153" count="358" type="stmt"/>
            <line complexity="3" visibility="private" signature="processRookMove(String,String) : Position" num="156" count="10285" type="method"/>
            <line num="157" count="10285" type="stmt"/>
            <line num="163" count="10285" type="stmt"/>
            <line falsecount="8155" truecount="2130" num="163" type="cond"/>
            <line num="164" count="2130" type="stmt"/>
            <line num="167" count="10285" type="stmt"/>
            <line falsecount="8110" truecount="2175" num="167" type="cond"/>
            <line num="168" count="2175" type="stmt"/>
            <line num="170" count="10285" type="stmt"/>
            <line complexity="5" visibility="private" signature="processKingMove(String,String) : Position" num="173" count="7860" type="method"/>
            <line num="174" count="7860" type="stmt"/>
            <line num="178" count="7860" type="stmt"/>
            <line num="182" count="7860" type="stmt"/>
            <line falsecount="7846" truecount="14" num="182" type="cond"/>
            <line num="183" count="14" type="stmt"/>
            <line num="185" count="14" type="stmt"/>
            <line num="190" count="7860" type="stmt"/>
            <line num="194" count="7860" type="stmt"/>
            <line falsecount="7850" truecount="10" num="194" type="cond"/>
            <line num="195" count="10" type="stmt"/>
            <line num="196" count="10" type="stmt"/>
            <line num="199" count="7860" type="stmt"/>
            <line num="201" count="7860" type="stmt"/>
            <line falsecount="7836" truecount="24" num="201" type="cond"/>
            <line num="202" count="24" type="stmt"/>
            <line num="205" count="7860" type="stmt"/>
            <line num="206" count="7860" type="stmt"/>
            <line complexity="3" visibility="private" signature="processPawnMove(String,String) : Position" num="209" count="134371" type="method"/>
            <line num="210" count="134371" type="stmt"/>
            <line num="212" count="134371" type="stmt"/>
            <line num="214" count="134371" type="stmt"/>
            <line num="216" count="134371" type="stmt"/>
            <line num="217" count="134371" type="stmt"/>
            <line num="218" count="134371" type="stmt"/>
            <line num="222" count="134371" type="stmt"/>
            <line num="223" count="134371" type="stmt"/>
            <line falsecount="134355" truecount="16" num="223" type="cond"/>
            <line num="224" count="16" type="stmt"/>
            <line num="227" count="134371" type="stmt"/>
            <line falsecount="134267" truecount="104" num="227" type="cond"/>
            <line num="228" count="104" type="stmt"/>
            <line num="229" count="104" type="stmt"/>
            <line num="232" count="134267" type="stmt"/>
            <line num="235" count="134371" type="stmt"/>
            <line complexity="1" visibility="private" signature="processMoveWithoutSideEffects(String,String) : Position" num="248" count="89223" type="method"/>
            <line num="251" count="89223" type="stmt"/>
            <line num="252" count="89223" type="stmt"/>
            <line num="254" count="89223" type="stmt"/>
            <line num="256" count="89223" type="stmt"/>
            <line complexity="1" visibility="private" signature="cloneAndRemove(Position,String) : void" num="265" count="223594" type="method"/>
            <line num="266" count="223594" type="stmt"/>
            <line num="268" count="223594" type="stmt"/>
            <line complexity="4" visibility="private" signature="getEnPassantCapturedPieceSquare(String,String) : String" num="278" count="134371" type="method"/>
            <line num="281" count="134371" type="stmt"/>
            <line num="283" count="134371" type="stmt"/>
            <line falsecount="134355" truecount="16" num="283" type="cond"/>
            <line num="286" count="16" type="stmt"/>
            <line num="288" count="134355" type="stmt"/>
            <line complexity="3" visibility="private" signature="getNewEnPassantFile(String,String) : Character" num="299" count="134371" type="method"/>
            <line num="300" count="134371" type="stmt"/>
            <line num="302" count="134371" type="stmt"/>
            <line falsecount="70446" truecount="63925" num="302" type="cond"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/engine/Result.java" name="Result.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="20" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Result">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/engine/Rules.java" name="Rules.java">
            <metrics coveredelements="10" coveredconditionals="2" complexity="5" loc="41" coveredmethods="4" methods="4" elements="10" classes="1" ncloc="22" statements="4" conditionals="2" coveredstatements="4"/>
            <class name="Rules">
               <metrics coveredelements="10" coveredconditionals="2" complexity="5" coveredmethods="4" methods="4" elements="10" statements="4" conditionals="2" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="private" signature="Rules()" num="23" count="1" type="method"/>
            <line num="24" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="Rules(Integer)" num="27" count="2" type="method"/>
            <line num="28" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMovesTillDraw() : OptionalInt" num="31" count="9203" type="method"/>
            <line num="33" count="9203" type="stmt"/>
            <line falsecount="8803" truecount="400" num="33" type="cond"/>
            <line complexity="1" visibility="public" signature="getMovesTillClaimDraw() : int" num="38" count="9202" type="method"/>
            <line num="39" count="9202" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/engine/Side.java" name="Side.java">
            <metrics coveredelements="4" coveredconditionals="2" complexity="2" loc="16" coveredmethods="1" methods="1" elements="4" classes="1" ncloc="7" statements="1" conditionals="2" coveredstatements="1"/>
            <class name="Side">
               <metrics coveredelements="4" coveredconditionals="2" complexity="2" coveredmethods="1" methods="1" elements="4" statements="1" conditionals="2" coveredstatements="1"/>
            </class>
            <line complexity="2" visibility="public" signature="opposite() : Side" num="13" count="1071431" type="method"/>
            <line num="14" count="1071431" type="stmt"/>
            <line falsecount="520069" truecount="551362" num="14" type="cond"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/engine/VerticalDirection.java" name="VerticalDirection.java">
            <metrics coveredelements="6" coveredconditionals="2" complexity="3" loc="33" coveredmethods="2" methods="2" elements="6" classes="1" ncloc="15" statements="2" conditionals="2" coveredstatements="2"/>
            <class name="VerticalDirection">
               <metrics coveredelements="6" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="6" statements="2" conditionals="2" coveredstatements="2"/>
            </class>
            <line complexity="2" visibility="package" signature="opposite() : VerticalDirection" num="26" count="67245" type="method"/>
            <line num="27" count="67245" type="stmt"/>
            <line falsecount="33499" truecount="33746" num="27" type="cond"/>
            <line complexity="1" visibility="package" signature="all() : Set&lt; VerticalDirection &gt;" num="30" count="5070058" type="method"/>
            <line num="31" count="5070058" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/engine/BishopAllowedMovesTest.java" name="BishopAllowedMovesTest.java">
            <metrics coveredelements="22" coveredconditionals="0" complexity="5" loc="64" coveredmethods="5" methods="5" elements="22" classes="1" ncloc="47" statements="17" conditionals="0" coveredstatements="17"/>
            <class name="BishopAllowedMovesTest">
               <metrics coveredelements="22" complexity="5" methods="5" testruns="5" statements="17" coveredconditionals="0" coveredmethods="5" elements="22" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="17" testpasses="5"/>
            </class>
            <line complexity="1" visibility="public" signature="simpleDiagonal() : void" num="10" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="12" count="1" type="stmt"/>
            <line num="13" count="1" type="stmt"/>
            <line num="15" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="fromB1() : void" num="20" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="22" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="centralPoint() : void" num="30" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="cannotMoveOverIntervening() : void" num="41" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="canCapture() : void" num="53" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/engine/BishopNewPositionTest.java" name="BishopNewPositionTest.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="1" loc="21" coveredmethods="1" methods="1" elements="6" classes="1" ncloc="13" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="BishopNewPositionTest">
               <metrics coveredelements="6" complexity="1" methods="1" testruns="1" statements="5" coveredconditionals="0" coveredmethods="1" elements="6" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="5" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="moveBishop() : void" num="12" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="14" count="1" type="stmt"/>
            <line num="15" count="1" type="stmt"/>
            <line num="16" count="1" type="stmt"/>
            <line num="18" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/engine/CheckTest.java" name="CheckTest.java">
            <metrics coveredelements="56" coveredconditionals="0" complexity="8" loc="124" coveredmethods="8" methods="8" elements="56" classes="1" ncloc="80" statements="48" conditionals="0" coveredstatements="48"/>
            <class name="CheckTest">
               <metrics coveredelements="56" complexity="8" methods="8" testruns="8" statements="48" coveredconditionals="0" coveredmethods="8" elements="56" testfailures="0" testduration="0.011" conditionals="0" coveredstatements="48" testpasses="8"/>
            </class>
            <line complexity="1" visibility="public" signature="cannotExposeKingToCheck() : void" num="17" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="19" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="cannotExposeKingToOpponentKingAttack() : void" num="32" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="cannotExposeKingToCheckTriangulate() : void" num="42" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="promotionCannotExposeKingToCheck() : void" num="55" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="cannotLeaveKingInCheck() : void" num="68" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="canOfferDrawWhenKingInCheck() : void" num="84" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="86" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="canResignWhenKingInCheck() : void" num="97" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="99" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="checkEvenIfCannotMove() : void" num="111" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="113" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/engine/CheckmateTest.java" name="CheckmateTest.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="2" loc="34" coveredmethods="2" methods="2" elements="11" classes="1" ncloc="22" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="CheckmateTest">
               <metrics coveredelements="11" complexity="2" methods="2" testruns="2" statements="9" coveredconditionals="0" coveredmethods="2" elements="11" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="9" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="noMoreMovesAfterCheckmate() : void" num="11" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="13" count="1" type="stmt"/>
            <line num="14" count="1" type="stmt"/>
            <line num="15" count="1" type="stmt"/>
            <line num="16" count="1" type="stmt"/>
            <line num="18" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="checkmateCorrectWinningSide() : void" num="23" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="25" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/engine/DrawBy50MovesTest.java" name="DrawBy50MovesTest.java">
            <metrics coveredelements="24" coveredconditionals="0" complexity="8" loc="76" coveredmethods="8" methods="8" elements="24" classes="1" ncloc="49" statements="16" conditionals="0" coveredstatements="16"/>
            <class name="DrawBy50MovesTest">
               <metrics coveredelements="24" complexity="8" methods="8" testruns="5" statements="16" coveredconditionals="0" coveredmethods="8" elements="24" testfailures="0" testduration="0.09200000000000001" conditionals="0" coveredstatements="16" testpasses="5"/>
            </class>
            <line complexity="1" visibility="public" signature="claimDrawImpossibleFromInitialPosition() : void" num="10" testsuccess="true" count="1" testduration="0.015" type="method"/>
            <line num="12" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="canClaimDrawAfter50() : void" num="18" testsuccess="true" count="1" testduration="0.017" type="method"/>
            <line num="20" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="claimDrawMakesItTerminal() : void" num="30" testsuccess="true" count="1" testduration="0.019" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="claimDrawReason() : void" num="35" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="prepareReadyForClaimPosition() : Position" num="41" count="3" type="method"/>
            <line num="42" count="3" type="stmt"/>
            <line num="43" count="3" type="stmt"/>
            <line num="45" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="get50MovesToDraw() : Seq&lt;Move&gt;" num="48" count="4" type="method"/>
            <line num="51" count="4" type="stmt"/>
            <line num="52" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="cannotClaimDrawBeforeTheLastMove() : void" num="57" testsuccess="true" count="1" testduration="0.034" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="removeLastMove(Seq&lt;Move&gt;) : Seq&lt;Move&gt;" num="67" count="1" type="method"/>
            <line num="68" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/engine/DrawBy75MovesTest.java" name="DrawBy75MovesTest.java">
            <metrics coveredelements="70" coveredconditionals="0" complexity="17" loc="269" coveredmethods="17" methods="17" elements="70" classes="1" ncloc="182" statements="53" conditionals="0" coveredstatements="53"/>
            <class name="DrawBy75MovesTest">
               <metrics coveredelements="70" complexity="17" methods="17" testruns="15" statements="53" coveredconditionals="0" coveredmethods="17" elements="70" testfailures="0" testduration="0.6250000000000001" conditionals="0" coveredstatements="53" testpasses="15"/>
            </class>
            <line complexity="1" visibility="public" signature="rulesBeforeJuly2014() : void" num="25" testsuccess="true" count="1" testduration="0.543" type="method"/>
            <line num="27" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="rulesAfterJuly2014() : void" num="42" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="enPassantResetsCounter() : void" num="59" testsuccess="true" count="1" testduration="0.022" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertNonTerminal() : Consumer&lt;Position&gt;" num="78" count="2" type="method"/>
            <line num="79" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="newRulesInjection() : void" num="82" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="positionStateCorrect() : void" num="94" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="offerDrawIsNotCounted() : void" num="105" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="resignIsStillResign() : void" num="116" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="pawnMovementResetsCounter() : void" num="128" testsuccess="true" count="1" testduration="0.034" type="method"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="counterStillWorksAfterPawnMove() : void" num="140" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="countOfMovesRespected() : void" num="152" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="countOfMovesRespectedFully() : void" num="163" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="countOfMovesForBlackRespected() : void" num="176" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="178" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="captureResetsCount() : void" num="192" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="194" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="checkmateAtLastMomentIsCheckmate() : void" num="207" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="209" count="1" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="captureWithPromotionResetsCount() : void" num="221" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="223" count="1" type="stmt"/>
            <line num="232" count="1" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="getRules(int) : Rules" num="239" count="12" type="method"/>
            <line num="240" count="12" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/engine/DrawByAgreementTest.java" name="DrawByAgreementTest.java">
            <metrics coveredelements="41" coveredconditionals="0" complexity="11" loc="123" coveredmethods="11" methods="11" elements="41" classes="1" ncloc="76" statements="30" conditionals="0" coveredstatements="30"/>
            <class name="DrawByAgreementTest">
               <metrics coveredelements="41" complexity="11" methods="11" testruns="11" statements="30" coveredconditionals="0" coveredmethods="11" elements="41" testfailures="0" testduration="0.013000000000000001" conditionals="0" coveredstatements="30" testpasses="11"/>
            </class>
            <line complexity="1" visibility="public" signature="canAcceptAfterDrawOffer() : void" num="37" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="cannotAcceptDrawWithoutOffer() : void" num="45" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="cannotAcceptDrawIfMoved() : void" num="51" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="cannotMoveAfterAcceptDraw() : void" num="58" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="noSideToMoveInTerminal() : void" num="67" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="noWinningSideInDraw() : void" num="76" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="canMoveAfterOfferDraw() : void" num="85" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="87" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="correctRightToMove() : void" num="94" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="96" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="notTerminalPosition() : void" num="103" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="105" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="allowedForNonTerminal() : void" num="111" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="prohibitedForTerminal() : void" num="117" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/engine/KingAllowedMovesCannotMoveOnAttackedSquareTest.java" name="KingAllowedMovesCannotMoveOnAttackedSquareTest.java">
            <metrics coveredelements="115" coveredconditionals="0" complexity="21" loc="273" coveredmethods="21" methods="21" elements="115" classes="1" ncloc="204" statements="94" conditionals="0" coveredstatements="94"/>
            <class name="KingAllowedMovesCannotMoveOnAttackedSquareTest">
               <metrics coveredelements="115" complexity="21" methods="21" testruns="21" statements="94" coveredconditionals="0" coveredmethods="21" elements="115" testfailures="0" testduration="0.011000000000000003" conditionals="0" coveredstatements="94" testpasses="21"/>
            </class>
            <line complexity="1" visibility="public" signature="withPawnNotPromotion() : void" num="12" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="14" count="1" type="stmt"/>
            <line num="15" count="1" type="stmt"/>
            <line num="16" count="1" type="stmt"/>
            <line num="18" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="withPawnPromotion() : void" num="24" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="knightAttacked() : void" num="35" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ourSideKnightIsNotAttacker() : void" num="47" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="knightAndPawnAttack() : void" num="59" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="knightAndPawnAttackNoWay() : void" num="72" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="cannotCaptureIfControlledByPawn() : void" num="84" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="canCaptureAPawnThatControlsOtherPiece() : void" num="97" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="bishopProtected() : void" num="110" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="bishopProtectedCannotCapture() : void" num="121" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="rookControl() : void" num="133" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="rookProtectsOwnPiece() : void" num="144" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="integrationOfRookAndPawn() : void" num="160" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="bishopAttackFromCheckToCheck() : void" num="173" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="bishopAttackFromCheckToCheckCanCapture() : void" num="185" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="queenAttacked() : void" num="197" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="199" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="queenAttackedVertically() : void" num="209" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="211" count="1" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line num="214" count="1" type="stmt"/>
            <line num="216" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="queenProtectsFromCapture() : void" num="221" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="223" count="1" type="stmt"/>
            <line num="224" count="1" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="queenProtectsFromCaptureNoWayForKing() : void" num="234" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="236" count="1" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line num="240" count="1" type="stmt"/>
            <line num="242" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ownQueenIsNotAProblem() : void" num="247" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="249" count="1" type="stmt"/>
            <line num="250" count="1" type="stmt"/>
            <line num="252" count="1" type="stmt"/>
            <line num="253" count="1" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="kingCannotMeetAKing() : void" num="261" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="263" count="1" type="stmt"/>
            <line num="264" count="1" type="stmt"/>
            <line num="266" count="1" type="stmt"/>
            <line num="268" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/engine/KingAllowedMovesCastlingTest.java" name="KingAllowedMovesCastlingTest.java">
            <metrics coveredelements="143" coveredconditionals="0" complexity="19" loc="344" coveredmethods="19" methods="19" elements="143" classes="1" ncloc="246" statements="124" conditionals="0" coveredstatements="124"/>
            <class name="KingAllowedMovesCastlingTest">
               <metrics coveredelements="143" complexity="19" methods="19" testruns="19" statements="124" coveredconditionals="0" coveredmethods="19" elements="143" testfailures="0" testduration="0.016" conditionals="0" coveredstatements="124" testpasses="19"/>
            </class>
            <line complexity="1" visibility="public" signature="castlingIsAllowed() : void" num="10" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="12" count="1" type="stmt"/>
            <line num="13" count="1" type="stmt"/>
            <line num="15" count="1" type="stmt"/>
            <line num="17" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="castlingIsAllowedBlack() : void" num="21" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="23" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="castlingQueenSide() : void" num="32" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="rightToCastlingIsLostIfKingMoved() : void" num="43" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="rightToCastlingNoInfluenceToOppositeSide() : void" num="60" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="rightToCastlingIsLostPermanently() : void" num="75" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="castlingIsImpossibleAfterCastling() : void" num="96" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="castlingRightLostIfRookMoved() : void" num="123" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="125" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="castlingRightLostPermanentlyIfRookMoved() : void" num="140" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="142" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="castlingRightNotLostWithAnotherRook() : void" num="159" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="161" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="bothRooksMovedCannotCastle() : void" num="178" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="180" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="preventTemporaryCastlingIfAttacked() : void" num="204" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="206" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line num="213" count="1" type="stmt"/>
            <line num="214" count="1" type="stmt"/>
            <line num="216" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="checkIsJustTemporaryPrevention() : void" num="223" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="225" count="1" type="stmt"/>
            <line num="228" count="1" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line num="231" count="1" type="stmt"/>
            <line num="232" count="1" type="stmt"/>
            <line num="233" count="1" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="preventCastlingIfCrossSquareAttacked() : void" num="245" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="247" count="1" type="stmt"/>
            <line num="250" count="1" type="stmt"/>
            <line num="251" count="1" type="stmt"/>
            <line num="253" count="1" type="stmt"/>
            <line num="254" count="1" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line num="258" count="1" type="stmt"/>
            <line num="261" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="preventCastlingIfCrossSquareAttackedQueenSide() : void" num="265" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="267" count="1" type="stmt"/>
            <line num="270" count="1" type="stmt"/>
            <line num="271" count="1" type="stmt"/>
            <line num="273" count="1" type="stmt"/>
            <line num="274" count="1" type="stmt"/>
            <line num="275" count="1" type="stmt"/>
            <line num="278" count="1" type="stmt"/>
            <line num="282" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="cannotCastleIfExposeKingToCheck() : void" num="286" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="288" count="1" type="stmt"/>
            <line num="289" count="1" type="stmt"/>
            <line num="290" count="1" type="stmt"/>
            <line num="292" count="1" type="stmt"/>
            <line num="295" count="1" type="stmt"/>
            <line num="297" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ourPieceInMiddlePreventsCastling() : void" num="301" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="303" count="1" type="stmt"/>
            <line num="304" count="1" type="stmt"/>
            <line num="305" count="1" type="stmt"/>
            <line num="306" count="1" type="stmt"/>
            <line num="309" count="1" type="stmt"/>
            <line num="311" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="opponentPieceInMiddlePreventsCastling() : void" num="315" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="317" count="1" type="stmt"/>
            <line num="318" count="1" type="stmt"/>
            <line num="319" count="1" type="stmt"/>
            <line num="321" count="1" type="stmt"/>
            <line num="324" count="1" type="stmt"/>
            <line num="326" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="pieceAtCastlingTargetPrevents() : void" num="330" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="332" count="1" type="stmt"/>
            <line num="333" count="1" type="stmt"/>
            <line num="334" count="1" type="stmt"/>
            <line num="336" count="1" type="stmt"/>
            <line num="339" count="1" type="stmt"/>
            <line num="341" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/engine/KingAllowedMovesTest.java" name="KingAllowedMovesTest.java">
            <metrics coveredelements="28" coveredconditionals="0" complexity="6" loc="89" coveredmethods="6" methods="6" elements="28" classes="1" ncloc="70" statements="22" conditionals="0" coveredstatements="22"/>
            <class name="KingAllowedMovesTest">
               <metrics coveredelements="28" complexity="6" methods="6" testruns="6" statements="22" coveredconditionals="0" coveredmethods="6" elements="28" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="22" testpasses="6"/>
            </class>
            <line complexity="1" visibility="public" signature="a1() : void" num="10" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="12" count="1" type="stmt"/>
            <line num="13" count="1" type="stmt"/>
            <line num="15" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="h8() : void" num="22" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="a8() : void" num="34" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="e4() : void" num="46" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="cannotMoveOnBlockedSquare() : void" num="60" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="canCapture() : void" num="75" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/engine/KingNewPositionTest.java" name="KingNewPositionTest.java">
            <metrics coveredelements="57" coveredconditionals="0" complexity="7" loc="115" coveredmethods="7" methods="7" elements="57" classes="1" ncloc="75" statements="50" conditionals="0" coveredstatements="50"/>
            <class name="KingNewPositionTest">
               <metrics coveredelements="57" complexity="7" methods="7" testruns="7" statements="50" coveredconditionals="0" coveredmethods="7" elements="57" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="50" testpasses="7"/>
            </class>
            <line complexity="1" visibility="public" signature="kingCanMove() : void" num="10" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="12" count="1" type="stmt"/>
            <line num="14" count="1" type="stmt"/>
            <line num="16" count="1" type="stmt"/>
            <line num="17" count="1" type="stmt"/>
            <line num="18" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="capture() : void" num="21" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="23" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="whiteShortCastling() : void" num="33" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackCastlingKingSide() : void" num="50" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackCastlingQueenSide() : void" num="67" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="whitef1g1NonCastling() : void" num="84" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="86" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="whiteLongCastling() : void" num="99" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="101" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/engine/KnightAllowedMovesTest.java" name="KnightAllowedMovesTest.java">
            <metrics coveredelements="36" coveredconditionals="0" complexity="8" loc="88" coveredmethods="8" methods="8" elements="36" classes="1" ncloc="63" statements="28" conditionals="0" coveredstatements="28"/>
            <class name="KnightAllowedMovesTest">
               <metrics coveredelements="36" complexity="8" methods="8" testruns="8" statements="28" coveredconditionals="0" coveredmethods="8" elements="36" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="28" testpasses="8"/>
            </class>
            <line complexity="1" visibility="public" signature="knightMovesSquare() : void" num="10" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="12" count="1" type="stmt"/>
            <line num="13" count="1" type="stmt"/>
            <line num="15" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="cannotMoveIfOccupiedByMyColour() : void" num="19" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="21" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="cannotMoveIfOccupiedByMyColourTwo() : void" num="30" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="canCapture() : void" num="41" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="knightMovesAnotherSquare() : void" num="52" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="anotherRank() : void" num="61" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="threeDestinations() : void" num="70" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="eightDestinations() : void" num="79" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/engine/KnightNewPositionTest.java" name="KnightNewPositionTest.java">
            <metrics coveredelements="29" coveredconditionals="0" complexity="5" loc="77" coveredmethods="5" methods="5" elements="29" classes="1" ncloc="47" statements="24" conditionals="0" coveredstatements="24"/>
            <class name="KnightNewPositionTest">
               <metrics coveredelements="29" complexity="5" methods="5" testruns="5" statements="24" coveredconditionals="0" coveredmethods="5" elements="29" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="24" testpasses="5"/>
            </class>
            <line complexity="1" visibility="public" signature="simpleMove() : void" num="13" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="15" count="1" type="stmt"/>
            <line num="16" count="1" type="stmt"/>
            <line num="18" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackMove() : void" num="24" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="26" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="otherPiecesRemain() : void" num="36" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="movingKnightRemoved() : void" num="50" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="enPassantPossibilityClearance() : void" num="61" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/engine/MoveTest.java" name="MoveTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="5" loc="34" coveredmethods="4" methods="5" elements="10" classes="1" ncloc="25" statements="5" conditionals="0" coveredstatements="4"/>
            <class name="MoveTest">
               <metrics coveredelements="8" complexity="5" methods="5" testruns="5" statements="5" coveredconditionals="0" coveredmethods="4" elements="10" testfailures="1" testduration="0.007" conditionals="0" coveredstatements="4" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="moveShouldBeImmutable() : void" num="9" testsuccess="false" count="0" testduration="0.007" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="claimDrawToString() : void" num="15" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="17" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="resignToString() : void" num="20" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="22" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="offerDrawToString() : void" num="25" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="27" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="resignIsNotDraw() : void" num="30" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/engine/PawnAllowedMovesEnPassantTest.java" name="PawnAllowedMovesEnPassantTest.java">
            <metrics coveredelements="55" coveredconditionals="0" complexity="13" loc="135" coveredmethods="13" methods="13" elements="55" classes="1" ncloc="88" statements="42" conditionals="0" coveredstatements="42"/>
            <class name="PawnAllowedMovesEnPassantTest">
               <metrics coveredelements="55" complexity="13" methods="13" testruns="12" statements="42" coveredconditionals="0" coveredmethods="13" elements="55" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="42" testpasses="12"/>
            </class>
            <line complexity="1" visibility="public" signature="noEnPassantInSimilarPosition() : void" num="18" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="20" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="noEnPassantInSimilarPositionBlack() : void" num="27" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="noEnPassantInSymmetricCase() : void" num="36" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="twoSidedEnPassant() : void" num="45" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="noEnPassantSymmetricWhite() : void" num="57" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="enPassantInActionLeftSideCaptureBlack() : void" num="66" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="enPassantInActionRightSideCaptureBlack() : void" num="74" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="enPassantInActionRightSideCapture() : void" num="82" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="enPassantInActionLeftSideCapture() : void" num="92" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="94" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="enPassantInActionRightSideCaptureAnother() : void" num="101" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="103" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="enPassantInActionButNotWorksOnDifferentRank() : void" num="110" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="enPassantCannotPutKingInCheck() : void" num="118" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="createPositionWithoutEnPassantRight() : PositionBuilder" num="131" count="2" type="method"/>
            <line num="132" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/engine/PawnAllowedMovesMultiplePositionTest.java" name="PawnAllowedMovesMultiplePositionTest.java">
            <metrics coveredelements="17" coveredconditionals="6" complexity="5" loc="46" coveredmethods="2" methods="2" elements="17" classes="1" ncloc="23" statements="9" conditionals="6" coveredstatements="9"/>
            <class name="PawnAllowedMovesMultiplePositionTest">
               <metrics coveredelements="17" complexity="5" methods="2" testruns="2" statements="9" coveredconditionals="6" coveredmethods="2" elements="17" testfailures="0" testduration="0.001" conditionals="6" coveredstatements="9" testpasses="2"/>
            </class>
            <line complexity="2" visibility="public" signature="blackPawn7rank() : void" num="19" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="22" count="1" type="stmt"/>
            <line falsecount="1" truecount="8" num="22" type="cond"/>
            <line num="23" count="8" type="stmt"/>
            <line num="24" count="8" type="stmt"/>
            <line complexity="3" visibility="public" signature="blackPawnNotInitialPosition() : void" num="31" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line falsecount="1" truecount="8" num="33" type="cond"/>
            <line num="37" count="8" type="stmt"/>
            <line falsecount="8" truecount="32" num="37" type="cond"/>
            <line num="38" count="32" type="stmt"/>
            <line num="39" count="32" type="stmt"/>
            <line num="40" count="32" type="stmt"/>
            <line num="42" count="32" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/engine/PawnAllowedMovesTest.java" name="PawnAllowedMovesTest.java">
            <metrics coveredelements="155" coveredconditionals="0" complexity="43" loc="369" coveredmethods="43" methods="43" elements="155" classes="1" ncloc="253" statements="112" conditionals="0" coveredstatements="112"/>
            <class name="PawnAllowedMovesTest">
               <metrics coveredelements="155" complexity="43" methods="43" testruns="42" statements="112" coveredconditionals="0" coveredmethods="43" elements="155" testfailures="0" testduration="0.02200000000000001" conditionals="0" coveredstatements="112" testpasses="42"/>
            </class>
            <line complexity="1" visibility="public" signature="prepare() : void" num="16" count="42" type="method"/>
            <line num="18" count="42" type="stmt"/>
            <line complexity="1" visibility="public" signature="singlePawnInitialPosition() : void" num="24" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="26" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="singlePawnAnother() : void" num="32" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="singleMove() : void" num="40" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="singleCapturePossibleFromWhite() : void" num="45" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="singleCaptureImPossibleFromWhiteColorsCoincide() : void" num="52" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="captureFromNotInitialPositionRightSide() : void" num="61" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="rightMostFileCapturingAtRightSideImpossible() : void" num="71" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="leftCapture() : void" num="78" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="pawnCanCaptureKnight() : void" num="88" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="leftCaptureImpossibleWhitePiece() : void" num="99" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="leftMostCaptureAbsent() : void" num="109" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="111" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="twoSidedCapture() : void" num="116" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="twoSidedCaptureFromInitialPosition() : void" num="129" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackRightCapture() : void" num="141" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackRightCaptureImpossibleBlackPieceThere() : void" num="151" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackLeftCapture() : void" num="161" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackLeftCaptureImpossibleFilledByBlack() : void" num="171" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackLeftMostRank() : void" num="181" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackRightMostRank() : void" num="191" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="193" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackInitialPosition() : void" num="201" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="203" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="singleMoveSecondTry() : void" num="216" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="218" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="promotion() : void" num="224" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="226" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="promotionAnotherFile() : void" num="230" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="232" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackPromotion() : void" num="235" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="237" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackPromotionAnotherFile() : void" num="240" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="242" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackPromotionLeftCapture() : void" num="245" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="247" count="1" type="stmt"/>
            <line num="248" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackPromotionRightCapture() : void" num="251" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="253" count="1" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="promotionWithRightSideCapture() : void" num="258" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="260" count="1" type="stmt"/>
            <line num="261" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="promotionWithLeftSideCapture() : void" num="264" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="266" count="1" type="stmt"/>
            <line num="268" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="promotionWithBothSideCapture() : void" num="273" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="275" count="1" type="stmt"/>
            <line num="276" count="1" type="stmt"/>
            <line num="278" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="promotionCanCaptureOppositeQueen() : void" num="287" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="289" count="1" type="stmt"/>
            <line num="291" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="promotionCannotBeDoneWhenBlockedByOurPiece() : void" num="296" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="298" count="1" type="stmt"/>
            <line num="300" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="pawnCapturesQueen() : void" num="303" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="305" count="1" type="stmt"/>
            <line num="306" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ownPawnBlocksMovingForward() : void" num="310" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="312" count="1" type="stmt"/>
            <line num="313" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ownQueenBlocksMovingForward() : void" num="316" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="318" count="1" type="stmt"/>
            <line num="319" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="opponentPawnBlocksMoving() : void" num="322" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="324" count="1" type="stmt"/>
            <line num="325" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleMoveImpossibleSecondBusy() : void" num="328" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="330" count="1" type="stmt"/>
            <line num="331" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleMoveImpossibleFirstBusy() : void" num="334" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="336" count="1" type="stmt"/>
            <line num="337" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleMoveBlackImpossibleFirstBusy() : void" num="340" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="342" count="1" type="stmt"/>
            <line num="343" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="promotionCannotCaptureOurPieces() : void" num="349" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="351" count="1" type="stmt"/>
            <line num="352" count="1" type="stmt"/>
            <line num="354" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="promotionCannotGoIfBlockedByOurSide() : void" num="357" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="359" count="1" type="stmt"/>
            <line num="360" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="promotionCannotGoIfBlockedByOpponent() : void" num="363" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="365" count="1" type="stmt"/>
            <line num="366" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/engine/PawnEnPassantNewPositionTest.java" name="PawnEnPassantNewPositionTest.java">
            <metrics coveredelements="58" coveredconditionals="0" complexity="6" loc="110" coveredmethods="6" methods="6" elements="58" classes="1" ncloc="74" statements="52" conditionals="0" coveredstatements="52"/>
            <class name="PawnEnPassantNewPositionTest">
               <metrics coveredelements="58" complexity="6" methods="6" testruns="6" statements="52" coveredconditionals="0" coveredmethods="6" elements="58" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="52" testpasses="6"/>
            </class>
            <line complexity="1" visibility="public" signature="enPassantLeft() : void" num="12" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="14" count="1" type="stmt"/>
            <line num="15" count="1" type="stmt"/>
            <line num="16" count="1" type="stmt"/>
            <line num="18" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="enPassantLeftTriangle() : void" num="29" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="right() : void" num="48" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="enPassantBlackLeft() : void" num="66" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="enPassantBlackTriangulate() : void" num="80" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="enPassantRightBlack() : void" num="94" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/engine/PawnNewPositionsTest.java" name="PawnNewPositionsTest.java">
            <metrics coveredelements="81" coveredconditionals="0" complexity="17" loc="182" coveredmethods="17" methods="17" elements="81" classes="1" ncloc="124" statements="64" conditionals="0" coveredstatements="64"/>
            <class name="PawnNewPositionsTest">
               <metrics coveredelements="81" complexity="17" methods="17" testruns="14" statements="64" coveredconditionals="0" coveredmethods="17" elements="81" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="64" testpasses="14"/>
            </class>
            <line complexity="1" visibility="public" signature="prepare() : void" num="20" count="14" type="method"/>
            <line num="22" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="basicContractRequirements() : void" num="25" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="singleMove() : void" num="36" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="singleMoveFromInitialPosition() : void" num="46" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="singleBlackMove() : void" num="55" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleMove() : void" num="64" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleBlackMove() : void" num="73" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="preserveOtherWhitePieces() : void" num="78" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="preserveOtherWhitePiecesTriangulate() : void" num="90" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="preserveOtherBlackPieces() : void" num="102" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="preserveCoupleOfPieces() : void" num="115" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="captureLeft() : void" num="133" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="135" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="captureLeftTriangle() : void" num="138" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="140" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="captureRight() : void" num="143" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="145" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="captureLeftBlack() : void" num="148" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="150" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="testCapture(Side,Side,String,String) : void" num="153" count="4" type="method"/>
            <line num="154" count="4" type="stmt"/>
            <line num="155" count="4" type="stmt"/>
            <line num="157" count="4" type="stmt"/>
            <line num="158" count="4" type="stmt"/>
            <line num="159" count="4" type="stmt"/>
            <line num="160" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertPawnMovement(Side,String,String) : Position" num="173" count="9" type="method"/>
            <line num="174" count="9" type="stmt"/>
            <line num="175" count="9" type="stmt"/>
            <line num="177" count="9" type="stmt"/>
            <line num="178" count="9" type="stmt"/>
            <line num="179" count="9" type="stmt"/>
            <line num="180" count="9" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/engine/PawnPromoteNewPositionTest.java" name="PawnPromoteNewPositionTest.java">
            <metrics coveredelements="63" coveredconditionals="0" complexity="9" loc="120" coveredmethods="9" methods="9" elements="63" classes="1" ncloc="88" statements="54" conditionals="0" coveredstatements="54"/>
            <class name="PawnPromoteNewPositionTest">
               <metrics coveredelements="63" complexity="9" methods="9" testruns="9" statements="54" coveredconditionals="0" coveredmethods="9" elements="63" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="54" testpasses="9"/>
            </class>
            <line complexity="1" visibility="public" signature="toQueen() : void" num="14" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="16" count="1" type="stmt"/>
            <line num="17" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="toQueenAnotherFile() : void" num="24" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="toQueenBlack() : void" num="35" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="captureLeftSide() : void" num="46" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="promotionLeavesRestOfPositionUntouched() : void" num="64" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="promoteToKnight() : void" num="79" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="promoteToRook() : void" num="90" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="promoteToBishop() : void" num="100" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="promoteWithCaptureToRook() : void" num="110" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/engine/PawnUtils.java" name="PawnUtils.java">
            <metrics coveredelements="3" coveredconditionals="0" complexity="3" loc="28" coveredmethods="1" methods="3" elements="7" classes="1" ncloc="12" statements="4" conditionals="0" coveredstatements="2"/>
            <class name="PawnUtils">
               <metrics coveredelements="3" coveredconditionals="0" complexity="3" coveredmethods="1" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="private" signature="PawnUtils()" num="9" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="testPawn(Position,String,Side,String) : void" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="testPawn(PositionBuilder,String,Side,String) : void" num="24" count="95" type="method"/>
            <line num="25" count="95" type="stmt"/>
            <line num="26" count="95" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/engine/PieceTest.java" name="PieceTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="15" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="8" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="PieceTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.043" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="pieceIsImmutable() : void" num="11" testsuccess="false" count="0" testduration="0.043" type="method"/>
            <line num="13" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/engine/PieceTypeTest.java" name="PieceTypeTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="15" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="8" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="PieceTypeTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.211" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="immutable() : void" num="11" testsuccess="false" count="0" testduration="0.211" type="method"/>
            <line num="13" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/engine/PositionAllowedMovesDuringOpponentMoveTest.java" name="PositionAllowedMovesDuringOpponentMoveTest.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="2" loc="28" coveredmethods="2" methods="2" elements="7" classes="1" ncloc="21" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="PositionAllowedMovesDuringOpponentMoveTest">
               <metrics coveredelements="7" complexity="2" methods="2" testruns="2" statements="5" coveredconditionals="0" coveredmethods="2" elements="7" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="5" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="canResignWhenNotOurMove() : void" num="14" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="16" count="1" type="stmt"/>
            <line num="18" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="canAcceptDrawAfterOfferDraw() : void" num="22" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="24" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/engine/PositionAllowedMovesTest.java" name="PositionAllowedMovesTest.java">
            <metrics coveredelements="35" coveredconditionals="0" complexity="6" loc="82" coveredmethods="6" methods="6" elements="35" classes="1" ncloc="54" statements="29" conditionals="0" coveredstatements="29"/>
            <class name="PositionAllowedMovesTest">
               <metrics coveredelements="35" complexity="6" methods="6" testruns="6" statements="29" coveredconditionals="0" coveredmethods="6" elements="35" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="29" testpasses="6"/>
            </class>
            <line complexity="1" visibility="public" signature="cannotCaptureKing() : void" num="21" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="23" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="simplePositionSingleMove() : void" num="30" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="simplePositionTriangulateByColor() : void" num="43" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="simplePositionNoMoves() : void" num="56" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="cannotMoveFromTerminalPosition() : void" num="71" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="initialPositionNotTerminal() : void" num="77" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="79" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/engine/PositionAsserts.java" name="PositionAsserts.java">
            <metrics coveredelements="33" coveredconditionals="1" complexity="15" loc="102" coveredmethods="13" methods="14" elements="35" classes="1" ncloc="66" statements="19" conditionals="2" coveredstatements="19"/>
            <class name="PositionAsserts">
               <metrics coveredelements="33" coveredconditionals="1" complexity="15" coveredmethods="13" methods="14" elements="35" statements="19" conditionals="2" coveredstatements="19"/>
            </class>
            <line complexity="1" visibility="private" signature="PositionAsserts()" num="15" count="0" type="method"/>
            <line complexity="2" visibility="package" signature="assertHasPiece(Position,PieceType,Side,String) : void" num="17" count="33" type="method"/>
            <line num="18" count="33" type="stmt"/>
            <line falsecount="33" truecount="0" num="20" type="cond"/>
            <line complexity="1" visibility="package" signature="assertEmptySquare(Position,String) : void" num="24" count="49" type="method"/>
            <line num="25" count="49" type="stmt"/>
            <line complexity="1" visibility="package" signature="assertHasPawn(Position,String,Side) : void" num="28" count="21" type="method"/>
            <line num="29" count="21" type="stmt"/>
            <line complexity="1" visibility="package" signature="assertHasNoPawn(Position,String,Side) : void" num="33" count="2" type="method"/>
            <line num="34" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="assertAllowedMoves(Position,String,String) : void" num="46" count="146" type="method"/>
            <line num="47" count="146" type="stmt"/>
            <line num="48" count="146" type="stmt"/>
            <line complexity="1" visibility="package" signature="assertAllowedMoves(PositionBuilder,String,String) : void" num="51" count="46" type="method"/>
            <line num="52" count="46" type="stmt"/>
            <line num="53" count="46" type="stmt"/>
            <line complexity="1" visibility="package" signature="assertAllowedMovesInclude(PositionBuilder,String,String) : void" num="56" count="5" type="method"/>
            <line num="57" count="5" type="stmt"/>
            <line num="58" count="5" type="stmt"/>
            <line complexity="1" visibility="package" signature="assertNoAllowedMoves(Position,String) : void" num="67" count="2" type="method"/>
            <line num="68" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="assertAllowedMovesInclude(Position,String,String) : void" num="71" count="8" type="method"/>
            <line num="72" count="8" type="stmt"/>
            <line num="73" count="8" type="stmt"/>
            <line complexity="1" visibility="package" signature="assertAllowedMovesInclude(Position,Move) : void" num="78" count="4" type="method"/>
            <line num="80" count="4" type="stmt"/>
            <line complexity="1" visibility="package" signature="assertAllowedMovesOmit(PositionBuilder,String,String) : void" num="85" count="8" type="method"/>
            <line num="86" count="8" type="stmt"/>
            <line num="87" count="8" type="stmt"/>
            <line complexity="1" visibility="package" signature="assertAllowedMovesOmit(Position,String,String) : void" num="90" count="16" type="method"/>
            <line num="91" count="16" type="stmt"/>
            <line num="92" count="16" type="stmt"/>
            <line complexity="1" visibility="package" signature="assertAllowedMovesOmit(Position,Move) : void" num="97" count="5" type="method"/>
            <line num="98" count="5" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/engine/PositionEnPassantPossibilityCreationTest.java" name="PositionEnPassantPossibilityCreationTest.java">
            <metrics coveredelements="45" coveredconditionals="0" complexity="11" loc="106" coveredmethods="11" methods="11" elements="45" classes="1" ncloc="74" statements="34" conditionals="0" coveredstatements="34"/>
            <class name="PositionEnPassantPossibilityCreationTest">
               <metrics coveredelements="45" complexity="11" methods="11" testruns="10" statements="34" coveredconditionals="0" coveredmethods="11" elements="45" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="34" testpasses="10"/>
            </class>
            <line complexity="1" visibility="public" signature="prepare() : void" num="17" count="10" type="method"/>
            <line num="19" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleMoveCreatesPossibility() : void" num="22" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="24" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleMoveTriangulate() : void" num="31" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="singleMoveFromInitialPositionIgnored() : void" num="39" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="singleMoveFromNotInitialPositionIgnored() : void" num="47" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackPossible() : void" num="55" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackPossibleTriangulate() : void" num="63" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackSingleMoveFromNotInitial() : void" num="71" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackInitialSingleMove() : void" num="79" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="81" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="flagIsNotPreservedNextMove() : void" num="87" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="captureIgnored() : void" num="98" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/engine/PositionHasPawnTest.java" name="PositionHasPawnTest.java">
            <metrics coveredelements="53" coveredconditionals="0" complexity="12" loc="111" coveredmethods="12" methods="12" elements="53" classes="1" ncloc="85" statements="41" conditionals="0" coveredstatements="41"/>
            <class name="PositionHasPawnTest">
               <metrics coveredelements="53" complexity="12" methods="12" testruns="11" statements="41" coveredconditionals="0" coveredmethods="12" elements="53" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="41" testpasses="11"/>
            </class>
            <line complexity="1" visibility="public" signature="prepare() : void" num="17" count="11" type="method"/>
            <line num="20" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="noPawn() : void" num="23" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="presentPawn() : void" num="30" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="absentPawnOfAnotherColor() : void" num="38" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="presentPawnInitial() : void" num="47" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="presentBlackPawn() : void" num="55" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="addedQueenNoHasPawn() : void" num="63" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="addedQueenFound() : void" num="71" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="absentQueenNotFound() : void" num="79" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="queenOfOppositeSideNotFound() : void" num="86" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="differentSquareOfQueenNotFound() : void" num="94" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="cannotAddPawnToWrongSquare() : void" num="103" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="105" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/engine/PositionImmutabilityTest.java" name="PositionImmutabilityTest.java">
            <metrics coveredelements="24" coveredconditionals="0" complexity="3" loc="67" coveredmethods="3" methods="3" elements="24" classes="1" ncloc="44" statements="21" conditionals="0" coveredstatements="21"/>
            <class name="PositionImmutabilityTest">
               <metrics coveredelements="24" complexity="3" methods="3" testruns="3" statements="21" coveredconditionals="0" coveredmethods="3" elements="24" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="21" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="positionAfterMoveNotModified() : void" num="13" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="15" count="1" type="stmt"/>
            <line num="16" count="1" type="stmt"/>
            <line num="17" count="1" type="stmt"/>
            <line num="18" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="positionEnPassantStatusClear() : void" num="36" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="positionEnPassantStatusSet() : void" num="53" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/engine/PositionInitialTest.java" name="PositionInitialTest.java">
            <metrics coveredelements="28" coveredconditionals="0" complexity="7" loc="68" coveredmethods="7" methods="7" elements="28" classes="1" ncloc="47" statements="21" conditionals="0" coveredstatements="21"/>
            <class name="PositionInitialTest">
               <metrics coveredelements="28" complexity="7" methods="7" testruns="7" statements="21" coveredconditionals="0" coveredmethods="7" elements="28" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="21" testpasses="7"/>
            </class>
            <line complexity="1" visibility="public" signature="getInitialPositionWhitePawn() : void" num="12" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="14" count="1" type="stmt"/>
            <line num="16" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInitialPositionBlackPawn() : void" num="19" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="21" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="knights() : void" num="26" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="28" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="kings() : void" num="37" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="queens() : void" num="45" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="rooks() : void" num="53" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="bishops() : void" num="61" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/engine/PositionMover.java" name="PositionMover.java">
            <metrics coveredelements="16" coveredconditionals="2" complexity="5" loc="48" coveredmethods="4" methods="4" elements="16" classes="1" ncloc="29" statements="10" conditionals="2" coveredstatements="10"/>
            <class name="PositionMover">
               <metrics coveredelements="16" coveredconditionals="2" complexity="5" coveredmethods="4" methods="4" elements="16" statements="10" conditionals="2" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="package" signature="PositionMover(Position,Stream&lt;Move&gt;)" num="20" count="7" type="method"/>
            <line num="23" count="7" type="stmt"/>
            <line num="24" count="7" type="stmt"/>
            <line complexity="1" visibility="package" signature="afterMove(Consumer&lt;Position&gt;) : PositionMover" num="27" count="2" type="method"/>
            <line num="28" count="2" type="stmt"/>
            <line num="29" count="2" type="stmt"/>
            <line complexity="2" visibility="package" signature="run() : Position" num="32" count="7" type="method"/>
            <line num="33" count="7" type="stmt"/>
            <line num="34" count="954" type="stmt"/>
            <line num="36" count="954" type="stmt"/>
            <line falsecount="549" truecount="405" num="36" type="cond"/>
            <line num="37" count="405" type="stmt"/>
            <line num="41" count="7" type="stmt"/>
            <line complexity="1" visibility="private" signature="doMove(Move) : void" num="44" count="954" type="method"/>
            <line num="45" count="954" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/engine/PositionNumberTest.java" name="PositionNumberTest.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="5" loc="48" coveredmethods="5" methods="5" elements="13" classes="1" ncloc="34" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="PositionNumberTest">
               <metrics coveredelements="13" complexity="5" methods="5" testruns="5" statements="8" coveredconditionals="0" coveredmethods="5" elements="13" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="8" testpasses="5"/>
            </class>
            <line complexity="1" visibility="public" signature="initialPosition() : void" num="8" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="10" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="nextIsStillFirst() : void" num="13" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="15" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="twoActionsMoveToNext() : void" num="18" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="20" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="pawnMovesCorrectlyCounted() : void" num="26" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="28" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="drawOfferNotChangesCounter() : void" num="34" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/engine/PositionSideTest.java" name="PositionSideTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="17" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="12" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="PositionSideTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="2" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="2" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="initialSide() : void" num="8" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="10" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="sideAfterMove() : void" num="13" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="15" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/engine/PositionTest.java" name="PositionTest.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="7" loc="57" coveredmethods="7" methods="7" elements="17" classes="1" ncloc="39" statements="10" conditionals="0" coveredstatements="10"/>
            <class name="PositionTest">
               <metrics coveredelements="17" complexity="7" methods="7" testruns="7" statements="10" coveredconditionals="0" coveredmethods="7" elements="17" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="10" testpasses="7"/>
            </class>
            <line complexity="1" visibility="public" signature="enPassantIsDetectedAsCapture() : void" num="14" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="16" count="1" type="stmt"/>
            <line num="17" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="usualPawnMoveIsNotCapture() : void" num="26" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="movedSideForInitialPosition() : void" num="32" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="correctSideForNextMove() : void" num="38" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="correctSideForOppositeMove() : void" num="43" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="correctSideForTerminalMove() : void" num="48" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="noSingleNullAllowed() : void" num="53" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="55" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/engine/PositionUtils.java" name="PositionUtils.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="3" loc="30" coveredmethods="2" methods="3" elements="6" classes="1" ncloc="11" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="PositionUtils">
               <metrics coveredelements="5" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="private" signature="PositionUtils()" num="9" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="addCapturable(PositionBuilder,Side,String) : void" num="13" count="29" type="method"/>
            <line num="14" count="29" type="stmt"/>
            <line complexity="1" visibility="package" signature="addAny(PositionBuilder,Side,String) : PieceType" num="25" count="5" type="method"/>
            <line num="26" count="5" type="stmt"/>
            <line num="27" count="5" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/engine/QueenAllowedMovesTest.java" name="QueenAllowedMovesTest.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="2" loc="43" coveredmethods="2" methods="2" elements="17" classes="1" ncloc="31" statements="15" conditionals="0" coveredstatements="15"/>
            <class name="QueenAllowedMovesTest">
               <metrics coveredelements="17" complexity="2" methods="2" testruns="2" statements="15" coveredconditionals="0" coveredmethods="2" elements="17" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="15" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="h1() : void" num="10" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="12" count="1" type="stmt"/>
            <line num="13" count="1" type="stmt"/>
            <line num="15" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="centerBlocksAndCaptures() : void" num="22" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/engine/QueenNewPositionTest.java" name="QueenNewPositionTest.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="1" loc="24" coveredmethods="1" methods="1" elements="7" classes="1" ncloc="13" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="QueenNewPositionTest">
               <metrics coveredelements="7" complexity="1" methods="1" testruns="1" statements="6" coveredconditionals="0" coveredmethods="1" elements="7" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="6" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="queenMove() : void" num="10" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="12" count="1" type="stmt"/>
            <line num="13" count="1" type="stmt"/>
            <line num="15" count="1" type="stmt"/>
            <line num="17" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/engine/ResignTest.java" name="ResignTest.java">
            <metrics coveredelements="24" coveredconditionals="0" complexity="8" loc="88" coveredmethods="8" methods="8" elements="24" classes="1" ncloc="59" statements="16" conditionals="0" coveredstatements="16"/>
            <class name="ResignTest">
               <metrics coveredelements="24" complexity="8" methods="8" testruns="8" statements="16" coveredconditionals="0" coveredmethods="8" elements="24" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="16" testpasses="8"/>
            </class>
            <line complexity="1" visibility="public" signature="noMoreMovesAfterResign() : void" num="14" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="16" count="1" type="stmt"/>
            <line num="18" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="positionAfterResignKeepsPieces() : void" num="23" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="25" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="winningSideDetection() : void" num="36" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="winningSideDetectionOpposite() : void" num="42" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="resignNotEqualsToOtherMove() : void" num="50" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="resignEqualsToItself() : void" num="55" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="resignIsPossibleForNonTerminal() : void" num="60" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="noResignAfterCheckmate() : void" num="66" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/engine/RookAllowedMovesTest.java" name="RookAllowedMovesTest.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="4" loc="62" coveredmethods="4" methods="4" elements="20" classes="1" ncloc="47" statements="16" conditionals="0" coveredstatements="16"/>
            <class name="RookAllowedMovesTest">
               <metrics coveredelements="20" complexity="4" methods="4" testruns="4" statements="16" coveredconditionals="0" coveredmethods="4" elements="20" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="16" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="a1() : void" num="10" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="12" count="1" type="stmt"/>
            <line num="13" count="1" type="stmt"/>
            <line num="15" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="e4() : void" num="22" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="blockedPieces() : void" num="34" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="blockAndCapture() : void" num="47" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/engine/RookNewPositionTest.java" name="RookNewPositionTest.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="1" loc="21" coveredmethods="1" methods="1" elements="6" classes="1" ncloc="13" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="RookNewPositionTest">
               <metrics coveredelements="6" complexity="1" methods="1" testruns="1" statements="5" coveredconditionals="0" coveredmethods="1" elements="6" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="5" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="moveRook() : void" num="12" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="14" count="1" type="stmt"/>
            <line num="15" count="1" type="stmt"/>
            <line num="16" count="1" type="stmt"/>
            <line num="18" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/engine/RulesBuilder.java" name="RulesBuilder.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="4" loc="36" coveredmethods="4" methods="4" elements="12" classes="1" ncloc="25" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="RulesBuilder">
               <metrics coveredelements="12" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="12" statements="8" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="RulesBuilder()" num="17" count="25" type="method"/>
            <line num="18" count="25" type="stmt"/>
            <line complexity="1" visibility="public" signature="movesTillDraw(int) : RulesBuilder" num="21" count="21" type="method"/>
            <line num="22" count="21" type="stmt"/>
            <line num="23" count="21" type="stmt"/>
            <line complexity="1" visibility="public" signature="movesTillClaimDraw(int) : RulesBuilder" num="26" count="4" type="method"/>
            <line num="27" count="4" type="stmt"/>
            <line num="28" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : Rules" num="31" count="25" type="method"/>
            <line num="32" count="25" type="stmt"/>
            <line num="33" count="25" type="stmt"/>
            <line num="34" count="25" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/engine/StalemateTest.java" name="StalemateTest.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="2" loc="44" coveredmethods="2" methods="2" elements="12" classes="1" ncloc="32" statements="10" conditionals="0" coveredstatements="10"/>
            <class name="StalemateTest">
               <metrics coveredelements="12" complexity="2" methods="2" testruns="2" statements="10" coveredconditionals="0" coveredmethods="2" elements="12" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="10" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="stalematePositionIsTerminal() : void" num="14" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="16" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="mirrorToStalemateIsNotStalemate() : void" num="30" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.leokom.games.commons.engine">
         <metrics coveredelements="18" complexity="9" loc="84" methods="9" classes="4" statements="9" coveredconditionals="0" coveredmethods="9" elements="18" ncloc="50" files="4" conditionals="0" coveredstatements="9"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/commons/engine/GameState.java" name="GameState.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="19" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="GameState">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/commons/engine/GameTransition.java" name="GameTransition.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="8" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="GameTransition">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/commons/engine/GameStateImpl.java" name="GameStateImpl.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="7" loc="43" coveredmethods="7" methods="7" elements="14" classes="1" ncloc="31" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="GameStateImpl">
               <metrics coveredelements="14" coveredconditionals="0" complexity="7" coveredmethods="7" methods="7" elements="14" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="GameStateImpl()" num="13" count="19" type="method"/>
            <line num="14" count="19" type="stmt"/>
            <line complexity="1" visibility="public" signature="GameStateImpl(GameTransitionImpl,GameStateImpl)" num="17" count="9" type="method"/>
            <line num="18" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="GameStateImpl(GameTransitionImpl,GameStateImpl,GameTransitionImpl,GameStateImpl)" num="21" count="6" type="method"/>
            <line num="22" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="GameStateImpl(GameTransitionImpl,GameStateImpl,GameTransitionImpl,GameStateImpl,GameTransitionImpl,GameStateImpl)" num="25" count="1" type="method"/>
            <line num="27" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="GameStateImpl(Map&lt;GameTransitionImpl, GameStateImpl&gt;)" num="30" count="35" type="method"/>
            <line num="31" count="35" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(GameTransitionImpl) : GameStateImpl" num="34" count="9" type="method"/>
            <line num="36" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMoves() : Set&lt;GameTransitionImpl&gt;" num="39" count="20" type="method"/>
            <line num="41" count="20" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/commons/engine/GameTransitionImpl.java" name="GameTransitionImpl.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="14" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="10" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="GameTransitionImpl">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="GameTransitionImpl(long)" num="7" count="24" type="method"/>
            <line num="8" count="24" type="stmt"/>
            <line complexity="1" visibility="public" signature="getId() : long" num="11" count="30" type="method"/>
            <line num="12" count="30" type="stmt"/>
         </file>
      </package>
      <package name="com.leokom.games.chess.player.legal.brain.common">
         <metrics coveredelements="294" complexity="56" loc="874" methods="54" classes="14" statements="243" coveredconditionals="3" coveredmethods="53" elements="301" ncloc="583" files="14" conditionals="4" coveredstatements="238"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/legal/brain/common/Brain.java" name="Brain.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="11" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Brain">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/legal/brain/common/Evaluator.java" name="Evaluator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="27" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Evaluator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/legal/brain/common/EvaluatorFactory.java" name="EvaluatorFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="9" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="EvaluatorFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/legal/brain/common/EvaluatorType.java" name="EvaluatorType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="18" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="EvaluatorType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/legal/brain/common/SideEvaluator.java" name="SideEvaluator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="15" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SideEvaluator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/player/legal/brain/common/AttackEvaluatorTest.java" name="AttackEvaluatorTest.java">
            <metrics coveredelements="31" coveredconditionals="0" complexity="5" loc="75" coveredmethods="5" methods="5" elements="31" classes="1" ncloc="49" statements="26" conditionals="0" coveredstatements="26"/>
            <class name="AttackEvaluatorTest">
               <metrics coveredelements="31" complexity="5" methods="5" testruns="8" statements="26" coveredconditionals="0" coveredmethods="5" elements="31" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="26" testpasses="8"/>
            </class>
            <line complexity="1" visibility="public" signature="attackingIsBetter() : void" num="11" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="13" count="2" type="stmt"/>
            <line num="14" count="2" type="stmt"/>
            <line num="16" count="2" type="stmt"/>
            <line num="18" count="2" type="stmt"/>
            <line num="20" count="2" type="stmt"/>
            <line num="22" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="leaveAttackedSquare() : void" num="25" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="27" count="2" type="stmt"/>
            <line num="32" count="2" type="stmt"/>
            <line num="33" count="2" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="leaveAttackedSquare2() : void" num="39" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="41" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="45" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line num="49" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleAttackMeansNeedToAct() : void" num="54" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="56" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="getEvaluatorType() : EvaluatorType" num="71" count="8" type="method"/>
            <line num="73" count="8" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/player/legal/brain/common/CastlingSafetyEvaluatorTest.java" name="CastlingSafetyEvaluatorTest.java">
            <metrics coveredelements="60" coveredconditionals="0" complexity="9" loc="145" coveredmethods="9" methods="9" elements="60" classes="1" ncloc="103" statements="51" conditionals="0" coveredstatements="51"/>
            <class name="CastlingSafetyEvaluatorTest">
               <metrics coveredelements="60" complexity="9" methods="9" testruns="16" statements="51" coveredconditionals="0" coveredmethods="9" elements="60" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="51" testpasses="16"/>
            </class>
            <line complexity="1" visibility="public" signature="movingRookToLoseOneOfCastlingIsNotFine() : void" num="8" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="10" count="2" type="stmt"/>
            <line num="19" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="noCastlingSafetyAfterKingMovement() : void" num="22" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="24" count="2" type="stmt"/>
            <line num="25" count="2" type="stmt"/>
            <line num="26" count="2" type="stmt"/>
            <line num="28" count="2" type="stmt"/>
            <line num="29" count="2" type="stmt"/>
            <line num="30" count="2" type="stmt"/>
            <line num="31" count="2" type="stmt"/>
            <line num="33" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldKingMovementNotGoodInitially() : void" num="41" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="43" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line num="45" count="2" type="stmt"/>
            <line num="46" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line num="49" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="givingRoomForCastlingBetterThanNo() : void" num="56" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="58" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="occupyingSpaceToPreventCastlingNotGood() : void" num="66" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="68" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="occupyingSpaceToBlockOpponentCastlingIsGood() : void" num="80" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="82" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldRookMoveOKGivenCastlingDone() : void" num="93" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="95" count="2" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="103" count="2" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="noProblemToMoveKingAfterBothRooksMoved() : void" num="115" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="117" count="2" type="stmt"/>
            <line num="119" count="2" type="stmt"/>
            <line num="120" count="2" type="stmt"/>
            <line num="121" count="2" type="stmt"/>
            <line num="123" count="2" type="stmt"/>
            <line num="125" count="2" type="stmt"/>
            <line num="127" count="2" type="stmt"/>
            <line num="133" count="2" type="stmt"/>
            <line num="135" count="2" type="stmt"/>
            <line num="137" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="getEvaluatorType() : EvaluatorType" num="141" count="16" type="method"/>
            <line num="143" count="16" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/player/legal/brain/common/CenterControlEvaluatorTest.java" name="CenterControlEvaluatorTest.java">
            <metrics coveredelements="61" coveredconditionals="0" complexity="10" loc="129" coveredmethods="10" methods="10" elements="61" classes="1" ncloc="93" statements="51" conditionals="0" coveredstatements="51"/>
            <class name="CenterControlEvaluatorTest">
               <metrics coveredelements="61" complexity="10" methods="10" testruns="18" statements="51" coveredconditionals="0" coveredmethods="10" elements="61" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="51" testpasses="18"/>
            </class>
            <line complexity="1" visibility="public" signature="evaluateMove() : void" num="7" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="9" count="2" type="stmt"/>
            <line num="10" count="2" type="stmt"/>
            <line num="11" count="2" type="stmt"/>
            <line num="14" count="2" type="stmt"/>
            <line num="16" count="2" type="stmt"/>
            <line num="18" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenKnightShouldD5ProveImportance() : void" num="21" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="23" count="2" type="stmt"/>
            <line num="24" count="2" type="stmt"/>
            <line num="25" count="2" type="stmt"/>
            <line num="27" count="2" type="stmt"/>
            <line num="28" count="2" type="stmt"/>
            <line num="30" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackKingToCenter() : void" num="33" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="35" count="2" type="stmt"/>
            <line num="36" count="2" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="kingNearCenterBetterThanToBorder() : void" num="47" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="49" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="kingIsCoolAtC3() : void" num="59" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="61" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="f6AlsoGivesControl() : void" num="72" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="74" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="79" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="rookTriangulate() : void" num="85" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="87" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="moreCenterSquaresControlled() : void" num="97" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="99" count="2" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line num="109" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="blockingOpponentFromCenterControlIsBetterThanNot() : void" num="112" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="114" count="2" type="stmt"/>
            <line num="119" count="2" type="stmt"/>
            <line num="120" count="2" type="stmt"/>
            <line num="122" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="getEvaluatorType() : EvaluatorType" num="125" count="18" type="method"/>
            <line num="127" count="18" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/player/legal/brain/common/EvaluatorAsserts.java" name="EvaluatorAsserts.java">
            <metrics coveredelements="20" coveredconditionals="3" complexity="7" loc="56" coveredmethods="5" methods="5" elements="22" classes="1" ncloc="42" statements="13" conditionals="4" coveredstatements="12"/>
            <class name="EvaluatorAsserts">
               <metrics coveredelements="20" coveredconditionals="3" complexity="7" coveredmethods="5" methods="5" elements="22" statements="13" conditionals="4" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="public" signature="EvaluatorAsserts(GenericEvaluator&lt;Position, Move&gt;)" num="18" count="85" type="method"/>
            <line num="19" count="85" type="stmt"/>
            <line complexity="3" visibility="public" signature="assertFirstBetter(PositionBuilder,Move,Move) : void" num="22" count="39" type="method"/>
            <line num="23" count="39" type="stmt"/>
            <line falsecount="2" truecount="37" num="23" type="cond"/>
            <line num="24" count="37" type="stmt"/>
            <line num="26" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="26" type="cond"/>
            <line num="27" count="0" type="stmt"/>
            <line num="29" count="39" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertFirstBetter(Position,Move,Move) : void" num="32" count="79" type="method"/>
            <line num="33" count="79" type="stmt"/>
            <line num="34" count="79" type="stmt"/>
            <line num="36" count="79" type="stmt"/>
            <line complexity="1" visibility="package" signature="assertNoDifference(Position,Move,Move) : void" num="42" count="4" type="method"/>
            <line num="43" count="4" type="stmt"/>
            <line num="44" count="4" type="stmt"/>
            <line num="46" count="4" type="stmt"/>
            <line complexity="1" visibility="package" signature="assertEvaluation(double,Position,Move) : void" num="53" count="2" type="method"/>
            <line num="54" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/player/legal/brain/common/EvaluatorTestCase.java" name="EvaluatorTestCase.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="34" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="23" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="EvaluatorTestCase">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="parameters() : Iterable&lt; EvaluatorFactory &gt;" num="21" count="7" type="method"/>
            <line num="23" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="prepareMe() : void" num="30" count="78" type="method"/>
            <line num="32" count="78" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/player/legal/brain/common/MaterialEvaluatorTest.java" name="MaterialEvaluatorTest.java">
            <metrics coveredelements="33" coveredconditionals="0" complexity="5" loc="70" coveredmethods="5" methods="5" elements="33" classes="1" ncloc="51" statements="28" conditionals="0" coveredstatements="28"/>
            <class name="MaterialEvaluatorTest">
               <metrics coveredelements="33" complexity="5" methods="5" testruns="8" statements="28" coveredconditionals="0" coveredmethods="5" elements="33" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="28" testpasses="8"/>
            </class>
            <line complexity="1" visibility="public" signature="shouldCaptureBetter() : void" num="14" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="16" count="2" type="stmt"/>
            <line num="17" count="2" type="stmt"/>
            <line num="18" count="2" type="stmt"/>
            <line num="19" count="2" type="stmt"/>
            <line num="21" count="2" type="stmt"/>
            <line num="22" count="2" type="stmt"/>
            <line num="24" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="unHardCodeD5() : void" num="27" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="29" count="2" type="stmt"/>
            <line num="30" count="2" type="stmt"/>
            <line num="31" count="2" type="stmt"/>
            <line num="32" count="2" type="stmt"/>
            <line num="34" count="2" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldPromotionGiveMaterialBenefit() : void" num="40" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="42" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line num="45" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line num="48" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldPromotionToHigherPieceGiveMaterialBenefit() : void" num="54" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="56" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="getEvaluatorType() : EvaluatorType" num="66" count="8" type="method"/>
            <line num="68" count="8" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/player/legal/brain/common/MobilityEvaluatorTest.java" name="MobilityEvaluatorTest.java">
            <metrics coveredelements="25" coveredconditionals="0" complexity="4" loc="61" coveredmethods="4" methods="4" elements="25" classes="1" ncloc="41" statements="21" conditionals="0" coveredstatements="21"/>
            <class name="MobilityEvaluatorTest">
               <metrics coveredelements="25" complexity="4" methods="4" testruns="6" statements="21" coveredconditionals="0" coveredmethods="4" elements="25" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="21" testpasses="6"/>
            </class>
            <line complexity="1" visibility="public" signature="shouldQueenControlMore() : void" num="16" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="18" count="2" type="stmt"/>
            <line num="19" count="2" type="stmt"/>
            <line num="20" count="2" type="stmt"/>
            <line num="22" count="2" type="stmt"/>
            <line num="23" count="2" type="stmt"/>
            <line num="25" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldKingHaveMoreFreedom() : void" num="28" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="30" count="2" type="stmt"/>
            <line num="31" count="2" type="stmt"/>
            <line num="33" count="2" type="stmt"/>
            <line num="34" count="2" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="blockingOpponentMobilityIsBetterThanNot() : void" num="44" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="46" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line num="48" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="getEvaluatorType() : EvaluatorType" num="57" count="6" type="method"/>
            <line num="59" count="6" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/player/legal/brain/common/ProtectionEvaluatorTest.java" name="ProtectionEvaluatorTest.java">
            <metrics coveredelements="35" coveredconditionals="0" complexity="8" loc="140" coveredmethods="7" methods="8" elements="40" classes="1" ncloc="86" statements="32" conditionals="0" coveredstatements="28"/>
            <class name="ProtectionEvaluatorTest">
               <metrics coveredelements="35" complexity="8" methods="8" testruns="12" statements="32" coveredconditionals="0" coveredmethods="7" elements="40" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="28" testpasses="12"/>
            </class>
            <line complexity="1" visibility="public" signature="reducingOpponentProtectionIsGood() : void" num="9" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="11" count="2" type="stmt"/>
            <line num="18" count="2" type="stmt"/>
            <line num="19" count="2" type="stmt"/>
            <line num="20" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="increasingOurProtectionIsGood() : void" num="23" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="25" count="2" type="stmt"/>
            <line num="32" count="2" type="stmt"/>
            <line num="33" count="2" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="protectionByIntersection() : void" num="38" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="40" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line num="46" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line num="49" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="protectionByDefending() : void" num="52" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="54" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="protectingMoreValuablePieceImportant() : void" num="65" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="67" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="protectingByLessValuablePieceIsBetter() : void" num="81" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="protectionByMultipleIsBetter() : void" num="97" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="99" count="2" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="getEvaluatorType() : EvaluatorType" num="113" count="12" type="method"/>
            <line num="115" count="12" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/player/legal/brain/common/TerminalEvaluatorTest.java" name="TerminalEvaluatorTest.java">
            <metrics coveredelements="25" coveredconditionals="0" complexity="6" loc="84" coveredmethods="6" methods="6" elements="25" classes="1" ncloc="59" statements="19" conditionals="0" coveredstatements="19"/>
            <class name="TerminalEvaluatorTest">
               <metrics coveredelements="25" complexity="6" methods="6" testruns="10" statements="19" coveredconditionals="0" coveredmethods="6" elements="25" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="19" testpasses="10"/>
            </class>
            <line complexity="1" visibility="public" signature="checkmateBetterThanNot() : void" num="11" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="13" count="2" type="stmt"/>
            <line num="19" count="2" type="stmt"/>
            <line num="20" count="2" type="stmt"/>
            <line num="22" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="checkmateIsBetterThanObligatoryDraw() : void" num="26" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="28" count="2" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line num="36" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="resignIsWorseThanCheckmate() : void" num="41" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="43" count="2" type="stmt"/>
            <line num="49" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="drawClaimIsWorseThanCheckmate() : void" num="55" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="57" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="drawClaimIsBetterThanResign() : void" num="69" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="71" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="getEvaluatorType() : EvaluatorType" num="80" count="10" type="method"/>
            <line num="82" count="10" type="stmt"/>
         </file>
      </package>
      <package name="com.leokom.games.chess.player.legal.brain.normalized">
         <metrics coveredelements="230" complexity="75" loc="1043" methods="62" classes="24" statements="151" coveredconditionals="22" coveredmethods="60" elements="237" ncloc="663" files="23" conditionals="24" coveredstatements="148"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/legal/brain/normalized/AttackEvaluator.java" name="AttackEvaluator.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="21" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="14" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="AttackEvaluator">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="evaluateMove(Position,Move) : double" num="17" count="1964" type="method"/>
            <line num="19" count="1964" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/legal/brain/normalized/CastlingSafetyEvaluator.java" name="CastlingSafetyEvaluator.java">
            <metrics coveredelements="32" coveredconditionals="10" complexity="11" loc="117" coveredmethods="4" methods="4" elements="34" classes="2" ncloc="58" statements="18" conditionals="12" coveredstatements="18"/>
            <class name="CastlingSafetyEvaluator">
               <metrics coveredelements="3" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="CastlingSafetyEvaluator.CastlingSafetySideEvaluator">
               <metrics coveredelements="29" coveredconditionals="10" complexity="10" coveredmethods="3" methods="3" elements="31" statements="16" conditionals="12" coveredstatements="16"/>
            </class>
            <line complexity="1" visibility="public" signature="evaluateMove(Position,Move) : double" num="48" count="3008" type="method"/>
            <line num="50" count="3008" type="stmt"/>
            <line num="52" count="3008" type="stmt"/>
            <line complexity="5" visibility="public" signature="evaluatePosition(Position,Side) : double" num="60" count="6016" type="method"/>
            <line num="68" count="6016" type="stmt"/>
            <line falsecount="6006" truecount="10" num="68" type="cond"/>
            <line num="69" count="10" type="stmt"/>
            <line num="73" count="6006" type="stmt"/>
            <line falsecount="5803" truecount="203" num="73" type="cond"/>
            <line num="74" count="203" type="stmt"/>
            <line num="78" count="5803" type="stmt"/>
            <line falsecount="5737" truecount="66" num="78" type="cond"/>
            <line num="79" count="66" type="stmt"/>
            <line num="84" count="5737" type="stmt"/>
            <line complexity="1" visibility="private" signature="getFreeInBetween(Position,Side) : int" num="88" count="5737" type="method"/>
            <line num="89" count="5737" type="stmt"/>
            <line complexity="4" visibility="private" signature="getOccupiedInBetween(Position,Side) : int" num="98" count="5737" type="method"/>
            <line num="101" count="5737" type="stmt"/>
            <line falsecount="2884" truecount="2853" num="101" type="cond"/>
            <line num="102" count="5737" type="stmt"/>
            <line num="103" count="5737" type="stmt"/>
            <line falsecount="0" truecount="5737" num="103" type="cond"/>
            <line num="104" count="5737" type="stmt"/>
            <line num="107" count="5737" type="stmt"/>
            <line falsecount="0" truecount="5737" num="107" type="cond"/>
            <line num="108" count="5737" type="stmt"/>
            <line num="111" count="5737" type="stmt"/>
            <line num="113" count="5737" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/legal/brain/normalized/CenterControlEvaluator.java" name="CenterControlEvaluator.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="32" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="15" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="CenterControlEvaluator">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="evaluateMove(Position,Move) : double" num="27" count="1975" type="method"/>
            <line num="29" count="1975" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/legal/brain/normalized/MasterEvaluator.java" name="MasterEvaluator.java">
            <metrics coveredelements="26" coveredconditionals="2" complexity="6" loc="81" coveredmethods="5" methods="5" elements="26" classes="1" ncloc="50" statements="19" conditionals="2" coveredstatements="19"/>
            <class name="MasterEvaluator">
               <metrics coveredelements="26" coveredconditionals="2" complexity="6" coveredmethods="5" methods="5" elements="26" statements="19" conditionals="2" coveredstatements="19"/>
            </class>
            <line complexity="1" visibility="public" signature="MasterEvaluator()" num="30" count="38" type="method"/>
            <line num="32" count="38" type="stmt"/>
            <line complexity="1" visibility="package" signature="MasterEvaluator(EvaluatorWeights)" num="39" count="39" type="method"/>
            <line num="41" count="39" type="stmt"/>
            <line complexity="1" visibility="package" signature="MasterEvaluator(EvaluatorWeights,EvaluatorFactory)" num="44" count="40" type="method"/>
            <line num="45" count="40" type="stmt"/>
            <line num="46" count="40" type="stmt"/>
            <line complexity="2" visibility="public" signature="evaluateMove(Position,Move) : double" num="49" count="1980" type="method"/>
            <line num="51" count="1980" type="stmt"/>
            <line falsecount="1889" truecount="91" num="51" type="cond"/>
            <line num="52" count="91" type="stmt"/>
            <line num="53" count="91" type="stmt"/>
            <line num="54" count="91" type="stmt"/>
            <line num="59" count="1889" type="stmt"/>
            <line num="60" count="11329" type="stmt"/>
            <line num="61" count="11329" type="stmt"/>
            <line num="62" count="11329" type="stmt"/>
            <line num="63" count="11329" type="stmt"/>
            <line num="64" count="11329" type="stmt"/>
            <line num="65" count="11329" type="stmt"/>
            <line num="70" count="1889" type="stmt"/>
            <line num="72" count="1889" type="stmt"/>
            <line num="73" count="1889" type="stmt"/>
            <line complexity="1" visibility="private" signature="evaluatorsExceptTerminal() : Stream&lt;Map.Entry&lt;EvaluatorType, Double&gt;&gt;" num="76" count="3778" type="method"/>
            <line num="77" count="3778" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/legal/brain/normalized/MaterialEvaluator.java" name="MaterialEvaluator.java">
            <metrics coveredelements="3" coveredconditionals="0" complexity="1" loc="45" coveredmethods="1" methods="1" elements="3" classes="1" ncloc="24" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="MaterialEvaluator">
               <metrics coveredelements="3" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="evaluateMove(Position,Move) : double" num="22" count="1942" type="method"/>
            <line num="24" count="1942" type="stmt"/>
            <line num="25" count="1942" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/legal/brain/normalized/MobilityEvaluator.java" name="MobilityEvaluator.java">
            <metrics coveredelements="3" coveredconditionals="0" complexity="1" loc="30" coveredmethods="1" methods="1" elements="3" classes="1" ncloc="18" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="MobilityEvaluator">
               <metrics coveredelements="3" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="evaluateMove(Position,Move) : double" num="24" count="1962" type="method"/>
            <line num="26" count="1962" type="stmt"/>
            <line num="28" count="1962" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/legal/brain/normalized/NormalizedBrain.java" name="NormalizedBrain.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="6" loc="52" coveredmethods="6" methods="6" elements="12" classes="1" ncloc="38" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="NormalizedBrain">
               <metrics coveredelements="12" coveredconditionals="0" complexity="6" coveredmethods="6" methods="6" elements="12" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="NormalizedBrain(Evaluator)" num="20" count="28" type="method"/>
            <line num="21" count="28" type="stmt"/>
            <line complexity="1" visibility="public" signature="NormalizedBrain(Evaluator,int)" num="24" count="42" type="method"/>
            <line num="25" count="42" type="stmt"/>
            <line complexity="1" visibility="private" signature="NormalizedBrain(GenericNormalizedBrain&lt;Position, Move&gt;)" num="34" count="42" type="method"/>
            <line num="35" count="42" type="stmt"/>
            <line complexity="1" visibility="public" signature="findBestMove(Position) : List&lt;Move&gt;" num="38" count="89" type="method"/>
            <line num="40" count="89" type="stmt"/>
            <line complexity="1" visibility="public" signature="findBestMoveForOpponent(Position) : Move" num="43" count="1" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="48" count="10" type="method"/>
            <line num="50" count="10" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/legal/brain/normalized/NormalizedEvaluatorFactory.java" name="NormalizedEvaluatorFactory.java">
            <metrics coveredelements="12" coveredconditionals="2" complexity="3" loc="47" coveredmethods="2" methods="2" elements="12" classes="1" ncloc="26" statements="8" conditionals="2" coveredstatements="8"/>
            <class name="NormalizedEvaluatorFactory">
               <metrics coveredelements="12" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="12" statements="8" conditionals="2" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 20()" num="20" count="1" type="method"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="get(EvaluatorType) : Evaluator" num="42" count="11472" type="method"/>
            <line num="44" count="11472" type="stmt"/>
            <line falsecount="1996" truecount="9476" num="44" type="cond"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/legal/brain/normalized/ProtectionEvaluator.java" name="ProtectionEvaluator.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="29" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="17" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ProtectionEvaluator">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="evaluateMove(Position,Move) : double" num="23" count="2632" type="method"/>
            <line num="25" count="2632" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/legal/brain/normalized/TerminalEvaluator.java" name="TerminalEvaluator.java">
            <metrics coveredelements="13" coveredconditionals="6" complexity="4" loc="41" coveredmethods="1" methods="1" elements="13" classes="1" ncloc="20" statements="6" conditionals="6" coveredstatements="6"/>
            <class name="TerminalEvaluator">
               <metrics coveredelements="13" coveredconditionals="6" complexity="4" coveredmethods="1" methods="1" elements="13" statements="6" conditionals="6" coveredstatements="6"/>
            </class>
            <line complexity="4" visibility="public" signature="evaluateMove(Position,Move) : double" num="26" count="302" type="method"/>
            <line num="28" count="302" type="stmt"/>
            <line num="30" count="302" type="stmt"/>
            <line falsecount="119" truecount="183" num="30" type="cond"/>
            <line num="31" count="183" type="stmt"/>
            <line num="35" count="119" type="stmt"/>
            <line falsecount="108" truecount="11" num="35" type="cond"/>
            <line num="36" count="11" type="stmt"/>
            <line num="39" count="108" type="stmt"/>
            <line falsecount="98" truecount="10" num="39" type="cond"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/player/legal/brain/normalized/AttackEvaluatorTest.java" name="AttackEvaluatorTest.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="2" loc="22" coveredmethods="2" methods="2" elements="5" classes="1" ncloc="16" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="AttackEvaluatorTest">
               <metrics coveredelements="5" complexity="2" methods="2" testruns="1" statements="3" coveredconditionals="0" coveredmethods="2" elements="5" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="prepare() : void" num="11" count="1" type="method"/>
            <line num="13" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="allMovesShouldBeInNormalizedRange() : void" num="16" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="18" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/player/legal/brain/normalized/CastlingSafetyEvaluatorTest.java" name="CastlingSafetyEvaluatorTest.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="4" loc="62" coveredmethods="4" methods="4" elements="11" classes="1" ncloc="49" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="CastlingSafetyEvaluatorTest">
               <metrics coveredelements="11" complexity="4" methods="4" testruns="6" statements="7" coveredconditionals="0" coveredmethods="4" elements="11" testfailures="0" testduration="0.07500000000000001" conditionals="0" coveredstatements="7" testpasses="6"/>
            </class>
            <line complexity="1" visibility="public" signature="parameters() : List&lt; GenericEvaluator&lt;Position, Move&gt; &gt;" num="20" count="1" type="method"/>
            <line num="22" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="allMovesShouldBeInNormalizedRange() : void" num="28" testsuccess="true" count="2" testduration="0.003" type="method"/>
            <line num="31" count="2" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="moreRoomForCastlingBetter() : void" num="40" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="42" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="castlingIsDesired() : void" num="49" testsuccess="true" count="2" testduration="0.002" type="method"/>
            <line num="51" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/player/legal/brain/normalized/CenterControlEvaluatorTest.java" name="CenterControlEvaluatorTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="3" loc="35" coveredmethods="3" methods="3" elements="8" classes="1" ncloc="23" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="CenterControlEvaluatorTest">
               <metrics coveredelements="8" complexity="3" methods="3" testruns="2" statements="5" coveredconditionals="0" coveredmethods="3" elements="8" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="5" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="prepare() : void" num="14" count="2" type="method"/>
            <line num="16" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="allMovesShouldBeInNormalizedRange() : void" num="19" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="23" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="equalCenterControlZeroAdvantage() : void" num="28" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/player/legal/brain/normalized/MasterEvaluatorBuilder.java" name="MasterEvaluatorBuilder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="28" coveredmethods="0" methods="2" elements="5" classes="1" ncloc="14" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="MasterEvaluatorBuilder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="weight(EvaluatorType,double) : MasterEvaluatorBuilder" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : MasterEvaluator" num="25" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/player/legal/brain/normalized/MasterEvaluatorTest.java" name="MasterEvaluatorTest.java">
            <metrics coveredelements="50" coveredconditionals="0" complexity="10" loc="141" coveredmethods="10" methods="10" elements="50" classes="1" ncloc="100" statements="40" conditionals="0" coveredstatements="40"/>
            <class name="MasterEvaluatorTest">
               <metrics coveredelements="50" complexity="10" methods="10" testruns="8" statements="40" coveredconditionals="0" coveredmethods="10" elements="50" testfailures="0" testduration="0.215" conditionals="0" coveredstatements="40" testpasses="8"/>
            </class>
            <line complexity="1" visibility="public" signature="prepare() : void" num="24" count="8" type="method"/>
            <line num="26" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="beSmartALittle() : void" num="38" testsuccess="true" count="1" testduration="0.022" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="drawAcceptingWhenDominatingIsNotOK() : void" num="57" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="resignIsWeak() : void" num="71" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="allMovesMustBeEvaluatedFrom0To1() : void" num="80" testsuccess="true" count="1" testduration="0.084" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertAllMovesEvaluatedIn0To1Range(Position,Evaluator) : void" num="87" count="2" type="method"/>
            <line num="88" count="2" type="stmt"/>
            <line num="89" count="44" type="stmt"/>
            <line num="90" count="44" type="stmt"/>
            <line complexity="1" visibility="public" signature="allMovesMustBeEvaluatedFrom0To1EvenWithCustomWeights() : void" num="96" testsuccess="true" count="1" testduration="0.084" type="method"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="singleNonTerminalEvaluatorWeightMaximalResultIs1() : void" num="105" testsuccess="true" count="1" testduration="0.017" type="method"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="losingIsEvaluatedTo0() : void" num="123" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="winningIsEvaluatedTo1() : void" num="129" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="131" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/player/legal/brain/normalized/MasterEvaluatorTweaked.java" name="MasterEvaluatorTweaked.java">
            <metrics coveredelements="4" coveredconditionals="2" complexity="2" loc="28" coveredmethods="1" methods="1" elements="4" classes="1" ncloc="11" statements="1" conditionals="2" coveredstatements="1"/>
            <class name="MasterEvaluatorTweaked">
               <metrics coveredelements="4" coveredconditionals="2" complexity="2" coveredmethods="1" methods="1" elements="4" statements="1" conditionals="2" coveredstatements="1"/>
            </class>
            <line complexity="2" visibility="public" signature="evaluateMove(Position,Move) : double" num="14" count="262" type="method"/>
            <line num="24" count="262" type="stmt"/>
            <line falsecount="243" truecount="19" num="24" type="cond"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/player/legal/brain/normalized/MobilityEvaluatorTest.java" name="MobilityEvaluatorTest.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="2" loc="23" coveredmethods="2" methods="2" elements="5" classes="1" ncloc="16" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="MobilityEvaluatorTest">
               <metrics coveredelements="5" complexity="2" methods="2" testruns="1" statements="3" coveredconditionals="0" coveredmethods="2" elements="5" testfailures="0" testduration="0.042" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="prepare() : void" num="12" count="1" type="method"/>
            <line num="14" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="allMovesShouldBeInNormalizedRange() : void" num="17" testsuccess="true" count="1" testduration="0.042" type="method"/>
            <line num="19" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/player/legal/brain/normalized/NormalizedBrainMasterEvaluatorTest.java" name="NormalizedBrainMasterEvaluatorTest.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="4" loc="51" coveredmethods="4" methods="4" elements="13" classes="1" ncloc="37" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="NormalizedBrainMasterEvaluatorTest">
               <metrics coveredelements="13" complexity="4" methods="4" testruns="4" statements="9" coveredconditionals="0" coveredmethods="4" elements="13" testfailures="0" testduration="6.826" conditionals="0" coveredstatements="9" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="resignIsNotTheBest() : void" num="14" testsuccess="true" count="1" testduration="1.824" type="method"/>
            <line num="16" count="1" type="stmt"/>
            <line num="18" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="drawOfferIsNotTheBest() : void" num="21" testsuccess="true" count="1" testduration="1.784" type="method"/>
            <line num="23" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="drawOfferIsNotTheBestResponse() : void" num="31" testsuccess="true" count="1" testduration="3.008" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="winningMaterialNotBestIdeaIfCanCheckmate() : void" num="38" testsuccess="true" count="1" testduration="0.21" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/player/legal/brain/normalized/NormalizedBrainPositionMoveTest.java" name="NormalizedBrainPositionMoveTest.java">
            <metrics coveredelements="3" coveredconditionals="0" complexity="1" loc="21" coveredmethods="1" methods="1" elements="3" classes="1" ncloc="14" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="NormalizedBrainPositionMoveTest">
               <metrics coveredelements="3" complexity="1" methods="1" testruns="1" statements="2" coveredconditionals="0" coveredmethods="1" elements="3" testfailures="0" testduration="0.025" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="integrationWithPosition() : void" num="15" testsuccess="true" count="1" testduration="0.025" type="method"/>
            <line num="17" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/player/legal/brain/normalized/NormalizedEvaluatorAssert.java" name="NormalizedEvaluatorAssert.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="2" loc="26" coveredmethods="2" methods="2" elements="6" classes="1" ncloc="21" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="NormalizedEvaluatorAssert">
               <metrics coveredelements="6" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="package" signature="NormalizedEvaluatorAssert(GenericEvaluator&lt; Position, Move&gt;)" num="14" count="21" type="method"/>
            <line num="15" count="21" type="stmt"/>
            <line complexity="1" visibility="package" signature="assertAllMovesEvaluatedInNormalizedRange(Position) : void" num="18" count="21" type="method"/>
            <line num="19" count="21" type="stmt"/>
            <line num="20" count="490" type="stmt"/>
            <line num="21" count="490" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/player/legal/brain/normalized/NormalizedEvaluatorsCorrectnessTest.java" name="NormalizedEvaluatorsCorrectnessTest.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="3" loc="52" coveredmethods="3" methods="3" elements="7" classes="1" ncloc="37" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="NormalizedEvaluatorsCorrectnessTest">
               <metrics coveredelements="7" complexity="3" methods="3" testruns="14" statements="4" coveredconditionals="0" coveredmethods="3" elements="7" testfailures="0" testduration="0.092" conditionals="0" coveredstatements="4" testpasses="14"/>
            </class>
            <line complexity="1" visibility="public" signature="parameters() : Iterable&lt;EvaluatorType&gt;" num="25" count="1" type="method"/>
            <line num="27" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="allMovesInCorrectRangeFromInitialPosition() : void" num="33" testsuccess="true" count="7" testduration="0.001" type="method"/>
            <line num="35" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="allCorrectInSomeSimplePosition() : void" num="39" testsuccess="true" count="7" testduration="0.002" type="method"/>
            <line num="41" count="7" type="stmt"/>
            <line num="48" count="7" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/player/legal/brain/normalized/ProtectionEvaluatorTest.java" name="ProtectionEvaluatorTest.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="2" loc="34" coveredmethods="2" methods="2" elements="5" classes="1" ncloc="27" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="ProtectionEvaluatorTest">
               <metrics coveredelements="5" complexity="2" methods="2" testruns="2" statements="3" coveredconditionals="0" coveredmethods="2" elements="5" testfailures="0" testduration="0.433" conditionals="0" coveredstatements="3" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="parameters() : List&lt; GenericEvaluator&lt;Position, Move&gt; &gt;" num="20" count="1" type="method"/>
            <line num="22" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="allMovesShouldBeInNormalizedRange() : void" num="28" testsuccess="true" count="2" testduration="0.419" type="method"/>
            <line num="30" count="2" type="stmt"/>
            <line num="32" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/player/legal/brain/normalized/RangeTest.java" name="RangeTest.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="3" loc="25" coveredmethods="3" methods="3" elements="6" classes="1" ncloc="18" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="RangeTest">
               <metrics coveredelements="6" complexity="3" methods="3" testruns="3" statements="3" coveredconditionals="0" coveredmethods="3" elements="6" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="3" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="convertValue() : void" num="9" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="12" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="convertingValueOutOfRangeUnsupported() : void" num="15" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="18" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="zeroRangeNotSupported() : void" num="21" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="23" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.leokom.games.commons.brain.normalized.range">
         <metrics coveredelements="23" complexity="9" loc="80" methods="8" classes="2" statements="13" coveredconditionals="2" coveredmethods="8" elements="23" ncloc="43" files="2" conditionals="2" coveredstatements="13"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/commons/brain/normalized/range/Range.java" name="Range.java">
            <metrics coveredelements="19" coveredconditionals="2" complexity="7" loc="51" coveredmethods="6" methods="6" elements="19" classes="1" ncloc="29" statements="11" conditionals="2" coveredstatements="11"/>
            <class name="Range">
               <metrics coveredelements="19" coveredconditionals="2" complexity="7" coveredmethods="6" methods="6" elements="19" statements="11" conditionals="2" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="Range(double,double)" num="10" count="16" type="method"/>
            <line num="11" count="16" type="stmt"/>
            <line num="13" count="15" type="stmt"/>
            <line num="14" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="convert(Range,double) : double" num="26" count="19222" type="method"/>
            <line num="27" count="19222" type="stmt"/>
            <line num="29" count="19221" type="stmt"/>
            <line num="31" count="19221" type="stmt"/>
            <line complexity="1" visibility="public" signature="validateRange(double) : void" num="34" count="25280" type="method"/>
            <line num="35" count="25280" type="stmt"/>
            <line complexity="2" visibility="private" signature="validate(boolean,String) : void" num="38" count="25296" type="method"/>
            <line num="39" count="25296" type="stmt"/>
            <line falsecount="25293" truecount="3" num="39" type="cond"/>
            <line num="40" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="length() : double" num="44" count="38442" type="method"/>
            <line num="45" count="38442" type="stmt"/>
            <line complexity="1" visibility="public" signature="contains(double) : boolean" num="48" count="25770" type="method"/>
            <line num="49" count="25770" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/commons/brain/normalized/range/SymmetricalNormalizedRange.java" name="SymmetricalNormalizedRange.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="29" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="14" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="SymmetricalNormalizedRange">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="SymmetricalNormalizedRange(double,double)" num="16" count="6" type="method"/>
            <line num="17" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="normalize(double) : double" num="25" count="13483" type="method"/>
            <line num="26" count="13483" type="stmt"/>
         </file>
      </package>
      <package name="com.leokom.games.commons.brain">
         <metrics coveredelements="4" complexity="2" loc="66" methods="2" classes="2" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" ncloc="19" files="2" conditionals="0" coveredstatements="2"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/commons/brain/GenericBrain.java" name="GenericBrain.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="53" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="13" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="GenericBrain">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="package" signature="findBestMoveForOpponent(S) : T" num="46" count="1" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="name() : String" num="50" count="30" type="method"/>
            <line num="51" count="30" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/commons/brain/GenericEvaluator.java" name="GenericEvaluator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="13" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="GenericEvaluator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="com.leokom.games.chess">
         <metrics coveredelements="57" complexity="66" loc="829" methods="57" classes="9" statements="161" coveredconditionals="7" coveredmethods="10" elements="230" ncloc="477" files="9" conditionals="12" coveredstatements="40"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/Game.java" name="Game.java">
            <metrics coveredelements="25" coveredconditionals="5" complexity="7" loc="82" coveredmethods="3" methods="4" elements="28" classes="1" ncloc="45" statements="18" conditionals="6" coveredstatements="17"/>
            <class name="Game">
               <metrics coveredelements="25" coveredconditionals="5" complexity="7" coveredmethods="3" methods="4" elements="28" statements="18" conditionals="6" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="package" signature="Game(Function&lt; Side, Player &gt;)" num="22" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Game(Player,Player)" num="34" count="14" type="method"/>
            <line num="35" count="14" type="stmt"/>
            <line num="36" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : Player" num="43" count="14" type="method"/>
            <line num="44" count="14" type="stmt"/>
            <line num="48" count="14" type="stmt"/>
            <line num="49" count="14" type="stmt"/>
            <line num="52" count="14" type="stmt"/>
            <line num="56" count="14" type="stmt"/>
            <line num="58" count="14" type="stmt"/>
            <line complexity="4" visibility="private" signature="getWinner() : Player" num="61" count="14" type="method"/>
            <line num="62" count="14" type="stmt"/>
            <line num="66" count="14" type="stmt"/>
            <line num="68" count="14" type="stmt"/>
            <line falsecount="11" truecount="3" num="68" type="cond"/>
            <line num="69" count="3" type="stmt"/>
            <line num="71" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="71" type="cond"/>
            <line num="72" count="2" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="75" type="cond"/>
            <line num="78" count="11" type="stmt"/>
            <line num="79" count="11" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/MainRunner.java" name="MainRunner.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="101" coveredmethods="0" methods="2" elements="8" classes="1" ncloc="25" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="MainRunner">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="2" elements="8" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="MainRunner()" num="13" count="0" type="method"/>
            <line complexity="3" visibility="public" signature="main(String[]) : void" num="79" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/GameTest.java" name="GameTest.java">
            <metrics coveredelements="15" coveredconditionals="0" complexity="3" loc="43" coveredmethods="3" methods="3" elements="15" classes="1" ncloc="29" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="GameTest">
               <metrics coveredelements="15" complexity="3" methods="3" testruns="2" statements="12" coveredconditionals="0" coveredmethods="3" elements="15" testfailures="0" testduration="0.44" conditionals="0" coveredstatements="12" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="gameCanBeFinishedWithoutStart() : void" num="17" testsuccess="true" count="1" testduration="0.421" type="method"/>
            <line num="19" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="verifyOpponentSetting() : void" num="28" testsuccess="true" count="1" testduration="0.019" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="setPosition(Player) : void" num="40" count="2" type="method"/>
            <line num="41" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/Simulator.java" name="Simulator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="86" coveredmethods="0" methods="5" elements="25" classes="1" ncloc="49" statements="20" conditionals="0" coveredstatements="0"/>
            <class name="Simulator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="25" statements="20" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="Simulator(Player,Player)" num="30" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="run() : SimulatorStatistics" num="45" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="countWinsOf(List&lt; Player &gt;,Player) : long" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="createGame(Player,Player) : Game" num="73" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="gamePairs(int) : Simulator" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/SimulatorIT.java" name="SimulatorIT.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="23" loc="245" coveredmethods="0" methods="23" elements="89" classes="1" ncloc="180" statements="66" conditionals="0" coveredstatements="0"/>
            <class name="SimulatorIT">
               <metrics coveredelements="0" coveredconditionals="0" complexity="23" coveredmethods="0" methods="23" elements="89" statements="66" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="runGame() : void" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="afterFinishRunAnotherGameReversed() : void" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStatistics() : void" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="statisticsReflectsReality() : void" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="twoDraws() : void" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="verifyFlippingGamesCreation() : void" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="verifyMultiTimesFlippingGamesCreation() : void" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="totalGamesCounted() : void" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="twoWinsByFirst() : void" num="104" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getSimulator() : Simulator" num="117" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="runSimulator() : SimulatorStatistics" num="121" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="programPlayers(Position,Position) : void" num="129" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="legalVsSimpleStatistics() : void" num="135" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="simpleVsSimpleStatistics() : void" num="142" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomVsRandom() : void" num="150" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="simpleVsRandom() : void" num="160" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="normalizedDepth1VsRandom() : void" num="170" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="normalizedDepth2VsRandom() : void" num="180" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="denormalizedVsRandom() : void" num="191" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="legalVsLegalCustomEvaluator() : void" num="202" count="0" type="method"/>
            <line num="204" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="legalPlayerEqualProbableDraw() : void" num="214" count="0" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newBrainShouldBeBetter() : void" num="222" count="0" type="method"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="normalizedPlayerWithDepth2IsBetterThanDepth1() : void" num="234" count="0" type="method"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/SimulatorMultiDeltaIT.java" name="SimulatorMultiDeltaIT.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="123" coveredmethods="0" methods="6" elements="22" classes="1" ncloc="46" statements="14" conditionals="2" coveredstatements="0"/>
            <class name="SimulatorMultiDeltaIT">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="6" elements="22" statements="14" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="protectionDeltas() : void" num="31" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="attackingDeltas() : void" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="createAttacker(double) : LegalPlayer" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="simulateDeltas(Function&lt; Double, LegalPlayer &gt;,int) : void" num="45" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="createProtector(double) : LegalPlayer" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="printResults(Map&lt;Double, SimulatorStatistics&gt;) : void" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/SimulatorMultiRunnerIT.java" name="SimulatorMultiRunnerIT.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="61" coveredmethods="0" methods="4" elements="10" classes="1" ncloc="39" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="SimulatorMultiRunnerIT">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="afterAll() : void" num="30" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SimulatorMultiRunnerIT(int)" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="data() : Iterable&lt;Object[]&gt;" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="runGamePair() : void" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/SimulatorStatistics.java" name="SimulatorStatistics.java">
            <metrics coveredelements="13" coveredconditionals="2" complexity="12" loc="70" coveredmethods="3" methods="9" elements="29" classes="1" ncloc="54" statements="16" conditionals="4" coveredstatements="8"/>
            <class name="SimulatorStatistics">
               <metrics coveredelements="13" coveredconditionals="2" complexity="12" coveredmethods="3" methods="9" elements="29" statements="16" conditionals="4" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="package" signature="SimulatorStatistics(long,long,long)" num="14" count="4" type="method"/>
            <line num="15" count="4" type="stmt"/>
            <line num="16" count="4" type="stmt"/>
            <line num="17" count="4" type="stmt"/>
            <line complexity="1" visibility="package" signature="getFirstWins() : long" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getSecondWins() : long" num="24" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="plus(SimulatorStatistics) : SimulatorStatistics" num="28" count="1" type="method"/>
            <line num="29" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="equals(Object) : boolean" num="35" count="1" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="37" type="cond"/>
            <line num="38" count="0" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="40" type="cond"/>
            <line num="41" count="0" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getTotalGames() : long" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="EMPTY() : SimulatorStatistics" num="67" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/SimulatorStatisticsTest.java" name="SimulatorStatisticsTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="1" loc="18" coveredmethods="1" methods="1" elements="4" classes="1" ncloc="10" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="SimulatorStatisticsTest">
               <metrics coveredelements="4" complexity="1" methods="1" testruns="1" statements="3" coveredconditionals="0" coveredmethods="1" elements="4" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="addition() : void" num="12" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="14" count="1" type="stmt"/>
            <line num="15" count="1" type="stmt"/>
            <line num="16" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.leokom.games.chess.player.legal.brain.simple">
         <metrics coveredelements="82" complexity="23" loc="233" methods="15" classes="2" statements="59" coveredconditionals="10" coveredmethods="15" elements="86" ncloc="159" files="2" conditionals="12" coveredstatements="57"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/legal/brain/simple/SimpleBrain.java" name="SimpleBrain.java">
            <metrics coveredelements="32" coveredconditionals="10" complexity="10" loc="67" coveredmethods="2" methods="2" elements="36" classes="1" ncloc="44" statements="22" conditionals="12" coveredstatements="20"/>
            <class name="SimpleBrain">
               <metrics coveredelements="32" coveredconditionals="10" complexity="10" coveredmethods="2" methods="2" elements="36" statements="22" conditionals="12" coveredstatements="20"/>
            </class>
            <line complexity="8" visibility="public" signature="findBestMove(Position) : List&lt; Move &gt;" num="27" count="19" type="method"/>
            <line num="29" count="19" type="stmt"/>
            <line falsecount="19" truecount="0" num="29" type="cond"/>
            <line num="30" count="0" type="stmt"/>
            <line num="33" count="19" type="stmt"/>
            <line falsecount="17" truecount="2" num="33" type="cond"/>
            <line num="34" count="2" type="stmt"/>
            <line num="37" count="17" type="stmt"/>
            <line falsecount="9" truecount="8" num="37" type="cond"/>
            <line num="38" count="17" type="stmt"/>
            <line falsecount="9" truecount="8" num="38" type="cond"/>
            <line num="40" count="17" type="stmt"/>
            <line num="41" count="10" type="stmt"/>
            <line num="42" count="10" type="stmt"/>
            <line num="43" count="5" type="stmt"/>
            <line num="44" count="5" type="stmt"/>
            <line num="45" count="5" type="stmt"/>
            <line num="46" count="5" type="stmt"/>
            <line falsecount="1" truecount="4" num="46" type="cond"/>
            <line num="47" count="4" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="53" count="5" type="stmt"/>
            <line num="54" count="5" type="stmt"/>
            <line num="55" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="findBestMoveForOpponent(Position) : Move" num="60" count="2" type="method"/>
            <line num="62" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="62" type="cond"/>
            <line num="63" count="2" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/player/legal/brain/simple/SimpleBrainTest.java" name="SimpleBrainTest.java">
            <metrics coveredelements="50" coveredconditionals="0" complexity="13" loc="166" coveredmethods="13" methods="13" elements="50" classes="1" ncloc="115" statements="37" conditionals="0" coveredstatements="37"/>
            <class name="SimpleBrainTest">
               <metrics coveredelements="50" complexity="13" methods="13" testruns="12" statements="37" coveredconditionals="0" coveredmethods="13" elements="50" testfailures="0" testduration="0.10200000000000002" conditionals="0" coveredstatements="37" testpasses="12"/>
            </class>
            <line complexity="1" visibility="public" signature="prepare() : void" num="19" count="12" type="method"/>
            <line num="21" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="simplePlayerAcceptsDrawInMultiCaseForBlack() : void" num="24" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="26" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="simplePlayerAcceptsDrawInMultiCaseForWhite() : void" num="35" testsuccess="true" count="1" testduration="0.008" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="whiteFirstMove() : void" num="54" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackFirstMove() : void" num="62" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="whiteSecondMove() : void" num="71" testsuccess="true" count="1" testduration="0.009" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="whiteResignOnThirdMove() : void" num="82" testsuccess="true" count="1" testduration="0.014" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackResignOnThirdMove() : void" num="94" testsuccess="true" count="1" testduration="0.016" type="method"/>
            <line num="96" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="noResignIfOpponentResignsOnSecondMove() : void" num="107" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="109" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackSecondMove() : void" num="119" testsuccess="true" count="1" testduration="0.011" type="method"/>
            <line num="121" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="noIllegalMoves() : void" num="132" testsuccess="true" count="1" testduration="0.017" type="method"/>
            <line num="134" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="offerDrawIsAcceptedWhenPlayingWhite() : void" num="145" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="147" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="offerDrawIsAcceptedWhenPlayingBlack() : void" num="156" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="158" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.leokom.games.chess.player.uci">
         <metrics coveredelements="0" complexity="23" loc="141" methods="11" classes="1" statements="56" coveredconditionals="0" coveredmethods="0" elements="79" ncloc="111" files="1" conditionals="12" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/uci/UciPlayer.java" name="UciPlayer.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="23" loc="141" coveredmethods="0" methods="11" elements="79" classes="1" ncloc="111" statements="56" conditionals="12" coveredstatements="0"/>
            <class name="UciPlayer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="23" coveredmethods="0" methods="11" elements="79" statements="56" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="quit() : void" num="20" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="receive(EngineInitializeRequestCommand) : void" num="25" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="receive(EngineSetOptionCommand) : void" num="36" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="receive(EngineDebugCommand) : void" num="41" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="receive(EngineReadyRequestCommand) : void" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="receive(EngineNewGameCommand) : void" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="11" visibility="public" signature="receive(EngineAnalyzeCommand) : void" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="100" type="cond"/>
            <line complexity="3" visibility="public" signature="receive(EngineStartCalculatingCommand) : void" num="104" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="receive(EngineStopCalculatingCommand) : void" num="131" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="receive(EnginePonderHitCommand) : void" num="136" count="0" type="method"/>
         </file>
      </package>
      <package name="com.leokom.games.chess.player.legal.brain.denormalized">
         <metrics coveredelements="130" complexity="40" loc="536" methods="33" classes="15" statements="93" coveredconditionals="9" coveredmethods="32" elements="138" ncloc="328" files="8" conditionals="12" coveredstatements="89"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/legal/brain/denormalized/AttackEvaluator.java" name="AttackEvaluator.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="3" loc="58" coveredmethods="3" methods="3" elements="14" classes="2" ncloc="35" statements="11" conditionals="0" coveredstatements="11"/>
            <class name="AttackEvaluator">
               <metrics coveredelements="3" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="AttackEvaluator.AttackSideEvaluator">
               <metrics coveredelements="11" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="11" statements="9" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="evaluateMove(Position,Move) : double" num="19" count="2117" type="method"/>
            <line num="21" count="2117" type="stmt"/>
            <line num="22" count="2117" type="stmt"/>
            <line complexity="1" visibility="private" signature="getPiecesAttackedBy(Position,Side) : Set&lt;String&gt;" num="28" count="4234" type="method"/>
            <line num="29" count="4234" type="stmt"/>
            <line num="30" count="4234" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluatePosition(Position,Side) : double" num="38" count="4234" type="method"/>
            <line num="40" count="4234" type="stmt"/>
            <line num="44" count="4234" type="stmt"/>
            <line num="45" count="4234" type="stmt"/>
            <line num="47" count="848" type="stmt"/>
            <line num="49" count="848" type="stmt"/>
            <line num="52" count="848" type="stmt"/>
            <line num="54" count="4234" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/legal/brain/denormalized/CenterControlEvaluator.java" name="CenterControlEvaluator.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="2" loc="52" coveredmethods="2" methods="2" elements="7" classes="2" ncloc="26" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="CenterControlEvaluator">
               <metrics coveredelements="3" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="CenterControlEvaluator.CenterControlSideEvaluator">
               <metrics coveredelements="4" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="4" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="evaluateMove(Position,Move) : double" num="29" count="2138" type="method"/>
            <line num="36" count="2138" type="stmt"/>
            <line num="37" count="2138" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluatePosition(Position,Side) : double" num="43" count="4276" type="method"/>
            <line num="45" count="4276" type="stmt"/>
            <line num="47" count="4276" type="stmt"/>
            <line num="49" count="4276" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/legal/brain/denormalized/DenormalizedBrain.java" name="DenormalizedBrain.java">
            <metrics coveredelements="54" coveredconditionals="5" complexity="18" loc="163" coveredmethods="12" methods="13" elements="62" classes="3" ncloc="112" statements="41" conditionals="8" coveredstatements="37"/>
            <class name="DenormalizedBrain">
               <metrics coveredelements="50" coveredconditionals="5" complexity="16" coveredmethods="10" methods="11" elements="58" statements="39" conditionals="8" coveredstatements="35"/>
            </class>
            <class name="DenormalizedBrain.Formula">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="DenormalizedBrain.DenormalizedMasterEvaluator">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="DenormalizedBrain()" num="31" count="14" type="method"/>
            <line num="32" count="14" type="stmt"/>
            <line complexity="1" visibility="package" signature="DenormalizedBrain(EvaluatorWeights)" num="35" count="15" type="method"/>
            <line num="36" count="15" type="stmt"/>
            <line complexity="2" visibility="public" signature="findBestMove(Position) : List&lt; Move &gt;" num="39" count="7" type="method"/>
            <line num="41" count="7" type="stmt"/>
            <line num="43" count="7" type="stmt"/>
            <line falsecount="7" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="47" count="7" type="stmt"/>
            <line num="48" count="7" type="stmt"/>
            <line num="50" count="7" type="stmt"/>
            <line num="51" count="7" type="stmt"/>
            <line num="53" count="7" type="stmt"/>
            <line num="54" count="7" type="stmt"/>
            <line num="56" count="7" type="stmt"/>
            <line complexity="2" visibility="private" signature="logTable(Table&lt;EvaluatorType, Move, Double&gt;,String) : void" num="59" count="21" type="method"/>
            <line num="60" count="21" type="stmt"/>
            <line falsecount="21" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="generateWithWeights(Table&lt;EvaluatorType, Move, Double&gt;) : Table&lt;EvaluatorType, Move, Double&gt;" num="65" count="7" type="method"/>
            <line num="66" count="7" type="stmt"/>
            <line num="68" count="7" type="stmt"/>
            <line num="70" count="7" type="stmt"/>
            <line num="74" count="7" type="stmt"/>
            <line complexity="1" visibility="private" signature="generateInitialTable(Position,Set&lt;Move&gt;) : Table&lt;EvaluatorType, Move, Double&gt;" num="77" count="7" type="method"/>
            <line num="80" count="7" type="stmt"/>
            <line num="82" count="7" type="stmt"/>
            <line num="84" count="49" type="stmt"/>
            <line num="85" count="49" type="stmt"/>
            <line num="87" count="7" type="stmt"/>
            <line complexity="1" visibility="private" signature="generateNormalized(Table&lt;EvaluatorType, Move, Double&gt;) : Table&lt;EvaluatorType, Move, Double&gt;" num="90" count="7" type="method"/>
            <line num="91" count="7" type="stmt"/>
            <line num="93" count="7" type="stmt"/>
            <line num="95" count="49" type="stmt"/>
            <line num="96" count="49" type="stmt"/>
            <line num="97" count="49" type="stmt"/>
            <line num="99" count="49" type="stmt"/>
            <line num="101" count="49" type="stmt"/>
            <line num="106" count="7" type="stmt"/>
            <line complexity="4" visibility="private" signature="getFormula(double,double) : Formula" num="109" count="49" type="method"/>
            <line num="110" count="49" type="stmt"/>
            <line falsecount="15" truecount="34" num="110" type="cond"/>
            <line num="113" count="34" type="stmt"/>
            <line num="116" count="15" type="stmt"/>
            <line falsecount="0" truecount="15" num="116" type="cond"/>
            <line num="118" count="15" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="identityFormula(double,double,Double) : double" num="125" count="323" type="method"/>
            <line num="126" count="323" type="stmt"/>
            <line complexity="1" visibility="private" signature="constantMiddleFormula(double,double,Double) : double" num="130" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="standardizedValueFormula(double,double,Double) : double" num="134" count="692" type="method"/>
            <line num="135" count="692" type="stmt"/>
            <line complexity="1" visibility="package" signature="DenormalizedMasterEvaluator(Table&lt;EvaluatorType, Move, Double&gt;)" num="148" count="7" type="method"/>
            <line num="149" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluateMove(Position,Move) : double" num="152" count="138" type="method"/>
            <line num="159" count="138" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/legal/brain/denormalized/DenormalizedEvaluatorFactory.java" name="DenormalizedEvaluatorFactory.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="2" loc="40" coveredmethods="2" methods="2" elements="12" classes="1" ncloc="27" statements="10" conditionals="0" coveredstatements="10"/>
            <class name="DenormalizedEvaluatorFactory">
               <metrics coveredelements="12" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="12" statements="10" conditionals="0" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 19()" num="19" count="1" type="method"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(EvaluatorType) : Evaluator" num="36" count="12559" type="method"/>
            <line num="38" count="12559" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/legal/brain/denormalized/MaterialEvaluator.java" name="MaterialEvaluator.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="5" loc="53" coveredmethods="5" methods="5" elements="11" classes="2" ncloc="33" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="MaterialEvaluator">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="MaterialEvaluator.MaterialSideEvaluator">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="evaluateMove(Position,Move) : double" num="23" count="2095" type="method"/>
            <line num="25" count="2095" type="stmt"/>
            <line num="26" count="2095" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluatePosition(Position,Side) : double" num="31" count="4190" type="method"/>
            <line num="33" count="4190" type="stmt"/>
            <line complexity="1" visibility="private" signature="isNotAKing(Piece) : boolean" num="38" count="60544" type="method"/>
            <line num="39" count="60544" type="stmt"/>
            <line complexity="1" visibility="private" signature="value(Stream&lt; Piece &gt;) : int" num="42" count="4190" type="method"/>
            <line num="43" count="4190" type="stmt"/>
            <line complexity="1" visibility="package" signature="getValue(PieceType) : int" num="50" count="848" type="method"/>
            <line num="51" count="848" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/legal/brain/denormalized/MobilityEvaluator.java" name="MobilityEvaluator.java">
            <metrics coveredelements="13" coveredconditionals="4" complexity="4" loc="52" coveredmethods="2" methods="2" elements="13" classes="2" ncloc="29" statements="7" conditionals="4" coveredstatements="7"/>
            <class name="MobilityEvaluator">
               <metrics coveredelements="7" coveredconditionals="2" complexity="2" coveredmethods="1" methods="1" elements="7" statements="4" conditionals="2" coveredstatements="4"/>
            </class>
            <class name="MobilityEvaluator.MobilitySideEvaluator">
               <metrics coveredelements="6" coveredconditionals="2" complexity="2" coveredmethods="1" methods="1" elements="6" statements="3" conditionals="2" coveredstatements="3"/>
            </class>
            <line complexity="2" visibility="public" signature="evaluateMove(Position,Move) : double" num="24" count="2113" type="method"/>
            <line num="26" count="2113" type="stmt"/>
            <line num="32" count="2113" type="stmt"/>
            <line falsecount="2102" truecount="11" num="32" type="cond"/>
            <line num="33" count="11" type="stmt"/>
            <line num="36" count="2102" type="stmt"/>
            <line complexity="2" visibility="public" signature="evaluatePosition(Position,Side) : double" num="41" count="4204" type="method"/>
            <line num="43" count="4204" type="stmt"/>
            <line falsecount="2102" truecount="2102" num="43" type="cond"/>
            <line num="44" count="2102" type="stmt"/>
            <line num="47" count="2102" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/legal/brain/denormalized/ProtectionEvaluator.java" name="ProtectionEvaluator.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="2" loc="53" coveredmethods="2" methods="2" elements="5" classes="2" ncloc="21" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="ProtectionEvaluator">
               <metrics coveredelements="3" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="ProtectionEvaluator.ProtectionSideEvaluator">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="evaluateMove(Position,Move) : double" num="37" count="2789" type="method"/>
            <line num="39" count="2789" type="stmt"/>
            <line num="40" count="2789" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluatePosition(Position,Side) : double" num="45" count="5578" type="method"/>
            <line num="48" count="5578" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/player/legal/brain/denormalized/DenormalizedBrainTest.java" name="DenormalizedBrainTest.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="4" loc="65" coveredmethods="4" methods="4" elements="14" classes="1" ncloc="45" statements="10" conditionals="0" coveredstatements="10"/>
            <class name="DenormalizedBrainTest">
               <metrics coveredelements="14" complexity="4" methods="4" testruns="3" statements="10" coveredconditionals="0" coveredmethods="4" elements="14" testfailures="0" testduration="0.157" conditionals="0" coveredstatements="10" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="prepare() : void" num="25" count="3" type="method"/>
            <line num="27" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="canFindMoves() : void" num="30" testsuccess="true" count="1" testduration="0.075" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="beSmartALittle() : void" num="38" testsuccess="true" count="1" testduration="0.009" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="nonStandardEvaluatorWeightsMustNotCrash() : void" num="58" testsuccess="true" count="1" testduration="0.073" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.leokom.games.chess.player.legal.brain.internal.common">
         <metrics coveredelements="39" complexity="15" loc="164" methods="13" classes="5" statements="27" coveredconditionals="2" coveredmethods="11" elements="42" ncloc="105" files="5" conditionals="2" coveredstatements="26"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/legal/brain/internal/common/EvaluatorWeights.java" name="EvaluatorWeights.java">
            <metrics coveredelements="26" coveredconditionals="2" complexity="9" loc="70" coveredmethods="7" methods="7" elements="26" classes="1" ncloc="47" statements="17" conditionals="2" coveredstatements="17"/>
            <class name="EvaluatorWeights">
               <metrics coveredelements="26" coveredconditionals="2" complexity="9" coveredmethods="7" methods="7" elements="26" statements="17" conditionals="2" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="EvaluatorWeights()" num="25" count="52" type="method"/>
            <line num="26" count="52" type="stmt"/>
            <line complexity="1" visibility="public" signature="EvaluatorWeights(Map&lt;EvaluatorType, Double&gt;)" num="33" count="57" type="method"/>
            <line num="34" count="57" type="stmt"/>
            <line num="35" count="55" type="stmt"/>
            <line complexity="3" visibility="private" signature="verifyRange(Map&lt;EvaluatorType, Double&gt;) : void" num="40" count="57" type="method"/>
            <line num="41" count="57" type="stmt"/>
            <line falsecount="55" truecount="2" num="41" type="cond"/>
            <line num="42" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="getStandardWeights() : Map&lt;EvaluatorType, Double &gt;" num="46" count="52" type="method"/>
            <line num="47" count="52" type="stmt"/>
            <line num="49" count="52" type="stmt"/>
            <line num="50" count="52" type="stmt"/>
            <line num="51" count="52" type="stmt"/>
            <line num="52" count="52" type="stmt"/>
            <line num="53" count="52" type="stmt"/>
            <line num="54" count="52" type="stmt"/>
            <line num="55" count="52" type="stmt"/>
            <line num="56" count="52" type="stmt"/>
            <line complexity="1" visibility="public" signature="stream() : Stream&lt;Entry&lt; EvaluatorType, Double &gt;&gt;" num="59" count="3778" type="method"/>
            <line num="60" count="3778" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="63" count="138" type="method"/>
            <line num="64" count="138" type="stmt"/>
            <line complexity="1" visibility="public" signature="asMap() : Map&lt;EvaluatorType, Double&gt;" num="67" count="7" type="method"/>
            <line num="68" count="7" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/legal/brain/internal/common/MaterialValues.java" name="MaterialValues.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="27" coveredmethods="0" methods="1" elements="1" classes="1" ncloc="15" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="MaterialValues">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="MaterialValues()" num="26" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/legal/brain/internal/common/PositionEvaluator.java" name="PositionEvaluator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="10" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="PositionEvaluator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/legal/brain/internal/common/SymmetricEvaluator.java" name="SymmetricEvaluator.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="2" loc="27" coveredmethods="2" methods="2" elements="5" classes="1" ncloc="15" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="SymmetricEvaluator">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="SymmetricEvaluator(SideEvaluator)" num="10" count="14249" type="method"/>
            <line num="11" count="14249" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate(Position) : double" num="20" count="14249" type="method"/>
            <line num="23" count="14249" type="stmt"/>
            <line num="25" count="14249" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/player/legal/brain/internal/common/EvaluatorWeightsTest.java" name="EvaluatorWeightsTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="3" loc="30" coveredmethods="2" methods="3" elements="10" classes="1" ncloc="23" statements="7" conditionals="0" coveredstatements="6"/>
            <class name="EvaluatorWeightsTest">
               <metrics coveredelements="8" complexity="3" methods="3" testruns="3" statements="7" coveredconditionals="0" coveredmethods="2" elements="10" testfailures="1" testduration="0.004" conditionals="0" coveredstatements="6" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="weightsAreImmutable() : void" num="11" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluatorWeightBigger1NotAccepted() : void" num="16" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="18" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluatorWeightLess0NotAccepted() : void" num="24" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.leokom.games.commons.utils">
         <metrics coveredelements="4" complexity="3" loc="42" methods="3" classes="1" statements="2" coveredconditionals="0" coveredmethods="2" elements="5" ncloc="15" files="1" conditionals="0" coveredstatements="2"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/commons/utils/CollectionUtils.java" name="CollectionUtils.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="3" loc="42" coveredmethods="2" methods="3" elements="5" classes="1" ncloc="15" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="CollectionUtils">
               <metrics coveredelements="4" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="5" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="private" signature="CollectionUtils()" num="14" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="enums(Class&lt; T &gt;) : Set&lt; T &gt;" num="22" count="3" type="method"/>
            <line num="23" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="filterMapByValues(Map&lt; K, V &gt;,Predicate&lt; V &gt;) : Stream&lt; Map.Entry&lt; K, V &gt; &gt;" num="35" count="215154" type="method"/>
            <line num="39" count="215154" type="stmt"/>
         </file>
      </package>
      <package name="com.leokom.games.chess.player.legal.brain.random">
         <metrics coveredelements="68" complexity="17" loc="228" methods="15" classes="6" statements="49" coveredconditionals="4" coveredmethods="15" elements="68" ncloc="152" files="6" conditionals="4" coveredstatements="49"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/legal/brain/random/MoveFilter.java" name="MoveFilter.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="19" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="15" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="MoveFilter">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="apply(Set&lt;Move&gt;) : Set&lt;Move&gt;" num="13" count="5" type="method"/>
            <line num="15" count="5" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/legal/brain/random/RandomBrain.java" name="RandomBrain.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="3" loc="46" coveredmethods="3" methods="3" elements="7" classes="1" ncloc="26" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="RandomBrain">
               <metrics coveredelements="7" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="RandomBrain()" num="25" count="4" type="method"/>
            <line num="26" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="RandomBrain(RandomMove,UnaryOperator&lt;Set&lt; Move &gt;&gt;)" num="29" count="4" type="method"/>
            <line num="30" count="4" type="stmt"/>
            <line num="31" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="findBestMove(Position) : List&lt;Move&gt;" num="34" count="2" type="method"/>
            <line num="36" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/legal/brain/random/RandomMove.java" name="RandomMove.java">
            <metrics coveredelements="15" coveredconditionals="4" complexity="4" loc="41" coveredmethods="2" methods="2" elements="15" classes="1" ncloc="22" statements="9" conditionals="4" coveredstatements="9"/>
            <class name="RandomMove">
               <metrics coveredelements="15" coveredconditionals="4" complexity="4" coveredmethods="2" methods="2" elements="15" statements="9" conditionals="4" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="package" signature="RandomMove(IntUnaryOperator)" num="21" count="7" type="method"/>
            <line num="22" count="7" type="stmt"/>
            <line complexity="3" visibility="package" signature="select(Set&lt; Move &gt;) : Optional&lt; Move &gt;" num="25" count="5" type="method"/>
            <line num="26" count="5" type="stmt"/>
            <line num="27" count="5" type="stmt"/>
            <line falsecount="4" truecount="1" num="27" type="cond"/>
            <line num="28" count="1" type="stmt"/>
            <line num="30" count="4" type="stmt"/>
            <line num="31" count="4" type="stmt"/>
            <line num="33" count="4" type="stmt"/>
            <line falsecount="4" truecount="16" num="33" type="cond"/>
            <line num="34" count="16" type="stmt"/>
            <line num="37" count="4" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/player/legal/brain/random/MoveFilterTest.java" name="MoveFilterTest.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="3" loc="31" coveredmethods="3" methods="3" elements="9" classes="1" ncloc="24" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="MoveFilterTest">
               <metrics coveredelements="9" complexity="3" methods="3" testruns="3" statements="6" coveredconditionals="0" coveredmethods="3" elements="9" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="6" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="supportEmptyInput() : void" num="14" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="16" count="1" type="stmt"/>
            <line num="17" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="resignFiltered() : void" num="20" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="22" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="drawOfferFiltered() : void" num="26" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/player/legal/brain/random/RandomBrainTest.java" name="RandomBrainTest.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="3" loc="36" coveredmethods="3" methods="3" elements="10" classes="1" ncloc="25" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="RandomBrainTest">
               <metrics coveredelements="10" complexity="3" methods="3" testruns="3" statements="7" coveredconditionals="0" coveredmethods="3" elements="10" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="7" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="brainExistence() : void" num="14" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="16" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="minimalConsistency() : void" num="23" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="supportTerminalPositions() : void" num="30" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/player/legal/brain/random/RandomMoveTest.java" name="RandomMoveTest.java">
            <metrics coveredelements="25" coveredconditionals="0" complexity="3" loc="55" coveredmethods="3" methods="3" elements="25" classes="1" ncloc="40" statements="22" conditionals="0" coveredstatements="22"/>
            <class name="RandomMoveTest">
               <metrics coveredelements="25" complexity="3" methods="3" testruns="3" statements="22" coveredconditionals="0" coveredmethods="3" elements="25" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="22" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="singleMoveSelectable() : void" num="14" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="16" count="1" type="stmt"/>
            <line num="17" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="exactMoveSelectedFromMiddle() : void" num="24" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="26" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="exactMoveSelectedFromMax() : void" num="41" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.leokom.games.chess.player">
         <metrics coveredelements="40" complexity="11" loc="192" methods="9" classes="2" statements="29" coveredconditionals="3" coveredmethods="9" elements="42" ncloc="82" files="2" conditionals="4" coveredstatements="28"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/Player.java" name="Player.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="97" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="15" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="Player">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="package" signature="name() : String" num="94" count="39" type="method"/>
            <line num="95" count="39" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/player/PlayerBuilder.java" name="PlayerBuilder.java">
            <metrics coveredelements="38" coveredconditionals="3" complexity="10" loc="95" coveredmethods="8" methods="8" elements="40" classes="1" ncloc="67" statements="28" conditionals="4" coveredstatements="27"/>
            <class name="PlayerBuilder">
               <metrics coveredelements="38" coveredconditionals="3" complexity="10" coveredmethods="8" methods="8" elements="40" statements="28" conditionals="4" coveredstatements="27"/>
            </class>
            <line complexity="1" visibility="public" signature="PlayerBuilder(Player)" num="31" count="11" type="method"/>
            <line num="32" count="11" type="stmt"/>
            <line num="33" count="11" type="stmt"/>
            <line num="34" count="11" type="stmt"/>
            <line num="36" count="11" type="stmt"/>
            <line num="38" count="11" type="stmt"/>
            <line complexity="1" visibility="private" signature="updatePositionByOpponentMove() : void" num="41" count="11" type="method"/>
            <line num="42" count="11" type="stmt"/>
            <line num="44" count="11" type="stmt"/>
            <line num="47" count="20" type="stmt"/>
            <line num="48" count="20" type="stmt"/>
            <line num="49" count="20" type="stmt"/>
            <line num="50" count="20" type="stmt"/>
            <line complexity="1" visibility="private" signature="updatePosition(Move) : void" num="54" count="44" type="method"/>
            <line num="55" count="44" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(Move) : PlayerBuilder" num="58" count="15" type="method"/>
            <line num="59" count="15" type="stmt"/>
            <line num="60" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="moveMulti(Move) : PlayerBuilder" num="63" count="2" type="method"/>
            <line num="64" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(String,String) : PlayerBuilder" num="68" count="12" type="method"/>
            <line num="69" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : Player" num="72" count="11" type="method"/>
            <line num="73" count="11" type="stmt"/>
            <line num="74" count="7" type="stmt"/>
            <line num="75" count="7" type="stmt"/>
            <line num="78" count="11" type="stmt"/>
            <line complexity="3" visibility="private" signature="doMove() : void" num="81" count="27" type="method"/>
            <line num="82" count="27" type="stmt"/>
            <line falsecount="17" truecount="10" num="82" type="cond"/>
            <line num="83" count="10" type="stmt"/>
            <line num="86" count="17" type="stmt"/>
            <line falsecount="17" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="91" count="17" type="stmt"/>
            <line num="92" count="17" type="stmt"/>
            <line num="93" count="17" type="stmt"/>
         </file>
      </package>
      <package name="com.leokom.games.chess.player.legal">
         <metrics coveredelements="268" complexity="61" loc="617" methods="48" classes="5" statements="209" coveredconditionals="20" coveredmethods="45" elements="281" ncloc="417" files="4" conditionals="24" coveredstatements="203"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/legal/LegalPlayer.java" name="LegalPlayer.java">
            <metrics coveredelements="92" coveredconditionals="16" complexity="30" loc="193" coveredmethods="20" methods="20" elements="99" classes="1" ncloc="143" statements="59" conditionals="20" coveredstatements="56"/>
            <class name="LegalPlayer">
               <metrics coveredelements="92" coveredconditionals="16" complexity="30" coveredmethods="20" methods="20" elements="99" statements="59" conditionals="20" coveredstatements="56"/>
            </class>
            <line complexity="1" visibility="public" signature="LegalPlayer()" num="34" count="9" type="method"/>
            <line num="35" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="LegalPlayer(GenericBrain&lt; Position, Move &gt;)" num="38" count="40" type="method"/>
            <line num="39" count="40" type="stmt"/>
            <line complexity="1" visibility="public" signature="LegalPlayer(Evaluator)" num="46" count="17" type="method"/>
            <line num="47" count="17" type="stmt"/>
            <line complexity="1" visibility="public" signature="opponentSuggestsMeStartNewGameWhite() : void" num="50" count="11" type="method"/>
            <line num="52" count="11" type="stmt"/>
            <line num="53" count="11" type="stmt"/>
            <line num="54" count="11" type="stmt"/>
            <line num="55" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="opponentSuggestsMeStartNewGameBlack() : void" num="58" count="18" type="method"/>
            <line num="60" count="18" type="stmt"/>
            <line num="61" count="18" type="stmt"/>
            <line num="62" count="18" type="stmt"/>
            <line complexity="2" visibility="public" signature="opponentMoved(Move) : void" num="65" count="37" type="method"/>
            <line num="67" count="37" type="stmt"/>
            <line num="69" count="37" type="stmt"/>
            <line falsecount="37" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="74" count="37" type="stmt"/>
            <line num="77" count="37" type="stmt"/>
            <line complexity="1" visibility="private" signature="updatePositionByOpponentMove(Move) : void" num="80" count="39" type="method"/>
            <line num="81" count="39" type="stmt"/>
            <line complexity="7" visibility="package" signature="executeOurMove() : void" num="85" count="54" type="method"/>
            <line num="86" count="54" type="stmt"/>
            <line falsecount="52" truecount="2" num="86" type="cond"/>
            <line num="87" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="91" count="52" type="stmt"/>
            <line falsecount="49" truecount="3" num="91" type="cond"/>
            <line num="92" count="3" type="stmt"/>
            <line num="93" count="3" type="stmt"/>
            <line num="98" count="49" type="stmt"/>
            <line falsecount="45" truecount="4" num="98" type="cond"/>
            <line num="99" count="4" type="stmt"/>
            <line num="101" count="4" type="stmt"/>
            <line num="102" count="4" type="stmt"/>
            <line falsecount="1" truecount="3" num="102" type="cond"/>
            <line num="103" count="3" type="stmt"/>
            <line num="104" count="3" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="109" count="4" type="stmt"/>
            <line num="112" count="45" type="stmt"/>
            <line num="113" count="45" type="stmt"/>
            <line falsecount="45" truecount="0" num="113" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="45" type="stmt"/>
            <line falsecount="45" truecount="0" num="116" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line num="120" count="45" type="stmt"/>
            <line complexity="1" visibility="private" signature="executeMoves(List&lt; Move &gt;) : void" num="123" count="48" type="method"/>
            <line num="124" count="48" type="stmt"/>
            <line num="125" count="48" type="stmt"/>
            <line complexity="3" visibility="private" signature="getWinningSideDescription() : String" num="128" count="12" type="method"/>
            <line num="129" count="12" type="stmt"/>
            <line falsecount="6" truecount="6" num="129" type="cond"/>
            <line falsecount="0" truecount="6" num="131" type="cond"/>
            <line complexity="2" visibility="private" signature="updatePositionByOurMove(Move) : void" num="135" count="55" type="method"/>
            <line num="136" count="55" type="stmt"/>
            <line num="137" count="55" type="stmt"/>
            <line num="138" count="55" type="stmt"/>
            <line num="139" count="55" type="stmt"/>
            <line falsecount="46" truecount="9" num="139" type="cond"/>
            <line num="140" count="9" type="stmt"/>
            <line complexity="1" visibility="private" signature="logTerminal(String) : void" num="144" count="12" type="method"/>
            <line num="145" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="setOpponent(Player) : void" num="148" count="40" type="method"/>
            <line num="150" count="40" type="stmt"/>
            <line complexity="1" visibility="public" signature="switchToRecodingMode() : void" num="153" count="4" type="method"/>
            <line num="155" count="4" type="stmt"/>
            <line num="156" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="leaveRecordingMode() : void" num="159" count="13" type="method"/>
            <line num="161" count="13" type="stmt"/>
            <line num="162" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="joinGameForSideToMove() : void" num="165" count="2" type="method"/>
            <line num="167" count="2" type="stmt"/>
            <line num="168" count="2" type="stmt"/>
            <line num="169" count="2" type="stmt"/>
            <line num="170" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="setPosition(Position,Side) : void" num="175" count="12" type="method"/>
            <line num="176" count="12" type="stmt"/>
            <line num="177" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPosition() : Position" num="180" count="11" type="method"/>
            <line num="182" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="isRecordingMode() : boolean" num="185" count="1" type="method"/>
            <line num="186" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="189" count="39" type="method"/>
            <line num="191" count="39" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/player/legal/LegalPlayerNameTest.java" name="LegalPlayerNameTest.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="3" loc="26" coveredmethods="3" methods="3" elements="6" classes="1" ncloc="21" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="LegalPlayerNameTest">
               <metrics coveredelements="6" complexity="3" methods="3" testruns="3" statements="3" coveredconditionals="0" coveredmethods="3" elements="6" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="3" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="denormalizedBrain() : void" num="12" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="14" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="normalizedBrain() : void" num="17" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="19" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="simpleBrain() : void" num="22" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="24" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/player/legal/LegalPlayerSelfPlayTest.java" name="LegalPlayerSelfPlayTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="37" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="20" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="LegalPlayerSelfPlayTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="twoLegalPlayers() : void" num="20" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getLegalPlayer() : LegalPlayer" num="25" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="secondTestInfluence() : void" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/player/legal/LegalPlayerTest.java" name="LegalPlayerTest.java">
            <metrics coveredelements="170" coveredconditionals="4" complexity="25" loc="361" coveredmethods="22" methods="22" elements="170" classes="2" ncloc="233" statements="144" conditionals="4" coveredstatements="144"/>
            <class name="LegalPlayerTest">
               <metrics coveredelements="159" complexity="21" methods="21" testruns="18" statements="138" coveredconditionals="0" coveredmethods="21" elements="159" testfailures="0" testduration="1.1969999999999998" conditionals="0" coveredstatements="138" testpasses="18"/>
            </class>
            <class name="LegalPlayerTest.EvaluatorToSpeedUpObligatoryDraw">
               <metrics coveredelements="11" coveredconditionals="4" complexity="4" coveredmethods="1" methods="1" elements="11" statements="6" conditionals="4" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="26" count="18" type="method"/>
            <line num="28" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="noBrainsAskingInTerminalPosition() : void" num="31" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="legalPlayerCorrectWhenObligatoryDrawAchievedByOpponentMove() : void" num="43" testsuccess="true" count="1" testduration="0.115" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="evaluateMove(Position,Move) : double" num="66" count="21" type="method"/>
            <line num="68" count="21" type="stmt"/>
            <line falsecount="20" truecount="1" num="68" type="cond"/>
            <line num="69" count="1" type="stmt"/>
            <line num="72" count="20" type="stmt"/>
            <line num="73" count="20" type="stmt"/>
            <line falsecount="16" truecount="4" num="73" type="cond"/>
            <line num="74" count="4" type="stmt"/>
            <line num="77" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="legalPlayerCorrectWhenObligatoryDrawAchievedByHisMove() : void" num="81" testsuccess="true" count="1" testduration="0.02" type="method"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="legalPlayerCreation() : void" num="95" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="legalPlayerExecutesSingleAllowedMove() : void" num="101" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="getLegalPlayer() : LegalPlayer" num="121" count="16" type="method"/>
            <line num="122" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="legalPlayerExecutesSingleAllowedMoveTriangulate() : void" num="127" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="noProblemsWhenNextMoveGivesPossibilityToCheck() : void" num="144" testsuccess="true" count="1" testduration="0.037" type="method"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="legalPlayerCanMoveFirstAfterRun() : void" num="161" testsuccess="true" count="1" testduration="0.094" type="method"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="legalPlayerCanMoveFirst() : void" num="171" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="initialPositionPossibleMovement() : void" num="187" testsuccess="true" count="1" testduration="0.098" type="method"/>
            <line num="189" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="secondMoveCanAlsoBeDone() : void" num="198" testsuccess="true" count="1" testduration="0.219" type="method"/>
            <line num="200" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="secondMoveTriangulate() : void" num="215" testsuccess="true" count="1" testduration="0.239" type="method"/>
            <line num="217" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="noCrashAfterKnightMove() : void" num="224" testsuccess="true" count="1" testduration="0.225" type="method"/>
            <line num="226" count="1" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line num="230" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="proveNeedToUpdatePositionAfterOurMove() : void" num="234" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="236" count="1" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line num="239" count="1" type="stmt"/>
            <line num="242" count="1" type="stmt"/>
            <line num="243" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="246" count="1" type="stmt"/>
            <line num="248" count="1" type="stmt"/>
            <line num="250" count="1" type="stmt"/>
            <line num="252" count="1" type="stmt"/>
            <line num="254" count="1" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line num="257" count="1" type="stmt"/>
            <line num="258" count="1" type="stmt"/>
            <line num="260" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="proveNeedToUpdatePositionAfterOurMoveInRecursiveCase() : void" num="264" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="266" count="1" type="stmt"/>
            <line num="267" count="1" type="stmt"/>
            <line num="269" count="1" type="stmt"/>
            <line num="272" count="1" type="stmt"/>
            <line num="273" count="1" type="stmt"/>
            <line num="274" count="1" type="stmt"/>
            <line num="276" count="1" type="stmt"/>
            <line num="278" count="1" type="stmt"/>
            <line num="280" count="1" type="stmt"/>
            <line num="282" count="1" type="stmt"/>
            <line num="284" count="1" type="stmt"/>
            <line num="286" count="1" type="stmt"/>
            <line num="288" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="getAnswerToH8H7(LegalPlayer) : Answer&lt;?&gt;" num="291" count="1" type="method"/>
            <line num="292" count="1" type="stmt"/>
            <line num="293" count="1" type="stmt"/>
            <line num="294" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="blackMoving() : void" num="298" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="300" count="1" type="stmt"/>
            <line num="301" count="1" type="stmt"/>
            <line num="303" count="1" type="stmt"/>
            <line num="305" count="1" type="stmt"/>
            <line num="306" count="1" type="stmt"/>
            <line num="308" count="1" type="stmt"/>
            <line num="310" count="1" type="stmt"/>
            <line num="312" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="noMovementWhenOfferDraw() : void" num="319" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="321" count="1" type="stmt"/>
            <line num="322" count="1" type="stmt"/>
            <line num="324" count="1" type="stmt"/>
            <line num="325" count="1" type="stmt"/>
            <line num="326" count="1" type="stmt"/>
            <line num="327" count="1" type="stmt"/>
            <line num="329" count="1" type="stmt"/>
            <line num="331" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="legalPlayerCanStartNewGameInMiddleOfExisting() : void" num="337" testsuccess="true" count="1" testduration="0.126" type="method"/>
            <line num="339" count="1" type="stmt"/>
            <line num="340" count="1" type="stmt"/>
            <line num="342" count="1" type="stmt"/>
            <line num="345" count="1" type="stmt"/>
            <line num="346" count="1" type="stmt"/>
            <line num="347" count="1" type="stmt"/>
            <line num="349" count="1" type="stmt"/>
            <line num="351" count="1" type="stmt"/>
            <line num="352" count="1" type="stmt"/>
            <line num="354" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.leokom.games.chess.player.winboard">
         <metrics coveredelements="724" complexity="171" loc="2148" methods="144" classes="24" statements="553" coveredconditionals="43" coveredmethods="139" elements="741" ncloc="1279" files="23" conditionals="44" coveredstatements="542"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/winboard/Communicator.java" name="Communicator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="23" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Communicator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/winboard/ForceListener.java" name="ForceListener.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="9" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ForceListener">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/winboard/GameOverListener.java" name="GameOverListener.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="18" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="GameOverListener">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/winboard/GoListener.java" name="GoListener.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="14" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="GoListener">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/winboard/IntParameterListener.java" name="IntParameterListener.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="9" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="IntParameterListener">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/winboard/NewListener.java" name="NewListener.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="8" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="NewListener">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/winboard/NoParametersListener.java" name="NoParametersListener.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="9" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="NoParametersListener">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/winboard/OfferDrawListener.java" name="OfferDrawListener.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="11" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="OfferDrawListener">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/winboard/ProtoverListener.java" name="ProtoverListener.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="19" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ProtoverListener">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/winboard/QuitListener.java" name="QuitListener.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="11" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="QuitListener">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/winboard/StringParameterListener.java" name="StringParameterListener.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="12" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="StringParameterListener">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/winboard/UserMoveListener.java" name="UserMoveListener.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="11" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="UserMoveListener">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/winboard/WinboardCommander.java" name="WinboardCommander.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="89" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="26" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="WinboardCommander">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/winboard/WinboardCommanderImpl.java" name="WinboardCommanderImpl.java">
            <metrics coveredelements="70" coveredconditionals="9" complexity="30" loc="214" coveredmethods="25" methods="25" elements="72" classes="1" ncloc="127" statements="37" conditionals="10" coveredstatements="36"/>
            <class name="WinboardCommanderImpl">
               <metrics coveredelements="70" coveredconditionals="9" complexity="30" coveredmethods="25" methods="25" elements="72" statements="37" conditionals="10" coveredstatements="36"/>
            </class>
            <line complexity="1" visibility="package" signature="WinboardCommanderImpl(Communicator)" num="35" count="72" type="method"/>
            <line num="36" count="72" type="stmt"/>
            <line complexity="1" visibility="public" signature="startInit() : void" num="42" count="46" type="method"/>
            <line num="44" count="46" type="stmt"/>
            <line complexity="1" visibility="public" signature="enableUserMovePrefixes() : void" num="47" count="1" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="finishInit() : void" num="52" count="1" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="agreeToDrawOffer() : void" num="57" count="2" type="method"/>
            <line num="64" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="opponentMoved(String) : void" num="67" count="23" type="method"/>
            <line num="73" count="23" type="stmt"/>
            <line complexity="1" visibility="public" signature="offerDraw() : void" num="76" count="2" type="method"/>
            <line num="78" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="resign() : void" num="81" count="4" type="method"/>
            <line num="83" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="onProtover(ProtoverListener) : void" num="87" count="49" type="method"/>
            <line num="89" count="49" type="stmt"/>
            <line complexity="1" visibility="public" signature="onGo(GoListener) : void" num="92" count="47" type="method"/>
            <line num="94" count="47" type="stmt"/>
            <line complexity="1" visibility="public" signature="onUserMove(UserMoveListener) : void" num="97" count="47" type="method"/>
            <line num="99" count="47" type="stmt"/>
            <line complexity="1" visibility="public" signature="onOfferDraw(OfferDrawListener) : void" num="102" count="46" type="method"/>
            <line num="104" count="46" type="stmt"/>
            <line complexity="1" visibility="public" signature="onGameOver(GameOverListener) : void" num="107" count="46" type="method"/>
            <line num="109" count="46" type="stmt"/>
            <line complexity="1" visibility="public" signature="onForce(ForceListener) : void" num="112" count="46" type="method"/>
            <line num="114" count="46" type="stmt"/>
            <line complexity="1" visibility="public" signature="onNew(NewListener) : void" num="117" count="46" type="method"/>
            <line num="119" count="46" type="stmt"/>
            <line complexity="1" visibility="public" signature="obligatoryDrawByMovesCount(int) : void" num="122" count="2" type="method"/>
            <line num="124" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="claimDrawByMovesCount(int) : void" num="127" count="1" type="method"/>
            <line num="129" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="informAboutClaimDrawFromUIByMovesCount(int) : void" num="132" count="1" type="method"/>
            <line num="134" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="indicateDrawByMovesCount(int,String) : void" num="137" count="4" type="method"/>
            <line num="138" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="stalemateDraw() : void" num="141" count="6" type="method"/>
            <line num="143" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="checkmate(Side) : void" num="146" count="4" type="method"/>
            <line num="148" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="148" type="cond"/>
            <line num="149" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="illegalMove(String) : void" num="157" count="1" type="method"/>
            <line num="171" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="onXBoard(XBoardListener) : void" num="174" count="46" type="method"/>
            <line num="176" count="46" type="stmt"/>
            <line complexity="1" visibility="public" signature="onQuit(QuitListener) : void" num="179" count="47" type="method"/>
            <line num="181" count="47" type="stmt"/>
            <line complexity="5" visibility="public" signature="processInputFromServer() : void" num="184" count="83" type="method"/>
            <line num="186" count="83" type="stmt"/>
            <line num="188" count="83" type="stmt"/>
            <line falsecount="83" truecount="0" num="188" type="cond"/>
            <line num="189" count="0" type="stmt"/>
            <line num="192" count="83" type="stmt"/>
            <line num="193" count="404" type="stmt"/>
            <line falsecount="367" truecount="37" num="193" type="cond"/>
            <line num="194" count="37" type="stmt"/>
            <line num="198" count="83" type="stmt"/>
            <line num="199" count="135" type="stmt"/>
            <line falsecount="97" truecount="38" num="199" type="cond"/>
            <line num="204" count="38" type="stmt"/>
            <line num="208" count="83" type="stmt"/>
            <line num="209" count="69" type="stmt"/>
            <line falsecount="67" truecount="2" num="209" type="cond"/>
            <line num="210" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/winboard/WinboardCommunicator.java" name="WinboardCommunicator.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="5" loc="71" coveredmethods="3" methods="4" elements="15" classes="1" ncloc="35" statements="11" conditionals="0" coveredstatements="6"/>
            <class name="WinboardCommunicator">
               <metrics coveredelements="9" coveredconditionals="0" complexity="5" coveredmethods="3" methods="4" elements="15" statements="11" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="package" signature="WinboardCommunicator()" num="34" count="11" type="method"/>
            <line num="39" count="11" type="stmt"/>
            <line num="40" count="11" type="stmt"/>
            <line complexity="1" visibility="private" signature="getReaderFromStream(InputStream) : BufferedReader" num="43" count="11" type="method"/>
            <line num="44" count="11" type="stmt"/>
            <line num="47" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="send(String) : void" num="50" count="11" type="method"/>
            <line num="52" count="11" type="stmt"/>
            <line num="54" count="11" type="stmt"/>
            <line complexity="2" visibility="public" signature="receive() : String" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/winboard/WinboardPlayer.java" name="WinboardPlayer.java">
            <metrics coveredelements="127" coveredconditionals="30" complexity="38" loc="335" coveredmethods="17" methods="21" elements="136" classes="2" ncloc="180" statements="85" conditionals="30" coveredstatements="80"/>
            <class name="WinboardPlayer">
               <metrics coveredelements="106" coveredconditionals="26" complexity="33" coveredmethods="14" methods="18" elements="115" statements="71" conditionals="26" coveredstatements="66"/>
            </class>
            <class name="WinboardPlayer.WinboardUserMoveListener">
               <metrics coveredelements="21" coveredconditionals="4" complexity="5" coveredmethods="3" methods="3" elements="21" statements="14" conditionals="4" coveredstatements="14"/>
            </class>
            <line complexity="1" visibility="package" signature="setPosition(Position) : void" num="33" count="14" type="method"/>
            <line num="34" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="WinboardPlayer()" num="54" count="11" type="method"/>
            <line num="55" count="11" type="stmt"/>
            <line complexity="1" visibility="package" signature="WinboardPlayer(WinboardCommander)" num="67" count="52" type="method"/>
            <line num="68" count="52" type="stmt"/>
            <line complexity="4" visibility="package" signature="initCommander(WinboardCommander) : void" num="71" count="61" type="method"/>
            <line num="72" count="61" type="stmt"/>
            <line num="77" count="61" type="stmt"/>
            <line num="79" count="61" type="stmt"/>
            <line num="83" count="61" type="stmt"/>
            <line num="85" count="61" type="stmt"/>
            <line num="87" count="61" type="stmt"/>
            <line num="88" count="61" type="stmt"/>
            <line num="89" count="61" type="stmt"/>
            <line num="90" count="12" type="stmt"/>
            <line num="91" count="12" type="stmt"/>
            <line num="92" count="12" type="stmt"/>
            <line num="95" count="61" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="106" count="61" type="stmt"/>
            <line num="107" count="6" type="stmt"/>
            <line num="112" count="6" type="stmt"/>
            <line num="114" count="6" type="stmt"/>
            <line falsecount="4" truecount="2" num="114" type="cond"/>
            <line num="115" count="2" type="stmt"/>
            <line num="118" count="6" type="stmt"/>
            <line num="121" count="61" type="stmt"/>
            <line num="122" count="6" type="stmt"/>
            <line num="123" count="6" type="stmt"/>
            <line falsecount="4" truecount="2" num="123" type="cond"/>
            <line num="124" count="2" type="stmt"/>
            <line num="130" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="130" type="cond"/>
            <line num="132" count="4" type="stmt"/>
            <line num="134" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="isDrawResult(String) : boolean" num="139" count="4" type="method"/>
            <line num="140" count="4" type="stmt"/>
            <line complexity="2" visibility="private" signature="classifyDrawOfferCommand() : Move" num="147" count="6" type="method"/>
            <line num="148" count="6" type="stmt"/>
            <line falsecount="4" truecount="2" num="148" type="cond"/>
            <line complexity="2" visibility="private" signature="classifyDrawResult() : Move" num="151" count="2" type="method"/>
            <line num="157" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="157" type="cond"/>
            <line complexity="1" visibility="private" signature="canClaimDrawBeExecutedNow() : boolean" num="160" count="8" type="method"/>
            <line num="161" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="opponentSuggestsMeStartNewGameWhite() : void" num="169" count="13" type="method"/>
            <line num="171" count="13" type="stmt"/>
            <line num="172" count="35" type="stmt"/>
            <line falsecount="13" truecount="22" num="173" type="cond"/>
            <line complexity="1" visibility="public" signature="opponentSuggestsMeStartNewGameBlack() : void" num="176" count="0" type="method"/>
            <line complexity="6" visibility="public" signature="opponentMoved(Move) : void" num="186" count="34" type="method"/>
            <line num="188" count="34" type="stmt"/>
            <line num="189" count="36" type="stmt"/>
            <line num="191" count="36" type="stmt"/>
            <line falsecount="32" truecount="4" num="191" type="cond"/>
            <line num="192" count="4" type="stmt"/>
            <line num="194" count="32" type="stmt"/>
            <line falsecount="30" truecount="2" num="194" type="cond"/>
            <line num="195" count="2" type="stmt"/>
            <line num="197" count="30" type="stmt"/>
            <line falsecount="28" truecount="2" num="197" type="cond"/>
            <line num="198" count="2" type="stmt"/>
            <line num="200" count="28" type="stmt"/>
            <line falsecount="27" truecount="1" num="200" type="cond"/>
            <line num="201" count="1" type="stmt"/>
            <line num="204" count="27" type="stmt"/>
            <line num="205" count="27" type="stmt"/>
            <line falsecount="26" truecount="1" num="205" type="cond"/>
            <line num="206" count="1" type="stmt"/>
            <line num="209" count="27" type="stmt"/>
            <line num="211" count="27" type="stmt"/>
            <line complexity="5" visibility="private" signature="detectGameOver() : void" num="219" count="62" type="method"/>
            <line num="220" count="62" type="stmt"/>
            <line falsecount="13" truecount="49" num="220" type="cond"/>
            <line num="221" count="49" type="stmt"/>
            <line num="227" count="13" type="stmt"/>
            <line falsecount="9" truecount="4" num="227" type="cond"/>
            <line num="230" count="4" type="stmt"/>
            <line num="233" count="9" type="stmt"/>
            <line num="234" count="6" type="stmt"/>
            <line num="235" count="6" type="stmt"/>
            <line num="236" count="6" type="stmt"/>
            <line num="237" count="3" type="stmt"/>
            <line num="238" count="3" type="stmt"/>
            <line num="239" count="3" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setOpponent(Player) : void" num="247" count="42" type="method"/>
            <line num="249" count="42" type="stmt"/>
            <line complexity="1" visibility="public" signature="switchToRecodingMode() : void" num="252" count="0" type="method"/>
            <line num="254" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="leaveRecordingMode() : void" num="257" count="0" type="method"/>
            <line num="259" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="joinGameForSideToMove() : void" num="262" count="0" type="method"/>
            <line num="264" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="needShuttingDown() : boolean" num="271" count="3" type="method"/>
            <line num="272" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPosition() : Position" num="275" count="7" type="method"/>
            <line num="277" count="7" type="stmt"/>
            <line complexity="2" visibility="public" signature="execute(String) : void" num="291" count="37" type="method"/>
            <line num="293" count="37" type="stmt"/>
            <line num="295" count="37" type="stmt"/>
            <line falsecount="35" truecount="2" num="295" type="cond"/>
            <line num="297" count="2" type="stmt"/>
            <line num="298" count="2" type="stmt"/>
            <line num="301" count="35" type="stmt"/>
            <line num="303" count="35" type="stmt"/>
            <line num="309" count="35" type="stmt"/>
            <line complexity="2" visibility="private" signature="translateMove(String) : Move" num="317" count="37" type="method"/>
            <line num="318" count="37" type="stmt"/>
            <line num="319" count="37" type="stmt"/>
            <line falsecount="36" truecount="1" num="319" type="cond"/>
            <line num="320" count="1" type="stmt"/>
            <line num="323" count="37" type="stmt"/>
            <line num="324" count="37" type="stmt"/>
            <line num="326" count="37" type="stmt"/>
            <line complexity="1" visibility="private" signature="isPromotion(String) : boolean" num="329" count="37" type="method"/>
            <line num="332" count="37" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/chess/player/winboard/XBoardListener.java" name="XBoardListener.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="11" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="XBoardListener">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/player/winboard/WinBoardCommanderReceiveTest.java" name="WinBoardCommanderReceiveTest.java">
            <metrics coveredelements="126" coveredconditionals="0" complexity="19" loc="246" coveredmethods="19" methods="19" elements="126" classes="1" ncloc="167" statements="107" conditionals="0" coveredstatements="107"/>
            <class name="WinBoardCommanderReceiveTest">
               <metrics coveredelements="126" complexity="19" methods="19" testruns="18" statements="107" coveredconditionals="0" coveredmethods="19" elements="126" testfailures="0" testduration="0.09600000000000002" conditionals="0" coveredstatements="107" testpasses="18"/>
            </class>
            <line complexity="1" visibility="public" signature="force() : void" num="13" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="15" count="1" type="stmt"/>
            <line num="16" count="1" type="stmt"/>
            <line num="17" count="1" type="stmt"/>
            <line num="18" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="commandNew() : void" num="24" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="xboard() : void" num="36" testsuccess="true" count="1" testduration="0.008" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="opponentOffersDraw() : void" num="49" testsuccess="true" count="1" testduration="0.027" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="opponentGameOver() : void" num="62" testsuccess="true" count="1" testduration="0.008" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="userMove() : void" num="77" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="userMoveTriangulate() : void" num="89" testsuccess="true" count="1" testduration="0.008" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="nonGoReceived() : void" num="101" testsuccess="true" count="1" testduration="0.009" type="method"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="goReceived() : void" num="114" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="goReceivedNoListenerConnection() : void" num="127" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="noProtoverLineSent() : void" num="139" testsuccess="true" count="1" testduration="0.01" type="method"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="protoverLineSent() : void" num="152" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="protoverLineWithVersionSent() : void" num="166" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="listenerNotSetNoCalls() : void" num="180" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="protoverLineSentNoInputNoCalls() : void" num="191" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="193" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="nonQuitLine() : void" num="202" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="204" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="quitLine() : void" num="215" testsuccess="true" count="1" testduration="0.008" type="method"/>
            <line num="217" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line num="223" count="1" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="quitWithoutListenerSet() : void" num="228" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="230" count="1" type="stmt"/>
            <line num="231" count="1" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="getReceiveCommunicator(String) : Communicator" num="241" count="18" type="method"/>
            <line num="242" count="18" type="stmt"/>
            <line num="243" count="18" type="stmt"/>
            <line num="244" count="18" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/player/winboard/WinBoardCommanderSendTest.java" name="WinBoardCommanderSendTest.java">
            <metrics coveredelements="29" coveredconditionals="0" complexity="10" loc="89" coveredmethods="10" methods="10" elements="29" classes="1" ncloc="57" statements="19" conditionals="0" coveredstatements="19"/>
            <class name="WinBoardCommanderSendTest">
               <metrics coveredelements="29" complexity="10" methods="10" testruns="9" statements="19" coveredconditionals="0" coveredmethods="10" elements="29" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="19" testpasses="9"/>
            </class>
            <line complexity="1" visibility="public" signature="prepare() : void" num="16" count="9" type="method"/>
            <line num="18" count="9" type="stmt"/>
            <line num="19" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="noCommandsSendFromScratch() : void" num="22" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="24" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="initializationStarted() : void" num="27" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="userMovesPrefixes() : void" num="33" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="initializationFinished() : void" num="39" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="agreeToDraw() : void" num="45" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="opponentMove() : void" num="51" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="obligatoryDraw() : void" num="57" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="claimDraw() : void" num="78" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="illegalMove() : void" num="84" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/player/winboard/WinBoardPlayerIntegrationTest.java" name="WinBoardPlayerIntegrationTest.java">
            <metrics coveredelements="115" coveredconditionals="0" complexity="27" loc="385" coveredmethods="27" methods="27" elements="115" classes="1" ncloc="262" statements="88" conditionals="0" coveredstatements="88"/>
            <class name="WinBoardPlayerIntegrationTest">
               <metrics coveredelements="115" complexity="27" methods="27" testruns="24" statements="88" coveredconditionals="0" coveredmethods="27" elements="115" testfailures="0" testduration="0.07300000000000001" conditionals="0" coveredstatements="88" testpasses="24"/>
            </class>
            <line complexity="1" visibility="public" signature="prepare() : void" num="26" count="24" type="method"/>
            <line num="28" count="24" type="stmt"/>
            <line num="29" count="24" type="stmt"/>
            <line num="30" count="24" type="stmt"/>
            <line complexity="1" visibility="public" signature="switchesWinboardToSetUpMode() : void" num="33" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="offerDrawListenerCalled() : void" num="40" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="informWinboardAboutResign() : void" num="59" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="informWinboardAboutAcceptDraw() : void" num="69" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="informOpponentAboutAcceptDraw() : void" num="78" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="resignListenerCalled() : void" num="84" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="claimDrawFromUIReceivedWhenAdjudicationEnabled() : void" num="101" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="claimDrawFromUIReceivedWhenAdjudicationDisabled() : void" num="124" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="userMoveNoException() : void" num="142" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="144" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="promotionCorrectlyTranslatedToCommonStandard() : void" num="155" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="157" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="promotionCorrectlyTranslatedFromCommonStandard() : void" num="169" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="171" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="castlingCorrectlyTranslatedToPlayer() : void" num="182" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="184" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="castlingCorrectlyTranslatedToWinboardClient() : void" num="194" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="196" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="checkmateWhenWinboardWins() : void" num="206" testsuccess="true" count="1" testduration="0.01" type="method"/>
            <line num="210" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="obligatoryDraw() : void" num="222" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="224" count="1" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line num="232" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="stalemateSentDueToWinboardMove() : void" num="235" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="237" count="1" type="stmt"/>
            <line num="243" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="246" count="1" type="stmt"/>
            <line num="248" count="1" type="stmt"/>
            <line num="249" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="stalemateSentDueToOpponentMove() : void" num="252" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="254" count="1" type="stmt"/>
            <line num="260" count="1" type="stmt"/>
            <line num="261" count="1" type="stmt"/>
            <line num="263" count="1" type="stmt"/>
            <line num="265" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="checkmateFromPlayerToWinboard() : void" num="272" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="276" count="1" type="stmt"/>
            <line num="283" count="1" type="stmt"/>
            <line num="284" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="resignFromPlayerToWinboard() : void" num="287" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="289" count="1" type="stmt"/>
            <line num="296" count="1" type="stmt"/>
            <line num="297" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="offerDrawFromPlayerToWinboard() : void" num="300" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="302" count="1" type="stmt"/>
            <line num="309" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="resignFromWinboardToPlayer() : void" num="312" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="314" count="1" type="stmt"/>
            <line num="315" count="1" type="stmt"/>
            <line num="321" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="noFalsePositiveResign() : void" num="324" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="326" count="1" type="stmt"/>
            <line num="327" count="1" type="stmt"/>
            <line num="336" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="noFalsePositiveResignWhenWhiteWins() : void" num="339" testsuccess="true" count="1" testduration="0.011" type="method"/>
            <line num="341" count="1" type="stmt"/>
            <line num="342" count="1" type="stmt"/>
            <line num="352" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="noCheckmateNoFalseInforming() : void" num="355" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="358" count="1" type="stmt"/>
            <line num="359" count="1" type="stmt"/>
            <line num="361" count="1" type="stmt"/>
            <line num="366" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertTranslationOfCommandFromPlayerToWinboardClient(Move,String) : void" num="369" count="4" type="method"/>
            <line num="370" count="4" type="stmt"/>
            <line num="371" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertTranslationOfReceivedCommandToMoveForOpponent(String,Move) : void" num="374" count="5" type="method"/>
            <line num="375" count="5" type="stmt"/>
            <line num="377" count="5" type="stmt"/>
            <line num="379" count="5" type="stmt"/>
            <line num="381" count="5" type="stmt"/>
            <line num="383" count="5" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/player/winboard/WinBoardPlayerTest.java" name="WinBoardPlayerTest.java">
            <metrics coveredelements="160" coveredconditionals="0" complexity="21" loc="333" coveredmethods="21" methods="21" elements="160" classes="1" ncloc="210" statements="139" conditionals="0" coveredstatements="139"/>
            <class name="WinBoardPlayerTest">
               <metrics coveredelements="160" complexity="21" methods="21" testruns="17" statements="139" coveredconditionals="0" coveredmethods="21" elements="160" testfailures="0" testduration="0.08099999999999999" conditionals="0" coveredstatements="139" testpasses="17"/>
            </class>
            <line complexity="1" visibility="public" signature="newCommandResetsPosition() : void" num="23" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="executeMoveFromUI(WinboardCommander,String) : void" num="44" count="8" type="method"/>
            <line num="45" count="8" type="stmt"/>
            <line num="46" count="8" type="stmt"/>
            <line num="47" count="8" type="stmt"/>
            <line num="48" count="8" type="stmt"/>
            <line complexity="1" visibility="private" signature="executeDrawOfferOrClaimFromUI(WinboardCommander) : void" num="51" count="1" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="errorMoveIsDetected() : void" num="58" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="correctMoveIsNotReportedAsError() : void" num="69" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="noPositionUpdateForAnotherPlayerInErrorCase() : void" num="80" testsuccess="true" count="1" testduration="0.008" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="offerDrawTransmittedToTheOpponent() : void" num="92" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="makeDrawOfferFromUI(WinboardCommander) : void" num="103" count="2" type="method"/>
            <line num="104" count="2" type="stmt"/>
            <line num="105" count="2" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="creationSwitchesToInitMode() : void" num="112" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="114" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reactionToObligatoryDrawAfterOpponentMove() : void" num="123" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="125" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reactionToClaimDrawFromOpponent() : void" num="142" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="144" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reactionToClaimDrawFromUI() : void" num="163" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="165" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reactionToObligatoryDrawAfterWinboardMove() : void" num="184" testsuccess="true" count="1" testduration="0.033" type="method"/>
            <line num="186" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="correctReactionToDrawByAgreement() : void" num="203" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="205" count="1" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line num="214" count="1" type="stmt"/>
            <line num="216" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="initWinboardPlayer(WinboardPlayer,Player,Position) : void" num="223" count="5" type="method"/>
            <line num="224" count="5" type="stmt"/>
            <line num="225" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="startInitAsEarlyAsPossible() : void" num="228" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="230" count="1" type="stmt"/>
            <line num="233" count="1" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="useCommanderForQuitCommand() : void" num="242" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="244" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line num="247" count="1" type="stmt"/>
            <line num="249" count="1" type="stmt"/>
            <line num="251" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="quitCommandSwitchesShutdownNeed() : void" num="254" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="256" count="1" type="stmt"/>
            <line num="258" count="1" type="stmt"/>
            <line num="260" count="1" type="stmt"/>
            <line num="261" count="1" type="stmt"/>
            <line num="262" count="1" type="stmt"/>
            <line num="265" count="1" type="stmt"/>
            <line num="266" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="quitListenerActsCorrectly() : void" num="272" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="276" count="1" type="stmt"/>
            <line num="278" count="1" type="stmt"/>
            <line num="280" count="1" type="stmt"/>
            <line num="281" count="1" type="stmt"/>
            <line num="283" count="1" type="stmt"/>
            <line num="285" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="useCommanderForQuitCommandRealTest() : void" num="291" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="295" count="1" type="stmt"/>
            <line num="297" count="1" type="stmt"/>
            <line num="299" count="1" type="stmt"/>
            <line num="300" count="1" type="stmt"/>
            <line num="301" count="1" type="stmt"/>
            <line num="303" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="correctProtoverReaction() : void" num="313" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="317" count="1" type="stmt"/>
            <line num="319" count="1" type="stmt"/>
            <line num="322" count="1" type="stmt"/>
            <line num="323" count="1" type="stmt"/>
            <line num="326" count="1" type="stmt"/>
            <line num="328" count="1" type="stmt"/>
            <line num="330" count="1" type="stmt"/>
            <line num="331" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/player/winboard/WinboardLegalIntegrationTest.java" name="WinboardLegalIntegrationTest.java">
            <metrics coveredelements="55" coveredconditionals="0" complexity="12" loc="144" coveredmethods="12" methods="12" elements="55" classes="1" ncloc="104" statements="43" conditionals="0" coveredstatements="43"/>
            <class name="WinboardLegalIntegrationTest">
               <metrics coveredelements="55" complexity="12" methods="12" testruns="9" statements="43" coveredconditionals="0" coveredmethods="12" elements="55" testfailures="0" testduration="0.541" conditionals="0" coveredstatements="43" testpasses="9"/>
            </class>
            <line complexity="1" visibility="public" signature="prepare() : void" num="29" count="9" type="method"/>
            <line num="31" count="9" type="stmt"/>
            <line num="32" count="9" type="stmt"/>
            <line num="35" count="9" type="stmt"/>
            <line num="36" count="9" type="stmt"/>
            <line num="37" count="9" type="stmt"/>
            <line num="39" count="9" type="stmt"/>
            <line complexity="1" visibility="private" signature="setOpponent(LegalPlayer) : void" num="42" count="12" type="method"/>
            <line num="43" count="12" type="stmt"/>
            <line num="44" count="12" type="stmt"/>
            <line num="45" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="legalPlayerCanResignWhenNotHisMove() : void" num="48" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="winboardUnderstandsMultipleMoveWithOfferDraw() : void" num="61" testsuccess="true" count="1" testduration="0.008" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="winboardUnderstandsMultipleMoveWithResign() : void" num="77" testsuccess="true" count="1" testduration="0.026" type="method"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="noMovesBeforeGo() : void" num="92" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="94" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="noCallToGoNothingInReturnExpected() : void" num="99" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="101" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="crashCase() : void" num="106" testsuccess="true" count="1" testduration="0.232" type="method"/>
            <line num="108" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="positionUpdatedUsually() : void" num="111" testsuccess="true" count="1" testduration="0.108" type="method"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="positionResetByNew() : void" num="118" testsuccess="true" count="1" testduration="0.157" type="method"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="leaveForceModeByNew() : void" num="125" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="simulateWinboard(String) : void" num="132" count="9" type="method"/>
            <line num="134" count="9" type="stmt"/>
            <line num="135" count="9" type="stmt"/>
            <line num="136" count="24" type="stmt"/>
            <line num="140" count="9" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/chess/player/winboard/WinboardTestGameBuilder.java" name="WinboardTestGameBuilder.java">
            <metrics coveredelements="33" coveredconditionals="4" complexity="9" loc="77" coveredmethods="5" methods="5" elements="33" classes="1" ncloc="54" statements="24" conditionals="4" coveredstatements="24"/>
            <class name="WinboardTestGameBuilder">
               <metrics coveredelements="33" coveredconditionals="4" complexity="9" coveredmethods="5" methods="5" elements="33" statements="24" conditionals="4" coveredstatements="24"/>
            </class>
            <line complexity="1" visibility="package" signature="WinboardTestGameBuilder(WinboardPlayer,WinboardCommunicator)" num="21" count="11" type="method"/>
            <line num="24" count="11" type="stmt"/>
            <line num="25" count="11" type="stmt"/>
            <line num="27" count="11" type="stmt"/>
            <line num="29" count="11" type="stmt"/>
            <line complexity="4" visibility="package" signature="move(Move) : WinboardTestGameBuilder" num="39" count="36" type="method"/>
            <line num="40" count="36" type="stmt"/>
            <line num="41" count="20" type="stmt"/>
            <line num="43" count="20" type="stmt"/>
            <line falsecount="19" truecount="1" num="44" type="cond"/>
            <line num="45" count="20" type="stmt"/>
            <line num="46" count="20" type="stmt"/>
            <line num="47" count="16" type="stmt"/>
            <line num="48" count="16" type="stmt"/>
            <line num="48" count="16" type="stmt"/>
            <line num="48" count="16" type="stmt"/>
            <line num="50" count="16" type="stmt"/>
            <line num="53" count="36" type="stmt"/>
            <line num="55" count="36" type="stmt"/>
            <line num="56" count="36" type="stmt"/>
            <line complexity="2" visibility="package" signature="play() : void" num="59" count="11" type="method"/>
            <line num="60" count="11" type="stmt"/>
            <line falsecount="9" truecount="2" num="60" type="cond"/>
            <line num="61" count="2" type="stmt"/>
            <line num="64" count="11" type="stmt"/>
            <line num="65" count="11" type="stmt"/>
            <line complexity="1" visibility="package" signature="getOpponent() : Player" num="68" count="3" type="method"/>
            <line num="69" count="3" type="stmt"/>
            <line complexity="1" visibility="package" signature="customWinboardResponse(String) : WinboardTestGameBuilder" num="72" count="2" type="method"/>
            <line num="73" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
         </file>
      </package>
      <package name="com.leokom.games.commons.brain.normalized">
         <metrics coveredelements="112" complexity="31" loc="380" methods="26" classes="4" statements="76" coveredconditionals="10" coveredmethods="26" elements="112" ncloc="242" files="4" conditionals="10" coveredstatements="76"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/commons/brain/normalized/GenericNormalizedBrain.java" name="GenericNormalizedBrain.java">
            <metrics coveredelements="25" coveredconditionals="6" complexity="8" loc="128" coveredmethods="5" methods="5" elements="25" classes="1" ncloc="67" statements="14" conditionals="6" coveredstatements="14"/>
            <class name="GenericNormalizedBrain">
               <metrics coveredelements="25" coveredconditionals="6" complexity="8" coveredmethods="5" methods="5" elements="25" statements="14" conditionals="6" coveredstatements="14"/>
            </class>
            <line complexity="4" visibility="public" signature="GenericNormalizedBrain(GenericEvaluator&lt;S, T&gt;,int,Predicate&lt;T&gt;)" num="51" count="71" type="method"/>
            <line num="52" count="71" type="stmt"/>
            <line falsecount="70" truecount="1" num="52" type="cond"/>
            <line num="53" count="1" type="stmt"/>
            <line num="56" count="70" type="stmt"/>
            <line falsecount="69" truecount="1" num="56" type="cond"/>
            <line num="57" count="1" type="stmt"/>
            <line num="61" count="69" type="stmt"/>
            <line falsecount="14" truecount="55" num="61" type="cond"/>
            <line num="71" count="69" type="stmt"/>
            <line num="72" count="69" type="stmt"/>
            <line complexity="1" visibility="public" signature="findBestMove(S) : List&lt;T&gt;" num="93" count="210" type="method"/>
            <line num="100" count="210" type="stmt"/>
            <line num="107" count="209" type="stmt"/>
            <line num="108" count="209" type="stmt"/>
            <line num="109" count="209" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="112" count="12" type="method"/>
            <line num="114" count="12" type="stmt"/>
            <line complexity="1" visibility="private" signature="getMovesFiltered(S) : Stream&lt;T&gt;" num="117" count="210" type="method"/>
            <line num="118" count="210" type="stmt"/>
            <line complexity="1" visibility="private" signature="getMoveWithMaxRating(Map&lt;T, Double &gt;) : List&lt;T&gt;" num="121" count="209" type="method"/>
            <line num="122" count="209" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/commons/brain/normalized/TwoPliesEvaluator.java" name="TwoPliesEvaluator.java">
            <metrics coveredelements="17" coveredconditionals="4" complexity="4" loc="59" coveredmethods="2" methods="2" elements="17" classes="1" ncloc="32" statements="11" conditionals="4" coveredstatements="11"/>
            <class name="TwoPliesEvaluator">
               <metrics coveredelements="17" coveredconditionals="4" complexity="4" coveredmethods="2" methods="2" elements="17" statements="11" conditionals="4" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="TwoPliesEvaluator(E,Function&lt; E, GenericBrain&lt; S, T &gt; &gt;)" num="23" count="17" type="method"/>
            <line num="24" count="17" type="stmt"/>
            <line num="25" count="17" type="stmt"/>
            <line complexity="3" visibility="public" signature="evaluateMove(S,T) : double" num="34" count="167" type="method"/>
            <line num="36" count="167" type="stmt"/>
            <line num="38" count="167" type="stmt"/>
            <line num="40" count="167" type="stmt"/>
            <line num="43" count="167" type="stmt"/>
            <line falsecount="154" truecount="13" num="43" type="cond"/>
            <line num="44" count="13" type="stmt"/>
            <line num="47" count="167" type="stmt"/>
            <line falsecount="154" truecount="13" num="47" type="cond"/>
            <line num="55" count="167" type="stmt"/>
            <line num="56" count="167" type="stmt"/>
            <line num="57" count="167" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/leokom/games/commons/brain/normalized/ValidatingNormalizedEvaluator.java" name="ValidatingNormalizedEvaluator.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="2" loc="28" coveredmethods="2" methods="2" elements="6" classes="1" ncloc="18" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="ValidatingNormalizedEvaluator">
               <metrics coveredelements="6" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="package" signature="ValidatingNormalizedEvaluator(GenericEvaluator&lt;S, T&gt;)" num="18" count="69" type="method"/>
            <line num="19" count="69" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluateMove(S,T) : double" num="22" count="6058" type="method"/>
            <line num="24" count="6058" type="stmt"/>
            <line num="25" count="6058" type="stmt"/>
            <line num="26" count="6057" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/commons/brain/normalized/GenericNormalizedBrainTest.java" name="GenericNormalizedBrainTest.java">
            <metrics coveredelements="64" coveredconditionals="0" complexity="17" loc="165" coveredmethods="17" methods="17" elements="64" classes="1" ncloc="125" statements="47" conditionals="0" coveredstatements="47"/>
            <class name="GenericNormalizedBrainTest">
               <metrics coveredelements="64" complexity="17" methods="17" testruns="15" statements="47" coveredconditionals="0" coveredmethods="17" elements="64" testfailures="0" testduration="0.7140000000000001" conditionals="0" coveredstatements="47" testpasses="15"/>
            </class>
            <line complexity="1" visibility="public" signature="noMovesNoBestMove() : void" num="15" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="17" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="singlePossibleMoveReturned() : void" num="23" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="betterMoveFound() : void" num="33" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="singlePlyThinkingIsLimited() : void" num="44" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="secondPlyThinkingMustSuggestBetterMove() : void" num="56" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="getSimpleIdEvaluator() : GenericEvaluator&lt;GameStateImpl, GameTransitionImpl&gt;" num="68" count="7" type="method"/>
            <line num="69" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="ifOpponentCanSelectCoolMoveDetectThat() : void" num="72" testsuccess="true" count="1" testduration="0.684" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="secondPlyThinkingNoCrashOnTerminalPosition() : void" num="85" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="87" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="singleMoveMustBeSelectableWhenNextIsTerminal() : void" num="95" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="97" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="movesLeadingToTerminalBetterToSelect() : void" num="108" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="110" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="depthMore2NotSupported() : void" num="122" testsuccess="true" count="1" testduration="0.008" type="method"/>
            <line num="124" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="depthLess1NotSupported() : void" num="127" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="129" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluatorWithWrongResultMustBeDetected() : void" num="134" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="136" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="brainNameRespectsDepthOne() : void" num="140" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="142" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="brainNameRespectsDepthTwo() : void" num="146" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="148" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="allowAll() : Predicate&lt;GameTransitionImpl&gt;" num="152" count="14" type="method"/>
            <line num="153" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="filteringRespected() : void" num="156" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="158" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.leokom.games">
         <metrics coveredelements="4" complexity="1" loc="30" methods="1" classes="2" statements="3" coveredconditionals="0" coveredmethods="1" elements="4" ncloc="19" files="2" conditionals="0" coveredstatements="3"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/GamesPackageMarker.java" name="GamesPackageMarker.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="7" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="GamesPackageMarker">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/leokom/games/PackageArchitectureTest.java" name="PackageArchitectureTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="1" loc="23" coveredmethods="1" methods="1" elements="4" classes="1" ncloc="16" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="PackageArchitectureTest">
               <metrics coveredelements="4" complexity="1" methods="1" testruns="1" statements="3" coveredconditionals="0" coveredmethods="1" elements="4" testfailures="0" testduration="3.797" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="commonsShouldNotDependOnChess() : void" num="13" testsuccess="true" count="1" testduration="3.797" type="method"/>
            <line num="16" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
         </file>
      </package>
   </project>
   <testproject name="Leokom Chess 0.6-SNAPSHOT" timestamp="1594407917741">
      <metrics coveredelements="0" complexity="0" loc="0" methods="0" classes="0" statements="0" packages="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="0" files="0" conditionals="0" coveredstatements="0"/>
   </testproject>
</coverage>