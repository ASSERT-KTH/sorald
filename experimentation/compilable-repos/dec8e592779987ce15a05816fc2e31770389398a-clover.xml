<?xml version="1.0" encoding="UTF-8"?>
<coverage generated="1594127885142" clover="4.4.1">
   <project name="Metrics Parent 4.1.11-SNAPSHOT (Aggregated)" timestamp="1594127879351">
      <metrics coveredelements="4635" complexity="1770" loc="16407" methods="1184" classes="235" statements="3793" packages="27" coveredconditionals="618" coveredmethods="925" elements="5781" ncloc="10747" files="152" conditionals="804" coveredstatements="3092"/>
      <package name="com.codahale.metrics.jvm">
         <metrics coveredelements="213" complexity="66" loc="740" methods="41" classes="12" statements="164" coveredconditionals="29" coveredmethods="36" elements="241" ncloc="488" files="12" conditionals="36" coveredstatements="148"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jvm/src/main/java/com/codahale/metrics/jvm/BufferPoolMetricSet.java" name="BufferPoolMetricSet.java">
            <metrics coveredelements="16" coveredconditionals="2" complexity="4" loc="52" coveredmethods="2" methods="2" elements="16" classes="1" ncloc="40" statements="12" conditionals="2" coveredstatements="12"/>
            <class name="BufferPoolMetricSet">
               <metrics coveredelements="16" coveredconditionals="2" complexity="4" coveredmethods="2" methods="2" elements="16" statements="12" conditionals="2" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="public" signature="BufferPoolMetricSet(MBeanServer)" num="30" count="8" type="method"/>
            <line num="31" count="8" type="stmt"/>
            <line complexity="3" visibility="public" signature="getMetrics() : Map&lt;String, Metric&gt;" num="34" count="8" type="method"/>
            <line num="36" count="8" type="stmt"/>
            <line num="37" count="8" type="stmt"/>
            <line num="38" count="16" type="stmt"/>
            <line falsecount="16" truecount="48" num="38" type="cond"/>
            <line num="39" count="48" type="stmt"/>
            <line num="40" count="48" type="stmt"/>
            <line num="41" count="48" type="stmt"/>
            <line num="42" count="48" type="stmt"/>
            <line num="43" count="48" type="stmt"/>
            <line num="44" count="45" type="stmt"/>
            <line num="46" count="3" type="stmt"/>
            <line num="50" count="8" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jvm/src/main/java/com/codahale/metrics/jvm/CachedThreadStatesGaugeSet.java" name="CachedThreadStatesGaugeSet.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="54" coveredmethods="0" methods="4" elements="9" classes="1" ncloc="26" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="CachedThreadStatesGaugeSet">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CachedThreadStatesGaugeSet(ThreadMXBean,ThreadDeadlockDetector,long,TimeUnit)" num="27" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="loadValue() : ThreadInfo[]" num="31" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CachedThreadStatesGaugeSet(long,TimeUnit)" num="45" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getThreadInfo() : ThreadInfo[]" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jvm/src/main/java/com/codahale/metrics/jvm/ClassLoadingGaugeSet.java" name="ClassLoadingGaugeSet.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="3" loc="35" coveredmethods="2" methods="3" elements="9" classes="1" ncloc="24" statements="6" conditionals="0" coveredstatements="5"/>
            <class name="ClassLoadingGaugeSet">
               <metrics coveredelements="7" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="9" statements="6" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="ClassLoadingGaugeSet()" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassLoadingGaugeSet(ClassLoadingMXBean)" num="23" count="2" type="method"/>
            <line num="24" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMetrics() : Map&lt;String, Metric&gt;" num="27" count="2" type="method"/>
            <line num="29" count="2" type="stmt"/>
            <line num="30" count="2" type="stmt"/>
            <line num="31" count="2" type="stmt"/>
            <line num="33" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jvm/src/main/java/com/codahale/metrics/jvm/CpuTimeClock.java" name="CpuTimeClock.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="19" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="CpuTimeClock">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="getTick() : long" num="15" count="1" type="method"/>
            <line num="17" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jvm/src/main/java/com/codahale/metrics/jvm/FileDescriptorRatioGauge.java" name="FileDescriptorRatioGauge.java">
            <metrics coveredelements="15" coveredconditionals="2" complexity="7" loc="50" coveredmethods="4" methods="4" elements="15" classes="1" ncloc="30" statements="9" conditionals="2" coveredstatements="9"/>
            <class name="FileDescriptorRatioGauge">
               <metrics coveredelements="15" coveredconditionals="2" complexity="7" coveredmethods="4" methods="4" elements="15" statements="9" conditionals="2" coveredstatements="9"/>
            </class>
            <line complexity="2" visibility="package" signature="&lt;clinit&gt;, line 16()" num="16" count="2" type="method"/>
            <line num="17" count="2" type="stmt"/>
            <line num="18" count="2" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="FileDescriptorRatioGauge()" num="28" count="2" type="method"/>
            <line num="29" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="FileDescriptorRatioGauge(OperatingSystemMXBean)" num="37" count="6" type="method"/>
            <line num="38" count="6" type="stmt"/>
            <line complexity="3" visibility="protected" signature="getRatio() : Ratio" num="41" count="4" type="method"/>
            <line num="43" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="43" type="cond"/>
            <line num="44" count="2" type="stmt"/>
            <line num="45" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jvm/src/main/java/com/codahale/metrics/jvm/GarbageCollectorMetricSet.java" name="GarbageCollectorMetricSet.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="3" loc="53" coveredmethods="3" methods="3" elements="11" classes="1" ncloc="34" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="GarbageCollectorMetricSet">
               <metrics coveredelements="11" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="11" statements="8" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="GarbageCollectorMetricSet()" num="30" count="1" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="GarbageCollectorMetricSet(Collection&lt;GarbageCollectorMXBean&gt;)" num="39" count="5" type="method"/>
            <line num="40" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMetrics() : Map&lt;String, Metric&gt;" num="43" count="4" type="method"/>
            <line num="45" count="4" type="stmt"/>
            <line num="46" count="4" type="stmt"/>
            <line num="47" count="5" type="stmt"/>
            <line num="48" count="5" type="stmt"/>
            <line num="49" count="5" type="stmt"/>
            <line num="51" count="4" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jvm/src/main/java/com/codahale/metrics/jvm/JmxAttributeGauge.java" name="JmxAttributeGauge.java">
            <metrics coveredelements="20" coveredconditionals="4" complexity="7" loc="61" coveredmethods="4" methods="4" elements="20" classes="1" ncloc="38" statements="12" conditionals="4" coveredstatements="12"/>
            <class name="JmxAttributeGauge">
               <metrics coveredelements="20" coveredconditionals="4" complexity="7" coveredmethods="4" methods="4" elements="20" statements="12" conditionals="4" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="public" signature="JmxAttributeGauge(ObjectName,String)" num="26" count="22" type="method"/>
            <line num="27" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="JmxAttributeGauge(MBeanServerConnection,ObjectName,String)" num="37" count="72" type="method"/>
            <line num="38" count="72" type="stmt"/>
            <line num="39" count="72" type="stmt"/>
            <line num="40" count="72" type="stmt"/>
            <line complexity="2" visibility="public" signature="getValue() : Object" num="43" count="26" type="method"/>
            <line num="45" count="26" type="stmt"/>
            <line num="46" count="26" type="stmt"/>
            <line num="48" count="3" type="stmt"/>
            <line complexity="3" visibility="private" signature="getObjectName() : ObjectName" num="52" count="26" type="method"/>
            <line num="53" count="26" type="stmt"/>
            <line falsecount="23" truecount="3" num="53" type="cond"/>
            <line num="54" count="3" type="stmt"/>
            <line num="55" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="55" type="cond"/>
            <line num="56" count="2" type="stmt"/>
            <line num="59" count="24" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jvm/src/main/java/com/codahale/metrics/jvm/JvmAttributeGaugeSet.java" name="JvmAttributeGaugeSet.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="3" loc="51" coveredmethods="3" methods="3" elements="10" classes="1" ncloc="32" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="JvmAttributeGaugeSet">
               <metrics coveredelements="10" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="10" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="JvmAttributeGaugeSet()" num="23" count="1" type="method"/>
            <line num="24" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="JvmAttributeGaugeSet(RuntimeMXBean)" num="32" count="6" type="method"/>
            <line num="33" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMetrics() : Map&lt;String, Metric&gt;" num="36" count="5" type="method"/>
            <line num="38" count="5" type="stmt"/>
            <line num="40" count="5" type="stmt"/>
            <line num="41" count="5" type="stmt"/>
            <line num="47" count="5" type="stmt"/>
            <line num="49" count="5" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jvm/src/main/java/com/codahale/metrics/jvm/MemoryUsageGaugeSet.java" name="MemoryUsageGaugeSet.java">
            <metrics coveredelements="44" coveredconditionals="4" complexity="8" loc="106" coveredmethods="6" methods="6" elements="44" classes="1" ncloc="84" statements="34" conditionals="4" coveredstatements="34"/>
            <class name="MemoryUsageGaugeSet">
               <metrics coveredelements="44" coveredconditionals="4" complexity="8" coveredmethods="6" methods="6" elements="44" statements="34" conditionals="4" coveredstatements="34"/>
            </class>
            <line complexity="1" visibility="public" signature="MemoryUsageGaugeSet()" num="32" count="1" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="MemoryUsageGaugeSet(MemoryMXBean,Collection&lt;MemoryPoolMXBean&gt;)" num="36" count="24" type="method"/>
            <line num="38" count="24" type="stmt"/>
            <line num="39" count="24" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMetrics() : Map&lt;String, Metric&gt;" num="42" count="23" type="method"/>
            <line num="44" count="23" type="stmt"/>
            <line num="46" count="23" type="stmt"/>
            <line num="48" count="23" type="stmt"/>
            <line num="50" count="23" type="stmt"/>
            <line num="52" count="23" type="stmt"/>
            <line num="55" count="23" type="stmt"/>
            <line num="56" count="23" type="stmt"/>
            <line num="57" count="23" type="stmt"/>
            <line num="58" count="23" type="stmt"/>
            <line num="59" count="23" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getRatio() : Ratio" num="60" count="1" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="67" count="23" type="stmt"/>
            <line num="68" count="23" type="stmt"/>
            <line num="69" count="23" type="stmt"/>
            <line num="70" count="23" type="stmt"/>
            <line num="71" count="23" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getRatio() : Ratio" num="72" count="1" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="79" count="23" type="stmt"/>
            <line num="80" count="52" type="stmt"/>
            <line num="82" count="52" type="stmt"/>
            <line complexity="2" visibility="protected" signature="getRatio() : Ratio" num="83" count="2" type="method"/>
            <line num="85" count="2" type="stmt"/>
            <line num="86" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="87" type="cond"/>
            <line num="91" count="52" type="stmt"/>
            <line num="92" count="52" type="stmt"/>
            <line num="93" count="52" type="stmt"/>
            <line num="96" count="52" type="stmt"/>
            <line falsecount="27" truecount="25" num="96" type="cond"/>
            <line num="97" count="25" type="stmt"/>
            <line num="101" count="52" type="stmt"/>
            <line num="104" count="23" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jvm/src/main/java/com/codahale/metrics/jvm/ThreadDeadlockDetector.java" name="ThreadDeadlockDetector.java">
            <metrics coveredelements="17" coveredconditionals="2" complexity="4" loc="65" coveredmethods="3" methods="3" elements="17" classes="1" ncloc="41" statements="12" conditionals="2" coveredstatements="12"/>
            <class name="ThreadDeadlockDetector">
               <metrics coveredelements="17" coveredconditionals="2" complexity="4" coveredmethods="3" methods="3" elements="17" statements="12" conditionals="2" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="public" signature="ThreadDeadlockDetector()" num="21" count="3" type="method"/>
            <line num="22" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="ThreadDeadlockDetector(ThreadMXBean)" num="30" count="6" type="method"/>
            <line num="31" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDeadlockedThreads() : Set&lt;String&gt;" num="40" count="5" type="method"/>
            <line num="41" count="5" type="stmt"/>
            <line num="42" count="5" type="stmt"/>
            <line falsecount="4" truecount="1" num="42" type="cond"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="2" type="stmt"/>
            <line num="46" count="2" type="stmt"/>
            <line num="47" count="4" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="4" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jvm/src/main/java/com/codahale/metrics/jvm/ThreadDump.java" name="ThreadDump.java">
            <metrics coveredelements="44" coveredconditionals="13" complexity="15" loc="113" coveredmethods="3" methods="3" elements="61" classes="1" ncloc="75" statements="38" conditionals="20" coveredstatements="28"/>
            <class name="ThreadDump">
               <metrics coveredelements="44" coveredconditionals="13" complexity="15" coveredmethods="3" methods="3" elements="61" statements="38" conditionals="20" coveredstatements="28"/>
            </class>
            <line complexity="1" visibility="public" signature="ThreadDump(ThreadMXBean)" num="21" count="6" type="method"/>
            <line num="22" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="dump(OutputStream) : void" num="30" count="1" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line complexity="13" visibility="public" signature="dump(boolean,boolean,OutputStream) : void" num="47" count="5" type="method"/>
            <line num="48" count="5" type="stmt"/>
            <line num="49" count="5" type="stmt"/>
            <line num="51" count="5" type="stmt"/>
            <line falsecount="5" truecount="97" num="51" type="cond"/>
            <line num="52" count="97" type="stmt"/>
            <line num="53" count="97" type="stmt"/>
            <line num="57" count="97" type="stmt"/>
            <line num="58" count="97" type="stmt"/>
            <line falsecount="41" truecount="56" num="58" type="cond"/>
            <line num="59" count="56" type="stmt"/>
            <line num="62" count="56" type="stmt"/>
            <line num="65" count="41" type="stmt"/>
            <line falsecount="41" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="71" count="97" type="stmt"/>
            <line falsecount="97" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="75" count="97" type="stmt"/>
            <line falsecount="93" truecount="4" num="75" type="cond"/>
            <line num="76" count="4" type="stmt"/>
            <line num="79" count="97" type="stmt"/>
            <line num="80" count="97" type="stmt"/>
            <line falsecount="97" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line num="84" count="97" type="stmt"/>
            <line num="85" count="97" type="stmt"/>
            <line num="87" count="97" type="stmt"/>
            <line falsecount="97" truecount="761" num="87" type="cond"/>
            <line num="88" count="761" type="stmt"/>
            <line num="89" count="761" type="stmt"/>
            <line num="90" count="761" type="stmt"/>
            <line falsecount="761" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="97" count="97" type="stmt"/>
            <line num="99" count="97" type="stmt"/>
            <line num="100" count="97" type="stmt"/>
            <line falsecount="97" truecount="0" num="100" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="109" count="5" type="stmt"/>
            <line num="110" count="5" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jvm/src/main/java/com/codahale/metrics/jvm/ThreadStatesGaugeSet.java" name="ThreadStatesGaugeSet.java">
            <metrics coveredelements="27" coveredconditionals="2" complexity="7" loc="81" coveredmethods="5" methods="5" elements="27" classes="1" ncloc="53" statements="20" conditionals="2" coveredstatements="20"/>
            <class name="ThreadStatesGaugeSet">
               <metrics coveredelements="27" coveredconditionals="2" complexity="7" coveredmethods="5" methods="5" elements="27" statements="20" conditionals="2" coveredstatements="20"/>
            </class>
            <line complexity="1" visibility="public" signature="ThreadStatesGaugeSet()" num="31" count="1" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ThreadStatesGaugeSet(ThreadMXBean,ThreadDeadlockDetector)" num="41" count="10" type="method"/>
            <line num="43" count="10" type="stmt"/>
            <line num="44" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMetrics() : Map&lt;String, Metric&gt;" num="47" count="15" type="method"/>
            <line num="49" count="15" type="stmt"/>
            <line num="51" count="15" type="stmt"/>
            <line num="52" count="90" type="stmt"/>
            <line num="56" count="15" type="stmt"/>
            <line num="57" count="15" type="stmt"/>
            <line num="58" count="15" type="stmt"/>
            <line num="59" count="15" type="stmt"/>
            <line num="60" count="15" type="stmt"/>
            <line num="61" count="15" type="stmt"/>
            <line num="63" count="15" type="stmt"/>
            <line complexity="3" visibility="private" signature="getThreadCount(Thread.State) : int" num="66" count="6" type="method"/>
            <line num="67" count="6" type="stmt"/>
            <line num="68" count="6" type="stmt"/>
            <line num="69" count="6" type="stmt"/>
            <line num="70" count="36" type="stmt"/>
            <line falsecount="30" truecount="6" num="70" type="cond"/>
            <line num="71" count="6" type="stmt"/>
            <line num="74" count="6" type="stmt"/>
            <line complexity="1" visibility="package" signature="getThreadInfo() : ThreadInfo[]" num="77" count="6" type="method"/>
            <line num="78" count="6" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics">
         <metrics coveredelements="1730" complexity="613" loc="5677" methods="433" classes="72" statements="1267" coveredconditionals="247" coveredmethods="367" elements="1988" ncloc="3374" files="46" conditionals="288" coveredstatements="1116"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jcstress/src/main/java/com/codahale/metrics/SlidingTimeWindowArrayReservoirTrimReadTest.java" name="SlidingTimeWindowArrayReservoirTrimReadTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="67" coveredmethods="0" methods="4" elements="16" classes="1" ncloc="59" statements="10" conditionals="2" coveredstatements="0"/>
            <class name="SlidingTimeWindowArrayReservoirTrimReadTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="4" elements="16" statements="10" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="SlidingTimeWindowArrayReservoirTrimReadTest()" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTick() : long" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="actor1(L_Result) : void" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="actor2() : void" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jcstress/src/main/java/com/codahale/metrics/SlidingTimeWindowArrayReservoirWriteReadAllocate.java" name="SlidingTimeWindowArrayReservoirWriteReadAllocate.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="45" coveredmethods="0" methods="4" elements="15" classes="1" ncloc="36" statements="9" conditionals="2" coveredstatements="0"/>
            <class name="SlidingTimeWindowArrayReservoirWriteReadAllocate">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="4" elements="15" statements="9" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="SlidingTimeWindowArrayReservoirWriteReadAllocate()" num="21" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="23" type="cond"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="actor1() : void" num="28" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="actor2() : void" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="arbiter(L_Result) : void" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jcstress/src/main/java/com/codahale/metrics/SlidingTimeWindowArrayReservoirWriteReadTest.java" name="SlidingTimeWindowArrayReservoirWriteReadTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="45" coveredmethods="0" methods="4" elements="10" classes="1" ncloc="35" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="SlidingTimeWindowArrayReservoirWriteReadTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SlidingTimeWindowArrayReservoirWriteReadTest()" num="24" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="actor1() : void" num="28" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="actor2() : void" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="actor3(L_Result) : void" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/main/java/com/codahale/metrics/CachedGauge.java" name="CachedGauge.java">
            <metrics coveredelements="31" coveredconditionals="8" complexity="9" loc="74" coveredmethods="4" methods="4" elements="31" classes="1" ncloc="44" statements="19" conditionals="8" coveredstatements="19"/>
            <class name="CachedGauge">
               <metrics coveredelements="31" coveredconditionals="8" complexity="9" coveredmethods="4" methods="4" elements="31" statements="19" conditionals="8" coveredstatements="19"/>
            </class>
            <line complexity="1" visibility="protected" signature="CachedGauge(long,TimeUnit)" num="24" count="6" type="method"/>
            <line num="25" count="6" type="stmt"/>
            <line complexity="1" visibility="protected" signature="CachedGauge(Clock,long,TimeUnit)" num="35" count="6" type="method"/>
            <line num="36" count="6" type="stmt"/>
            <line num="37" count="6" type="stmt"/>
            <line num="38" count="6" type="stmt"/>
            <line num="39" count="6" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue() : T" num="49" count="29908149" type="method"/>
            <line num="51" count="30029283" type="stmt"/>
            <line num="52" count="30490083" type="stmt"/>
            <line falsecount="28194038" truecount="9995" num="52" type="cond"/>
            <line num="53" count="9996" type="stmt"/>
            <line num="54" count="9994" type="stmt"/>
            <line falsecount="1542" truecount="8451" num="54" type="cond"/>
            <line num="55" count="8453" type="stmt"/>
            <line num="57" count="1542" type="stmt"/>
            <line num="59" count="31395905" type="stmt"/>
            <line complexity="3" visibility="private" signature="shouldLoad() : boolean" num="62" count="29808178" type="method"/>
            <line num="63" count="31873335" type="stmt"/>
            <line num="64" count="30313029" type="stmt"/>
            <line num="65" count="29121940" type="stmt"/>
            <line num="66" count="32235352" type="stmt"/>
            <line falsecount="16048" truecount="30625447" num="66" type="cond"/>
            <line num="67" count="30805556" type="stmt"/>
            <line num="69" count="15966" type="stmt"/>
            <line falsecount="8824" truecount="9988" num="69" type="cond"/>
            <line num="70" count="9988" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/main/java/com/codahale/metrics/ChunkedAssociativeLongArray.java" name="ChunkedAssociativeLongArray.java">
            <metrics coveredelements="118" coveredconditionals="27" complexity="35" loc="200" coveredmethods="14" methods="15" elements="127" classes="2" ncloc="155" statements="80" conditionals="32" coveredstatements="77"/>
            <class name="ChunkedAssociativeLongArray">
               <metrics coveredelements="110" coveredconditionals="27" complexity="33" coveredmethods="12" methods="13" elements="119" statements="74" conditionals="32" coveredstatements="71"/>
            </class>
            <class name="ChunkedAssociativeLongArray.Chunk">
               <metrics coveredelements="8" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="8" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="package" signature="ChunkedAssociativeLongArray()" num="28" count="75" type="method"/>
            <line num="29" count="75" type="stmt"/>
            <line complexity="1" visibility="package" signature="ChunkedAssociativeLongArray(int)" num="32" count="76" type="method"/>
            <line num="33" count="76" type="stmt"/>
            <line complexity="3" visibility="private" signature="allocateChunk() : Chunk" num="36" count="11056" type="method"/>
            <line num="37" count="11056" type="stmt"/>
            <line num="38" count="11056" type="stmt"/>
            <line num="39" count="11056" type="stmt"/>
            <line falsecount="8348" truecount="2708" num="39" type="cond"/>
            <line num="40" count="2708" type="stmt"/>
            <line num="42" count="8348" type="stmt"/>
            <line num="43" count="8348" type="stmt"/>
            <line falsecount="0" truecount="8348" num="43" type="cond"/>
            <line num="44" count="8348" type="stmt"/>
            <line num="45" count="8348" type="stmt"/>
            <line num="46" count="8348" type="stmt"/>
            <line num="47" count="8348" type="stmt"/>
            <line complexity="2" visibility="private" signature="freeChunk(Chunk) : void" num="52" count="11049" type="method"/>
            <line num="53" count="11049" type="stmt"/>
            <line falsecount="0" truecount="11049" num="53" type="cond"/>
            <line num="54" count="11049" type="stmt"/>
            <line complexity="6" visibility="package" signature="put(long,long) : boolean" num="58" count="5005557" type="method"/>
            <line num="59" count="5005557" type="stmt"/>
            <line num="60" count="5005557" type="stmt"/>
            <line falsecount="5005557" truecount="0" num="60" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="5005557" type="stmt"/>
            <line falsecount="4994501" truecount="11056" num="64" type="cond"/>
            <line num="66" count="11056" type="stmt"/>
            <line num="67" count="11056" type="stmt"/>
            <line num="69" count="5005557" type="stmt"/>
            <line num="70" count="5005557" type="stmt"/>
            <line complexity="2" visibility="package" signature="values() : long[]" num="73" count="10025" type="method"/>
            <line num="74" count="10025" type="stmt"/>
            <line num="75" count="10025" type="stmt"/>
            <line falsecount="10025" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="10025" type="stmt"/>
            <line num="80" count="10025" type="stmt"/>
            <line num="81" count="10025" type="stmt"/>
            <line num="82" count="19502" type="stmt"/>
            <line num="83" count="19502" type="stmt"/>
            <line num="84" count="19502" type="stmt"/>
            <line num="85" count="19502" type="stmt"/>
            <line num="87" count="10025" type="stmt"/>
            <line complexity="1" visibility="package" signature="size() : int" num="90" count="63040" type="method"/>
            <line num="91" count="63040" type="stmt"/>
            <line num="92" count="63040" type="stmt"/>
            <line num="93" count="206846" type="stmt"/>
            <line num="95" count="63040" type="stmt"/>
            <line complexity="4" visibility="package" signature="out() : String" num="98" count="2" type="method"/>
            <line num="99" count="2" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line falsecount="2" truecount="7" num="101" type="cond"/>
            <line num="102" count="7" type="stmt"/>
            <line num="103" count="7" type="stmt"/>
            <line num="104" count="7" type="stmt"/>
            <line falsecount="7" truecount="16" num="104" type="cond"/>
            <line num="105" count="16" type="stmt"/>
            <line num="108" count="7" type="stmt"/>
            <line num="109" count="7" type="stmt"/>
            <line falsecount="2" truecount="5" num="109" type="cond"/>
            <line num="110" count="5" type="stmt"/>
            <line num="113" count="2" type="stmt"/>
            <line complexity="6" visibility="package" signature="trim(long,long) : void" num="122" count="82570" type="method"/>
            <line num="128" count="82570" type="stmt"/>
            <line num="129" count="82570" type="stmt"/>
            <line falsecount="0" truecount="82571" num="129" type="cond"/>
            <line num="130" count="82571" type="stmt"/>
            <line num="131" count="82571" type="stmt"/>
            <line falsecount="82570" truecount="1" num="131" type="cond"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="135" count="82570" type="stmt"/>
            <line num="137" count="82570" type="stmt"/>
            <line num="141" count="82570" type="stmt"/>
            <line num="142" count="82570" type="stmt"/>
            <line falsecount="72" truecount="93546" num="142" type="cond"/>
            <line num="143" count="93546" type="stmt"/>
            <line num="144" count="93546" type="stmt"/>
            <line falsecount="82498" truecount="11048" num="144" type="cond"/>
            <line num="145" count="11048" type="stmt"/>
            <line num="146" count="11048" type="stmt"/>
            <line num="148" count="82498" type="stmt"/>
            <line num="150" count="82498" type="stmt"/>
            <line falsecount="7110" truecount="75388" num="150" type="cond"/>
            <line num="151" count="75388" type="stmt"/>
            <line num="152" count="75388" type="stmt"/>
            <line num="154" count="82498" type="stmt"/>
            <line complexity="1" visibility="package" signature="clear() : void" num="159" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isFirstElementIsEmptyOrGreaterEqualThanKey(Chunk,long) : boolean" num="163" count="82571" type="method"/>
            <line num="164" count="82571" type="stmt"/>
            <line complexity="1" visibility="private" signature="isLastElementIsLessThanKey(Chunk,long) : boolean" num="167" count="93546" type="method"/>
            <line num="168" count="93546" type="stmt"/>
            <line complexity="4" visibility="private" signature="findFirstIndexOfGreaterEqualElements(long[],int,int,long) : int" num="171" count="165068" type="method"/>
            <line num="172" count="165068" type="stmt"/>
            <line falsecount="157958" truecount="7110" num="172" type="cond"/>
            <line num="173" count="7110" type="stmt"/>
            <line num="175" count="157958" type="stmt"/>
            <line num="176" count="157958" type="stmt"/>
            <line falsecount="14175" truecount="143783" num="176" type="cond"/>
            <line complexity="1" visibility="private" signature="Chunk(int)" num="188" count="2708" type="method"/>
            <line num="189" count="2708" type="stmt"/>
            <line num="190" count="2708" type="stmt"/>
            <line num="191" count="2708" type="stmt"/>
            <line complexity="1" visibility="private" signature="append(long,long) : void" num="194" count="5005557" type="method"/>
            <line num="195" count="5005557" type="stmt"/>
            <line num="196" count="5005557" type="stmt"/>
            <line num="197" count="5005557" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/main/java/com/codahale/metrics/Clock.java" name="Clock.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="3" loc="46" coveredmethods="3" methods="3" elements="6" classes="3" ncloc="19" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="Clock">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="Clock.UserTimeClock">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="Clock.UserTimeClockHolder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="getTime() : long" num="19" count="1644" type="method"/>
            <line num="20" count="1644" type="stmt"/>
            <line complexity="1" visibility="public" signature="defaultClock() : Clock" num="29" count="1216" type="method"/>
            <line num="30" count="1216" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTick() : long" num="37" count="30486428" type="method"/>
            <line num="39" count="31606017" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/main/java/com/codahale/metrics/ConsoleReporter.java" name="ConsoleReporter.java">
            <metrics coveredelements="147" coveredconditionals="14" complexity="29" loc="357" coveredmethods="20" methods="22" elements="153" classes="2" ncloc="233" statements="117" conditionals="14" coveredstatements="113"/>
            <class name="ConsoleReporter">
               <metrics coveredelements="109" coveredconditionals="14" complexity="17" coveredmethods="10" methods="10" elements="109" statements="85" conditionals="14" coveredstatements="85"/>
            </class>
            <class name="ConsoleReporter.Builder">
               <metrics coveredelements="38" coveredconditionals="0" complexity="12" coveredmethods="10" methods="12" elements="44" statements="32" conditionals="0" coveredstatements="28"/>
            </class>
            <line complexity="1" visibility="public" signature="forRegistry(MetricRegistry) : Builder" num="25" count="11" type="method"/>
            <line num="26" count="11" type="stmt"/>
            <line complexity="1" visibility="private" signature="Builder(MetricRegistry)" num="47" count="11" type="method"/>
            <line num="48" count="11" type="stmt"/>
            <line num="49" count="11" type="stmt"/>
            <line num="50" count="11" type="stmt"/>
            <line num="51" count="11" type="stmt"/>
            <line num="52" count="11" type="stmt"/>
            <line num="53" count="11" type="stmt"/>
            <line num="54" count="11" type="stmt"/>
            <line num="55" count="11" type="stmt"/>
            <line num="56" count="11" type="stmt"/>
            <line num="57" count="11" type="stmt"/>
            <line num="58" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="shutdownExecutorOnStop(boolean) : Builder" num="69" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="scheduleOn(ScheduledExecutorService) : Builder" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="outputTo(PrintStream) : Builder" num="93" count="11" type="method"/>
            <line num="94" count="11" type="stmt"/>
            <line num="95" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="formattedFor(Locale) : Builder" num="104" count="11" type="method"/>
            <line num="105" count="11" type="stmt"/>
            <line num="106" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="withClock(Clock) : Builder" num="115" count="11" type="method"/>
            <line num="116" count="11" type="stmt"/>
            <line num="117" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="formattedFor(TimeZone) : Builder" num="126" count="11" type="method"/>
            <line num="127" count="11" type="stmt"/>
            <line num="128" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="convertRatesTo(TimeUnit) : Builder" num="137" count="11" type="method"/>
            <line num="138" count="11" type="stmt"/>
            <line num="139" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="convertDurationsTo(TimeUnit) : Builder" num="148" count="11" type="method"/>
            <line num="149" count="11" type="stmt"/>
            <line num="150" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="filter(MetricFilter) : Builder" num="159" count="11" type="method"/>
            <line num="160" count="11" type="stmt"/>
            <line num="161" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="disabledMetricAttributes(Set&lt;MetricAttribute&gt;) : Builder" num="171" count="3" type="method"/>
            <line num="172" count="3" type="stmt"/>
            <line num="173" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : ConsoleReporter" num="181" count="11" type="method"/>
            <line num="182" count="11" type="stmt"/>
            <line complexity="1" visibility="private" signature="ConsoleReporter(MetricRegistry,PrintStream,Locale,Clock,TimeZone,TimeUnit,TimeUnit,MetricFilter,ScheduledExecutorService,boolean,Set&lt;MetricAttribute&gt;)" num="203" count="11" type="method"/>
            <line num="214" count="11" type="stmt"/>
            <line num="215" count="11" type="stmt"/>
            <line num="216" count="11" type="stmt"/>
            <line num="217" count="11" type="stmt"/>
            <line num="218" count="11" type="stmt"/>
            <line num="221" count="11" type="stmt"/>
            <line complexity="6" visibility="public" signature="report(SortedMap&lt;String, Gauge&gt;,SortedMap&lt;String, Counter&gt;,SortedMap&lt;String, Histogram&gt;,SortedMap&lt;String, Meter&gt;,SortedMap&lt;String, Timer&gt;) : void" num="224" count="8" type="method"/>
            <line num="231" count="8" type="stmt"/>
            <line num="232" count="8" type="stmt"/>
            <line num="233" count="8" type="stmt"/>
            <line num="235" count="8" type="stmt"/>
            <line falsecount="7" truecount="1" num="235" type="cond"/>
            <line num="236" count="1" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line num="239" count="1" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line num="244" count="8" type="stmt"/>
            <line falsecount="7" truecount="1" num="244" type="cond"/>
            <line num="245" count="1" type="stmt"/>
            <line num="246" count="1" type="stmt"/>
            <line num="247" count="1" type="stmt"/>
            <line num="248" count="1" type="stmt"/>
            <line num="250" count="1" type="stmt"/>
            <line num="253" count="8" type="stmt"/>
            <line falsecount="6" truecount="2" num="253" type="cond"/>
            <line num="254" count="2" type="stmt"/>
            <line num="255" count="2" type="stmt"/>
            <line num="256" count="2" type="stmt"/>
            <line num="257" count="2" type="stmt"/>
            <line num="259" count="2" type="stmt"/>
            <line num="262" count="8" type="stmt"/>
            <line falsecount="6" truecount="2" num="262" type="cond"/>
            <line num="263" count="2" type="stmt"/>
            <line num="264" count="2" type="stmt"/>
            <line num="265" count="2" type="stmt"/>
            <line num="266" count="2" type="stmt"/>
            <line num="268" count="2" type="stmt"/>
            <line num="271" count="8" type="stmt"/>
            <line falsecount="6" truecount="2" num="271" type="cond"/>
            <line num="272" count="2" type="stmt"/>
            <line num="273" count="2" type="stmt"/>
            <line num="274" count="2" type="stmt"/>
            <line num="275" count="2" type="stmt"/>
            <line num="277" count="2" type="stmt"/>
            <line num="280" count="8" type="stmt"/>
            <line num="281" count="8" type="stmt"/>
            <line complexity="1" visibility="private" signature="printMeter(Meter) : void" num="284" count="2" type="method"/>
            <line num="285" count="2" type="stmt"/>
            <line num="286" count="2" type="stmt"/>
            <line num="287" count="2" type="stmt"/>
            <line num="288" count="2" type="stmt"/>
            <line num="289" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="printCounter(Map.Entry&lt;String, Counter&gt;) : void" num="292" count="1" type="method"/>
            <line num="293" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="printGauge(Gauge&lt;?&gt;) : void" num="296" count="1" type="method"/>
            <line num="297" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="printHistogram(Histogram) : void" num="300" count="2" type="method"/>
            <line num="301" count="2" type="stmt"/>
            <line num="302" count="2" type="stmt"/>
            <line num="303" count="2" type="stmt"/>
            <line num="304" count="2" type="stmt"/>
            <line num="305" count="2" type="stmt"/>
            <line num="306" count="2" type="stmt"/>
            <line num="307" count="2" type="stmt"/>
            <line num="308" count="2" type="stmt"/>
            <line num="309" count="2" type="stmt"/>
            <line num="310" count="2" type="stmt"/>
            <line num="311" count="2" type="stmt"/>
            <line num="312" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="printTimer(Timer) : void" num="315" count="2" type="method"/>
            <line num="316" count="2" type="stmt"/>
            <line num="317" count="2" type="stmt"/>
            <line num="318" count="2" type="stmt"/>
            <line num="319" count="2" type="stmt"/>
            <line num="320" count="2" type="stmt"/>
            <line num="321" count="2" type="stmt"/>
            <line num="323" count="2" type="stmt"/>
            <line num="324" count="2" type="stmt"/>
            <line num="325" count="2" type="stmt"/>
            <line num="326" count="2" type="stmt"/>
            <line num="327" count="2" type="stmt"/>
            <line num="328" count="2" type="stmt"/>
            <line num="329" count="2" type="stmt"/>
            <line num="330" count="2" type="stmt"/>
            <line num="331" count="2" type="stmt"/>
            <line num="332" count="2" type="stmt"/>
            <line complexity="2" visibility="private" signature="printWithBanner(String,char) : void" num="335" count="16" type="method"/>
            <line num="336" count="16" type="stmt"/>
            <line num="337" count="16" type="stmt"/>
            <line num="338" count="16" type="stmt"/>
            <line falsecount="16" truecount="1030" num="338" type="cond"/>
            <line num="339" count="1030" type="stmt"/>
            <line num="341" count="16" type="stmt"/>
            <line complexity="2" visibility="private" signature="printIfEnabled(MetricAttribute,String) : void" num="350" count="62" type="method"/>
            <line num="351" count="62" type="stmt"/>
            <line falsecount="51" truecount="11" num="351" type="cond"/>
            <line num="352" count="11" type="stmt"/>
            <line num="355" count="51" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/main/java/com/codahale/metrics/Counter.java" name="Counter.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="6" loc="56" coveredmethods="6" methods="6" elements="12" classes="1" ncloc="24" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="Counter">
               <metrics coveredelements="12" coveredconditionals="0" complexity="6" coveredmethods="6" methods="6" elements="12" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="Counter()" num="11" count="99" type="method"/>
            <line num="12" count="99" type="stmt"/>
            <line complexity="1" visibility="public" signature="inc() : void" num="18" count="47" type="method"/>
            <line num="19" count="47" type="stmt"/>
            <line complexity="1" visibility="public" signature="inc(long) : void" num="27" count="62" type="method"/>
            <line num="28" count="62" type="stmt"/>
            <line complexity="1" visibility="public" signature="dec() : void" num="34" count="36" type="method"/>
            <line num="35" count="36" type="stmt"/>
            <line complexity="1" visibility="public" signature="dec(long) : void" num="43" count="38" type="method"/>
            <line num="44" count="38" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCount() : long" num="52" count="65" type="method"/>
            <line num="54" count="65" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/main/java/com/codahale/metrics/Counting.java" name="Counting.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="13" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Counting">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/main/java/com/codahale/metrics/CsvFileProvider.java" name="CsvFileProvider.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="12" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="CsvFileProvider">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/main/java/com/codahale/metrics/CsvReporter.java" name="CsvReporter.java">
            <metrics coveredelements="82" coveredconditionals="2" complexity="27" loc="336" coveredmethods="18" methods="21" elements="93" classes="2" ncloc="227" statements="68" conditionals="4" coveredstatements="62"/>
            <class name="CsvReporter">
               <metrics coveredelements="48" coveredconditionals="2" complexity="16" coveredmethods="9" methods="10" elements="53" statements="39" conditionals="4" coveredstatements="37"/>
            </class>
            <class name="CsvReporter.Builder">
               <metrics coveredelements="34" coveredconditionals="0" complexity="11" coveredmethods="9" methods="11" elements="40" statements="29" conditionals="0" coveredstatements="25"/>
            </class>
            <line complexity="1" visibility="public" signature="forRegistry(MetricRegistry) : Builder" num="31" count="9" type="method"/>
            <line num="32" count="9" type="stmt"/>
            <line complexity="1" visibility="private" signature="Builder(MetricRegistry)" num="51" count="9" type="method"/>
            <line num="52" count="9" type="stmt"/>
            <line num="53" count="9" type="stmt"/>
            <line num="54" count="9" type="stmt"/>
            <line num="55" count="9" type="stmt"/>
            <line num="56" count="9" type="stmt"/>
            <line num="57" count="9" type="stmt"/>
            <line num="58" count="9" type="stmt"/>
            <line num="59" count="9" type="stmt"/>
            <line num="60" count="9" type="stmt"/>
            <line num="61" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="shutdownExecutorOnStop(boolean) : Builder" num="72" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="scheduleOn(ScheduledExecutorService) : Builder" num="85" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="formatFor(Locale) : Builder" num="96" count="8" type="method"/>
            <line num="97" count="8" type="stmt"/>
            <line num="98" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="convertRatesTo(TimeUnit) : Builder" num="107" count="8" type="method"/>
            <line num="108" count="8" type="stmt"/>
            <line num="109" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="convertDurationsTo(TimeUnit) : Builder" num="118" count="8" type="method"/>
            <line num="119" count="8" type="stmt"/>
            <line num="120" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="withSeparator(String) : Builder" num="129" count="1" type="method"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="withClock(Clock) : Builder" num="140" count="8" type="method"/>
            <line num="141" count="8" type="stmt"/>
            <line num="142" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="filter(MetricFilter) : Builder" num="151" count="8" type="method"/>
            <line num="152" count="8" type="stmt"/>
            <line num="153" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="withCsvFileProvider(CsvFileProvider) : Builder" num="156" count="1" type="method"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="build(File) : CsvReporter" num="168" count="9" type="method"/>
            <line num="169" count="9" type="stmt"/>
            <line complexity="1" visibility="private" signature="CsvReporter(MetricRegistry,File,Locale,String,TimeUnit,TimeUnit,Clock,MetricFilter,ScheduledExecutorService,boolean,CsvFileProvider)" num="195" count="9" type="method"/>
            <line num="206" count="9" type="stmt"/>
            <line num="207" count="9" type="stmt"/>
            <line num="208" count="9" type="stmt"/>
            <line num="209" count="9" type="stmt"/>
            <line num="210" count="9" type="stmt"/>
            <line num="211" count="9" type="stmt"/>
            <line num="213" count="9" type="stmt"/>
            <line num="214" count="9" type="stmt"/>
            <line num="215" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="report(SortedMap&lt;String, Gauge&gt;,SortedMap&lt;String, Counter&gt;,SortedMap&lt;String, Histogram&gt;,SortedMap&lt;String, Meter&gt;,SortedMap&lt;String, Timer&gt;) : void" num="218" count="7" type="method"/>
            <line num="225" count="7" type="stmt"/>
            <line num="227" count="7" type="stmt"/>
            <line num="228" count="2" type="stmt"/>
            <line num="231" count="7" type="stmt"/>
            <line num="232" count="1" type="stmt"/>
            <line num="235" count="7" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line num="239" count="7" type="stmt"/>
            <line num="240" count="2" type="stmt"/>
            <line num="243" count="7" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="reportTimer(long,String,Timer) : void" num="248" count="1" type="method"/>
            <line num="249" count="1" type="stmt"/>
            <line num="251" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="reportMeter(long,String,Meter) : void" num="274" count="2" type="method"/>
            <line num="275" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="reportHistogram(long,String,Histogram) : void" num="287" count="1" type="method"/>
            <line num="288" count="1" type="stmt"/>
            <line num="290" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="reportCounter(long,String,Counter) : void" num="307" count="1" type="method"/>
            <line num="308" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="reportGauge(long,String,Gauge&lt;?&gt;) : void" num="311" count="2" type="method"/>
            <line num="312" count="2" type="stmt"/>
            <line complexity="7" visibility="private" signature="report(long,String,String,String,Object) : void" num="315" count="7" type="method"/>
            <line num="316" count="7" type="stmt"/>
            <line num="317" count="7" type="stmt"/>
            <line num="318" count="7" type="stmt"/>
            <line num="319" count="7" type="stmt"/>
            <line falsecount="0" truecount="7" num="319" type="cond"/>
            <line num="320" count="7" type="stmt"/>
            <line num="320" count="7" type="stmt"/>
            <line num="322" count="7" type="stmt"/>
            <line falsecount="0" truecount="7" num="322" type="cond"/>
            <line num="323" count="7" type="stmt"/>
            <line num="325" count="7" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="sanitize(String) : String" num="333" count="0" type="method"/>
            <line num="334" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/main/java/com/codahale/metrics/DerivativeGauge.java" name="DerivativeGauge.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="33" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="12" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="DerivativeGauge">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="protected" signature="DerivativeGauge(Gauge&lt;F&gt;)" num="17" count="1" type="method"/>
            <line num="18" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : T" num="21" count="1" type="method"/>
            <line num="23" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/main/java/com/codahale/metrics/EWMA.java" name="EWMA.java">
            <metrics coveredelements="23" coveredconditionals="2" complexity="8" loc="108" coveredmethods="7" methods="7" elements="23" classes="1" ncloc="48" statements="14" conditionals="2" coveredstatements="14"/>
            <class name="EWMA">
               <metrics coveredelements="23" coveredconditionals="2" complexity="8" coveredmethods="7" methods="7" elements="23" statements="14" conditionals="2" coveredstatements="14"/>
            </class>
            <line complexity="1" visibility="public" signature="oneMinuteEWMA() : EWMA" num="39" count="842" type="method"/>
            <line num="40" count="842" type="stmt"/>
            <line complexity="1" visibility="public" signature="fiveMinuteEWMA() : EWMA" num="49" count="842" type="method"/>
            <line num="50" count="842" type="stmt"/>
            <line complexity="1" visibility="public" signature="fifteenMinuteEWMA() : EWMA" num="59" count="842" type="method"/>
            <line num="60" count="842" type="stmt"/>
            <line complexity="1" visibility="public" signature="EWMA(double,long,TimeUnit)" num="70" count="2526" type="method"/>
            <line num="71" count="2526" type="stmt"/>
            <line num="72" count="2526" type="stmt"/>
            <line complexity="1" visibility="public" signature="update(long) : void" num="80" count="1082064" type="method"/>
            <line num="81" count="1082064" type="stmt"/>
            <line complexity="2" visibility="public" signature="tick() : void" num="87" count="8772" type="method"/>
            <line num="88" count="8772" type="stmt"/>
            <line num="89" count="8772" type="stmt"/>
            <line num="90" count="8772" type="stmt"/>
            <line falsecount="45" truecount="8727" num="90" type="cond"/>
            <line num="91" count="8727" type="stmt"/>
            <line num="92" count="8727" type="stmt"/>
            <line num="94" count="45" type="stmt"/>
            <line num="95" count="45" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRate(TimeUnit) : double" num="105" count="105" type="method"/>
            <line num="106" count="105" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/main/java/com/codahale/metrics/ExponentialMovingAverages.java" name="ExponentialMovingAverages.java">
            <metrics coveredelements="30" coveredconditionals="5" complexity="10" loc="77" coveredmethods="6" methods="7" elements="33" classes="1" ncloc="53" statements="20" conditionals="6" coveredstatements="19"/>
            <class name="ExponentialMovingAverages">
               <metrics coveredelements="30" coveredconditionals="5" complexity="10" coveredmethods="6" methods="7" elements="33" statements="20" conditionals="6" coveredstatements="19"/>
            </class>
            <line complexity="1" visibility="public" signature="ExponentialMovingAverages()" num="26" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ExponentialMovingAverages(Clock)" num="33" count="841" type="method"/>
            <line num="34" count="841" type="stmt"/>
            <line num="35" count="841" type="stmt"/>
            <line complexity="1" visibility="public" signature="update(long) : void" num="38" count="360687" type="method"/>
            <line num="40" count="360687" type="stmt"/>
            <line num="41" count="360687" type="stmt"/>
            <line num="42" count="360687" type="stmt"/>
            <line complexity="4" visibility="public" signature="tickIfNecessary() : void" num="45" count="360744" type="method"/>
            <line num="47" count="360744" type="stmt"/>
            <line num="48" count="360744" type="stmt"/>
            <line num="49" count="360744" type="stmt"/>
            <line num="50" count="360744" type="stmt"/>
            <line falsecount="358138" truecount="2606" num="50" type="cond"/>
            <line num="51" count="2606" type="stmt"/>
            <line num="52" count="2606" type="stmt"/>
            <line falsecount="0" truecount="2606" num="52" type="cond"/>
            <line num="53" count="2606" type="stmt"/>
            <line num="54" count="2606" type="stmt"/>
            <line falsecount="2606" truecount="2743" num="54" type="cond"/>
            <line num="55" count="2743" type="stmt"/>
            <line num="56" count="2743" type="stmt"/>
            <line num="57" count="2743" type="stmt"/>
            <line complexity="1" visibility="public" signature="getM1Rate() : double" num="63" count="19" type="method"/>
            <line num="65" count="19" type="stmt"/>
            <line complexity="1" visibility="public" signature="getM5Rate() : double" num="68" count="19" type="method"/>
            <line num="70" count="19" type="stmt"/>
            <line complexity="1" visibility="public" signature="getM15Rate() : double" num="73" count="19" type="method"/>
            <line num="75" count="19" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/main/java/com/codahale/metrics/ExponentiallyDecayingReservoir.java" name="ExponentiallyDecayingReservoir.java">
            <metrics coveredelements="85" coveredconditionals="13" complexity="24" loc="207" coveredmethods="15" methods="15" elements="87" classes="1" ncloc="130" statements="58" conditionals="14" coveredstatements="57"/>
            <class name="ExponentiallyDecayingReservoir">
               <metrics coveredelements="85" coveredconditionals="13" complexity="24" coveredmethods="15" methods="15" elements="87" statements="58" conditionals="14" coveredstatements="57"/>
            </class>
            <line complexity="1" visibility="public" signature="ExponentiallyDecayingReservoir()" num="43" count="330" type="method"/>
            <line num="44" count="330" type="stmt"/>
            <line complexity="1" visibility="public" signature="ExponentiallyDecayingReservoir(int,double)" num="54" count="333" type="method"/>
            <line num="55" count="333" type="stmt"/>
            <line complexity="1" visibility="public" signature="ExponentiallyDecayingReservoir(int,double,Clock)" num="66" count="350" type="method"/>
            <line num="67" count="350" type="stmt"/>
            <line num="68" count="350" type="stmt"/>
            <line num="69" count="350" type="stmt"/>
            <line num="70" count="350" type="stmt"/>
            <line num="71" count="350" type="stmt"/>
            <line num="72" count="350" type="stmt"/>
            <line num="73" count="350" type="stmt"/>
            <line num="74" count="350" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="77" count="2" type="method"/>
            <line num="79" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="update(long) : void" num="82" count="8855" type="method"/>
            <line num="84" count="8855" type="stmt"/>
            <line complexity="6" visibility="public" signature="update(long,long) : void" num="93" count="8888" type="method"/>
            <line num="94" count="8888" type="stmt"/>
            <line num="95" count="8858" type="stmt"/>
            <line num="96" count="8888" type="stmt"/>
            <line num="97" count="8888" type="stmt"/>
            <line num="98" count="8888" type="stmt"/>
            <line num="99" count="8888" type="stmt"/>
            <line num="101" count="8888" type="stmt"/>
            <line num="102" count="8887" type="stmt"/>
            <line falsecount="4471" truecount="4416" num="102" type="cond"/>
            <line num="103" count="4416" type="stmt"/>
            <line num="105" count="4471" type="stmt"/>
            <line num="106" count="4471" type="stmt"/>
            <line falsecount="3244" truecount="1227" num="106" type="cond"/>
            <line num="108" count="1227" type="stmt"/>
            <line falsecount="1227" truecount="0" num="108" type="cond"/>
            <line num="109" count="0" type="stmt"/>
            <line num="114" count="8888" type="stmt"/>
            <line complexity="2" visibility="private" signature="rescaleIfNeeded() : void" num="118" count="9016" type="method"/>
            <line num="119" count="9016" type="stmt"/>
            <line num="120" count="9016" type="stmt"/>
            <line num="121" count="9013" type="stmt"/>
            <line falsecount="7762" truecount="1254" num="121" type="cond"/>
            <line num="122" count="1254" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSnapshot() : Snapshot" num="126" count="128" type="method"/>
            <line num="128" count="128" type="stmt"/>
            <line num="129" count="128" type="stmt"/>
            <line num="130" count="128" type="stmt"/>
            <line num="131" count="128" type="stmt"/>
            <line num="133" count="128" type="stmt"/>
            <line complexity="1" visibility="private" signature="currentTimeInSeconds() : long" num="137" count="10208" type="method"/>
            <line num="138" count="10208" type="stmt"/>
            <line complexity="1" visibility="private" signature="weight(long) : double" num="141" count="8888" type="method"/>
            <line num="142" count="8888" type="stmt"/>
            <line complexity="4" visibility="private" signature="rescale(long,long) : void" num="163" count="1253" type="method"/>
            <line num="164" count="1253" type="stmt"/>
            <line num="165" count="1254" type="stmt"/>
            <line num="166" count="1254" type="stmt"/>
            <line falsecount="201" truecount="1053" num="166" type="cond"/>
            <line num="167" count="1053" type="stmt"/>
            <line num="168" count="1053" type="stmt"/>
            <line num="169" count="1053" type="stmt"/>
            <line num="170" count="1053" type="stmt"/>
            <line falsecount="51" truecount="1002" num="170" type="cond"/>
            <line num="171" count="1002" type="stmt"/>
            <line num="173" count="51" type="stmt"/>
            <line num="174" count="51" type="stmt"/>
            <line num="175" count="3214" type="stmt"/>
            <line num="176" count="3214" type="stmt"/>
            <line num="177" count="3214" type="stmt"/>
            <line falsecount="3213" truecount="1" num="177" type="cond"/>
            <line num="178" count="1" type="stmt"/>
            <line num="180" count="3213" type="stmt"/>
            <line num="185" count="1053" type="stmt"/>
            <line num="188" count="1254" type="stmt"/>
            <line complexity="1" visibility="private" signature="unlockForRescale() : void" num="192" count="1254" type="method"/>
            <line num="193" count="1254" type="stmt"/>
            <line complexity="1" visibility="private" signature="lockForRescale() : void" num="196" count="1247" type="method"/>
            <line num="197" count="1251" type="stmt"/>
            <line complexity="1" visibility="private" signature="lockForRegularUsage() : void" num="200" count="8986" type="method"/>
            <line num="201" count="8985" type="stmt"/>
            <line complexity="1" visibility="private" signature="unlockForRegularUsage() : void" num="204" count="9016" type="method"/>
            <line num="205" count="9016" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/main/java/com/codahale/metrics/FixedNameCsvFileProvider.java" name="FixedNameCsvFileProvider.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="21" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="11" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="FixedNameCsvFileProvider">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="getFile(File,String) : File" num="11" count="8" type="method"/>
            <line num="13" count="8" type="stmt"/>
            <line complexity="1" visibility="protected" signature="sanitize(String) : String" num="16" count="8" type="method"/>
            <line num="19" count="8" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/main/java/com/codahale/metrics/Gauge.java" name="Gauge.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="26" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Gauge">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/main/java/com/codahale/metrics/Histogram.java" name="Histogram.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="5" loc="58" coveredmethods="5" methods="5" elements="12" classes="1" ncloc="25" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="Histogram">
               <metrics coveredelements="12" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="12" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="Histogram(Reservoir)" num="20" count="345" type="method"/>
            <line num="21" count="345" type="stmt"/>
            <line num="22" count="345" type="stmt"/>
            <line complexity="1" visibility="public" signature="update(int) : void" num="30" count="18" type="method"/>
            <line num="31" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="update(long) : void" num="39" count="136" type="method"/>
            <line num="40" count="136" type="stmt"/>
            <line num="41" count="136" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCount() : long" num="49" count="99" type="method"/>
            <line num="51" count="99" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSnapshot() : Snapshot" num="54" count="52" type="method"/>
            <line num="56" count="52" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/main/java/com/codahale/metrics/InstrumentedExecutorService.java" name="InstrumentedExecutorService.java">
            <metrics coveredelements="39" coveredconditionals="0" complexity="24" loc="209" coveredmethods="9" methods="20" elements="74" classes="3" ncloc="140" statements="54" conditionals="0" coveredstatements="30"/>
            <class name="InstrumentedExecutorService">
               <metrics coveredelements="17" coveredconditionals="0" complexity="16" coveredmethods="5" methods="16" elements="52" statements="36" conditionals="0" coveredstatements="12"/>
            </class>
            <class name="InstrumentedExecutorService.InstrumentedRunnable">
               <metrics coveredelements="11" coveredconditionals="0" complexity="4" coveredmethods="2" methods="2" elements="11" statements="9" conditionals="0" coveredstatements="9"/>
            </class>
            <class name="InstrumentedExecutorService.InstrumentedCallable">
               <metrics coveredelements="11" coveredconditionals="0" complexity="4" coveredmethods="2" methods="2" elements="11" statements="9" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="InstrumentedExecutorService(ExecutorService,MetricRegistry)" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="InstrumentedExecutorService(ExecutorService,MetricRegistry,String)" num="48" count="2" type="method"/>
            <line num="49" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="execute(Runnable) : void" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="submit(Runnable) : Future&lt;?&gt;" num="69" count="1" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="submit(Runnable,T) : Future&lt;T&gt;" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="submit(Callable&lt;T&gt;) : Future&lt;T&gt;" num="87" count="1" type="method"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="invokeAll(Collection&lt;? extends Callable&lt;T&gt;&gt;) : List&lt;Future&lt;T&gt;&gt;" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invokeAll(Collection&lt;? extends Callable&lt;T&gt;&gt;,long,TimeUnit) : List&lt;Future&lt;T&gt;&gt;" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invokeAny(Collection&lt;? extends Callable&lt;T&gt;&gt;) : T" num="116" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invokeAny(Collection&lt;? extends Callable&lt;T&gt;&gt;,long,TimeUnit) : T" num="126" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="instrument(Collection&lt;? extends Callable&lt;T&gt;&gt;) : Collection&lt;? extends Callable&lt;T&gt;&gt;" num="133" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="shutdown() : void" num="141" count="2" type="method"/>
            <line num="143" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="shutdownNow() : List&lt;Runnable&gt;" num="146" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isShutdown() : boolean" num="151" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isTerminated() : boolean" num="156" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="awaitTermination(long,TimeUnit) : boolean" num="161" count="2" type="method"/>
            <line num="163" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="InstrumentedRunnable(Runnable)" num="170" count="1" type="method"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="run() : void" num="175" count="1" type="method"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="InstrumentedCallable(Callable&lt;T&gt;)" num="192" count="1" type="method"/>
            <line num="193" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="call() : T" num="197" count="1" type="method"/>
            <line num="199" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/main/java/com/codahale/metrics/InstrumentedScheduledExecutorService.java" name="InstrumentedScheduledExecutorService.java">
            <metrics coveredelements="67" coveredconditionals="1" complexity="27" loc="297" coveredmethods="15" methods="26" elements="103" classes="4" ncloc="189" statements="75" conditionals="2" coveredstatements="51"/>
            <class name="InstrumentedScheduledExecutorService">
               <metrics coveredelements="32" coveredconditionals="0" complexity="20" coveredmethods="9" methods="20" elements="67" statements="47" conditionals="0" coveredstatements="23"/>
            </class>
            <class name="InstrumentedScheduledExecutorService.InstrumentedRunnable">
               <metrics coveredelements="10" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="10" statements="8" conditionals="0" coveredstatements="8"/>
            </class>
            <class name="InstrumentedScheduledExecutorService.InstrumentedPeriodicRunnable">
               <metrics coveredelements="15" coveredconditionals="1" complexity="3" coveredmethods="2" methods="2" elements="16" statements="12" conditionals="2" coveredstatements="12"/>
            </class>
            <class name="InstrumentedScheduledExecutorService.InstrumentedCallable">
               <metrics coveredelements="10" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="10" statements="8" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="InstrumentedScheduledExecutorService(ScheduledExecutorService,MetricRegistry)" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="InstrumentedScheduledExecutorService(ScheduledExecutorService,MetricRegistry,String)" num="54" count="6" type="method"/>
            <line num="55" count="6" type="stmt"/>
            <line num="57" count="6" type="stmt"/>
            <line num="59" count="6" type="stmt"/>
            <line num="60" count="6" type="stmt"/>
            <line num="61" count="6" type="stmt"/>
            <line num="63" count="6" type="stmt"/>
            <line num="64" count="6" type="stmt"/>
            <line num="65" count="6" type="stmt"/>
            <line num="66" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="schedule(Runnable,long,TimeUnit) : ScheduledFuture&lt;?&gt;" num="72" count="1" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="schedule(Callable&lt;V&gt;,long,TimeUnit) : ScheduledFuture&lt;V&gt;" num="81" count="1" type="method"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="scheduleAtFixedRate(Runnable,long,long,TimeUnit) : ScheduledFuture&lt;?&gt;" num="90" count="1" type="method"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="scheduleWithFixedDelay(Runnable,long,long,TimeUnit) : ScheduledFuture&lt;?&gt;" num="99" count="1" type="method"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shutdown() : void" num="108" count="6" type="method"/>
            <line num="110" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="shutdownNow() : List&lt;Runnable&gt;" num="116" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isShutdown() : boolean" num="124" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isTerminated() : boolean" num="132" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="awaitTermination(long,TimeUnit) : boolean" num="140" count="6" type="method"/>
            <line num="142" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="submit(Callable&lt;T&gt;) : Future&lt;T&gt;" num="148" count="1" type="method"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="submit(Runnable,T) : Future&lt;T&gt;" num="157" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="submit(Runnable) : Future&lt;?&gt;" num="166" count="1" type="method"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="invokeAll(Collection&lt;? extends Callable&lt;T&gt;&gt;) : List&lt;Future&lt;T&gt;&gt;" num="175" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invokeAll(Collection&lt;? extends Callable&lt;T&gt;&gt;,long,TimeUnit) : List&lt;Future&lt;T&gt;&gt;" num="185" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invokeAny(Collection&lt;? extends Callable&lt;T&gt;&gt;) : T" num="195" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invokeAny(Collection&lt;? extends Callable&lt;T&gt;&gt;,long,TimeUnit) : T" num="205" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="instrument(Collection&lt;? extends Callable&lt;T&gt;&gt;) : Collection&lt;? extends Callable&lt;T&gt;&gt;" num="212" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="execute(Runnable) : void" num="223" count="0" type="method"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="InstrumentedRunnable(Runnable)" num="232" count="3" type="method"/>
            <line num="233" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="236" count="4" type="method"/>
            <line num="238" count="4" type="stmt"/>
            <line num="239" count="4" type="stmt"/>
            <line num="240" count="4" type="stmt"/>
            <line num="241" count="4" type="stmt"/>
            <line num="243" count="4" type="stmt"/>
            <line num="244" count="4" type="stmt"/>
            <line num="245" count="4" type="stmt"/>
            <line complexity="1" visibility="package" signature="InstrumentedPeriodicRunnable(Runnable,long,TimeUnit)" num="254" count="1" type="method"/>
            <line num="255" count="1" type="stmt"/>
            <line num="256" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="run() : void" num="259" count="2" type="method"/>
            <line num="261" count="2" type="stmt"/>
            <line num="262" count="2" type="stmt"/>
            <line num="263" count="2" type="stmt"/>
            <line num="264" count="2" type="stmt"/>
            <line num="266" count="2" type="stmt"/>
            <line num="267" count="2" type="stmt"/>
            <line num="268" count="2" type="stmt"/>
            <line num="269" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="269" type="cond"/>
            <line num="270" count="2" type="stmt"/>
            <line num="272" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="InstrumentedCallable(Callable&lt;T&gt;)" num="280" count="2" type="method"/>
            <line num="281" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="call() : T" num="284" count="2" type="method"/>
            <line num="286" count="2" type="stmt"/>
            <line num="287" count="2" type="stmt"/>
            <line num="288" count="2" type="stmt"/>
            <line num="289" count="2" type="stmt"/>
            <line num="291" count="2" type="stmt"/>
            <line num="292" count="2" type="stmt"/>
            <line num="293" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/main/java/com/codahale/metrics/InstrumentedThreadFactory.java" name="InstrumentedThreadFactory.java">
            <metrics coveredelements="18" coveredconditionals="0" complexity="5" loc="73" coveredmethods="4" methods="5" elements="20" classes="2" ncloc="42" statements="15" conditionals="0" coveredstatements="14"/>
            <class name="InstrumentedThreadFactory">
               <metrics coveredelements="10" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="12" statements="9" conditionals="0" coveredstatements="8"/>
            </class>
            <class name="InstrumentedThreadFactory.InstrumentedRunnable">
               <metrics coveredelements="8" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="8" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="InstrumentedThreadFactory(ThreadFactory,MetricRegistry)" num="26" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="InstrumentedThreadFactory(ThreadFactory,MetricRegistry,String)" num="37" count="1" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="newThread(Runnable) : Thread" num="47" count="10" type="method"/>
            <line num="49" count="10" type="stmt"/>
            <line num="50" count="10" type="stmt"/>
            <line num="51" count="10" type="stmt"/>
            <line num="52" count="10" type="stmt"/>
            <line complexity="1" visibility="package" signature="InstrumentedRunnable(Runnable)" num="58" count="10" type="method"/>
            <line num="59" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="62" count="10" type="method"/>
            <line num="64" count="10" type="stmt"/>
            <line num="65" count="10" type="stmt"/>
            <line num="66" count="10" type="stmt"/>
            <line num="68" count="10" type="stmt"/>
            <line num="69" count="10" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/main/java/com/codahale/metrics/Meter.java" name="Meter.java">
            <metrics coveredelements="32" coveredconditionals="2" complexity="12" loc="106" coveredmethods="10" methods="11" elements="34" classes="1" ncloc="59" statements="21" conditionals="2" coveredstatements="20"/>
            <class name="Meter">
               <metrics coveredelements="32" coveredconditionals="2" complexity="12" coveredmethods="10" methods="11" elements="34" statements="21" conditionals="2" coveredstatements="20"/>
            </class>
            <line complexity="1" visibility="public" signature="Meter(MovingAverages)" num="24" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Meter()" num="31" count="528" type="method"/>
            <line num="32" count="528" type="stmt"/>
            <line complexity="1" visibility="public" signature="Meter(Clock)" num="40" count="841" type="method"/>
            <line num="41" count="841" type="stmt"/>
            <line complexity="1" visibility="public" signature="Meter(MovingAverages,Clock)" num="50" count="850" type="method"/>
            <line num="51" count="850" type="stmt"/>
            <line num="52" count="850" type="stmt"/>
            <line num="53" count="850" type="stmt"/>
            <line complexity="1" visibility="public" signature="mark() : void" num="59" count="363497" type="method"/>
            <line num="60" count="363497" type="stmt"/>
            <line complexity="1" visibility="public" signature="mark(long) : void" num="68" count="363501" type="method"/>
            <line num="69" count="363501" type="stmt"/>
            <line num="70" count="363501" type="stmt"/>
            <line num="71" count="363501" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCount() : long" num="74" count="183" type="method"/>
            <line num="76" count="183" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFifteenMinuteRate() : double" num="79" count="27" type="method"/>
            <line num="81" count="27" type="stmt"/>
            <line num="82" count="27" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFiveMinuteRate() : double" num="85" count="27" type="method"/>
            <line num="87" count="27" type="stmt"/>
            <line num="88" count="27" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMeanRate() : double" num="91" count="15" type="method"/>
            <line num="93" count="15" type="stmt"/>
            <line falsecount="13" truecount="2" num="93" type="cond"/>
            <line num="94" count="2" type="stmt"/>
            <line num="96" count="13" type="stmt"/>
            <line num="97" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOneMinuteRate() : double" num="101" count="27" type="method"/>
            <line num="103" count="27" type="stmt"/>
            <line num="104" count="27" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/main/java/com/codahale/metrics/Metered.java" name="Metered.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="48" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Metered">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/main/java/com/codahale/metrics/Metric.java" name="Metric.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="8" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Metric">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/main/java/com/codahale/metrics/MetricAttribute.java" name="MetricAttribute.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="33" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="25" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="MetricAttribute">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="package" signature="MetricAttribute(String)" num="26" count="45" type="method"/>
            <line num="27" count="45" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCode() : String" num="30" count="199" type="method"/>
            <line num="31" count="199" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/main/java/com/codahale/metrics/MetricFilter.java" name="MetricFilter.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="3" loc="32" coveredmethods="3" methods="3" elements="6" classes="1" ncloc="14" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="MetricFilter">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="package" signature="startsWith(String) : MetricFilter" num="12" count="2" type="method"/>
            <line num="13" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="endsWith(String) : MetricFilter" num="16" count="2" type="method"/>
            <line num="17" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="contains(String) : MetricFilter" num="20" count="2" type="method"/>
            <line num="21" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/main/java/com/codahale/metrics/MetricRegistry.java" name="MetricRegistry.java">
            <metrics coveredelements="219" coveredconditionals="40" complexity="94" loc="646" coveredmethods="60" methods="67" elements="249" classes="3" ncloc="369" statements="134" conditionals="48" coveredstatements="119"/>
            <class name="MetricRegistry">
               <metrics coveredelements="203" coveredconditionals="40" complexity="86" coveredmethods="52" methods="59" elements="233" statements="126" conditionals="48" coveredstatements="111"/>
            </class>
            <class name="MetricRegistry.MetricSupplier">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="MetricRegistry.MetricBuilder">
               <metrics coveredelements="16" coveredconditionals="0" complexity="8" coveredmethods="8" methods="8" elements="16" statements="8" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="2" visibility="public" signature="name(String,String) : String" num="25" count="2660" type="method"/>
            <line num="26" count="2660" type="stmt"/>
            <line num="27" count="2660" type="stmt"/>
            <line num="28" count="2660" type="stmt"/>
            <line falsecount="0" truecount="2660" num="28" type="cond"/>
            <line num="29" count="2660" type="stmt"/>
            <line num="30" count="2795" type="stmt"/>
            <line num="33" count="2660" type="stmt"/>
            <line complexity="1" visibility="public" signature="name(Class&lt;?&gt;,String) : String" num="44" count="403" type="method"/>
            <line num="45" count="403" type="stmt"/>
            <line complexity="4" visibility="private" signature="append(StringBuilder,String) : void" num="48" count="5455" type="method"/>
            <line num="49" count="5455" type="stmt"/>
            <line falsecount="108" truecount="5347" num="49" type="cond"/>
            <line num="50" count="5347" type="stmt"/>
            <line falsecount="2660" truecount="2687" num="50" type="cond"/>
            <line num="51" count="2687" type="stmt"/>
            <line num="53" count="5347" type="stmt"/>
            <line complexity="1" visibility="public" signature="MetricRegistry()" num="63" count="233" type="method"/>
            <line num="64" count="233" type="stmt"/>
            <line num="65" count="233" type="stmt"/>
            <line complexity="1" visibility="protected" signature="buildMap() : ConcurrentMap&lt;String, Metric&gt;" num="75" count="233" type="method"/>
            <line num="76" count="233" type="stmt"/>
            <line complexity="5" visibility="public" signature="register(String,T) : T" num="88" count="1321" type="method"/>
            <line num="91" count="1321" type="stmt"/>
            <line falsecount="1320" truecount="1" num="91" type="cond"/>
            <line num="92" count="1" type="stmt"/>
            <line num="95" count="1320" type="stmt"/>
            <line falsecount="1311" truecount="9" num="95" type="cond"/>
            <line num="96" count="9" type="stmt"/>
            <line num="97" count="9" type="stmt"/>
            <line num="98" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="onGaugeAdded(String,Gauge&lt;?&gt;) : void" num="99" count="1" type="method"/>
            <line num="101" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="onGaugeRemoved(String) : void" num="104" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="onCounterAdded(String,Counter) : void" num="109" count="26" type="method"/>
            <line num="111" count="26" type="stmt"/>
            <line complexity="1" visibility="public" signature="onCounterRemoved(String) : void" num="114" count="5" type="method"/>
            <line num="116" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="onHistogramAdded(String,Histogram) : void" num="119" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="onHistogramRemoved(String) : void" num="124" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="onMeterAdded(String,Meter) : void" num="129" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="onMeterRemoved(String) : void" num="134" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="onTimerAdded(String,Timer) : void" num="139" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="onTimerRemoved(String) : void" num="144" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line num="149" count="1311" type="stmt"/>
            <line falsecount="1308" truecount="3" num="149" type="cond"/>
            <line num="150" count="3" type="stmt"/>
            <line num="152" count="1308" type="stmt"/>
            <line num="153" count="1308" type="stmt"/>
            <line falsecount="0" truecount="1308" num="153" type="cond"/>
            <line num="154" count="1308" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="159" count="1320" type="stmt"/>
            <line complexity="1" visibility="public" signature="registerAll(MetricSet) : void" num="168" count="1" type="method"/>
            <line num="169" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="counter(String) : Counter" num="179" count="116" type="method"/>
            <line num="180" count="116" type="stmt"/>
            <line complexity="1" visibility="public" signature="counter(String,MetricSupplier&lt;Counter&gt;) : Counter" num="191" count="2" type="method"/>
            <line num="192" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="newMetric() : Counter" num="193" count="1" type="method"/>
            <line num="195" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isInstance(Metric) : boolean" num="198" count="2" type="method"/>
            <line num="200" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="histogram(String) : Histogram" num="212" count="85" type="method"/>
            <line num="213" count="85" type="stmt"/>
            <line complexity="1" visibility="public" signature="histogram(String,MetricSupplier&lt;Histogram&gt;) : Histogram" num="224" count="2" type="method"/>
            <line num="225" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="newMetric() : Histogram" num="226" count="1" type="method"/>
            <line num="228" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isInstance(Metric) : boolean" num="231" count="2" type="method"/>
            <line num="233" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="meter(String) : Meter" num="245" count="978" type="method"/>
            <line num="246" count="978" type="stmt"/>
            <line complexity="1" visibility="public" signature="meter(String,MetricSupplier&lt;Meter&gt;) : Meter" num="257" count="17" type="method"/>
            <line num="258" count="17" type="stmt"/>
            <line complexity="1" visibility="public" signature="newMetric() : Meter" num="259" count="14" type="method"/>
            <line num="261" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="isInstance(Metric) : boolean" num="264" count="17" type="method"/>
            <line num="266" count="17" type="stmt"/>
            <line complexity="1" visibility="public" signature="timer(String) : Timer" num="278" count="178" type="method"/>
            <line num="279" count="178" type="stmt"/>
            <line complexity="1" visibility="public" signature="timer(String,MetricSupplier&lt;Timer&gt;) : Timer" num="290" count="130" type="method"/>
            <line num="291" count="130" type="stmt"/>
            <line complexity="1" visibility="public" signature="newMetric() : Timer" num="292" count="127" type="method"/>
            <line num="294" count="127" type="stmt"/>
            <line complexity="1" visibility="public" signature="isInstance(Metric) : boolean" num="297" count="130" type="method"/>
            <line num="299" count="130" type="stmt"/>
            <line complexity="1" visibility="public" signature="gauge(String,MetricSupplier&lt;Gauge&gt;) : Gauge" num="312" count="2" type="method"/>
            <line num="314" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="newMetric() : Gauge" num="315" count="1" type="method"/>
            <line num="317" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isInstance(Metric) : boolean" num="320" count="2" type="method"/>
            <line num="322" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="remove(String) : boolean" num="334" count="48" type="method"/>
            <line num="335" count="48" type="stmt"/>
            <line num="336" count="48" type="stmt"/>
            <line falsecount="0" truecount="48" num="336" type="cond"/>
            <line num="337" count="48" type="stmt"/>
            <line num="338" count="48" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="removeMatching(MetricFilter) : void" num="348" count="1" type="method"/>
            <line num="349" count="1" type="stmt"/>
            <line num="350" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="350" type="cond"/>
            <line num="351" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="addListener(MetricRegistryListener) : void" num="364" count="75" type="method"/>
            <line num="365" count="75" type="stmt"/>
            <line num="367" count="75" type="stmt"/>
            <line num="368" count="87" type="stmt"/>
            <line complexity="1" visibility="public" signature="removeListener(MetricRegistryListener) : void" num="377" count="13" type="method"/>
            <line num="378" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNames() : SortedSet&lt;String&gt;" num="386" count="10" type="method"/>
            <line num="387" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="getGauges() : SortedMap&lt;String, Gauge&gt;" num="395" count="20" type="method"/>
            <line num="397" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="getGauges(MetricFilter) : SortedMap&lt;String, Gauge&gt;" num="406" count="79" type="method"/>
            <line num="408" count="79" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCounters() : SortedMap&lt;String, Counter&gt;" num="416" count="1" type="method"/>
            <line num="417" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCounters(MetricFilter) : SortedMap&lt;String, Counter&gt;" num="427" count="60" type="method"/>
            <line num="428" count="60" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistograms() : SortedMap&lt;String, Histogram&gt;" num="436" count="1" type="method"/>
            <line num="437" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHistograms(MetricFilter) : SortedMap&lt;String, Histogram&gt;" num="447" count="60" type="method"/>
            <line num="448" count="60" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMeters() : SortedMap&lt;String, Meter&gt;" num="456" count="7" type="method"/>
            <line num="457" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMeters(MetricFilter) : SortedMap&lt;String, Meter&gt;" num="466" count="66" type="method"/>
            <line num="467" count="66" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimers() : SortedMap&lt;String, Timer&gt;" num="475" count="7" type="method"/>
            <line num="476" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimers(MetricFilter) : SortedMap&lt;String, Timer&gt;" num="485" count="66" type="method"/>
            <line num="486" count="66" type="stmt"/>
            <line complexity="5" visibility="private" signature="getOrAdd(String,MetricBuilder&lt;T&gt;) : T" num="489" count="1510" type="method"/>
            <line num="491" count="1510" type="stmt"/>
            <line num="492" count="1510" type="stmt"/>
            <line falsecount="959" truecount="551" num="492" type="cond"/>
            <line num="493" count="551" type="stmt"/>
            <line num="494" count="959" type="stmt"/>
            <line falsecount="0" truecount="959" num="494" type="cond"/>
            <line num="495" count="959" type="stmt"/>
            <line num="496" count="959" type="stmt"/>
            <line num="498" count="0" type="stmt"/>
            <line num="499" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="499" type="cond"/>
            <line num="500" count="0" type="stmt"/>
            <line num="504" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getMetrics(Class&lt;T&gt;,MetricFilter) : SortedMap&lt;String, T&gt;" num="507" count="331" type="method"/>
            <line num="509" count="331" type="stmt"/>
            <line num="510" count="331" type="stmt"/>
            <line num="511" count="2003" type="stmt"/>
            <line falsecount="1318" truecount="685" num="511" type="cond"/>
            <line num="513" count="685" type="stmt"/>
            <line num="516" count="331" type="stmt"/>
            <line complexity="1" visibility="private" signature="onMetricAdded(String,Metric) : void" num="519" count="1308" type="method"/>
            <line num="520" count="1308" type="stmt"/>
            <line num="521" count="78" type="stmt"/>
            <line complexity="6" visibility="private" signature="notifyListenerOfAddedMetric(MetricRegistryListener,Metric,String) : void" num="525" count="165" type="method"/>
            <line num="526" count="165" type="stmt"/>
            <line falsecount="116" truecount="49" num="526" type="cond"/>
            <line num="527" count="49" type="stmt"/>
            <line num="528" count="116" type="stmt"/>
            <line falsecount="68" truecount="48" num="528" type="cond"/>
            <line num="529" count="48" type="stmt"/>
            <line num="530" count="68" type="stmt"/>
            <line falsecount="49" truecount="19" num="530" type="cond"/>
            <line num="531" count="19" type="stmt"/>
            <line num="532" count="49" type="stmt"/>
            <line falsecount="28" truecount="21" num="532" type="cond"/>
            <line num="533" count="21" type="stmt"/>
            <line num="534" count="28" type="stmt"/>
            <line falsecount="0" truecount="28" num="534" type="cond"/>
            <line num="535" count="28" type="stmt"/>
            <line num="537" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="onMetricRemoved(String,Metric) : void" num="541" count="48" type="method"/>
            <line num="542" count="48" type="stmt"/>
            <line num="543" count="20" type="stmt"/>
            <line complexity="6" visibility="private" signature="notifyListenerOfRemovedMetric(String,Metric,MetricRegistryListener) : void" num="547" count="20" type="method"/>
            <line num="548" count="20" type="stmt"/>
            <line falsecount="11" truecount="9" num="548" type="cond"/>
            <line num="549" count="9" type="stmt"/>
            <line num="550" count="11" type="stmt"/>
            <line falsecount="5" truecount="6" num="550" type="cond"/>
            <line num="551" count="6" type="stmt"/>
            <line num="552" count="5" type="stmt"/>
            <line falsecount="3" truecount="2" num="552" type="cond"/>
            <line num="553" count="2" type="stmt"/>
            <line num="554" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="554" type="cond"/>
            <line num="555" count="1" type="stmt"/>
            <line num="556" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="556" type="cond"/>
            <line num="557" count="2" type="stmt"/>
            <line num="559" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="registerAll(String,MetricSet) : void" num="570" count="5" type="method"/>
            <line num="571" count="5" type="stmt"/>
            <line num="572" count="29" type="stmt"/>
            <line falsecount="28" truecount="1" num="572" type="cond"/>
            <line num="573" count="1" type="stmt"/>
            <line num="575" count="28" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMetrics() : Map&lt;String, Metric&gt;" num="580" count="14" type="method"/>
            <line num="582" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="newMetric() : Counter" num="595" count="92" type="method"/>
            <line num="597" count="92" type="stmt"/>
            <line complexity="1" visibility="public" signature="isInstance(Metric) : boolean" num="600" count="116" type="method"/>
            <line num="602" count="116" type="stmt"/>
            <line complexity="1" visibility="public" signature="newMetric() : Histogram" num="607" count="65" type="method"/>
            <line num="609" count="65" type="stmt"/>
            <line complexity="1" visibility="public" signature="isInstance(Metric) : boolean" num="612" count="85" type="method"/>
            <line num="614" count="85" type="stmt"/>
            <line complexity="1" visibility="public" signature="newMetric() : Meter" num="619" count="528" type="method"/>
            <line num="621" count="528" type="stmt"/>
            <line complexity="1" visibility="public" signature="isInstance(Metric) : boolean" num="624" count="978" type="method"/>
            <line num="626" count="978" type="stmt"/>
            <line complexity="1" visibility="public" signature="newMetric() : Timer" num="631" count="130" type="method"/>
            <line num="633" count="130" type="stmt"/>
            <line complexity="1" visibility="public" signature="isInstance(Metric) : boolean" num="636" count="178" type="method"/>
            <line num="638" count="178" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/main/java/com/codahale/metrics/MetricRegistryListener.java" name="MetricRegistryListener.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="10" loc="128" coveredmethods="10" methods="10" elements="10" classes="2" ncloc="46" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="MetricRegistryListener">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="MetricRegistryListener.Base">
               <metrics coveredelements="10" coveredconditionals="0" complexity="10" coveredmethods="10" methods="10" elements="10" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="onGaugeAdded(String,Gauge&lt;?&gt;) : void" num="13" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="onGaugeRemoved(String) : void" num="17" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="onCounterAdded(String,Counter) : void" num="21" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="onCounterRemoved(String) : void" num="25" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="onHistogramAdded(String,Histogram) : void" num="29" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="onHistogramRemoved(String) : void" num="33" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="onMeterAdded(String,Meter) : void" num="37" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="onMeterRemoved(String) : void" num="41" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="onTimerAdded(String,Timer) : void" num="45" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="onTimerRemoved(String) : void" num="49" count="1" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/main/java/com/codahale/metrics/MetricSet.java" name="MetricSet.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="17" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="MetricSet">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/main/java/com/codahale/metrics/MovingAverages.java" name="MovingAverages.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="48" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="MovingAverages">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/main/java/com/codahale/metrics/RatioGauge.java" name="RatioGauge.java">
            <metrics coveredelements="16" coveredconditionals="2" complexity="8" loc="66" coveredmethods="5" methods="5" elements="16" classes="2" ncloc="32" statements="9" conditionals="2" coveredstatements="9"/>
            <class name="RatioGauge">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="RatioGauge.Ratio">
               <metrics coveredelements="14" coveredconditionals="2" complexity="7" coveredmethods="4" methods="4" elements="14" statements="8" conditionals="2" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="of(double,double) : Ratio" num="23" count="13" type="method"/>
            <line num="24" count="13" type="stmt"/>
            <line complexity="1" visibility="private" signature="Ratio(double,double)" num="30" count="13" type="method"/>
            <line num="31" count="13" type="stmt"/>
            <line num="32" count="13" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue() : double" num="41" count="12" type="method"/>
            <line num="42" count="12" type="stmt"/>
            <line num="43" count="12" type="stmt"/>
            <line falsecount="7" truecount="5" num="43" type="cond"/>
            <line num="44" count="5" type="stmt"/>
            <line num="46" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="49" count="1" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : Double" num="62" count="12" type="method"/>
            <line num="64" count="12" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/main/java/com/codahale/metrics/Reporter.java" name="Reporter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="10" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Reporter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/main/java/com/codahale/metrics/Reservoir.java" name="Reservoir.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="27" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Reservoir">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/main/java/com/codahale/metrics/Sampling.java" name="Sampling.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="13" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Sampling">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/main/java/com/codahale/metrics/ScheduledReporter.java" name="ScheduledReporter.java">
            <metrics coveredelements="89" coveredconditionals="19" complexity="36" loc="310" coveredmethods="20" methods="21" elements="106" classes="2" ncloc="190" statements="61" conditionals="24" coveredstatements="50"/>
            <class name="ScheduledReporter">
               <metrics coveredelements="78" coveredconditionals="17" complexity="32" coveredmethods="18" methods="19" elements="92" statements="53" conditionals="20" coveredstatements="43"/>
            </class>
            <class name="ScheduledReporter.NamedThreadFactory">
               <metrics coveredelements="11" coveredconditionals="2" complexity="4" coveredmethods="2" methods="2" elements="14" statements="8" conditionals="4" coveredstatements="7"/>
            </class>
            <line complexity="2" visibility="private" signature="NamedThreadFactory(String)" num="39" count="123" type="method"/>
            <line num="40" count="123" type="stmt"/>
            <line num="41" count="123" type="stmt"/>
            <line falsecount="123" truecount="0" num="41" type="cond"/>
            <line num="42" count="123" type="stmt"/>
            <line complexity="2" visibility="public" signature="newThread(Runnable) : Thread" num="45" count="5" type="method"/>
            <line num="47" count="5" type="stmt"/>
            <line num="48" count="5" type="stmt"/>
            <line num="49" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line num="52" count="5" type="stmt"/>
            <line complexity="1" visibility="protected" signature="ScheduledReporter(MetricRegistry,String,MetricFilter,TimeUnit,TimeUnit)" num="79" count="15" type="method"/>
            <line num="84" count="15" type="stmt"/>
            <line complexity="1" visibility="protected" signature="ScheduledReporter(MetricRegistry,String,MetricFilter,TimeUnit,TimeUnit,ScheduledExecutorService)" num="96" count="60" type="method"/>
            <line num="102" count="60" type="stmt"/>
            <line complexity="1" visibility="protected" signature="ScheduledReporter(MetricRegistry,String,MetricFilter,TimeUnit,TimeUnit,ScheduledExecutorService,boolean)" num="115" count="84" type="method"/>
            <line num="122" count="84" type="stmt"/>
            <line complexity="4" visibility="protected" signature="ScheduledReporter(MetricRegistry,String,MetricFilter,TimeUnit,TimeUnit,ScheduledExecutorService,boolean,Set&lt;MetricAttribute&gt;)" num="125" count="169" type="method"/>
            <line num="134" count="169" type="stmt"/>
            <line falsecount="168" truecount="1" num="134" type="cond"/>
            <line num="135" count="1" type="stmt"/>
            <line num="138" count="168" type="stmt"/>
            <line num="139" count="168" type="stmt"/>
            <line num="140" count="168" type="stmt"/>
            <line falsecount="60" truecount="108" num="140" type="cond"/>
            <line num="141" count="168" type="stmt"/>
            <line num="142" count="168" type="stmt"/>
            <line num="143" count="168" type="stmt"/>
            <line num="144" count="168" type="stmt"/>
            <line num="145" count="168" type="stmt"/>
            <line num="146" count="168" type="stmt"/>
            <line falsecount="11" truecount="157" num="146" type="cond"/>
            <line complexity="1" visibility="public" signature="start(long,TimeUnit) : void" num="156" count="13" type="method"/>
            <line num="157" count="13" type="stmt"/>
            <line complexity="2" visibility="package" signature="start(long,long,TimeUnit,Runnable) : void" num="164" count="17" type="method"/>
            <line num="165" count="17" type="stmt"/>
            <line falsecount="14" truecount="3" num="165" type="cond"/>
            <line num="166" count="3" type="stmt"/>
            <line num="169" count="14" type="stmt"/>
            <line complexity="2" visibility="public" signature="start(long,long,TimeUnit) : void" num="179" count="14" type="method"/>
            <line num="180" count="14" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="stop() : void" num="194" count="50" type="method"/>
            <line num="195" count="50" type="stmt"/>
            <line falsecount="7" truecount="43" num="195" type="cond"/>
            <line num="196" count="43" type="stmt"/>
            <line num="199" count="50" type="stmt"/>
            <line num="200" count="50" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="205" count="50" type="stmt"/>
            <line falsecount="7" truecount="43" num="205" type="cond"/>
            <line num="206" count="43" type="stmt"/>
            <line num="208" count="43" type="stmt"/>
            <line falsecount="43" truecount="0" num="208" type="cond"/>
            <line num="209" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="211" type="cond"/>
            <line num="212" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="223" count="7" type="stmt"/>
            <line complexity="3" visibility="private" signature="cancelScheduledFuture() : void" num="227" count="7" type="method"/>
            <line num="228" count="7" type="stmt"/>
            <line falsecount="5" truecount="2" num="228" type="cond"/>
            <line num="230" count="2" type="stmt"/>
            <line num="232" count="5" type="stmt"/>
            <line falsecount="3" truecount="2" num="232" type="cond"/>
            <line num="234" count="2" type="stmt"/>
            <line num="237" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="close() : void" num="243" count="3" type="method"/>
            <line num="245" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="report() : void" num="251" count="56" type="method"/>
            <line num="252" count="56" type="stmt"/>
            <line num="253" count="56" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getRateUnit() : String" num="277" count="27" type="method"/>
            <line num="278" count="27" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getDurationUnit() : String" num="281" count="25" type="method"/>
            <line num="282" count="25" type="stmt"/>
            <line complexity="1" visibility="protected" signature="convertDuration(double) : double" num="285" count="88" type="method"/>
            <line num="286" count="88" type="stmt"/>
            <line complexity="1" visibility="protected" signature="convertRate(double) : double" num="289" count="86" type="method"/>
            <line num="290" count="86" type="stmt"/>
            <line complexity="1" visibility="protected" signature="isShutdownExecutorOnStop() : boolean" num="293" count="0" type="method"/>
            <line num="294" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getDisabledMetricAttributes() : Set&lt;MetricAttribute&gt;" num="297" count="266" type="method"/>
            <line num="298" count="266" type="stmt"/>
            <line complexity="1" visibility="private" signature="calculateRateUnit(TimeUnit) : String" num="301" count="168" type="method"/>
            <line num="302" count="168" type="stmt"/>
            <line num="303" count="168" type="stmt"/>
            <line complexity="1" visibility="private" signature="createDefaultExecutor(String) : ScheduledExecutorService" num="306" count="123" type="method"/>
            <line num="307" count="123" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/main/java/com/codahale/metrics/SharedMetricRegistries.java" name="SharedMetricRegistries.java">
            <metrics coveredelements="39" coveredconditionals="6" complexity="16" loc="107" coveredmethods="10" methods="11" elements="48" classes="1" ncloc="64" statements="27" conditionals="10" coveredstatements="23"/>
            <class name="SharedMetricRegistries">
               <metrics coveredelements="39" coveredconditionals="6" complexity="16" coveredmethods="10" methods="11" elements="48" statements="27" conditionals="10" coveredstatements="23"/>
            </class>
            <line complexity="1" visibility="package" signature="setDefaultRegistryName(AtomicReference&lt;String&gt;) : void" num="18" count="8" type="method"/>
            <line num="19" count="8" type="stmt"/>
            <line complexity="1" visibility="private" signature="SharedMetricRegistries()" num="22" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="clear() : void" num="24" count="24" type="method"/>
            <line num="25" count="24" type="stmt"/>
            <line complexity="1" visibility="public" signature="names() : Set&lt;String&gt;" num="28" count="5" type="method"/>
            <line num="29" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove(String) : void" num="32" count="1" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(String,MetricRegistry) : MetricRegistry" num="36" count="18" type="method"/>
            <line num="37" count="18" type="stmt"/>
            <line complexity="3" visibility="public" signature="getOrCreate(String) : MetricRegistry" num="40" count="27" type="method"/>
            <line num="41" count="27" type="stmt"/>
            <line num="42" count="27" type="stmt"/>
            <line falsecount="16" truecount="11" num="42" type="cond"/>
            <line num="43" count="11" type="stmt"/>
            <line num="44" count="11" type="stmt"/>
            <line num="45" count="11" type="stmt"/>
            <line falsecount="0" truecount="11" num="45" type="cond"/>
            <line num="46" count="11" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="50" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDefault(String) : MetricRegistry" num="60" count="3" type="method"/>
            <line num="61" count="3" type="stmt"/>
            <line num="62" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="setDefault(String,MetricRegistry) : MetricRegistry" num="72" count="4" type="method"/>
            <line num="73" count="4" type="stmt"/>
            <line falsecount="0" truecount="3" num="73" type="cond"/>
            <line num="74" count="3" type="stmt"/>
            <line num="75" count="3" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDefault() : MetricRegistry" num="86" count="3" type="method"/>
            <line num="87" count="3" type="stmt"/>
            <line num="88" count="3" type="stmt"/>
            <line falsecount="2" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="tryGetDefault() : MetricRegistry" num="99" count="3" type="method"/>
            <line num="100" count="3" type="stmt"/>
            <line num="101" count="3" type="stmt"/>
            <line falsecount="0" truecount="2" num="101" type="cond"/>
            <line num="102" count="2" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/main/java/com/codahale/metrics/Slf4jReporter.java" name="Slf4jReporter.java">
            <metrics coveredelements="185" coveredconditionals="13" complexity="61" loc="516" coveredmethods="38" methods="49" elements="220" classes="9" ncloc="360" statements="157" conditionals="14" coveredstatements="134"/>
            <class name="Slf4jReporter">
               <metrics coveredelements="125" coveredconditionals="13" complexity="28" coveredmethods="21" methods="21" elements="126" statements="91" conditionals="14" coveredstatements="91"/>
            </class>
            <class name="Slf4jReporter.LoggingLevel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Slf4jReporter.Builder">
               <metrics coveredelements="46" coveredconditionals="0" complexity="17" coveredmethods="10" methods="12" elements="62" statements="50" conditionals="0" coveredstatements="36"/>
            </class>
            <class name="Slf4jReporter.LoggerProxy">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="Slf4jReporter.DebugLoggerProxy">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Slf4jReporter.TraceLoggerProxy">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Slf4jReporter.InfoLoggerProxy">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="Slf4jReporter.WarnLoggerProxy">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Slf4jReporter.ErrorLoggerProxy">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="forRegistry(MetricRegistry) : Builder" num="44" count="16" type="method"/>
            <line num="45" count="16" type="stmt"/>
            <line complexity="1" visibility="private" signature="Builder(MetricRegistry)" num="68" count="16" type="method"/>
            <line num="69" count="16" type="stmt"/>
            <line num="70" count="16" type="stmt"/>
            <line num="71" count="16" type="stmt"/>
            <line num="72" count="16" type="stmt"/>
            <line num="73" count="16" type="stmt"/>
            <line num="74" count="16" type="stmt"/>
            <line num="75" count="16" type="stmt"/>
            <line num="76" count="16" type="stmt"/>
            <line num="77" count="16" type="stmt"/>
            <line num="78" count="16" type="stmt"/>
            <line num="79" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="shutdownExecutorOnStop(boolean) : Builder" num="90" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="scheduleOn(ScheduledExecutorService) : Builder" num="103" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="outputTo(Logger) : Builder" num="114" count="16" type="method"/>
            <line num="115" count="16" type="stmt"/>
            <line num="116" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="markWith(Marker) : Builder" num="125" count="16" type="method"/>
            <line num="126" count="16" type="stmt"/>
            <line num="127" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="prefixedWith(String) : Builder" num="136" count="6" type="method"/>
            <line num="137" count="6" type="stmt"/>
            <line num="138" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="convertRatesTo(TimeUnit) : Builder" num="147" count="16" type="method"/>
            <line num="148" count="16" type="stmt"/>
            <line num="149" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="convertDurationsTo(TimeUnit) : Builder" num="158" count="16" type="method"/>
            <line num="159" count="16" type="stmt"/>
            <line num="160" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="filter(MetricFilter) : Builder" num="169" count="16" type="method"/>
            <line num="170" count="16" type="stmt"/>
            <line num="171" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="withLoggingLevel(LoggingLevel) : Builder" num="180" count="16" type="method"/>
            <line num="181" count="16" type="stmt"/>
            <line num="182" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="disabledMetricAttributes(Set&lt;MetricAttribute&gt;) : Builder" num="192" count="16" type="method"/>
            <line num="193" count="16" type="stmt"/>
            <line num="194" count="16" type="stmt"/>
            <line complexity="6" visibility="public" signature="build() : Slf4jReporter" num="202" count="16" type="method"/>
            <line num="203" count="16" type="stmt"/>
            <line num="204" count="16" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="6" type="stmt"/>
            <line num="209" count="6" type="stmt"/>
            <line num="210" count="6" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="10" type="stmt"/>
            <line num="215" count="10" type="stmt"/>
            <line num="216" count="10" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="222" count="16" type="stmt"/>
            <line complexity="1" visibility="private" signature="Slf4jReporter(MetricRegistry,LoggerProxy,Marker,String,TimeUnit,TimeUnit,MetricFilter,ScheduledExecutorService,boolean,Set&lt;MetricAttribute&gt;)" num="231" count="16" type="method"/>
            <line num="241" count="16" type="stmt"/>
            <line num="243" count="16" type="stmt"/>
            <line num="244" count="16" type="stmt"/>
            <line num="245" count="16" type="stmt"/>
            <line complexity="2" visibility="public" signature="report(SortedMap&lt;String, Gauge&gt;,SortedMap&lt;String, Counter&gt;,SortedMap&lt;String, Histogram&gt;,SortedMap&lt;String, Meter&gt;,SortedMap&lt;String, Timer&gt;) : void" num="248" count="16" type="method"/>
            <line num="255" count="16" type="stmt"/>
            <line falsecount="0" truecount="16" num="255" type="cond"/>
            <line num="256" count="16" type="stmt"/>
            <line num="257" count="16" type="stmt"/>
            <line num="258" count="4" type="stmt"/>
            <line num="261" count="16" type="stmt"/>
            <line num="262" count="4" type="stmt"/>
            <line num="265" count="16" type="stmt"/>
            <line num="266" count="4" type="stmt"/>
            <line num="269" count="16" type="stmt"/>
            <line num="270" count="4" type="stmt"/>
            <line num="273" count="16" type="stmt"/>
            <line num="274" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="logTimer(StringBuilder,String,Timer) : void" num="279" count="4" type="method"/>
            <line num="280" count="4" type="stmt"/>
            <line num="281" count="4" type="stmt"/>
            <line num="282" count="4" type="stmt"/>
            <line num="283" count="4" type="stmt"/>
            <line num="284" count="4" type="stmt"/>
            <line num="285" count="4" type="stmt"/>
            <line num="286" count="4" type="stmt"/>
            <line num="287" count="4" type="stmt"/>
            <line num="288" count="4" type="stmt"/>
            <line num="289" count="4" type="stmt"/>
            <line num="290" count="4" type="stmt"/>
            <line num="291" count="4" type="stmt"/>
            <line num="292" count="4" type="stmt"/>
            <line num="293" count="4" type="stmt"/>
            <line num="294" count="4" type="stmt"/>
            <line num="295" count="4" type="stmt"/>
            <line num="296" count="4" type="stmt"/>
            <line num="297" count="4" type="stmt"/>
            <line num="298" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="logMeter(StringBuilder,String,Meter) : void" num="301" count="4" type="method"/>
            <line num="302" count="4" type="stmt"/>
            <line num="303" count="4" type="stmt"/>
            <line num="304" count="4" type="stmt"/>
            <line num="305" count="4" type="stmt"/>
            <line num="306" count="4" type="stmt"/>
            <line num="307" count="4" type="stmt"/>
            <line num="308" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="logHistogram(StringBuilder,String,Histogram) : void" num="311" count="4" type="method"/>
            <line num="312" count="4" type="stmt"/>
            <line num="313" count="4" type="stmt"/>
            <line num="314" count="4" type="stmt"/>
            <line num="315" count="4" type="stmt"/>
            <line num="316" count="4" type="stmt"/>
            <line num="317" count="4" type="stmt"/>
            <line num="318" count="4" type="stmt"/>
            <line num="319" count="4" type="stmt"/>
            <line num="320" count="4" type="stmt"/>
            <line num="321" count="4" type="stmt"/>
            <line num="322" count="4" type="stmt"/>
            <line num="323" count="4" type="stmt"/>
            <line num="324" count="4" type="stmt"/>
            <line num="325" count="4" type="stmt"/>
            <line num="326" count="4" type="stmt"/>
            <line num="327" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="logCounter(StringBuilder,String,Counter) : void" num="330" count="4" type="method"/>
            <line num="331" count="4" type="stmt"/>
            <line num="332" count="4" type="stmt"/>
            <line num="333" count="4" type="stmt"/>
            <line num="334" count="4" type="stmt"/>
            <line num="335" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="logGauge(StringBuilder,String,Gauge&lt;?&gt;) : void" num="338" count="4" type="method"/>
            <line num="339" count="4" type="stmt"/>
            <line num="340" count="4" type="stmt"/>
            <line num="341" count="4" type="stmt"/>
            <line num="342" count="4" type="stmt"/>
            <line num="343" count="4" type="stmt"/>
            <line complexity="2" visibility="private" signature="appendLongDurationIfEnabled(StringBuilder,MetricAttribute,Supplier&lt;Long&gt;) : void" num="346" count="8" type="method"/>
            <line num="348" count="8" type="stmt"/>
            <line falsecount="1" truecount="7" num="348" type="cond"/>
            <line num="349" count="7" type="stmt"/>
            <line complexity="2" visibility="private" signature="appendDoubleDurationIfEnabled(StringBuilder,MetricAttribute,Supplier&lt;Double&gt;) : void" num="353" count="32" type="method"/>
            <line num="355" count="32" type="stmt"/>
            <line falsecount="2" truecount="30" num="355" type="cond"/>
            <line num="356" count="30" type="stmt"/>
            <line complexity="2" visibility="private" signature="appendLongIfEnabled(StringBuilder,MetricAttribute,Supplier&lt;Long&gt;) : void" num="360" count="8" type="method"/>
            <line num="362" count="8" type="stmt"/>
            <line falsecount="1" truecount="7" num="362" type="cond"/>
            <line num="363" count="7" type="stmt"/>
            <line complexity="2" visibility="private" signature="appendDoubleIfEnabled(StringBuilder,MetricAttribute,Supplier&lt;Double&gt;) : void" num="367" count="32" type="method"/>
            <line num="369" count="32" type="stmt"/>
            <line falsecount="1" truecount="31" num="369" type="cond"/>
            <line num="370" count="31" type="stmt"/>
            <line complexity="2" visibility="private" signature="appendCountIfEnabled(StringBuilder,Counting) : void" num="374" count="12" type="method"/>
            <line num="375" count="12" type="stmt"/>
            <line falsecount="1" truecount="11" num="375" type="cond"/>
            <line num="376" count="11" type="stmt"/>
            <line complexity="1" visibility="private" signature="appendMetered(StringBuilder,Metered) : void" num="380" count="8" type="method"/>
            <line num="381" count="8" type="stmt"/>
            <line num="382" count="8" type="stmt"/>
            <line num="383" count="8" type="stmt"/>
            <line num="384" count="8" type="stmt"/>
            <line complexity="2" visibility="private" signature="appendRateIfEnabled(StringBuilder,MetricAttribute,Supplier&lt;Double&gt;) : void" num="387" count="32" type="method"/>
            <line num="388" count="32" type="stmt"/>
            <line falsecount="2" truecount="30" num="388" type="cond"/>
            <line num="389" count="30" type="stmt"/>
            <line complexity="1" visibility="private" signature="append(StringBuilder,String,long) : void" num="393" count="15" type="method"/>
            <line num="394" count="15" type="stmt"/>
            <line complexity="1" visibility="private" signature="append(StringBuilder,String,double) : void" num="397" count="67" type="method"/>
            <line num="398" count="67" type="stmt"/>
            <line complexity="1" visibility="private" signature="append(StringBuilder,String,String) : void" num="401" count="32" type="method"/>
            <line num="402" count="32" type="stmt"/>
            <line complexity="1" visibility="private" signature="append(StringBuilder,String,Object) : void" num="405" count="42" type="method"/>
            <line num="406" count="42" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getRateUnit() : String" num="409" count="8" type="method"/>
            <line num="411" count="8" type="stmt"/>
            <line complexity="1" visibility="private" signature="prefix(String) : String" num="414" count="20" type="method"/>
            <line num="415" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="LoggerProxy(Logger)" num="422" count="16" type="method"/>
            <line num="423" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="DebugLoggerProxy(Logger)" num="433" count="0" type="method"/>
            <line num="434" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="log(Marker,String) : void" num="437" count="0" type="method"/>
            <line num="439" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isEnabled(Marker) : boolean" num="442" count="0" type="method"/>
            <line num="444" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="TraceLoggerProxy(Logger)" num="450" count="0" type="method"/>
            <line num="451" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="log(Marker,String) : void" num="454" count="0" type="method"/>
            <line num="456" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isEnabled(Marker) : boolean" num="459" count="0" type="method"/>
            <line num="461" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="InfoLoggerProxy(Logger)" num="467" count="6" type="method"/>
            <line num="468" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="log(Marker,String) : void" num="471" count="10" type="method"/>
            <line num="473" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="isEnabled(Marker) : boolean" num="476" count="6" type="method"/>
            <line num="478" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="WarnLoggerProxy(Logger)" num="484" count="0" type="method"/>
            <line num="485" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="log(Marker,String) : void" num="488" count="0" type="method"/>
            <line num="490" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isEnabled(Marker) : boolean" num="493" count="0" type="method"/>
            <line num="495" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ErrorLoggerProxy(Logger)" num="501" count="10" type="method"/>
            <line num="502" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="log(Marker,String) : void" num="505" count="10" type="method"/>
            <line num="507" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="isEnabled(Marker) : boolean" num="510" count="10" type="method"/>
            <line num="512" count="10" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/main/java/com/codahale/metrics/SlidingTimeWindowArrayReservoir.java" name="SlidingTimeWindowArrayReservoir.java">
            <metrics coveredelements="43" coveredconditionals="8" complexity="13" loc="101" coveredmethods="6" methods="7" elements="51" classes="1" ncloc="70" statements="32" conditionals="12" coveredstatements="29"/>
            <class name="SlidingTimeWindowArrayReservoir">
               <metrics coveredelements="43" coveredconditionals="8" complexity="13" coveredmethods="6" methods="7" elements="51" statements="32" conditionals="12" coveredstatements="29"/>
            </class>
            <line complexity="1" visibility="public" signature="SlidingTimeWindowArrayReservoir(long,TimeUnit)" num="30" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SlidingTimeWindowArrayReservoir(long,TimeUnit,Clock)" num="41" count="75" type="method"/>
            <line num="42" count="75" type="stmt"/>
            <line num="43" count="75" type="stmt"/>
            <line num="44" count="75" type="stmt"/>
            <line num="45" count="75" type="stmt"/>
            <line num="46" count="75" type="stmt"/>
            <line num="47" count="75" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="50" count="53013" type="method"/>
            <line num="52" count="53013" type="stmt"/>
            <line num="53" count="53013" type="stmt"/>
            <line complexity="4" visibility="public" signature="update(long) : void" num="56" count="5005547" type="method"/>
            <line num="58" count="5005547" type="stmt"/>
            <line num="59" count="5005547" type="stmt"/>
            <line num="60" count="5005547" type="stmt"/>
            <line falsecount="4986014" truecount="19533" num="60" type="cond"/>
            <line num="61" count="19533" type="stmt"/>
            <line num="63" count="5005547" type="stmt"/>
            <line num="64" count="5005547" type="stmt"/>
            <line num="65" count="5005547" type="stmt"/>
            <line num="66" count="5005547" type="stmt"/>
            <line falsecount="5005547" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="5005547" truecount="0" num="69" type="cond"/>
            <line complexity="1" visibility="public" signature="getSnapshot() : Snapshot" num="72" count="10023" type="method"/>
            <line num="74" count="10023" type="stmt"/>
            <line num="75" count="10023" type="stmt"/>
            <line complexity="3" visibility="private" signature="getTick() : long" num="78" count="5088116" type="method"/>
            <line num="79" count="5088116" type="stmt"/>
            <line num="80" count="5088116" type="stmt"/>
            <line num="81" count="5088116" type="stmt"/>
            <line num="83" count="5088116" type="stmt"/>
            <line falsecount="4070640" truecount="1017476" num="83" type="cond"/>
            <line num="84" count="5088116" type="stmt"/>
            <line falsecount="0" truecount="5088116" num="84" type="cond"/>
            <line num="85" count="5088116" type="stmt"/>
            <line complexity="2" visibility="package" signature="trim() : void" num="90" count="82569" type="method"/>
            <line num="91" count="82569" type="stmt"/>
            <line num="92" count="82569" type="stmt"/>
            <line num="93" count="82569" type="stmt"/>
            <line num="94" count="82569" type="stmt"/>
            <line falsecount="0" truecount="82569" num="94" type="cond"/>
            <line num="95" count="82569" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/main/java/com/codahale/metrics/SlidingTimeWindowMovingAverages.java" name="SlidingTimeWindowMovingAverages.java">
            <metrics coveredelements="91" coveredconditionals="21" complexity="24" loc="197" coveredmethods="13" methods="13" elements="92" classes="1" ncloc="124" statements="57" conditionals="22" coveredstatements="57"/>
            <class name="SlidingTimeWindowMovingAverages">
               <metrics coveredelements="91" coveredconditionals="21" complexity="24" coveredmethods="13" methods="13" elements="92" statements="57" conditionals="22" coveredstatements="57"/>
            </class>
            <line complexity="1" visibility="public" signature="SlidingTimeWindowMovingAverages()" num="68" count="1" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="SlidingTimeWindowMovingAverages(Clock)" num="77" count="11" type="method"/>
            <line num="78" count="11" type="stmt"/>
            <line num="79" count="11" type="stmt"/>
            <line num="80" count="11" type="stmt"/>
            <line num="82" count="11" type="stmt"/>
            <line num="83" count="11" type="stmt"/>
            <line falsecount="11" truecount="9900" num="83" type="cond"/>
            <line num="84" count="9900" type="stmt"/>
            <line num="86" count="11" type="stmt"/>
            <line num="87" count="11" type="stmt"/>
            <line num="88" count="11" type="stmt"/>
            <line num="89" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="update(long) : void" num="92" count="2814" type="method"/>
            <line num="94" count="2814" type="stmt"/>
            <line complexity="3" visibility="public" signature="tickIfNecessary() : void" num="97" count="2838" type="method"/>
            <line num="99" count="2838" type="stmt"/>
            <line num="100" count="2838" type="stmt"/>
            <line num="101" count="2838" type="stmt"/>
            <line num="102" count="2838" type="stmt"/>
            <line falsecount="25" truecount="2813" num="102" type="cond"/>
            <line num="105" count="2813" type="stmt"/>
            <line num="106" count="2813" type="stmt"/>
            <line falsecount="0" truecount="2813" num="106" type="cond"/>
            <line num="107" count="2813" type="stmt"/>
            <line num="108" count="2813" type="stmt"/>
            <line num="109" count="2813" type="stmt"/>
            <line complexity="1" visibility="public" signature="getM15Rate() : double" num="114" count="8" type="method"/>
            <line num="116" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getM5Rate() : double" num="119" count="8" type="method"/>
            <line num="121" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getM1Rate() : double" num="124" count="8" type="method"/>
            <line num="126" count="8" type="stmt"/>
            <line complexity="1" visibility="private" signature="getMinuteRate(int) : double" num="129" count="24" type="method"/>
            <line num="130" count="24" type="stmt"/>
            <line num="131" count="24" type="stmt"/>
            <line complexity="1" visibility="package" signature="calculateIndexOfTick(Instant) : int" num="134" count="2943" type="method"/>
            <line num="135" count="2943" type="stmt"/>
            <line complexity="2" visibility="package" signature="normalizeIndex(int) : int" num="138" count="2973" type="method"/>
            <line num="139" count="2973" type="stmt"/>
            <line num="140" count="2973" type="stmt"/>
            <line falsecount="21" truecount="2952" num="140" type="cond"/>
            <line complexity="3" visibility="private" signature="cleanOldBuckets(Instant) : void" num="143" count="2813" type="method"/>
            <line num="144" count="2813" type="stmt"/>
            <line num="145" count="2813" type="stmt"/>
            <line num="146" count="2813" type="stmt"/>
            <line num="147" count="2813" type="stmt"/>
            <line falsecount="2812" truecount="1" num="147" type="cond"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="2812" type="stmt"/>
            <line falsecount="2708" truecount="104" num="151" type="cond"/>
            <line num="152" count="104" type="stmt"/>
            <line num="153" count="104" type="stmt"/>
            <line num="155" count="2708" type="stmt"/>
            <line num="158" count="105" type="stmt"/>
            <line num="159" count="105" type="stmt"/>
            <line complexity="5" visibility="private" signature="cleanBucketRange(int,int) : void" num="162" count="105" type="method"/>
            <line num="163" count="105" type="stmt"/>
            <line falsecount="2" truecount="103" num="163" type="cond"/>
            <line num="164" count="103" type="stmt"/>
            <line falsecount="103" truecount="133" num="164" type="cond"/>
            <line num="165" count="133" type="stmt"/>
            <line num="168" count="2" type="stmt"/>
            <line falsecount="2" truecount="1769" num="168" type="cond"/>
            <line num="169" count="1769" type="stmt"/>
            <line num="171" count="2" type="stmt"/>
            <line falsecount="2" truecount="11" num="171" type="cond"/>
            <line num="172" count="11" type="stmt"/>
            <line complexity="2" visibility="private" signature="sumBuckets(Instant,int) : long" num="177" count="24" type="method"/>
            <line num="180" count="24" type="stmt"/>
            <line num="181" count="24" type="stmt"/>
            <line num="182" count="24" type="stmt"/>
            <line num="184" count="24" type="stmt"/>
            <line falsecount="20" truecount="4" num="184" type="cond"/>
            <line num="185" count="4" type="stmt"/>
            <line num="191" count="20" type="stmt"/>
            <line num="192" count="20" type="stmt"/>
            <line num="194" count="24" type="stmt"/>
            <line num="195" count="24" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/main/java/com/codahale/metrics/SlidingTimeWindowReservoir.java" name="SlidingTimeWindowReservoir.java">
            <metrics coveredelements="39" coveredconditionals="7" complexity="11" loc="95" coveredmethods="6" methods="7" elements="42" classes="1" ncloc="64" statements="27" conditionals="8" coveredstatements="26"/>
            <class name="SlidingTimeWindowReservoir">
               <metrics coveredelements="39" coveredconditionals="7" complexity="11" coveredmethods="6" methods="7" elements="42" statements="27" conditionals="8" coveredstatements="26"/>
            </class>
            <line complexity="1" visibility="public" signature="SlidingTimeWindowReservoir(long,TimeUnit)" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SlidingTimeWindowReservoir(long,TimeUnit,Clock)" num="43" count="75" type="method"/>
            <line num="44" count="75" type="stmt"/>
            <line num="45" count="75" type="stmt"/>
            <line num="46" count="75" type="stmt"/>
            <line num="47" count="75" type="stmt"/>
            <line num="48" count="75" type="stmt"/>
            <line num="49" count="75" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="52" count="53013" type="method"/>
            <line num="54" count="53013" type="stmt"/>
            <line num="55" count="53013" type="stmt"/>
            <line complexity="2" visibility="public" signature="update(long) : void" num="58" count="5005547" type="method"/>
            <line num="60" count="5005547" type="stmt"/>
            <line falsecount="4986014" truecount="19533" num="60" type="cond"/>
            <line num="61" count="19533" type="stmt"/>
            <line num="63" count="5005547" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSnapshot() : Snapshot" num="66" count="10023" type="method"/>
            <line num="68" count="10023" type="stmt"/>
            <line num="69" count="10023" type="stmt"/>
            <line complexity="3" visibility="private" signature="getTick() : long" num="72" count="5088116" type="method"/>
            <line num="73" count="5088116" type="stmt"/>
            <line num="74" count="5088116" type="stmt"/>
            <line num="75" count="5088116" type="stmt"/>
            <line num="77" count="5088116" type="stmt"/>
            <line falsecount="4070552" truecount="1017564" num="77" type="cond"/>
            <line num="78" count="5088116" type="stmt"/>
            <line falsecount="0" truecount="5088116" num="78" type="cond"/>
            <line num="79" count="5088116" type="stmt"/>
            <line complexity="2" visibility="private" signature="trim() : void" num="84" count="82569" type="method"/>
            <line num="85" count="82569" type="stmt"/>
            <line num="86" count="82569" type="stmt"/>
            <line num="87" count="82569" type="stmt"/>
            <line num="88" count="82569" type="stmt"/>
            <line falsecount="16399" truecount="66170" num="88" type="cond"/>
            <line num="89" count="66170" type="stmt"/>
            <line num="90" count="66170" type="stmt"/>
            <line num="92" count="16399" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/main/java/com/codahale/metrics/SlidingWindowReservoir.java" name="SlidingWindowReservoir.java">
            <metrics coveredelements="15" coveredconditionals="2" complexity="5" loc="43" coveredmethods="4" methods="4" elements="15" classes="1" ncloc="28" statements="9" conditionals="2" coveredstatements="9"/>
            <class name="SlidingWindowReservoir">
               <metrics coveredelements="15" coveredconditionals="2" complexity="5" coveredmethods="4" methods="4" elements="15" statements="9" conditionals="2" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="SlidingWindowReservoir(int)" num="18" count="2" type="method"/>
            <line num="19" count="2" type="stmt"/>
            <line num="20" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="23" count="2" type="method"/>
            <line num="25" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="update(long) : void" num="28" count="6" type="method"/>
            <line num="30" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="getSnapshot() : Snapshot" num="33" count="2" type="method"/>
            <line num="35" count="2" type="stmt"/>
            <line num="36" count="2" type="stmt"/>
            <line falsecount="2" truecount="5" num="36" type="cond"/>
            <line num="37" count="5" type="stmt"/>
            <line num="38" count="5" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/main/java/com/codahale/metrics/Snapshot.java" name="Snapshot.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="6" loc="121" coveredmethods="6" methods="6" elements="12" classes="1" ncloc="30" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="Snapshot">
               <metrics coveredelements="12" coveredconditionals="0" complexity="6" coveredmethods="6" methods="6" elements="12" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="getMedian() : double" num="37" count="24" type="method"/>
            <line num="38" count="24" type="stmt"/>
            <line complexity="1" visibility="public" signature="get75thPercentile() : double" num="46" count="15" type="method"/>
            <line num="47" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="get95thPercentile() : double" num="55" count="15" type="method"/>
            <line num="56" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="get98thPercentile() : double" num="64" count="14" type="method"/>
            <line num="65" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="get99thPercentile() : double" num="73" count="14" type="method"/>
            <line num="74" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="get999thPercentile() : double" num="82" count="14" type="method"/>
            <line num="83" count="14" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/main/java/com/codahale/metrics/Timer.java" name="Timer.java">
            <metrics coveredelements="59" coveredconditionals="2" complexity="21" loc="203" coveredmethods="20" methods="20" elements="59" classes="2" ncloc="106" statements="37" conditionals="2" coveredstatements="37"/>
            <class name="Timer">
               <metrics coveredelements="49" coveredconditionals="2" complexity="18" coveredmethods="17" methods="17" elements="49" statements="30" conditionals="2" coveredstatements="30"/>
            </class>
            <class name="Timer.Context">
               <metrics coveredelements="10" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="10" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="private" signature="Context(Timer,Clock)" num="23" count="59" type="method"/>
            <line num="24" count="59" type="stmt"/>
            <line num="25" count="59" type="stmt"/>
            <line num="26" count="59" type="stmt"/>
            <line complexity="1" visibility="public" signature="stop() : long" num="35" count="59" type="method"/>
            <line num="36" count="59" type="stmt"/>
            <line num="37" count="59" type="stmt"/>
            <line num="38" count="59" type="stmt"/>
            <line complexity="1" visibility="public" signature="close() : void" num="44" count="34" type="method"/>
            <line num="46" count="34" type="stmt"/>
            <line complexity="1" visibility="public" signature="Timer()" num="58" count="130" type="method"/>
            <line num="59" count="130" type="stmt"/>
            <line complexity="1" visibility="public" signature="Timer(Reservoir)" num="67" count="130" type="method"/>
            <line num="68" count="130" type="stmt"/>
            <line complexity="1" visibility="public" signature="Timer(Reservoir,Clock)" num="77" count="277" type="method"/>
            <line num="78" count="277" type="stmt"/>
            <line complexity="1" visibility="public" signature="Timer(Meter,Histogram,Clock)" num="81" count="277" type="method"/>
            <line num="82" count="277" type="stmt"/>
            <line num="83" count="277" type="stmt"/>
            <line num="84" count="277" type="stmt"/>
            <line complexity="1" visibility="public" signature="update(long,TimeUnit) : void" num="93" count="113" type="method"/>
            <line num="94" count="113" type="stmt"/>
            <line complexity="1" visibility="public" signature="update(Duration) : void" num="102" count="2" type="method"/>
            <line num="103" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="time(Callable&lt;T&gt;) : T" num="115" count="1" type="method"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="timeSupplier(Supplier&lt;T&gt;) : T" num="133" count="1" type="method"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="time(Runnable) : void" num="148" count="1" type="method"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="time() : Context" num="163" count="59" type="method"/>
            <line num="164" count="59" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCount() : long" num="167" count="68" type="method"/>
            <line num="169" count="68" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFifteenMinuteRate() : double" num="172" count="7" type="method"/>
            <line num="174" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFiveMinuteRate() : double" num="177" count="7" type="method"/>
            <line num="179" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMeanRate() : double" num="182" count="7" type="method"/>
            <line num="184" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOneMinuteRate() : double" num="187" count="7" type="method"/>
            <line num="189" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSnapshot() : Snapshot" num="192" count="45" type="method"/>
            <line num="194" count="45" type="stmt"/>
            <line complexity="2" visibility="private" signature="update(long) : void" num="197" count="118" type="method"/>
            <line num="198" count="118" type="stmt"/>
            <line falsecount="2" truecount="116" num="198" type="cond"/>
            <line num="199" count="116" type="stmt"/>
            <line num="200" count="116" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/main/java/com/codahale/metrics/UniformReservoir.java" name="UniformReservoir.java">
            <metrics coveredelements="31" coveredconditionals="9" complexity="10" loc="70" coveredmethods="4" methods="5" elements="35" classes="1" ncloc="48" statements="20" conditionals="10" coveredstatements="18"/>
            <class name="UniformReservoir">
               <metrics coveredelements="31" coveredconditionals="9" complexity="10" coveredmethods="4" methods="5" elements="35" statements="20" conditionals="10" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="public" signature="UniformReservoir()" num="22" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="UniformReservoir(int)" num="31" count="1" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line falsecount="1" truecount="100" num="33" type="cond"/>
            <line num="34" count="100" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="size() : int" num="39" count="2" type="method"/>
            <line num="41" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="42" type="cond"/>
            <line num="43" count="2" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="update(long) : void" num="48" count="1000" type="method"/>
            <line num="50" count="1000" type="stmt"/>
            <line num="51" count="1000" type="stmt"/>
            <line falsecount="900" truecount="100" num="51" type="cond"/>
            <line num="52" count="100" type="stmt"/>
            <line num="54" count="900" type="stmt"/>
            <line num="55" count="900" type="stmt"/>
            <line falsecount="654" truecount="246" num="55" type="cond"/>
            <line num="56" count="246" type="stmt"/>
            <line complexity="2" visibility="public" signature="getSnapshot() : Snapshot" num="61" count="1" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line falsecount="1" truecount="100" num="65" type="cond"/>
            <line num="66" count="100" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/main/java/com/codahale/metrics/UniformSnapshot.java" name="UniformSnapshot.java">
            <metrics coveredelements="73" coveredconditionals="17" complexity="23" loc="177" coveredmethods="10" methods="10" elements="75" classes="1" ncloc="98" statements="47" conditionals="18" coveredstatements="46"/>
            <class name="UniformSnapshot">
               <metrics coveredelements="73" coveredconditionals="17" complexity="23" coveredmethods="10" methods="10" elements="75" statements="47" conditionals="18" coveredstatements="46"/>
            </class>
            <line complexity="2" visibility="public" signature="UniformSnapshot(Collection&lt;Long&gt;)" num="24" count="10025" type="method"/>
            <line num="25" count="10025" type="stmt"/>
            <line num="26" count="10025" type="stmt"/>
            <line num="27" count="10025" type="stmt"/>
            <line falsecount="10025" truecount="3006111" num="27" type="cond"/>
            <line num="28" count="3006111" type="stmt"/>
            <line num="30" count="10025" type="stmt"/>
            <line complexity="1" visibility="public" signature="UniformSnapshot(long[])" num="38" count="10056" type="method"/>
            <line num="39" count="10056" type="stmt"/>
            <line num="40" count="10056" type="stmt"/>
            <line complexity="7" visibility="public" signature="getValue(double) : double" num="49" count="11" type="method"/>
            <line num="51" count="11" type="stmt"/>
            <line falsecount="8" truecount="3" num="51" type="cond"/>
            <line num="52" count="3" type="stmt"/>
            <line num="55" count="8" type="stmt"/>
            <line falsecount="8" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="59" count="8" type="stmt"/>
            <line num="60" count="8" type="stmt"/>
            <line num="62" count="8" type="stmt"/>
            <line falsecount="7" truecount="1" num="62" type="cond"/>
            <line num="63" count="1" type="stmt"/>
            <line num="66" count="7" type="stmt"/>
            <line falsecount="2" truecount="5" num="66" type="cond"/>
            <line num="67" count="5" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line num="71" count="2" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="80" count="2" type="method"/>
            <line num="82" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValues() : long[]" num="90" count="20052" type="method"/>
            <line num="92" count="20052" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMax() : long" num="100" count="2" type="method"/>
            <line num="102" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="102" type="cond"/>
            <line num="103" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMin() : long" num="113" count="2" type="method"/>
            <line num="115" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="115" type="cond"/>
            <line num="116" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMean() : double" num="126" count="3" type="method"/>
            <line num="128" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="128" type="cond"/>
            <line num="129" count="1" type="stmt"/>
            <line num="132" count="2" type="stmt"/>
            <line num="133" count="2" type="stmt"/>
            <line num="134" count="10" type="stmt"/>
            <line num="136" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="getStdDev() : double" num="144" count="3" type="method"/>
            <line num="148" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="148" type="cond"/>
            <line num="149" count="2" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="5" type="stmt"/>
            <line num="157" count="5" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="dump(OutputStream) : void" num="169" count="1" type="method"/>
            <line num="171" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="5" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/main/java/com/codahale/metrics/WeightedSnapshot.java" name="WeightedSnapshot.java">
            <metrics coveredelements="89" coveredconditionals="27" complexity="28" loc="195" coveredmethods="10" methods="10" elements="91" classes="2" ncloc="112" statements="53" conditionals="28" coveredstatements="52"/>
            <class name="WeightedSnapshot">
               <metrics coveredelements="86" coveredconditionals="27" complexity="27" coveredmethods="9" methods="9" elements="88" statements="51" conditionals="28" coveredstatements="50"/>
            </class>
            <class name="WeightedSnapshot.WeightedSample">
               <metrics coveredelements="3" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="WeightedSample(long,double)" num="24" count="12254" type="method"/>
            <line num="25" count="12254" type="stmt"/>
            <line num="26" count="12254" type="stmt"/>
            <line complexity="4" visibility="public" signature="WeightedSnapshot(Collection&lt;WeightedSample&gt;)" num="39" count="164" type="method"/>
            <line num="40" count="164" type="stmt"/>
            <line num="42" count="164" type="stmt"/>
            <line num="44" count="164" type="stmt"/>
            <line num="45" count="164" type="stmt"/>
            <line num="46" count="164" type="stmt"/>
            <line num="48" count="164" type="stmt"/>
            <line num="49" count="164" type="stmt"/>
            <line num="50" count="2879" type="stmt"/>
            <line num="53" count="164" type="stmt"/>
            <line falsecount="164" truecount="2879" num="53" type="cond"/>
            <line num="54" count="2879" type="stmt"/>
            <line num="55" count="2879" type="stmt"/>
            <line falsecount="3" truecount="2876" num="55" type="cond"/>
            <line num="58" count="164" type="stmt"/>
            <line falsecount="164" truecount="2755" num="58" type="cond"/>
            <line num="59" count="2755" type="stmt"/>
            <line complexity="8" visibility="public" signature="getValue(double) : double" num="69" count="95" type="method"/>
            <line num="71" count="95" type="stmt"/>
            <line falsecount="92" truecount="3" num="71" type="cond"/>
            <line num="72" count="3" type="stmt"/>
            <line num="75" count="92" type="stmt"/>
            <line falsecount="90" truecount="2" num="75" type="cond"/>
            <line num="76" count="2" type="stmt"/>
            <line num="79" count="90" type="stmt"/>
            <line num="80" count="90" type="stmt"/>
            <line falsecount="2" truecount="88" num="80" type="cond"/>
            <line num="81" count="88" type="stmt"/>
            <line num="83" count="90" type="stmt"/>
            <line falsecount="11" truecount="79" num="83" type="cond"/>
            <line num="84" count="79" type="stmt"/>
            <line num="87" count="11" type="stmt"/>
            <line falsecount="11" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="91" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="99" count="22" type="method"/>
            <line num="101" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValues() : long[]" num="109" count="17" type="method"/>
            <line num="111" count="17" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMax() : long" num="119" count="31" type="method"/>
            <line num="121" count="31" type="stmt"/>
            <line falsecount="28" truecount="3" num="121" type="cond"/>
            <line num="122" count="3" type="stmt"/>
            <line num="124" count="28" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMin() : long" num="132" count="14" type="method"/>
            <line num="134" count="14" type="stmt"/>
            <line falsecount="13" truecount="1" num="134" type="cond"/>
            <line num="135" count="1" type="stmt"/>
            <line num="137" count="13" type="stmt"/>
            <line complexity="3" visibility="public" signature="getMean() : double" num="145" count="76" type="method"/>
            <line num="147" count="76" type="stmt"/>
            <line falsecount="39" truecount="37" num="147" type="cond"/>
            <line num="148" count="37" type="stmt"/>
            <line num="151" count="39" type="stmt"/>
            <line num="152" count="39" type="stmt"/>
            <line falsecount="39" truecount="71" num="152" type="cond"/>
            <line num="153" count="71" type="stmt"/>
            <line num="155" count="39" type="stmt"/>
            <line complexity="3" visibility="public" signature="getStdDev() : double" num="163" count="15" type="method"/>
            <line num="167" count="15" type="stmt"/>
            <line falsecount="1" truecount="14" num="167" type="cond"/>
            <line num="168" count="14" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line falsecount="1" truecount="5" num="174" type="cond"/>
            <line num="175" count="5" type="stmt"/>
            <line num="176" count="5" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="dump(OutputStream) : void" num="187" count="1" type="method"/>
            <line num="189" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line num="191" count="5" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics.jersey2">
         <metrics coveredelements="270" complexity="90" loc="562" methods="42" classes="10" statements="176" coveredconditionals="63" coveredmethods="40" elements="288" ncloc="423" files="2" conditionals="70" coveredstatements="167"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jersey2/src/main/java/com/codahale/metrics/jersey2/InstrumentedResourceMethodApplicationListener.java" name="InstrumentedResourceMethodApplicationListener.java">
            <metrics coveredelements="259" coveredconditionals="63" complexity="85" loc="500" coveredmethods="36" methods="37" elements="275" classes="9" ncloc="393" statements="168" conditionals="70" coveredstatements="160"/>
            <class name="InstrumentedResourceMethodApplicationListener">
               <metrics coveredelements="116" coveredconditionals="26" complexity="30" coveredmethods="15" methods="16" elements="122" statements="80" conditionals="26" coveredstatements="75"/>
            </class>
            <class name="InstrumentedResourceMethodApplicationListener.ExceptionMeterMetric">
               <metrics coveredelements="4" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="4" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="InstrumentedResourceMethodApplicationListener.ResponseMeterMetric">
               <metrics coveredelements="3" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="InstrumentedResourceMethodApplicationListener.TimerRequestEventListener">
               <metrics coveredelements="56" coveredconditionals="13" complexity="19" coveredmethods="4" methods="4" elements="57" statements="39" conditionals="14" coveredstatements="39"/>
            </class>
            <class name="InstrumentedResourceMethodApplicationListener.MeterRequestEventListener">
               <metrics coveredelements="11" coveredconditionals="4" complexity="4" coveredmethods="2" methods="2" elements="11" statements="5" conditionals="4" coveredstatements="5"/>
            </class>
            <class name="InstrumentedResourceMethodApplicationListener.ExceptionMeterRequestEventListener">
               <metrics coveredelements="16" coveredconditionals="7" complexity="8" coveredmethods="2" methods="2" elements="17" statements="7" conditionals="8" coveredstatements="7"/>
            </class>
            <class name="InstrumentedResourceMethodApplicationListener.ResponseMeterRequestEventListener">
               <metrics coveredelements="24" coveredconditionals="10" complexity="9" coveredmethods="2" methods="2" elements="26" statements="12" conditionals="12" coveredstatements="12"/>
            </class>
            <class name="InstrumentedResourceMethodApplicationListener.ChainedRequestEventListener">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="InstrumentedResourceMethodApplicationListener.EventTypeAndMethod">
               <metrics coveredelements="24" coveredconditionals="3" complexity="11" coveredmethods="7" methods="7" elements="30" statements="17" conditionals="6" coveredstatements="14"/>
            </class>
            <line complexity="1" visibility="public" signature="InstrumentedResourceMethodApplicationListener(MetricRegistry)" num="68" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="InstrumentedResourceMethodApplicationListener(MetricRegistry,Clock,boolean)" num="79" count="27" type="method"/>
            <line num="81" count="27" type="stmt"/>
            <line num="82" count="27" type="stmt"/>
            <line num="83" count="27" type="stmt"/>
            <line complexity="1" visibility="public" signature="ExceptionMeterMetric(MetricRegistry,ResourceMethod,ExceptionMetered)" num="95" count="15" type="method"/>
            <line num="98" count="15" type="stmt"/>
            <line num="100" count="15" type="stmt"/>
            <line num="101" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="ResponseMeterMetric(MetricRegistry,ResourceMethod,ResponseMetered)" num="113" count="133" type="method"/>
            <line num="116" count="133" type="stmt"/>
            <line num="117" count="133" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimerRequestEventListener(ConcurrentMap&lt;EventTypeAndMethod, Timer&gt;,Clock)" num="136" count="34" type="method"/>
            <line num="137" count="34" type="stmt"/>
            <line num="138" count="34" type="stmt"/>
            <line num="139" count="34" type="stmt"/>
            <line complexity="14" visibility="public" signature="onEvent(RequestEvent) : void" num="142" count="283" type="method"/>
            <line num="144" count="283" type="stmt"/>
            <line num="145" count="32" type="stmt"/>
            <line num="146" count="32" type="stmt"/>
            <line num="147" count="32" type="stmt"/>
            <line num="148" count="32" type="stmt"/>
            <line num="149" count="32" type="stmt"/>
            <line num="150" count="32" type="stmt"/>
            <line num="151" count="30" type="stmt"/>
            <line num="152" count="30" type="stmt"/>
            <line num="153" count="30" type="stmt"/>
            <line num="154" count="32" type="stmt"/>
            <line num="155" count="32" type="stmt"/>
            <line falsecount="19" truecount="13" num="155" type="cond"/>
            <line num="156" count="13" type="stmt"/>
            <line num="158" count="32" type="stmt"/>
            <line num="159" count="32" type="stmt"/>
            <line num="160" count="32" type="stmt"/>
            <line falsecount="23" truecount="9" num="160" type="cond"/>
            <line num="161" count="9" type="stmt"/>
            <line num="163" count="32" type="stmt"/>
            <line num="164" count="30" type="stmt"/>
            <line num="165" count="30" type="stmt"/>
            <line falsecount="21" truecount="9" num="165" type="cond"/>
            <line num="166" count="9" type="stmt"/>
            <line num="168" count="30" type="stmt"/>
            <line num="169" count="34" type="stmt"/>
            <line num="170" count="34" type="stmt"/>
            <line falsecount="25" truecount="9" num="170" type="cond"/>
            <line num="171" count="9" type="stmt"/>
            <line num="172" count="9" type="stmt"/>
            <line falsecount="0" truecount="9" num="172" type="cond"/>
            <line num="173" count="9" type="stmt"/>
            <line num="176" count="34" type="stmt"/>
            <line num="177" count="61" type="stmt"/>
            <line num="178" count="61" type="stmt"/>
            <line complexity="2" visibility="private" signature="timer(RequestEvent) : Timer" num="182" count="103" type="method"/>
            <line num="183" count="103" type="stmt"/>
            <line num="184" count="103" type="stmt"/>
            <line falsecount="101" truecount="2" num="184" type="cond"/>
            <line num="185" count="2" type="stmt"/>
            <line num="187" count="101" type="stmt"/>
            <line complexity="2" visibility="private" signature="context(RequestEvent) : Timer.Context" num="190" count="94" type="method"/>
            <line num="191" count="94" type="stmt"/>
            <line num="192" count="94" type="stmt"/>
            <line falsecount="63" truecount="31" num="192" type="cond"/>
            <line complexity="1" visibility="public" signature="MeterRequestEventListener(ConcurrentMap&lt;Method, Meter&gt;)" num="199" count="34" type="method"/>
            <line num="200" count="34" type="stmt"/>
            <line complexity="3" visibility="public" signature="onEvent(RequestEvent) : void" num="203" count="283" type="method"/>
            <line num="205" count="283" type="stmt"/>
            <line falsecount="251" truecount="32" num="205" type="cond"/>
            <line num="206" count="32" type="stmt"/>
            <line num="207" count="32" type="stmt"/>
            <line falsecount="29" truecount="3" num="207" type="cond"/>
            <line num="208" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="ExceptionMeterRequestEventListener(ConcurrentMap&lt;Method, ExceptionMeterMetric&gt;)" num="217" count="34" type="method"/>
            <line num="218" count="34" type="stmt"/>
            <line complexity="7" visibility="public" signature="onEvent(RequestEvent) : void" num="221" count="283" type="method"/>
            <line num="223" count="283" type="stmt"/>
            <line falsecount="275" truecount="8" num="223" type="cond"/>
            <line num="224" count="8" type="stmt"/>
            <line num="225" count="8" type="stmt"/>
            <line falsecount="2" truecount="6" num="225" type="cond"/>
            <line num="228" count="8" type="stmt"/>
            <line falsecount="5" truecount="3" num="228" type="cond"/>
            <line num="229" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="229" type="cond"/>
            <line num="232" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="ResponseMeterRequestEventListener(ConcurrentMap&lt;Method, ResponseMeterMetric&gt;)" num="242" count="34" type="method"/>
            <line num="243" count="34" type="stmt"/>
            <line complexity="8" visibility="public" signature="onEvent(RequestEvent) : void" num="246" count="283" type="method"/>
            <line num="248" count="283" type="stmt"/>
            <line falsecount="249" truecount="34" num="248" type="cond"/>
            <line num="249" count="34" type="stmt"/>
            <line num="250" count="34" type="stmt"/>
            <line falsecount="2" truecount="32" num="250" type="cond"/>
            <line num="253" count="34" type="stmt"/>
            <line falsecount="24" truecount="10" num="253" type="cond"/>
            <line num="254" count="10" type="stmt"/>
            <line num="255" count="10" type="stmt"/>
            <line falsecount="9" truecount="1" num="255" type="cond"/>
            <line num="256" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="256" type="cond"/>
            <line num="257" count="1" type="stmt"/>
            <line num="260" count="9" type="stmt"/>
            <line num="261" count="9" type="stmt"/>
            <line falsecount="0" truecount="9" num="261" type="cond"/>
            <line num="262" count="9" type="stmt"/>
            <line complexity="1" visibility="private" signature="ChainedRequestEventListener(RequestEventListener)" num="273" count="34" type="method"/>
            <line num="274" count="34" type="stmt"/>
            <line complexity="1" visibility="public" signature="onEvent(RequestEvent) : void" num="277" count="283" type="method"/>
            <line num="279" count="283" type="stmt"/>
            <line num="280" count="1132" type="stmt"/>
            <line complexity="2" visibility="public" signature="onEvent(ApplicationEvent) : void" num="285" count="54" type="method"/>
            <line num="287" count="54" type="stmt"/>
            <line falsecount="27" truecount="27" num="287" type="cond"/>
            <line num="288" count="27" type="stmt"/>
            <line complexity="1" visibility="public" signature="processResourceModel(ResourceModel,Configuration) : ResourceModel" num="292" count="27" type="method"/>
            <line num="294" count="27" type="stmt"/>
            <line complexity="1" visibility="public" signature="processSubResource(ResourceModel,Configuration) : ResourceModel" num="297" count="6" type="method"/>
            <line num="299" count="6" type="stmt"/>
            <line num="300" count="6" type="stmt"/>
            <line complexity="1" visibility="private" signature="registerMetricsForModel(ResourceModel) : void" num="303" count="33" type="method"/>
            <line num="304" count="33" type="stmt"/>
            <line num="306" count="33" type="stmt"/>
            <line num="307" count="33" type="stmt"/>
            <line num="308" count="33" type="stmt"/>
            <line num="309" count="33" type="stmt"/>
            <line num="311" count="33" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="318" count="33" type="stmt"/>
            <line num="320" count="138" type="stmt"/>
            <line num="321" count="138" type="stmt"/>
            <line num="322" count="138" type="stmt"/>
            <line num="323" count="138" type="stmt"/>
            <line num="325" count="138" type="stmt"/>
            <line num="326" count="348" type="stmt"/>
            <line num="327" count="348" type="stmt"/>
            <line num="328" count="348" type="stmt"/>
            <line num="329" count="348" type="stmt"/>
            <line complexity="1" visibility="public" signature="onRequest(RequestEvent) : RequestEventListener" num="335" count="34" type="method"/>
            <line num="337" count="34" type="stmt"/>
            <line num="343" count="34" type="stmt"/>
            <line complexity="2" visibility="private" signature="getClassLevelAnnotation(Resource,Class&lt;T&gt;) : T" num="346" count="684" type="method"/>
            <line num="347" count="684" type="stmt"/>
            <line num="349" count="684" type="stmt"/>
            <line num="350" count="1640" type="stmt"/>
            <line num="352" count="1640" type="stmt"/>
            <line falsecount="1566" truecount="74" num="352" type="cond"/>
            <line num="353" count="74" type="stmt"/>
            <line num="356" count="684" type="stmt"/>
            <line complexity="3" visibility="private" signature="registerTimedAnnotations(ResourceMethod,Timed) : void" num="359" count="348" type="method"/>
            <line num="360" count="348" type="stmt"/>
            <line num="361" count="348" type="stmt"/>
            <line falsecount="339" truecount="9" num="361" type="cond"/>
            <line num="362" count="9" type="stmt"/>
            <line num="363" count="9" type="stmt"/>
            <line num="366" count="339" type="stmt"/>
            <line num="367" count="339" type="stmt"/>
            <line falsecount="304" truecount="35" num="367" type="cond"/>
            <line num="368" count="35" type="stmt"/>
            <line complexity="2" visibility="private" signature="registerTimers(ResourceMethod,Method,Timed) : void" num="372" count="44" type="method"/>
            <line num="373" count="44" type="stmt"/>
            <line num="374" count="44" type="stmt"/>
            <line falsecount="16" truecount="28" num="374" type="cond"/>
            <line num="375" count="28" type="stmt"/>
            <line num="376" count="28" type="stmt"/>
            <line num="377" count="28" type="stmt"/>
            <line complexity="3" visibility="private" signature="registerMeteredAnnotations(ResourceMethod,Metered) : void" num="381" count="348" type="method"/>
            <line num="382" count="348" type="stmt"/>
            <line num="384" count="348" type="stmt"/>
            <line falsecount="339" truecount="9" num="384" type="cond"/>
            <line num="385" count="9" type="stmt"/>
            <line num="386" count="9" type="stmt"/>
            <line num="388" count="339" type="stmt"/>
            <line num="390" count="339" type="stmt"/>
            <line falsecount="333" truecount="6" num="390" type="cond"/>
            <line num="391" count="6" type="stmt"/>
            <line complexity="3" visibility="private" signature="registerExceptionMeteredAnnotations(ResourceMethod,ExceptionMetered) : void" num="395" count="348" type="method"/>
            <line num="396" count="348" type="stmt"/>
            <line num="398" count="348" type="stmt"/>
            <line falsecount="339" truecount="9" num="398" type="cond"/>
            <line num="399" count="9" type="stmt"/>
            <line num="400" count="9" type="stmt"/>
            <line num="402" count="339" type="stmt"/>
            <line num="404" count="339" type="stmt"/>
            <line falsecount="333" truecount="6" num="404" type="cond"/>
            <line num="405" count="6" type="stmt"/>
            <line complexity="3" visibility="private" signature="registerResponseMeteredAnnotations(ResourceMethod,ResponseMetered) : void" num="409" count="348" type="method"/>
            <line num="410" count="348" type="stmt"/>
            <line num="412" count="348" type="stmt"/>
            <line falsecount="233" truecount="115" num="412" type="cond"/>
            <line num="413" count="115" type="stmt"/>
            <line num="414" count="115" type="stmt"/>
            <line num="416" count="233" type="stmt"/>
            <line num="418" count="233" type="stmt"/>
            <line falsecount="215" truecount="18" num="418" type="cond"/>
            <line num="419" count="18" type="stmt"/>
            <line complexity="1" visibility="private" signature="timerMetric(MetricRegistry,ResourceMethod,Timed,String) : Timer" num="423" count="128" type="method"/>
            <line num="427" count="128" type="stmt"/>
            <line num="428" count="128" type="stmt"/>
            <line complexity="1" visibility="private" signature="meterMetric(MetricRegistry,ResourceMethod,Metered) : Meter" num="431" count="15" type="method"/>
            <line num="434" count="15" type="stmt"/>
            <line num="435" count="15" type="stmt"/>
            <line complexity="4" visibility="protected" signature="chooseName(String,boolean,ResourceMethod,String) : String" num="438" count="291" type="method"/>
            <line num="440" count="291" type="stmt"/>
            <line num="441" count="291" type="stmt"/>
            <line num="442" count="291" type="stmt"/>
            <line falsecount="219" truecount="72" num="442" type="cond"/>
            <line num="443" count="72" type="stmt"/>
            <line falsecount="36" truecount="36" num="443" type="cond"/>
            <line num="445" count="219" type="stmt"/>
            <line num="447" count="291" type="stmt"/>
            <line complexity="1" visibility="private" signature="EventTypeAndMethod(RequestEvent.Type,Method)" num="455" count="229" type="method"/>
            <line num="456" count="229" type="stmt"/>
            <line num="457" count="229" type="stmt"/>
            <line complexity="1" visibility="package" signature="requestMethodStart(Method) : EventTypeAndMethod" num="460" count="44" type="method"/>
            <line num="461" count="44" type="stmt"/>
            <line complexity="1" visibility="package" signature="requestMatched(Method) : EventTypeAndMethod" num="464" count="28" type="method"/>
            <line num="465" count="28" type="stmt"/>
            <line complexity="1" visibility="package" signature="respFiltersStart(Method) : EventTypeAndMethod" num="468" count="28" type="method"/>
            <line num="469" count="28" type="stmt"/>
            <line complexity="1" visibility="package" signature="finished(Method) : EventTypeAndMethod" num="472" count="28" type="method"/>
            <line num="473" count="28" type="stmt"/>
            <line complexity="5" visibility="public" signature="equals(Object) : boolean" num="476" count="42" type="method"/>
            <line num="478" count="42" type="stmt"/>
            <line falsecount="42" truecount="0" num="478" type="cond"/>
            <line num="479" count="0" type="stmt"/>
            <line num="481" count="42" type="stmt"/>
            <line falsecount="42" truecount="0" num="481" type="cond"/>
            <line num="482" count="0" type="stmt"/>
            <line num="485" count="42" type="stmt"/>
            <line num="487" count="42" type="stmt"/>
            <line falsecount="42" truecount="0" num="487" type="cond"/>
            <line num="488" count="0" type="stmt"/>
            <line num="490" count="42" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="493" count="229" type="method"/>
            <line num="495" count="229" type="stmt"/>
            <line num="496" count="229" type="stmt"/>
            <line num="497" count="229" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jersey2/src/main/java/com/codahale/metrics/jersey2/MetricsFeature.java" name="MetricsFeature.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="5" loc="62" coveredmethods="4" methods="5" elements="13" classes="1" ncloc="30" statements="8" conditionals="0" coveredstatements="7"/>
            <class name="MetricsFeature">
               <metrics coveredelements="11" coveredconditionals="0" complexity="5" coveredmethods="4" methods="5" elements="13" statements="8" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="MetricsFeature(MetricRegistry)" num="20" count="18" type="method"/>
            <line num="21" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="MetricsFeature(MetricRegistry,Clock)" num="24" count="18" type="method"/>
            <line num="25" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="MetricsFeature(MetricRegistry,Clock,boolean)" num="28" count="27" type="method"/>
            <line num="29" count="27" type="stmt"/>
            <line num="30" count="27" type="stmt"/>
            <line num="31" count="27" type="stmt"/>
            <line complexity="1" visibility="public" signature="MetricsFeature(String)" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="configure(FeatureContext) : boolean" num="57" count="27" type="method"/>
            <line num="59" count="27" type="stmt"/>
            <line num="60" count="27" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics.graphite">
         <metrics coveredelements="385" complexity="132" loc="1394" methods="87" classes="9" statements="324" coveredconditionals="52" coveredmethods="66" elements="477" ncloc="839" files="7" conditionals="66" coveredstatements="267"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-graphite/src/main/java/com/codahale/metrics/graphite/Graphite.java" name="Graphite.java">
            <metrics coveredelements="60" coveredconditionals="10" complexity="23" loc="193" coveredmethods="10" methods="13" elements="73" classes="1" ncloc="119" statements="48" conditionals="12" coveredstatements="40"/>
            <class name="Graphite">
               <metrics coveredelements="60" coveredconditionals="10" complexity="23" coveredmethods="10" methods="13" elements="73" statements="48" conditionals="12" coveredstatements="40"/>
            </class>
            <line complexity="1" visibility="public" signature="Graphite(String,int)" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Graphite(String,int,SocketFactory)" num="55" count="1" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="Graphite(String,int,SocketFactory,Charset)" num="68" count="1" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="Graphite(InetSocketAddress)" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Graphite(InetSocketAddress,SocketFactory)" num="92" count="8" type="method"/>
            <line num="93" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="Graphite(InetSocketAddress,SocketFactory,Charset)" num="104" count="8" type="method"/>
            <line num="105" count="8" type="stmt"/>
            <line num="106" count="8" type="stmt"/>
            <line num="107" count="8" type="stmt"/>
            <line num="108" count="8" type="stmt"/>
            <line num="109" count="8" type="stmt"/>
            <line complexity="5" visibility="public" signature="connect() : void" num="112" count="9" type="method"/>
            <line num="114" count="9" type="stmt"/>
            <line falsecount="8" truecount="1" num="114" type="cond"/>
            <line num="115" count="1" type="stmt"/>
            <line num="117" count="8" type="stmt"/>
            <line num="122" count="8" type="stmt"/>
            <line falsecount="7" truecount="1" num="122" type="cond"/>
            <line num="123" count="1" type="stmt"/>
            <line num="126" count="8" type="stmt"/>
            <line falsecount="7" truecount="1" num="126" type="cond"/>
            <line num="127" count="1" type="stmt"/>
            <line num="130" count="7" type="stmt"/>
            <line num="131" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="isConnected() : boolean" num="134" count="9" type="method"/>
            <line num="136" count="9" type="stmt"/>
            <line complexity="2" visibility="public" signature="send(String,String,long) : void" num="139" count="3" type="method"/>
            <line num="141" count="3" type="stmt"/>
            <line num="142" count="3" type="stmt"/>
            <line num="143" count="3" type="stmt"/>
            <line num="144" count="3" type="stmt"/>
            <line num="145" count="3" type="stmt"/>
            <line num="146" count="3" type="stmt"/>
            <line num="147" count="3" type="stmt"/>
            <line num="148" count="3" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFailures() : int" num="155" count="1" type="method"/>
            <line num="157" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="flush() : void" num="160" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="162" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="close() : void" num="167" count="5" type="method"/>
            <line num="169" count="5" type="stmt"/>
            <line num="170" count="5" type="stmt"/>
            <line falsecount="1" truecount="4" num="170" type="cond"/>
            <line num="171" count="4" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="176" count="5" type="stmt"/>
            <line num="179" count="5" type="stmt"/>
            <line num="180" count="5" type="stmt"/>
            <line falsecount="1" truecount="4" num="180" type="cond"/>
            <line num="181" count="4" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="186" count="5" type="stmt"/>
            <line complexity="1" visibility="protected" signature="sanitize(String) : String" num="190" count="6" type="method"/>
            <line num="191" count="6" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-graphite/src/main/java/com/codahale/metrics/graphite/GraphiteRabbitMQ.java" name="GraphiteRabbitMQ.java">
            <metrics coveredelements="30" coveredconditionals="4" complexity="15" loc="163" coveredmethods="7" methods="11" elements="47" classes="1" ncloc="107" statements="32" conditionals="4" coveredstatements="19"/>
            <class name="GraphiteRabbitMQ">
               <metrics coveredelements="30" coveredconditionals="4" complexity="15" coveredmethods="7" methods="11" elements="47" statements="32" conditionals="4" coveredstatements="19"/>
            </class>
            <line complexity="1" visibility="public" signature="GraphiteRabbitMQ(ConnectionFactory,String)" num="36" count="9" type="method"/>
            <line num="37" count="9" type="stmt"/>
            <line num="38" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="GraphiteRabbitMQ(String,Integer,String,String,String)" num="50" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="GraphiteRabbitMQ(String,Integer,String,String,String,Integer,Integer,Integer)" num="79" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="configure(Socket) : void" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="connect() : void" num="109" count="8" type="method"/>
            <line num="111" count="8" type="stmt"/>
            <line falsecount="7" truecount="1" num="111" type="cond"/>
            <line num="112" count="1" type="stmt"/>
            <line num="115" count="7" type="stmt"/>
            <line num="116" count="7" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="isConnected() : boolean" num="123" count="8" type="method"/>
            <line num="125" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="send(String,String,long) : void" num="128" count="3" type="method"/>
            <line num="130" count="3" type="stmt"/>
            <line num="131" count="3" type="stmt"/>
            <line num="132" count="3" type="stmt"/>
            <line num="134" count="3" type="stmt"/>
            <line num="135" count="3" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="flush() : void" num="142" count="0" type="method"/>
            <line complexity="2" visibility="public" signature="close() : void" num="147" count="3" type="method"/>
            <line num="149" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="149" type="cond"/>
            <line num="150" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFailures() : int" num="154" count="3" type="method"/>
            <line num="156" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="sanitize(String) : String" num="159" count="6" type="method"/>
            <line num="160" count="6" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-graphite/src/main/java/com/codahale/metrics/graphite/GraphiteReporter.java" name="GraphiteReporter.java">
            <metrics coveredelements="170" coveredconditionals="24" complexity="47" loc="522" coveredmethods="28" methods="31" elements="184" classes="2" ncloc="320" statements="127" conditionals="26" coveredstatements="118"/>
            <class name="GraphiteReporter">
               <metrics coveredelements="130" coveredconditionals="24" complexity="34" coveredmethods="17" methods="18" elements="138" statements="94" conditionals="26" coveredstatements="89"/>
            </class>
            <class name="GraphiteReporter.Builder">
               <metrics coveredelements="40" coveredconditionals="0" complexity="13" coveredmethods="11" methods="13" elements="46" statements="33" conditionals="0" coveredstatements="29"/>
            </class>
            <line complexity="1" visibility="public" signature="forRegistry(MetricRegistry) : Builder" num="56" count="41" type="method"/>
            <line num="57" count="41" type="stmt"/>
            <line complexity="1" visibility="private" signature="Builder(MetricRegistry)" num="78" count="41" type="method"/>
            <line num="79" count="41" type="stmt"/>
            <line num="80" count="41" type="stmt"/>
            <line num="81" count="41" type="stmt"/>
            <line num="82" count="41" type="stmt"/>
            <line num="83" count="41" type="stmt"/>
            <line num="84" count="41" type="stmt"/>
            <line num="85" count="41" type="stmt"/>
            <line num="86" count="41" type="stmt"/>
            <line num="87" count="41" type="stmt"/>
            <line num="88" count="41" type="stmt"/>
            <line num="89" count="41" type="stmt"/>
            <line complexity="1" visibility="public" signature="shutdownExecutorOnStop(boolean) : Builder" num="100" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="scheduleOn(ScheduledExecutorService) : Builder" num="113" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="withClock(Clock) : Builder" num="124" count="41" type="method"/>
            <line num="125" count="41" type="stmt"/>
            <line num="126" count="41" type="stmt"/>
            <line complexity="1" visibility="public" signature="prefixedWith(String) : Builder" num="135" count="41" type="method"/>
            <line num="136" count="41" type="stmt"/>
            <line num="137" count="41" type="stmt"/>
            <line complexity="1" visibility="public" signature="convertRatesTo(TimeUnit) : Builder" num="146" count="41" type="method"/>
            <line num="147" count="41" type="stmt"/>
            <line num="148" count="41" type="stmt"/>
            <line complexity="1" visibility="public" signature="convertDurationsTo(TimeUnit) : Builder" num="157" count="41" type="method"/>
            <line num="158" count="41" type="stmt"/>
            <line num="159" count="41" type="stmt"/>
            <line complexity="1" visibility="public" signature="filter(MetricFilter) : Builder" num="168" count="41" type="method"/>
            <line num="169" count="41" type="stmt"/>
            <line num="170" count="41" type="stmt"/>
            <line complexity="1" visibility="public" signature="disabledMetricAttributes(Set&lt;MetricAttribute&gt;) : Builder" num="180" count="41" type="method"/>
            <line num="181" count="41" type="stmt"/>
            <line num="182" count="41" type="stmt"/>
            <line complexity="1" visibility="public" signature="addMetricAttributesAsTags(boolean) : Builder" num="198" count="1" type="method"/>
            <line num="199" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="withFloatingPointFormatter(DoubleFunction&lt;String&gt;) : Builder" num="209" count="1" type="method"/>
            <line num="210" count="1" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="build(Graphite) : GraphiteReporter" num="223" count="41" type="method"/>
            <line num="224" count="41" type="stmt"/>
            <line complexity="1" visibility="public" signature="build(GraphiteSender) : GraphiteReporter" num="234" count="41" type="method"/>
            <line num="235" count="41" type="stmt"/>
            <line complexity="1" visibility="protected" signature="GraphiteReporter(MetricRegistry,GraphiteSender,Clock,String,TimeUnit,TimeUnit,MetricFilter,ScheduledExecutorService,boolean,Set&lt;MetricAttribute&gt;)" num="277" count="0" type="method"/>
            <line num="287" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="GraphiteReporter(MetricRegistry,GraphiteSender,Clock,String,TimeUnit,TimeUnit,MetricFilter,ScheduledExecutorService,boolean,Set&lt;MetricAttribute&gt;,boolean)" num="309" count="1" type="method"/>
            <line num="320" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="GraphiteReporter(MetricRegistry,GraphiteSender,Clock,String,TimeUnit,TimeUnit,MetricFilter,ScheduledExecutorService,boolean,Set&lt;MetricAttribute&gt;,boolean,DoubleFunction&lt;String&gt;)" num="342" count="42" type="method"/>
            <line num="354" count="42" type="stmt"/>
            <line num="356" count="42" type="stmt"/>
            <line num="357" count="42" type="stmt"/>
            <line num="358" count="42" type="stmt"/>
            <line num="359" count="42" type="stmt"/>
            <line num="360" count="42" type="stmt"/>
            <line complexity="3" visibility="public" signature="report(SortedMap&lt;String, Gauge&gt;,SortedMap&lt;String, Counter&gt;,SortedMap&lt;String, Histogram&gt;,SortedMap&lt;String, Meter&gt;,SortedMap&lt;String, Timer&gt;) : void" num="363" count="23" type="method"/>
            <line num="370" count="23" type="stmt"/>
            <line num="373" count="23" type="stmt"/>
            <line num="374" count="23" type="stmt"/>
            <line num="376" count="22" type="stmt"/>
            <line num="377" count="11" type="stmt"/>
            <line num="380" count="22" type="stmt"/>
            <line num="381" count="3" type="stmt"/>
            <line num="384" count="22" type="stmt"/>
            <line num="385" count="1" type="stmt"/>
            <line num="388" count="22" type="stmt"/>
            <line num="389" count="3" type="stmt"/>
            <line num="392" count="22" type="stmt"/>
            <line num="393" count="1" type="stmt"/>
            <line num="395" count="22" type="stmt"/>
            <line num="397" count="1" type="stmt"/>
            <line num="399" count="23" type="stmt"/>
            <line num="400" count="23" type="stmt"/>
            <line num="402" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="stop() : void" num="407" count="4" type="method"/>
            <line num="409" count="4" type="stmt"/>
            <line num="410" count="4" type="stmt"/>
            <line num="412" count="4" type="stmt"/>
            <line num="413" count="4" type="stmt"/>
            <line num="415" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="reportTimer(String,Timer,long) : void" num="420" count="1" type="method"/>
            <line num="421" count="1" type="stmt"/>
            <line num="422" count="1" type="stmt"/>
            <line num="423" count="1" type="stmt"/>
            <line num="424" count="1" type="stmt"/>
            <line num="425" count="1" type="stmt"/>
            <line num="426" count="1" type="stmt"/>
            <line num="427" count="1" type="stmt"/>
            <line num="428" count="1" type="stmt"/>
            <line num="429" count="1" type="stmt"/>
            <line num="430" count="1" type="stmt"/>
            <line num="431" count="1" type="stmt"/>
            <line num="432" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="reportMetered(String,Metered,long) : void" num="435" count="4" type="method"/>
            <line num="436" count="4" type="stmt"/>
            <line num="437" count="4" type="stmt"/>
            <line num="438" count="4" type="stmt"/>
            <line num="439" count="4" type="stmt"/>
            <line num="440" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="reportHistogram(String,Histogram,long) : void" num="443" count="1" type="method"/>
            <line num="444" count="1" type="stmt"/>
            <line num="445" count="1" type="stmt"/>
            <line num="446" count="1" type="stmt"/>
            <line num="447" count="1" type="stmt"/>
            <line num="448" count="1" type="stmt"/>
            <line num="449" count="1" type="stmt"/>
            <line num="450" count="1" type="stmt"/>
            <line num="451" count="1" type="stmt"/>
            <line num="452" count="1" type="stmt"/>
            <line num="453" count="1" type="stmt"/>
            <line num="454" count="1" type="stmt"/>
            <line num="455" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="sendIfEnabled(MetricAttribute,String,double,long) : void" num="458" count="34" type="method"/>
            <line num="459" count="34" type="stmt"/>
            <line falsecount="32" truecount="2" num="459" type="cond"/>
            <line num="460" count="2" type="stmt"/>
            <line num="462" count="32" type="stmt"/>
            <line complexity="2" visibility="private" signature="sendIfEnabled(MetricAttribute,String,long,long) : void" num="465" count="7" type="method"/>
            <line num="466" count="7" type="stmt"/>
            <line falsecount="7" truecount="0" num="466" type="cond"/>
            <line num="467" count="0" type="stmt"/>
            <line num="469" count="7" type="stmt"/>
            <line complexity="1" visibility="private" signature="reportCounter(String,Counter,long) : void" num="472" count="3" type="method"/>
            <line num="473" count="3" type="stmt"/>
            <line complexity="2" visibility="private" signature="reportGauge(String,Gauge&lt;?&gt;,long) : void" num="476" count="11" type="method"/>
            <line num="477" count="11" type="stmt"/>
            <line num="478" count="11" type="stmt"/>
            <line falsecount="1" truecount="10" num="478" type="cond"/>
            <line num="479" count="10" type="stmt"/>
            <line complexity="10" visibility="private" signature="format(Object) : String" num="483" count="11" type="method"/>
            <line num="484" count="11" type="stmt"/>
            <line falsecount="10" truecount="1" num="484" type="cond"/>
            <line num="485" count="1" type="stmt"/>
            <line num="486" count="10" type="stmt"/>
            <line falsecount="7" truecount="3" num="486" type="cond"/>
            <line num="487" count="3" type="stmt"/>
            <line num="488" count="7" type="stmt"/>
            <line falsecount="6" truecount="1" num="488" type="cond"/>
            <line num="489" count="1" type="stmt"/>
            <line num="490" count="6" type="stmt"/>
            <line falsecount="5" truecount="1" num="490" type="cond"/>
            <line num="491" count="1" type="stmt"/>
            <line num="492" count="5" type="stmt"/>
            <line falsecount="4" truecount="1" num="492" type="cond"/>
            <line num="493" count="1" type="stmt"/>
            <line num="494" count="4" type="stmt"/>
            <line falsecount="3" truecount="1" num="494" type="cond"/>
            <line num="495" count="1" type="stmt"/>
            <line num="496" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="496" type="cond"/>
            <line num="497" count="0" type="stmt"/>
            <line num="498" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="498" type="cond"/>
            <line num="499" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="499" type="cond"/>
            <line num="501" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="prefix(String) : String" num="504" count="52" type="method"/>
            <line num="505" count="52" type="stmt"/>
            <line complexity="2" visibility="private" signature="appendMetricAttribute(String,String) : String" num="508" count="42" type="method"/>
            <line num="509" count="42" type="stmt"/>
            <line falsecount="41" truecount="1" num="509" type="cond"/>
            <line num="510" count="1" type="stmt"/>
            <line num="512" count="41" type="stmt"/>
            <line complexity="1" visibility="private" signature="format(long) : String" num="515" count="16" type="method"/>
            <line num="516" count="16" type="stmt"/>
            <line complexity="1" visibility="protected" signature="format(double) : String" num="519" count="35" type="method"/>
            <line num="520" count="35" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-graphite/src/main/java/com/codahale/metrics/graphite/GraphiteSanitize.java" name="GraphiteSanitize.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="16" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="GraphiteSanitize">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="package" signature="sanitize(String) : String" num="13" count="43" type="method"/>
            <line num="14" count="43" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-graphite/src/main/java/com/codahale/metrics/graphite/GraphiteSender.java" name="GraphiteSender.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="45" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="GraphiteSender">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-graphite/src/main/java/com/codahale/metrics/graphite/GraphiteUDP.java" name="GraphiteUDP.java">
            <metrics coveredelements="35" coveredconditionals="3" complexity="17" loc="118" coveredmethods="10" methods="13" elements="48" classes="1" ncloc="82" statements="29" conditionals="6" coveredstatements="22"/>
            <class name="GraphiteUDP">
               <metrics coveredelements="35" coveredconditionals="3" complexity="17" coveredmethods="10" methods="13" elements="48" statements="29" conditionals="6" coveredstatements="22"/>
            </class>
            <line complexity="1" visibility="public" signature="GraphiteUDP(String,int)" num="29" count="2" type="method"/>
            <line num="30" count="2" type="stmt"/>
            <line num="31" count="2" type="stmt"/>
            <line num="32" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="GraphiteUDP(InetSocketAddress)" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="connect() : void" num="46" count="1" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="53" type="cond"/>
            <line num="54" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isConnected() : boolean" num="60" count="1" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="send(String,String,long) : void" num="65" count="1" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFailures() : int" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="flush() : void" num="83" count="0" type="method"/>
            <line complexity="2" visibility="public" signature="close() : void" num="88" count="1" type="method"/>
            <line num="90" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="90" type="cond"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="sanitize(String) : String" num="99" count="2" type="method"/>
            <line num="100" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="getDatagramChannel() : DatagramChannel" num="103" count="1" type="method"/>
            <line num="104" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="setDatagramChannel(DatagramChannel) : void" num="107" count="1" type="method"/>
            <line num="108" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="getAddress() : InetSocketAddress" num="111" count="1" type="method"/>
            <line num="112" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="setAddress(InetSocketAddress) : void" num="115" count="1" type="method"/>
            <line num="116" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-graphite/src/main/java/com/codahale/metrics/graphite/PickledGraphite.java" name="PickledGraphite.java">
            <metrics coveredelements="88" coveredconditionals="11" complexity="29" loc="337" coveredmethods="10" methods="18" elements="123" classes="2" ncloc="193" statements="87" conditionals="18" coveredstatements="67"/>
            <class name="PickledGraphite">
               <metrics coveredelements="84" coveredconditionals="11" complexity="28" coveredmethods="9" methods="17" elements="119" statements="84" conditionals="18" coveredstatements="64"/>
            </class>
            <class name="PickledGraphite.MetricTuple">
               <metrics coveredelements="4" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="4" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="package" signature="MetricTuple(String,long,String)" num="34" count="8" type="method"/>
            <line num="35" count="8" type="stmt"/>
            <line num="36" count="8" type="stmt"/>
            <line num="37" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="PickledGraphite(InetSocketAddress)" num="78" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="PickledGraphite(InetSocketAddress,int)" num="88" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="PickledGraphite(InetSocketAddress,SocketFactory,int)" num="99" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="PickledGraphite(InetSocketAddress,SocketFactory,Charset,int)" num="111" count="7" type="method"/>
            <line num="112" count="7" type="stmt"/>
            <line num="113" count="7" type="stmt"/>
            <line num="114" count="7" type="stmt"/>
            <line num="115" count="7" type="stmt"/>
            <line num="116" count="7" type="stmt"/>
            <line num="117" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="PickledGraphite(String,int)" num="127" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="PickledGraphite(String,int,int)" num="138" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="PickledGraphite(String,int,SocketFactory,int)" num="150" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="PickledGraphite(String,int,SocketFactory,Charset,int)" num="163" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="connect() : void" num="172" count="8" type="method"/>
            <line num="174" count="8" type="stmt"/>
            <line falsecount="7" truecount="1" num="174" type="cond"/>
            <line num="175" count="1" type="stmt"/>
            <line num="177" count="7" type="stmt"/>
            <line num="178" count="7" type="stmt"/>
            <line falsecount="7" truecount="0" num="178" type="cond"/>
            <line num="179" count="0" type="stmt"/>
            <line num="181" count="7" type="stmt"/>
            <line falsecount="7" truecount="0" num="181" type="cond"/>
            <line num="182" count="0" type="stmt"/>
            <line num="185" count="7" type="stmt"/>
            <line num="186" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="isConnected() : boolean" num="189" count="8" type="method"/>
            <line num="191" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="send(String,String,long) : void" num="206" count="8" type="method"/>
            <line num="208" count="8" type="stmt"/>
            <line num="210" count="8" type="stmt"/>
            <line falsecount="6" truecount="2" num="210" type="cond"/>
            <line num="211" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="flush() : void" num="215" count="6" type="method"/>
            <line num="217" count="6" type="stmt"/>
            <line num="218" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="218" type="cond"/>
            <line num="219" count="6" type="stmt"/>
            <line complexity="4" visibility="public" signature="close() : void" num="223" count="6" type="method"/>
            <line num="225" count="6" type="stmt"/>
            <line num="226" count="6" type="stmt"/>
            <line num="227" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="227" type="cond"/>
            <line num="228" count="6" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="231" type="cond"/>
            <line num="232" count="0" type="stmt"/>
            <line num="235" count="6" type="stmt"/>
            <line num="236" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFailures() : int" num="240" count="0" type="method"/>
            <line num="242" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="writeMetrics() : void" num="250" count="8" type="method"/>
            <line num="251" count="8" type="stmt"/>
            <line falsecount="2" truecount="6" num="251" type="cond"/>
            <line num="252" count="6" type="stmt"/>
            <line num="253" count="6" type="stmt"/>
            <line num="254" count="6" type="stmt"/>
            <line num="256" count="6" type="stmt"/>
            <line num="258" count="6" type="stmt"/>
            <line num="259" count="6" type="stmt"/>
            <line num="260" count="6" type="stmt"/>
            <line num="262" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="262" type="cond"/>
            <line num="263" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="271" count="6" type="stmt"/>
            <line complexity="1" visibility="package" signature="pickleMetrics(List&lt;MetricTuple&gt;) : byte[]" num="282" count="6" type="method"/>
            <line num="284" count="6" type="stmt"/>
            <line num="285" count="6" type="stmt"/>
            <line num="287" count="6" type="stmt"/>
            <line num="288" count="6" type="stmt"/>
            <line num="290" count="6" type="stmt"/>
            <line num="292" count="8" type="stmt"/>
            <line num="295" count="8" type="stmt"/>
            <line num="297" count="8" type="stmt"/>
            <line num="298" count="8" type="stmt"/>
            <line num="299" count="8" type="stmt"/>
            <line num="300" count="8" type="stmt"/>
            <line num="303" count="8" type="stmt"/>
            <line num="306" count="8" type="stmt"/>
            <line num="307" count="8" type="stmt"/>
            <line num="309" count="8" type="stmt"/>
            <line num="310" count="8" type="stmt"/>
            <line num="313" count="8" type="stmt"/>
            <line num="314" count="8" type="stmt"/>
            <line num="315" count="8" type="stmt"/>
            <line num="316" count="8" type="stmt"/>
            <line num="317" count="8" type="stmt"/>
            <line num="319" count="8" type="stmt"/>
            <line num="320" count="8" type="stmt"/>
            <line num="322" count="8" type="stmt"/>
            <line num="326" count="6" type="stmt"/>
            <line num="328" count="6" type="stmt"/>
            <line num="330" count="6" type="stmt"/>
            <line complexity="1" visibility="protected" signature="sanitize(String) : String" num="333" count="16" type="method"/>
            <line num="334" count="16" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics.httpclient">
         <metrics coveredelements="66" complexity="38" loc="383" methods="33" classes="6" statements="73" coveredconditionals="4" coveredmethods="17" elements="112" ncloc="298" files="5" conditionals="6" coveredstatements="45"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-httpclient/src/main/java/com/codahale/metrics/httpclient/HttpClientMetricNameStrategies.java" name="HttpClientMetricNameStrategies.java">
            <metrics coveredelements="14" coveredconditionals="3" complexity="5" loc="61" coveredmethods="2" methods="2" elements="16" classes="1" ncloc="50" statements="10" conditionals="4" coveredstatements="9"/>
            <class name="HttpClientMetricNameStrategies">
               <metrics coveredelements="14" coveredconditionals="3" complexity="5" coveredmethods="2" methods="2" elements="16" statements="10" conditionals="4" coveredstatements="9"/>
            </class>
            <line num="29" count="4" type="stmt"/>
            <line num="30" count="4" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="methodNameString(HttpRequest) : String" num="49" count="12" type="method"/>
            <line num="50" count="12" type="stmt"/>
            <line complexity="3" visibility="private" signature="requestURI(HttpRequest) : URI" num="53" count="15" type="method"/>
            <line num="54" count="15" type="stmt"/>
            <line falsecount="10" truecount="5" num="54" type="cond"/>
            <line num="55" count="5" type="stmt"/>
            <line num="57" count="10" type="stmt"/>
            <line falsecount="0" truecount="10" num="57" type="cond"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-httpclient/src/main/java/com/codahale/metrics/httpclient/HttpClientMetricNameStrategy.java" name="HttpClientMetricNameStrategy.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="17" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="HttpClientMetricNameStrategy">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="getNameFor(String,Exception) : String" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-httpclient/src/main/java/com/codahale/metrics/httpclient/InstrumentedHttpClientConnectionManager.java" name="InstrumentedHttpClientConnectionManager.java">
            <metrics coveredelements="30" coveredconditionals="1" complexity="20" loc="209" coveredmethods="8" methods="19" elements="64" classes="2" ncloc="157" statements="43" conditionals="2" coveredstatements="21"/>
            <class name="InstrumentedHttpClientConnectionManager">
               <metrics coveredelements="18" coveredconditionals="0" complexity="8" coveredmethods="4" methods="8" elements="30" statements="22" conditionals="0" coveredstatements="14"/>
            </class>
            <class name="InstrumentedHttpClientConnectionManager.Builder">
               <metrics coveredelements="12" coveredconditionals="1" complexity="12" coveredmethods="4" methods="11" elements="34" statements="21" conditionals="2" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="protected" signature="getDefaultRegistry() : Registry&lt;ConnectionSocketFactory&gt;" num="31" count="5" type="method"/>
            <line num="32" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="InstrumentedHttpClientConnectionManager(MetricRegistry)" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="InstrumentedHttpClientConnectionManager(MetricRegistry,Registry&lt;ConnectionSocketFactory&gt;)" num="52" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="InstrumentedHttpClientConnectionManager(MetricRegistry,Registry&lt;ConnectionSocketFactory&gt;,long,TimeUnit)" num="62" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="InstrumentedHttpClientConnectionManager(MetricRegistry,Registry&lt;ConnectionSocketFactory&gt;,HttpConnectionFactory&lt;HttpRoute, ManagedHttpClientConnection&gt;,SchemePortResolver,DnsResolver,long,TimeUnit,String)" num="74" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="InstrumentedHttpClientConnectionManager(MetricRegistry,HttpClientConnectionOperator,HttpConnectionFactory&lt;HttpRoute, ManagedHttpClientConnection&gt;,long,TimeUnit,String)" num="95" count="5" type="method"/>
            <line num="103" count="5" type="stmt"/>
            <line num="104" count="5" type="stmt"/>
            <line num="105" count="5" type="stmt"/>
            <line num="107" count="5" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="5" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="5" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="5" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="shutdown() : void" num="129" count="3" type="method"/>
            <line num="131" count="3" type="stmt"/>
            <line num="132" count="3" type="stmt"/>
            <line num="133" count="3" type="stmt"/>
            <line num="134" count="3" type="stmt"/>
            <line num="135" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="builder(MetricRegistry) : Builder" num="138" count="5" type="method"/>
            <line num="139" count="5" type="stmt"/>
            <line complexity="1" visibility="package" signature="Builder()" num="153" count="5" type="method"/>
            <line complexity="1" visibility="public" signature="metricsRegistry(MetricRegistry) : Builder" num="156" count="5" type="method"/>
            <line num="157" count="5" type="stmt"/>
            <line num="158" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="socketFactoryRegistry(Registry&lt;ConnectionSocketFactory&gt;) : Builder" num="161" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="connFactory(HttpConnectionFactory&lt;HttpRoute, ManagedHttpClientConnection&gt;) : Builder" num="166" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="schemePortResolver(SchemePortResolver) : Builder" num="171" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dnsResolver(DnsResolver) : Builder" num="176" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="connTTL(long) : Builder" num="181" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="connTTLTimeUnit(TimeUnit) : Builder" num="186" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="httpClientConnectionOperator(HttpClientConnectionOperator) : Builder" num="191" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name(String) : Builder" num="196" count="2" type="method"/>
            <line num="197" count="2" type="stmt"/>
            <line num="198" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="build() : InstrumentedHttpClientConnectionManager" num="201" count="5" type="method"/>
            <line num="202" count="5" type="stmt"/>
            <line falsecount="0" truecount="5" num="202" type="cond"/>
            <line num="203" count="5" type="stmt"/>
            <line num="205" count="5" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-httpclient/src/main/java/com/codahale/metrics/httpclient/InstrumentedHttpClients.java" name="InstrumentedHttpClients.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="5" loc="34" coveredmethods="1" methods="5" elements="10" classes="1" ncloc="26" statements="5" conditionals="0" coveredstatements="1"/>
            <class name="InstrumentedHttpClients">
               <metrics coveredelements="2" coveredconditionals="0" complexity="5" coveredmethods="1" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="private" signature="InstrumentedHttpClients()" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createDefault(MetricRegistry) : CloseableHttpClient" num="14" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createDefault(MetricRegistry,HttpClientMetricNameStrategy) : CloseableHttpClient" num="18" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="custom(MetricRegistry) : HttpClientBuilder" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="custom(MetricRegistry,HttpClientMetricNameStrategy) : HttpClientBuilder" num="27" count="2" type="method"/>
            <line num="29" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-httpclient/src/main/java/com/codahale/metrics/httpclient/InstrumentedHttpRequestExecutor.java" name="InstrumentedHttpRequestExecutor.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="7" loc="62" coveredmethods="6" methods="6" elements="20" classes="1" ncloc="52" statements="14" conditionals="0" coveredstatements="14"/>
            <class name="InstrumentedHttpRequestExecutor">
               <metrics coveredelements="20" coveredconditionals="0" complexity="7" coveredmethods="6" methods="6" elements="20" statements="14" conditionals="0" coveredstatements="14"/>
            </class>
            <line complexity="1" visibility="public" signature="InstrumentedHttpRequestExecutor(MetricRegistry,HttpClientMetricNameStrategy)" num="21" count="2" type="method"/>
            <line num="23" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="InstrumentedHttpRequestExecutor(MetricRegistry,HttpClientMetricNameStrategy,String)" num="26" count="2" type="method"/>
            <line num="29" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="InstrumentedHttpRequestExecutor(MetricRegistry,HttpClientMetricNameStrategy,String,int)" num="32" count="2" type="method"/>
            <line num="36" count="2" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="execute(HttpRequest,HttpClientConnection,HttpContext) : HttpResponse" num="42" count="2" type="method"/>
            <line num="44" count="2" type="stmt"/>
            <line num="45" count="2" type="stmt"/>
            <line num="46" count="2" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="timer(HttpRequest) : Timer" num="55" count="2" type="method"/>
            <line num="56" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="meter(Exception) : Meter" num="59" count="1" type="method"/>
            <line num="60" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics.jmx">
         <metrics coveredelements="222" complexity="115" loc="817" methods="78" classes="18" statements="191" coveredconditionals="15" coveredmethods="66" elements="295" ncloc="605" files="3" conditionals="26" coveredstatements="141"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jmx/src/main/java/com/codahale/metrics/jmx/DefaultObjectNameFactory.java" name="DefaultObjectNameFactory.java">
            <metrics coveredelements="17" coveredconditionals="4" complexity="6" loc="51" coveredmethods="1" methods="1" elements="25" classes="1" ncloc="37" statements="18" conditionals="6" coveredstatements="12"/>
            <class name="DefaultObjectNameFactory">
               <metrics coveredelements="17" coveredconditionals="4" complexity="6" coveredmethods="1" methods="1" elements="25" statements="18" conditionals="6" coveredstatements="12"/>
            </class>
            <line complexity="6" visibility="public" signature="createName(String,String,String) : ObjectName" num="15" count="56" type="method"/>
            <line num="17" count="56" type="stmt"/>
            <line num="18" count="56" type="stmt"/>
            <line num="19" count="56" type="stmt"/>
            <line num="21" count="56" type="stmt"/>
            <line num="22" count="56" type="stmt"/>
            <line num="23" count="56" type="stmt"/>
            <line num="29" count="56" type="stmt"/>
            <line falsecount="56" truecount="0" num="29" type="cond"/>
            <line num="30" count="0" type="stmt"/>
            <line num="32" count="56" type="stmt"/>
            <line falsecount="55" truecount="1" num="32" type="cond"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="56" type="stmt"/>
            <line falsecount="56" truecount="0" num="35" type="cond"/>
            <line num="36" count="0" type="stmt"/>
            <line num="38" count="56" type="stmt"/>
            <line num="40" count="56" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jmx/src/main/java/com/codahale/metrics/jmx/JmxReporter.java" name="JmxReporter.java">
            <metrics coveredelements="205" coveredconditionals="11" complexity="109" loc="758" coveredmethods="65" methods="77" elements="270" classes="16" ncloc="563" statements="173" conditionals="20" coveredstatements="129"/>
            <class name="JmxReporter">
               <metrics coveredelements="12" coveredconditionals="0" complexity="6" coveredmethods="5" methods="6" elements="14" statements="8" conditionals="0" coveredstatements="7"/>
            </class>
            <class name="JmxReporter.Builder">
               <metrics coveredelements="35" coveredconditionals="3" complexity="12" coveredmethods="8" methods="10" elements="43" statements="29" conditionals="4" coveredstatements="24"/>
            </class>
            <class name="JmxReporter.MetricMBean">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="JmxReporter.AbstractBean">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="JmxReporter.JmxGaugeMBean">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="JmxReporter.JmxGauge">
               <metrics coveredelements="9" coveredconditionals="1" complexity="4" coveredmethods="3" methods="3" elements="10" statements="5" conditionals="2" coveredstatements="5"/>
            </class>
            <class name="JmxReporter.JmxCounterMBean">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="JmxReporter.JmxCounter">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="JmxReporter.JmxHistogramMBean">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="JmxReporter.JmxHistogram">
               <metrics coveredelements="27" coveredconditionals="0" complexity="15" coveredmethods="13" methods="15" elements="31" statements="16" conditionals="0" coveredstatements="14"/>
            </class>
            <class name="JmxReporter.JmxMeterMBean">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="JmxReporter.JmxMeter">
               <metrics coveredelements="20" coveredconditionals="0" complexity="8" coveredmethods="8" methods="8" elements="20" statements="12" conditionals="0" coveredstatements="12"/>
            </class>
            <class name="JmxReporter.JmxTimerMBean">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="JmxReporter.JmxTimer">
               <metrics coveredelements="27" coveredconditionals="0" complexity="13" coveredmethods="12" methods="13" elements="29" statements="16" conditionals="0" coveredstatements="15"/>
            </class>
            <class name="JmxReporter.JmxListener">
               <metrics coveredelements="59" coveredconditionals="7" complexity="44" coveredmethods="10" methods="15" elements="105" statements="76" conditionals="14" coveredstatements="42"/>
            </class>
            <class name="JmxReporter.MetricTimeUnits">
               <metrics coveredelements="9" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="9" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="forRegistry(MetricRegistry) : Builder" num="41" count="12" type="method"/>
            <line num="42" count="12" type="stmt"/>
            <line complexity="1" visibility="private" signature="Builder(MetricRegistry)" num="60" count="12" type="method"/>
            <line num="61" count="12" type="stmt"/>
            <line num="62" count="12" type="stmt"/>
            <line num="63" count="12" type="stmt"/>
            <line num="64" count="12" type="stmt"/>
            <line num="65" count="12" type="stmt"/>
            <line num="66" count="12" type="stmt"/>
            <line num="67" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="registerWith(MBeanServer) : Builder" num="76" count="11" type="method"/>
            <line num="77" count="11" type="stmt"/>
            <line num="78" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="convertRatesTo(TimeUnit) : Builder" num="87" count="9" type="method"/>
            <line num="88" count="9" type="stmt"/>
            <line num="89" count="9" type="stmt"/>
            <line complexity="2" visibility="public" signature="createsObjectNamesWith(ObjectNameFactory) : Builder" num="92" count="1" type="method"/>
            <line num="93" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="convertDurationsTo(TimeUnit) : Builder" num="106" count="9" type="method"/>
            <line num="107" count="9" type="stmt"/>
            <line num="108" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="filter(MetricFilter) : Builder" num="117" count="9" type="method"/>
            <line num="118" count="9" type="stmt"/>
            <line num="119" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="inDomain(String) : Builder" num="122" count="11" type="method"/>
            <line num="123" count="11" type="stmt"/>
            <line num="124" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="specificDurationUnits(Map&lt;String, TimeUnit&gt;) : Builder" num="133" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="specificRateUnits(Map&lt;String, TimeUnit&gt;) : Builder" num="145" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="build() : JmxReporter" num="155" count="12" type="method"/>
            <line num="156" count="12" type="stmt"/>
            <line num="157" count="12" type="stmt"/>
            <line falsecount="11" truecount="1" num="157" type="cond"/>
            <line num="158" count="1" type="stmt"/>
            <line num="160" count="12" type="stmt"/>
            <line complexity="1" visibility="package" signature="AbstractBean(ObjectName)" num="174" count="44" type="method"/>
            <line num="175" count="44" type="stmt"/>
            <line complexity="1" visibility="public" signature="objectName() : ObjectName" num="178" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="JmxGauge(Gauge&lt;?&gt;,ObjectName)" num="193" count="12" type="method"/>
            <line num="194" count="12" type="stmt"/>
            <line num="195" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : Object" num="198" count="1" type="method"/>
            <line num="200" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="getNumber() : Number" num="203" count="1" type="method"/>
            <line num="205" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="206" type="cond"/>
            <line complexity="1" visibility="private" signature="JmxCounter(Counter,ObjectName)" num="218" count="11" type="method"/>
            <line num="219" count="11" type="stmt"/>
            <line num="220" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCount() : long" num="223" count="1" type="method"/>
            <line num="225" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="JmxHistogram(Histogram,ObjectName)" num="262" count="10" type="method"/>
            <line num="263" count="10" type="stmt"/>
            <line num="264" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="objectName() : ObjectName" num="267" count="0" type="method"/>
            <line num="269" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get50thPercentile() : double" num="272" count="1" type="method"/>
            <line num="274" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCount() : long" num="277" count="1" type="method"/>
            <line num="279" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMin() : long" num="282" count="1" type="method"/>
            <line num="284" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMax() : long" num="287" count="1" type="method"/>
            <line num="289" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMean() : double" num="292" count="1" type="method"/>
            <line num="294" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStdDev() : double" num="297" count="1" type="method"/>
            <line num="299" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="get75thPercentile() : double" num="302" count="1" type="method"/>
            <line num="304" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="get95thPercentile() : double" num="307" count="1" type="method"/>
            <line num="309" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="get98thPercentile() : double" num="312" count="1" type="method"/>
            <line num="314" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="get99thPercentile() : double" num="317" count="1" type="method"/>
            <line num="319" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="get999thPercentile() : double" num="322" count="1" type="method"/>
            <line num="324" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="values() : long[]" num="327" count="0" type="method"/>
            <line num="329" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSnapshotSize() : long" num="332" count="1" type="method"/>
            <line num="334" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="JmxMeter(Metered,ObjectName,TimeUnit)" num="358" count="21" type="method"/>
            <line num="359" count="21" type="stmt"/>
            <line num="360" count="21" type="stmt"/>
            <line num="361" count="21" type="stmt"/>
            <line num="362" count="21" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCount() : long" num="365" count="2" type="method"/>
            <line num="367" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMeanRate() : double" num="370" count="2" type="method"/>
            <line num="372" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOneMinuteRate() : double" num="375" count="2" type="method"/>
            <line num="377" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFiveMinuteRate() : double" num="380" count="2" type="method"/>
            <line num="382" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFifteenMinuteRate() : double" num="385" count="2" type="method"/>
            <line num="387" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRateUnit() : String" num="390" count="2" type="method"/>
            <line num="392" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="calculateRateUnit(TimeUnit) : String" num="395" count="21" type="method"/>
            <line num="396" count="21" type="stmt"/>
            <line num="397" count="21" type="stmt"/>
            <line complexity="1" visibility="private" signature="JmxTimer(Timer,ObjectName,TimeUnit,TimeUnit)" num="433" count="11" type="method"/>
            <line num="437" count="11" type="stmt"/>
            <line num="438" count="11" type="stmt"/>
            <line num="439" count="11" type="stmt"/>
            <line num="440" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="get50thPercentile() : double" num="443" count="1" type="method"/>
            <line num="445" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMin() : double" num="448" count="1" type="method"/>
            <line num="450" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMax() : double" num="453" count="1" type="method"/>
            <line num="455" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMean() : double" num="458" count="1" type="method"/>
            <line num="460" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStdDev() : double" num="463" count="1" type="method"/>
            <line num="465" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="get75thPercentile() : double" num="468" count="1" type="method"/>
            <line num="470" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="get95thPercentile() : double" num="473" count="1" type="method"/>
            <line num="475" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="get98thPercentile() : double" num="478" count="1" type="method"/>
            <line num="480" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="get99thPercentile() : double" num="483" count="1" type="method"/>
            <line num="485" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="get999thPercentile() : double" num="488" count="1" type="method"/>
            <line num="490" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="values() : long[]" num="493" count="0" type="method"/>
            <line num="495" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDurationUnit() : String" num="498" count="1" type="method"/>
            <line num="500" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="JmxListener(MBeanServer,String,MetricFilter,MetricTimeUnits,ObjectNameFactory)" num="512" count="12" type="method"/>
            <line num="513" count="12" type="stmt"/>
            <line num="514" count="12" type="stmt"/>
            <line num="515" count="12" type="stmt"/>
            <line num="516" count="12" type="stmt"/>
            <line num="517" count="12" type="stmt"/>
            <line num="518" count="12" type="stmt"/>
            <line complexity="2" visibility="private" signature="registerMBean(Object,ObjectName) : void" num="521" count="54" type="method"/>
            <line num="522" count="54" type="stmt"/>
            <line num="523" count="49" type="stmt"/>
            <line falsecount="0" truecount="49" num="523" type="cond"/>
            <line num="527" count="49" type="stmt"/>
            <line num="529" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="unregisterMBean(ObjectName) : void" num="533" count="47" type="method"/>
            <line num="534" count="47" type="stmt"/>
            <line num="535" count="47" type="stmt"/>
            <line falsecount="0" truecount="47" num="535" type="cond"/>
            <line num="536" count="47" type="stmt"/>
            <line num="538" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="onGaugeAdded(String,Gauge&lt;?&gt;) : void" num="542" count="12" type="method"/>
            <line num="544" count="12" type="stmt"/>
            <line num="545" count="12" type="stmt"/>
            <line falsecount="0" truecount="12" num="545" type="cond"/>
            <line num="546" count="12" type="stmt"/>
            <line num="547" count="12" type="stmt"/>
            <line num="550" count="1" type="stmt"/>
            <line num="552" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="onGaugeRemoved(String) : void" num="556" count="0" type="method"/>
            <line num="558" count="0" type="stmt"/>
            <line num="559" count="0" type="stmt"/>
            <line num="560" count="0" type="stmt"/>
            <line num="562" count="0" type="stmt"/>
            <line num="564" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="onCounterAdded(String,Counter) : void" num="568" count="11" type="method"/>
            <line num="570" count="11" type="stmt"/>
            <line num="571" count="11" type="stmt"/>
            <line falsecount="0" truecount="11" num="571" type="cond"/>
            <line num="572" count="11" type="stmt"/>
            <line num="573" count="11" type="stmt"/>
            <line num="576" count="1" type="stmt"/>
            <line num="578" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="onCounterRemoved(String) : void" num="582" count="0" type="method"/>
            <line num="584" count="0" type="stmt"/>
            <line num="585" count="0" type="stmt"/>
            <line num="586" count="0" type="stmt"/>
            <line num="588" count="0" type="stmt"/>
            <line num="590" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="onHistogramAdded(String,Histogram) : void" num="594" count="10" type="method"/>
            <line num="596" count="10" type="stmt"/>
            <line num="597" count="10" type="stmt"/>
            <line falsecount="0" truecount="10" num="597" type="cond"/>
            <line num="598" count="10" type="stmt"/>
            <line num="599" count="10" type="stmt"/>
            <line num="602" count="1" type="stmt"/>
            <line num="604" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="onHistogramRemoved(String) : void" num="608" count="0" type="method"/>
            <line num="610" count="0" type="stmt"/>
            <line num="611" count="0" type="stmt"/>
            <line num="612" count="0" type="stmt"/>
            <line num="614" count="0" type="stmt"/>
            <line num="616" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="onMeterAdded(String,Meter) : void" num="620" count="10" type="method"/>
            <line num="622" count="10" type="stmt"/>
            <line num="623" count="10" type="stmt"/>
            <line falsecount="0" truecount="10" num="623" type="cond"/>
            <line num="624" count="10" type="stmt"/>
            <line num="625" count="10" type="stmt"/>
            <line num="628" count="1" type="stmt"/>
            <line num="630" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="onMeterRemoved(String) : void" num="634" count="0" type="method"/>
            <line num="636" count="0" type="stmt"/>
            <line num="637" count="0" type="stmt"/>
            <line num="638" count="0" type="stmt"/>
            <line num="640" count="0" type="stmt"/>
            <line num="642" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="onTimerAdded(String,Timer) : void" num="646" count="11" type="method"/>
            <line num="648" count="11" type="stmt"/>
            <line num="649" count="11" type="stmt"/>
            <line falsecount="0" truecount="11" num="649" type="cond"/>
            <line num="650" count="11" type="stmt"/>
            <line num="651" count="11" type="stmt"/>
            <line num="654" count="1" type="stmt"/>
            <line num="656" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="onTimerRemoved(String) : void" num="660" count="0" type="method"/>
            <line num="662" count="0" type="stmt"/>
            <line num="663" count="0" type="stmt"/>
            <line num="664" count="0" type="stmt"/>
            <line num="666" count="0" type="stmt"/>
            <line num="668" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="createName(String,String) : ObjectName" num="672" count="54" type="method"/>
            <line num="673" count="54" type="stmt"/>
            <line complexity="3" visibility="package" signature="unregisterAll() : void" num="676" count="12" type="method"/>
            <line num="677" count="12" type="stmt"/>
            <line num="678" count="47" type="stmt"/>
            <line num="679" count="47" type="stmt"/>
            <line num="681" count="0" type="stmt"/>
            <line num="683" count="0" type="stmt"/>
            <line num="686" count="12" type="stmt"/>
            <line complexity="1" visibility="package" signature="MetricTimeUnits(TimeUnit,TimeUnit,Map&lt;String, TimeUnit&gt;,Map&lt;String, TimeUnit&gt;)" num="696" count="12" type="method"/>
            <line num="700" count="12" type="stmt"/>
            <line num="701" count="12" type="stmt"/>
            <line num="702" count="12" type="stmt"/>
            <line num="703" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="durationFor(String) : TimeUnit" num="706" count="11" type="method"/>
            <line num="707" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="rateFor(String) : TimeUnit" num="710" count="21" type="method"/>
            <line num="711" count="21" type="stmt"/>
            <line complexity="1" visibility="private" signature="JmxReporter(MBeanServer,String,MetricRegistry,MetricFilter,MetricTimeUnits,ObjectNameFactory)" num="718" count="12" type="method"/>
            <line num="724" count="12" type="stmt"/>
            <line num="725" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="start() : void" num="731" count="12" type="method"/>
            <line num="732" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="stop() : void" num="738" count="12" type="method"/>
            <line num="739" count="12" type="stmt"/>
            <line num="740" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="close() : void" num="746" count="0" type="method"/>
            <line num="748" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getObjectNameFactory() : ObjectNameFactory" num="754" count="9" type="method"/>
            <line num="755" count="9" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jmx/src/main/java/com/codahale/metrics/jmx/ObjectNameFactory.java" name="ObjectNameFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="8" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ObjectNameFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="com.codahale.metrics.logback">
         <metrics coveredelements="33" complexity="10" loc="91" methods="5" classes="1" statements="30" coveredconditionals="0" coveredmethods="5" elements="35" ncloc="63" files="1" conditionals="0" coveredstatements="28"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-logback/src/main/java/com/codahale/metrics/logback/InstrumentedAppender.java" name="InstrumentedAppender.java">
            <metrics coveredelements="33" coveredconditionals="0" complexity="10" loc="91" coveredmethods="5" methods="5" elements="35" classes="1" ncloc="63" statements="30" conditionals="0" coveredstatements="28"/>
            <class name="InstrumentedAppender">
               <metrics coveredelements="33" coveredconditionals="0" complexity="10" coveredmethods="5" methods="5" elements="35" statements="30" conditionals="0" coveredstatements="28"/>
            </class>
            <line complexity="1" visibility="public" signature="InstrumentedAppender()" num="34" count="2" type="method"/>
            <line num="35" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="InstrumentedAppender(String)" num="43" count="3" type="method"/>
            <line num="44" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="InstrumentedAppender(MetricRegistry)" num="52" count="11" type="method"/>
            <line num="53" count="11" type="stmt"/>
            <line num="54" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="start() : void" num="57" count="11" type="method"/>
            <line num="59" count="11" type="stmt"/>
            <line num="60" count="11" type="stmt"/>
            <line num="61" count="11" type="stmt"/>
            <line num="62" count="11" type="stmt"/>
            <line num="63" count="11" type="stmt"/>
            <line num="64" count="11" type="stmt"/>
            <line num="65" count="11" type="stmt"/>
            <line complexity="6" visibility="protected" signature="append(ILoggingEvent) : void" num="68" count="8" type="method"/>
            <line num="70" count="8" type="stmt"/>
            <line num="71" count="8" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="4" type="stmt"/>
            <line num="79" count="4" type="stmt"/>
            <line num="80" count="4" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics.collectd">
         <metrics coveredelements="295" complexity="106" loc="827" methods="72" classes="10" statements="253" coveredconditionals="28" coveredmethods="57" elements="363" ncloc="655" files="7" conditionals="38" coveredstatements="210"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-collectd/src/main/java/com/codahale/metrics/collectd/CollectdReporter.java" name="CollectdReporter.java">
            <metrics coveredelements="122" coveredconditionals="15" complexity="43" loc="329" coveredmethods="21" methods="29" elements="155" classes="2" ncloc="269" statements="108" conditionals="18" coveredstatements="86"/>
            <class name="CollectdReporter">
               <metrics coveredelements="93" coveredconditionals="10" complexity="27" coveredmethods="14" methods="16" elements="107" statements="79" conditionals="12" coveredstatements="69"/>
            </class>
            <class name="CollectdReporter.Builder">
               <metrics coveredelements="29" coveredconditionals="5" complexity="16" coveredmethods="7" methods="13" elements="48" statements="29" conditionals="6" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="forRegistry(MetricRegistry) : Builder" num="67" count="17" type="method"/>
            <line num="68" count="17" type="stmt"/>
            <line complexity="1" visibility="private" signature="Builder(MetricRegistry)" num="86" count="17" type="method"/>
            <line num="87" count="17" type="stmt"/>
            <line complexity="1" visibility="public" signature="withHostName(String) : Builder" num="90" count="17" type="method"/>
            <line num="91" count="17" type="stmt"/>
            <line num="92" count="17" type="stmt"/>
            <line complexity="1" visibility="public" signature="shutdownExecutorOnStop(boolean) : Builder" num="95" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="scheduleOn(ScheduledExecutorService) : Builder" num="100" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="withClock(Clock) : Builder" num="105" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="convertRatesTo(TimeUnit) : Builder" num="110" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="convertDurationsTo(TimeUnit) : Builder" num="115" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="filter(MetricFilter) : Builder" num="120" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="withUsername(String) : Builder" num="125" count="1" type="method"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="withPassword(String) : Builder" num="130" count="1" type="method"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="withSecurityLevel(SecurityLevel) : Builder" num="135" count="2" type="method"/>
            <line num="136" count="2" type="stmt"/>
            <line num="137" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="disabledMetricAttributes(Set&lt;MetricAttribute&gt;) : Builder" num="140" count="1" type="method"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="build(Sender) : CollectdReporter" num="145" count="17" type="method"/>
            <line num="146" count="17" type="stmt"/>
            <line falsecount="15" truecount="2" num="146" type="cond"/>
            <line num="147" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="147" type="cond"/>
            <line num="148" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="150" type="cond"/>
            <line num="151" count="1" type="stmt"/>
            <line num="154" count="15" type="stmt"/>
            <line complexity="2" visibility="private" signature="CollectdReporter(MetricRegistry,String,Sender,ScheduledExecutorService,boolean,Clock,TimeUnit,TimeUnit,MetricFilter,Set&lt;MetricAttribute&gt;,String,String,SecurityLevel)" num="174" count="15" type="method"/>
            <line num="181" count="15" type="stmt"/>
            <line num="183" count="15" type="stmt"/>
            <line falsecount="0" truecount="15" num="183" type="cond"/>
            <line num="184" count="15" type="stmt"/>
            <line num="185" count="15" type="stmt"/>
            <line num="186" count="15" type="stmt"/>
            <line complexity="2" visibility="private" signature="resolveHostName() : String" num="189" count="0" type="method"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="start(long,TimeUnit) : void" num="198" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="report(SortedMap&lt;String, Gauge&gt;,SortedMap&lt;String, Counter&gt;,SortedMap&lt;String, Histogram&gt;,SortedMap&lt;String, Meter&gt;,SortedMap&lt;String, Timer&gt;) : void" num="204" count="15" type="method"/>
            <line num="208" count="15" type="stmt"/>
            <line num="210" count="15" type="stmt"/>
            <line num="211" count="15" type="stmt"/>
            <line num="212" count="15" type="stmt"/>
            <line num="213" count="9" type="stmt"/>
            <line num="215" count="15" type="stmt"/>
            <line num="216" count="3" type="stmt"/>
            <line num="218" count="15" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line num="221" count="15" type="stmt"/>
            <line num="222" count="2" type="stmt"/>
            <line num="224" count="15" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="230" count="15" type="stmt"/>
            <line complexity="2" visibility="private" signature="connect(Sender) : void" num="234" count="15" type="method"/>
            <line num="235" count="15" type="stmt"/>
            <line falsecount="0" truecount="15" num="235" type="cond"/>
            <line num="236" count="15" type="stmt"/>
            <line complexity="2" visibility="private" signature="disconnect(Sender) : void" num="240" count="15" type="method"/>
            <line num="241" count="15" type="stmt"/>
            <line num="242" count="15" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="writeValue(MetaData.Builder,MetricAttribute,Number) : void" num="248" count="39" type="method"/>
            <line num="249" count="39" type="stmt"/>
            <line falsecount="2" truecount="37" num="249" type="cond"/>
            <line num="250" count="37" type="stmt"/>
            <line complexity="1" visibility="private" signature="writeRate(MetaData.Builder,MetricAttribute,double) : void" num="254" count="12" type="method"/>
            <line num="255" count="12" type="stmt"/>
            <line complexity="1" visibility="private" signature="writeDuration(MetaData.Builder,MetricAttribute,double) : void" num="258" count="10" type="method"/>
            <line num="259" count="10" type="stmt"/>
            <line complexity="3" visibility="private" signature="write(MetaData,Number) : void" num="262" count="45" type="method"/>
            <line num="263" count="45" type="stmt"/>
            <line num="264" count="45" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="serializeGauge(MetaData.Builder,Gauge) : void" num="272" count="9" type="method"/>
            <line num="274" count="9" type="stmt"/>
            <line falsecount="3" truecount="6" num="274" type="cond"/>
            <line num="275" count="6" type="stmt"/>
            <line num="276" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="276" type="cond"/>
            <line num="277" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="277" type="cond"/>
            <line num="279" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="serializeMeter(MetaData.Builder,Meter) : void" num="284" count="2" type="method"/>
            <line num="285" count="2" type="stmt"/>
            <line num="286" count="2" type="stmt"/>
            <line num="287" count="2" type="stmt"/>
            <line num="288" count="2" type="stmt"/>
            <line num="289" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="serializeCounter(MetaData.Builder,Counter) : void" num="292" count="3" type="method"/>
            <line num="293" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="serializeHistogram(MetaData.Builder,Histogram) : void" num="296" count="1" type="method"/>
            <line num="297" count="1" type="stmt"/>
            <line num="298" count="1" type="stmt"/>
            <line num="299" count="1" type="stmt"/>
            <line num="300" count="1" type="stmt"/>
            <line num="301" count="1" type="stmt"/>
            <line num="302" count="1" type="stmt"/>
            <line num="303" count="1" type="stmt"/>
            <line num="304" count="1" type="stmt"/>
            <line num="305" count="1" type="stmt"/>
            <line num="306" count="1" type="stmt"/>
            <line num="307" count="1" type="stmt"/>
            <line num="308" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="serializeTimer(MetaData.Builder,Timer) : void" num="311" count="1" type="method"/>
            <line num="312" count="1" type="stmt"/>
            <line num="313" count="1" type="stmt"/>
            <line num="314" count="1" type="stmt"/>
            <line num="315" count="1" type="stmt"/>
            <line num="316" count="1" type="stmt"/>
            <line num="317" count="1" type="stmt"/>
            <line num="318" count="1" type="stmt"/>
            <line num="319" count="1" type="stmt"/>
            <line num="320" count="1" type="stmt"/>
            <line num="321" count="1" type="stmt"/>
            <line num="322" count="1" type="stmt"/>
            <line num="323" count="1" type="stmt"/>
            <line num="324" count="1" type="stmt"/>
            <line num="325" count="1" type="stmt"/>
            <line num="326" count="1" type="stmt"/>
            <line num="327" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-collectd/src/main/java/com/codahale/metrics/collectd/MetaData.java" name="MetaData.java">
            <metrics coveredelements="37" coveredconditionals="0" complexity="14" loc="92" coveredmethods="13" methods="14" elements="40" classes="2" ncloc="74" statements="26" conditionals="0" coveredstatements="24"/>
            <class name="MetaData">
               <metrics coveredelements="22" coveredconditionals="0" complexity="8" coveredmethods="8" methods="8" elements="22" statements="14" conditionals="0" coveredstatements="14"/>
            </class>
            <class name="MetaData.Builder">
               <metrics coveredelements="15" coveredconditionals="0" complexity="6" coveredmethods="5" methods="6" elements="18" statements="12" conditionals="0" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="package" signature="MetaData(String,String,String,String,String,long,long)" num="13" count="48" type="method"/>
            <line num="15" count="48" type="stmt"/>
            <line num="16" count="48" type="stmt"/>
            <line num="17" count="48" type="stmt"/>
            <line num="18" count="48" type="stmt"/>
            <line num="19" count="48" type="stmt"/>
            <line num="20" count="48" type="stmt"/>
            <line num="21" count="48" type="stmt"/>
            <line complexity="1" visibility="package" signature="getHost() : String" num="24" count="47" type="method"/>
            <line num="25" count="47" type="stmt"/>
            <line complexity="1" visibility="package" signature="getPlugin() : String" num="28" count="48" type="method"/>
            <line num="29" count="48" type="stmt"/>
            <line complexity="1" visibility="package" signature="getPluginInstance() : String" num="32" count="47" type="method"/>
            <line num="33" count="47" type="stmt"/>
            <line complexity="1" visibility="package" signature="getType() : String" num="36" count="47" type="method"/>
            <line num="37" count="47" type="stmt"/>
            <line complexity="1" visibility="package" signature="getTypeInstance() : String" num="40" count="47" type="method"/>
            <line num="41" count="47" type="stmt"/>
            <line complexity="1" visibility="package" signature="getTimestamp() : long" num="44" count="47" type="method"/>
            <line num="45" count="47" type="stmt"/>
            <line complexity="1" visibility="package" signature="getPeriod() : long" num="48" count="47" type="method"/>
            <line num="49" count="47" type="stmt"/>
            <line complexity="1" visibility="package" signature="Builder(String,long,long)" num="62" count="17" type="method"/>
            <line num="63" count="17" type="stmt"/>
            <line num="64" count="17" type="stmt"/>
            <line num="65" count="17" type="stmt"/>
            <line complexity="1" visibility="package" signature="plugin(String) : Builder" num="68" count="16" type="method"/>
            <line num="69" count="16" type="stmt"/>
            <line num="70" count="16" type="stmt"/>
            <line complexity="1" visibility="package" signature="pluginInstance(String) : Builder" num="73" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="type(String) : Builder" num="78" count="17" type="method"/>
            <line num="79" count="17" type="stmt"/>
            <line num="80" count="17" type="stmt"/>
            <line complexity="1" visibility="package" signature="typeInstance(String) : Builder" num="83" count="47" type="method"/>
            <line num="84" count="47" type="stmt"/>
            <line num="85" count="47" type="stmt"/>
            <line complexity="1" visibility="package" signature="get() : MetaData" num="88" count="48" type="method"/>
            <line num="89" count="48" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-collectd/src/main/java/com/codahale/metrics/collectd/PacketWriter.java" name="PacketWriter.java">
            <metrics coveredelements="100" coveredconditionals="6" complexity="30" loc="275" coveredmethods="15" methods="15" elements="114" classes="2" ncloc="213" statements="89" conditionals="10" coveredstatements="79"/>
            <class name="PacketWriter">
               <metrics coveredelements="97" coveredconditionals="6" complexity="29" coveredmethods="14" methods="14" elements="111" statements="87" conditionals="10" coveredstatements="77"/>
            </class>
            <class name="PacketWriter.EncryptionResult">
               <metrics coveredelements="3" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="3" visibility="package" signature="PacketWriter(Sender,String,String,SecurityLevel)" num="63" count="17" type="method"/>
            <line num="64" count="17" type="stmt"/>
            <line num="65" count="17" type="stmt"/>
            <line num="66" count="17" type="stmt"/>
            <line falsecount="0" truecount="17" num="66" type="cond"/>
            <line num="67" count="17" type="stmt"/>
            <line falsecount="0" truecount="17" num="67" type="cond"/>
            <line complexity="4" visibility="package" signature="write(MetaData,Number) : void" num="70" count="47" type="method"/>
            <line num="71" count="47" type="stmt"/>
            <line num="72" count="47" type="stmt"/>
            <line num="73" count="47" type="stmt"/>
            <line num="74" count="47" type="stmt"/>
            <line num="76" count="47" type="stmt"/>
            <line num="77" count="45" type="stmt"/>
            <line num="78" count="45" type="stmt"/>
            <line num="79" count="45" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="write(ByteBuffer,MetaData) : void" num="92" count="47" type="method"/>
            <line num="93" count="47" type="stmt"/>
            <line num="94" count="47" type="stmt"/>
            <line num="95" count="47" type="stmt"/>
            <line num="96" count="47" type="stmt"/>
            <line num="97" count="47" type="stmt"/>
            <line num="98" count="47" type="stmt"/>
            <line num="99" count="47" type="stmt"/>
            <line complexity="1" visibility="private" signature="write(ByteBuffer,Number) : void" num="102" count="47" type="method"/>
            <line num="103" count="47" type="stmt"/>
            <line num="104" count="47" type="stmt"/>
            <line num="105" count="47" type="stmt"/>
            <line num="106" count="47" type="stmt"/>
            <line num="107" count="47" type="stmt"/>
            <line num="108" count="47" type="stmt"/>
            <line num="109" count="47" type="stmt"/>
            <line num="110" count="47" type="stmt"/>
            <line num="112" count="47" type="stmt"/>
            <line complexity="1" visibility="private" signature="nCopies(int,byte) : byte[]" num="115" count="47" type="method"/>
            <line num="116" count="47" type="stmt"/>
            <line num="117" count="47" type="stmt"/>
            <line num="118" count="47" type="stmt"/>
            <line complexity="3" visibility="private" signature="writeString(ByteBuffer,int,String) : void" num="121" count="235" type="method"/>
            <line num="122" count="235" type="stmt"/>
            <line falsecount="186" truecount="49" num="122" type="cond"/>
            <line num="123" count="49" type="stmt"/>
            <line num="125" count="186" type="stmt"/>
            <line num="126" count="186" type="stmt"/>
            <line num="127" count="186" type="stmt"/>
            <line complexity="1" visibility="private" signature="writeNumber(ByteBuffer,int,long) : void" num="130" count="94" type="method"/>
            <line num="131" count="94" type="stmt"/>
            <line num="132" count="94" type="stmt"/>
            <line complexity="1" visibility="private" signature="writeHeader(ByteBuffer,int,int) : void" num="135" count="327" type="method"/>
            <line num="136" count="327" type="stmt"/>
            <line num="137" count="327" type="stmt"/>
            <line complexity="1" visibility="private" signature="signPacket(ByteBuffer) : ByteBuffer" num="156" count="1" type="method"/>
            <line num="157" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="encryptPacket(ByteBuffer) : ByteBuffer" num="188" count="1" type="method"/>
            <line num="189" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="sign(byte[],ByteBuffer) : byte[]" num="204" count="1" type="method"/>
            <line num="205" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line num="213" count="1" type="stmt"/>
            <line complexity="5" visibility="private" signature="encrypt(byte[],ByteBuffer) : EncryptionResult" num="216" count="1" type="method"/>
            <line num="217" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="224" count="1" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="230" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="230" type="cond"/>
            <line num="231" count="0" type="stmt"/>
            <line num="233" count="1" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="239" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="sha256(byte[]) : byte[]" num="242" count="1" type="method"/>
            <line num="243" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="sha1(ByteBuffer) : byte[]" num="250" count="1" type="method"/>
            <line num="251" count="1" type="stmt"/>
            <line num="252" count="1" type="stmt"/>
            <line num="253" count="1" type="stmt"/>
            <line num="254" count="1" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="255" type="cond"/>
            <line num="256" count="0" type="stmt"/>
            <line num="258" count="1" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="EncryptionResult(byte[],ByteBuffer)" num="269" count="1" type="method"/>
            <line num="270" count="1" type="stmt"/>
            <line num="271" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-collectd/src/main/java/com/codahale/metrics/collectd/Sanitize.java" name="Sanitize.java">
            <metrics coveredelements="16" coveredconditionals="4" complexity="6" loc="43" coveredmethods="3" methods="4" elements="17" classes="1" ncloc="30" statements="9" conditionals="4" coveredstatements="9"/>
            <class name="Sanitize">
               <metrics coveredelements="16" coveredconditionals="4" complexity="6" coveredmethods="3" methods="4" elements="17" statements="9" conditionals="4" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="private" signature="Sanitize()" num="21" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="name(String) : String" num="24" count="36" type="method"/>
            <line num="25" count="36" type="stmt"/>
            <line complexity="1" visibility="package" signature="instanceName(String) : String" num="28" count="65" type="method"/>
            <line num="29" count="65" type="stmt"/>
            <line complexity="3" visibility="private" signature="sanitize(String,List&lt;Character&gt;) : String" num="32" count="101" type="method"/>
            <line num="33" count="101" type="stmt"/>
            <line num="34" count="101" type="stmt"/>
            <line num="35" count="101" type="stmt"/>
            <line falsecount="101" truecount="684" num="35" type="cond"/>
            <line num="36" count="684" type="stmt"/>
            <line num="37" count="684" type="stmt"/>
            <line num="38" count="684" type="stmt"/>
            <line falsecount="8" truecount="676" num="38" type="cond"/>
            <line num="40" count="101" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-collectd/src/main/java/com/codahale/metrics/collectd/SecurityConfiguration.java" name="SecurityConfiguration.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="30" coveredmethods="0" methods="5" elements="12" classes="1" ncloc="23" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="SecurityConfiguration">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="12" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SecurityConfiguration(byte[],byte[],SecurityLevel)" num="9" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
            <line num="11" count="0" type="stmt"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="none() : SecurityConfiguration" num="15" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUsername() : byte[]" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPassword() : byte[]" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSecurityLevel() : SecurityLevel" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-collectd/src/main/java/com/codahale/metrics/collectd/SecurityLevel.java" name="SecurityLevel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="8" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SecurityLevel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-collectd/src/main/java/com/codahale/metrics/collectd/Sender.java" name="Sender.java">
            <metrics coveredelements="20" coveredconditionals="3" complexity="8" loc="50" coveredmethods="5" methods="5" elements="25" classes="1" ncloc="40" statements="14" conditionals="6" coveredstatements="12"/>
            <class name="Sender">
               <metrics coveredelements="20" coveredconditionals="3" complexity="8" coveredmethods="5" methods="5" elements="25" statements="14" conditionals="6" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="public" signature="Sender(String,int)" num="16" count="19" type="method"/>
            <line num="17" count="19" type="stmt"/>
            <line num="18" count="19" type="stmt"/>
            <line complexity="3" visibility="public" signature="connect() : void" num="21" count="15" type="method"/>
            <line num="22" count="15" type="stmt"/>
            <line falsecount="15" truecount="0" num="22" type="cond"/>
            <line num="23" count="0" type="stmt"/>
            <line num="25" count="15" type="stmt"/>
            <line falsecount="0" truecount="15" num="25" type="cond"/>
            <line num="26" count="15" type="stmt"/>
            <line num="28" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="isConnected() : boolean" num="31" count="30" type="method"/>
            <line num="32" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="send(ByteBuffer) : void" num="35" count="45" type="method"/>
            <line num="36" count="45" type="stmt"/>
            <line complexity="2" visibility="public" signature="disconnect() : void" num="39" count="15" type="method"/>
            <line num="40" count="15" type="stmt"/>
            <line falsecount="15" truecount="0" num="40" type="cond"/>
            <line num="41" count="0" type="stmt"/>
            <line num="43" count="15" type="stmt"/>
            <line num="44" count="15" type="stmt"/>
            <line num="46" count="15" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics.jetty9">
         <metrics coveredelements="233" complexity="111" loc="833" methods="68" classes="4" statements="244" coveredconditionals="25" coveredmethods="39" elements="354" ncloc="635" files="4" conditionals="42" coveredstatements="169"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jetty9/src/main/java/com/codahale/metrics/jetty9/InstrumentedConnectionFactory.java" name="InstrumentedConnectionFactory.java">
            <metrics coveredelements="23" coveredconditionals="2" complexity="9" loc="63" coveredmethods="6" methods="7" elements="27" classes="1" ncloc="53" statements="16" conditionals="4" coveredstatements="15"/>
            <class name="InstrumentedConnectionFactory">
               <metrics coveredelements="23" coveredconditionals="2" complexity="9" coveredmethods="6" methods="7" elements="27" statements="16" conditionals="4" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="public" signature="InstrumentedConnectionFactory(ConnectionFactory,Timer)" num="18" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="InstrumentedConnectionFactory(ConnectionFactory,Timer,Counter)" num="22" count="2" type="method"/>
            <line num="23" count="2" type="stmt"/>
            <line num="24" count="2" type="stmt"/>
            <line num="25" count="2" type="stmt"/>
            <line num="26" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProtocol() : String" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProtocols() : List&lt;String&gt;" num="34" count="2" type="method"/>
            <line num="36" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="newConnection(Connector,EndPoint) : Connection" num="39" count="2" type="method"/>
            <line num="41" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="onOpened(Connection) : void" num="45" count="2" type="method"/>
            <line num="47" count="2" type="stmt"/>
            <line num="48" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="48" type="cond"/>
            <line num="49" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="onClosed(Connection) : void" num="53" count="2" type="method"/>
            <line num="55" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="56" type="cond"/>
            <line num="57" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jetty9/src/main/java/com/codahale/metrics/jetty9/InstrumentedHandler.java" name="InstrumentedHandler.java">
            <metrics coveredelements="81" coveredconditionals="8" complexity="39" loc="311" coveredmethods="8" methods="18" elements="141" classes="1" ncloc="238" statements="105" conditionals="18" coveredstatements="65"/>
            <class name="InstrumentedHandler">
               <metrics coveredelements="81" coveredconditionals="8" complexity="39" coveredmethods="8" methods="18" elements="141" statements="105" conditionals="18" coveredstatements="65"/>
            </class>
            <line complexity="1" visibility="public" signature="InstrumentedHandler(MetricRegistry)" num="78" count="3" type="method"/>
            <line num="79" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="InstrumentedHandler(MetricRegistry,String)" num="88" count="3" type="method"/>
            <line num="89" count="3" type="stmt"/>
            <line num="90" count="3" type="stmt"/>
            <line num="92" count="3" type="stmt"/>
            <line num="93" count="3" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="100" count="1" type="method"/>
            <line num="101" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="setName(String) : void" num="104" count="3" type="method"/>
            <line num="105" count="3" type="stmt"/>
            <line complexity="2" visibility="protected" signature="doStart() : void" num="108" count="3" type="method"/>
            <line num="110" count="3" type="stmt"/>
            <line num="112" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="112" type="cond"/>
            <line num="114" count="3" type="stmt"/>
            <line num="115" count="3" type="stmt"/>
            <line num="117" count="3" type="stmt"/>
            <line num="118" count="3" type="stmt"/>
            <line num="119" count="3" type="stmt"/>
            <line num="121" count="3" type="stmt"/>
            <line num="122" count="3" type="stmt"/>
            <line num="124" count="3" type="stmt"/>
            <line num="132" count="3" type="stmt"/>
            <line num="133" count="3" type="stmt"/>
            <line num="134" count="3" type="stmt"/>
            <line num="135" count="3" type="stmt"/>
            <line num="136" count="3" type="stmt"/>
            <line num="137" count="3" type="stmt"/>
            <line num="138" count="3" type="stmt"/>
            <line num="139" count="3" type="stmt"/>
            <line num="140" count="3" type="stmt"/>
            <line num="141" count="3" type="stmt"/>
            <line num="143" count="3" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getRatio() : Ratio" num="144" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line num="151" count="3" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getRatio() : Ratio" num="152" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line num="159" count="3" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getRatio() : Ratio" num="160" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line num="167" count="3" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getRatio() : Ratio" num="168" count="0" type="method"/>
            <line num="170" count="0" type="stmt"/>
            <line num="175" count="3" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getRatio() : Ratio" num="176" count="0" type="method"/>
            <line num="178" count="0" type="stmt"/>
            <line num="183" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRatio() : Ratio" num="184" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line num="192" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="onTimeout(AsyncEvent) : void" num="195" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="onStartAsync(AsyncEvent) : void" num="200" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="onError(AsyncEvent) : void" num="206" count="0" type="method"/>
            <line complexity="3" visibility="public" signature="onComplete(AsyncEvent) : void" num="210" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="216" type="cond"/>
            <line num="218" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="handle(String,Request,HttpServletRequest,HttpServletResponse) : void" num="224" count="2" type="method"/>
            <line num="230" count="2" type="stmt"/>
            <line num="232" count="2" type="stmt"/>
            <line num="233" count="2" type="stmt"/>
            <line num="234" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="234" type="cond"/>
            <line num="236" count="2" type="stmt"/>
            <line num="237" count="2" type="stmt"/>
            <line num="238" count="2" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="243" type="cond"/>
            <line num="244" count="0" type="stmt"/>
            <line num="248" count="2" type="stmt"/>
            <line num="249" count="2" type="stmt"/>
            <line num="251" count="2" type="stmt"/>
            <line num="252" count="2" type="stmt"/>
            <line num="254" count="2" type="stmt"/>
            <line num="255" count="2" type="stmt"/>
            <line num="257" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="257" type="cond"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="259" type="cond"/>
            <line num="260" count="2" type="stmt"/>
            <line complexity="11" visibility="private" signature="requestTimer(String) : Timer" num="266" count="2" type="method"/>
            <line num="267" count="2" type="stmt"/>
            <line num="268" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="268" type="cond"/>
            <line num="269" count="0" type="stmt"/>
            <line num="271" count="2" type="stmt"/>
            <line num="272" count="2" type="stmt"/>
            <line num="273" count="2" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="updateResponses(HttpServletRequest,HttpServletResponse,long,boolean) : void" num="296" count="2" type="method"/>
            <line num="297" count="2" type="stmt"/>
            <line num="298" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="298" type="cond"/>
            <line num="299" count="1" type="stmt"/>
            <line num="301" count="1" type="stmt"/>
            <line num="303" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="303" type="cond"/>
            <line num="304" count="2" type="stmt"/>
            <line num="306" count="2" type="stmt"/>
            <line num="307" count="2" type="stmt"/>
            <line num="308" count="2" type="stmt"/>
            <line num="309" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jetty9/src/main/java/com/codahale/metrics/jetty9/InstrumentedHttpChannelListener.java" name="InstrumentedHttpChannelListener.java">
            <metrics coveredelements="103" coveredconditionals="13" complexity="50" loc="361" coveredmethods="17" methods="31" elements="150" classes="1" ncloc="263" statements="101" conditionals="18" coveredstatements="73"/>
            <class name="InstrumentedHttpChannelListener">
               <metrics coveredelements="103" coveredconditionals="13" complexity="50" coveredmethods="17" methods="31" elements="150" statements="101" conditionals="18" coveredstatements="73"/>
            </class>
            <line complexity="1" visibility="public" signature="InstrumentedHttpChannelListener(MetricRegistry)" num="80" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="InstrumentedHttpChannelListener(MetricRegistry,String)" num="90" count="3" type="method"/>
            <line num="91" count="3" type="stmt"/>
            <line num="93" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="93" type="cond"/>
            <line num="95" count="3" type="stmt"/>
            <line num="96" count="3" type="stmt"/>
            <line num="98" count="3" type="stmt"/>
            <line num="99" count="3" type="stmt"/>
            <line num="100" count="3" type="stmt"/>
            <line num="102" count="3" type="stmt"/>
            <line num="103" count="3" type="stmt"/>
            <line num="105" count="3" type="stmt"/>
            <line num="113" count="3" type="stmt"/>
            <line num="114" count="3" type="stmt"/>
            <line num="115" count="3" type="stmt"/>
            <line num="116" count="3" type="stmt"/>
            <line num="117" count="3" type="stmt"/>
            <line num="118" count="3" type="stmt"/>
            <line num="119" count="3" type="stmt"/>
            <line num="120" count="3" type="stmt"/>
            <line num="121" count="3" type="stmt"/>
            <line num="122" count="3" type="stmt"/>
            <line num="124" count="3" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getRatio() : Ratio" num="125" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line num="132" count="3" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getRatio() : Ratio" num="133" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line num="140" count="3" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getRatio() : Ratio" num="141" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line num="148" count="3" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getRatio() : Ratio" num="149" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line num="156" count="3" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getRatio() : Ratio" num="157" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line num="164" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRatio() : Ratio" num="165" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line num="172" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="onTimeout(AsyncEvent) : void" num="175" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="onStartAsync(AsyncEvent) : void" num="180" count="1" type="method"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="onError(AsyncEvent) : void" num="186" count="0" type="method"/>
            <line complexity="2" visibility="public" signature="onComplete(AsyncEvent) : void" num="190" count="1" type="method"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="196" type="cond"/>
            <line num="197" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="onRequestBegin(Request) : void" num="203" count="3" type="method"/>
            <line complexity="1" visibility="public" signature="onBeforeDispatch(Request) : void" num="208" count="4" type="method"/>
            <line num="210" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="onDispatchFailure(Request,Throwable) : void" num="213" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="onAfterDispatch(Request) : void" num="218" count="4" type="method"/>
            <line num="220" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="onRequestContent(Request,ByteBuffer) : void" num="223" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="onRequestContentEnd(Request) : void" num="228" count="3" type="method"/>
            <line complexity="1" visibility="public" signature="onRequestTrailers(Request) : void" num="233" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="onRequestEnd(Request) : void" num="238" count="3" type="method"/>
            <line complexity="1" visibility="public" signature="onRequestFailure(Request,Throwable) : void" num="243" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="onResponseBegin(Request) : void" num="248" count="3" type="method"/>
            <line complexity="1" visibility="public" signature="onResponseCommit(Request) : void" num="253" count="3" type="method"/>
            <line complexity="1" visibility="public" signature="onResponseContent(Request,ByteBuffer) : void" num="258" count="3" type="method"/>
            <line complexity="1" visibility="public" signature="onResponseEnd(Request) : void" num="263" count="3" type="method"/>
            <line complexity="1" visibility="public" signature="onResponseFailure(Request,Throwable) : void" num="268" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="onComplete(Request) : void" num="273" count="3" type="method"/>
            <line complexity="3" visibility="private" signature="before(Request) : void" num="278" count="4" type="method"/>
            <line num="279" count="4" type="stmt"/>
            <line num="281" count="4" type="stmt"/>
            <line num="282" count="4" type="stmt"/>
            <line num="283" count="4" type="stmt"/>
            <line falsecount="1" truecount="3" num="283" type="cond"/>
            <line num="285" count="3" type="stmt"/>
            <line num="286" count="3" type="stmt"/>
            <line num="287" count="3" type="stmt"/>
            <line num="290" count="1" type="stmt"/>
            <line num="291" count="1" type="stmt"/>
            <line num="292" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="292" type="cond"/>
            <line num="293" count="0" type="stmt"/>
            <line num="296" count="4" type="stmt"/>
            <line complexity="3" visibility="private" signature="after(Request) : void" num="299" count="4" type="method"/>
            <line num="300" count="4" type="stmt"/>
            <line num="301" count="4" type="stmt"/>
            <line num="302" count="4" type="stmt"/>
            <line num="304" count="4" type="stmt"/>
            <line num="305" count="4" type="stmt"/>
            <line num="307" count="4" type="stmt"/>
            <line num="308" count="4" type="stmt"/>
            <line falsecount="3" truecount="1" num="308" type="cond"/>
            <line num="309" count="1" type="stmt"/>
            <line num="310" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="310" type="cond"/>
            <line num="311" count="2" type="stmt"/>
            <line complexity="4" visibility="private" signature="updateResponses(HttpServletRequest,HttpServletResponse,long,boolean) : void" num="316" count="3" type="method"/>
            <line num="317" count="3" type="stmt"/>
            <line num="318" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="318" type="cond"/>
            <line num="319" count="2" type="stmt"/>
            <line num="321" count="1" type="stmt"/>
            <line num="323" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="323" type="cond"/>
            <line num="324" count="3" type="stmt"/>
            <line num="326" count="3" type="stmt"/>
            <line num="327" count="3" type="stmt"/>
            <line num="328" count="3" type="stmt"/>
            <line num="329" count="3" type="stmt"/>
            <line complexity="11" visibility="private" signature="requestTimer(String) : Timer" num="332" count="3" type="method"/>
            <line num="333" count="3" type="stmt"/>
            <line num="334" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="334" type="cond"/>
            <line num="335" count="0" type="stmt"/>
            <line num="337" count="3" type="stmt"/>
            <line num="338" count="3" type="stmt"/>
            <line num="339" count="3" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line num="354" count="0" type="stmt"/>
            <line num="355" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jetty9/src/main/java/com/codahale/metrics/jetty9/InstrumentedQueuedThreadPool.java" name="InstrumentedQueuedThreadPool.java">
            <metrics coveredelements="26" coveredconditionals="2" complexity="13" loc="98" coveredmethods="8" methods="12" elements="36" classes="1" ncloc="81" statements="22" conditionals="2" coveredstatements="16"/>
            <class name="InstrumentedQueuedThreadPool">
               <metrics coveredelements="26" coveredconditionals="2" complexity="13" coveredmethods="8" methods="12" elements="36" statements="22" conditionals="2" coveredstatements="16"/>
            </class>
            <line complexity="1" visibility="public" signature="InstrumentedQueuedThreadPool(MetricRegistry)" num="17" count="2" type="method"/>
            <line num="18" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="InstrumentedQueuedThreadPool(MetricRegistry,int)" num="21" count="2" type="method"/>
            <line num="23" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="InstrumentedQueuedThreadPool(MetricRegistry,int,int)" num="26" count="2" type="method"/>
            <line num="29" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="InstrumentedQueuedThreadPool(MetricRegistry,int,int,int)" num="32" count="2" type="method"/>
            <line num="36" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="InstrumentedQueuedThreadPool(MetricRegistry,int,int,int,BlockingQueue&lt;Runnable&gt;)" num="39" count="2" type="method"/>
            <line num="44" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="InstrumentedQueuedThreadPool(MetricRegistry,int,int,int,BlockingQueue&lt;Runnable&gt;,String)" num="47" count="2" type="method"/>
            <line num="53" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line num="55" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPrefix() : String" num="58" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPrefix(String) : void" num="62" count="1" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="2" visibility="protected" signature="doStart() : void" num="66" count="2" type="method"/>
            <line num="68" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="70" type="cond"/>
            <line num="72" count="2" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getRatio() : Ratio" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getRatio() : Ratio" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getRatio() : Ratio" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics.annotation">
         <metrics coveredelements="0" complexity="0" loc="371" methods="0" classes="8" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="114" files="8" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-annotation/src/main/java/com/codahale/metrics/annotation/CachedGauge.java" name="CachedGauge.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="53" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="14" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="CachedGauge">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-annotation/src/main/java/com/codahale/metrics/annotation/Counted.java" name="Counted.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="53" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="16" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Counted">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-annotation/src/main/java/com/codahale/metrics/annotation/ExceptionMetered.java" name="ExceptionMetered.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="65" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="17" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ExceptionMetered">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-annotation/src/main/java/com/codahale/metrics/annotation/Gauge.java" name="Gauge.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="35" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Gauge">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-annotation/src/main/java/com/codahale/metrics/annotation/Metered.java" name="Metered.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="39" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="15" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Metered">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-annotation/src/main/java/com/codahale/metrics/annotation/Metric.java" name="Metric.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="48" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Metric">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-annotation/src/main/java/com/codahale/metrics/annotation/ResponseMetered.java" name="ResponseMetered.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="39" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="15" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ResponseMetered">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-annotation/src/main/java/com/codahale/metrics/annotation/Timed.java" name="Timed.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="39" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="15" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Timed">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="com.codahale.metrics.log4j2">
         <metrics coveredelements="42" complexity="14" loc="138" methods="8" classes="1" statements="38" coveredconditionals="0" coveredmethods="7" elements="46" ncloc="85" files="1" conditionals="0" coveredstatements="35"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-log4j2/src/main/java/com/codahale/metrics/log4j2/InstrumentedAppender.java" name="InstrumentedAppender.java">
            <metrics coveredelements="42" coveredconditionals="0" complexity="14" loc="138" coveredmethods="7" methods="8" elements="46" classes="1" ncloc="85" statements="38" conditionals="0" coveredstatements="35"/>
            <class name="InstrumentedAppender">
               <metrics coveredelements="42" coveredconditionals="0" complexity="14" coveredmethods="7" methods="8" elements="46" statements="38" conditionals="0" coveredstatements="35"/>
            </class>
            <line complexity="1" visibility="public" signature="InstrumentedAppender(String,Filter,Layout&lt;? extends Serializable&gt;,boolean)" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="InstrumentedAppender(String)" num="55" count="1" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="InstrumentedAppender(MetricRegistry)" num="64" count="8" type="method"/>
            <line num="65" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="InstrumentedAppender(MetricRegistry,Filter,Layout&lt;? extends Serializable&gt;,boolean)" num="77" count="8" type="method"/>
            <line num="78" count="8" type="stmt"/>
            <line num="79" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="InstrumentedAppender(String,MetricRegistry)" num="88" count="3" type="method"/>
            <line num="89" count="3" type="stmt"/>
            <line num="90" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="createAppender(String,String) : InstrumentedAppender" num="93" count="3" type="method"/>
            <line num="97" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="start() : void" num="100" count="11" type="method"/>
            <line num="102" count="11" type="stmt"/>
            <line num="103" count="11" type="stmt"/>
            <line num="104" count="11" type="stmt"/>
            <line num="105" count="11" type="stmt"/>
            <line num="106" count="11" type="stmt"/>
            <line num="107" count="11" type="stmt"/>
            <line num="108" count="11" type="stmt"/>
            <line num="109" count="11" type="stmt"/>
            <line complexity="7" visibility="public" signature="append(LogEvent) : void" num="112" count="10" type="method"/>
            <line num="114" count="10" type="stmt"/>
            <line num="115" count="10" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="2" type="stmt"/>
            <line num="123" count="2" type="stmt"/>
            <line num="124" count="2" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="4" type="stmt"/>
            <line num="129" count="4" type="stmt"/>
            <line num="130" count="4" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics.servlet">
         <metrics coveredelements="2" complexity="30" loc="293" methods="21" classes="5" statements="74" coveredconditionals="0" coveredmethods="1" elements="107" ncloc="211" files="3" conditionals="12" coveredstatements="1"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-servlet/src/main/java/com/codahale/metrics/servlet/AbstractInstrumentedFilter.java" name="AbstractInstrumentedFilter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="26" loc="218" coveredmethods="0" methods="17" elements="93" classes="3" ncloc="171" statements="64" conditionals="12" coveredstatements="0"/>
            <class name="AbstractInstrumentedFilter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="6" elements="56" statements="40" conditionals="10" coveredstatements="0"/>
            </class>
            <class name="AbstractInstrumentedFilter.StatusExposingServletResponse">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="16" statements="10" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="AbstractInstrumentedFilter.AsyncResultListener">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="5" elements="21" statements="14" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="AbstractInstrumentedFilter(String,Map&lt;Integer, String&gt;,String)" num="55" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="init(FilterConfig) : void" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getMetricsFactory(FilterConfig) : MetricRegistry" num="85" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="destroy() : void" num="97" count="0" type="method"/>
            <line complexity="5" visibility="public" signature="doFilter(ServletRequest,ServletResponse,FilterChain) : void" num="102" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="markMeterForStatusCode(int) : void" num="131" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="StatusExposingServletResponse(HttpServletResponse)" num="144" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sendError(int) : void" num="148" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sendError(int,String) : void" num="154" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setStatus(int) : void" num="160" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setStatus(int,String) : void" num="166" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStatus() : int" num="173" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AsyncResultListener(Timer.Context)" num="183" count="0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="onComplete(AsyncEvent) : void" num="187" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="189" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="onTimeout(AsyncEvent) : void" num="197" count="0" type="method"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="onError(AsyncEvent) : void" num="205" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="onStartAsync(AsyncEvent) : void" num="213" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-servlet/src/main/java/com/codahale/metrics/servlet/InstrumentedFilter.java" name="InstrumentedFilter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="48" coveredmethods="0" methods="2" elements="11" classes="1" ncloc="26" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="InstrumentedFilter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="11" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="InstrumentedFilter()" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="createMeterNamesByStatusCode() : Map&lt;Integer, String&gt;" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-servlet/src/main/java/com/codahale/metrics/servlet/InstrumentedFilterContextListener.java" name="InstrumentedFilterContextListener.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="2" loc="27" coveredmethods="1" methods="2" elements="3" classes="1" ncloc="14" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="InstrumentedFilterContextListener">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="contextInitialized(ServletContextEvent) : void" num="19" count="1" type="method"/>
            <line num="21" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="contextDestroyed(ServletContextEvent) : void" num="24" count="0" type="method"/>
         </file>
      </package>
      <package name="com.codahale.metrics.health.annotation">
         <metrics coveredelements="0" complexity="0" loc="75" methods="0" classes="3" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="22" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-healthchecks/src/main/java/com/codahale/metrics/health/annotation/Async.java" name="Async.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="75" coveredmethods="0" methods="0" elements="0" classes="3" ncloc="22" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Async">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Async.InitialState">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Async.ScheduleType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="com.codahale.metrics.health.jvm">
         <metrics coveredelements="11" complexity="4" loc="38" methods="3" classes="1" statements="6" coveredconditionals="2" coveredmethods="3" elements="11" ncloc="21" files="1" conditionals="2" coveredstatements="6"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-healthchecks/src/main/java/com/codahale/metrics/health/jvm/ThreadDeadlockHealthCheck.java" name="ThreadDeadlockHealthCheck.java">
            <metrics coveredelements="11" coveredconditionals="2" complexity="4" loc="38" coveredmethods="3" methods="3" elements="11" classes="1" ncloc="21" statements="6" conditionals="2" coveredstatements="6"/>
            <class name="ThreadDeadlockHealthCheck">
               <metrics coveredelements="11" coveredconditionals="2" complexity="4" coveredmethods="3" methods="3" elements="11" statements="6" conditionals="2" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="ThreadDeadlockHealthCheck()" num="17" count="1" type="method"/>
            <line num="18" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ThreadDeadlockHealthCheck(ThreadDeadlockDetector)" num="26" count="3" type="method"/>
            <line num="27" count="3" type="stmt"/>
            <line complexity="2" visibility="protected" signature="check() : Result" num="30" count="3" type="method"/>
            <line num="32" count="3" type="stmt"/>
            <line num="33" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="33" type="cond"/>
            <line num="34" count="2" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics.health">
         <metrics coveredelements="290" complexity="107" loc="906" methods="70" classes="9" statements="201" coveredconditionals="43" coveredmethods="67" elements="337" ncloc="500" files="6" conditionals="66" coveredstatements="180"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-healthchecks/src/main/java/com/codahale/metrics/health/AsyncHealthCheckDecorator.java" name="AsyncHealthCheckDecorator.java">
            <metrics coveredelements="41" coveredconditionals="11" complexity="13" loc="80" coveredmethods="7" methods="7" elements="42" classes="1" ncloc="63" statements="23" conditionals="12" coveredstatements="23"/>
            <class name="AsyncHealthCheckDecorator">
               <metrics coveredelements="41" coveredconditionals="11" complexity="13" coveredmethods="7" methods="7" elements="42" statements="23" conditionals="12" coveredstatements="23"/>
            </class>
            <line complexity="4" visibility="package" signature="AsyncHealthCheckDecorator(HealthCheck,ScheduledExecutorService,Clock)" num="20" count="33" type="method"/>
            <line num="21" count="33" type="stmt"/>
            <line num="22" count="32" type="stmt"/>
            <line num="23" count="31" type="stmt"/>
            <line num="24" count="31" type="stmt"/>
            <line num="25" count="30" type="stmt"/>
            <line num="26" count="28" type="stmt"/>
            <line num="29" count="27" type="stmt"/>
            <line num="30" count="27" type="stmt"/>
            <line num="31" count="27" type="stmt"/>
            <line falsecount="2" truecount="25" num="31" type="cond"/>
            <line num="32" count="27" type="stmt"/>
            <line falsecount="6" truecount="21" num="32" type="cond"/>
            <line num="34" count="27" type="stmt"/>
            <line falsecount="1" truecount="26" num="34" type="cond"/>
            <line num="35" count="26" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="AsyncHealthCheckDecorator(HealthCheck,ScheduledExecutorService)" num="42" count="24" type="method"/>
            <line num="43" count="24" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="46" count="6" type="method"/>
            <line num="48" count="6" type="stmt"/>
            <line complexity="3" visibility="protected" signature="check() : Result" num="51" count="11" type="method"/>
            <line num="53" count="11" type="stmt"/>
            <line num="54" count="11" type="stmt"/>
            <line falsecount="8" truecount="3" num="54" type="cond"/>
            <line num="55" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="59" type="cond"/>
            <line num="64" count="8" type="stmt"/>
            <line complexity="1" visibility="package" signature="tearDown() : boolean" num="67" count="3" type="method"/>
            <line num="68" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHealthCheck() : HealthCheck" num="71" count="3" type="method"/>
            <line num="72" count="3" type="stmt"/>
            <line complexity="2" visibility="private" signature="check(boolean,String) : void" num="75" count="154" type="method"/>
            <line num="76" count="154" type="stmt"/>
            <line falsecount="148" truecount="6" num="76" type="cond"/>
            <line num="77" count="6" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-healthchecks/src/main/java/com/codahale/metrics/health/HealthCheck.java" name="HealthCheck.java">
            <metrics coveredelements="107" coveredconditionals="10" complexity="46" loc="385" coveredmethods="31" methods="32" elements="132" classes="3" ncloc="188" statements="76" conditionals="24" coveredstatements="66"/>
            <class name="HealthCheck">
               <metrics coveredelements="10" coveredconditionals="0" complexity="3" coveredmethods="2" methods="2" elements="10" statements="8" conditionals="0" coveredstatements="8"/>
            </class>
            <class name="HealthCheck.Result">
               <metrics coveredelements="69" coveredconditionals="9" complexity="33" coveredmethods="20" methods="21" elements="92" statements="49" conditionals="22" coveredstatements="40"/>
            </class>
            <class name="HealthCheck.ResultBuilder">
               <metrics coveredelements="28" coveredconditionals="1" complexity="10" coveredmethods="9" methods="9" elements="30" statements="19" conditionals="2" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="public" signature="healthy() : Result" num="33" count="4" type="method"/>
            <line num="34" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="healthy(String) : Result" num="43" count="25" type="method"/>
            <line num="44" count="25" type="stmt"/>
            <line complexity="1" visibility="public" signature="healthy(String,Object) : Result" num="57" count="2" type="method"/>
            <line num="58" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="unhealthy(String) : Result" num="67" count="10" type="method"/>
            <line num="68" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="unhealthy(String,Object) : Result" num="81" count="1" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="unhealthy(Throwable) : Result" num="91" count="5" type="method"/>
            <line num="92" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="builder() : ResultBuilder" num="101" count="19" type="method"/>
            <line num="102" count="19" type="stmt"/>
            <line complexity="1" visibility="private" signature="Result(boolean,String,Throwable)" num="113" count="44" type="method"/>
            <line num="114" count="44" type="stmt"/>
            <line complexity="1" visibility="private" signature="Result(ResultBuilder)" num="117" count="19" type="method"/>
            <line num="118" count="19" type="stmt"/>
            <line complexity="2" visibility="private" signature="Result(boolean,String,Throwable,Map&lt;String, Object&gt;,Clock)" num="121" count="63" type="method"/>
            <line num="122" count="63" type="stmt"/>
            <line num="123" count="63" type="stmt"/>
            <line num="124" count="63" type="stmt"/>
            <line num="125" count="63" type="stmt"/>
            <line falsecount="19" truecount="44" num="125" type="cond"/>
            <line num="126" count="63" type="stmt"/>
            <line complexity="1" visibility="public" signature="isHealthy() : boolean" num="135" count="37" type="method"/>
            <line num="136" count="37" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMessage() : String" num="145" count="23" type="method"/>
            <line num="146" count="23" type="stmt"/>
            <line complexity="1" visibility="public" signature="getError() : Throwable" num="154" count="22" type="method"/>
            <line num="155" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimestamp() : String" num="163" count="19" type="method"/>
            <line num="164" count="19" type="stmt"/>
            <line num="165" count="19" type="stmt"/>
            <line num="166" count="19" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime() : long" num="174" count="12" type="method"/>
            <line num="175" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDuration() : long" num="183" count="12" type="method"/>
            <line num="184" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDuration(long) : void" num="192" count="17" type="method"/>
            <line num="193" count="17" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDetails() : Map&lt;String, Object&gt;" num="196" count="15" type="method"/>
            <line num="197" count="15" type="stmt"/>
            <line complexity="6" visibility="public" signature="equals(Object) : boolean" num="200" count="4" type="method"/>
            <line num="202" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="202" type="cond"/>
            <line num="203" count="0" type="stmt"/>
            <line num="205" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="205" type="cond"/>
            <line num="206" count="0" type="stmt"/>
            <line num="208" count="4" type="stmt"/>
            <line num="209" count="4" type="stmt"/>
            <line falsecount="3" truecount="0" num="210" type="cond"/>
            <line falsecount="0" truecount="3" num="211" type="cond"/>
            <line complexity="4" visibility="public" signature="hashCode() : int" num="215" count="0" type="method"/>
            <line num="217" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="217" type="cond"/>
            <line num="218" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="218" type="cond"/>
            <line num="219" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="219" type="cond"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="toString() : String" num="224" count="1" type="method"/>
            <line num="226" count="1" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line num="228" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="228" type="cond"/>
            <line num="229" count="0" type="stmt"/>
            <line num="231" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="231" type="cond"/>
            <line num="232" count="0" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="236" type="cond"/>
            <line num="237" count="1" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line num="239" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="ResultBuilder()" num="260" count="19" type="method"/>
            <line num="261" count="19" type="stmt"/>
            <line num="262" count="19" type="stmt"/>
            <line num="263" count="19" type="stmt"/>
            <line complexity="1" visibility="public" signature="healthy() : ResultBuilder" num="271" count="11" type="method"/>
            <line num="272" count="11" type="stmt"/>
            <line num="273" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="unhealthy() : ResultBuilder" num="281" count="8" type="method"/>
            <line num="282" count="8" type="stmt"/>
            <line num="283" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="unhealthy(Throwable) : ResultBuilder" num="292" count="1" type="method"/>
            <line num="293" count="1" type="stmt"/>
            <line num="294" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="withMessage(String) : ResultBuilder" num="303" count="11" type="method"/>
            <line num="304" count="11" type="stmt"/>
            <line num="305" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="withMessage(String,Object) : ResultBuilder" num="318" count="4" type="method"/>
            <line num="319" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="withDetail(String,Object) : ResultBuilder" num="329" count="13" type="method"/>
            <line num="330" count="13" type="stmt"/>
            <line falsecount="13" truecount="0" num="330" type="cond"/>
            <line num="331" count="0" type="stmt"/>
            <line num="333" count="13" type="stmt"/>
            <line num="334" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="usingClock(Clock) : ResultBuilder" num="344" count="14" type="method"/>
            <line num="345" count="14" type="stmt"/>
            <line num="346" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : Result" num="349" count="19" type="method"/>
            <line num="350" count="19" type="stmt"/>
            <line complexity="2" visibility="public" signature="execute() : Result" num="370" count="19" type="method"/>
            <line num="371" count="19" type="stmt"/>
            <line num="372" count="19" type="stmt"/>
            <line num="373" count="19" type="stmt"/>
            <line num="374" count="19" type="stmt"/>
            <line num="376" count="2" type="stmt"/>
            <line num="378" count="19" type="stmt"/>
            <line num="379" count="19" type="stmt"/>
            <line complexity="1" visibility="protected" signature="clock() : Clock" num="382" count="28" type="method"/>
            <line num="383" count="28" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-healthchecks/src/main/java/com/codahale/metrics/health/HealthCheckFilter.java" name="HealthCheckFilter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="21" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="HealthCheckFilter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-healthchecks/src/main/java/com/codahale/metrics/health/HealthCheckRegistry.java" name="HealthCheckRegistry.java">
            <metrics coveredelements="103" coveredconditionals="16" complexity="32" loc="288" coveredmethods="19" methods="20" elements="115" classes="2" ncloc="174" statements="75" conditionals="20" coveredstatements="68"/>
            <class name="HealthCheckRegistry">
               <metrics coveredelements="92" coveredconditionals="14" complexity="28" coveredmethods="17" methods="18" elements="101" statements="67" conditionals="16" coveredstatements="61"/>
            </class>
            <class name="HealthCheckRegistry.NamedThreadFactory">
               <metrics coveredelements="11" coveredconditionals="2" complexity="4" coveredmethods="2" methods="2" elements="14" statements="8" conditionals="4" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="HealthCheckRegistry()" num="44" count="22" type="method"/>
            <line num="45" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="HealthCheckRegistry(int)" num="53" count="22" type="method"/>
            <line num="54" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="HealthCheckRegistry(ScheduledExecutorService)" num="62" count="39" type="method"/>
            <line num="63" count="39" type="stmt"/>
            <line num="64" count="39" type="stmt"/>
            <line num="65" count="39" type="stmt"/>
            <line complexity="1" visibility="public" signature="addListener(HealthCheckRegistryListener) : void" num="75" count="19" type="method"/>
            <line num="76" count="19" type="stmt"/>
            <line num="77" count="19" type="stmt"/>
            <line num="78" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="removeListener(HealthCheckRegistryListener) : void" num="87" count="1" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="register(String,HealthCheck) : void" num="97" count="63" type="method"/>
            <line num="98" count="63" type="stmt"/>
            <line num="99" count="63" type="stmt"/>
            <line num="100" count="63" type="stmt"/>
            <line falsecount="62" truecount="1" num="100" type="cond"/>
            <line num="101" count="1" type="stmt"/>
            <line num="103" count="62" type="stmt"/>
            <line num="104" count="62" type="stmt"/>
            <line falsecount="44" truecount="18" num="104" type="cond"/>
            <line num="105" count="18" type="stmt"/>
            <line num="107" count="62" type="stmt"/>
            <line num="109" count="62" type="stmt"/>
            <line complexity="3" visibility="public" signature="unregister(String) : void" num="117" count="5" type="method"/>
            <line num="118" count="5" type="stmt"/>
            <line num="119" count="5" type="stmt"/>
            <line num="120" count="5" type="stmt"/>
            <line num="121" count="5" type="stmt"/>
            <line falsecount="3" truecount="2" num="121" type="cond"/>
            <line num="122" count="2" type="stmt"/>
            <line num="125" count="5" type="stmt"/>
            <line falsecount="0" truecount="5" num="125" type="cond"/>
            <line num="126" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNames() : SortedSet&lt;String&gt;" num="135" count="1" type="method"/>
            <line num="136" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHealthCheck(String) : HealthCheck" num="144" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="runHealthCheck(String) : HealthCheck.Result" num="155" count="2" type="method"/>
            <line num="156" count="2" type="stmt"/>
            <line num="157" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="157" type="cond"/>
            <line num="158" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="runHealthChecks() : SortedMap&lt;String, HealthCheck.Result&gt;" num="168" count="2" type="method"/>
            <line num="169" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="runHealthChecks(HealthCheckFilter) : SortedMap&lt;String, HealthCheck.Result&gt;" num="178" count="4" type="method"/>
            <line num="179" count="4" type="stmt"/>
            <line num="180" count="4" type="stmt"/>
            <line num="181" count="11" type="stmt"/>
            <line num="182" count="11" type="stmt"/>
            <line num="183" count="11" type="stmt"/>
            <line falsecount="5" truecount="6" num="183" type="cond"/>
            <line num="184" count="6" type="stmt"/>
            <line num="185" count="6" type="stmt"/>
            <line num="188" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="runHealthChecks(ExecutorService) : SortedMap&lt;String, HealthCheck.Result&gt;" num="197" count="1" type="method"/>
            <line num="198" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="runHealthChecks(ExecutorService,HealthCheckFilter) : SortedMap&lt;String, HealthCheck.Result&gt;" num="208" count="8" type="method"/>
            <line num="209" count="8" type="stmt"/>
            <line num="210" count="8" type="stmt"/>
            <line num="211" count="15" type="stmt"/>
            <line num="212" count="15" type="stmt"/>
            <line num="213" count="15" type="stmt"/>
            <line falsecount="6" truecount="9" num="213" type="cond"/>
            <line num="214" count="9" type="stmt"/>
            <line num="218" count="8" type="stmt"/>
            <line num="219" count="8" type="stmt"/>
            <line num="220" count="9" type="stmt"/>
            <line num="221" count="9" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="228" count="8" type="stmt"/>
            <line complexity="1" visibility="private" signature="onHealthCheckAdded(String,HealthCheck) : void" num="232" count="62" type="method"/>
            <line num="233" count="62" type="stmt"/>
            <line num="234" count="52" type="stmt"/>
            <line complexity="1" visibility="private" signature="onHealthCheckRemoved(String,HealthCheck) : void" num="238" count="5" type="method"/>
            <line num="239" count="5" type="stmt"/>
            <line num="240" count="5" type="stmt"/>
            <line complexity="3" visibility="public" signature="shutdown() : void" num="247" count="5" type="method"/>
            <line num="248" count="5" type="stmt"/>
            <line num="249" count="5" type="stmt"/>
            <line num="251" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="251" type="cond"/>
            <line num="252" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="createExecutorService(int) : ScheduledExecutorService" num="260" count="22" type="method"/>
            <line num="261" count="22" type="stmt"/>
            <line num="263" count="22" type="stmt"/>
            <line num="264" count="22" type="stmt"/>
            <line complexity="2" visibility="package" signature="NamedThreadFactory(String)" num="273" count="22" type="method"/>
            <line num="274" count="22" type="stmt"/>
            <line num="275" count="22" type="stmt"/>
            <line falsecount="22" truecount="0" num="275" type="cond"/>
            <line num="276" count="22" type="stmt"/>
            <line complexity="2" visibility="public" signature="newThread(Runnable) : Thread" num="279" count="2" type="method"/>
            <line num="281" count="2" type="stmt"/>
            <line num="282" count="2" type="stmt"/>
            <line num="283" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="283" type="cond"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-healthchecks/src/main/java/com/codahale/metrics/health/HealthCheckRegistryListener.java" name="HealthCheckRegistryListener.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="26" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="HealthCheckRegistryListener">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-healthchecks/src/main/java/com/codahale/metrics/health/SharedHealthCheckRegistries.java" name="SharedHealthCheckRegistries.java">
            <metrics coveredelements="39" coveredconditionals="6" complexity="16" loc="106" coveredmethods="10" methods="11" elements="48" classes="1" ncloc="63" statements="27" conditionals="10" coveredstatements="23"/>
            <class name="SharedHealthCheckRegistries">
               <metrics coveredelements="39" coveredconditionals="6" complexity="16" coveredmethods="10" methods="11" elements="48" statements="27" conditionals="10" coveredstatements="23"/>
            </class>
            <line complexity="1" visibility="package" signature="setDefaultRegistryName(AtomicReference&lt;String&gt;) : void" num="18" count="9" type="method"/>
            <line num="19" count="9" type="stmt"/>
            <line complexity="1" visibility="private" signature="SharedHealthCheckRegistries()" num="22" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="clear() : void" num="24" count="10" type="method"/>
            <line num="25" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="names() : Set&lt;String&gt;" num="28" count="3" type="method"/>
            <line num="29" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove(String) : void" num="32" count="1" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(String,HealthCheckRegistry) : HealthCheckRegistry" num="36" count="12" type="method"/>
            <line num="37" count="12" type="stmt"/>
            <line complexity="3" visibility="public" signature="getOrCreate(String) : HealthCheckRegistry" num="40" count="12" type="method"/>
            <line num="41" count="12" type="stmt"/>
            <line num="42" count="12" type="stmt"/>
            <line falsecount="4" truecount="8" num="42" type="cond"/>
            <line num="43" count="8" type="stmt"/>
            <line num="44" count="8" type="stmt"/>
            <line num="45" count="8" type="stmt"/>
            <line falsecount="0" truecount="8" num="45" type="cond"/>
            <line num="46" count="8" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="50" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDefault(String) : HealthCheckRegistry" num="60" count="3" type="method"/>
            <line num="61" count="3" type="stmt"/>
            <line num="62" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="setDefault(String,HealthCheckRegistry) : HealthCheckRegistry" num="72" count="6" type="method"/>
            <line num="73" count="6" type="stmt"/>
            <line falsecount="0" truecount="4" num="73" type="cond"/>
            <line num="74" count="4" type="stmt"/>
            <line num="75" count="4" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDefault() : HealthCheckRegistry" num="86" count="3" type="method"/>
            <line num="87" count="3" type="stmt"/>
            <line num="88" count="3" type="stmt"/>
            <line falsecount="0" truecount="2" num="88" type="cond"/>
            <line num="89" count="2" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="tryGetDefault() : HealthCheckRegistry" num="99" count="3" type="method"/>
            <line num="100" count="3" type="stmt"/>
            <line num="101" count="3" type="stmt"/>
            <line falsecount="0" truecount="2" num="101" type="cond"/>
            <line num="102" count="2" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics.httpclient5">
         <metrics coveredelements="122" complexity="65" loc="659" methods="61" classes="11" statements="132" coveredconditionals="1" coveredmethods="37" elements="195" ncloc="527" files="8" conditionals="2" coveredstatements="84"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-httpclient5/src/main/java/com/codahale/metrics/httpclient5/HttpClientMetricNameStrategies.java" name="HttpClientMetricNameStrategies.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="3" loc="48" coveredmethods="1" methods="1" elements="9" classes="1" ncloc="39" statements="8" conditionals="0" coveredstatements="6"/>
            <class name="HttpClientMetricNameStrategies">
               <metrics coveredelements="7" coveredconditionals="0" complexity="3" coveredmethods="1" methods="1" elements="9" statements="8" conditionals="0" coveredstatements="6"/>
            </class>
            <line num="21" count="4" type="stmt"/>
            <line num="22" count="4" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="33" count="2" type="stmt"/>
            <line num="34" count="2" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="methodNameString(HttpRequest) : String" num="44" count="8" type="method"/>
            <line num="45" count="8" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-httpclient5/src/main/java/com/codahale/metrics/httpclient5/HttpClientMetricNameStrategy.java" name="HttpClientMetricNameStrategy.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="17" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="HttpClientMetricNameStrategy">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="getNameFor(String,Exception) : String" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-httpclient5/src/main/java/com/codahale/metrics/httpclient5/InstrumentedAsyncClientConnectionManager.java" name="InstrumentedAsyncClientConnectionManager.java">
            <metrics coveredelements="29" coveredconditionals="0" complexity="15" loc="164" coveredmethods="9" methods="15" elements="51" classes="2" ncloc="128" statements="36" conditionals="0" coveredstatements="20"/>
            <class name="InstrumentedAsyncClientConnectionManager">
               <metrics coveredelements="20" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="24" statements="19" conditionals="0" coveredstatements="15"/>
            </class>
            <class name="InstrumentedAsyncClientConnectionManager.Builder">
               <metrics coveredelements="9" coveredconditionals="0" complexity="10" coveredmethods="4" methods="10" elements="27" statements="17" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="protected" signature="getDefaultTlsStrategy() : Registry&lt;TlsStrategy&gt;" num="30" count="4" type="method"/>
            <line num="31" count="4" type="stmt"/>
            <line complexity="1" visibility="package" signature="InstrumentedAsyncClientConnectionManager(MetricRegistry,String,Lookup&lt;TlsStrategy&gt;,PoolConcurrencyPolicy,PoolReusePolicy,TimeValue,SchemePortResolver,DnsResolver)" num="39" count="4" type="method"/>
            <line num="48" count="4" type="stmt"/>
            <line num="49" count="4" type="stmt"/>
            <line num="50" count="4" type="stmt"/>
            <line num="52" count="4" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="4" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="4" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="4" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="close() : void" num="77" count="2" type="method"/>
            <line num="79" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="close(CloseMode) : void" num="85" count="4" type="method"/>
            <line num="87" count="4" type="stmt"/>
            <line num="88" count="4" type="stmt"/>
            <line num="89" count="4" type="stmt"/>
            <line num="90" count="4" type="stmt"/>
            <line num="91" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="builder(MetricRegistry) : Builder" num="94" count="4" type="method"/>
            <line num="95" count="4" type="stmt"/>
            <line complexity="1" visibility="package" signature="Builder()" num="108" count="4" type="method"/>
            <line complexity="1" visibility="public" signature="metricsRegistry(MetricRegistry) : Builder" num="111" count="4" type="method"/>
            <line num="112" count="4" type="stmt"/>
            <line num="113" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="name(String) : Builder" num="116" count="2" type="method"/>
            <line num="117" count="2" type="stmt"/>
            <line num="118" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="schemePortResolver(SchemePortResolver) : Builder" num="121" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dnsResolver(DnsResolver) : Builder" num="126" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="timeToLive(TimeValue) : Builder" num="131" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="tlsStrategyLookup(Lookup&lt;TlsStrategy&gt;) : Builder" num="136" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="poolConcurrencyPolicy(PoolConcurrencyPolicy) : Builder" num="141" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="poolReusePolicy(PoolReusePolicy) : Builder" num="146" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : InstrumentedAsyncClientConnectionManager" num="151" count="4" type="method"/>
            <line num="152" count="4" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-httpclient5/src/main/java/com/codahale/metrics/httpclient5/InstrumentedAsyncExecChainHandler.java" name="InstrumentedAsyncExecChainHandler.java">
            <metrics coveredelements="28" coveredconditionals="0" complexity="10" loc="99" coveredmethods="9" methods="10" elements="30" classes="2" ncloc="83" statements="20" conditionals="0" coveredstatements="19"/>
            <class name="InstrumentedAsyncExecChainHandler">
               <metrics coveredelements="9" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="9" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <class name="InstrumentedAsyncExecChainHandler.InstrumentedAsyncExecCallback">
               <metrics coveredelements="19" coveredconditionals="0" complexity="7" coveredmethods="6" methods="7" elements="21" statements="14" conditionals="0" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="InstrumentedAsyncExecChainHandler(MetricRegistry,HttpClientMetricNameStrategy)" num="25" count="2" type="method"/>
            <line num="26" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="InstrumentedAsyncExecChainHandler(MetricRegistry,HttpClientMetricNameStrategy,String)" num="29" count="2" type="method"/>
            <line num="32" count="2" type="stmt"/>
            <line num="33" count="2" type="stmt"/>
            <line num="34" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="execute(HttpRequest,AsyncEntityProducer,AsyncExecChain.Scope,AsyncExecChain,AsyncExecCallback) : void" num="37" count="2" type="method"/>
            <line num="43" count="2" type="stmt"/>
            <line num="45" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="InstrumentedAsyncExecCallback(MetricRegistry,HttpClientMetricNameStrategy,String,AsyncExecCallback,HttpRequest)" num="56" count="2" type="method"/>
            <line num="61" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="handleResponse(HttpResponse,EntityDetails) : AsyncDataConsumer" num="68" count="1" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="handleInformationResponse(HttpResponse) : void" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="completed() : void" num="78" count="1" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="failed(Exception) : void" num="84" count="1" type="method"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="timer(HttpRequest) : Timer" num="91" count="2" type="method"/>
            <line num="92" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="meter(Exception) : Meter" num="95" count="1" type="method"/>
            <line num="96" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-httpclient5/src/main/java/com/codahale/metrics/httpclient5/InstrumentedHttpAsyncClients.java" name="InstrumentedHttpAsyncClients.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="5" loc="35" coveredmethods="1" methods="5" elements="10" classes="1" ncloc="27" statements="5" conditionals="0" coveredstatements="1"/>
            <class name="InstrumentedHttpAsyncClients">
               <metrics coveredelements="2" coveredconditionals="0" complexity="5" coveredmethods="1" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="private" signature="InstrumentedHttpAsyncClients()" num="11" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createDefault(MetricRegistry) : CloseableHttpAsyncClient" num="15" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createDefault(MetricRegistry,HttpClientMetricNameStrategy) : CloseableHttpAsyncClient" num="19" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="custom(MetricRegistry) : HttpAsyncClientBuilder" num="24" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="custom(MetricRegistry,HttpClientMetricNameStrategy) : HttpAsyncClientBuilder" num="28" count="2" type="method"/>
            <line num="30" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-httpclient5/src/main/java/com/codahale/metrics/httpclient5/InstrumentedHttpClientConnectionManager.java" name="InstrumentedHttpClientConnectionManager.java">
            <metrics coveredelements="32" coveredconditionals="1" complexity="18" loc="184" coveredmethods="9" methods="17" elements="61" classes="2" ncloc="146" statements="42" conditionals="2" coveredstatements="22"/>
            <class name="InstrumentedHttpClientConnectionManager">
               <metrics coveredelements="20" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="24" statements="19" conditionals="0" coveredstatements="15"/>
            </class>
            <class name="InstrumentedHttpClientConnectionManager.Builder">
               <metrics coveredelements="12" coveredconditionals="1" complexity="13" coveredmethods="4" methods="12" elements="37" statements="23" conditionals="2" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="protected" signature="getDefaultRegistry() : Registry&lt;ConnectionSocketFactory&gt;" num="33" count="6" type="method"/>
            <line num="34" count="6" type="stmt"/>
            <line complexity="1" visibility="package" signature="InstrumentedHttpClientConnectionManager(MetricRegistry,String,HttpClientConnectionOperator,PoolConcurrencyPolicy,PoolReusePolicy,TimeValue,HttpConnectionFactory&lt;ManagedHttpClientConnection&gt;)" num="43" count="6" type="method"/>
            <line num="51" count="6" type="stmt"/>
            <line num="52" count="6" type="stmt"/>
            <line num="53" count="6" type="stmt"/>
            <line num="55" count="6" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="6" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="6" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="6" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="close() : void" num="80" count="4" type="method"/>
            <line num="82" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="close(CloseMode) : void" num="88" count="4" type="method"/>
            <line num="90" count="4" type="stmt"/>
            <line num="91" count="4" type="stmt"/>
            <line num="92" count="4" type="stmt"/>
            <line num="93" count="4" type="stmt"/>
            <line num="94" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="builder(MetricRegistry) : Builder" num="97" count="6" type="method"/>
            <line num="98" count="6" type="stmt"/>
            <line complexity="1" visibility="package" signature="Builder()" num="113" count="6" type="method"/>
            <line complexity="1" visibility="public" signature="metricsRegistry(MetricRegistry) : Builder" num="116" count="6" type="method"/>
            <line num="117" count="6" type="stmt"/>
            <line num="118" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="name(String) : Builder" num="121" count="2" type="method"/>
            <line num="122" count="2" type="stmt"/>
            <line num="123" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="socketFactoryRegistry(Registry&lt;ConnectionSocketFactory&gt;) : Builder" num="126" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="connFactory(HttpConnectionFactory&lt;ManagedHttpClientConnection&gt;) : Builder" num="131" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="schemePortResolver(SchemePortResolver) : Builder" num="136" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dnsResolver(DnsResolver) : Builder" num="141" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="timeToLive(TimeValue) : Builder" num="146" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="httpClientConnectionOperator(HttpClientConnectionOperator) : Builder" num="151" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="poolConcurrencyPolicy(PoolConcurrencyPolicy) : Builder" num="156" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="poolReusePolicy(PoolReusePolicy) : Builder" num="161" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="build() : InstrumentedHttpClientConnectionManager" num="166" count="6" type="method"/>
            <line num="167" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="167" type="cond"/>
            <line num="168" count="6" type="stmt"/>
            <line num="174" count="6" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-httpclient5/src/main/java/com/codahale/metrics/httpclient5/InstrumentedHttpClients.java" name="InstrumentedHttpClients.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="5" loc="34" coveredmethods="1" methods="5" elements="10" classes="1" ncloc="26" statements="5" conditionals="0" coveredstatements="1"/>
            <class name="InstrumentedHttpClients">
               <metrics coveredelements="2" coveredconditionals="0" complexity="5" coveredmethods="1" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="private" signature="InstrumentedHttpClients()" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createDefault(MetricRegistry) : CloseableHttpClient" num="14" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createDefault(MetricRegistry,HttpClientMetricNameStrategy) : CloseableHttpClient" num="18" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="custom(MetricRegistry) : HttpClientBuilder" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="custom(MetricRegistry,HttpClientMetricNameStrategy) : HttpClientBuilder" num="27" count="2" type="method"/>
            <line num="29" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-httpclient5/src/main/java/com/codahale/metrics/httpclient5/InstrumentedHttpRequestExecutor.java" name="InstrumentedHttpRequestExecutor.java">
            <metrics coveredelements="22" coveredconditionals="0" complexity="8" loc="78" coveredmethods="7" methods="7" elements="22" classes="1" ncloc="65" statements="15" conditionals="0" coveredstatements="15"/>
            <class name="InstrumentedHttpRequestExecutor">
               <metrics coveredelements="22" coveredconditionals="0" complexity="8" coveredmethods="7" methods="7" elements="22" statements="15" conditionals="0" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="public" signature="InstrumentedHttpRequestExecutor(MetricRegistry,HttpClientMetricNameStrategy)" num="25" count="2" type="method"/>
            <line num="27" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="InstrumentedHttpRequestExecutor(MetricRegistry,HttpClientMetricNameStrategy,String)" num="30" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="InstrumentedHttpRequestExecutor(MetricRegistry,HttpClientMetricNameStrategy,String,Timeout)" num="36" count="2" type="method"/>
            <line num="40" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="InstrumentedHttpRequestExecutor(MetricRegistry,HttpClientMetricNameStrategy,String,Timeout,ConnectionReuseStrategy,Http1StreamListener)" num="43" count="2" type="method"/>
            <line num="49" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="execute(ClassicHttpRequest,HttpClientConnection,HttpResponseInformationCallback,HttpContext) : ClassicHttpResponse" num="58" count="2" type="method"/>
            <line num="60" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="timer(HttpRequest) : Timer" num="71" count="2" type="method"/>
            <line num="72" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="meter(Exception) : Meter" num="75" count="1" type="method"/>
            <line num="76" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics.caffeine">
         <metrics coveredelements="31" complexity="10" loc="131" methods="10" classes="1" statements="23" coveredconditionals="0" coveredmethods="9" elements="33" ncloc="86" files="1" conditionals="0" coveredstatements="22"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-caffeine/src/main/java/com/codahale/metrics/caffeine/MetricsStatsCounter.java" name="MetricsStatsCounter.java">
            <metrics coveredelements="31" coveredconditionals="0" complexity="10" loc="131" coveredmethods="9" methods="10" elements="33" classes="1" ncloc="86" statements="23" conditionals="0" coveredstatements="22"/>
            <class name="MetricsStatsCounter">
               <metrics coveredelements="31" coveredconditionals="0" complexity="10" coveredmethods="9" methods="10" elements="33" statements="23" conditionals="0" coveredstatements="22"/>
            </class>
            <line complexity="1" visibility="public" signature="MetricsStatsCounter(MetricRegistry,String)" num="57" count="9" type="method"/>
            <line num="58" count="9" type="stmt"/>
            <line num="59" count="9" type="stmt"/>
            <line num="60" count="9" type="stmt"/>
            <line num="61" count="9" type="stmt"/>
            <line num="62" count="9" type="stmt"/>
            <line num="63" count="9" type="stmt"/>
            <line num="64" count="9" type="stmt"/>
            <line num="66" count="9" type="stmt"/>
            <line num="67" count="9" type="stmt"/>
            <line num="68" count="45" type="stmt"/>
            <line complexity="1" visibility="public" signature="recordHits(int) : void" num="74" count="4" type="method"/>
            <line num="76" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="recordMisses(int) : void" num="79" count="2" type="method"/>
            <line num="81" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="recordLoadSuccess(long) : void" num="84" count="2" type="method"/>
            <line num="86" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="recordLoadFailure(long) : void" num="90" count="1" type="method"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="recordEviction() : void" num="96" count="1" type="method"/>
            <line num="100" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="recordEviction(int) : void" num="103" count="2" type="method"/>
            <line num="105" count="2" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="recordEviction(int,RemovalCause) : void" num="109" count="5" type="method"/>
            <line num="111" count="5" type="stmt"/>
            <line num="112" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="snapshot() : CacheStats" num="115" count="1" type="method"/>
            <line num="117" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="127" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics.json">
         <metrics coveredelements="157" complexity="33" loc="345" methods="24" classes="9" statements="121" coveredconditionals="14" coveredmethods="23" elements="159" ncloc="286" files="2" conditionals="14" coveredstatements="120"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-json/src/main/java/com/codahale/metrics/json/HealthCheckModule.java" name="HealthCheckModule.java">
            <metrics coveredelements="42" coveredconditionals="8" complexity="11" loc="84" coveredmethods="6" methods="6" elements="42" classes="2" ncloc="68" statements="28" conditionals="8" coveredstatements="28"/>
            <class name="HealthCheckModule">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="HealthCheckModule.HealthCheckResultSerializer">
               <metrics coveredelements="36" coveredconditionals="8" complexity="8" coveredmethods="3" methods="3" elements="36" statements="25" conditionals="8" coveredstatements="25"/>
            </class>
            <line complexity="1" visibility="private" signature="HealthCheckResultSerializer()" num="20" count="14" type="method"/>
            <line num="21" count="14" type="stmt"/>
            <line complexity="4" visibility="public" signature="serialize(HealthCheck.Result,JsonGenerator,SerializerProvider) : void" num="24" count="11" type="method"/>
            <line num="28" count="11" type="stmt"/>
            <line num="29" count="11" type="stmt"/>
            <line num="31" count="11" type="stmt"/>
            <line num="32" count="11" type="stmt"/>
            <line falsecount="2" truecount="9" num="32" type="cond"/>
            <line num="33" count="9" type="stmt"/>
            <line num="36" count="11" type="stmt"/>
            <line num="37" count="11" type="stmt"/>
            <line num="39" count="11" type="stmt"/>
            <line num="40" count="11" type="stmt"/>
            <line falsecount="10" truecount="1" num="40" type="cond"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="9" type="stmt"/>
            <line num="46" count="11" type="stmt"/>
            <line num="47" count="11" type="stmt"/>
            <line complexity="3" visibility="private" signature="serializeThrowable(JsonGenerator,Throwable,String) : void" num="50" count="12" type="method"/>
            <line num="51" count="12" type="stmt"/>
            <line falsecount="9" truecount="3" num="51" type="cond"/>
            <line num="52" count="3" type="stmt"/>
            <line num="53" count="3" type="stmt"/>
            <line num="54" count="3" type="stmt"/>
            <line num="55" count="3" type="stmt"/>
            <line num="56" count="3" type="stmt"/>
            <line num="57" count="3" type="stmt"/>
            <line num="59" count="3" type="stmt"/>
            <line num="61" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="61" type="cond"/>
            <line num="62" count="1" type="stmt"/>
            <line num="65" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModuleName() : String" num="70" count="14" type="method"/>
            <line num="72" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="version() : Version" num="75" count="14" type="method"/>
            <line num="77" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="setupModule(SetupContext) : void" num="80" count="14" type="method"/>
            <line num="82" count="14" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-json/src/main/java/com/codahale/metrics/json/MetricsModule.java" name="MetricsModule.java">
            <metrics coveredelements="115" coveredconditionals="6" complexity="22" loc="261" coveredmethods="17" methods="18" elements="117" classes="7" ncloc="218" statements="93" conditionals="6" coveredstatements="92"/>
            <class name="MetricsModule">
               <metrics coveredelements="14" coveredconditionals="0" complexity="6" coveredmethods="5" methods="6" elements="16" statements="10" conditionals="0" coveredstatements="9"/>
            </class>
            <class name="MetricsModule.GaugeSerializer">
               <metrics coveredelements="10" coveredconditionals="0" complexity="3" coveredmethods="2" methods="2" elements="10" statements="8" conditionals="0" coveredstatements="8"/>
            </class>
            <class name="MetricsModule.CounterSerializer">
               <metrics coveredelements="6" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="MetricsModule.HistogramSerializer">
               <metrics coveredelements="22" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="22" statements="18" conditionals="2" coveredstatements="18"/>
            </class>
            <class name="MetricsModule.MeterSerializer">
               <metrics coveredelements="13" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="13" statements="11" conditionals="0" coveredstatements="11"/>
            </class>
            <class name="MetricsModule.TimerSerializer">
               <metrics coveredelements="38" coveredconditionals="4" complexity="4" coveredmethods="2" methods="2" elements="38" statements="32" conditionals="4" coveredstatements="32"/>
            </class>
            <class name="MetricsModule.MetricRegistrySerializer">
               <metrics coveredelements="12" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="12" statements="10" conditionals="0" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="private" signature="GaugeSerializer()" num="31" count="18" type="method"/>
            <line num="32" count="18" type="stmt"/>
            <line complexity="2" visibility="public" signature="serialize(Gauge,JsonGenerator,SerializerProvider) : void" num="35" count="8" type="method"/>
            <line num="39" count="8" type="stmt"/>
            <line num="40" count="8" type="stmt"/>
            <line num="41" count="8" type="stmt"/>
            <line num="42" count="8" type="stmt"/>
            <line num="43" count="7" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="47" count="8" type="stmt"/>
            <line complexity="1" visibility="private" signature="CounterSerializer()" num="55" count="18" type="method"/>
            <line num="56" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(Counter,JsonGenerator,SerializerProvider) : void" num="59" count="7" type="method"/>
            <line num="63" count="7" type="stmt"/>
            <line num="64" count="7" type="stmt"/>
            <line num="65" count="7" type="stmt"/>
            <line complexity="1" visibility="private" signature="HistogramSerializer(boolean)" num="75" count="18" type="method"/>
            <line num="76" count="18" type="stmt"/>
            <line num="77" count="18" type="stmt"/>
            <line complexity="2" visibility="public" signature="serialize(Histogram,JsonGenerator,SerializerProvider) : void" num="80" count="8" type="method"/>
            <line num="84" count="8" type="stmt"/>
            <line num="85" count="8" type="stmt"/>
            <line num="86" count="8" type="stmt"/>
            <line num="87" count="8" type="stmt"/>
            <line num="88" count="8" type="stmt"/>
            <line num="89" count="8" type="stmt"/>
            <line num="90" count="8" type="stmt"/>
            <line num="91" count="8" type="stmt"/>
            <line num="92" count="8" type="stmt"/>
            <line num="93" count="8" type="stmt"/>
            <line num="94" count="8" type="stmt"/>
            <line num="95" count="8" type="stmt"/>
            <line num="97" count="8" type="stmt"/>
            <line falsecount="7" truecount="1" num="97" type="cond"/>
            <line num="98" count="1" type="stmt"/>
            <line num="101" count="8" type="stmt"/>
            <line num="102" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="MeterSerializer(TimeUnit)" num="113" count="18" type="method"/>
            <line num="114" count="18" type="stmt"/>
            <line num="115" count="18" type="stmt"/>
            <line num="116" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(Meter,JsonGenerator,SerializerProvider) : void" num="119" count="7" type="method"/>
            <line num="123" count="7" type="stmt"/>
            <line num="124" count="7" type="stmt"/>
            <line num="125" count="7" type="stmt"/>
            <line num="126" count="7" type="stmt"/>
            <line num="127" count="7" type="stmt"/>
            <line num="128" count="7" type="stmt"/>
            <line num="129" count="7" type="stmt"/>
            <line num="130" count="7" type="stmt"/>
            <line complexity="1" visibility="private" signature="TimerSerializer(TimeUnit,TimeUnit,boolean)" num="144" count="18" type="method"/>
            <line num="147" count="18" type="stmt"/>
            <line num="148" count="18" type="stmt"/>
            <line num="149" count="18" type="stmt"/>
            <line num="150" count="18" type="stmt"/>
            <line num="151" count="18" type="stmt"/>
            <line num="152" count="18" type="stmt"/>
            <line complexity="3" visibility="public" signature="serialize(Timer,JsonGenerator,SerializerProvider) : void" num="155" count="8" type="method"/>
            <line num="159" count="8" type="stmt"/>
            <line num="160" count="8" type="stmt"/>
            <line num="161" count="8" type="stmt"/>
            <line num="162" count="8" type="stmt"/>
            <line num="163" count="8" type="stmt"/>
            <line num="164" count="8" type="stmt"/>
            <line num="166" count="8" type="stmt"/>
            <line num="167" count="8" type="stmt"/>
            <line num="168" count="8" type="stmt"/>
            <line num="169" count="8" type="stmt"/>
            <line num="170" count="8" type="stmt"/>
            <line num="171" count="8" type="stmt"/>
            <line num="173" count="8" type="stmt"/>
            <line falsecount="7" truecount="1" num="173" type="cond"/>
            <line num="174" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="176" type="cond"/>
            <line num="177" count="3" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="182" count="8" type="stmt"/>
            <line num="183" count="8" type="stmt"/>
            <line num="184" count="8" type="stmt"/>
            <line num="185" count="8" type="stmt"/>
            <line num="186" count="8" type="stmt"/>
            <line num="187" count="8" type="stmt"/>
            <line num="188" count="8" type="stmt"/>
            <line num="189" count="8" type="stmt"/>
            <line complexity="1" visibility="private" signature="MetricRegistrySerializer(MetricFilter)" num="199" count="18" type="method"/>
            <line num="200" count="18" type="stmt"/>
            <line num="201" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(MetricRegistry,JsonGenerator,SerializerProvider) : void" num="204" count="7" type="method"/>
            <line num="208" count="7" type="stmt"/>
            <line num="209" count="7" type="stmt"/>
            <line num="210" count="7" type="stmt"/>
            <line num="211" count="7" type="stmt"/>
            <line num="212" count="7" type="stmt"/>
            <line num="213" count="7" type="stmt"/>
            <line num="214" count="7" type="stmt"/>
            <line num="215" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="MetricsModule(TimeUnit,TimeUnit,boolean)" num="224" count="0" type="method"/>
            <line num="225" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MetricsModule(TimeUnit,TimeUnit,boolean,MetricFilter)" num="228" count="18" type="method"/>
            <line num="229" count="18" type="stmt"/>
            <line num="230" count="18" type="stmt"/>
            <line num="231" count="18" type="stmt"/>
            <line num="232" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="getModuleName() : String" num="235" count="18" type="method"/>
            <line num="237" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="version() : Version" num="240" count="18" type="method"/>
            <line num="242" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="setupModule(SetupContext) : void" num="245" count="18" type="method"/>
            <line num="247" count="18" type="stmt"/>
            <line complexity="1" visibility="private" signature="calculateRateUnit(TimeUnit,String) : String" num="257" count="36" type="method"/>
            <line num="258" count="36" type="stmt"/>
            <line num="259" count="36" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics.servlets">
         <metrics coveredelements="228" complexity="89" loc="649" methods="36" classes="8" statements="186" coveredconditionals="44" coveredmethods="29" elements="292" ncloc="504" files="6" conditionals="70" coveredstatements="155"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-servlets/src/main/java/com/codahale/metrics/servlets/AdminServlet.java" name="AdminServlet.java">
            <metrics coveredelements="35" coveredconditionals="3" complexity="15" loc="125" coveredmethods="4" methods="4" elements="59" classes="1" ncloc="109" statements="39" conditionals="16" coveredstatements="28"/>
            <class name="AdminServlet">
               <metrics coveredelements="35" coveredconditionals="3" complexity="15" coveredmethods="4" methods="4" elements="59" statements="39" conditionals="16" coveredstatements="28"/>
            </class>
            <line complexity="1" visibility="public" signature="init(ServletConfig) : void" num="61" count="1" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="4" visibility="protected" signature="doGet(HttpServletRequest,HttpServletResponse) : void" num="88" count="1" type="method"/>
            <line num="90" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="98" type="cond"/>
            <line complexity="8" visibility="protected" signature="service(HttpServletRequest,HttpServletResponse) : void" num="102" count="1" type="method"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="105" type="cond"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getParam(String,String) : String" num="122" count="6" type="method"/>
            <line num="123" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="123" type="cond"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-servlets/src/main/java/com/codahale/metrics/servlets/CpuProfileServlet.java" name="CpuProfileServlet.java">
            <metrics coveredelements="29" coveredconditionals="5" complexity="11" loc="78" coveredmethods="2" methods="2" elements="41" classes="1" ncloc="66" statements="29" conditionals="10" coveredstatements="22"/>
            <class name="CpuProfileServlet">
               <metrics coveredelements="29" coveredconditionals="5" complexity="11" coveredmethods="2" methods="2" elements="41" statements="29" conditionals="10" coveredstatements="22"/>
            </class>
            <line complexity="8" visibility="protected" signature="doGet(HttpServletRequest,HttpServletResponse) : void" num="25" count="3" type="method"/>
            <line num="29" count="3" type="stmt"/>
            <line num="30" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="30" type="cond"/>
            <line num="31" count="3" type="stmt"/>
            <line num="32" count="3" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="38" count="3" type="stmt"/>
            <line num="39" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="39" type="cond"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="47" count="3" type="stmt"/>
            <line num="48" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="3" type="stmt"/>
            <line num="54" count="3" type="stmt"/>
            <line num="55" count="3" type="stmt"/>
            <line num="56" count="3" type="stmt"/>
            <line num="57" count="3" type="stmt"/>
            <line num="57" count="3" type="stmt"/>
            <line num="58" count="3" type="stmt"/>
            <line complexity="3" visibility="protected" signature="doProfile(OutputStream,int,int,Thread.State) : void" num="62" count="3" type="method"/>
            <line num="63" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="63" type="cond"/>
            <line num="64" count="3" type="stmt"/>
            <line num="65" count="3" type="stmt"/>
            <line num="67" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="3" type="stmt"/>
            <line num="71" count="3" type="stmt"/>
            <line num="73" count="3" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-servlets/src/main/java/com/codahale/metrics/servlets/HealthCheckServlet.java" name="HealthCheckServlet.java">
            <metrics coveredelements="67" coveredconditionals="19" complexity="24" loc="162" coveredmethods="8" methods="12" elements="78" classes="2" ncloc="124" statements="46" conditionals="20" coveredstatements="40"/>
            <class name="HealthCheckServlet">
               <metrics coveredelements="67" coveredconditionals="19" complexity="20" coveredmethods="8" methods="8" elements="69" statements="41" conditionals="20" coveredstatements="40"/>
            </class>
            <class name="HealthCheckServlet.ContextListener">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="getExecutorService() : ExecutorService" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getHealthCheckFilter() : HealthCheckFilter" num="45" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="contextInitialized(ServletContextEvent) : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="contextDestroyed(ServletContextEvent) : void" num="56" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="HealthCheckServlet()" num="74" count="6" type="method"/>
            <line complexity="1" visibility="public" signature="HealthCheckServlet(HealthCheckRegistry)" num="77" count="3" type="method"/>
            <line num="78" count="3" type="stmt"/>
            <line complexity="6" visibility="public" signature="init(ServletConfig) : void" num="81" count="9" type="method"/>
            <line num="83" count="9" type="stmt"/>
            <line num="85" count="9" type="stmt"/>
            <line num="86" count="9" type="stmt"/>
            <line falsecount="1" truecount="8" num="86" type="cond"/>
            <line num="87" count="8" type="stmt"/>
            <line num="88" count="8" type="stmt"/>
            <line falsecount="1" truecount="7" num="88" type="cond"/>
            <line num="89" count="7" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="95" count="8" type="stmt"/>
            <line num="96" count="8" type="stmt"/>
            <line falsecount="3" truecount="5" num="96" type="cond"/>
            <line num="97" count="5" type="stmt"/>
            <line num="101" count="8" type="stmt"/>
            <line num="102" count="8" type="stmt"/>
            <line falsecount="3" truecount="5" num="102" type="cond"/>
            <line num="103" count="5" type="stmt"/>
            <line num="105" count="8" type="stmt"/>
            <line falsecount="5" truecount="3" num="105" type="cond"/>
            <line num="106" count="3" type="stmt"/>
            <line num="109" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="destroy() : void" num="112" count="5" type="method"/>
            <line num="114" count="5" type="stmt"/>
            <line num="115" count="5" type="stmt"/>
            <line complexity="5" visibility="protected" signature="doGet(HttpServletRequest,HttpServletResponse) : void" num="118" count="5" type="method"/>
            <line num="121" count="5" type="stmt"/>
            <line num="122" count="5" type="stmt"/>
            <line num="123" count="5" type="stmt"/>
            <line num="124" count="5" type="stmt"/>
            <line falsecount="4" truecount="1" num="124" type="cond"/>
            <line num="125" count="1" type="stmt"/>
            <line num="127" count="4" type="stmt"/>
            <line falsecount="1" truecount="3" num="127" type="cond"/>
            <line num="128" count="3" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="134" count="5" type="stmt"/>
            <line num="134" count="5" type="stmt"/>
            <line num="135" count="5" type="stmt"/>
            <line complexity="2" visibility="private" signature="getWriter(HttpServletRequest) : ObjectWriter" num="139" count="5" type="method"/>
            <line num="140" count="5" type="stmt"/>
            <line num="141" count="5" type="stmt"/>
            <line falsecount="4" truecount="1" num="141" type="cond"/>
            <line num="142" count="1" type="stmt"/>
            <line num="144" count="4" type="stmt"/>
            <line complexity="2" visibility="private" signature="runHealthChecks() : SortedMap&lt;String, HealthCheck.Result&gt;" num="147" count="5" type="method"/>
            <line num="148" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="148" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line num="151" count="5" type="stmt"/>
            <line complexity="2" visibility="private" signature="isAllHealthy(Map&lt;String, HealthCheck.Result&gt;) : boolean" num="154" count="4" type="method"/>
            <line num="155" count="4" type="stmt"/>
            <line num="156" count="5" type="stmt"/>
            <line falsecount="4" truecount="1" num="156" type="cond"/>
            <line num="157" count="1" type="stmt"/>
            <line num="160" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-servlets/src/main/java/com/codahale/metrics/servlets/MetricsServlet.java" name="MetricsServlet.java">
            <metrics coveredelements="73" coveredconditionals="15" complexity="28" loc="199" coveredmethods="11" methods="14" elements="85" classes="2" ncloc="140" statements="51" conditionals="20" coveredstatements="47"/>
            <class name="MetricsServlet">
               <metrics coveredelements="53" coveredconditionals="11" complexity="17" coveredmethods="7" methods="7" elements="54" statements="35" conditionals="12" coveredstatements="35"/>
            </class>
            <class name="MetricsServlet.ContextListener">
               <metrics coveredelements="20" coveredconditionals="4" complexity="11" coveredmethods="4" methods="7" elements="31" statements="16" conditionals="8" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="protected" signature="getRateUnit() : TimeUnit" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getDurationUnit() : TimeUnit" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getAllowedOrigin() : String" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getJsonpCallbackParameter() : String" num="68" count="2" type="method"/>
            <line num="69" count="2" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getMetricFilter() : MetricFilter" num="76" count="2" type="method"/>
            <line num="78" count="2" type="stmt"/>
            <line complexity="5" visibility="public" signature="contextInitialized(ServletContextEvent) : void" num="81" count="2" type="method"/>
            <line num="83" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="86" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="86" type="cond"/>
            <line num="87" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="89" type="cond"/>
            <line num="90" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="92" type="cond"/>
            <line num="93" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="contextDestroyed(ServletContextEvent) : void" num="100" count="2" type="method"/>
            <line complexity="1" visibility="public" signature="MetricsServlet()" num="122" count="7" type="method"/>
            <line complexity="1" visibility="public" signature="MetricsServlet(MetricRegistry)" num="125" count="3" type="method"/>
            <line num="126" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="init(ServletConfig) : void" num="129" count="10" type="method"/>
            <line num="131" count="10" type="stmt"/>
            <line num="133" count="10" type="stmt"/>
            <line num="134" count="10" type="stmt"/>
            <line falsecount="1" truecount="9" num="134" type="cond"/>
            <line num="135" count="9" type="stmt"/>
            <line num="136" count="9" type="stmt"/>
            <line falsecount="1" truecount="8" num="136" type="cond"/>
            <line num="137" count="8" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="142" count="9" type="stmt"/>
            <line num="143" count="9" type="stmt"/>
            <line num="145" count="9" type="stmt"/>
            <line complexity="2" visibility="protected" signature="setupMetricsModule(ServletContext) : void" num="148" count="9" type="method"/>
            <line num="149" count="9" type="stmt"/>
            <line num="151" count="9" type="stmt"/>
            <line num="153" count="9" type="stmt"/>
            <line num="154" count="9" type="stmt"/>
            <line num="155" count="9" type="stmt"/>
            <line falsecount="2" truecount="7" num="155" type="cond"/>
            <line num="156" count="7" type="stmt"/>
            <line num="159" count="9" type="stmt"/>
            <line complexity="6" visibility="protected" signature="doGet(HttpServletRequest,HttpServletResponse) : void" num="165" count="6" type="method"/>
            <line num="168" count="6" type="stmt"/>
            <line num="169" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="169" type="cond"/>
            <line num="170" count="6" type="stmt"/>
            <line num="172" count="6" type="stmt"/>
            <line num="173" count="6" type="stmt"/>
            <line num="175" count="6" type="stmt"/>
            <line num="175" count="6" type="stmt"/>
            <line num="176" count="6" type="stmt"/>
            <line falsecount="5" truecount="1" num="176" type="cond"/>
            <line num="177" count="1" type="stmt"/>
            <line num="179" count="5" type="stmt"/>
            <line complexity="2" visibility="protected" signature="getWriter(HttpServletRequest) : ObjectWriter" num="184" count="6" type="method"/>
            <line num="185" count="6" type="stmt"/>
            <line num="186" count="6" type="stmt"/>
            <line falsecount="4" truecount="2" num="186" type="cond"/>
            <line num="187" count="2" type="stmt"/>
            <line num="189" count="4" type="stmt"/>
            <line complexity="2" visibility="protected" signature="parseTimeUnit(String,TimeUnit) : TimeUnit" num="192" count="18" type="method"/>
            <line num="193" count="18" type="stmt"/>
            <line num="194" count="18" type="stmt"/>
            <line num="196" count="14" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-servlets/src/main/java/com/codahale/metrics/servlets/PingServlet.java" name="PingServlet.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="3" loc="30" coveredmethods="1" methods="1" elements="7" classes="1" ncloc="24" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="PingServlet">
               <metrics coveredelements="7" coveredconditionals="0" complexity="3" coveredmethods="1" methods="1" elements="7" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="3" visibility="protected" signature="doGet(HttpServletRequest,HttpServletResponse) : void" num="20" count="4" type="method"/>
            <line num="23" count="4" type="stmt"/>
            <line num="24" count="4" type="stmt"/>
            <line num="25" count="4" type="stmt"/>
            <line num="26" count="4" type="stmt"/>
            <line num="26" count="4" type="stmt"/>
            <line num="27" count="4" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-servlets/src/main/java/com/codahale/metrics/servlets/ThreadDumpServlet.java" name="ThreadDumpServlet.java">
            <metrics coveredelements="17" coveredconditionals="2" complexity="8" loc="55" coveredmethods="3" methods="3" elements="22" classes="1" ncloc="41" statements="15" conditionals="4" coveredstatements="12"/>
            <class name="ThreadDumpServlet">
               <metrics coveredelements="17" coveredconditionals="2" complexity="8" coveredmethods="3" methods="3" elements="22" statements="15" conditionals="4" coveredstatements="12"/>
            </class>
            <line complexity="2" visibility="public" signature="init() : void" num="24" count="5" type="method"/>
            <line num="26" count="5" type="stmt"/>
            <line num="28" count="5" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="4" visibility="protected" signature="doGet(HttpServletRequest,HttpServletResponse) : void" num="34" count="4" type="method"/>
            <line num="37" count="4" type="stmt"/>
            <line num="38" count="4" type="stmt"/>
            <line num="40" count="4" type="stmt"/>
            <line num="41" count="4" type="stmt"/>
            <line num="42" count="4" type="stmt"/>
            <line num="43" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="4" type="stmt"/>
            <line num="47" count="4" type="stmt"/>
            <line num="48" count="4" type="stmt"/>
            <line complexity="2" visibility="private" signature="getParam(String,boolean) : Boolean" num="52" count="8" type="method"/>
            <line num="53" count="8" type="stmt"/>
            <line falsecount="0" truecount="8" num="53" type="cond"/>
         </file>
      </package>
      <package name="com.codahale.metrics.benchmarks">
         <metrics coveredelements="0" complexity="19" loc="281" methods="18" classes="5" statements="37" coveredconditionals="0" coveredmethods="0" elements="55" ncloc="226" files="5" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-benchmarks/src/main/java/com/codahale/metrics/benchmarks/CachedGaugeBenchmark.java" name="CachedGaugeBenchmark.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="46" coveredmethods="0" methods="3" elements="10" classes="1" ncloc="39" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="CachedGaugeBenchmark">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="3" elements="10" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="protected" signature="loadValue() : Integer" num="19" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="perfGetValue(Blackhole) : void" num="30" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-benchmarks/src/main/java/com/codahale/metrics/benchmarks/CounterBenchmark.java" name="CounterBenchmark.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="38" coveredmethods="0" methods="2" elements="6" classes="1" ncloc="29" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="CounterBenchmark">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="perfIncrement() : Object" num="20" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="26" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-benchmarks/src/main/java/com/codahale/metrics/benchmarks/MeterBenchmark.java" name="MeterBenchmark.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="38" coveredmethods="0" methods="2" elements="6" classes="1" ncloc="29" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="MeterBenchmark">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="perfMark() : Object" num="20" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="26" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-benchmarks/src/main/java/com/codahale/metrics/benchmarks/ReservoirBenchmark.java" name="ReservoirBenchmark.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="79" coveredmethods="0" methods="6" elements="18" classes="1" ncloc="65" statements="12" conditionals="0" coveredstatements="0"/>
            <class name="ReservoirBenchmark">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="18" statements="12" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="perfUniformReservoir() : Object" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="perfSlidingTimeWindowArrayReservoir() : Object" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="perfExponentiallyDecayingReservoir() : Object" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="perfSlidingWindowReservoir() : Object" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="perfSlidingTimeWindowReservoir() : Object" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-benchmarks/src/main/java/com/codahale/metrics/benchmarks/SlidingTimeWindowReservoirsBenchmark.java" name="SlidingTimeWindowReservoirsBenchmark.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="80" coveredmethods="0" methods="5" elements="15" classes="1" ncloc="64" statements="10" conditionals="0" coveredstatements="0"/>
            <class name="SlidingTimeWindowReservoirsBenchmark">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="15" statements="10" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="slidingTimeAddMeasurement() : Object" num="33" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="slidingTimeRead() : Object" num="41" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="arrTimeAddMeasurement() : Object" num="49" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="arrTimeRead() : Object" num="57" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics.httpasyncclient">
         <metrics coveredelements="26" complexity="19" loc="164" methods="15" classes="3" statements="38" coveredconditionals="1" coveredmethods="8" elements="59" ncloc="133" files="2" conditionals="6" coveredstatements="17"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-httpasyncclient/src/main/java/com/codahale/metrics/httpasyncclient/InstrumentedNClientConnManager.java" name="InstrumentedNClientConnManager.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="45" coveredmethods="0" methods="1" elements="10" classes="1" ncloc="35" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="InstrumentedNClientConnManager">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="10" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="InstrumentedNClientConnManager(ConnectingIOReactor,NHttpConnectionFactory&lt;ManagedNHttpClientConnection&gt;,SchemePortResolver,MetricRegistry,Registry&lt;SchemeIOSessionStrategy&gt;,long,TimeUnit,DnsResolver,String)" num="21" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-httpasyncclient/src/main/java/com/codahale/metrics/httpasyncclient/InstrumentedNHttpClientBuilder.java" name="InstrumentedNHttpClientBuilder.java">
            <metrics coveredelements="26" coveredconditionals="1" complexity="18" loc="119" coveredmethods="8" methods="14" elements="49" classes="2" ncloc="98" statements="29" conditionals="6" coveredstatements="17"/>
            <class name="InstrumentedNHttpClientBuilder">
               <metrics coveredelements="19" coveredconditionals="0" complexity="11" coveredmethods="6" methods="10" elements="28" statements="18" conditionals="0" coveredstatements="13"/>
            </class>
            <class name="InstrumentedNHttpClientBuilder.TimingFutureCallback">
               <metrics coveredelements="7" coveredconditionals="1" complexity="7" coveredmethods="2" methods="4" elements="21" statements="11" conditionals="6" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="InstrumentedNHttpClientBuilder(MetricRegistry,HttpClientMetricNameStrategy,String)" num="27" count="1" type="method"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="InstrumentedNHttpClientBuilder(MetricRegistry)" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="InstrumentedNHttpClientBuilder(MetricRegistry,HttpClientMetricNameStrategy)" num="38" count="1" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="InstrumentedNHttpClientBuilder(MetricRegistry,String)" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="timer(HttpRequest) : Timer" num="46" count="1" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : CloseableHttpAsyncClient" num="50" count="1" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isRunning() : boolean" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="start() : void" num="60" count="1" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="execute(HttpAsyncRequestProducer,HttpAsyncResponseConsumer&lt;T&gt;,HttpContext,FutureCallback&lt;T&gt;) : Future&lt;T&gt;" num="65" count="1" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="close() : void" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="TimingFutureCallback(FutureCallback&lt;T&gt;,Timer.Context)" num="88" count="1" type="method"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="completed(T) : void" num="94" count="1" type="method"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="failed(Exception) : void" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="cancelled() : void" num="110" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="114" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics.jdbi">
         <metrics coveredelements="8" complexity="4" loc="39" methods="4" classes="1" statements="6" coveredconditionals="0" coveredmethods="3" elements="10" ncloc="28" files="1" conditionals="0" coveredstatements="5"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jdbi/src/main/java/com/codahale/metrics/jdbi/InstrumentedTimingCollector.java" name="InstrumentedTimingCollector.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="4" loc="39" coveredmethods="3" methods="4" elements="10" classes="1" ncloc="28" statements="6" conditionals="0" coveredstatements="5"/>
            <class name="InstrumentedTimingCollector">
               <metrics coveredelements="8" coveredconditionals="0" complexity="4" coveredmethods="3" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="InstrumentedTimingCollector(MetricRegistry)" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="InstrumentedTimingCollector(MetricRegistry,StatementNameStrategy)" num="24" count="11" type="method"/>
            <line num="26" count="11" type="stmt"/>
            <line num="27" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="collect(long,StatementContext) : void" num="30" count="11" type="method"/>
            <line num="32" count="11" type="stmt"/>
            <line num="33" count="11" type="stmt"/>
            <line complexity="1" visibility="private" signature="getTimer(StatementContext) : Timer" num="36" count="11" type="method"/>
            <line num="37" count="11" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics.jdbi.strategies">
         <metrics coveredelements="126" complexity="48" loc="377" methods="24" classes="16" statements="92" coveredconditionals="27" coveredmethods="20" elements="150" ncloc="259" files="8" conditionals="34" coveredstatements="79"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jdbi/src/main/java/com/codahale/metrics/jdbi/strategies/BasicSqlNameStrategy.java" name="BasicSqlNameStrategy.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="8" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="7" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="BasicSqlNameStrategy">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="BasicSqlNameStrategy()" num="4" count="0" type="method"/>
            <line num="5" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jdbi/src/main/java/com/codahale/metrics/jdbi/strategies/ContextNameStrategy.java" name="ContextNameStrategy.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="15" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="ContextNameStrategy">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ContextNameStrategy()" num="9" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jdbi/src/main/java/com/codahale/metrics/jdbi/strategies/DelegatingStatementNameStrategy.java" name="DelegatingStatementNameStrategy.java">
            <metrics coveredelements="11" coveredconditionals="2" complexity="4" loc="31" coveredmethods="3" methods="3" elements="12" classes="1" ncloc="24" statements="7" conditionals="2" coveredstatements="6"/>
            <class name="DelegatingStatementNameStrategy">
               <metrics coveredelements="11" coveredconditionals="2" complexity="4" coveredmethods="3" methods="3" elements="12" statements="7" conditionals="2" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="protected" signature="DelegatingStatementNameStrategy(StatementNameStrategy)" num="12" count="11" type="method"/>
            <line num="13" count="11" type="stmt"/>
            <line complexity="1" visibility="protected" signature="registerStrategies(StatementNameStrategy) : void" num="16" count="13" type="method"/>
            <line num="17" count="13" type="stmt"/>
            <line complexity="2" visibility="public" signature="getStatementName(StatementContext) : String" num="20" count="22" type="method"/>
            <line num="22" count="22" type="stmt"/>
            <line num="23" count="72" type="stmt"/>
            <line num="24" count="72" type="stmt"/>
            <line falsecount="50" truecount="22" num="24" type="cond"/>
            <line num="25" count="22" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jdbi/src/main/java/com/codahale/metrics/jdbi/strategies/NaiveNameStrategy.java" name="NaiveNameStrategy.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="12" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="8" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="NaiveNameStrategy">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="NaiveNameStrategy()" num="7" count="0" type="method"/>
            <line num="8" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jdbi/src/main/java/com/codahale/metrics/jdbi/strategies/NameStrategies.java" name="NameStrategies.java">
            <metrics coveredelements="78" coveredconditionals="18" complexity="27" loc="194" coveredmethods="13" methods="14" elements="85" classes="7" ncloc="131" statements="51" conditionals="20" coveredstatements="47"/>
            <class name="NameStrategies">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="NameStrategies.CheckEmptyStrategy">
               <metrics coveredelements="8" coveredconditionals="2" complexity="4" coveredmethods="2" methods="2" elements="8" statements="4" conditionals="2" coveredstatements="4"/>
            </class>
            <class name="NameStrategies.CheckRawStrategy">
               <metrics coveredelements="8" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="8" statements="4" conditionals="2" coveredstatements="4"/>
            </class>
            <class name="NameStrategies.NaiveNameStrategy">
               <metrics coveredelements="7" coveredconditionals="1" complexity="3" coveredmethods="2" methods="2" elements="11" statements="7" conditionals="2" coveredstatements="4"/>
            </class>
            <class name="NameStrategies.SqlObjectStrategy">
               <metrics coveredelements="15" coveredconditionals="4" complexity="4" coveredmethods="2" methods="2" elements="15" statements="9" conditionals="4" coveredstatements="9"/>
            </class>
            <class name="NameStrategies.ContextClassStrategy">
               <metrics coveredelements="14" coveredconditionals="3" complexity="5" coveredmethods="2" methods="2" elements="16" statements="10" conditionals="4" coveredstatements="9"/>
            </class>
            <class name="NameStrategies.ContextNameStrategy">
               <metrics coveredelements="24" coveredconditionals="6" complexity="6" coveredmethods="2" methods="2" elements="24" statements="16" conditionals="6" coveredstatements="16"/>
            </class>
            <line complexity="1" visibility="private" signature="forRawSql(String) : String" num="50" count="4" type="method"/>
            <line num="51" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="CheckEmptyStrategy()" num="55" count="1" type="method"/>
            <line complexity="3" visibility="public" signature="getStatementName(StatementContext) : String" num="58" count="22" type="method"/>
            <line num="60" count="22" type="stmt"/>
            <line num="62" count="22" type="stmt"/>
            <line falsecount="20" truecount="2" num="62" type="cond"/>
            <line num="63" count="2" type="stmt"/>
            <line num="65" count="20" type="stmt"/>
            <line complexity="1" visibility="private" signature="CheckRawStrategy()" num="70" count="1" type="method"/>
            <line complexity="2" visibility="public" signature="getStatementName(StatementContext) : String" num="73" count="4" type="method"/>
            <line num="75" count="4" type="stmt"/>
            <line num="77" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="77" type="cond"/>
            <line num="78" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="NaiveNameStrategy()" num="85" count="1" type="method"/>
            <line complexity="2" visibility="public" signature="getStatementName(StatementContext) : String" num="88" count="2" type="method"/>
            <line num="90" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="95" type="cond"/>
            <line num="97" count="2" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="SqlObjectStrategy()" num="107" count="1" type="method"/>
            <line complexity="3" visibility="public" signature="getStatementName(StatementContext) : String" num="110" count="8" type="method"/>
            <line num="112" count="8" type="stmt"/>
            <line num="113" count="8" type="stmt"/>
            <line num="114" count="8" type="stmt"/>
            <line falsecount="4" truecount="4" num="114" type="cond"/>
            <line num="115" count="4" type="stmt"/>
            <line num="117" count="4" type="stmt"/>
            <line num="118" count="4" type="stmt"/>
            <line num="119" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="119" type="cond"/>
            <line num="120" count="4" type="stmt"/>
            <line num="122" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="ContextClassStrategy()" num="127" count="1" type="method"/>
            <line complexity="4" visibility="public" signature="getStatementName(StatementContext) : String" num="130" count="16" type="method"/>
            <line num="132" count="16" type="stmt"/>
            <line num="133" count="16" type="stmt"/>
            <line num="135" count="16" type="stmt"/>
            <line falsecount="2" truecount="14" num="135" type="cond"/>
            <line num="136" count="14" type="stmt"/>
            <line num="139" count="2" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line num="142" count="2" type="stmt"/>
            <line num="143" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="143" type="cond"/>
            <line num="144" count="0" type="stmt"/>
            <line num="147" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="ContextNameStrategy()" num="159" count="1" type="method"/>
            <line complexity="5" visibility="public" signature="getStatementName(StatementContext) : String" num="162" count="14" type="method"/>
            <line num="164" count="14" type="stmt"/>
            <line num="165" count="14" type="stmt"/>
            <line num="166" count="14" type="stmt"/>
            <line num="168" count="14" type="stmt"/>
            <line falsecount="6" truecount="8" num="168" type="cond"/>
            <line num="169" count="8" type="stmt"/>
            <line num="172" count="6" type="stmt"/>
            <line num="173" count="6" type="stmt"/>
            <line num="175" count="6" type="stmt"/>
            <line falsecount="2" truecount="4" num="175" type="cond"/>
            <line num="176" count="4" type="stmt"/>
            <line num="177" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="177" type="cond"/>
            <line num="178" count="2" type="stmt"/>
            <line num="179" count="2" type="stmt"/>
            <line num="180" count="2" type="stmt"/>
            <line num="183" count="2" type="stmt"/>
            <line num="185" count="2" type="stmt"/>
            <line num="187" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="NameStrategies()" num="192" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jdbi/src/main/java/com/codahale/metrics/jdbi/strategies/ShortNameStrategy.java" name="ShortNameStrategy.java">
            <metrics coveredelements="35" coveredconditionals="7" complexity="13" loc="87" coveredmethods="3" methods="3" elements="45" classes="3" ncloc="64" statements="30" conditionals="12" coveredstatements="25"/>
            <class name="ShortNameStrategy">
               <metrics coveredelements="3" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="ShortNameStrategy.ShortContextClassStrategy">
               <metrics coveredelements="17" coveredconditionals="4" complexity="6" coveredmethods="1" methods="1" elements="21" statements="14" conditionals="6" coveredstatements="12"/>
            </class>
            <class name="ShortNameStrategy.ShortSqlObjectStrategy">
               <metrics coveredelements="15" coveredconditionals="3" complexity="6" coveredmethods="1" methods="1" elements="21" statements="14" conditionals="6" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="ShortNameStrategy(String)" num="20" count="2" type="method"/>
            <line num="21" count="2" type="stmt"/>
            <line num="25" count="2" type="stmt"/>
            <line complexity="6" visibility="public" signature="getStatementName(StatementContext) : String" num="33" count="4" type="method"/>
            <line num="35" count="4" type="stmt"/>
            <line num="36" count="4" type="stmt"/>
            <line num="38" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="38" type="cond"/>
            <line num="39" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="45" count="2" type="stmt"/>
            <line num="46" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="46" type="cond"/>
            <line num="47" count="0" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="53" type="cond"/>
            <line num="54" count="2" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getStatementName(StatementContext) : String" num="62" count="2" type="method"/>
            <line num="64" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="66" type="cond"/>
            <line num="67" count="2" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line num="71" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="78" type="cond"/>
            <line num="79" count="2" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jdbi/src/main/java/com/codahale/metrics/jdbi/strategies/SmartNameStrategy.java" name="SmartNameStrategy.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="20" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="SmartNameStrategy">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="SmartNameStrategy()" num="12" count="9" type="method"/>
            <line num="13" count="9" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jdbi/src/main/java/com/codahale/metrics/jdbi/strategies/StatementNameStrategy.java" name="StatementNameStrategy.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="10" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="StatementNameStrategy">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="com.codahale.metrics.jdbi3">
         <metrics coveredelements="21" complexity="10" loc="89" methods="8" classes="2" statements="15" coveredconditionals="2" coveredmethods="6" elements="27" ncloc="64" files="2" conditionals="4" coveredstatements="13"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jdbi3/src/main/java/com/codahale/metrics/jdbi3/InstrumentedSqlLogger.java" name="InstrumentedSqlLogger.java">
            <metrics coveredelements="13" coveredconditionals="1" complexity="6" loc="48" coveredmethods="4" methods="5" elements="16" classes="1" ncloc="36" statements="9" conditionals="2" coveredstatements="8"/>
            <class name="InstrumentedSqlLogger">
               <metrics coveredelements="13" coveredconditionals="1" complexity="6" coveredmethods="4" methods="5" elements="16" statements="9" conditionals="2" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="InstrumentedSqlLogger(MetricRegistry)" num="21" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="InstrumentedSqlLogger(MetricRegistry,StatementNameStrategy)" num="25" count="2" type="method"/>
            <line num="27" count="2" type="stmt"/>
            <line num="28" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="logAfterExecution(StatementContext) : void" num="31" count="1" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="logException(StatementContext,SQLException) : void" num="36" count="1" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="log(StatementContext) : void" num="41" count="2" type="method"/>
            <line num="42" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="43" type="cond"/>
            <line num="44" count="2" type="stmt"/>
            <line num="45" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jdbi3/src/main/java/com/codahale/metrics/jdbi3/InstrumentedTimingCollector.java" name="InstrumentedTimingCollector.java">
            <metrics coveredelements="8" coveredconditionals="1" complexity="4" loc="41" coveredmethods="2" methods="3" elements="11" classes="1" ncloc="28" statements="6" conditionals="2" coveredstatements="5"/>
            <class name="InstrumentedTimingCollector">
               <metrics coveredelements="8" coveredconditionals="1" complexity="4" coveredmethods="2" methods="3" elements="11" statements="6" conditionals="2" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="InstrumentedTimingCollector(MetricRegistry)" num="24" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="InstrumentedTimingCollector(MetricRegistry,StatementNameStrategy)" num="28" count="4" type="method"/>
            <line num="30" count="4" type="stmt"/>
            <line num="31" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="collect(long,StatementContext) : void" num="34" count="4" type="method"/>
            <line num="36" count="4" type="stmt"/>
            <line num="37" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="37" type="cond"/>
            <line num="38" count="4" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics.jdbi3.strategies">
         <metrics coveredelements="60" complexity="22" loc="187" methods="10" classes="7" statements="32" coveredconditionals="19" coveredmethods="10" elements="62" ncloc="118" files="7" conditionals="20" coveredstatements="31"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jdbi3/src/main/java/com/codahale/metrics/jdbi3/strategies/BasicSqlNameStrategy.java" name="BasicSqlNameStrategy.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="12" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="7" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="BasicSqlNameStrategy">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="BasicSqlNameStrategy()" num="8" count="1" type="method"/>
            <line num="9" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jdbi3/src/main/java/com/codahale/metrics/jdbi3/strategies/DefaultNameStrategy.java" name="DefaultNameStrategy.java">
            <metrics coveredelements="16" coveredconditionals="4" complexity="7" loc="59" coveredmethods="4" methods="4" elements="16" classes="1" ncloc="35" statements="8" conditionals="4" coveredstatements="8"/>
            <class name="DefaultNameStrategy">
               <metrics coveredelements="16" coveredconditionals="4" complexity="7" coveredmethods="4" methods="4" elements="16" statements="8" conditionals="4" coveredstatements="8"/>
            </class>
            <line complexity="3" visibility="public" signature="getStatementName(StatementContext) : String" num="16" count="10" type="method"/>
            <line num="18" count="10" type="stmt"/>
            <line num="19" count="10" type="stmt"/>
            <line falsecount="8" truecount="2" num="19" type="cond"/>
            <line complexity="2" visibility="public" signature="getStatementName(StatementContext) : String" num="29" count="7" type="method"/>
            <line num="31" count="7" type="stmt"/>
            <line num="32" count="7" type="stmt"/>
            <line falsecount="2" truecount="5" num="32" type="cond"/>
            <line num="33" count="5" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStatementName(StatementContext) : String" num="43" count="1" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStatementName(StatementContext) : String" num="53" count="2" type="method"/>
            <line num="55" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jdbi3/src/main/java/com/codahale/metrics/jdbi3/strategies/DelegatingStatementNameStrategy.java" name="DelegatingStatementNameStrategy.java">
            <metrics coveredelements="9" coveredconditionals="2" complexity="3" loc="32" coveredmethods="2" methods="2" elements="10" classes="1" ncloc="21" statements="6" conditionals="2" coveredstatements="5"/>
            <class name="DelegatingStatementNameStrategy">
               <metrics coveredelements="9" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="10" statements="6" conditionals="2" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="protected" signature="DelegatingStatementNameStrategy(StatementNameStrategy)" num="17" count="6" type="method"/>
            <line num="18" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="getStatementName(StatementContext) : String" num="21" count="10" type="method"/>
            <line num="23" count="10" type="stmt"/>
            <line num="24" count="20" type="stmt"/>
            <line num="25" count="20" type="stmt"/>
            <line falsecount="10" truecount="10" num="25" type="cond"/>
            <line num="26" count="10" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jdbi3/src/main/java/com/codahale/metrics/jdbi3/strategies/NaiveNameStrategy.java" name="NaiveNameStrategy.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="12" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="7" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="NaiveNameStrategy">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="NaiveNameStrategy()" num="8" count="1" type="method"/>
            <line num="9" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jdbi3/src/main/java/com/codahale/metrics/jdbi3/strategies/SmartNameStrategy.java" name="SmartNameStrategy.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="13" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="8" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="SmartNameStrategy">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="SmartNameStrategy()" num="8" count="4" type="method"/>
            <line num="9" count="4" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jdbi3/src/main/java/com/codahale/metrics/jdbi3/strategies/StatementNameStrategy.java" name="StatementNameStrategy.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="12" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="StatementNameStrategy">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jdbi3/src/main/java/com/codahale/metrics/jdbi3/strategies/TimedAnnotationNameStrategy.java" name="TimedAnnotationNameStrategy.java">
            <metrics coveredelements="29" coveredconditionals="13" complexity="9" loc="47" coveredmethods="1" methods="1" elements="30" classes="1" ncloc="34" statements="15" conditionals="14" coveredstatements="15"/>
            <class name="TimedAnnotationNameStrategy">
               <metrics coveredelements="29" coveredconditionals="13" complexity="9" coveredmethods="1" methods="1" elements="30" statements="15" conditionals="14" coveredstatements="15"/>
            </class>
            <line complexity="9" visibility="public" signature="getStatementName(StatementContext) : String" num="15" count="7" type="method"/>
            <line num="17" count="7" type="stmt"/>
            <line num="18" count="7" type="stmt"/>
            <line falsecount="6" truecount="1" num="18" type="cond"/>
            <line num="19" count="1" type="stmt"/>
            <line num="22" count="6" type="stmt"/>
            <line num="23" count="6" type="stmt"/>
            <line num="24" count="6" type="stmt"/>
            <line num="25" count="6" type="stmt"/>
            <line num="28" count="6" type="stmt"/>
            <line falsecount="2" truecount="4" num="28" type="cond"/>
            <line num="29" count="4" type="stmt"/>
            <line falsecount="3" truecount="1" num="29" type="cond"/>
            <line num="30" count="4" type="stmt"/>
            <line falsecount="3" truecount="1" num="30" type="cond"/>
            <line num="31" count="1" type="stmt"/>
            <line num="34" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="34" type="cond"/>
            <line num="38" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="38" type="cond"/>
            <line num="40" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="40" type="cond"/>
            <line num="44" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics.ehcache">
         <metrics coveredelements="38" complexity="9" loc="256" methods="9" classes="2" statements="48" coveredconditionals="0" coveredmethods="5" elements="57" ncloc="122" files="2" conditionals="0" coveredstatements="33"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-ehcache/src/main/java/com/codahale/metrics/ehcache/InstrumentedCacheDecoratorFactory.java" name="InstrumentedCacheDecoratorFactory.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="24" coveredmethods="1" methods="2" elements="8" classes="1" ncloc="20" statements="6" conditionals="0" coveredstatements="3"/>
            <class name="InstrumentedCacheDecoratorFactory">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="8" statements="6" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="createDecoratedEhcache(Ehcache,Properties) : Ehcache" num="11" count="1" type="method"/>
            <line num="13" count="1" type="stmt"/>
            <line num="14" count="1" type="stmt"/>
            <line num="15" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="createDefaultDecoratedEhcache(Ehcache,Properties) : Ehcache" num="18" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line num="21" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-ehcache/src/main/java/com/codahale/metrics/ehcache/InstrumentedEhcache.java" name="InstrumentedEhcache.java">
            <metrics coveredelements="34" coveredconditionals="0" complexity="7" loc="232" coveredmethods="4" methods="7" elements="49" classes="1" ncloc="102" statements="42" conditionals="0" coveredstatements="30"/>
            <class name="InstrumentedEhcache">
               <metrics coveredelements="34" coveredconditionals="0" complexity="7" coveredmethods="4" methods="7" elements="49" statements="42" conditionals="0" coveredstatements="30"/>
            </class>
            <line complexity="1" visibility="public" signature="instrument(MetricRegistry,Ehcache) : Ehcache" num="118" count="2" type="method"/>
            <line num="120" count="2" type="stmt"/>
            <line num="121" count="2" type="stmt"/>
            <line num="124" count="2" type="stmt"/>
            <line num="127" count="2" type="stmt"/>
            <line num="130" count="2" type="stmt"/>
            <line num="133" count="2" type="stmt"/>
            <line num="136" count="2" type="stmt"/>
            <line num="139" count="2" type="stmt"/>
            <line num="142" count="2" type="stmt"/>
            <line num="145" count="2" type="stmt"/>
            <line num="148" count="2" type="stmt"/>
            <line num="151" count="2" type="stmt"/>
            <line num="154" count="2" type="stmt"/>
            <line num="157" count="2" type="stmt"/>
            <line num="160" count="2" type="stmt"/>
            <line num="163" count="2" type="stmt"/>
            <line num="166" count="2" type="stmt"/>
            <line num="169" count="2" type="stmt"/>
            <line num="172" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="InstrumentedEhcache(MetricRegistry,Ehcache)" num="177" count="2" type="method"/>
            <line num="178" count="2" type="stmt"/>
            <line num="179" count="2" type="stmt"/>
            <line num="180" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(Object) : Element" num="183" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(Serializable) : Element" num="193" count="2" type="method"/>
            <line num="195" count="2" type="stmt"/>
            <line num="196" count="2" type="stmt"/>
            <line num="197" count="2" type="stmt"/>
            <line num="199" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="put(Element) : void" num="203" count="2" type="method"/>
            <line num="205" count="2" type="stmt"/>
            <line num="206" count="2" type="stmt"/>
            <line num="207" count="2" type="stmt"/>
            <line num="209" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="put(Element,boolean) : void" num="213" count="0" type="method"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="putIfAbsent(Element) : Element" num="223" count="0" type="method"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics.jcache">
         <metrics coveredelements="26" complexity="6" loc="85" methods="4" classes="1" statements="22" coveredconditionals="2" coveredmethods="4" elements="28" ncloc="61" files="1" conditionals="2" coveredstatements="20"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jcache/src/main/java/com/codahale/metrics/jcache/JCacheGaugeSet.java" name="JCacheGaugeSet.java">
            <metrics coveredelements="26" coveredconditionals="2" complexity="6" loc="85" coveredmethods="4" methods="4" elements="28" classes="1" ncloc="61" statements="22" conditionals="2" coveredstatements="20"/>
            <class name="JCacheGaugeSet">
               <metrics coveredelements="26" coveredconditionals="2" complexity="6" coveredmethods="4" methods="4" elements="28" statements="22" conditionals="2" coveredstatements="20"/>
            </class>
            <line complexity="1" visibility="public" signature="getMetrics() : Map&lt;String, Metric&gt;" num="39" count="1" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line num="48" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="51" count="22" type="stmt"/>
            <line num="52" count="22" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="getCacheBeans() : Set&lt;ObjectInstance&gt;" num="59" count="1" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="retrieveStatsNames() : List&lt;String&gt;" num="68" count="1" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="12" type="stmt"/>
            <line num="74" count="12" type="stmt"/>
            <line falsecount="1" truecount="11" num="74" type="cond"/>
            <line num="75" count="11" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="toSpinalCase(String) : String" num="81" count="22" type="method"/>
            <line num="82" count="22" type="stmt"/>
         </file>
      </package>
   </project>
   <testproject name="Metrics Parent 4.1.11-SNAPSHOT (Aggregated)" timestamp="1594127879351">
      <metrics coveredelements="4941" complexity="1048" loc="14063" methods="915" classes="149" statements="4117" packages="27" coveredconditionals="126" coveredmethods="870" elements="5176" ncloc="11034" files="125" conditionals="144" coveredstatements="3945"/>
      <package name="com.codahale.metrics.jvm">
         <metrics coveredelements="343" complexity="112" loc="1156" methods="102" classes="16" statements="263" coveredconditionals="10" coveredmethods="88" elements="379" ncloc="913" files="12" conditionals="14" coveredstatements="245"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jvm/src/test/java/com/codahale/metrics/jvm/BufferPoolMetricSetTest.java" name="BufferPoolMetricSetTest.java">
            <metrics coveredelements="32" coveredconditionals="0" complexity="9" loc="110" coveredmethods="9" methods="9" elements="32" classes="1" ncloc="82" statements="23" conditionals="0" coveredstatements="23"/>
            <class name="BufferPoolMetricSetTest">
               <metrics coveredelements="32" complexity="9" methods="9" testruns="8" statements="23" coveredconditionals="0" coveredmethods="9" elements="32" testfailures="0" testduration="0.006" conditionals="0" coveredstatements="23" testpasses="8"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="23" count="8" type="method"/>
            <line num="25" count="8" type="stmt"/>
            <line num="26" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="includesGaugesForDirectAndMappedPools() : void" num="30" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ignoresGaugesForObjectsWhichCannotBeFound() : void" num="41" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="includesAGaugeForDirectCount() : void" num="51" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="includesAGaugeForDirectMemoryUsed() : void" num="61" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="includesAGaugeForDirectCapacity() : void" num="71" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="includesAGaugeForMappedCount() : void" num="81" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="83" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="includesAGaugeForMappedMemoryUsed() : void" num="91" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="93" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="includesAGaugeForMappedCapacity() : void" num="101" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="103" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jvm/src/test/java/com/codahale/metrics/jvm/ClassLoadingGaugeSetTest.java" name="ClassLoadingGaugeSetTest.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="3" loc="37" coveredmethods="3" methods="3" elements="9" classes="1" ncloc="28" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="ClassLoadingGaugeSetTest">
               <metrics coveredelements="9" complexity="3" methods="3" testruns="2" statements="6" coveredconditionals="0" coveredmethods="3" elements="9" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="6" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="19" count="2" type="method"/>
            <line num="21" count="2" type="stmt"/>
            <line num="22" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="loadedGauge() : void" num="25" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="unLoadedGauge() : void" num="31" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jvm/src/test/java/com/codahale/metrics/jvm/CpuTimeClockTest.java" name="CpuTimeClockTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="1" loc="24" coveredmethods="1" methods="1" elements="4" classes="1" ncloc="16" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="CpuTimeClockTest">
               <metrics coveredelements="4" complexity="1" methods="1" testruns="1" statements="3" coveredconditionals="0" coveredmethods="1" elements="4" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="cpuTimeClock() : void" num="12" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="14" count="1" type="stmt"/>
            <line num="16" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jvm/src/test/java/com/codahale/metrics/jvm/FileDescriptorRatioGaugeSunManagementNotExistsTest.java" name="FileDescriptorRatioGaugeSunManagementNotExistsTest.java">
            <metrics coveredelements="51" coveredconditionals="10" complexity="20" loc="117" coveredmethods="11" methods="11" elements="59" classes="3" ncloc="100" statements="34" conditionals="14" coveredstatements="30"/>
            <class name="FileDescriptorRatioGaugeSunManagementNotExistsTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="FileDescriptorRatioGaugeSunManagementNotExistsTest.SunManagementNotExistsTestRunner">
               <metrics coveredelements="5" coveredconditionals="0" complexity="3" coveredmethods="2" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="FileDescriptorRatioGaugeSunManagementNotExistsTest.SunManagementNotExistsClassLoader">
               <metrics coveredelements="44" coveredconditionals="10" complexity="16" coveredmethods="8" methods="8" elements="51" statements="29" conditionals="14" coveredstatements="26"/>
            </class>
            <line complexity="1" visibility="public" signature="validateFileDescriptorRatioWhenSunManagementNotExists() : void" num="25" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="27" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="SunManagementNotExistsTestRunner(Class&lt;?&gt;)" num="32" count="1" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="getFromSunManagementNotExistsClassLoader(Class&lt;?&gt;) : Class&lt;?&gt;" num="36" count="1" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 50()" num="50" count="1" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : String" num="52" count="1" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="getClasspathEntryUrls(String) : URL[]" num="60" count="1" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="14" type="stmt"/>
            <line num="64" count="14" type="stmt"/>
            <line falsecount="0" truecount="14" num="64" type="cond"/>
            <line num="65" count="14" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="4" visibility="private" signature="getClasspathEntryUrl(String) : URL" num="71" count="14" type="method"/>
            <line num="72" count="14" type="stmt"/>
            <line num="73" count="14" type="stmt"/>
            <line falsecount="3" truecount="11" num="73" type="cond"/>
            <line num="74" count="11" type="stmt"/>
            <line num="76" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="76" type="cond"/>
            <line num="77" count="3" type="stmt"/>
            <line num="79" count="3" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SunManagementNotExistsClassLoader(ClassLoader)" num="86" count="1" type="method"/>
            <line num="87" count="1" type="stmt"/>
            <line complexity="4" visibility="protected" signature="loadClass(String,boolean) : Class&lt;?&gt;" num="90" count="27" type="method"/>
            <line num="92" count="27" type="stmt"/>
            <line falsecount="27" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="27" type="stmt"/>
            <line falsecount="26" truecount="1" num="95" type="cond"/>
            <line num="96" count="1" type="stmt"/>
            <line num="98" count="26" type="stmt"/>
            <line falsecount="21" truecount="5" num="98" type="cond"/>
            <line num="99" count="5" type="stmt"/>
            <line num="101" count="21" type="stmt"/>
            <line complexity="2" visibility="private" signature="loadMetricsClasses(String) : Class&lt;?&gt;" num="104" count="5" type="method"/>
            <line num="105" count="5" type="stmt"/>
            <line num="106" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="5" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getPermissions(CodeSource) : PermissionCollection" num="112" count="2" type="method"/>
            <line num="114" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jvm/src/test/java/com/codahale/metrics/jvm/FileDescriptorRatioGaugeTest.java" name="FileDescriptorRatioGaugeTest.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="19" loc="122" coveredmethods="5" methods="19" elements="40" classes="1" ncloc="97" statements="21" conditionals="0" coveredstatements="7"/>
            <class name="FileDescriptorRatioGaugeTest">
               <metrics coveredelements="12" complexity="19" methods="19" testruns="3" statements="21" coveredconditionals="0" coveredmethods="5" elements="40" testfailures="0" testduration="0.398" conditionals="0" coveredstatements="7" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="getName() : String" num="17" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getArch() : String" num="22" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVersion() : String" num="27" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAvailableProcessors() : int" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSystemLoadAverage() : double" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOpenFileDescriptorCount() : long" num="42" count="1" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxFileDescriptorCount() : long" num="47" count="1" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCommittedVirtualMemorySize() : long" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTotalSwapSpaceSize() : long" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFreeSwapSpaceSize() : long" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProcessCpuTime() : long" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFreePhysicalMemorySize() : long" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTotalPhysicalMemorySize() : long" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSystemCpuLoad() : double" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProcessCpuLoad() : double" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getObjectName() : ObjectName" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="calculatesTheRatioOfUsedToTotalFileDescriptors() : void" num="101" testsuccess="true" count="1" testduration="0.063" type="method"/>
            <line num="103" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="validateFileDescriptorRatioPresenceOnNixPlatforms() : void" num="107" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnsNaNWhenTheInformationIsUnavailable() : void" num="117" testsuccess="true" count="1" testduration="0.333" type="method"/>
            <line num="119" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jvm/src/test/java/com/codahale/metrics/jvm/GarbageCollectorMetricSetTest.java" name="GarbageCollectorMetricSetTest.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="5" loc="51" coveredmethods="5" methods="5" elements="14" classes="1" ncloc="42" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="GarbageCollectorMetricSetTest">
               <metrics coveredelements="14" complexity="5" methods="5" testruns="4" statements="9" coveredconditionals="0" coveredmethods="5" elements="14" testfailures="0" testduration="0.024" conditionals="0" coveredstatements="9" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="19" count="4" type="method"/>
            <line num="21" count="4" type="stmt"/>
            <line num="22" count="4" type="stmt"/>
            <line num="23" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasGaugesForGcCountsAndElapsedTimes() : void" num="26" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="28" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAGaugeForGcCounts() : void" num="32" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAGaugeForGcTimes() : void" num="39" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="autoDiscoversGCs() : void" num="46" testsuccess="true" count="1" testduration="0.021" type="method"/>
            <line num="48" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jvm/src/test/java/com/codahale/metrics/jvm/JmxAttributeGaugeTest.java" name="JmxAttributeGaugeTest.java">
            <metrics coveredelements="34" coveredconditionals="0" complexity="10" loc="99" coveredmethods="9" methods="9" elements="34" classes="3" ncloc="75" statements="25" conditionals="0" coveredstatements="25"/>
            <class name="JmxAttributeGaugeTest">
               <metrics coveredelements="32" complexity="9" methods="8" testruns="5" statements="24" coveredconditionals="0" coveredmethods="8" elements="32" testfailures="0" testduration="0.007" conditionals="0" coveredstatements="24" testpasses="5"/>
            </class>
            <class name="JmxAttributeGaugeTest.JmxTestMBean">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="JmxAttributeGaugeTest.JmxTest">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="getValue() : Long" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="setUp() : void" num="35" count="1" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="tearDown() : void" num="41" count="1" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line num="45" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnsJmxAttribute() : void" num="52" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnsNullIfAttributeDoesNotExist() : void" num="61" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnsNullIfMBeanNotFound() : void" num="69" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnsAttributeForObjectNamePattern() : void" num="77" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnsNullIfObjectNamePatternAmbiguous() : void" num="86" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="registerMBean(ObjectName) : void" num="94" count="2" type="method"/>
            <line num="95" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jvm/src/test/java/com/codahale/metrics/jvm/JvmAttributeGaugeSetTest.java" name="JvmAttributeGaugeSetTest.java">
            <metrics coveredelements="21" coveredconditionals="0" complexity="6" loc="65" coveredmethods="6" methods="6" elements="21" classes="1" ncloc="50" statements="15" conditionals="0" coveredstatements="15"/>
            <class name="JvmAttributeGaugeSetTest">
               <metrics coveredelements="21" complexity="6" methods="6" testruns="5" statements="15" coveredconditionals="0" coveredmethods="6" elements="21" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="15" testpasses="5"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="18" count="5" type="method"/>
            <line num="20" count="5" type="stmt"/>
            <line num="22" count="5" type="stmt"/>
            <line num="23" count="5" type="stmt"/>
            <line num="24" count="5" type="stmt"/>
            <line num="25" count="5" type="stmt"/>
            <line num="26" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasASetOfGauges() : void" num="29" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAGaugeForTheJVMName() : void" num="35" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAGaugeForTheJVMVendor() : void" num="43" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAGaugeForTheJVMUptime() : void" num="51" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="autoDiscoversTheRuntimeBean() : void" num="59" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jvm/src/test/java/com/codahale/metrics/jvm/MemoryUsageGaugeSetTest.java" name="MemoryUsageGaugeSetTest.java">
            <metrics coveredelements="93" coveredconditionals="0" complexity="24" loc="274" coveredmethods="24" methods="24" elements="93" classes="1" ncloc="214" statements="69" conditionals="0" coveredstatements="69"/>
            <class name="MemoryUsageGaugeSetTest">
               <metrics coveredelements="93" complexity="24" methods="24" testruns="23" statements="69" coveredconditionals="0" coveredmethods="24" elements="93" testfailures="0" testduration="0.024000000000000007" conditionals="0" coveredstatements="69" testpasses="23"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="31" count="23" type="method"/>
            <line num="33" count="23" type="stmt"/>
            <line num="34" count="23" type="stmt"/>
            <line num="35" count="23" type="stmt"/>
            <line num="36" count="23" type="stmt"/>
            <line num="38" count="23" type="stmt"/>
            <line num="39" count="23" type="stmt"/>
            <line num="40" count="23" type="stmt"/>
            <line num="41" count="23" type="stmt"/>
            <line num="43" count="23" type="stmt"/>
            <line num="44" count="23" type="stmt"/>
            <line num="45" count="23" type="stmt"/>
            <line num="46" count="23" type="stmt"/>
            <line num="48" count="23" type="stmt"/>
            <line num="49" count="23" type="stmt"/>
            <line num="50" count="23" type="stmt"/>
            <line num="51" count="23" type="stmt"/>
            <line num="53" count="23" type="stmt"/>
            <line num="55" count="23" type="stmt"/>
            <line num="56" count="23" type="stmt"/>
            <line num="58" count="23" type="stmt"/>
            <line num="61" count="23" type="stmt"/>
            <line num="62" count="23" type="stmt"/>
            <line num="64" count="23" type="stmt"/>
            <line num="65" count="23" type="stmt"/>
            <line num="66" count="23" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasASetOfGauges() : void" num="69" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAGaugeForTotalCommitted() : void" num="101" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="103" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAGaugeForTotalInit() : void" num="109" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="111" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAGaugeForTotalUsed() : void" num="117" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="119" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAGaugeForTotalMax() : void" num="125" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="127" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAGaugeForHeapCommitted() : void" num="133" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="135" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAGaugeForHeapInit() : void" num="141" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="143" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAGaugeForHeapUsed() : void" num="149" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="151" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAGaugeForHeapMax() : void" num="157" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="159" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAGaugeForHeapUsage() : void" num="165" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="167" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAGaugeForNonHeapCommitted() : void" num="173" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="175" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAGaugeForNonHeapInit() : void" num="181" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="183" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAGaugeForNonHeapUsed() : void" num="189" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="191" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAGaugeForNonHeapMax() : void" num="197" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="199" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAGaugeForNonHeapUsage() : void" num="205" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="207" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAGaugeForMemoryPoolUsage() : void" num="213" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="215" count="1" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAGaugeForWeirdMemoryPoolInit() : void" num="221" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="223" count="1" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAGaugeForWeirdMemoryPoolCommitted() : void" num="229" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="231" count="1" type="stmt"/>
            <line num="233" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAGaugeForWeirdMemoryPoolUsed() : void" num="237" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="239" count="1" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAGaugeForWeirdMemoryPoolUsage() : void" num="245" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="247" count="1" type="stmt"/>
            <line num="249" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAGaugeForWeirdMemoryPoolMax() : void" num="253" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="255" count="1" type="stmt"/>
            <line num="257" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAGaugeForWeirdCollectionPoolUsed() : void" num="261" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="263" count="1" type="stmt"/>
            <line num="265" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="autoDetectsMemoryUsageBeanAndMemoryPools() : void" num="269" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="271" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jvm/src/test/java/com/codahale/metrics/jvm/ThreadDeadlockDetectorTest.java" name="ThreadDeadlockDetectorTest.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="3" loc="68" coveredmethods="3" methods="3" elements="20" classes="1" ncloc="57" statements="17" conditionals="0" coveredstatements="17"/>
            <class name="ThreadDeadlockDetectorTest">
               <metrics coveredelements="20" complexity="3" methods="3" testruns="3" statements="17" coveredconditionals="0" coveredmethods="3" elements="20" testfailures="0" testduration="0.006" conditionals="0" coveredstatements="17" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="returnsAnEmptySetIfNoThreadsAreDeadlocked() : void" num="19" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="21" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnsASetOfThreadsIfAnyAreDeadlocked() : void" num="27" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="autoDiscoversTheThreadMXBean() : void" num="63" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="65" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jvm/src/test/java/com/codahale/metrics/jvm/ThreadDumpTest.java" name="ThreadDumpTest.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="2" loc="51" coveredmethods="2" methods="2" elements="13" classes="1" ncloc="39" statements="11" conditionals="0" coveredstatements="11"/>
            <class name="ThreadDumpTest">
               <metrics coveredelements="13" complexity="2" methods="2" testruns="1" statements="11" coveredconditionals="0" coveredmethods="2" elements="13" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="11" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="24" count="1" type="method"/>
            <line num="26" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="dumpsAllThreads() : void" num="40" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jvm/src/test/java/com/codahale/metrics/jvm/ThreadStatesGaugeSetTest.java" name="ThreadStatesGaugeSetTest.java">
            <metrics coveredelements="40" coveredconditionals="0" complexity="10" loc="138" coveredmethods="10" methods="10" elements="40" classes="1" ncloc="113" statements="30" conditionals="0" coveredstatements="30"/>
            <class name="ThreadStatesGaugeSetTest">
               <metrics coveredelements="40" complexity="10" methods="10" testruns="9" statements="30" coveredconditionals="0" coveredmethods="10" elements="40" testfailures="0" testduration="0.024000000000000004" conditionals="0" coveredstatements="30" testpasses="9"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="31" count="9" type="method"/>
            <line num="33" count="9" type="stmt"/>
            <line num="35" count="9" type="stmt"/>
            <line num="36" count="9" type="stmt"/>
            <line num="37" count="9" type="stmt"/>
            <line num="38" count="9" type="stmt"/>
            <line num="39" count="9" type="stmt"/>
            <line num="40" count="9" type="stmt"/>
            <line num="42" count="9" type="stmt"/>
            <line num="43" count="9" type="stmt"/>
            <line num="48" count="9" type="stmt"/>
            <line num="49" count="9" type="stmt"/>
            <line num="50" count="9" type="stmt"/>
            <line num="51" count="9" type="stmt"/>
            <line num="53" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasASetOfGauges() : void" num="56" testsuccess="true" count="1" testduration="0.014" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAGaugeForEachThreadState() : void" num="73" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAGaugeForTheNumberOfThreads() : void" num="94" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="96" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAGaugeForTheNumberOfDaemonThreads() : void" num="100" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="102" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAGaugeForAnyDeadlocks() : void" num="106" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="108" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAGaugeForAnyDeadlockCount() : void" num="112" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="114" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAGaugeForPeakThreadCount() : void" num="118" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="120" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAGaugeForTotalStartedThreadsCount() : void" num="124" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="126" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="autoDiscoversTheMXBeans() : void" num="130" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics">
         <metrics coveredelements="1974" complexity="364" loc="4769" methods="303" classes="33" statements="1598" coveredconditionals="96" coveredmethods="301" elements="2007" ncloc="3611" files="32" conditionals="106" coveredstatements="1577"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/test/java/com/codahale/metrics/CachedGaugeTest.java" name="CachedGaugeTest.java">
            <metrics coveredelements="38" coveredconditionals="8" complexity="11" loc="102" coveredmethods="5" methods="5" elements="45" classes="1" ncloc="82" statements="30" conditionals="10" coveredstatements="25"/>
            <class name="CachedGaugeTest">
               <metrics coveredelements="38" complexity="11" methods="5" testruns="3" statements="30" coveredconditionals="8" coveredmethods="5" elements="45" testfailures="0" testduration="10.158" conditionals="10" coveredstatements="25" testpasses="3"/>
            </class>
            <line complexity="1" visibility="protected" signature="loadValue() : Integer" num="25" count="3" type="method"/>
            <line num="27" count="3" type="stmt"/>
            <line complexity="2" visibility="protected" signature="loadValue() : Integer" num="31" count="9993" type="method"/>
            <line num="33" count="9993" type="stmt"/>
            <line num="34" count="9993" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="38" count="9991" type="stmt"/>
            <line complexity="1" visibility="public" signature="cachesTheValueForTheGivenPeriod() : void" num="43" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reloadsTheCachedValueAfterTheGivenPeriod() : void" num="51" testsuccess="true" count="1" testduration="0.15" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="6" visibility="public" signature="multipleThreadAccessReturnsConsistentResults() : void" num="65" testsuccess="true" count="1" testduration="10.008" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="69" type="cond"/>
            <line num="70" count="10" type="stmt"/>
            <line num="71" count="10" type="stmt"/>
            <line num="72" count="10" type="stmt"/>
            <line num="74" count="10" type="stmt"/>
            <line num="75" count="29377952" type="stmt"/>
            <line num="77" count="29375151" type="stmt"/>
            <line falsecount="29389691" truecount="0" num="77" type="cond"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="82" count="29414111" type="stmt"/>
            <line falsecount="29437509" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="87" count="29393817" type="stmt"/>
            <line falsecount="10" truecount="29569373" num="88" type="cond"/>
            <line num="90" count="10" type="stmt"/>
            <line num="93" count="10" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="96" type="cond"/>
            <line num="97" count="10" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/test/java/com/codahale/metrics/ChunkedAssociativeLongArrayTest.java" name="ChunkedAssociativeLongArrayTest.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="1" loc="40" coveredmethods="1" methods="1" elements="19" classes="1" ncloc="32" statements="18" conditionals="0" coveredstatements="18"/>
            <class name="ChunkedAssociativeLongArrayTest">
               <metrics coveredelements="19" complexity="1" methods="1" testruns="1" statements="18" coveredconditionals="0" coveredmethods="1" elements="19" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="18" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testTrim() : void" num="9" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="11" count="1" type="stmt"/>
            <line num="12" count="1" type="stmt"/>
            <line num="13" count="1" type="stmt"/>
            <line num="14" count="1" type="stmt"/>
            <line num="15" count="1" type="stmt"/>
            <line num="16" count="1" type="stmt"/>
            <line num="17" count="1" type="stmt"/>
            <line num="18" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/test/java/com/codahale/metrics/ClockTest.java" name="ClockTest.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="2" loc="28" coveredmethods="2" methods="2" elements="6" classes="1" ncloc="21" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="ClockTest">
               <metrics coveredelements="6" complexity="2" methods="2" testruns="2" statements="4" coveredconditionals="0" coveredmethods="2" elements="6" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="4" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="userTimeClock() : void" num="10" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="12" count="1" type="stmt"/>
            <line num="14" count="1" type="stmt"/>
            <line num="18" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="defaultsToUserTime() : void" num="23" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="25" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/test/java/com/codahale/metrics/ConsoleReporterTest.java" name="ConsoleReporterTest.java">
            <metrics coveredelements="126" coveredconditionals="1" complexity="14" loc="412" coveredmethods="13" methods="13" elements="127" classes="1" ncloc="362" statements="112" conditionals="2" coveredstatements="112"/>
            <class name="ConsoleReporterTest">
               <metrics coveredelements="126" complexity="14" methods="13" testruns="8" statements="112" coveredconditionals="1" coveredmethods="13" elements="127" testfailures="0" testduration="0.116" conditionals="2" coveredstatements="112" testpasses="8"/>
            </class>
            <line complexity="2" visibility="public" signature="setUp() : void" num="40" count="8" type="method"/>
            <line num="42" count="8" type="stmt"/>
            <line num="45" count="8" type="stmt"/>
            <line falsecount="8" truecount="0" num="45" type="cond"/>
            <line complexity="1" visibility="public" signature="reportsGaugeValues() : void" num="50" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsCounterValues() : void" num="72" testsuccess="true" count="1" testduration="0.015" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsHistogramValues() : void" num="95" testsuccess="true" count="1" testduration="0.021" type="method"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsMeterValues() : void" num="142" testsuccess="true" count="1" testduration="0.027" type="method"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsTimerValues() : void" num="173" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line num="191" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportMeterWithDisabledAttributes() : void" num="229" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="231" count="1" type="stmt"/>
            <line num="233" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line num="246" count="1" type="stmt"/>
            <line num="247" count="1" type="stmt"/>
            <line num="248" count="1" type="stmt"/>
            <line num="249" count="1" type="stmt"/>
            <line num="251" count="1" type="stmt"/>
            <line num="257" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportTimerWithDisabledAttributes() : void" num="270" testsuccess="true" count="1" testduration="0.039" type="method"/>
            <line num="272" count="1" type="stmt"/>
            <line num="274" count="1" type="stmt"/>
            <line num="285" count="1" type="stmt"/>
            <line num="286" count="1" type="stmt"/>
            <line num="287" count="1" type="stmt"/>
            <line num="288" count="1" type="stmt"/>
            <line num="289" count="1" type="stmt"/>
            <line num="290" count="1" type="stmt"/>
            <line num="292" count="1" type="stmt"/>
            <line num="293" count="1" type="stmt"/>
            <line num="294" count="1" type="stmt"/>
            <line num="295" count="1" type="stmt"/>
            <line num="296" count="1" type="stmt"/>
            <line num="297" count="1" type="stmt"/>
            <line num="298" count="1" type="stmt"/>
            <line num="299" count="1" type="stmt"/>
            <line num="300" count="1" type="stmt"/>
            <line num="301" count="1" type="stmt"/>
            <line num="302" count="1" type="stmt"/>
            <line num="305" count="1" type="stmt"/>
            <line num="307" count="1" type="stmt"/>
            <line num="313" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportHistogramWithDisabledAttributes() : void" num="335" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="337" count="1" type="stmt"/>
            <line num="339" count="1" type="stmt"/>
            <line num="350" count="1" type="stmt"/>
            <line num="351" count="1" type="stmt"/>
            <line num="353" count="1" type="stmt"/>
            <line num="354" count="1" type="stmt"/>
            <line num="355" count="1" type="stmt"/>
            <line num="356" count="1" type="stmt"/>
            <line num="357" count="1" type="stmt"/>
            <line num="358" count="1" type="stmt"/>
            <line num="359" count="1" type="stmt"/>
            <line num="360" count="1" type="stmt"/>
            <line num="361" count="1" type="stmt"/>
            <line num="362" count="1" type="stmt"/>
            <line num="363" count="1" type="stmt"/>
            <line num="365" count="1" type="stmt"/>
            <line num="367" count="1" type="stmt"/>
            <line num="373" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="lines(String) : String" num="391" count="8" type="method"/>
            <line num="392" count="8" type="stmt"/>
            <line num="393" count="8" type="stmt"/>
            <line num="394" count="101" type="stmt"/>
            <line num="396" count="8" type="stmt"/>
            <line complexity="1" visibility="private" signature="consoleOutput() : String" num="399" count="8" type="method"/>
            <line num="400" count="8" type="stmt"/>
            <line complexity="1" visibility="private" signature="map() : SortedMap&lt;String, T&gt;" num="403" count="32" type="method"/>
            <line num="404" count="32" type="stmt"/>
            <line complexity="1" visibility="private" signature="map(String,T) : SortedMap&lt;String, T&gt;" num="407" count="8" type="method"/>
            <line num="408" count="8" type="stmt"/>
            <line num="409" count="8" type="stmt"/>
            <line num="410" count="8" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/test/java/com/codahale/metrics/CounterTest.java" name="CounterTest.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="7" loc="63" coveredmethods="7" methods="7" elements="20" classes="1" ncloc="47" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="CounterTest">
               <metrics coveredelements="20" complexity="7" methods="7" testruns="7" statements="13" coveredconditionals="0" coveredmethods="7" elements="20" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="13" testpasses="7"/>
            </class>
            <line complexity="1" visibility="public" signature="startsAtZero() : void" num="10" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="12" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="incrementsByOne() : void" num="16" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="18" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="incrementsByAnArbitraryDelta() : void" num="24" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="26" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="decrementsByOne() : void" num="32" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="decrementsByAnArbitraryDelta() : void" num="40" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="incrementByNegativeDelta() : void" num="48" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="decrementByNegativeDelta() : void" num="56" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/test/java/com/codahale/metrics/CsvReporterTest.java" name="CsvReporterTest.java">
            <metrics coveredelements="88" coveredconditionals="0" complexity="13" loc="245" coveredmethods="13" methods="13" elements="88" classes="1" ncloc="202" statements="75" conditionals="0" coveredstatements="75"/>
            <class name="CsvReporterTest">
               <metrics coveredelements="88" complexity="13" methods="13" testruns="7" statements="75" coveredconditionals="0" coveredmethods="13" elements="88" testfailures="0" testduration="0.019000000000000003" conditionals="0" coveredstatements="75" testpasses="7"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="32" count="7" type="method"/>
            <line num="34" count="7" type="stmt"/>
            <line num="36" count="7" type="stmt"/>
            <line num="38" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsGaugeValues() : void" num="47" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsCounterValues() : void" num="64" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsHistogramValues() : void" num="82" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsMeterValues() : void" num="114" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="116" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsTimerValues() : void" num="131" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCsvFileProviderIsUsed() : void" num="167" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="itFormatsWithCustomSeparator() : void" num="187" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="189" count="1" type="stmt"/>
            <line num="191" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="mockMeter() : Meter" num="213" count="2" type="method"/>
            <line num="214" count="2" type="stmt"/>
            <line num="215" count="2" type="stmt"/>
            <line num="216" count="2" type="stmt"/>
            <line num="217" count="2" type="stmt"/>
            <line num="218" count="2" type="stmt"/>
            <line num="219" count="2" type="stmt"/>
            <line num="221" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="csv(String) : String" num="224" count="6" type="method"/>
            <line num="225" count="6" type="stmt"/>
            <line num="226" count="6" type="stmt"/>
            <line num="227" count="12" type="stmt"/>
            <line num="229" count="6" type="stmt"/>
            <line complexity="1" visibility="private" signature="fileContents(String) : String" num="232" count="6" type="method"/>
            <line num="233" count="6" type="stmt"/>
            <line complexity="1" visibility="private" signature="map() : SortedMap&lt;String, T&gt;" num="236" count="28" type="method"/>
            <line num="237" count="28" type="stmt"/>
            <line complexity="1" visibility="private" signature="map(String,T) : SortedMap&lt;String, T&gt;" num="240" count="7" type="method"/>
            <line num="241" count="7" type="stmt"/>
            <line num="242" count="7" type="stmt"/>
            <line num="243" count="7" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/test/java/com/codahale/metrics/DerivativeGaugeTest.java" name="DerivativeGaugeTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="21" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="17" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="DerivativeGaugeTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="1" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="protected" signature="transform(String) : Integer" num="10" count="1" type="method"/>
            <line num="12" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnsATransformedValue() : void" num="16" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="18" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/test/java/com/codahale/metrics/EWMATest.java" name="EWMATest.java">
            <metrics coveredelements="110" coveredconditionals="2" complexity="5" loc="224" coveredmethods="4" methods="4" elements="110" classes="1" ncloc="123" statements="104" conditionals="2" coveredstatements="104"/>
            <class name="EWMATest">
               <metrics coveredelements="110" complexity="5" methods="4" testruns="3" statements="104" coveredconditionals="2" coveredmethods="4" elements="110" testfailures="0" testduration="0.001" conditionals="2" coveredstatements="104" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="aOneMinuteEWMAWithAValueOfThree() : void" num="11" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="13" count="1" type="stmt"/>
            <line num="14" count="1" type="stmt"/>
            <line num="15" count="1" type="stmt"/>
            <line num="17" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="aFiveMinuteEWMAWithAValueOfThree() : void" num="80" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="aFifteenMinuteEWMAWithAValueOfThree() : void" num="149" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line num="191" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line num="213" count="1" type="stmt"/>
            <line num="215" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="elapseMinute(EWMA) : void" num="219" count="45" type="method"/>
            <line num="220" count="45" type="stmt"/>
            <line falsecount="45" truecount="540" num="220" type="cond"/>
            <line num="221" count="540" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/test/java/com/codahale/metrics/ExponentiallyDecayingReservoirTest.java" name="ExponentiallyDecayingReservoirTest.java">
            <metrics coveredelements="184" coveredconditionals="38" complexity="31" loc="343" coveredmethods="12" methods="12" elements="184" classes="1" ncloc="230" statements="134" conditionals="38" coveredstatements="134"/>
            <class name="ExponentiallyDecayingReservoirTest">
               <metrics coveredelements="184" complexity="31" methods="12" testruns="11" statements="134" coveredconditionals="38" coveredmethods="12" elements="184" testfailures="0" testduration="0.11200000000000002" conditionals="38" coveredstatements="134" testpasses="11"/>
            </class>
            <line complexity="2" visibility="public" signature="aReservoirOf100OutOf1000Elements() : void" num="13" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="15" count="1" type="stmt"/>
            <line num="16" count="1" type="stmt"/>
            <line falsecount="1" truecount="1000" num="16" type="cond"/>
            <line num="17" count="1000" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="aReservoirOf100OutOf10Elements() : void" num="31" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="34" type="cond"/>
            <line num="35" count="10" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="aHeavilyBiasedReservoirOf100OutOf1000Elements() : void" num="49" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line falsecount="1" truecount="100" num="52" type="cond"/>
            <line num="53" count="100" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="longPeriodsOfInactivityShouldNotCorruptSamplingState() : void" num="68" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line falsecount="1" truecount="1000" num="74" type="cond"/>
            <line num="75" count="1000" type="stmt"/>
            <line num="76" count="1000" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line falsecount="1" truecount="1000" num="93" type="cond"/>
            <line num="94" count="1000" type="stmt"/>
            <line num="95" count="1000" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="longPeriodsOfInactivity_fetchShouldResample() : void" num="102" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line falsecount="1" truecount="1000" num="110" type="cond"/>
            <line num="111" count="1000" type="stmt"/>
            <line num="112" count="1000" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="emptyReservoirSnapshot_shouldReturnZeroForAllValues() : void" num="129" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="131" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="removeZeroWeightsInSamplesToPreventNaNInMeanValues() : void" num="141" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line falsecount="1" truecount="47" num="151" type="cond"/>
            <line num="152" count="47" type="stmt"/>
            <line num="153" count="47" type="stmt"/>
            <line complexity="7" visibility="public" signature="multipleUpdatesAfterlongPeriodsOfInactivityShouldNotCorruptSamplingState() : void" num="157" testsuccess="true" count="1" testduration="0.073" type="method"/>
            <line num="169" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="169" type="cond"/>
            <line num="170" count="10" type="stmt"/>
            <line num="171" count="10" type="stmt"/>
            <line num="177" count="10" type="stmt"/>
            <line num="178" count="10" type="stmt"/>
            <line num="179" count="10" type="stmt"/>
            <line num="181" count="10" type="stmt"/>
            <line num="182" count="10" type="stmt"/>
            <line num="183" count="10" type="stmt"/>
            <line falsecount="10" truecount="1000" num="183" type="cond"/>
            <line num="186" count="1000" type="stmt"/>
            <line num="187" count="25516" type="stmt"/>
            <line num="188" count="25516" type="stmt"/>
            <line falsecount="24516" truecount="1000" num="188" type="cond"/>
            <line num="189" count="1000" type="stmt"/>
            <line num="190" count="1000" type="stmt"/>
            <line num="196" count="1000" type="stmt"/>
            <line num="200" count="1000" type="stmt"/>
            <line num="204" count="10" type="stmt"/>
            <line num="206" count="10" type="stmt"/>
            <line num="207" count="10" type="stmt"/>
            <line num="208" count="10" type="stmt"/>
            <line falsecount="10" truecount="1000" num="208" type="cond"/>
            <line num="214" count="1000" type="stmt"/>
            <line num="217" count="1000" type="stmt"/>
            <line num="222" count="1000" type="stmt"/>
            <line falsecount="1000" truecount="49500" num="222" type="cond"/>
            <line num="223" count="49500" type="stmt"/>
            <line num="226" count="1000" type="stmt"/>
            <line num="229" count="1000" type="stmt"/>
            <line num="230" count="1551965" type="stmt"/>
            <line num="231" count="1551965" type="stmt"/>
            <line falsecount="1550965" truecount="1000" num="231" type="cond"/>
            <line num="232" count="1000" type="stmt"/>
            <line num="233" count="1000" type="stmt"/>
            <line num="239" count="10" type="stmt"/>
            <line num="240" count="10" type="stmt"/>
            <line num="241" count="10" type="stmt"/>
            <line num="245" count="10" type="stmt"/>
            <line num="249" count="10" type="stmt"/>
            <line complexity="3" visibility="public" signature="spotLift() : void" num="253" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="255" count="1" type="stmt"/>
            <line num="256" count="1" type="stmt"/>
            <line num="260" count="1" type="stmt"/>
            <line num="261" count="1" type="stmt"/>
            <line num="263" count="1" type="stmt"/>
            <line falsecount="1" truecount="1200" num="263" type="cond"/>
            <line num="264" count="1200" type="stmt"/>
            <line num="265" count="1200" type="stmt"/>
            <line num="269" count="1" type="stmt"/>
            <line falsecount="1" truecount="100" num="269" type="cond"/>
            <line num="270" count="100" type="stmt"/>
            <line num="271" count="100" type="stmt"/>
            <line num="275" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="spotFall() : void" num="279" testsuccess="true" count="1" testduration="0.018" type="method"/>
            <line num="281" count="1" type="stmt"/>
            <line num="282" count="1" type="stmt"/>
            <line num="286" count="1" type="stmt"/>
            <line num="287" count="1" type="stmt"/>
            <line num="289" count="1" type="stmt"/>
            <line falsecount="1" truecount="1200" num="289" type="cond"/>
            <line num="290" count="1200" type="stmt"/>
            <line num="291" count="1200" type="stmt"/>
            <line num="295" count="1" type="stmt"/>
            <line falsecount="1" truecount="100" num="295" type="cond"/>
            <line num="296" count="100" type="stmt"/>
            <line num="297" count="100" type="stmt"/>
            <line num="301" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="quantiliesShouldBeBasedOnWeights() : void" num="305" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="307" count="1" type="stmt"/>
            <line num="308" count="1" type="stmt"/>
            <line num="311" count="1" type="stmt"/>
            <line falsecount="1" truecount="40" num="311" type="cond"/>
            <line num="312" count="40" type="stmt"/>
            <line num="315" count="1" type="stmt"/>
            <line num="317" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="317" type="cond"/>
            <line num="318" count="10" type="stmt"/>
            <line num="321" count="1" type="stmt"/>
            <line num="327" count="1" type="stmt"/>
            <line num="329" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertAllValuesBetween(ExponentiallyDecayingReservoir,double,double) : void" num="333" count="7" type="method"/>
            <line num="336" count="7" type="stmt"/>
            <line num="337" count="241" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/test/java/com/codahale/metrics/FixedNameCsvFileProviderTest.java" name="FixedNameCsvFileProviderTest.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="3" loc="38" coveredmethods="3" methods="3" elements="12" classes="1" ncloc="29" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="FixedNameCsvFileProviderTest">
               <metrics coveredelements="12" complexity="3" methods="3" testruns="2" statements="9" coveredconditionals="0" coveredmethods="3" elements="12" testfailures="0" testduration="0.006" conditionals="0" coveredstatements="9" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="18" count="2" type="method"/>
            <line num="20" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetFile() : void" num="23" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetFileSanitize() : void" num="31" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/test/java/com/codahale/metrics/HistogramTest.java" name="HistogramTest.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="3" loc="40" coveredmethods="3" methods="3" elements="11" classes="1" ncloc="30" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="HistogramTest">
               <metrics coveredelements="11" complexity="3" methods="3" testruns="3" statements="8" coveredconditionals="0" coveredmethods="3" elements="11" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="8" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="updatesTheCountOnUpdates() : void" num="14" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="16" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnsTheSnapshotFromTheReservoir() : void" num="25" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="updatesTheReservoir() : void" num="34" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/test/java/com/codahale/metrics/InstrumentedExecutorServiceTest.java" name="InstrumentedExecutorServiceTest.java">
            <metrics coveredelements="56" coveredconditionals="1" complexity="5" loc="111" coveredmethods="4" methods="4" elements="58" classes="1" ncloc="90" statements="52" conditionals="2" coveredstatements="51"/>
            <class name="InstrumentedExecutorServiceTest">
               <metrics coveredelements="56" complexity="5" methods="4" testruns="2" statements="52" coveredconditionals="1" coveredmethods="4" elements="58" testfailures="0" testduration="0.008" conditionals="2" coveredstatements="51" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="setup() : void" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
            <line num="32" count="2" type="stmt"/>
            <line num="33" count="2" type="stmt"/>
            <line num="34" count="2" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line num="36" count="2" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsTasksInformationForRunnable() : void" num="42" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsTasksInformationForCallable() : void" num="72" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="tearDown() : void" num="103" count="2" type="method"/>
            <line num="105" count="2" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/test/java/com/codahale/metrics/InstrumentedScheduledExecutorServiceTest.java" name="InstrumentedScheduledExecutorServiceTest.java">
            <metrics coveredelements="180" coveredconditionals="1" complexity="10" loc="305" coveredmethods="7" methods="7" elements="182" classes="1" ncloc="231" statements="173" conditionals="2" coveredstatements="172"/>
            <class name="InstrumentedScheduledExecutorServiceTest">
               <metrics coveredelements="180" complexity="10" methods="7" testruns="6" statements="173" coveredconditionals="1" coveredmethods="7" elements="182" testfailures="0" testduration="0.627" conditionals="2" coveredstatements="172" testpasses="6"/>
            </class>
            <line complexity="1" visibility="public" signature="testSubmitRunnable() : void" num="35" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testScheduleRunnable() : void" num="76" testsuccess="true" count="1" testduration="0.011" type="method"/>
            <line num="78" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSubmitCallable() : void" num="117" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="119" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testScheduleCallable() : void" num="162" testsuccess="true" count="1" testduration="0.01" type="method"/>
            <line num="164" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testScheduleFixedRateCallable() : void" num="207" testsuccess="true" count="1" testduration="0.303" type="method"/>
            <line num="209" count="1" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line num="213" count="1" type="stmt"/>
            <line num="215" count="1" type="stmt"/>
            <line num="216" count="1" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line num="222" count="2" type="stmt"/>
            <line num="224" count="2" type="stmt"/>
            <line num="226" count="2" type="stmt"/>
            <line num="227" count="2" type="stmt"/>
            <line num="229" count="2" type="stmt"/>
            <line num="230" count="2" type="stmt"/>
            <line num="232" count="1" type="stmt"/>
            <line num="234" count="2" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line num="239" count="1" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line num="243" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line num="246" count="1" type="stmt"/>
            <line num="248" count="1" type="stmt"/>
            <line num="249" count="1" type="stmt"/>
            <line num="250" count="1" type="stmt"/>
            <line num="251" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testScheduleFixedDelayCallable() : void" num="254" testsuccess="true" count="1" testduration="0.301" type="method"/>
            <line num="256" count="1" type="stmt"/>
            <line num="258" count="1" type="stmt"/>
            <line num="259" count="1" type="stmt"/>
            <line num="260" count="1" type="stmt"/>
            <line num="262" count="1" type="stmt"/>
            <line num="263" count="1" type="stmt"/>
            <line num="264" count="1" type="stmt"/>
            <line num="265" count="1" type="stmt"/>
            <line num="267" count="1" type="stmt"/>
            <line num="268" count="1" type="stmt"/>
            <line num="269" count="2" type="stmt"/>
            <line num="271" count="2" type="stmt"/>
            <line num="273" count="2" type="stmt"/>
            <line num="274" count="2" type="stmt"/>
            <line num="276" count="2" type="stmt"/>
            <line num="277" count="2" type="stmt"/>
            <line num="279" count="1" type="stmt"/>
            <line num="281" count="2" type="stmt"/>
            <line num="284" count="1" type="stmt"/>
            <line num="285" count="1" type="stmt"/>
            <line num="286" count="1" type="stmt"/>
            <line num="287" count="1" type="stmt"/>
            <line num="289" count="1" type="stmt"/>
            <line num="291" count="1" type="stmt"/>
            <line num="292" count="1" type="stmt"/>
            <line num="293" count="1" type="stmt"/>
            <line num="294" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="tearDown() : void" num="297" count="6" type="method"/>
            <line num="299" count="6" type="stmt"/>
            <line num="300" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="300" type="cond"/>
            <line num="301" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/test/java/com/codahale/metrics/InstrumentedThreadFactoryTest.java" name="InstrumentedThreadFactoryTest.java">
            <metrics coveredelements="23" coveredconditionals="2" complexity="3" loc="77" coveredmethods="1" methods="1" elements="25" classes="1" ncloc="46" statements="22" conditionals="2" coveredstatements="20"/>
            <class name="InstrumentedThreadFactoryTest">
               <metrics coveredelements="23" complexity="3" methods="1" testruns="1" statements="22" coveredconditionals="2" coveredmethods="1" elements="25" testfailures="0" testduration="0.013" conditionals="2" coveredstatements="20" testpasses="1"/>
            </class>
            <line complexity="3" visibility="public" signature="reportsThreadInformation() : void" num="28" testsuccess="true" count="1" testduration="0.013" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line falsecount="1" truecount="11" num="41" type="cond"/>
            <line num="42" count="11" type="stmt"/>
            <line num="43" count="11" type="stmt"/>
            <line num="48" count="11" type="stmt"/>
            <line num="49" count="11" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="55" count="11" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/test/java/com/codahale/metrics/ManualClock.java" name="ManualClock.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="6" loc="34" coveredmethods="6" methods="6" elements="12" classes="1" ncloc="25" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="ManualClock">
               <metrics coveredelements="12" coveredconditionals="0" complexity="6" coveredmethods="6" methods="6" elements="12" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="addNanos(long) : void" num="8" count="1416107" type="method"/>
            <line num="9" count="1416107" type="stmt"/>
            <line complexity="1" visibility="public" signature="addSeconds(long) : void" num="12" count="2964" type="method"/>
            <line num="13" count="2964" type="stmt"/>
            <line complexity="1" visibility="public" signature="addMillis(long) : void" num="16" count="5601" type="method"/>
            <line num="17" count="5601" type="stmt"/>
            <line complexity="1" visibility="public" signature="addHours(long) : void" num="20" count="1049" type="method"/>
            <line num="21" count="1049" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTick() : long" num="24" count="10963869" type="method"/>
            <line num="26" count="10963869" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime() : long" num="29" count="8722" type="method"/>
            <line num="31" count="8722" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/test/java/com/codahale/metrics/MeterApproximationTest.java" name="MeterApproximationTest.java">
            <metrics coveredelements="26" coveredconditionals="2" complexity="7" loc="82" coveredmethods="6" methods="6" elements="26" classes="1" ncloc="62" statements="18" conditionals="2" coveredstatements="18"/>
            <class name="MeterApproximationTest">
               <metrics coveredelements="26" complexity="7" methods="6" testruns="12" statements="18" coveredconditionals="2" coveredmethods="6" elements="26" testfailures="0" testduration="0.126" conditionals="2" coveredstatements="18" testpasses="12"/>
            </class>
            <line complexity="1" visibility="public" signature="ratesPerMinute() : Collection&lt;Object[]&gt;" num="18" count="1" type="method"/>
            <line num="20" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="MeterApproximationTest(long)" num="28" count="12" type="method"/>
            <line num="29" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="controlMeter1MinuteMeanApproximation() : void" num="32" testsuccess="true" count="4" testduration="0.001" type="method"/>
            <line num="34" count="4" type="stmt"/>
            <line num="38" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="controlMeter5MinuteMeanApproximation() : void" num="42" testsuccess="true" count="4" testduration="0.028" type="method"/>
            <line num="44" count="4" type="stmt"/>
            <line num="48" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="controlMeter15MinuteMeanApproximation() : void" num="52" testsuccess="true" count="4" testduration="0.001" type="method"/>
            <line num="54" count="4" type="stmt"/>
            <line num="58" count="4" type="stmt"/>
            <line complexity="2" visibility="private" signature="simulateMetronome(long,TimeUnit,long,TimeUnit) : Meter" num="62" count="12" type="method"/>
            <line num="66" count="12" type="stmt"/>
            <line num="67" count="12" type="stmt"/>
            <line num="69" count="12" type="stmt"/>
            <line num="71" count="12" type="stmt"/>
            <line num="72" count="12" type="stmt"/>
            <line num="74" count="12" type="stmt"/>
            <line falsecount="12" truecount="360462" num="74" type="cond"/>
            <line num="75" count="360462" type="stmt"/>
            <line num="76" count="360462" type="stmt"/>
            <line num="79" count="12" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/test/java/com/codahale/metrics/MeterTest.java" name="MeterTest.java">
            <metrics coveredelements="15" coveredconditionals="0" complexity="3" loc="58" coveredmethods="3" methods="3" elements="15" classes="1" ncloc="42" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="MeterTest">
               <metrics coveredelements="15" complexity="3" methods="3" testruns="2" statements="12" coveredconditionals="0" coveredmethods="3" elements="15" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="12" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="17" count="2" type="method"/>
            <line num="19" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="startsOutWithNoRatesOrCount() : void" num="23" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="25" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="marksEventsAndUpdatesRatesAndCount() : void" num="41" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/test/java/com/codahale/metrics/MetricFilterTest.java" name="MetricFilterTest.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="4" loc="38" coveredmethods="4" methods="4" elements="11" classes="1" ncloc="32" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="MetricFilterTest">
               <metrics coveredelements="11" complexity="4" methods="4" testruns="4" statements="7" coveredconditionals="0" coveredmethods="4" elements="11" testfailures="0" testduration="0.009000000000000001" conditionals="0" coveredstatements="7" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="theAllFilterMatchesAllMetrics() : void" num="9" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="11" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="theStartsWithFilterMatches() : void" num="15" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="17" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="theEndsWithFilterMatches() : void" num="23" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="25" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="theContainsFilterMatches() : void" num="31" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/test/java/com/codahale/metrics/MetricRegistryListenerTest.java" name="MetricRegistryListenerTest.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="6" loc="60" coveredmethods="6" methods="6" elements="21" classes="1" ncloc="46" statements="15" conditionals="0" coveredstatements="14"/>
            <class name="MetricRegistryListenerTest">
               <metrics coveredelements="20" complexity="6" methods="6" testruns="6" statements="15" coveredconditionals="0" coveredmethods="6" elements="21" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="14" testpasses="6"/>
            </class>
            <line complexity="1" visibility="public" signature="noOpsOnGaugeAdded() : void" num="17" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="19" count="1" type="stmt"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="noOpsOnCounterAdded() : void" num="24" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="26" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="noOpsOnHistogramAdded() : void" num="31" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="noOpsOnMeterAdded() : void" num="38" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="noOpsOnTimerAdded() : void" num="45" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="doesNotExplodeWhenMetricsAreRemoved() : void" num="52" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/test/java/com/codahale/metrics/MetricRegistryTest.java" name="MetricRegistryTest.java">
            <metrics coveredelements="272" coveredconditionals="0" complexity="48" loc="583" coveredmethods="47" methods="47" elements="273" classes="1" ncloc="444" statements="226" conditionals="0" coveredstatements="225"/>
            <class name="MetricRegistryTest">
               <metrics coveredelements="272" complexity="48" methods="47" testruns="46" statements="226" coveredconditionals="0" coveredmethods="47" elements="273" testfailures="0" testduration="0.03400000000000001" conditionals="0" coveredstatements="225" testpasses="46"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="28" count="46" type="method"/>
            <line num="30" count="46" type="stmt"/>
            <line complexity="1" visibility="public" signature="registeringAGaugeTriggersANotification() : void" num="33" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="removingAGaugeTriggersANotification() : void" num="41" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="registeringACounterTriggersANotification() : void" num="51" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="accessingACounterRegistersAndReusesTheCounter() : void" num="59" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="accessingACustomCounterRegistersAndReusesTheCounter() : void" num="70" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="removingACounterTriggersANotification() : void" num="83" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="registeringAHistogramTriggersANotification() : void" num="93" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="95" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="accessingAHistogramRegistersAndReusesIt() : void" num="101" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="accessingACustomHistogramRegistersAndReusesIt() : void" num="112" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="removingAHistogramTriggersANotification() : void" num="124" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="126" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="registeringAMeterTriggersANotification() : void" num="134" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="136" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="accessingAMeterRegistersAndReusesIt() : void" num="142" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="accessingACustomMeterRegistersAndReusesIt() : void" num="153" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="removingAMeterTriggersANotification() : void" num="165" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="167" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="registeringATimerTriggersANotification() : void" num="175" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="177" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="accessingATimerRegistersAndReusesIt() : void" num="183" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="191" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="accessingACustomTimerRegistersAndReusesIt() : void" num="194" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="196" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="removingATimerTriggersANotification() : void" num="207" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="209" count="1" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line num="214" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="accessingACustomGaugeRegistersAndReusesIt() : void" num="217" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="220" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line num="222" count="1" type="stmt"/>
            <line num="224" count="1" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="addingAListenerWithExistingMetricsCatchesItUp() : void" num="231" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="233" count="1" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line num="239" count="1" type="stmt"/>
            <line num="240" count="1" type="stmt"/>
            <line num="242" count="1" type="stmt"/>
            <line num="243" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line num="246" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="aRemovedListenerDoesNotReceiveUpdates() : void" num="249" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="251" count="1" type="stmt"/>
            <line num="252" count="1" type="stmt"/>
            <line num="253" count="1" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAMapOfRegisteredGauges() : void" num="258" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="260" count="1" type="stmt"/>
            <line num="262" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAMapOfRegisteredCounters() : void" num="266" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="268" count="1" type="stmt"/>
            <line num="270" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAMapOfRegisteredHistograms() : void" num="274" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="276" count="1" type="stmt"/>
            <line num="278" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAMapOfRegisteredMeters() : void" num="282" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="284" count="1" type="stmt"/>
            <line num="286" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAMapOfRegisteredTimers() : void" num="290" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="292" count="1" type="stmt"/>
            <line num="294" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasASetOfRegisteredMetricNames() : void" num="298" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="300" count="1" type="stmt"/>
            <line num="301" count="1" type="stmt"/>
            <line num="302" count="1" type="stmt"/>
            <line num="303" count="1" type="stmt"/>
            <line num="304" count="1" type="stmt"/>
            <line num="306" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="registersMultipleMetrics() : void" num="310" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="312" count="1" type="stmt"/>
            <line num="313" count="1" type="stmt"/>
            <line num="314" count="1" type="stmt"/>
            <line num="315" count="1" type="stmt"/>
            <line num="316" count="1" type="stmt"/>
            <line num="319" count="1" type="stmt"/>
            <line num="321" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="registersMultipleMetricsWithAPrefix() : void" num="325" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="327" count="1" type="stmt"/>
            <line num="328" count="1" type="stmt"/>
            <line num="329" count="1" type="stmt"/>
            <line num="330" count="1" type="stmt"/>
            <line num="331" count="1" type="stmt"/>
            <line num="334" count="1" type="stmt"/>
            <line num="336" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="registersRecursiveMetricSets() : void" num="340" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="342" count="1" type="stmt"/>
            <line num="343" count="1" type="stmt"/>
            <line num="344" count="1" type="stmt"/>
            <line num="345" count="1" type="stmt"/>
            <line num="348" count="1" type="stmt"/>
            <line num="349" count="1" type="stmt"/>
            <line num="350" count="1" type="stmt"/>
            <line num="351" count="1" type="stmt"/>
            <line num="352" count="1" type="stmt"/>
            <line num="355" count="1" type="stmt"/>
            <line num="357" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="registersMetricsFromAnotherRegistry() : void" num="361" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="363" count="1" type="stmt"/>
            <line num="364" count="1" type="stmt"/>
            <line num="365" count="1" type="stmt"/>
            <line num="366" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="concatenatesStringsToFormADottedName() : void" num="369" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="371" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="elidesNullValuesFromNamesWhenOnlyOneNullPassedIn() : void" num="375" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="378" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="elidesNullValuesFromNamesWhenManyNullsPassedIn() : void" num="382" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="384" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="elidesNullValuesFromNamesWhenNullAndNotNullPassedIn() : void" num="388" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="390" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="elidesEmptyStringsFromNames() : void" num="394" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="396" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="concatenatesClassNamesWithStringsToFormADottedName() : void" num="400" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="402" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="concatenatesClassesWithoutCanonicalNamesWithStrings() : void" num="406" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="408" count="1" type="stmt"/>
            <line num="410" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="removesMetricsMatchingAFilter() : void" num="414" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="416" count="1" type="stmt"/>
            <line num="417" count="1" type="stmt"/>
            <line num="418" count="1" type="stmt"/>
            <line num="420" count="1" type="stmt"/>
            <line num="423" count="1" type="stmt"/>
            <line num="425" count="1" type="stmt"/>
            <line num="427" count="1" type="stmt"/>
            <line num="430" count="1" type="stmt"/>
            <line num="431" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="addingChildMetricAfterRegister() : void" num="434" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="436" count="1" type="stmt"/>
            <line num="437" count="1" type="stmt"/>
            <line num="439" count="1" type="stmt"/>
            <line num="440" count="1" type="stmt"/>
            <line num="441" count="1" type="stmt"/>
            <line num="443" count="1" type="stmt"/>
            <line num="444" count="1" type="stmt"/>
            <line num="446" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="addingMultipleChildMetricsAfterRegister() : void" num="450" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="452" count="1" type="stmt"/>
            <line num="453" count="1" type="stmt"/>
            <line num="455" count="1" type="stmt"/>
            <line num="456" count="1" type="stmt"/>
            <line num="457" count="1" type="stmt"/>
            <line num="458" count="1" type="stmt"/>
            <line num="459" count="1" type="stmt"/>
            <line num="461" count="1" type="stmt"/>
            <line num="462" count="1" type="stmt"/>
            <line num="464" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="addingDeepChildMetricsAfterRegister() : void" num="468" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="470" count="1" type="stmt"/>
            <line num="471" count="1" type="stmt"/>
            <line num="472" count="1" type="stmt"/>
            <line num="474" count="1" type="stmt"/>
            <line num="475" count="1" type="stmt"/>
            <line num="476" count="1" type="stmt"/>
            <line num="478" count="1" type="stmt"/>
            <line num="479" count="1" type="stmt"/>
            <line num="480" count="1" type="stmt"/>
            <line num="482" count="1" type="stmt"/>
            <line num="484" count="1" type="stmt"/>
            <line num="485" count="1" type="stmt"/>
            <line num="486" count="1" type="stmt"/>
            <line num="488" count="1" type="stmt"/>
            <line num="491" count="1" type="stmt"/>
            <line num="494" count="1" type="stmt"/>
            <line num="495" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="removingChildMetricAfterRegister() : void" num="498" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="500" count="1" type="stmt"/>
            <line num="501" count="1" type="stmt"/>
            <line num="503" count="1" type="stmt"/>
            <line num="504" count="1" type="stmt"/>
            <line num="505" count="1" type="stmt"/>
            <line num="507" count="1" type="stmt"/>
            <line num="509" count="1" type="stmt"/>
            <line num="510" count="1" type="stmt"/>
            <line num="512" count="1" type="stmt"/>
            <line num="515" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="removingMultipleChildMetricsAfterRegister() : void" num="518" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="520" count="1" type="stmt"/>
            <line num="521" count="1" type="stmt"/>
            <line num="523" count="1" type="stmt"/>
            <line num="524" count="1" type="stmt"/>
            <line num="525" count="1" type="stmt"/>
            <line num="526" count="1" type="stmt"/>
            <line num="527" count="1" type="stmt"/>
            <line num="529" count="1" type="stmt"/>
            <line num="530" count="1" type="stmt"/>
            <line num="532" count="1" type="stmt"/>
            <line num="533" count="1" type="stmt"/>
            <line num="535" count="1" type="stmt"/>
            <line num="538" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="removingDeepChildMetricsAfterRegister() : void" num="541" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="543" count="1" type="stmt"/>
            <line num="544" count="1" type="stmt"/>
            <line num="545" count="1" type="stmt"/>
            <line num="547" count="1" type="stmt"/>
            <line num="548" count="1" type="stmt"/>
            <line num="549" count="1" type="stmt"/>
            <line num="551" count="1" type="stmt"/>
            <line num="552" count="1" type="stmt"/>
            <line num="553" count="1" type="stmt"/>
            <line num="555" count="1" type="stmt"/>
            <line num="557" count="1" type="stmt"/>
            <line num="558" count="1" type="stmt"/>
            <line num="559" count="1" type="stmt"/>
            <line num="561" count="1" type="stmt"/>
            <line num="564" count="1" type="stmt"/>
            <line num="567" count="1" type="stmt"/>
            <line num="569" count="1" type="stmt"/>
            <line num="570" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="registerNullMetric() : void" num="573" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="575" count="1" type="stmt"/>
            <line num="576" count="1" type="stmt"/>
            <line num="577" count="1" type="stmt"/>
            <line num="578" count="0" type="stmt"/>
            <line num="580" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/test/java/com/codahale/metrics/RatioGaugeTest.java" name="RatioGaugeTest.java">
            <metrics coveredelements="23" coveredconditionals="0" complexity="9" loc="67" coveredmethods="9" methods="9" elements="23" classes="1" ncloc="55" statements="14" conditionals="0" coveredstatements="14"/>
            <class name="RatioGaugeTest">
               <metrics coveredelements="23" complexity="9" methods="9" testruns="5" statements="14" coveredconditionals="0" coveredmethods="9" elements="23" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="14" testpasses="5"/>
            </class>
            <line complexity="1" visibility="public" signature="ratiosAreHumanReadable() : void" num="8" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="10" count="1" type="stmt"/>
            <line num="12" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="calculatesTheRatioOfTheNumeratorToTheDenominator() : void" num="16" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="18" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getRatio() : Ratio" num="19" count="1" type="method"/>
            <line num="21" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="handlesDivideByZeroIssues() : void" num="29" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getRatio() : Ratio" num="32" count="1" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="handlesInfiniteDenominators() : void" num="42" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getRatio() : Ratio" num="45" count="1" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="handlesNaNDenominators() : void" num="55" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getRatio() : Ratio" num="58" count="1" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/test/java/com/codahale/metrics/ScheduledReporterTest.java" name="ScheduledReporterTest.java">
            <metrics coveredelements="101" coveredconditionals="4" complexity="27" loc="261" coveredmethods="22" methods="22" elements="107" classes="2" ncloc="222" statements="77" conditionals="8" coveredstatements="75"/>
            <class name="ScheduledReporterTest">
               <metrics coveredelements="93" complexity="23" methods="18" testruns="15" statements="73" coveredconditionals="4" coveredmethods="18" elements="99" testfailures="0" testduration="1.019" conditionals="8" coveredstatements="71" testpasses="15"/>
            </class>
            <class name="ScheduledReporterTest.DummyReporter">
               <metrics coveredelements="8" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="51" count="15" type="method"/>
            <line num="54" count="15" type="stmt"/>
            <line num="55" count="15" type="stmt"/>
            <line num="56" count="15" type="stmt"/>
            <line num="57" count="15" type="stmt"/>
            <line num="58" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="61" count="15" type="method"/>
            <line num="63" count="15" type="stmt"/>
            <line num="64" count="15" type="stmt"/>
            <line num="65" count="15" type="stmt"/>
            <line num="66" count="15" type="stmt"/>
            <line complexity="3" visibility="public" signature="createWithNullMetricRegistry() : void" num="69" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="pollsPeriodically() : void" num="85" testsuccess="true" count="1" testduration="0.202" type="method"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="89" type="cond"/>
            <line num="90" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldUsePeriodAsInitialDelayIfNotSpecifiedOtherwise() : void" num="105" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="107" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldStartWithSpecifiedInitialDelay() : void" num="114" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="116" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="shouldAutoCreateExecutorWhenItNull() : void" num="123" testsuccess="true" count="1" testduration="0.202" type="method"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="127" type="cond"/>
            <line num="128" count="2" type="stmt"/>
            <line num="129" count="2" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldDisallowToStartReportingMultiple() : void" num="142" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldDisallowToStartReportingMultipleTimesOnCustomExecutor() : void" num="148" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldDisallowToStartReportingMultipleTimesOnExternallyManagedExecutor() : void" num="154" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldNotFailOnStopIfReporterWasNotStared() : void" num="160" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldNotFailWhenStoppingMultipleTimes() : void" num="167" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="3" type="stmt"/>
            <line num="171" count="3" type="stmt"/>
            <line num="172" count="3" type="stmt"/>
            <line num="173" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldShutdownExecutorOnStopByDefault() : void" num="177" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldNotShutdownExternallyManagedExecutorOnStop() : void" num="184" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldCancelScheduledFutureWhenStoppingWithExternallyManagedExecutor() : void" num="192" testsuccess="true" count="1" testduration="0.6" type="method"/>
            <line num="195" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldConvertDurationToMillisecondsPrecisely() : void" num="205" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="207" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="shouldReportMetricsOnShutdown() : void" num="210" testsuccess="true" count="1" testduration="0.009" type="method"/>
            <line num="212" count="1" type="stmt"/>
            <line num="213" count="1" type="stmt"/>
            <line num="214" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="214" type="cond"/>
            <line num="215" count="1" type="stmt"/>
            <line num="216" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="222" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="map(String,T) : SortedMap&lt;String, T&gt;" num="231" count="15" type="method"/>
            <line num="232" count="15" type="stmt"/>
            <line num="233" count="15" type="stmt"/>
            <line num="234" count="15" type="stmt"/>
            <line complexity="1" visibility="package" signature="DummyReporter(MetricRegistry,String,MetricFilter,TimeUnit,TimeUnit)" num="241" count="15" type="method"/>
            <line num="242" count="15" type="stmt"/>
            <line complexity="1" visibility="package" signature="DummyReporter(MetricRegistry,String,MetricFilter,TimeUnit,TimeUnit,ScheduledExecutorService)" num="245" count="45" type="method"/>
            <line num="246" count="45" type="stmt"/>
            <line complexity="1" visibility="package" signature="DummyReporter(MetricRegistry,String,MetricFilter,TimeUnit,TimeUnit,ScheduledExecutorService,boolean)" num="249" count="15" type="method"/>
            <line num="250" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="report(SortedMap&lt;String, Gauge&gt;,SortedMap&lt;String, Counter&gt;,SortedMap&lt;String, Histogram&gt;,SortedMap&lt;String, Meter&gt;,SortedMap&lt;String, Timer&gt;) : void" num="253" count="51" type="method"/>
            <line num="256" count="51" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/test/java/com/codahale/metrics/SharedMetricRegistriesTest.java" name="SharedMetricRegistriesTest.java">
            <metrics coveredelements="33" coveredconditionals="0" complexity="9" loc="95" coveredmethods="7" methods="9" elements="42" classes="1" ncloc="76" statements="33" conditionals="0" coveredstatements="26"/>
            <class name="SharedMetricRegistriesTest">
               <metrics coveredelements="33" complexity="9" methods="9" testruns="8" statements="33" coveredconditionals="0" coveredmethods="7" elements="42" testfailures="2" testduration="0.012" conditionals="0" coveredstatements="26" testpasses="6"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="16" count="8" type="method"/>
            <line num="18" count="8" type="stmt"/>
            <line num="19" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="memorizesRegistriesByName() : void" num="22" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasASetOfNames() : void" num="31" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="removesRegistries() : void" num="39" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="clearsRegistries() : void" num="52" testsuccess="true" count="1" testduration="0.008" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="errorsWhenDefaultUnset() : void" num="63" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createsDefaultRegistries() : void" num="70" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="errorsWhenDefaultAlreadySet() : void" num="79" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setsDefaultExistingRegistries() : void" num="87" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/test/java/com/codahale/metrics/Slf4jReporterTest.java" name="Slf4jReporterTest.java">
            <metrics coveredelements="139" coveredconditionals="0" complexity="29" loc="362" coveredmethods="29" methods="29" elements="139" classes="1" ncloc="288" statements="110" conditionals="0" coveredstatements="110"/>
            <class name="Slf4jReporterTest">
               <metrics coveredelements="139" complexity="29" methods="29" testruns="16" statements="110" coveredconditionals="0" coveredmethods="29" elements="139" testfailures="0" testduration="0.04600000000000001" conditionals="0" coveredstatements="110" testpasses="16"/>
            </class>
            <line complexity="1" visibility="private" signature="infoReporter() : Slf4jReporter" num="40" count="6" type="method"/>
            <line num="41" count="6" type="stmt"/>
            <line complexity="1" visibility="private" signature="errorReporter() : Slf4jReporter" num="53" count="10" type="method"/>
            <line num="54" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsGaugeValuesAtErrorDefault() : void" num="65" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsGaugeValuesAtErrorAllDisabled() : void" num="70" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="reportsGaugeValuesAtError() : void" num="76" count="2" type="method"/>
            <line num="77" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="timer() : Timer" num="88" count="4" type="method"/>
            <line num="89" count="4" type="stmt"/>
            <line num="90" count="4" type="stmt"/>
            <line num="92" count="4" type="stmt"/>
            <line num="93" count="4" type="stmt"/>
            <line num="94" count="4" type="stmt"/>
            <line num="95" count="4" type="stmt"/>
            <line num="97" count="4" type="stmt"/>
            <line num="98" count="4" type="stmt"/>
            <line num="99" count="4" type="stmt"/>
            <line num="100" count="4" type="stmt"/>
            <line num="101" count="4" type="stmt"/>
            <line num="102" count="4" type="stmt"/>
            <line num="103" count="4" type="stmt"/>
            <line num="104" count="4" type="stmt"/>
            <line num="105" count="4" type="stmt"/>
            <line num="106" count="4" type="stmt"/>
            <line num="107" count="4" type="stmt"/>
            <line num="110" count="4" type="stmt"/>
            <line num="111" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="histogram() : Histogram" num="114" count="4" type="method"/>
            <line num="115" count="4" type="stmt"/>
            <line num="116" count="4" type="stmt"/>
            <line num="118" count="4" type="stmt"/>
            <line num="119" count="4" type="stmt"/>
            <line num="120" count="4" type="stmt"/>
            <line num="121" count="4" type="stmt"/>
            <line num="122" count="4" type="stmt"/>
            <line num="123" count="4" type="stmt"/>
            <line num="124" count="4" type="stmt"/>
            <line num="125" count="4" type="stmt"/>
            <line num="126" count="4" type="stmt"/>
            <line num="127" count="4" type="stmt"/>
            <line num="128" count="4" type="stmt"/>
            <line num="130" count="4" type="stmt"/>
            <line num="131" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="meter() : Meter" num="134" count="4" type="method"/>
            <line num="135" count="4" type="stmt"/>
            <line num="136" count="4" type="stmt"/>
            <line num="137" count="4" type="stmt"/>
            <line num="138" count="4" type="stmt"/>
            <line num="139" count="4" type="stmt"/>
            <line num="140" count="4" type="stmt"/>
            <line num="141" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="counter() : Counter" num="144" count="4" type="method"/>
            <line num="145" count="4" type="stmt"/>
            <line num="146" count="4" type="stmt"/>
            <line num="147" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsCounterValuesAtErrorDefault() : void" num="150" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="152" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsCounterValuesAtErrorAllDisabled() : void" num="155" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="reportsCounterValuesAtError() : void" num="161" count="2" type="method"/>
            <line num="162" count="2" type="stmt"/>
            <line num="163" count="2" type="stmt"/>
            <line num="165" count="2" type="stmt"/>
            <line num="171" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsHistogramValuesAtErrorDefault() : void" num="174" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="176" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsHistogramValuesAtErrorWithDisabledMetricAttributes() : void" num="180" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="reportsHistogramValuesAtError(String) : void" num="187" count="2" type="method"/>
            <line num="188" count="2" type="stmt"/>
            <line num="189" count="2" type="stmt"/>
            <line num="191" count="2" type="stmt"/>
            <line num="197" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsMeterValuesAtErrorDefault() : void" num="200" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="202" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsMeterValuesAtErrorWithDisabledMetricAttributes() : void" num="206" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="208" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="reportsMeterValuesAtError(String) : void" num="213" count="2" type="method"/>
            <line num="214" count="2" type="stmt"/>
            <line num="215" count="2" type="stmt"/>
            <line num="217" count="2" type="stmt"/>
            <line num="223" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsTimerValuesAtErrorDefault() : void" num="227" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="229" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsTimerValuesAtErrorWithDisabledMetricAttributes() : void" num="235" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="237" count="1" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="reportsTimerValuesAtError(String) : void" num="243" count="2" type="method"/>
            <line num="244" count="2" type="stmt"/>
            <line num="246" count="2" type="stmt"/>
            <line num="248" count="2" type="stmt"/>
            <line num="254" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsGaugeValuesDefault() : void" num="257" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="259" count="1" type="stmt"/>
            <line num="260" count="1" type="stmt"/>
            <line num="266" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsCounterValuesDefault() : void" num="270" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="272" count="1" type="stmt"/>
            <line num="273" count="1" type="stmt"/>
            <line num="275" count="1" type="stmt"/>
            <line num="281" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsHistogramValuesDefault() : void" num="284" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="286" count="1" type="stmt"/>
            <line num="287" count="1" type="stmt"/>
            <line num="289" count="1" type="stmt"/>
            <line num="295" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsMeterValuesDefault() : void" num="299" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="301" count="1" type="stmt"/>
            <line num="302" count="1" type="stmt"/>
            <line num="304" count="1" type="stmt"/>
            <line num="310" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsTimerValuesDefault() : void" num="314" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="316" count="1" type="stmt"/>
            <line num="317" count="1" type="stmt"/>
            <line num="319" count="1" type="stmt"/>
            <line num="325" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsAllMetricsDefault() : void" num="331" testsuccess="true" count="1" testduration="0.011" type="method"/>
            <line num="333" count="1" type="stmt"/>
            <line num="335" count="1" type="stmt"/>
            <line num="341" count="1" type="stmt"/>
            <line num="342" count="1" type="stmt"/>
            <line num="343" count="1" type="stmt"/>
            <line num="345" count="1" type="stmt"/>
            <line num="347" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="map() : SortedMap&lt;String, T&gt;" num="352" count="60" type="method"/>
            <line num="353" count="60" type="stmt"/>
            <line complexity="1" visibility="private" signature="map(String,T) : SortedMap&lt;String, T&gt;" num="356" count="20" type="method"/>
            <line num="357" count="20" type="stmt"/>
            <line num="358" count="20" type="stmt"/>
            <line num="359" count="20" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/test/java/com/codahale/metrics/SlidingTimeWindowArrayReservoirTest.java" name="SlidingTimeWindowArrayReservoirTest.java">
            <metrics coveredelements="78" coveredconditionals="14" complexity="11" loc="150" coveredmethods="4" methods="4" elements="78" classes="1" ncloc="102" statements="60" conditionals="14" coveredstatements="60"/>
            <class name="SlidingTimeWindowArrayReservoirTest">
               <metrics coveredelements="78" complexity="11" methods="4" testruns="4" statements="60" coveredconditionals="14" coveredmethods="4" elements="78" testfailures="0" testduration="1.843" conditionals="14" coveredstatements="60" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="storesMeasurementsWithDuplicateTicks() : void" num="18" testsuccess="true" count="1" testduration="0.014" type="method"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="boundsMeasurementsToATimeWindow() : void" num="32" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="comparisonResultsTest() : void" num="56" testsuccess="true" count="1" testduration="0.885" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line falsecount="1" truecount="1000000" num="68" type="cond"/>
            <line num="69" count="1000000" type="stmt"/>
            <line num="70" count="1000000" type="stmt"/>
            <line num="71" count="1000000" type="stmt"/>
            <line num="72" count="1000000" type="stmt"/>
            <line falsecount="989979" truecount="10021" num="72" type="cond"/>
            <line num="73" count="10021" type="stmt"/>
            <line num="74" count="10021" type="stmt"/>
            <line num="75" count="10021" type="stmt"/>
            <line num="77" count="1000000" type="stmt"/>
            <line falsecount="949969" truecount="50031" num="77" type="cond"/>
            <line num="78" count="50031" type="stmt"/>
            <line complexity="5" visibility="public" signature="testGetTickOverflow() : void" num="83" testsuccess="true" count="1" testduration="0.942" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="93" count="9" type="stmt"/>
            <line num="97" count="72" type="stmt"/>
            <line num="98" count="72" type="stmt"/>
            <line num="99" count="72" type="stmt"/>
            <line num="102" count="72" type="stmt"/>
            <line num="103" count="72" type="stmt"/>
            <line num="104" count="72" type="stmt"/>
            <line num="106" count="27744" type="stmt"/>
            <line falsecount="27744" truecount="4005540" num="106" type="cond"/>
            <line num="107" count="4005540" type="stmt"/>
            <line num="108" count="4005540" type="stmt"/>
            <line num="112" count="27744" type="stmt"/>
            <line falsecount="24906" truecount="2838" num="112" type="cond"/>
            <line num="113" count="2838" type="stmt"/>
            <line num="119" count="27744" type="stmt"/>
            <line num="122" count="27744" type="stmt"/>
            <line falsecount="18432" truecount="9312" num="122" type="cond"/>
            <line num="123" count="9312" type="stmt"/>
            <line falsecount="9240" truecount="72" num="123" type="cond"/>
            <line num="124" count="72" type="stmt"/>
            <line num="130" count="72" type="stmt"/>
            <line num="141" count="72" type="stmt"/>
            <line num="144" count="72" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/test/java/com/codahale/metrics/SlidingTimeWindowMovingAveragesTest.java" name="SlidingTimeWindowMovingAveragesTest.java">
            <metrics coveredelements="85" coveredconditionals="8" complexity="14" loc="168" coveredmethods="10" methods="10" elements="85" classes="1" ncloc="113" statements="67" conditionals="8" coveredstatements="67"/>
            <class name="SlidingTimeWindowMovingAveragesTest">
               <metrics coveredelements="85" complexity="14" methods="10" testruns="9" statements="67" coveredconditionals="8" coveredmethods="10" elements="85" testfailures="0" testduration="0.023" conditionals="8" coveredstatements="67" testpasses="9"/>
            </class>
            <line complexity="1" visibility="public" signature="init() : void" num="19" count="9" type="method"/>
            <line num="21" count="9" type="stmt"/>
            <line num="22" count="9" type="stmt"/>
            <line num="23" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="normalizeIndex() : void" num="26" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="29" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="calculateIndexOfTick() : void" num="43" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="mark_max_without_cleanup() : void" num="52" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line falsecount="1" truecount="900" num="60" type="cond"/>
            <line num="61" count="900" type="stmt"/>
            <line num="62" count="900" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="mark_first_cleanup() : void" num="73" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line falsecount="1" truecount="901" num="81" type="cond"/>
            <line num="82" count="901" type="stmt"/>
            <line num="83" count="901" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="mark_10_values() : void" num="94" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="98" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="100" type="cond"/>
            <line num="101" count="10" type="stmt"/>
            <line num="102" count="10" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="mark_1000_values() : void" num="111" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="114" count="1" type="stmt"/>
            <line falsecount="1" truecount="1000" num="114" type="cond"/>
            <line num="115" count="1000" type="stmt"/>
            <line num="116" count="1000" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="cleanup_pause_shorter_than_window() : void" num="125" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="128" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="cleanup_window_wrap_around() : void" num="137" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="cleanup_pause_longer_than_two_windows() : void" num="157" testsuccess="true" count="1" testduration="0.008" type="method"/>
            <line num="160" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/test/java/com/codahale/metrics/SlidingTimeWindowReservoirTest.java" name="SlidingTimeWindowReservoirTest.java">
            <metrics coveredelements="52" coveredconditionals="8" complexity="7" loc="119" coveredmethods="3" methods="3" elements="52" classes="1" ncloc="72" statements="41" conditionals="8" coveredstatements="41"/>
            <class name="SlidingTimeWindowReservoirTest">
               <metrics coveredelements="52" complexity="7" methods="3" testruns="3" statements="41" coveredconditionals="8" coveredmethods="3" elements="52" testfailures="0" testduration="1.966" conditionals="8" coveredstatements="41" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="storesMeasurementsWithDuplicateTicks() : void" num="14" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="16" count="1" type="stmt"/>
            <line num="17" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="boundsMeasurementsToATimeWindow() : void" num="28" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="5" visibility="public" signature="testGetTickOverflow() : void" num="54" testsuccess="true" count="1" testduration="1.965" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="63" count="9" type="stmt"/>
            <line num="66" count="72" type="stmt"/>
            <line num="69" count="72" type="stmt"/>
            <line num="72" count="72" type="stmt"/>
            <line num="73" count="72" type="stmt"/>
            <line num="75" count="72" type="stmt"/>
            <line num="76" count="72" type="stmt"/>
            <line num="78" count="27744" type="stmt"/>
            <line falsecount="27744" truecount="4005540" num="78" type="cond"/>
            <line num="79" count="4005540" type="stmt"/>
            <line num="82" count="27744" type="stmt"/>
            <line falsecount="24906" truecount="2838" num="82" type="cond"/>
            <line num="83" count="2838" type="stmt"/>
            <line num="89" count="27744" type="stmt"/>
            <line num="92" count="27744" type="stmt"/>
            <line falsecount="18432" truecount="9312" num="92" type="cond"/>
            <line num="93" count="9312" type="stmt"/>
            <line falsecount="9240" truecount="72" num="93" type="cond"/>
            <line num="94" count="72" type="stmt"/>
            <line num="99" count="72" type="stmt"/>
            <line num="110" count="72" type="stmt"/>
            <line num="113" count="72" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/test/java/com/codahale/metrics/SlidingWindowReservoirTest.java" name="SlidingWindowReservoirTest.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="2" loc="29" coveredmethods="2" methods="2" elements="10" classes="1" ncloc="22" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="SlidingWindowReservoirTest">
               <metrics coveredelements="10" complexity="2" methods="2" testruns="2" statements="8" coveredconditionals="0" coveredmethods="2" elements="10" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="8" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="handlesSmallDataStreams() : void" num="10" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="12" count="1" type="stmt"/>
            <line num="13" count="1" type="stmt"/>
            <line num="15" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="onlyKeepsTheMostRecentFromBigDataStreams() : void" num="19" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="21" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/test/java/com/codahale/metrics/TimerTest.java" name="TimerTest.java">
            <metrics coveredelements="58" coveredconditionals="0" complexity="14" loc="161" coveredmethods="12" methods="12" elements="58" classes="1" ncloc="117" statements="46" conditionals="0" coveredstatements="46"/>
            <class name="TimerTest">
               <metrics coveredelements="58" complexity="14" methods="12" testruns="11" statements="46" coveredconditionals="0" coveredmethods="12" elements="58" testfailures="0" testduration="0.14200000000000002" conditionals="0" coveredstatements="46" testpasses="11"/>
            </class>
            <line complexity="1" visibility="public" signature="getTick() : long" num="22" count="42" type="method"/>
            <line num="24" count="42" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasRates() : void" num="29" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="updatesTheCountOnUpdates() : void" num="47" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="timesCallableInstances() : void" num="58" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="timesSuppliedInstances() : void" num="71" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="timesRunnableInstances() : void" num="84" testsuccess="true" count="1" testduration="0.013" type="method"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="timesContexts() : void" num="98" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="100" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnsTheSnapshotFromTheReservoir() : void" num="108" testsuccess="true" count="1" testduration="0.045" type="method"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ignoresNegativeValues() : void" num="117" testsuccess="true" count="1" testduration="0.073" type="method"/>
            <line num="119" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="java8Duration() : void" num="127" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="129" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="java8NegativeDuration() : void" num="136" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="138" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="tryWithResourcesWork() : void" num="145" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="147" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/test/java/com/codahale/metrics/UniformReservoirTest.java" name="UniformReservoirTest.java">
            <metrics coveredelements="11" coveredconditionals="2" complexity="2" loc="31" coveredmethods="1" methods="1" elements="11" classes="1" ncloc="23" statements="8" conditionals="2" coveredstatements="8"/>
            <class name="UniformReservoirTest">
               <metrics coveredelements="11" complexity="2" methods="1" testruns="1" statements="8" coveredconditionals="2" coveredmethods="1" elements="11" testfailures="0" testduration="0.002" conditionals="2" coveredstatements="8" testpasses="1"/>
            </class>
            <line complexity="2" visibility="public" signature="aReservoirOf100OutOf1000Elements() : void" num="8" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="11" count="1" type="stmt"/>
            <line num="12" count="1" type="stmt"/>
            <line falsecount="1" truecount="1000" num="12" type="cond"/>
            <line num="13" count="1000" type="stmt"/>
            <line num="16" count="1" type="stmt"/>
            <line num="18" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="100" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/test/java/com/codahale/metrics/UniformSnapshotTest.java" name="UniformSnapshotTest.java">
            <metrics coveredelements="73" coveredconditionals="2" complexity="26" loc="198" coveredmethods="25" methods="25" elements="73" classes="1" ncloc="153" statements="46" conditionals="2" coveredstatements="46"/>
            <class name="UniformSnapshotTest">
               <metrics coveredelements="73" complexity="26" methods="25" testruns="25" statements="46" coveredconditionals="2" coveredmethods="25" elements="73" testfailures="0" testduration="0.004" conditionals="2" coveredstatements="46" testpasses="25"/>
            </class>
            <line complexity="1" visibility="public" signature="smallQuantilesAreTheFirstValue() : void" num="18" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="20" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="bigQuantilesAreTheLastValue() : void" num="24" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="26" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="disallowsNotANumberQuantile() : void" num="30" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="disallowsNegativeQuantile() : void" num="35" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="disallowsQuantileOverOne() : void" num="40" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAMedian() : void" num="45" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAp75() : void" num="50" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAp95() : void" num="55" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAp98() : void" num="60" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAp99() : void" num="65" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAp999() : void" num="70" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasValues() : void" num="75" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasASize() : void" num="81" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="83" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="canAlsoBeCreatedFromACollectionOfLongs() : void" num="87" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="89" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="correctlyCreatedFromCollectionWithWeakIterator() : void" num="95" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="97" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line falsecount="1" truecount="609" num="106" type="cond"/>
            <line num="107" count="609" type="stmt"/>
            <line num="108" count="609" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="dumpsToAStream() : void" num="125" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="127" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="calculatesTheMinimumValue() : void" num="135" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="137" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="calculatesTheMaximumValue() : void" num="141" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="143" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="calculatesTheMeanValue() : void" num="147" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="149" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="calculatesTheStdDev() : void" num="153" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="155" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="calculatesAMinOfZeroForAnEmptySnapshot() : void" num="159" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="161" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="calculatesAMaxOfZeroForAnEmptySnapshot() : void" num="167" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="169" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="calculatesAMeanOfZeroForAnEmptySnapshot() : void" num="175" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="177" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="calculatesAStdDevOfZeroForAnEmptySnapshot() : void" num="183" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="185" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="calculatesAStdDevOfZeroForASingletonSnapshot() : void" num="191" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="193" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-core/src/test/java/com/codahale/metrics/WeightedSnapshotTest.java" name="WeightedSnapshotTest.java">
            <metrics coveredelements="78" coveredconditionals="3" complexity="30" loc="224" coveredmethods="28" methods="28" elements="80" classes="1" ncloc="175" statements="48" conditionals="4" coveredstatements="47"/>
            <class name="WeightedSnapshotTest">
               <metrics coveredelements="78" complexity="30" methods="28" testruns="27" statements="48" coveredconditionals="3" coveredmethods="28" elements="80" testfailures="0" testduration="0.08" conditionals="4" coveredstatements="47" testpasses="27"/>
            </class>
            <line complexity="3" visibility="private" signature="weightedArray(long[],double[]) : List&lt;WeightedSample&gt;" num="18" count="36" type="method"/>
            <line num="19" count="36" type="stmt"/>
            <line falsecount="36" truecount="0" num="19" type="cond"/>
            <line num="20" count="0" type="stmt"/>
            <line num="23" count="36" type="stmt"/>
            <line num="24" count="36" type="stmt"/>
            <line falsecount="36" truecount="152" num="24" type="cond"/>
            <line num="25" count="152" type="stmt"/>
            <line num="28" count="36" type="stmt"/>
            <line complexity="1" visibility="public" signature="smallQuantilesAreTheFirstValue() : void" num="34" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="bigQuantilesAreTheLastValue() : void" num="40" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="disallowsNotANumberQuantile() : void" num="46" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="disallowsNegativeQuantile() : void" num="51" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="disallowsQuantileOverOne() : void" num="56" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAMedian() : void" num="61" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAp75() : void" num="66" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAp95() : void" num="71" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAp98() : void" num="76" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="78" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAp99() : void" num="81" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="83" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAp999() : void" num="86" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasValues() : void" num="91" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="93" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasASize() : void" num="97" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="99" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="worksWithUnderestimatedCollections() : void" num="103" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="worksWithOverestimatedCollections() : void" num="114" testsuccess="true" count="1" testduration="0.074" type="method"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="dumpsToAStream() : void" num="125" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="127" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="calculatesTheMinimumValue() : void" num="135" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="137" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="calculatesTheMaximumValue() : void" num="141" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="143" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="calculatesTheMeanValue() : void" num="147" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="149" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="calculatesTheStdDev() : void" num="153" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="155" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="calculatesAMinOfZeroForAnEmptySnapshot() : void" num="159" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="161" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="calculatesAMaxOfZeroForAnEmptySnapshot() : void" num="168" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="170" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="calculatesAMeanOfZeroForAnEmptySnapshot() : void" num="177" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="179" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="calculatesAStdDevOfZeroForAnEmptySnapshot() : void" num="186" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="188" count="1" type="stmt"/>
            <line num="191" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="calculatesAStdDevOfZeroForASingletonSnapshot() : void" num="195" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="197" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="expectNoOverflowForLowWeights() : void" num="204" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="206" count="1" type="stmt"/>
            <line num="213" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="doesNotProduceNaNValues() : void" num="217" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="219" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics.jersey2">
         <metrics coveredelements="198" complexity="46" loc="700" methods="41" classes="7" statements="162" coveredconditionals="0" coveredmethods="41" elements="203" ncloc="526" files="7" conditionals="0" coveredstatements="157"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jersey2/src/test/java/com/codahale/metrics/jersey2/SingletonFilterMetricsJerseyTest.java" name="SingletonFilterMetricsJerseyTest.java">
            <metrics coveredelements="55" coveredconditionals="0" complexity="12" loc="162" coveredmethods="12" methods="12" elements="55" classes="1" ncloc="124" statements="43" conditionals="0" coveredstatements="43"/>
            <class name="SingletonFilterMetricsJerseyTest">
               <metrics coveredelements="55" complexity="12" methods="12" testruns="9" statements="43" coveredconditionals="0" coveredmethods="12" elements="55" testfailures="0" testduration="0.11199999999999999" conditionals="0" coveredstatements="43" testpasses="9"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 24()" num="24" count="1" type="method"/>
            <line num="25" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="configure() : Application" num="32" count="9" type="method"/>
            <line num="34" count="9" type="stmt"/>
            <line num="35" count="9" type="stmt"/>
            <line num="36" count="9" type="stmt"/>
            <line num="37" count="9" type="stmt"/>
            <line num="38" count="9" type="stmt"/>
            <line num="39" count="9" type="stmt"/>
            <line num="40" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="resetClock() : void" num="43" count="9" type="method"/>
            <line num="45" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="timedMethodsAreTimed() : void" num="48" testsuccess="true" count="1" testduration="0.012" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="explicitNamesAreTimed() : void" num="61" testsuccess="true" count="1" testduration="0.014" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="absoluteNamesAreTimed() : void" num="74" testsuccess="true" count="1" testduration="0.012" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="requestFiltersOfTimedMethodsAreTimed() : void" num="87" testsuccess="true" count="1" testduration="0.012" type="method"/>
            <line num="89" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="responseFiltersOfTimedMethodsAreTimed() : void" num="100" testsuccess="true" count="1" testduration="0.011" type="method"/>
            <line num="102" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="totalTimeOfTimedMethodsIsTimed() : void" num="112" testsuccess="true" count="1" testduration="0.014" type="method"/>
            <line num="114" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="requestFiltersOfNamedMethodsAreTimed() : void" num="125" testsuccess="true" count="1" testduration="0.011" type="method"/>
            <line num="127" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="requestFiltersOfAbsoluteMethodsAreTimed() : void" num="138" testsuccess="true" count="1" testduration="0.013" type="method"/>
            <line num="140" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="subResourcesFromLocatorsRegisterMetrics() : void" num="150" testsuccess="true" count="1" testduration="0.013" type="method"/>
            <line num="152" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jersey2/src/test/java/com/codahale/metrics/jersey2/SingletonMetricsExceptionMeteredPerClassJerseyTest.java" name="SingletonMetricsExceptionMeteredPerClassJerseyTest.java">
            <metrics coveredelements="24" coveredconditionals="0" complexity="6" loc="98" coveredmethods="4" methods="4" elements="26" classes="1" ncloc="72" statements="22" conditionals="0" coveredstatements="20"/>
            <class name="SingletonMetricsExceptionMeteredPerClassJerseyTest">
               <metrics coveredelements="24" complexity="6" methods="4" testruns="2" statements="22" coveredconditionals="0" coveredmethods="4" elements="26" testfailures="0" testduration="0.04" conditionals="0" coveredstatements="20" testpasses="2"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 26()" num="26" count="1" type="method"/>
            <line num="27" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="configure() : Application" num="32" count="2" type="method"/>
            <line num="34" count="2" type="stmt"/>
            <line num="36" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="exceptionMeteredMethodsAreExceptionMetered() : void" num="44" testsuccess="true" count="1" testduration="0.017" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="subresourcesFromLocatorsRegisterMetrics() : void" num="71" testsuccess="true" count="1" testduration="0.023" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jersey2/src/test/java/com/codahale/metrics/jersey2/SingletonMetricsJerseyTest.java" name="SingletonMetricsJerseyTest.java">
            <metrics coveredelements="47" coveredconditionals="0" complexity="10" loc="156" coveredmethods="8" methods="8" elements="49" classes="1" ncloc="123" statements="41" conditionals="0" coveredstatements="39"/>
            <class name="SingletonMetricsJerseyTest">
               <metrics coveredelements="47" complexity="10" methods="8" testruns="6" statements="41" coveredconditionals="0" coveredmethods="8" elements="49" testfailures="0" testduration="0.092" conditionals="0" coveredstatements="39" testpasses="6"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 30()" num="30" count="1" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="configure() : Application" num="36" count="6" type="method"/>
            <line num="38" count="6" type="stmt"/>
            <line num="40" count="6" type="stmt"/>
            <line num="41" count="6" type="stmt"/>
            <line num="42" count="6" type="stmt"/>
            <line num="44" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="timedMethodsAreTimed() : void" num="47" testsuccess="true" count="1" testduration="0.013" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="meteredMethodsAreMetered() : void" num="59" testsuccess="true" count="1" testduration="0.014" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="exceptionMeteredMethodsAreExceptionMetered() : void" num="70" testsuccess="true" count="1" testduration="0.014" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="responseMeteredMethodsAreMetered() : void" num="97" testsuccess="true" count="1" testduration="0.014" type="method"/>
            <line num="99" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testResourceNotFound() : void" num="132" testsuccess="true" count="1" testduration="0.017" type="method"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="subresourcesFromLocatorsRegisterMetrics() : void" num="145" testsuccess="true" count="1" testduration="0.02" type="method"/>
            <line num="147" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jersey2/src/test/java/com/codahale/metrics/jersey2/SingletonMetricsMeteredPerClassJerseyTest.java" name="SingletonMetricsMeteredPerClassJerseyTest.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="4" loc="66" coveredmethods="4" methods="4" elements="16" classes="1" ncloc="45" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="SingletonMetricsMeteredPerClassJerseyTest">
               <metrics coveredelements="16" complexity="4" methods="4" testruns="2" statements="12" coveredconditionals="0" coveredmethods="4" elements="16" testfailures="0" testduration="0.056999999999999995" conditionals="0" coveredstatements="12" testpasses="2"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 23()" num="23" count="1" type="method"/>
            <line num="24" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="configure() : Application" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
            <line num="33" count="2" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line num="36" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="meteredPerClassMethodsAreMetered() : void" num="41" testsuccess="true" count="1" testduration="0.027" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="subresourcesFromLocatorsRegisterMetrics() : void" num="53" testsuccess="true" count="1" testduration="0.03" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jersey2/src/test/java/com/codahale/metrics/jersey2/SingletonMetricsResponseMeteredPerClassJerseyTest.java" name="SingletonMetricsResponseMeteredPerClassJerseyTest.java">
            <metrics coveredelements="38" coveredconditionals="0" complexity="9" loc="139" coveredmethods="8" methods="8" elements="39" classes="1" ncloc="108" statements="31" conditionals="0" coveredstatements="30"/>
            <class name="SingletonMetricsResponseMeteredPerClassJerseyTest">
               <metrics coveredelements="38" complexity="9" methods="8" testruns="6" statements="31" coveredconditionals="0" coveredmethods="8" elements="39" testfailures="0" testduration="0.30500000000000005" conditionals="0" coveredstatements="30" testpasses="6"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 25()" num="25" count="1" type="method"/>
            <line num="26" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="configure() : Application" num="31" count="6" type="method"/>
            <line num="33" count="6" type="stmt"/>
            <line num="36" count="6" type="stmt"/>
            <line num="38" count="6" type="stmt"/>
            <line num="39" count="6" type="stmt"/>
            <line num="40" count="6" type="stmt"/>
            <line num="42" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="responseMetered2xxPerClassMethodsAreMetered() : void" num="45" testsuccess="true" count="1" testduration="0.023" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="responseMetered4xxPerClassMethodsAreMetered() : void" num="59" testsuccess="true" count="1" testduration="0.029" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="responseMetered5xxPerClassMethodsAreMetered() : void" num="81" testsuccess="true" count="1" testduration="0.187" type="method"/>
            <line num="83" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="responseMeteredMappedExceptionPerClassMethodsAreMetered() : void" num="95" testsuccess="true" count="1" testduration="0.018" type="method"/>
            <line num="97" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="responseMeteredUnmappedExceptionPerClassMethodsAreMetered() : void" num="109" testsuccess="true" count="1" testduration="0.02" type="method"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="subresourcesFromLocatorsRegisterMetrics() : void" num="127" testsuccess="true" count="1" testduration="0.028" type="method"/>
            <line num="129" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jersey2/src/test/java/com/codahale/metrics/jersey2/SingletonMetricsTimedPerClassJerseyTest.java" name="SingletonMetricsTimedPerClassJerseyTest.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="4" loc="66" coveredmethods="4" methods="4" elements="16" classes="1" ncloc="45" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="SingletonMetricsTimedPerClassJerseyTest">
               <metrics coveredelements="16" complexity="4" methods="4" testruns="2" statements="12" coveredconditionals="0" coveredmethods="4" elements="16" testfailures="0" testduration="0.027" conditionals="0" coveredstatements="12" testpasses="2"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 23()" num="23" count="1" type="method"/>
            <line num="24" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="configure() : Application" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
            <line num="33" count="2" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line num="36" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="timedPerClassMethodsAreTimed() : void" num="41" testsuccess="true" count="1" testduration="0.012" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="subresourcesFromLocatorsRegisterMetrics() : void" num="53" testsuccess="true" count="1" testduration="0.015" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jersey2/src/test/java/com/codahale/metrics/jersey2/TestClock.java" name="TestClock.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="13" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="TestClock">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="getTick() : long" num="9" count="332" type="method"/>
            <line num="11" count="332" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics.jersey2.resources">
         <metrics coveredelements="82" complexity="36" loc="392" methods="33" classes="13" statements="43" coveredconditionals="6" coveredmethods="33" elements="82" ncloc="321" files="12" conditionals="6" coveredstatements="43"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jersey2/src/test/java/com/codahale/metrics/jersey2/resources/InstrumentedFilteredResource.java" name="InstrumentedFilteredResource.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="6" loc="62" coveredmethods="6" methods="6" elements="16" classes="2" ncloc="50" statements="10" conditionals="0" coveredstatements="10"/>
            <class name="InstrumentedFilteredResource">
               <metrics coveredelements="13" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="13" statements="8" conditionals="0" coveredstatements="8"/>
            </class>
            <class name="InstrumentedFilteredResource.InstrumentedFilteredSubResource">
               <metrics coveredelements="3" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="InstrumentedFilteredResource(TestClock)" num="17" count="9" type="method"/>
            <line num="18" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="timed() : String" num="21" count="4" type="method"/>
            <line num="25" count="4" type="stmt"/>
            <line num="26" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="named() : String" num="29" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
            <line num="34" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="absolute() : String" num="37" count="2" type="method"/>
            <line num="41" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="locateSubResource() : InstrumentedFilteredSubResource" num="45" count="1" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="timed() : String" num="53" count="1" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jersey2/src/test/java/com/codahale/metrics/jersey2/resources/InstrumentedResource.java" name="InstrumentedResource.java">
            <metrics coveredelements="18" coveredconditionals="2" complexity="8" loc="69" coveredmethods="7" methods="7" elements="18" classes="1" ncloc="60" statements="9" conditionals="2" coveredstatements="9"/>
            <class name="InstrumentedResource">
               <metrics coveredelements="18" coveredconditionals="2" complexity="8" coveredmethods="7" methods="7" elements="18" statements="9" conditionals="2" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="timed() : String" num="20" count="1" type="method"/>
            <line num="24" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="metered() : String" num="27" count="1" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="exceptionMetered(boolean) : String" num="34" count="2" type="method"/>
            <line num="38" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="38" type="cond"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="response2xxMetered() : Response" num="44" count="1" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="response4xxMetered() : Response" num="51" count="1" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="response5xxMetered() : Response" num="58" count="1" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="locateSubResource() : InstrumentedSubResource" num="65" count="1" type="method"/>
            <line num="67" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jersey2/src/test/java/com/codahale/metrics/jersey2/resources/InstrumentedResourceExceptionMeteredPerClass.java" name="InstrumentedResourceExceptionMeteredPerClass.java">
            <metrics coveredelements="8" coveredconditionals="2" complexity="3" loc="32" coveredmethods="2" methods="2" elements="8" classes="1" ncloc="26" statements="4" conditionals="2" coveredstatements="4"/>
            <class name="InstrumentedResourceExceptionMeteredPerClass">
               <metrics coveredelements="8" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="8" statements="4" conditionals="2" coveredstatements="4"/>
            </class>
            <line complexity="2" visibility="public" signature="exceptionMetered(boolean) : String" num="18" count="2" type="method"/>
            <line num="21" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="21" type="cond"/>
            <line num="22" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="locateSubResource() : InstrumentedSubResourceExceptionMeteredPerClass" num="27" count="2" type="method"/>
            <line num="29" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jersey2/src/test/java/com/codahale/metrics/jersey2/resources/InstrumentedResourceMeteredPerClass.java" name="InstrumentedResourceMeteredPerClass.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="26" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="20" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="InstrumentedResourceMeteredPerClass">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="meteredPerClass() : String" num="15" count="1" type="method"/>
            <line num="18" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="locateSubResource() : InstrumentedSubResourceMeteredPerClass" num="21" count="1" type="method"/>
            <line num="23" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jersey2/src/test/java/com/codahale/metrics/jersey2/resources/InstrumentedResourceResponseMeteredPerClass.java" name="InstrumentedResourceResponseMeteredPerClass.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="7" loc="58" coveredmethods="7" methods="7" elements="14" classes="1" ncloc="48" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="InstrumentedResourceResponseMeteredPerClass">
               <metrics coveredelements="14" coveredconditionals="0" complexity="7" coveredmethods="7" methods="7" elements="14" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="responseMetered2xxPerClass() : Response" num="17" count="1" type="method"/>
            <line num="20" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="responseMetered4xxPerClass() : Response" num="23" count="1" type="method"/>
            <line num="26" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="responseMetered5xxPerClass() : Response" num="29" count="1" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="responseMeteredBadRequestPerClass() : String" num="35" count="1" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="responseMeteredRuntimeExceptionPerClass() : String" num="41" count="1" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="responseMeteredTestExceptionPerClass() : String" num="47" count="1" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="locateSubResource() : InstrumentedSubResourceResponseMeteredPerClass" num="53" count="1" type="method"/>
            <line num="55" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jersey2/src/test/java/com/codahale/metrics/jersey2/resources/InstrumentedResourceTimedPerClass.java" name="InstrumentedResourceTimedPerClass.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="26" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="20" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="InstrumentedResourceTimedPerClass">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="timedPerClass() : String" num="15" count="1" type="method"/>
            <line num="18" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="locateSubResource() : InstrumentedSubResourceTimedPerClass" num="21" count="1" type="method"/>
            <line num="23" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jersey2/src/test/java/com/codahale/metrics/jersey2/resources/InstrumentedSubResource.java" name="InstrumentedSubResource.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="20" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="15" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="InstrumentedSubResource">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="timed() : String" num="13" count="1" type="method"/>
            <line num="17" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jersey2/src/test/java/com/codahale/metrics/jersey2/resources/InstrumentedSubResourceExceptionMeteredPerClass.java" name="InstrumentedSubResourceExceptionMeteredPerClass.java">
            <metrics coveredelements="6" coveredconditionals="2" complexity="2" loc="24" coveredmethods="1" methods="1" elements="6" classes="1" ncloc="21" statements="3" conditionals="2" coveredstatements="3"/>
            <class name="InstrumentedSubResourceExceptionMeteredPerClass">
               <metrics coveredelements="6" coveredconditionals="2" complexity="2" coveredmethods="1" methods="1" elements="6" statements="3" conditionals="2" coveredstatements="3"/>
            </class>
            <line complexity="2" visibility="public" signature="exceptionMetered(boolean) : String" num="16" count="2" type="method"/>
            <line num="19" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="19" type="cond"/>
            <line num="20" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jersey2/src/test/java/com/codahale/metrics/jersey2/resources/InstrumentedSubResourceMeteredPerClass.java" name="InstrumentedSubResourceMeteredPerClass.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="18" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="15" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="InstrumentedSubResourceMeteredPerClass">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="meteredPerClass() : String" num="13" count="1" type="method"/>
            <line num="16" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jersey2/src/test/java/com/codahale/metrics/jersey2/resources/InstrumentedSubResourceResponseMeteredPerClass.java" name="InstrumentedSubResourceResponseMeteredPerClass.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="18" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="16" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="InstrumentedSubResourceResponseMeteredPerClass">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="responseMeteredPerClass() : Response" num="13" count="1" type="method"/>
            <line num="16" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jersey2/src/test/java/com/codahale/metrics/jersey2/resources/InstrumentedSubResourceTimedPerClass.java" name="InstrumentedSubResourceTimedPerClass.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="18" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="15" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="InstrumentedSubResourceTimedPerClass">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="timedPerClass() : String" num="13" count="1" type="method"/>
            <line num="16" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jersey2/src/test/java/com/codahale/metrics/jersey2/resources/TestRequestFilter.java" name="TestRequestFilter.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="21" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="15" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="TestRequestFilter">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="TestRequestFilter(TestClock)" num="13" count="9" type="method"/>
            <line num="14" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="filter(ContainerRequestContext) : void" num="17" count="9" type="method"/>
            <line num="19" count="9" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics.jersey2.exception.mapper">
         <metrics coveredelements="2" complexity="1" loc="15" methods="1" classes="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" ncloc="12" files="1" conditionals="0" coveredstatements="1"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jersey2/src/test/java/com/codahale/metrics/jersey2/exception/mapper/TestExceptionMapper.java" name="TestExceptionMapper.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="15" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="12" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="TestExceptionMapper">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="toResponse(TestException) : Response" num="11" count="1" type="method"/>
            <line num="13" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics.jersey2.exception">
         <metrics coveredelements="2" complexity="1" loc="9" methods="1" classes="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" ncloc="7" files="1" conditionals="0" coveredstatements="1"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jersey2/src/test/java/com/codahale/metrics/jersey2/exception/TestException.java" name="TestException.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="9" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="7" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="TestException">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="TestException(String)" num="6" count="1" type="method"/>
            <line num="7" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics.graphite">
         <metrics coveredelements="485" complexity="77" loc="1088" methods="58" classes="6" statements="431" coveredconditionals="2" coveredmethods="58" elements="491" ncloc="896" files="6" conditionals="2" coveredstatements="425"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-graphite/src/test/java/com/codahale/metrics/graphite/GraphiteRabbitMQTest.java" name="GraphiteRabbitMQTest.java">
            <metrics coveredelements="46" coveredconditionals="0" complexity="15" loc="127" coveredmethods="8" methods="8" elements="49" classes="1" ncloc="102" statements="41" conditionals="0" coveredstatements="38"/>
            <class name="GraphiteRabbitMQTest">
               <metrics coveredelements="46" complexity="15" methods="8" testruns="7" statements="41" coveredconditionals="0" coveredmethods="8" elements="49" testfailures="0" testduration="0.044000000000000004" conditionals="0" coveredstatements="38" testpasses="7"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="35" count="7" type="method"/>
            <line num="37" count="7" type="stmt"/>
            <line num="38" count="7" type="stmt"/>
            <line num="39" count="7" type="stmt"/>
            <line num="41" count="7" type="stmt"/>
            <line num="42" count="7" type="stmt"/>
            <line num="43" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldConnectToGraphiteServer() : void" num="48" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="measuresFailures() : void" num="57" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldDisconnectsFromGraphiteServer() : void" num="70" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="shouldNotConnectToGraphiteServerMoreThenOnce() : void" num="78" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldSendMetricsToGraphiteServer() : void" num="89" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldSanitizeAndSendMetricsToGraphiteServer() : void" num="102" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="shouldFailWhenGraphiteHostUnavailable() : void" num="115" testsuccess="true" count="1" testduration="0.04" type="method"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-graphite/src/test/java/com/codahale/metrics/graphite/GraphiteReporterTest.java" name="GraphiteReporterTest.java">
            <metrics coveredelements="270" coveredconditionals="0" complexity="32" loc="554" coveredmethods="28" methods="28" elements="270" classes="1" ncloc="472" statements="242" conditionals="0" coveredstatements="242"/>
            <class name="GraphiteReporterTest">
               <metrics coveredelements="270" complexity="32" methods="28" testruns="19" statements="242" coveredconditionals="0" coveredmethods="28" elements="270" testfailures="0" testduration="0.10800000000000001" conditionals="0" coveredstatements="242" testpasses="19"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="60" count="19" type="method"/>
            <line num="62" count="19" type="stmt"/>
            <line complexity="1" visibility="public" signature="doesNotReportStringGaugeValues() : void" num="65" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsByteGaugeValues() : void" num="82" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsShortGaugeValues() : void" num="99" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="101" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsIntegerGaugeValues() : void" num="116" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="118" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsLongGaugeValues() : void" num="133" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="135" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsFloatGaugeValues() : void" num="150" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="152" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsDoubleGaugeValues() : void" num="167" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="169" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="reportsDoubleGaugeValuesWithCustomFormat() : void" num="184" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="186" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="reportDoubleGaugeValuesUsingCustomFormatter() : void" num="193" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="195" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="reportGaugeValue(GraphiteReporter,double) : void" num="212" count="2" type="method"/>
            <line num="213" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="verifyGraphiteSentCorrectMetricValue(String,String,long) : void" num="220" count="2" type="method"/>
            <line num="221" count="2" type="stmt"/>
            <line num="222" count="2" type="stmt"/>
            <line num="223" count="2" type="stmt"/>
            <line num="224" count="2" type="stmt"/>
            <line num="225" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsBooleanGaugeValues() : void" num="228" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="230" count="1" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line num="242" count="1" type="stmt"/>
            <line num="243" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line num="246" count="1" type="stmt"/>
            <line num="247" count="1" type="stmt"/>
            <line num="248" count="1" type="stmt"/>
            <line num="249" count="1" type="stmt"/>
            <line num="251" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsCounters() : void" num="254" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="256" count="1" type="stmt"/>
            <line num="257" count="1" type="stmt"/>
            <line num="259" count="1" type="stmt"/>
            <line num="265" count="1" type="stmt"/>
            <line num="266" count="1" type="stmt"/>
            <line num="267" count="1" type="stmt"/>
            <line num="268" count="1" type="stmt"/>
            <line num="269" count="1" type="stmt"/>
            <line num="271" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsHistograms() : void" num="274" testsuccess="true" count="1" testduration="0.028" type="method"/>
            <line num="276" count="1" type="stmt"/>
            <line num="277" count="1" type="stmt"/>
            <line num="279" count="1" type="stmt"/>
            <line num="280" count="1" type="stmt"/>
            <line num="281" count="1" type="stmt"/>
            <line num="282" count="1" type="stmt"/>
            <line num="283" count="1" type="stmt"/>
            <line num="284" count="1" type="stmt"/>
            <line num="285" count="1" type="stmt"/>
            <line num="286" count="1" type="stmt"/>
            <line num="287" count="1" type="stmt"/>
            <line num="288" count="1" type="stmt"/>
            <line num="289" count="1" type="stmt"/>
            <line num="291" count="1" type="stmt"/>
            <line num="293" count="1" type="stmt"/>
            <line num="299" count="1" type="stmt"/>
            <line num="300" count="1" type="stmt"/>
            <line num="301" count="1" type="stmt"/>
            <line num="302" count="1" type="stmt"/>
            <line num="303" count="1" type="stmt"/>
            <line num="304" count="1" type="stmt"/>
            <line num="305" count="1" type="stmt"/>
            <line num="306" count="1" type="stmt"/>
            <line num="307" count="1" type="stmt"/>
            <line num="308" count="1" type="stmt"/>
            <line num="309" count="1" type="stmt"/>
            <line num="310" count="1" type="stmt"/>
            <line num="311" count="1" type="stmt"/>
            <line num="312" count="1" type="stmt"/>
            <line num="313" count="1" type="stmt"/>
            <line num="315" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsMeters() : void" num="318" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="320" count="1" type="stmt"/>
            <line num="321" count="1" type="stmt"/>
            <line num="322" count="1" type="stmt"/>
            <line num="323" count="1" type="stmt"/>
            <line num="324" count="1" type="stmt"/>
            <line num="325" count="1" type="stmt"/>
            <line num="327" count="1" type="stmt"/>
            <line num="333" count="1" type="stmt"/>
            <line num="334" count="1" type="stmt"/>
            <line num="335" count="1" type="stmt"/>
            <line num="336" count="1" type="stmt"/>
            <line num="337" count="1" type="stmt"/>
            <line num="338" count="1" type="stmt"/>
            <line num="339" count="1" type="stmt"/>
            <line num="340" count="1" type="stmt"/>
            <line num="341" count="1" type="stmt"/>
            <line num="343" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsMetersInMinutes() : void" num="346" testsuccess="true" count="1" testduration="0.021" type="method"/>
            <line num="348" count="1" type="stmt"/>
            <line num="349" count="1" type="stmt"/>
            <line num="350" count="1" type="stmt"/>
            <line num="351" count="1" type="stmt"/>
            <line num="352" count="1" type="stmt"/>
            <line num="353" count="1" type="stmt"/>
            <line num="355" count="1" type="stmt"/>
            <line num="361" count="1" type="stmt"/>
            <line num="362" count="1" type="stmt"/>
            <line num="363" count="1" type="stmt"/>
            <line num="364" count="1" type="stmt"/>
            <line num="365" count="1" type="stmt"/>
            <line num="366" count="1" type="stmt"/>
            <line num="367" count="1" type="stmt"/>
            <line num="368" count="1" type="stmt"/>
            <line num="369" count="1" type="stmt"/>
            <line num="371" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsTimers() : void" num="374" testsuccess="true" count="1" testduration="0.027" type="method"/>
            <line num="376" count="1" type="stmt"/>
            <line num="377" count="1" type="stmt"/>
            <line num="378" count="1" type="stmt"/>
            <line num="379" count="1" type="stmt"/>
            <line num="380" count="1" type="stmt"/>
            <line num="381" count="1" type="stmt"/>
            <line num="383" count="1" type="stmt"/>
            <line num="384" count="1" type="stmt"/>
            <line num="385" count="1" type="stmt"/>
            <line num="386" count="1" type="stmt"/>
            <line num="387" count="1" type="stmt"/>
            <line num="388" count="1" type="stmt"/>
            <line num="389" count="1" type="stmt"/>
            <line num="390" count="1" type="stmt"/>
            <line num="391" count="1" type="stmt"/>
            <line num="392" count="1" type="stmt"/>
            <line num="393" count="1" type="stmt"/>
            <line num="396" count="1" type="stmt"/>
            <line num="398" count="1" type="stmt"/>
            <line num="404" count="1" type="stmt"/>
            <line num="405" count="1" type="stmt"/>
            <line num="406" count="1" type="stmt"/>
            <line num="407" count="1" type="stmt"/>
            <line num="408" count="1" type="stmt"/>
            <line num="409" count="1" type="stmt"/>
            <line num="410" count="1" type="stmt"/>
            <line num="411" count="1" type="stmt"/>
            <line num="412" count="1" type="stmt"/>
            <line num="413" count="1" type="stmt"/>
            <line num="414" count="1" type="stmt"/>
            <line num="415" count="1" type="stmt"/>
            <line num="416" count="1" type="stmt"/>
            <line num="417" count="1" type="stmt"/>
            <line num="418" count="1" type="stmt"/>
            <line num="419" count="1" type="stmt"/>
            <line num="420" count="1" type="stmt"/>
            <line num="421" count="1" type="stmt"/>
            <line num="422" count="1" type="stmt"/>
            <line num="424" count="1" type="stmt"/>
            <line num="426" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="closesConnectionIfGraphiteIsUnavailable() : void" num="429" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="431" count="1" type="stmt"/>
            <line num="432" count="1" type="stmt"/>
            <line num="438" count="1" type="stmt"/>
            <line num="439" count="1" type="stmt"/>
            <line num="440" count="1" type="stmt"/>
            <line num="443" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="closesConnectionOnReporterStop() : void" num="446" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="448" count="1" type="stmt"/>
            <line num="450" count="1" type="stmt"/>
            <line num="451" count="1" type="stmt"/>
            <line num="452" count="1" type="stmt"/>
            <line num="453" count="1" type="stmt"/>
            <line num="455" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="disabledMetricsAttribute() : void" num="458" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="460" count="1" type="stmt"/>
            <line num="461" count="1" type="stmt"/>
            <line num="462" count="1" type="stmt"/>
            <line num="463" count="1" type="stmt"/>
            <line num="464" count="1" type="stmt"/>
            <line num="465" count="1" type="stmt"/>
            <line num="467" count="1" type="stmt"/>
            <line num="468" count="1" type="stmt"/>
            <line num="470" count="1" type="stmt"/>
            <line num="471" count="1" type="stmt"/>
            <line num="479" count="1" type="stmt"/>
            <line num="485" count="1" type="stmt"/>
            <line num="486" count="1" type="stmt"/>
            <line num="487" count="1" type="stmt"/>
            <line num="488" count="1" type="stmt"/>
            <line num="489" count="1" type="stmt"/>
            <line num="490" count="1" type="stmt"/>
            <line num="491" count="1" type="stmt"/>
            <line num="492" count="1" type="stmt"/>
            <line num="494" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="sendsMetricAttributesAsTagsIfEnabled() : void" num="497" testsuccess="true" count="1" testduration="0.009" type="method"/>
            <line num="499" count="1" type="stmt"/>
            <line num="500" count="1" type="stmt"/>
            <line num="502" count="1" type="stmt"/>
            <line num="508" count="1" type="stmt"/>
            <line num="509" count="1" type="stmt"/>
            <line num="510" count="1" type="stmt"/>
            <line num="511" count="1" type="stmt"/>
            <line num="512" count="1" type="stmt"/>
            <line num="514" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="getReporterWithCustomFormat() : GraphiteReporter" num="517" count="1" type="method"/>
            <line num="518" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="format(double) : String" num="521" count="1" type="method"/>
            <line num="523" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="getReporterThatSendsMetricAttributesAsTags() : GraphiteReporter" num="529" count="1" type="method"/>
            <line num="530" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="map() : SortedMap&lt;String, T&gt;" num="541" count="75" type="method"/>
            <line num="542" count="75" type="stmt"/>
            <line complexity="1" visibility="private" signature="map(String,T) : SortedMap&lt;String, T&gt;" num="545" count="20" type="method"/>
            <line num="546" count="20" type="stmt"/>
            <line num="547" count="20" type="stmt"/>
            <line num="548" count="20" type="stmt"/>
            <line complexity="1" visibility="private" signature="gauge(T) : Gauge&lt;T&gt;" num="551" count="12" type="method"/>
            <line num="552" count="12" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-graphite/src/test/java/com/codahale/metrics/graphite/GraphiteSanitizeTest.java" name="GraphiteSanitizeTest.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="1" loc="27" coveredmethods="1" methods="1" elements="16" classes="1" ncloc="23" statements="15" conditionals="0" coveredstatements="15"/>
            <class name="GraphiteSanitizeTest">
               <metrics coveredelements="16" complexity="1" methods="1" testruns="1" statements="15" coveredconditionals="0" coveredmethods="1" elements="16" testfailures="0" testduration="0.724" conditionals="0" coveredstatements="15" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="sanitizeGraphiteValues() : void" num="7" testsuccess="true" count="1" testduration="0.724" type="method"/>
            <line num="9" count="1" type="stmt"/>
            <line num="11" count="1" type="stmt"/>
            <line num="12" count="1" type="stmt"/>
            <line num="13" count="1" type="stmt"/>
            <line num="14" count="1" type="stmt"/>
            <line num="15" count="1" type="stmt"/>
            <line num="16" count="1" type="stmt"/>
            <line num="17" count="1" type="stmt"/>
            <line num="18" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-graphite/src/test/java/com/codahale/metrics/graphite/GraphiteTest.java" name="GraphiteTest.java">
            <metrics coveredelements="62" coveredconditionals="0" complexity="14" loc="155" coveredmethods="10" methods="10" elements="64" classes="1" ncloc="124" statements="54" conditionals="0" coveredstatements="52"/>
            <class name="GraphiteTest">
               <metrics coveredelements="62" complexity="14" methods="10" testruns="9" statements="54" coveredconditionals="0" coveredmethods="10" elements="64" testfailures="0" testduration="0.082" conditionals="0" coveredstatements="52" testpasses="9"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="37" count="9" type="method"/>
            <line num="39" count="9" type="stmt"/>
            <line num="40" count="9" type="stmt"/>
            <line num="42" count="9" type="stmt"/>
            <line num="44" count="9" type="stmt"/>
            <line num="46" count="9" type="stmt"/>
            <line num="47" count="8" type="stmt"/>
            <line num="48" count="8" type="stmt"/>
            <line num="49" count="8" type="stmt"/>
            <line num="52" count="9" type="stmt"/>
            <line num="55" count="9" type="stmt"/>
            <line num="56" count="4" type="stmt"/>
            <line num="57" count="4" type="stmt"/>
            <line num="58" count="4" type="stmt"/>
            <line num="61" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="connectsToGraphiteWithInetSocketAddress() : void" num="64" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="connectsToGraphiteWithHostAndPort() : void" num="72" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="measuresFailures() : void" num="80" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="disconnectsFromGraphite() : void" num="87" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="doesNotAllowDoubleConnections() : void" num="96" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="writesValuesToGraphite() : void" num="109" testsuccess="true" count="1" testduration="0.054" type="method"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="sanitizesNames() : void" num="120" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="sanitizesValues() : void" num="131" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="notifiesIfGraphiteIsUnavailable() : void" num="142" testsuccess="true" count="1" testduration="0.019" type="method"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-graphite/src/test/java/com/codahale/metrics/graphite/GraphiteUDPTest.java" name="GraphiteUDPTest.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="2" loc="43" coveredmethods="2" methods="2" elements="13" classes="1" ncloc="30" statements="11" conditionals="0" coveredstatements="11"/>
            <class name="GraphiteUDPTest">
               <metrics coveredelements="13" complexity="2" methods="2" testruns="2" statements="11" coveredconditionals="0" coveredmethods="2" elements="13" testfailures="0" testduration="0.023" conditionals="0" coveredstatements="11" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="connects() : void" num="20" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="22" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="writesValue() : void" num="31" testsuccess="true" count="1" testduration="0.019" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-graphite/src/test/java/com/codahale/metrics/graphite/PickledGraphiteTest.java" name="PickledGraphiteTest.java">
            <metrics coveredelements="78" coveredconditionals="2" complexity="13" loc="182" coveredmethods="9" methods="9" elements="79" classes="1" ncloc="145" statements="68" conditionals="2" coveredstatements="67"/>
            <class name="PickledGraphiteTest">
               <metrics coveredelements="78" complexity="13" methods="9" testruns="7" statements="68" coveredconditionals="2" coveredmethods="9" elements="79" testfailures="0" testduration="0.031000000000000007" conditionals="2" coveredstatements="67" testpasses="7"/>
            </class>
            <line complexity="3" visibility="public" signature="setUp() : void" num="46" count="7" type="method"/>
            <line num="48" count="7" type="stmt"/>
            <line num="49" count="7" type="stmt"/>
            <line num="51" count="7" type="stmt"/>
            <line num="53" count="7" type="stmt"/>
            <line num="55" count="7" type="stmt"/>
            <line num="56" count="6" type="stmt"/>
            <line num="57" count="6" type="stmt"/>
            <line num="58" count="6" type="stmt"/>
            <line num="61" count="7" type="stmt"/>
            <line num="64" count="7" type="stmt"/>
            <line num="65" count="6" type="stmt"/>
            <line num="66" count="6" type="stmt"/>
            <line num="67" count="6" type="stmt"/>
            <line num="70" count="7" type="stmt"/>
            <line num="73" count="7" type="stmt"/>
            <line num="74" count="7" type="stmt"/>
            <line num="75" count="7" type="stmt"/>
            <line num="75" count="7" type="stmt"/>
            <line num="76" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="disconnectsFromGraphite() : void" num="80" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="writesValuesToGraphite() : void" num="88" testsuccess="true" count="1" testduration="0.025" type="method"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="writesFullBatch() : void" num="98" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="writesPastFullBatch() : void" num="109" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="sanitizesNames() : void" num="121" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="sanitizesValues() : void" num="131" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="doesNotAllowDoubleConnections() : void" num="141" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="unpickleOutput() : String" num="153" count="5" type="method"/>
            <line num="154" count="5" type="stmt"/>
            <line num="158" count="5" type="stmt"/>
            <line num="160" count="5" type="stmt"/>
            <line num="161" count="5" type="stmt"/>
            <line num="162" count="5" type="stmt"/>
            <line falsecount="5" truecount="6" num="162" type="cond"/>
            <line num="163" count="6" type="stmt"/>
            <line num="164" count="6" type="stmt"/>
            <line num="165" count="6" type="stmt"/>
            <line num="166" count="6" type="stmt"/>
            <line num="167" count="6" type="stmt"/>
            <line num="170" count="5" type="stmt"/>
            <line num="171" count="8" type="stmt"/>
            <line num="172" count="8" type="stmt"/>
            <line num="173" count="8" type="stmt"/>
            <line num="174" count="8" type="stmt"/>
            <line num="175" count="8" type="stmt"/>
            <line num="177" count="8" type="stmt"/>
            <line num="180" count="5" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics.httpclient">
         <metrics coveredelements="67" complexity="19" loc="232" methods="18" classes="3" statements="50" coveredconditionals="0" coveredmethods="18" elements="68" ncloc="187" files="3" conditionals="0" coveredstatements="49"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-httpclient/src/test/java/com/codahale/metrics/httpclient/HttpClientMetricNameStrategiesTest.java" name="HttpClientMetricNameStrategiesTest.java">
            <metrics coveredelements="34" coveredconditionals="0" complexity="13" loc="113" coveredmethods="13" methods="13" elements="34" classes="1" ncloc="93" statements="21" conditionals="0" coveredstatements="21"/>
            <class name="HttpClientMetricNameStrategiesTest">
               <metrics coveredelements="34" complexity="13" methods="13" testruns="12" statements="21" coveredconditionals="0" coveredmethods="13" elements="34" testfailures="0" testduration="0.009000000000000001" conditionals="0" coveredstatements="21" testpasses="12"/>
            </class>
            <line complexity="1" visibility="public" signature="methodOnlyWithName() : void" num="23" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="25" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="methodOnlyWithoutName() : void" num="29" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hostAndMethodWithName() : void" num="35" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hostAndMethodWithoutName() : void" num="41" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hostAndMethodWithNameInWrappedRequest() : void" num="47" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hostAndMethodWithoutNameInWrappedRequest() : void" num="55" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="pathAndMethodWithName() : void" num="63" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="pathAndMethodWithoutName() : void" num="69" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="pathAndMethodWithNameInWrappedRequest() : void" num="75" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="pathAndMethodWithoutNameInWrappedRequest() : void" num="82" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="querylessUrlAndMethodWithName() : void" num="89" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="querylessUrlAndMethodWithNameInWrappedRequest() : void" num="97" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="rewriteRequestURI(HttpRequest) : HttpRequest" num="106" count="5" type="method"/>
            <line num="107" count="5" type="stmt"/>
            <line num="108" count="5" type="stmt"/>
            <line num="109" count="5" type="stmt"/>
            <line num="111" count="5" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-httpclient/src/test/java/com/codahale/metrics/httpclient/InstrumentedHttpClientConnectionManagerTest.java" name="InstrumentedHttpClientConnectionManagerTest.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="2" loc="42" coveredmethods="2" methods="2" elements="12" classes="1" ncloc="31" statements="10" conditionals="0" coveredstatements="10"/>
            <class name="InstrumentedHttpClientConnectionManagerTest">
               <metrics coveredelements="12" complexity="2" methods="2" testruns="2" statements="10" coveredconditionals="0" coveredmethods="2" elements="12" testfailures="0" testduration="0.1" conditionals="0" coveredstatements="10" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="shouldRemoveGauges() : void" num="16" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="18" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="configurableViaBuilder() : void" num="28" testsuccess="true" count="1" testduration="0.099" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-httpclient/src/test/java/com/codahale/metrics/httpclient/InstrumentedHttpClientsTest.java" name="InstrumentedHttpClientsTest.java">
            <metrics coveredelements="21" coveredconditionals="0" complexity="4" loc="77" coveredmethods="3" methods="3" elements="22" classes="1" ncloc="63" statements="19" conditionals="0" coveredstatements="18"/>
            <class name="InstrumentedHttpClientsTest">
               <metrics coveredelements="21" complexity="4" methods="3" testruns="2" statements="19" coveredconditionals="0" coveredmethods="3" elements="22" testfailures="0" testduration="0.389" conditionals="0" coveredstatements="18" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="34" count="2" type="method"/>
            <line num="36" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="registersExpectedMetricsGivenNameStrategy() : void" num="39" testsuccess="true" count="1" testduration="0.251" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="registersExpectedExceptionMetrics() : void" num="52" testsuccess="true" count="1" testduration="0.138" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics.jmx">
         <metrics coveredelements="112" complexity="17" loc="337" methods="15" classes="2" statements="97" coveredconditionals="1" coveredmethods="15" elements="114" ncloc="283" files="2" conditionals="2" coveredstatements="96"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jmx/src/test/java/com/codahale/metrics/jmx/DefaultObjectNameFactoryTest.java" name="DefaultObjectNameFactoryTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="2" loc="24" coveredmethods="2" methods="2" elements="8" classes="1" ncloc="18" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="DefaultObjectNameFactoryTest">
               <metrics coveredelements="8" complexity="2" methods="2" testruns="2" statements="6" coveredconditionals="0" coveredmethods="2" elements="8" testfailures="0" testduration="0.073" conditionals="0" coveredstatements="6" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="createsObjectNameWithDomainInInput() : void" num="11" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="13" count="1" type="stmt"/>
            <line num="14" count="1" type="stmt"/>
            <line num="15" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="createsObjectNameWithNameAsKeyPropertyName() : void" num="18" testsuccess="true" count="1" testduration="0.073" type="method"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jmx/src/test/java/com/codahale/metrics/jmx/JmxReporterTest.java" name="JmxReporterTest.java">
            <metrics coveredelements="104" coveredconditionals="1" complexity="15" loc="313" coveredmethods="13" methods="13" elements="106" classes="1" ncloc="265" statements="91" conditionals="2" coveredstatements="90"/>
            <class name="JmxReporterTest">
               <metrics coveredelements="104" complexity="15" methods="13" testruns="9" statements="91" coveredconditionals="1" coveredmethods="13" elements="106" testfailures="0" testduration="0.08" conditionals="2" coveredstatements="90" testpasses="9"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="59" count="9" type="method"/>
            <line num="61" count="9" type="stmt"/>
            <line num="63" count="9" type="stmt"/>
            <line num="65" count="9" type="stmt"/>
            <line num="67" count="9" type="stmt"/>
            <line num="68" count="9" type="stmt"/>
            <line num="69" count="9" type="stmt"/>
            <line num="70" count="9" type="stmt"/>
            <line num="71" count="9" type="stmt"/>
            <line num="72" count="9" type="stmt"/>
            <line num="73" count="9" type="stmt"/>
            <line num="74" count="9" type="stmt"/>
            <line num="75" count="9" type="stmt"/>
            <line num="76" count="9" type="stmt"/>
            <line num="77" count="9" type="stmt"/>
            <line num="78" count="9" type="stmt"/>
            <line num="80" count="9" type="stmt"/>
            <line num="82" count="9" type="stmt"/>
            <line num="83" count="9" type="stmt"/>
            <line num="84" count="9" type="stmt"/>
            <line num="85" count="9" type="stmt"/>
            <line num="86" count="9" type="stmt"/>
            <line num="88" count="9" type="stmt"/>
            <line num="89" count="9" type="stmt"/>
            <line num="90" count="9" type="stmt"/>
            <line num="91" count="9" type="stmt"/>
            <line num="92" count="9" type="stmt"/>
            <line num="94" count="9" type="stmt"/>
            <line num="95" count="9" type="stmt"/>
            <line num="96" count="9" type="stmt"/>
            <line num="97" count="9" type="stmt"/>
            <line num="98" count="9" type="stmt"/>
            <line num="99" count="9" type="stmt"/>
            <line num="100" count="9" type="stmt"/>
            <line num="101" count="9" type="stmt"/>
            <line num="102" count="9" type="stmt"/>
            <line num="103" count="9" type="stmt"/>
            <line num="104" count="9" type="stmt"/>
            <line num="105" count="9" type="stmt"/>
            <line num="107" count="9" type="stmt"/>
            <line num="109" count="9" type="stmt"/>
            <line num="110" count="9" type="stmt"/>
            <line num="111" count="9" type="stmt"/>
            <line num="112" count="9" type="stmt"/>
            <line num="113" count="9" type="stmt"/>
            <line num="115" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="118" count="9" type="method"/>
            <line num="120" count="9" type="stmt"/>
            <line complexity="2" visibility="public" signature="registersMBeansForMetricObjectsUsingProvidedObjectNameFactory() : void" num="123" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="143" type="cond"/>
            <line num="144" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="registersMBeansForGauges() : void" num="149" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="151" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="registersMBeansForCounters() : void" num="157" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="159" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="registersMBeansForHistograms() : void" num="165" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="167" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="registersMBeansForMeters() : void" num="196" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="198" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="registersMBeansForTimers() : void" num="215" testsuccess="true" count="1" testduration="0.012" type="method"/>
            <line num="217" count="1" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="cleansUpAfterItselfWhenStopped() : void" num="256" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="258" count="1" type="stmt"/>
            <line num="260" count="1" type="stmt"/>
            <line num="261" count="1" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="objectNameModifyingMBeanServer() : void" num="268" testsuccess="true" count="1" testduration="0.061" type="method"/>
            <line num="270" count="1" type="stmt"/>
            <line num="273" count="1" type="stmt"/>
            <line num="275" count="1" type="stmt"/>
            <line num="276" count="1" type="stmt"/>
            <line num="281" count="1" type="stmt"/>
            <line num="284" count="1" type="stmt"/>
            <line num="287" count="1" type="stmt"/>
            <line num="289" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJmxMetricNameWithAsterisk() : void" num="293" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="295" count="1" type="stmt"/>
            <line num="296" count="1" type="stmt"/>
            <line num="297" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="getAttributes(String,String,String) : AttributeList" num="300" count="6" type="method"/>
            <line num="301" count="6" type="stmt"/>
            <line num="302" count="6" type="stmt"/>
            <line complexity="1" visibility="private" signature="values(AttributeList) : SortedMap&lt;String, Object&gt;" num="305" count="5" type="method"/>
            <line num="306" count="5" type="stmt"/>
            <line num="307" count="5" type="stmt"/>
            <line num="308" count="38" type="stmt"/>
            <line num="309" count="38" type="stmt"/>
            <line num="311" count="5" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics.logback">
         <metrics coveredelements="54" complexity="10" loc="143" methods="10" classes="1" statements="44" coveredconditionals="0" coveredmethods="10" elements="54" ncloc="104" files="1" conditionals="0" coveredstatements="44"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-logback/src/test/java/com/codahale/metrics/logback/InstrumentedAppenderTest.java" name="InstrumentedAppenderTest.java">
            <metrics coveredelements="54" coveredconditionals="0" complexity="10" loc="143" coveredmethods="10" methods="10" elements="54" classes="1" ncloc="104" statements="44" conditionals="0" coveredstatements="44"/>
            <class name="InstrumentedAppenderTest">
               <metrics coveredelements="54" complexity="10" methods="10" testruns="8" statements="44" coveredconditionals="0" coveredmethods="10" elements="54" testfailures="0" testduration="0.07300000000000001" conditionals="0" coveredstatements="44" testpasses="8"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="24" count="8" type="method"/>
            <line num="26" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="29" count="8" type="method"/>
            <line num="31" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="metersTraceEvents() : void" num="34" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="metersDebugEvents() : void" num="47" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="metersInfoEvents() : void" num="60" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="metersWarnEvents() : void" num="73" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="metersErrorEvents() : void" num="86" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="usesSharedRegistries() : void" num="99" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="102" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="usesDefaultRegistry() : void" num="116" testsuccess="true" count="1" testduration="0.068" type="method"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="usesRegistryFromProperty() : void" num="129" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics.collectd">
         <metrics coveredelements="274" complexity="47" loc="605" methods="40" classes="5" statements="237" coveredconditionals="3" coveredmethods="39" elements="281" ncloc="506" files="5" conditionals="4" coveredstatements="232"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-collectd/src/test/java/com/codahale/metrics/collectd/CollectdReporterSecurityTest.java" name="CollectdReporterSecurityTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="33" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="27" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="CollectdReporterSecurityTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="2" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.017" conditionals="0" coveredstatements="2" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="testUnableSetSecurityLevelToSignWithoutUsername() : void" num="12" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="14" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnableSetSecurityLevelToSignWithoutPassword() : void" num="23" testsuccess="true" count="1" testduration="0.016" type="method"/>
            <line num="25" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-collectd/src/test/java/com/codahale/metrics/collectd/CollectdReporterTest.java" name="CollectdReporterTest.java">
            <metrics coveredelements="129" coveredconditionals="3" complexity="21" loc="285" coveredmethods="19" methods="19" elements="130" classes="1" ncloc="239" statements="107" conditionals="4" coveredstatements="107"/>
            <class name="CollectdReporterTest">
               <metrics coveredelements="129" complexity="21" methods="19" testruns="14" statements="107" coveredconditionals="3" coveredmethods="19" elements="130" testfailures="0" testduration="2.5570000000000004" conditionals="4" coveredstatements="107" testpasses="14"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="35" count="14" type="method"/>
            <line num="37" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsByteGauges() : void" num="42" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsShortGauges() : void" num="47" testsuccess="true" count="1" testduration="0.021" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsIntegerGauges() : void" num="52" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsLongGauges() : void" num="57" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsFloatGauges() : void" num="62" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsDoubleGauges() : void" num="67" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="reportsGauges(T) : void" num="72" count="6" type="method"/>
            <line num="73" count="6" type="stmt"/>
            <line num="80" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsBooleanGauges() : void" num="83" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="doesNotReportStringGauges() : void" num="104" testsuccess="true" count="1" testduration="2.003" type="method"/>
            <line num="106" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsCounters() : void" num="116" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsMeters() : void" num="131" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="reportsHistograms() : void" num="154" testsuccess="true" count="1" testduration="0.057" type="method"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line falsecount="1" truecount="11" num="178" type="cond"/>
            <line num="179" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsTimers() : void" num="183" testsuccess="true" count="1" testduration="0.052" type="method"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line num="191" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line num="213" count="1" type="stmt"/>
            <line num="214" count="1" type="stmt"/>
            <line num="215" count="1" type="stmt"/>
            <line num="216" count="1" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line num="222" count="1" type="stmt"/>
            <line num="223" count="1" type="stmt"/>
            <line num="224" count="1" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="doesNotReportDisabledMetricAttributes() : void" num="229" testsuccess="true" count="1" testduration="0.413" type="method"/>
            <line num="231" count="1" type="stmt"/>
            <line num="232" count="1" type="stmt"/>
            <line num="233" count="1" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line num="239" count="1" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line num="246" count="1" type="stmt"/>
            <line num="253" count="1" type="stmt"/>
            <line num="254" count="1" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line num="256" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="sanitizesMetricName() : void" num="259" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="261" count="1" type="stmt"/>
            <line num="262" count="1" type="stmt"/>
            <line num="264" count="1" type="stmt"/>
            <line num="266" count="1" type="stmt"/>
            <line num="267" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="map() : SortedMap&lt;String, T&gt;" num="270" count="55" type="method"/>
            <line num="271" count="55" type="stmt"/>
            <line complexity="1" visibility="private" signature="map(String,T) : SortedMap&lt;String, T&gt;" num="274" count="15" type="method"/>
            <line num="275" count="15" type="stmt"/>
            <line num="276" count="15" type="stmt"/>
            <line complexity="2" visibility="private" signature="nextValues(Receiver) : List&lt;Number&gt;" num="279" count="44" type="method"/>
            <line num="280" count="44" type="stmt"/>
            <line num="281" count="44" type="stmt"/>
            <line falsecount="44" truecount="0" num="281" type="cond"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-collectd/src/test/java/com/codahale/metrics/collectd/PacketWriterTest.java" name="PacketWriterTest.java">
            <metrics coveredelements="114" coveredconditionals="0" complexity="13" loc="194" coveredmethods="9" methods="9" elements="118" classes="1" ncloc="166" statements="109" conditionals="0" coveredstatements="105"/>
            <class name="PacketWriterTest">
               <metrics coveredelements="114" complexity="13" methods="9" testruns="2" statements="109" coveredconditionals="0" coveredmethods="9" elements="118" testfailures="0" testduration="0.12" conditionals="0" coveredstatements="105" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="testSignRequest() : void" num="30" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="send(ByteBuffer) : void" num="34" count="1" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="sign(byte[],String) : byte[]" num="59" count="1" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEncryptRequest() : void" num="76" testsuccess="true" count="1" testduration="0.119" type="method"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="send(ByteBuffer) : void" num="80" count="1" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="decrypt(byte[],byte[]) : byte[]" num="108" count="1" type="method"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="sha256(byte[]) : byte[]" num="120" count="1" type="method"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="sha1(byte[]) : byte[]" num="128" count="1" type="method"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="verifyPacket(byte[]) : void" num="141" count="2" type="method"/>
            <line num="142" count="2" type="stmt"/>
            <line num="144" count="2" type="stmt"/>
            <line num="145" count="2" type="stmt"/>
            <line num="146" count="2" type="stmt"/>
            <line num="147" count="2" type="stmt"/>
            <line num="148" count="2" type="stmt"/>
            <line num="149" count="2" type="stmt"/>
            <line num="150" count="2" type="stmt"/>
            <line num="151" count="2" type="stmt"/>
            <line num="153" count="2" type="stmt"/>
            <line num="154" count="2" type="stmt"/>
            <line num="155" count="2" type="stmt"/>
            <line num="156" count="2" type="stmt"/>
            <line num="157" count="2" type="stmt"/>
            <line num="159" count="2" type="stmt"/>
            <line num="160" count="2" type="stmt"/>
            <line num="161" count="2" type="stmt"/>
            <line num="162" count="2" type="stmt"/>
            <line num="163" count="2" type="stmt"/>
            <line num="164" count="2" type="stmt"/>
            <line num="165" count="2" type="stmt"/>
            <line num="166" count="2" type="stmt"/>
            <line num="168" count="2" type="stmt"/>
            <line num="169" count="2" type="stmt"/>
            <line num="170" count="2" type="stmt"/>
            <line num="171" count="2" type="stmt"/>
            <line num="172" count="2" type="stmt"/>
            <line num="173" count="2" type="stmt"/>
            <line num="174" count="2" type="stmt"/>
            <line num="175" count="2" type="stmt"/>
            <line num="177" count="2" type="stmt"/>
            <line num="178" count="2" type="stmt"/>
            <line num="179" count="2" type="stmt"/>
            <line num="180" count="2" type="stmt"/>
            <line num="181" count="2" type="stmt"/>
            <line num="183" count="2" type="stmt"/>
            <line num="184" count="2" type="stmt"/>
            <line num="185" count="2" type="stmt"/>
            <line num="186" count="2" type="stmt"/>
            <line num="187" count="2" type="stmt"/>
            <line num="188" count="2" type="stmt"/>
            <line num="189" count="2" type="stmt"/>
            <line num="190" count="2" type="stmt"/>
            <line num="191" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-collectd/src/test/java/com/codahale/metrics/collectd/Receiver.java" name="Receiver.java">
            <metrics coveredelements="18" coveredconditionals="0" complexity="7" loc="63" coveredmethods="5" methods="6" elements="20" classes="1" ncloc="52" statements="14" conditionals="0" coveredstatements="13"/>
            <class name="Receiver">
               <metrics coveredelements="18" coveredconditionals="0" complexity="7" coveredmethods="5" methods="6" elements="20" statements="14" conditionals="0" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="Receiver(int)" num="24" count="1" type="method"/>
            <line num="25" count="1" type="stmt"/>
            <line complexity="2" visibility="protected" signature="before() : void" num="28" count="1" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="dispatch(ValueList) : void" num="34" count="45" type="method"/>
            <line num="36" count="45" type="stmt"/>
            <line complexity="1" visibility="public" signature="dispatch(Notification) : void" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : ValueList" num="54" count="46" type="method"/>
            <line num="55" count="46" type="stmt"/>
            <line complexity="1" visibility="protected" signature="after() : void" num="58" count="1" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-collectd/src/test/java/com/codahale/metrics/collectd/SanitizeTest.java" name="SanitizeTest.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="4" loc="30" coveredmethods="4" methods="4" elements="9" classes="1" ncloc="22" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="SanitizeTest">
               <metrics coveredelements="9" complexity="4" methods="4" testruns="4" statements="5" coveredconditionals="0" coveredmethods="4" elements="9" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="5" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="replacesIllegalCharactersInName() : void" num="9" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="11" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="replacesIllegalCharactersInInstanceName() : void" num="14" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="16" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="truncatesNamesExceedingMaxLength() : void" num="19" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="21" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="replacesNonASCIICharacters() : void" num="25" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="27" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics.jetty9">
         <metrics coveredelements="145" complexity="44" loc="565" methods="31" classes="6" statements="148" coveredconditionals="0" coveredmethods="27" elements="179" ncloc="462" files="4" conditionals="0" coveredstatements="118"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jetty9/src/test/java/com/codahale/metrics/jetty9/InstrumentedConnectionFactoryTest.java" name="InstrumentedConnectionFactoryTest.java">
            <metrics coveredelements="27" coveredconditionals="0" complexity="7" loc="93" coveredmethods="5" methods="5" elements="27" classes="1" ncloc="75" statements="22" conditionals="0" coveredstatements="22"/>
            <class name="InstrumentedConnectionFactoryTest">
               <metrics coveredelements="27" complexity="7" methods="5" testruns="2" statements="22" coveredconditionals="0" coveredmethods="5" elements="27" testfailures="0" testduration="0.213" conditionals="0" coveredstatements="22" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="34" count="2" type="method"/>
            <line num="36" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="handle(String,Request,HttpServletRequest,HttpServletResponse) : void" num="37" count="2" type="method"/>
            <line num="42" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="48" count="2" type="stmt"/>
            <line num="49" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="54" count="2" type="method"/>
            <line num="56" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="instrumentsConnectionTimes() : void" num="60" testsuccess="true" count="1" testduration="0.106" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="instrumentsActiveConnections() : void" num="75" testsuccess="true" count="1" testduration="0.107" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jetty9/src/test/java/com/codahale/metrics/jetty9/InstrumentedHandlerTest.java" name="InstrumentedHandlerTest.java">
            <metrics coveredelements="40" coveredconditionals="0" complexity="17" loc="211" coveredmethods="9" methods="12" elements="66" classes="2" ncloc="173" statements="54" conditionals="0" coveredstatements="31"/>
            <class name="InstrumentedHandlerTest">
               <metrics coveredelements="28" complexity="9" methods="9" testruns="3" statements="23" coveredconditionals="0" coveredmethods="8" elements="32" testfailures="0" testduration="0.314" conditionals="0" coveredstatements="20" testpasses="3"/>
            </class>
            <class name="InstrumentedHandlerTest.TestHandler">
               <metrics coveredelements="12" coveredconditionals="0" complexity="8" coveredmethods="1" methods="3" elements="34" statements="31" conditionals="0" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="35" count="3" type="method"/>
            <line num="37" count="3" type="stmt"/>
            <line num="38" count="3" type="stmt"/>
            <line num="39" count="3" type="stmt"/>
            <line num="40" count="3" type="stmt"/>
            <line num="41" count="3" type="stmt"/>
            <line num="42" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="45" count="3" type="method"/>
            <line num="47" count="3" type="stmt"/>
            <line num="48" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAName() : void" num="51" testsuccess="true" count="1" testduration="0.043" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="createsMetricsForTheHandler() : void" num="57" testsuccess="true" count="1" testduration="0.021" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="responseTimesAreRecordedForBlockingResponses() : void" num="98" testsuccess="true" count="1" testduration="0.25" type="method"/>
            <line num="101" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="responseTimesAreRecordedForAsyncResponses() : void" num="109" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertResponseTimesValid() : void" num="121" count="1" type="method"/>
            <line num="122" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="uri(String) : String" num="133" count="2" type="method"/>
            <line num="134" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="metricName() : String" num="137" count="3" type="method"/>
            <line num="138" count="3" type="stmt"/>
            <line complexity="6" visibility="public" signature="handle(String,Request,HttpServletRequest,HttpServletResponse) : void" num="152" count="2" type="method"/>
            <line num="159" count="2" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="onWritePossible() : void" num="187" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="onError(Throwable) : void" num="194" count="0" type="method"/>
            <line num="196" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jetty9/src/test/java/com/codahale/metrics/jetty9/InstrumentedHttpChannelListenerTest.java" name="InstrumentedHttpChannelListenerTest.java">
            <metrics coveredelements="65" coveredconditionals="0" complexity="17" loc="209" coveredmethods="10" methods="11" elements="73" classes="2" ncloc="173" statements="62" conditionals="0" coveredstatements="55"/>
            <class name="InstrumentedHttpChannelListenerTest">
               <metrics coveredelements="36" complexity="9" methods="8" testruns="3" statements="29" coveredconditionals="0" coveredmethods="8" elements="37" testfailures="0" testduration="0.419" conditionals="0" coveredstatements="28" testpasses="3"/>
            </class>
            <class name="InstrumentedHttpChannelListenerTest.TestHandler">
               <metrics coveredelements="29" coveredconditionals="0" complexity="8" coveredmethods="2" methods="3" elements="36" statements="33" conditionals="0" coveredstatements="27"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="32" count="3" type="method"/>
            <line num="34" count="3" type="stmt"/>
            <line num="35" count="3" type="stmt"/>
            <line num="36" count="3" type="stmt"/>
            <line num="37" count="3" type="stmt"/>
            <line num="38" count="3" type="stmt"/>
            <line num="39" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="42" count="3" type="method"/>
            <line num="44" count="3" type="stmt"/>
            <line num="45" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="createsMetricsForTheHandler() : void" num="48" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="responseTimesAreRecordedForBlockingResponses() : void" num="89" testsuccess="true" count="1" testduration="0.208" type="method"/>
            <line num="92" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="responseTimesAreRecordedForAsyncResponses() : void" num="101" testsuccess="true" count="1" testduration="0.207" type="method"/>
            <line num="104" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="assertResponseTimesValid() : void" num="113" count="2" type="method"/>
            <line num="114" count="2" type="stmt"/>
            <line num="115" count="2" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="120" count="2" type="stmt"/>
            <line num="123" count="2" type="stmt"/>
            <line num="126" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="uri(String) : String" num="130" count="3" type="method"/>
            <line num="131" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="metricName(String) : String" num="134" count="34" type="method"/>
            <line num="135" count="34" type="stmt"/>
            <line complexity="6" visibility="public" signature="handle(String,Request,HttpServletRequest,HttpServletResponse) : void" num="149" count="3" type="method"/>
            <line num="155" count="3" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="onWritePossible() : void" num="185" count="1" type="method"/>
            <line num="187" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="onError(Throwable) : void" num="192" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jetty9/src/test/java/com/codahale/metrics/jetty9/InstrumentedQueuedThreadPoolTest.java" name="InstrumentedQueuedThreadPoolTest.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="3" loc="52" coveredmethods="3" methods="3" elements="13" classes="1" ncloc="41" statements="10" conditionals="0" coveredstatements="10"/>
            <class name="InstrumentedQueuedThreadPoolTest">
               <metrics coveredelements="13" complexity="3" methods="3" testruns="2" statements="10" coveredconditionals="0" coveredmethods="3" elements="13" testfailures="0" testduration="0.019999999999999997" conditionals="0" coveredstatements="10" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="23" count="2" type="method"/>
            <line num="25" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="customMetricsPrefix() : void" num="28" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="metricsPrefixBackwardCompatible() : void" num="41" testsuccess="true" count="1" testduration="0.018" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics.log4j2">
         <metrics coveredelements="62" complexity="14" loc="195" methods="14" classes="2" statements="48" coveredconditionals="0" coveredmethods="14" elements="62" ncloc="141" files="2" conditionals="0" coveredstatements="48"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-log4j2/src/test/java/com/codahale/metrics/log4j2/InstrumentedAppenderConfigTest.java" name="InstrumentedAppenderConfigTest.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="5" loc="66" coveredmethods="5" methods="5" elements="20" classes="1" ncloc="51" statements="15" conditionals="0" coveredstatements="15"/>
            <class name="InstrumentedAppenderConfigTest">
               <metrics coveredelements="20" complexity="5" methods="5" testruns="3" statements="15" coveredconditionals="0" coveredmethods="5" elements="20" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="15" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="23" count="3" type="method"/>
            <line num="25" count="3" type="stmt"/>
            <line num="26" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="29" count="3" type="method"/>
            <line num="31" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="canRecordAll() : void" num="36" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="canRecordError() : void" num="46" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="noInvalidRecording() : void" num="56" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-log4j2/src/test/java/com/codahale/metrics/log4j2/InstrumentedAppenderTest.java" name="InstrumentedAppenderTest.java">
            <metrics coveredelements="42" coveredconditionals="0" complexity="9" loc="129" coveredmethods="9" methods="9" elements="42" classes="1" ncloc="90" statements="33" conditionals="0" coveredstatements="33"/>
            <class name="InstrumentedAppenderTest">
               <metrics coveredelements="42" complexity="9" methods="9" testruns="7" statements="33" coveredconditionals="0" coveredmethods="9" elements="42" testfailures="0" testduration="0.059000000000000004" conditionals="0" coveredstatements="33" testpasses="7"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="24" count="7" type="method"/>
            <line num="26" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="29" count="7" type="method"/>
            <line num="31" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="metersTraceEvents() : void" num="34" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="metersDebugEvents() : void" num="47" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="metersInfoEvents() : void" num="60" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="metersWarnEvents() : void" num="73" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="metersErrorEvents() : void" num="86" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="metersFatalEvents() : void" num="99" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="101" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="usesSharedRegistries() : void" num="112" testsuccess="true" count="1" testduration="0.055" type="method"/>
            <line num="115" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics.servlet">
         <metrics coveredelements="8" complexity="2" loc="33" methods="2" classes="1" statements="6" coveredconditionals="0" coveredmethods="2" elements="8" ncloc="25" files="1" conditionals="0" coveredstatements="6"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-servlet/src/test/java/com/codahale/metrics/servlet/InstrumentedFilterContextListenerTest.java" name="InstrumentedFilterContextListenerTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="2" loc="33" coveredmethods="2" methods="2" elements="8" classes="1" ncloc="25" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="InstrumentedFilterContextListenerTest">
               <metrics coveredelements="8" complexity="2" methods="2" testruns="1" statements="6" coveredconditionals="0" coveredmethods="2" elements="8" testfailures="0" testduration="0.099" conditionals="0" coveredstatements="6" testpasses="1"/>
            </class>
            <line complexity="1" visibility="protected" signature="getMetricRegistry() : MetricRegistry" num="16" count="1" type="method"/>
            <line num="18" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="injectsTheMetricRegistryIntoTheServletContext() : void" num="22" testsuccess="true" count="1" testduration="0.099" type="method"/>
            <line num="24" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics.health.jvm">
         <metrics coveredelements="18" complexity="3" loc="53" methods="3" classes="1" statements="15" coveredconditionals="0" coveredmethods="3" elements="18" ncloc="40" files="1" conditionals="0" coveredstatements="15"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-healthchecks/src/test/java/com/codahale/metrics/health/jvm/ThreadDeadlockHealthCheckTest.java" name="ThreadDeadlockHealthCheckTest.java">
            <metrics coveredelements="18" coveredconditionals="0" complexity="3" loc="53" coveredmethods="3" methods="3" elements="18" classes="1" ncloc="40" statements="15" conditionals="0" coveredstatements="15"/>
            <class name="ThreadDeadlockHealthCheckTest">
               <metrics coveredelements="18" complexity="3" methods="3" testruns="3" statements="15" coveredconditionals="0" coveredmethods="3" elements="18" testfailures="0" testduration="0.016" conditionals="0" coveredstatements="15" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="isHealthyIfNoThreadsAreDeadlocked() : void" num="16" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="18" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isUnhealthyIfThreadsAreDeadlocked() : void" num="27" testsuccess="true" count="1" testduration="0.012" type="method"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="automaticallyUsesThePlatformThreadBeans() : void" num="47" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics.health">
         <metrics coveredelements="322" complexity="83" loc="947" methods="81" classes="17" statements="270" coveredconditionals="2" coveredmethods="70" elements="353" ncloc="729" files="5" conditionals="2" coveredstatements="250"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-healthchecks/src/test/java/com/codahale/metrics/health/AsyncHealthCheckDecoratorTest.java" name="AsyncHealthCheckDecoratorTest.java">
            <metrics coveredelements="107" coveredconditionals="2" complexity="32" loc="330" coveredmethods="24" methods="31" elements="121" classes="11" ncloc="257" statements="88" conditionals="2" coveredstatements="81"/>
            <class name="AsyncHealthCheckDecoratorTest">
               <metrics coveredelements="88" complexity="18" methods="18" testruns="15" statements="72" coveredconditionals="0" coveredmethods="17" elements="90" testfailures="0" testduration="0.015000000000000003" conditionals="0" coveredstatements="71" testpasses="15"/>
            </class>
            <class name="AsyncHealthCheckDecoratorTest.NegativePeriodAsyncHealthCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="AsyncHealthCheckDecoratorTest.ZeroPeriodAsyncHealthCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="AsyncHealthCheckDecoratorTest.NegativeInitialDelayAsyncHealthCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="AsyncHealthCheckDecoratorTest.DefaultAsyncHealthCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="AsyncHealthCheckDecoratorTest.FixedDelayAsyncHealthCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="AsyncHealthCheckDecoratorTest.UnhealthyAsyncHealthCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="AsyncHealthCheckDecoratorTest.ConfigurableAsyncHealthCheck">
               <metrics coveredelements="13" coveredconditionals="2" complexity="5" coveredmethods="4" methods="4" elements="13" statements="7" conditionals="2" coveredstatements="7"/>
            </class>
            <class name="AsyncHealthCheckDecoratorTest.HealthyAsyncHealthCheckWithExpiredExplicitTtlInMilliseconds">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="AsyncHealthCheckDecoratorTest.HealthyAsyncHealthCheckWithExpiredExplicitTtlInSeconds">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="AsyncHealthCheckDecoratorTest.HealthyAsyncHealthCheckWithExpiredTtlInMillisecondsBasedOnPeriod">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="nullHealthCheckTriggersInstantiationFailure() : void" num="43" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="nullExecutorServiceTriggersInstantiationFailure() : void" num="48" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="nonAsyncHealthCheckTriggersInstantiationFailure() : void" num="53" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="negativePeriodTriggersInstantiationFailure() : void" num="58" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="zeroPeriodTriggersInstantiationFailure() : void" num="63" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="negativeInitialValueTriggersInstantiationFailure() : void" num="68" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="defaultAsyncHealthCheckTriggersSuccessfulInstantiationWithFixedRateAndHealthyState() : void" num="73" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="fixedDelayAsyncHealthCheckTriggersSuccessfulInstantiationWithFixedDelay() : void" num="84" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="unhealthyAsyncHealthCheckTriggersSuccessfulInstantiationWithUnhealthyState() : void" num="94" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDownTriggersCancellation() : void" num="102" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="105" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="afterFirstExecutionDecoratedHealthCheckResultIsProvided() : void" num="117" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="exceptionInDecoratedHealthCheckWontAffectAsyncDecorator() : void" num="139" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnUnhealthyIfPreviousResultIsExpiredBasedOnTtl() : void" num="160" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnUnhealthyIfPreviousResultIsExpiredBasedOnPeriod() : void" num="176" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="178" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="convertTtlToMillisecondsWhenCheckingExpiration() : void" num="192" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="194" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="check() : Result" num="211" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="check() : Result" num="220" count="0" type="method"/>
            <line num="222" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="check() : Result" num="229" count="0" type="method"/>
            <line num="231" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="check() : Result" num="238" count="0" type="method"/>
            <line num="240" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="check() : Result" num="247" count="0" type="method"/>
            <line num="249" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="check() : Result" num="256" count="0" type="method"/>
            <line num="258" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="ConfigurableAsyncHealthCheck(Result)" num="267" count="1" type="method"/>
            <line num="268" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="ConfigurableAsyncHealthCheck(Exception)" num="271" count="1" type="method"/>
            <line num="272" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="ConfigurableAsyncHealthCheck(Result,Exception)" num="275" count="2" type="method"/>
            <line num="276" count="2" type="stmt"/>
            <line num="277" count="2" type="stmt"/>
            <line complexity="2" visibility="protected" signature="check() : Result" num="280" count="2" type="method"/>
            <line num="282" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="282" type="cond"/>
            <line num="283" count="1" type="stmt"/>
            <line num="285" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="check() : Result" num="292" count="1" type="method"/>
            <line num="294" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="check() : Result" num="301" count="1" type="method"/>
            <line num="303" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="check() : Result" num="310" count="1" type="method"/>
            <line num="312" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="clockWithFixedTime(long) : Clock" num="316" count="4" type="method"/>
            <line num="317" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTick() : long" num="318" count="0" type="method"/>
            <line num="320" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime() : long" num="323" count="10" type="method"/>
            <line num="325" count="10" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-healthchecks/src/test/java/com/codahale/metrics/health/HealthCheckFilterTest.java" name="HealthCheckFilterTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="14" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="HealthCheckFilterTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="theAllFilterMatchesAllHealthChecks() : void" num="10" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="12" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-healthchecks/src/test/java/com/codahale/metrics/health/HealthCheckRegistryTest.java" name="HealthCheckRegistryTest.java">
            <metrics coveredelements="95" coveredconditionals="0" complexity="21" loc="227" coveredmethods="20" methods="20" elements="96" classes="2" ncloc="179" statements="76" conditionals="0" coveredstatements="75"/>
            <class name="HealthCheckRegistryTest">
               <metrics coveredelements="91" complexity="19" methods="18" testruns="17" statements="74" coveredconditionals="0" coveredmethods="18" elements="92" testfailures="0" testduration="0.014000000000000002" conditionals="0" coveredstatements="73" testpasses="17"/>
            </class>
            <class name="HealthCheckRegistryTest.TestAsyncHealthCheck">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="44" count="17" type="method"/>
            <line num="47" count="17" type="stmt"/>
            <line num="49" count="17" type="stmt"/>
            <line num="50" count="17" type="stmt"/>
            <line num="51" count="17" type="stmt"/>
            <line num="54" count="17" type="stmt"/>
            <line num="55" count="17" type="stmt"/>
            <line num="56" count="17" type="stmt"/>
            <line complexity="1" visibility="public" signature="asyncHealthCheckIsScheduledOnExecutor() : void" num="59" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="asyncHealthCheckIsCanceledOnRemove() : void" num="66" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="registeringHealthCheckTwiceThrowsException() : void" num="73" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="registeringHealthCheckTriggersNotification() : void" num="78" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="removingHealthCheckTriggersNotification() : void" num="85" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="addingListenerCatchesExistingHealthChecks() : void" num="96" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="removedListenerDoesNotReceiveUpdates() : void" num="110" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="runsRegisteredHealthChecks() : void" num="122" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="124" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="runsRegisteredHealthChecksWithFilter() : void" num="131" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="133" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="runsRegisteredHealthChecksWithNonMatchingFilter() : void" num="138" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="140" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="runsRegisteredHealthChecksInParallel() : void" num="145" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="runsRegisteredHealthChecksInParallelWithNonMatchingFilter() : void" num="158" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="160" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="runsRegisteredHealthChecksInParallelWithFilter() : void" num="169" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="removesRegisteredHealthChecks() : void" num="181" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="183" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasASetOfHealthCheckNames() : void" num="192" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="194" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="runsHealthChecksByName() : void" num="197" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="199" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="doesNotRunNonexistentHealthChecks() : void" num="202" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="204" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="TestAsyncHealthCheck(Result)" num="218" count="17" type="method"/>
            <line num="219" count="17" type="stmt"/>
            <line complexity="1" visibility="protected" signature="check() : Result" num="222" count="1" type="method"/>
            <line num="224" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-healthchecks/src/test/java/com/codahale/metrics/health/HealthCheckTest.java" name="HealthCheckTest.java">
            <metrics coveredelements="91" coveredconditionals="0" complexity="19" loc="279" coveredmethods="18" methods="19" elements="93" classes="2" ncloc="211" statements="74" conditionals="0" coveredstatements="73"/>
            <class name="HealthCheckTest">
               <metrics coveredelements="87" complexity="17" methods="17" testruns="14" statements="72" coveredconditionals="0" coveredmethods="16" elements="89" testfailures="0" testduration="0.133" conditionals="0" coveredstatements="71" testpasses="14"/>
            </class>
            <class name="HealthCheckTest.ExampleHealthCheck">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="private" signature="ExampleHealthCheck(HealthCheck)" num="23" count="14" type="method"/>
            <line num="24" count="14" type="stmt"/>
            <line complexity="1" visibility="protected" signature="check() : Result" num="27" count="2" type="method"/>
            <line num="29" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="canHaveHealthyResults() : void" num="36" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="canHaveHealthyResultsWithMessages() : void" num="50" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="canHaveHealthyResultsWithFormattedMessages() : void" num="64" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="canHaveUnhealthyResults() : void" num="78" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="canHaveUnhealthyResultsWithFormattedMessages() : void" num="92" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="94" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="canHaveUnhealthyResultsWithExceptions() : void" num="106" testsuccess="true" count="1" testduration="0.069" type="method"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="canHaveHealthyBuilderWithFormattedMessage() : void" num="123" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="125" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="canHaveHealthyBuilderWithDetail() : void" num="137" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="139" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="canHaveUnHealthyBuilderWithDetail() : void" num="157" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="159" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="canHaveUnHealthyBuilderWithDetailAndError() : void" num="177" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="191" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnsResultsWhenExecuted() : void" num="201" testsuccess="true" count="1" testduration="0.043" type="method"/>
            <line num="203" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="wrapsExceptionsWhenExecuted() : void" num="212" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="214" count="1" type="stmt"/>
            <line num="215" count="1" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="222" count="1" type="stmt"/>
            <line num="224" count="1" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line num="228" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="canHaveUserSuppliedClockForTimestamp() : void" num="232" testsuccess="true" count="1" testduration="0.008" type="method"/>
            <line num="234" count="1" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line num="242" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="246" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="toStringWorksEvenForNullAttributes() : void" num="250" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="252" count="1" type="stmt"/>
            <line num="253" count="1" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line num="260" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="clockWithFixedTime(ZonedDateTime) : Clock" num="266" count="2" type="method"/>
            <line num="267" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTick() : long" num="268" count="0" type="method"/>
            <line num="270" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime() : long" num="273" count="3" type="method"/>
            <line num="275" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-healthchecks/src/test/java/com/codahale/metrics/health/SharedHealthCheckRegistriesTest.java" name="SharedHealthCheckRegistriesTest.java">
            <metrics coveredelements="27" coveredconditionals="0" complexity="10" loc="97" coveredmethods="7" methods="10" elements="41" classes="1" ncloc="72" statements="31" conditionals="0" coveredstatements="20"/>
            <class name="SharedHealthCheckRegistriesTest">
               <metrics coveredelements="27" complexity="10" methods="10" testruns="9" statements="31" coveredconditionals="0" coveredmethods="7" elements="41" testfailures="3" testduration="0.08800000000000001" conditionals="0" coveredstatements="20" testpasses="6"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="17" count="9" type="method"/>
            <line num="19" count="9" type="stmt"/>
            <line num="20" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="savesCreatedRegistry() : void" num="23" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnsSetOfCreatedRegistries() : void" num="31" testsuccess="true" count="1" testduration="0.043" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="registryCanBeRemoved() : void" num="38" testsuccess="true" count="1" testduration="0.021" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="registryCanBeCleared() : void" num="47" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="defaultRegistryIsNotSetByDefault() : void" num="57" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="defaultRegistryCanBeSet() : void" num="65" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="specificRegistryCanBeSetAsDefault() : void" num="72" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="unableToSetDefaultRegistryTwice() : void" num="80" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unableToSetCustomDefaultRegistryTwice() : void" num="89" testsuccess="false" count="0" testduration="0.022" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics.httpclient5">
         <metrics coveredelements="114" complexity="30" loc="395" methods="26" classes="5" statements="96" coveredconditionals="2" coveredmethods="22" elements="126" ncloc="322" files="5" conditionals="4" coveredstatements="90"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-httpclient5/src/test/java/com/codahale/metrics/httpclient5/HttpClientMetricNameStrategiesTest.java" name="HttpClientMetricNameStrategiesTest.java">
            <metrics coveredelements="24" coveredconditionals="0" complexity="9" loc="86" coveredmethods="9" methods="9" elements="24" classes="1" ncloc="70" statements="15" conditionals="0" coveredstatements="15"/>
            <class name="HttpClientMetricNameStrategiesTest">
               <metrics coveredelements="24" complexity="9" methods="9" testruns="8" statements="15" coveredconditionals="0" coveredmethods="9" elements="24" testfailures="0" testduration="0.011" conditionals="0" coveredstatements="15" testpasses="8"/>
            </class>
            <line complexity="1" visibility="public" signature="methodOnlyWithName() : void" num="22" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="24" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="methodOnlyWithoutName() : void" num="28" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hostAndMethodWithName() : void" num="34" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hostAndMethodWithoutName() : void" num="40" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hostAndMethodWithNameInWrappedRequest() : void" num="46" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hostAndMethodWithoutNameInWrappedRequest() : void" num="54" testsuccess="true" count="1" testduration="0.009" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="querylessUrlAndMethodWithName() : void" num="62" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="querylessUrlAndMethodWithNameInWrappedRequest() : void" num="70" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="rewriteRequestURI(HttpRequest) : HttpRequest" num="79" count="3" type="method"/>
            <line num="80" count="3" type="stmt"/>
            <line num="81" count="3" type="stmt"/>
            <line num="82" count="3" type="stmt"/>
            <line num="84" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-httpclient5/src/test/java/com/codahale/metrics/httpclient5/InstrumentedAsyncClientConnectionManagerTest.java" name="InstrumentedAsyncClientConnectionManagerTest.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="2" loc="41" coveredmethods="2" methods="2" elements="12" classes="1" ncloc="31" statements="10" conditionals="0" coveredstatements="10"/>
            <class name="InstrumentedAsyncClientConnectionManagerTest">
               <metrics coveredelements="12" complexity="2" methods="2" testruns="2" statements="10" coveredconditionals="0" coveredmethods="2" elements="12" testfailures="0" testduration="0.104" conditionals="0" coveredstatements="10" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="shouldRemoveGauges() : void" num="15" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="17" count="1" type="stmt"/>
            <line num="18" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="configurableViaBuilder() : void" num="27" testsuccess="true" count="1" testduration="0.103" type="method"/>
            <line num="29" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-httpclient5/src/test/java/com/codahale/metrics/httpclient5/InstrumentedHttpAsyncClientsTest.java" name="InstrumentedHttpAsyncClientsTest.java">
            <metrics coveredelements="45" coveredconditionals="2" complexity="13" loc="150" coveredmethods="6" methods="10" elements="56" classes="1" ncloc="127" statements="42" conditionals="4" coveredstatements="37"/>
            <class name="InstrumentedHttpAsyncClientsTest">
               <metrics coveredelements="45" complexity="13" methods="10" testruns="2" statements="42" coveredconditionals="2" coveredmethods="6" elements="56" testfailures="0" testduration="0.20800000000000002" conditionals="4" coveredstatements="37" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="52" count="2" type="method"/>
            <line num="54" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="tearDown() : void" num="62" count="2" type="method"/>
            <line num="64" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="64" type="cond"/>
            <line num="65" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="67" type="cond"/>
            <line num="68" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="registersExpectedMetricsGivenNameStrategy() : void" num="72" testsuccess="true" count="1" testduration="0.043" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="completed(SimpleHttpResponse) : void" num="88" count="1" type="method"/>
            <line num="90" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="failed(Exception) : void" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cancelled() : void" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="registersExpectedExceptionMetrics() : void" num="108" testsuccess="true" count="1" testduration="0.165" type="method"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="completed(SimpleHttpResponse) : void" num="125" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="failed(Exception) : void" num="130" count="1" type="method"/>
            <line num="132" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="cancelled() : void" num="135" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-httpclient5/src/test/java/com/codahale/metrics/httpclient5/InstrumentedHttpClientConnectionManagerTest.java" name="InstrumentedHttpClientConnectionManagerTest.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="2" loc="41" coveredmethods="2" methods="2" elements="12" classes="1" ncloc="31" statements="10" conditionals="0" coveredstatements="10"/>
            <class name="InstrumentedHttpClientConnectionManagerTest">
               <metrics coveredelements="12" complexity="2" methods="2" testruns="2" statements="10" coveredconditionals="0" coveredmethods="2" elements="12" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="10" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="shouldRemoveGauges() : void" num="15" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="17" count="1" type="stmt"/>
            <line num="18" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="configurableViaBuilder() : void" num="27" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="29" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-httpclient5/src/test/java/com/codahale/metrics/httpclient5/InstrumentedHttpClientsTest.java" name="InstrumentedHttpClientsTest.java">
            <metrics coveredelements="21" coveredconditionals="0" complexity="4" loc="77" coveredmethods="3" methods="3" elements="22" classes="1" ncloc="63" statements="19" conditionals="0" coveredstatements="18"/>
            <class name="InstrumentedHttpClientsTest">
               <metrics coveredelements="21" complexity="4" methods="3" testruns="2" statements="19" coveredconditionals="0" coveredmethods="3" elements="22" testfailures="0" testduration="0.41100000000000003" conditionals="0" coveredstatements="18" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="34" count="2" type="method"/>
            <line num="36" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="registersExpectedMetricsGivenNameStrategy() : void" num="39" testsuccess="true" count="1" testduration="0.25" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="registersExpectedExceptionMetrics() : void" num="52" testsuccess="true" count="1" testduration="0.161" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics.caffeine">
         <metrics coveredelements="35" complexity="10" loc="108" methods="9" classes="1" statements="24" coveredconditionals="2" coveredmethods="9" elements="35" ncloc="69" files="1" conditionals="2" coveredstatements="24"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-caffeine/src/test/java/com/codahale/metrics/caffeine/MetricsStatsCounterTest.java" name="MetricsStatsCounterTest.java">
            <metrics coveredelements="35" coveredconditionals="2" complexity="10" loc="108" coveredmethods="9" methods="9" elements="35" classes="1" ncloc="69" statements="24" conditionals="2" coveredstatements="24"/>
            <class name="MetricsStatsCounterTest">
               <metrics coveredelements="35" complexity="10" methods="9" testruns="8" statements="24" coveredconditionals="2" coveredmethods="9" elements="35" testfailures="0" testduration="0.109" conditionals="2" coveredstatements="24" testpasses="8"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="41" count="8" type="method"/>
            <line num="43" count="8" type="stmt"/>
            <line num="44" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="basicUsage() : void" num="47" testsuccess="true" count="1" testduration="0.045" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line falsecount="1" truecount="4" num="54" type="cond"/>
            <line num="55" count="4" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hit() : void" num="62" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="miss() : void" num="68" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="loadSuccess() : void" num="74" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="loadFailure() : void" num="80" testsuccess="true" count="1" testduration="0.063" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="eviction() : void" num="86" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="evictionWithWeight() : void" num="93" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="evictionWithCause() : void" num="100" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="5" type="stmt"/>
            <line num="105" count="5" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics.json">
         <metrics coveredelements="90" complexity="13" loc="348" methods="13" classes="2" statements="77" coveredconditionals="0" coveredmethods="13" elements="90" ncloc="306" files="2" conditionals="0" coveredstatements="77"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-json/src/test/java/com/codahale/metrics/json/HealthCheckModuleTest.java" name="HealthCheckModuleTest.java">
            <metrics coveredelements="26" coveredconditionals="0" complexity="6" loc="138" coveredmethods="6" methods="6" elements="26" classes="1" ncloc="123" statements="20" conditionals="0" coveredstatements="20"/>
            <class name="HealthCheckModuleTest">
               <metrics coveredelements="26" complexity="6" methods="6" testruns="6" statements="20" coveredconditionals="0" coveredmethods="6" elements="26" testfailures="0" testduration="0.023" conditionals="0" coveredstatements="20" testpasses="6"/>
            </class>
            <line complexity="1" visibility="public" signature="serializesAHealthyResult() : void" num="17" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="19" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serializesAHealthyResultWithAMessage() : void" num="24" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serializesAnUnhealthyResult() : void" num="36" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serializesAnUnhealthyResultWithAnException() : void" num="48" testsuccess="true" count="1" testduration="0.008" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serializesAnUnhealthyResultWithNestedExceptions() : void" num="70" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serializeResultWithDetail() : void" num="102" testsuccess="true" count="1" testduration="0.014" type="method"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-json/src/test/java/com/codahale/metrics/json/MetricsModuleTest.java" name="MetricsModuleTest.java">
            <metrics coveredelements="64" coveredconditionals="0" complexity="7" loc="210" coveredmethods="7" methods="7" elements="64" classes="1" ncloc="183" statements="57" conditionals="0" coveredstatements="57"/>
            <class name="MetricsModuleTest">
               <metrics coveredelements="64" complexity="7" methods="7" testruns="7" statements="57" coveredconditionals="0" coveredmethods="7" elements="64" testfailures="0" testduration="0.601" conditionals="0" coveredstatements="57" testpasses="7"/>
            </class>
            <line complexity="1" visibility="public" signature="serializesGauges() : void" num="24" testsuccess="true" count="1" testduration="0.015" type="method"/>
            <line num="26" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serializesGaugesThatThrowExceptions() : void" num="32" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serializesCounters() : void" num="42" testsuccess="true" count="1" testduration="0.421" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serializesHistograms() : void" num="51" testsuccess="true" count="1" testduration="0.022" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serializesMeters() : void" num="104" testsuccess="true" count="1" testduration="0.039" type="method"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serializesTimers() : void" num="123" testsuccess="true" count="1" testduration="0.094" type="method"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serializesMetricRegistries() : void" num="197" testsuccess="true" count="1" testduration="0.01" type="method"/>
            <line num="199" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics.servlets">
         <metrics coveredelements="267" complexity="66" loc="938" methods="66" classes="8" statements="205" coveredconditionals="0" coveredmethods="64" elements="271" ncloc="802" files="8" conditionals="0" coveredstatements="203"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-servlets/src/test/java/com/codahale/metrics/servlets/AbstractServletTest.java" name="AbstractServletTest.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="3" loc="29" coveredmethods="3" methods="3" elements="7" classes="1" ncloc="23" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="AbstractServletTest">
               <metrics coveredelements="7" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="setUpTester() : void" num="13" count="29" type="method"/>
            <line num="15" count="29" type="stmt"/>
            <line num="16" count="29" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDownTester() : void" num="21" count="29" type="method"/>
            <line num="23" count="29" type="stmt"/>
            <line complexity="1" visibility="protected" signature="processRequest() : void" num="26" count="23" type="method"/>
            <line num="27" count="23" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-servlets/src/test/java/com/codahale/metrics/servlets/AdminServletTest.java" name="AdminServletTest.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="3" loc="62" coveredmethods="3" methods="3" elements="14" classes="1" ncloc="54" statements="11" conditionals="0" coveredstatements="11"/>
            <class name="AdminServletTest">
               <metrics coveredelements="14" complexity="3" methods="3" testruns="1" statements="11" coveredconditionals="0" coveredmethods="3" elements="14" testfailures="0" testduration="0.01" conditionals="0" coveredstatements="11" testpasses="1"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp(ServletTester) : void" num="16" count="1" type="method"/>
            <line num="18" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="setUp() : void" num="25" count="1" type="method"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnsA200() : void" num="32" testsuccess="true" count="1" testduration="0.01" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-servlets/src/test/java/com/codahale/metrics/servlets/CpuProfileServletTest.java" name="CpuProfileServletTest.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="5" loc="44" coveredmethods="5" methods="5" elements="13" classes="1" ncloc="34" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="CpuProfileServletTest">
               <metrics coveredelements="13" complexity="5" methods="5" testruns="3" statements="8" coveredconditionals="0" coveredmethods="5" elements="13" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="8" testpasses="3"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp(ServletTester) : void" num="12" count="3" type="method"/>
            <line num="14" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="setUp() : void" num="17" count="3" type="method"/>
            <line num="19" count="3" type="stmt"/>
            <line num="20" count="3" type="stmt"/>
            <line num="21" count="3" type="stmt"/>
            <line num="23" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="returns200OK() : void" num="26" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="28" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnsPprofRaw() : void" num="32" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnsUncacheable() : void" num="38" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="40" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-servlets/src/test/java/com/codahale/metrics/servlets/HealthCheckServletTest.java" name="HealthCheckServletTest.java">
            <metrics coveredelements="95" coveredconditionals="0" complexity="26" loc="271" coveredmethods="24" methods="26" elements="99" classes="1" ncloc="224" statements="73" conditionals="0" coveredstatements="71"/>
            <class name="HealthCheckServletTest">
               <metrics coveredelements="95" complexity="26" methods="26" testruns="8" statements="73" coveredconditionals="0" coveredmethods="24" elements="99" testfailures="0" testduration="0.7720000000000001" conditionals="0" coveredstatements="71" testpasses="8"/>
            </class>
            <line complexity="1" visibility="public" signature="getTick() : long" num="41" count="10" type="method"/>
            <line num="43" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime() : long" num="46" count="5" type="method"/>
            <line num="48" count="5" type="stmt"/>
            <line complexity="1" visibility="protected" signature="setUp(ServletTester) : void" num="55" count="8" type="method"/>
            <line num="57" count="8" type="stmt"/>
            <line num="58" count="8" type="stmt"/>
            <line num="59" count="8" type="stmt"/>
            <line num="60" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="setUp() : void" num="64" count="8" type="method"/>
            <line num="66" count="8" type="stmt"/>
            <line num="67" count="8" type="stmt"/>
            <line num="68" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="71" count="8" type="method"/>
            <line num="73" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="returns501IfNoHealthChecksAreRegistered() : void" num="76" testsuccess="true" count="1" testduration="0.269" type="method"/>
            <line num="78" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnsA200IfAllHealthChecksAreHealthy() : void" num="88" testsuccess="true" count="1" testduration="0.012" type="method"/>
            <line num="90" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="check() : Result" num="91" count="1" type="method"/>
            <line num="93" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="clock() : Clock" num="96" count="2" type="method"/>
            <line num="98" count="2" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnsASubsetOfHealthChecksIfFiltered() : void" num="114" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="116" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="check() : Result" num="117" count="1" type="method"/>
            <line num="119" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="clock() : Clock" num="122" count="2" type="method"/>
            <line num="124" count="2" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="check() : Result" num="129" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="clock() : Clock" num="134" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnsA500IfAnyHealthChecksAreUnhealthy() : void" num="152" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="154" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="check() : Result" num="155" count="1" type="method"/>
            <line num="157" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="clock() : Clock" num="160" count="2" type="method"/>
            <line num="162" count="2" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="check() : Result" num="167" count="1" type="method"/>
            <line num="169" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="clock() : Clock" num="172" count="2" type="method"/>
            <line num="174" count="2" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="optionallyPrettyPrintsTheJson() : void" num="190" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="192" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="check() : Result" num="193" count="1" type="method"/>
            <line num="195" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="clock() : Clock" num="198" count="2" type="method"/>
            <line num="200" count="2" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="healthyResultUsingFixedClockWithMessage(String) : HealthCheck.Result" num="222" count="4" type="method"/>
            <line num="223" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructorWithRegistryAsArgumentIsUsedInPreferenceOverServletConfig() : void" num="230" testsuccess="true" count="1" testduration="0.047" type="method"/>
            <line num="232" count="1" type="stmt"/>
            <line num="233" count="1" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line num="240" count="1" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructorWithRegistryAsArgumentUsesServletConfigWhenNull() : void" num="244" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="246" count="1" type="stmt"/>
            <line num="247" count="1" type="stmt"/>
            <line num="248" count="1" type="stmt"/>
            <line num="249" count="1" type="stmt"/>
            <line num="250" count="1" type="stmt"/>
            <line num="253" count="1" type="stmt"/>
            <line num="254" count="1" type="stmt"/>
            <line num="256" count="1" type="stmt"/>
            <line num="257" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructorWithRegistryAsArgumentUsesServletConfigWhenNullButWrongTypeInContext() : void" num="260" testsuccess="true" count="1" testduration="0.428" type="method"/>
            <line num="262" count="1" type="stmt"/>
            <line num="263" count="1" type="stmt"/>
            <line num="264" count="1" type="stmt"/>
            <line num="265" count="1" type="stmt"/>
            <line num="268" count="1" type="stmt"/>
            <line num="269" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-servlets/src/test/java/com/codahale/metrics/servlets/MetricsServletContextListenerTest.java" name="MetricsServletContextListenerTest.java">
            <metrics coveredelements="35" coveredconditionals="0" complexity="8" loc="171" coveredmethods="8" methods="8" elements="35" classes="1" ncloc="153" statements="27" conditionals="0" coveredstatements="27"/>
            <class name="MetricsServletContextListenerTest">
               <metrics coveredelements="35" complexity="8" methods="8" testruns="2" statements="27" coveredconditionals="0" coveredmethods="8" elements="35" testfailures="0" testduration="0.031" conditionals="0" coveredstatements="27" testpasses="2"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp(ServletTester) : void" num="25" count="2" type="method"/>
            <line num="27" count="2" type="stmt"/>
            <line num="28" count="2" type="stmt"/>
            <line num="29" count="2" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getMetricRegistry() : MetricRegistry" num="30" count="2" type="method"/>
            <line num="32" count="2" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getDurationUnit() : TimeUnit" num="35" count="4" type="method"/>
            <line num="37" count="4" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getRateUnit() : TimeUnit" num="40" count="4" type="method"/>
            <line num="42" count="4" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getAllowedOrigin() : String" num="45" count="4" type="method"/>
            <line num="47" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="setUp() : void" num="52" count="2" type="method"/>
            <line num="56" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnsA200() : void" num="70" testsuccess="true" count="1" testduration="0.024" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="optionallyPrettyPrintsTheJson() : void" num="98" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="100" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-servlets/src/test/java/com/codahale/metrics/servlets/MetricsServletTest.java" name="MetricsServletTest.java">
            <metrics coveredelements="73" coveredconditionals="0" complexity="9" loc="263" coveredmethods="9" methods="9" elements="73" classes="1" ncloc="236" statements="64" conditionals="0" coveredstatements="64"/>
            <class name="MetricsServletTest">
               <metrics coveredelements="73" complexity="9" methods="9" testruns="7" statements="64" coveredconditionals="0" coveredmethods="9" elements="73" testfailures="0" testduration="0.10300000000000002" conditionals="0" coveredstatements="64" testpasses="7"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp(ServletTester) : void" num="32" count="7" type="method"/>
            <line num="34" count="7" type="stmt"/>
            <line num="35" count="7" type="stmt"/>
            <line num="36" count="7" type="stmt"/>
            <line num="37" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="setUp() : void" num="40" count="7" type="method"/>
            <line num="44" count="7" type="stmt"/>
            <line num="46" count="7" type="stmt"/>
            <line num="47" count="7" type="stmt"/>
            <line num="48" count="7" type="stmt"/>
            <line num="49" count="7" type="stmt"/>
            <line num="50" count="7" type="stmt"/>
            <line num="53" count="7" type="stmt"/>
            <line num="54" count="7" type="stmt"/>
            <line num="55" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnsA200() : void" num="58" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnsJsonWhenJsonpInitParamNotSet() : void" num="86" testsuccess="true" count="1" testduration="0.008" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnsJsonpWhenInitParamSet() : void" num="117" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="optionallyPrettyPrintsTheJson() : void" num="148" testsuccess="true" count="1" testduration="0.01" type="method"/>
            <line num="150" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructorWithRegistryAsArgumentIsUsedInPreferenceOverServletConfig() : void" num="222" testsuccess="true" count="1" testduration="0.069" type="method"/>
            <line num="224" count="1" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line num="230" count="1" type="stmt"/>
            <line num="232" count="1" type="stmt"/>
            <line num="233" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructorWithRegistryAsArgumentUsesServletConfigWhenNull() : void" num="236" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="238" count="1" type="stmt"/>
            <line num="239" count="1" type="stmt"/>
            <line num="240" count="1" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line num="242" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line num="246" count="1" type="stmt"/>
            <line num="248" count="1" type="stmt"/>
            <line num="249" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="constructorWithRegistryAsArgumentUsesServletConfigWhenNullButWrongTypeInContext() : void" num="252" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="254" count="1" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line num="256" count="1" type="stmt"/>
            <line num="257" count="1" type="stmt"/>
            <line num="260" count="1" type="stmt"/>
            <line num="261" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-servlets/src/test/java/com/codahale/metrics/servlets/PingServletTest.java" name="PingServletTest.java">
            <metrics coveredelements="15" coveredconditionals="0" complexity="6" loc="49" coveredmethods="6" methods="6" elements="15" classes="1" ncloc="39" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="PingServletTest">
               <metrics coveredelements="15" complexity="6" methods="6" testruns="4" statements="9" coveredconditionals="0" coveredmethods="6" elements="15" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="9" testpasses="4"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp(ServletTester) : void" num="11" count="4" type="method"/>
            <line num="13" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="setUp() : void" num="16" count="4" type="method"/>
            <line num="18" count="4" type="stmt"/>
            <line num="19" count="4" type="stmt"/>
            <line num="20" count="4" type="stmt"/>
            <line num="22" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="returns200OK() : void" num="25" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="27" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnsPong() : void" num="31" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnsTextPlain() : void" num="37" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnsUncacheable() : void" num="43" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="45" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-servlets/src/test/java/com/codahale/metrics/servlets/ThreadDumpServletTest.java" name="ThreadDumpServletTest.java">
            <metrics coveredelements="15" coveredconditionals="0" complexity="6" loc="49" coveredmethods="6" methods="6" elements="15" classes="1" ncloc="39" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="ThreadDumpServletTest">
               <metrics coveredelements="15" complexity="6" methods="6" testruns="4" statements="9" coveredconditionals="0" coveredmethods="6" elements="15" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="9" testpasses="4"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp(ServletTester) : void" num="11" count="4" type="method"/>
            <line num="13" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="setUp() : void" num="16" count="4" type="method"/>
            <line num="18" count="4" type="stmt"/>
            <line num="19" count="4" type="stmt"/>
            <line num="20" count="4" type="stmt"/>
            <line num="22" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="returns200OK() : void" num="25" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="27" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnsAThreadDump() : void" num="31" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnsTextPlain() : void" num="37" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnsUncacheable() : void" num="43" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="45" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics.servlets.experiments">
         <metrics coveredelements="0" complexity="2" loc="60" methods="2" classes="1" statements="19" coveredconditionals="0" coveredmethods="0" elements="21" ncloc="49" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-servlets/src/test/java/com/codahale/metrics/servlets/experiments/ExampleServer.java" name="ExampleServer.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="60" coveredmethods="0" methods="2" elements="21" classes="1" ncloc="49" statements="19" conditionals="0" coveredstatements="0"/>
            <class name="ExampleServer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="21" statements="19" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 28()" num="28" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics.httpasyncclient">
         <metrics coveredelements="27" complexity="14" loc="262" methods="9" classes="3" statements="59" coveredconditionals="2" coveredmethods="4" elements="70" ncloc="172" files="3" conditionals="2" coveredstatements="21"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-httpasyncclient/src/test/java/com/codahale/metrics/httpasyncclient/HttpClientTestBase.java" name="HttpClientTestBase.java">
            <metrics coveredelements="15" coveredconditionals="2" complexity="7" loc="71" coveredmethods="2" methods="3" elements="20" classes="1" ncloc="41" statements="15" conditionals="2" coveredstatements="11"/>
            <class name="HttpClientTestBase">
               <metrics coveredelements="15" coveredconditionals="2" complexity="7" coveredmethods="2" methods="3" elements="20" statements="15" conditionals="2" coveredstatements="11"/>
            </class>
            <line complexity="4" visibility="public" signature="findAvailableLocalPort() : int" num="28" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="startServerWithGlobalRequestHandler(HttpRequestHandler) : HttpHost" num="46" count="1" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="tearDown() : void" num="65" count="2" type="method"/>
            <line num="67" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="67" type="cond"/>
            <line num="68" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-httpasyncclient/src/test/java/com/codahale/metrics/httpasyncclient/InstrumentedHttpClientsTest.java" name="InstrumentedHttpClientsTest.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="2" loc="57" coveredmethods="2" methods="2" elements="12" classes="1" ncloc="45" statements="10" conditionals="0" coveredstatements="10"/>
            <class name="InstrumentedHttpClientsTest">
               <metrics coveredelements="12" complexity="2" methods="2" testruns="1" statements="10" coveredconditionals="0" coveredmethods="2" elements="12" testfailures="0" testduration="0.132" conditionals="0" coveredstatements="10" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="registersExpectedMetricsGivenNameStrategy() : void" num="36" testsuccess="true" count="1" testduration="0.132" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="setUp() : void" num="50" count="1" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-httpasyncclient/src/test/java/com/codahale/metrics/httpasyncclient/InstrumentedHttpClientsTimerTest.java" name="InstrumentedHttpClientsTimerTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="134" coveredmethods="0" methods="4" elements="38" classes="1" ncloc="86" statements="34" conditionals="0" coveredstatements="0"/>
            <class name="InstrumentedHttpClientsTimerTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="4" elements="38" statements="34" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="timerIsStoppedCorrectly() : void" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="timerIsStoppedCorrectlyWithProvidedFutureCallbackCompleted() : void" num="77" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="timerIsStoppedCorrectlyWithProvidedFutureCallbackFailed() : void" num="104" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics.jdbi">
         <metrics coveredelements="125" complexity="11" loc="255" methods="11" classes="1" statements="114" coveredconditionals="0" coveredmethods="11" elements="125" ncloc="207" files="1" conditionals="0" coveredstatements="114"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jdbi/src/test/java/com/codahale/metrics/jdbi/InstrumentedTimingCollectorTest.java" name="InstrumentedTimingCollectorTest.java">
            <metrics coveredelements="125" coveredconditionals="0" complexity="11" loc="255" coveredmethods="11" methods="11" elements="125" classes="1" ncloc="207" statements="114" conditionals="0" coveredstatements="114"/>
            <class name="InstrumentedTimingCollectorTest">
               <metrics coveredelements="125" complexity="11" methods="11" testruns="11" statements="114" coveredconditionals="0" coveredmethods="11" elements="125" testfailures="0" testduration="0.48400000000000004" conditionals="0" coveredstatements="114" testpasses="11"/>
            </class>
            <line complexity="1" visibility="public" signature="updatesTimerForSqlObjects() : void" num="22" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="updatesTimerForSqlObjectsWithoutMethod() : void" num="43" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="updatesTimerForRawSql() : void" num="63" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="updatesTimerForNoRawSql() : void" num="82" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="updatesTimerForNonSqlishRawSql() : void" num="100" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="updatesTimerForContextClass() : void" num="119" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="updatesTimerForTemplateFile() : void" num="141" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="updatesTimerForContextGroupAndName() : void" num="163" testsuccess="true" count="1" testduration="0.463" type="method"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="updatesTimerForContextGroupTypeAndName() : void" num="185" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line num="191" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="updatesTimerForShortSqlObjectStrategy() : void" num="208" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="210" count="1" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line num="213" count="1" type="stmt"/>
            <line num="214" count="1" type="stmt"/>
            <line num="215" count="1" type="stmt"/>
            <line num="216" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line num="222" count="1" type="stmt"/>
            <line num="224" count="1" type="stmt"/>
            <line num="228" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="updatesTimerForShortContextClassStrategy() : void" num="232" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="234" count="1" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line num="239" count="1" type="stmt"/>
            <line num="240" count="1" type="stmt"/>
            <line num="243" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line num="246" count="1" type="stmt"/>
            <line num="248" count="1" type="stmt"/>
            <line num="252" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics.jdbi3">
         <metrics coveredelements="26" complexity="2" loc="61" methods="2" classes="1" statements="24" coveredconditionals="0" coveredmethods="2" elements="26" ncloc="44" files="1" conditionals="0" coveredstatements="24"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jdbi3/src/test/java/com/codahale/metrics/jdbi3/InstrumentedSqlLoggerTest.java" name="InstrumentedSqlLoggerTest.java">
            <metrics coveredelements="26" coveredconditionals="0" complexity="2" loc="61" coveredmethods="2" methods="2" elements="26" classes="1" ncloc="44" statements="24" conditionals="0" coveredstatements="24"/>
            <class name="InstrumentedSqlLoggerTest">
               <metrics coveredelements="26" complexity="2" methods="2" testruns="2" statements="24" coveredconditionals="0" coveredmethods="2" elements="26" testfailures="0" testduration="0.645" conditionals="0" coveredstatements="24" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="logsExecutionTime() : void" num="18" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="logsExceptionTime() : void" num="40" testsuccess="true" count="1" testduration="0.643" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics.jdbi3.strategies">
         <metrics coveredelements="57" complexity="16" loc="218" methods="16" classes="9" statements="41" coveredconditionals="0" coveredmethods="16" elements="57" ncloc="161" files="5" conditionals="0" coveredstatements="41"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jdbi3/src/test/java/com/codahale/metrics/jdbi3/strategies/AbstractStrategyTest.java" name="AbstractStrategyTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="23" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="17" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="AbstractStrategyTest">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="15" count="13" type="method"/>
            <line num="17" count="13" type="stmt"/>
            <line complexity="1" visibility="package" signature="getTimerMaxValue(String) : long" num="20" count="4" type="method"/>
            <line num="21" count="4" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jdbi3/src/test/java/com/codahale/metrics/jdbi3/strategies/BasicSqlNameStrategyTest.java" name="BasicSqlNameStrategyTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="1" loc="21" coveredmethods="1" methods="1" elements="4" classes="1" ncloc="15" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="BasicSqlNameStrategyTest">
               <metrics coveredelements="4" complexity="1" methods="1" testruns="1" statements="3" coveredconditionals="0" coveredmethods="1" elements="4" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="producesMethodNameAsMetric() : void" num="14" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="16" count="1" type="stmt"/>
            <line num="17" count="1" type="stmt"/>
            <line num="18" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jdbi3/src/test/java/com/codahale/metrics/jdbi3/strategies/NaiveNameStrategyTest.java" name="NaiveNameStrategyTest.java">
            <metrics coveredelements="3" coveredconditionals="0" complexity="1" loc="17" coveredmethods="1" methods="1" elements="3" classes="1" ncloc="11" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="NaiveNameStrategyTest">
               <metrics coveredelements="3" complexity="1" methods="1" testruns="1" statements="2" coveredconditionals="0" coveredmethods="1" elements="3" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="producesSqlRawMetrics() : void" num="11" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="13" count="1" type="stmt"/>
            <line num="14" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jdbi3/src/test/java/com/codahale/metrics/jdbi3/strategies/SmartNameStrategyTest.java" name="SmartNameStrategyTest.java">
            <metrics coveredelements="26" coveredconditionals="0" complexity="5" loc="69" coveredmethods="5" methods="5" elements="26" classes="1" ncloc="53" statements="21" conditionals="0" coveredstatements="21"/>
            <class name="SmartNameStrategyTest">
               <metrics coveredelements="26" complexity="5" methods="5" testruns="4" statements="21" coveredconditionals="0" coveredmethods="5" elements="26" testfailures="0" testduration="0.057" conditionals="0" coveredstatements="21" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="20" count="4" type="method"/>
            <line num="23" count="4" type="stmt"/>
            <line num="24" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="updatesTimerForSqlObjects() : void" num="27" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="29" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="updatesTimerForRawSql() : void" num="39" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="updatesTimerForNoRawSql() : void" num="48" testsuccess="true" count="1" testduration="0.054" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="updatesTimerForContextClass() : void" num="59" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jdbi3/src/test/java/com/codahale/metrics/jdbi3/strategies/TimedAnnotationNameStrategyTest.java" name="TimedAnnotationNameStrategyTest.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="7" loc="88" coveredmethods="7" methods="7" elements="20" classes="5" ncloc="65" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="TimedAnnotationNameStrategyTest">
               <metrics coveredelements="20" complexity="7" methods="7" testruns="7" statements="13" coveredconditionals="0" coveredmethods="7" elements="20" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="13" testpasses="7"/>
            </class>
            <class name="TimedAnnotationNameStrategyTest.Foo">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TimedAnnotationNameStrategyTest.Bar">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TimedAnnotationNameStrategyTest.CustomBar">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TimedAnnotationNameStrategyTest.Dummy">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testAnnotationOnMethod() : void" num="45" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAnnotationOnMethodWithCustomName() : void" num="52" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAnnotationOnMethodWithCustomAbsoluteName() : void" num="59" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAnnotationOnClass() : void" num="65" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAnnotationOnMethodAndClassWithCustomNames() : void" num="72" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNoAnnotations() : void" num="78" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNoMethod() : void" num="84" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="86" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.codahale.metrics.ehcache">
         <metrics coveredelements="21" complexity="5" loc="93" methods="5" classes="2" statements="16" coveredconditionals="0" coveredmethods="5" elements="21" ncloc="71" files="2" conditionals="0" coveredstatements="16"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-ehcache/src/test/java/com/codahale/metrics/ehcache/InstrumentedCacheDecoratorFactoryTest.java" name="InstrumentedCacheDecoratorFactoryTest.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="3" loc="48" coveredmethods="3" methods="3" elements="10" classes="1" ncloc="37" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="InstrumentedCacheDecoratorFactoryTest">
               <metrics coveredelements="10" complexity="3" methods="3" testruns="2" statements="7" coveredconditionals="0" coveredmethods="3" elements="10" testfailures="0" testduration="0.046" conditionals="0" coveredstatements="7" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="24" count="2" type="method"/>
            <line num="26" count="2" type="stmt"/>
            <line num="27" count="2" type="stmt"/>
            <line num="29" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="measuresGets() : void" num="32" testsuccess="true" count="1" testduration="0.045" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="measuresPuts() : void" num="41" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-ehcache/src/test/java/com/codahale/metrics/ehcache/InstrumentedEhcacheTest.java" name="InstrumentedEhcacheTest.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="2" loc="45" coveredmethods="2" methods="2" elements="11" classes="1" ncloc="34" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="InstrumentedEhcacheTest">
               <metrics coveredelements="11" complexity="2" methods="2" testruns="1" statements="9" coveredconditionals="0" coveredmethods="2" elements="11" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="9" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="22" count="1" type="method"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="measuresGetsAndPuts() : void" num="29" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
         </file>
      </package>
      <package name="default-pkg">
         <metrics coveredelements="31" complexity="3" loc="86" methods="3" classes="1" statements="28" coveredconditionals="0" coveredmethods="3" elements="31" ncloc="68" files="1" conditionals="0" coveredstatements="28"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/metrics-jcache/src/test/java/JCacheGaugeSetTest.java" name="JCacheGaugeSetTest.java">
            <metrics coveredelements="31" coveredconditionals="0" complexity="3" loc="86" coveredmethods="3" methods="3" elements="31" classes="1" ncloc="68" statements="28" conditionals="0" coveredstatements="28"/>
            <class name="JCacheGaugeSetTest">
               <metrics coveredelements="31" complexity="3" methods="3" testruns="1" statements="28" coveredconditionals="0" coveredmethods="3" elements="31" testfailures="0" testduration="0.058" conditionals="0" coveredstatements="28" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="22" count="1" type="method"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="measuresGauges() : void" num="37" testsuccess="true" count="1" testduration="0.058" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="80" count="1" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
         </file>
      </package>
   </testproject>
</coverage>