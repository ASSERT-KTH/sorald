<?xml version="1.0" encoding="UTF-8"?>
<coverage generated="1594318752222" clover="4.4.1">
   <project name="FlatPack Parent 4.0.5-SNAPSHOT (Aggregated)" timestamp="1594318748271">
      <metrics coveredelements="1691" complexity="1076" loc="9949" methods="523" classes="73" statements="2143" packages="25" coveredconditionals="385" coveredmethods="253" elements="3450" ncloc="4900" files="73" conditionals="784" coveredstatements="1053"/>
      <package name="net.sf.flatpack.excel">
         <metrics coveredelements="0" complexity="28" loc="209" methods="8" classes="1" statements="54" coveredconditionals="0" coveredmethods="0" elements="90" ncloc="112" files="1" conditionals="28" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack-excel/src/main/java/net/sf/flatpack/excel/ExcelTransformer.java" name="ExcelTransformer.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="28" loc="209" coveredmethods="0" methods="8" elements="90" classes="1" ncloc="112" statements="54" conditionals="28" coveredstatements="0"/>
            <class name="ExcelTransformer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="28" coveredmethods="0" methods="8" elements="90" statements="54" conditionals="28" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ExcelTransformer(DataSet,File)" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="19" visibility="public" signature="writeExcelFile() : void" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="98" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="116" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="142" type="cond"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setExcludeFromExportColumns(String[]) : void" num="158" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="159" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setExportOnlyColumns(String[]) : void" num="172" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumericColumns() : String[]" num="183" count="0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setNumericColumns(String[]) : void" num="192" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExportOnlyColumns() : String[]" num="199" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExcludeFromExportColumns() : String[]" num="206" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.sf.flatpack.structure">
         <metrics coveredelements="30" complexity="25" loc="324" methods="25" classes="2" statements="29" coveredconditionals="0" coveredmethods="15" elements="54" ncloc="96" files="2" conditionals="0" coveredstatements="15"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/structure/ColumnMetaData.java" name="ColumnMetaData.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="11" loc="135" coveredmethods="5" methods="11" elements="26" classes="1" ncloc="45" statements="15" conditionals="0" coveredstatements="5"/>
            <class name="ColumnMetaData">
               <metrics coveredelements="10" coveredconditionals="0" complexity="11" coveredmethods="5" methods="11" elements="26" statements="15" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="ColumnMetaData()" num="40" count="343" type="method"/>
            <line num="41" count="343" type="stmt"/>
            <line complexity="1" visibility="public" signature="ColumnMetaData(String)" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getColLength() : int" num="57" count="131" type="method"/>
            <line num="58" count="131" type="stmt"/>
            <line complexity="1" visibility="public" signature="getColName() : String" num="66" count="718" type="method"/>
            <line num="67" count="718" type="stmt"/>
            <line complexity="1" visibility="public" signature="getEndPosition() : int" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStartPosition() : int" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setColLength(int) : void" num="94" count="141" type="method"/>
            <line num="95" count="141" type="stmt"/>
            <line complexity="1" visibility="public" signature="setColName(String) : void" num="104" count="327" type="method"/>
            <line num="105" count="327" type="stmt"/>
            <line complexity="1" visibility="public" signature="setEndPosition(int) : void" num="114" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setStartPosition(int) : void" num="124" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="128" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/structure/Row.java" name="Row.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="14" loc="189" coveredmethods="10" methods="14" elements="28" classes="1" ncloc="51" statements="14" conditionals="0" coveredstatements="10"/>
            <class name="Row">
               <metrics coveredelements="20" coveredconditionals="0" complexity="14" coveredmethods="10" methods="14" elements="28" statements="14" conditionals="0" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="addColumn(String) : void" num="64" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addColumn(List&lt;String&gt;) : void" num="74" count="5" type="method"/>
            <line num="75" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(int) : String" num="85" count="76" type="method"/>
            <line num="86" count="76" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(int,String) : void" num="97" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRowNumber() : int" num="106" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setRowNumber(int) : void" num="116" count="78" type="method"/>
            <line num="117" count="78" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCols() : List&lt;String&gt;" num="125" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setCols(List&lt;String&gt;) : void" num="135" count="73" type="method"/>
            <line num="136" count="73" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMdkey() : String" num="142" count="99" type="method"/>
            <line num="143" count="99" type="stmt"/>
            <line complexity="1" visibility="public" signature="setMdkey(String) : void" num="150" count="78" type="method"/>
            <line num="151" count="78" type="stmt"/>
            <line complexity="1" visibility="public" signature="isEmpty() : boolean" num="159" count="1" type="method"/>
            <line num="160" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="setEmpty(boolean) : void" num="168" count="1" type="method"/>
            <line num="169" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRawData() : String" num="177" count="10" type="method"/>
            <line num="178" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="setRawData(String) : void" num="186" count="10" type="method"/>
            <line num="187" count="10" type="stmt"/>
         </file>
      </package>
      <package name="net.sf.flatpack.util">
         <metrics coveredelements="452" complexity="193" loc="1208" methods="40" classes="7" statements="367" coveredconditionals="153" coveredmethods="23" elements="627" ncloc="633" files="7" conditionals="220" coveredstatements="276"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/util/FPConstants.java" name="FPConstants.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="55" coveredmethods="0" methods="1" elements="1" classes="1" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FPConstants">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="FPConstants()" num="52" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/util/FPException.java" name="FPException.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="31" coveredmethods="0" methods="4" elements="7" classes="1" ncloc="15" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="FPException">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="7" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="FPException()" num="11" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="FPException(String)" num="17" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="FPException(Throwable)" num="24" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="FPException(String,Throwable)" num="28" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/util/FPInvalidUsageException.java" name="FPInvalidUsageException.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="14" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="7" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="FPInvalidUsageException">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="FPInvalidUsageException(String)" num="11" count="2" type="method"/>
            <line num="12" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/util/FPStringUtils.java" name="FPStringUtils.java">
            <metrics coveredelements="12" coveredconditionals="5" complexity="7" loc="60" coveredmethods="1" methods="3" elements="19" classes="1" ncloc="20" statements="8" conditionals="8" coveredstatements="6"/>
            <class name="FPStringUtils">
               <metrics coveredelements="12" coveredconditionals="5" complexity="7" coveredmethods="1" methods="3" elements="19" statements="8" conditionals="8" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="private" signature="FPStringUtils()" num="9" count="0" type="method"/>
            <line complexity="5" visibility="public" signature="isBlank(String) : boolean" num="27" count="13" type="method"/>
            <line num="28" count="13" type="stmt"/>
            <line falsecount="13" truecount="0" num="28" type="cond"/>
            <line num="29" count="13" type="stmt"/>
            <line falsecount="7" truecount="6" num="29" type="cond"/>
            <line num="30" count="6" type="stmt"/>
            <line num="32" count="7" type="stmt"/>
            <line falsecount="0" truecount="7" num="32" type="cond"/>
            <line num="33" count="7" type="stmt"/>
            <line falsecount="0" truecount="7" num="33" type="cond"/>
            <line num="34" count="7" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNotBlank(String) : boolean" num="56" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/util/FixedWidthParserUtils.java" name="FixedWidthParserUtils.java">
            <metrics coveredelements="36" coveredconditionals="11" complexity="9" loc="128" coveredmethods="2" methods="3" elements="39" classes="1" ncloc="48" statements="24" conditionals="12" coveredstatements="23"/>
            <class name="FixedWidthParserUtils">
               <metrics coveredelements="36" coveredconditionals="11" complexity="9" coveredmethods="2" methods="3" elements="39" statements="24" conditionals="12" coveredstatements="23"/>
            </class>
            <line complexity="1" visibility="private" signature="FixedWidthParserUtils()" num="50" count="0" type="method"/>
            <line complexity="3" visibility="public" signature="splitFixedText(List&lt;ColumnMetaData&gt;,String,boolean,boolean) : List&lt;String&gt;" num="66" count="10" type="method"/>
            <line num="68" count="10" type="stmt"/>
            <line num="69" count="10" type="stmt"/>
            <line num="70" count="10" type="stmt"/>
            <line num="71" count="28" type="stmt"/>
            <line num="72" count="28" type="stmt"/>
            <line num="75" count="28" type="stmt"/>
            <line falsecount="25" truecount="3" num="75" type="cond"/>
            <line num="76" count="3" type="stmt"/>
            <line num="78" count="28" type="stmt"/>
            <line falsecount="6" truecount="22" num="78" type="cond"/>
            <line num="79" count="22" type="stmt"/>
            <line num="82" count="28" type="stmt"/>
            <line num="85" count="10" type="stmt"/>
            <line complexity="5" visibility="public" signature="getCMDKey(MetaData,String) : String" num="97" count="5" type="method"/>
            <line num="98" count="5" type="stmt"/>
            <line falsecount="2" truecount="3" num="98" type="cond"/>
            <line num="101" count="3" type="stmt"/>
            <line num="103" count="2" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line falsecount="1" truecount="2" num="106" type="cond"/>
            <line num="107" count="2" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="110" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="2" type="stmt"/>
            <line num="117" count="2" type="stmt"/>
            <line num="118" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="118" type="cond"/>
            <line num="120" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/util/FlatpackWriterUtil.java" name="FlatpackWriterUtil.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="65" coveredmethods="0" methods="6" elements="26" classes="1" ncloc="40" statements="14" conditionals="6" coveredstatements="0"/>
            <class name="FlatpackWriterUtil">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="6" elements="26" statements="14" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="FlatpackWriterUtil()" num="19" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="buildParametersForColumns(String) : Map&lt;String, Object&gt;" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="buildColumns(String) : List&lt;ColumnMetaData&gt;" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="buildColumns(List&lt;ColumnMetaData&gt;,Collection&lt;String&gt;) : void" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="buildColumns(List&lt;ColumnMetaData&gt;,String) : void" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="buildColumns(List&lt;ColumnMetaData&gt;,String) : void" num="58" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/util/ParserUtils.java" name="ParserUtils.java">
            <metrics coveredelements="402" coveredconditionals="137" complexity="162" loc="855" coveredmethods="19" methods="22" elements="533" classes="1" ncloc="492" statements="317" conditionals="194" coveredstatements="246"/>
            <class name="ParserUtils">
               <metrics coveredelements="402" coveredconditionals="137" complexity="162" coveredmethods="19" methods="22" elements="533" statements="317" conditionals="194" coveredstatements="246"/>
            </class>
            <line complexity="1" visibility="private" signature="ParserUtils()" num="71" count="0" type="method"/>
            <line complexity="40" visibility="public" signature="splitLine(String,char,char,int,boolean,boolean) : List&lt;String&gt;" num="100" count="216" type="method"/>
            <line num="102" count="216" type="stmt"/>
            <line num="104" count="216" type="stmt"/>
            <line falsecount="216" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="216" type="stmt"/>
            <line falsecount="215" truecount="1" num="107" type="cond"/>
            <line num="108" count="1" type="stmt"/>
            <line num="111" count="215" type="stmt"/>
            <line num="112" count="215" type="stmt"/>
            <line falsecount="195" truecount="20" num="112" type="cond"/>
            <line num="115" count="20" type="stmt"/>
            <line num="117" count="195" type="stmt"/>
            <line num="118" count="195" type="stmt"/>
            <line falsecount="71" truecount="124" num="118" type="cond"/>
            <line num="119" count="124" type="stmt"/>
            <line num="121" count="195" type="stmt"/>
            <line falsecount="6" truecount="189" num="121" type="cond"/>
            <line num="122" count="189" type="stmt"/>
            <line num="126" count="215" type="stmt"/>
            <line num="128" count="215" type="stmt"/>
            <line falsecount="212" truecount="3" num="128" type="cond"/>
            <line num="129" count="3" type="stmt"/>
            <line num="130" count="3" type="stmt"/>
            <line num="133" count="212" type="stmt"/>
            <line num="134" count="212" type="stmt"/>
            <line num="135" count="212" type="stmt"/>
            <line num="137" count="212" type="stmt"/>
            <line num="139" count="212" type="stmt"/>
            <line num="140" count="212" type="stmt"/>
            <line num="142" count="212" type="stmt"/>
            <line falsecount="212" truecount="7261" num="142" type="cond"/>
            <line num="144" count="7261" type="stmt"/>
            <line num="146" count="7261" type="stmt"/>
            <line falsecount="7258" truecount="3" num="146" type="cond"/>
            <line num="147" count="3" type="stmt"/>
            <line num="150" count="7258" type="stmt"/>
            <line falsecount="1243" truecount="6015" num="150" type="cond"/>
            <line num="151" count="6015" type="stmt"/>
            <line num="152" count="6015" type="stmt"/>
            <line num="153" count="6015" type="stmt"/>
            <line num="156" count="1243" type="stmt"/>
            <line falsecount="688" truecount="555" num="156" type="cond"/>
            <line num="158" count="555" type="stmt"/>
            <line falsecount="0" truecount="555" num="158" type="cond"/>
            <line num="159" count="555" type="stmt"/>
            <line num="160" count="555" type="stmt"/>
            <line falsecount="220" truecount="335" num="160" type="cond"/>
            <line num="161" count="335" type="stmt"/>
            <line falsecount="137" truecount="198" num="161" type="cond"/>
            <line num="162" count="198" type="stmt"/>
            <line num="164" count="335" type="stmt"/>
            <line falsecount="6" truecount="329" num="164" type="cond"/>
            <line num="165" count="329" type="stmt"/>
            <line num="169" count="555" type="stmt"/>
            <line falsecount="555" truecount="0" num="169" type="cond"/>
            <line num="170" count="0" type="stmt"/>
            <line num="172" count="555" type="stmt"/>
            <line num="174" count="555" type="stmt"/>
            <line num="175" count="555" type="stmt"/>
            <line num="177" count="688" type="stmt"/>
            <line falsecount="0" truecount="688" num="177" type="cond"/>
            <line num="178" count="688" type="stmt"/>
            <line falsecount="395" truecount="293" num="178" type="cond"/>
            <line num="179" count="293" type="stmt"/>
            <line falsecount="2" truecount="291" num="179" type="cond"/>
            <line num="180" count="291" type="stmt"/>
            <line num="181" count="291" type="stmt"/>
            <line num="183" count="2" type="stmt"/>
            <line num="186" count="395" type="stmt"/>
            <line falsecount="73" truecount="322" num="186" type="cond"/>
            <line num="191" count="322" type="stmt"/>
            <line num="192" count="322" type="stmt"/>
            <line num="193" count="322" type="stmt"/>
            <line falsecount="322" truecount="10" num="193" type="cond"/>
            <line num="194" count="10" type="stmt"/>
            <line num="195" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="195" type="cond"/>
            <line num="196" count="0" type="stmt"/>
            <line num="198" count="10" type="stmt"/>
            <line num="201" count="322" type="stmt"/>
            <line falsecount="216" truecount="106" num="201" type="cond"/>
            <line num="202" count="106" type="stmt"/>
            <line num="203" count="106" type="stmt"/>
            <line num="204" count="106" type="stmt"/>
            <line num="208" count="289" type="stmt"/>
            <line num="209" count="289" type="stmt"/>
            <line num="211" count="289" type="stmt"/>
            <line falsecount="220" truecount="69" num="211" type="cond"/>
            <line num="212" count="69" type="stmt"/>
            <line num="213" count="69" type="stmt"/>
            <line num="214" count="69" type="stmt"/>
            <line num="215" count="69" type="stmt"/>
            <line num="219" count="1137" type="stmt"/>
            <line num="222" count="212" type="stmt"/>
            <line falsecount="83" truecount="129" num="222" type="cond"/>
            <line num="223" count="129" type="stmt"/>
            <line num="224" count="129" type="stmt"/>
            <line num="225" count="129" type="stmt"/>
            <line falsecount="129" truecount="0" num="225" type="cond"/>
            <line num="226" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="226" type="cond"/>
            <line num="227" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="232" count="129" type="stmt"/>
            <line num="233" count="129" type="stmt"/>
            <line falsecount="45" truecount="84" num="233" type="cond"/>
            <line num="234" count="84" type="stmt"/>
            <line num="236" count="129" type="stmt"/>
            <line falsecount="5" truecount="124" num="236" type="cond"/>
            <line num="237" count="124" type="stmt"/>
            <line num="239" count="129" type="stmt"/>
            <line num="241" count="83" type="stmt"/>
            <line falsecount="69" truecount="14" num="241" type="cond"/>
            <line num="242" count="14" type="stmt"/>
            <line num="245" count="212" type="stmt"/>
            <line complexity="1" visibility="private" signature="isEmpty(String) : boolean" num="252" count="712" type="method"/>
            <line num="253" count="712" type="stmt"/>
            <line complexity="11" visibility="public" signature="replace(String,String,String,int) : String" num="260" count="756" type="method"/>
            <line num="261" count="756" type="stmt"/>
            <line falsecount="712" truecount="44" num="261" type="cond"/>
            <line num="262" count="44" type="stmt"/>
            <line num="264" count="712" type="stmt"/>
            <line num="265" count="712" type="stmt"/>
            <line num="266" count="712" type="stmt"/>
            <line falsecount="32" truecount="680" num="266" type="cond"/>
            <line num="267" count="680" type="stmt"/>
            <line num="269" count="32" type="stmt"/>
            <line num="270" count="32" type="stmt"/>
            <line num="271" count="32" type="stmt"/>
            <line falsecount="0" truecount="32" num="271" type="cond"/>
            <line num="272" count="32" type="stmt"/>
            <line num="273" count="32" type="stmt"/>
            <line falsecount="0" truecount="32" num="273" type="cond"/>
            <line num="274" count="32" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="275" type="cond"/>
            <line num="276" count="0" type="stmt"/>
            <line num="278" count="32" type="stmt"/>
            <line num="279" count="32" type="stmt"/>
            <line num="280" count="32" type="stmt"/>
            <line falsecount="32" truecount="50" num="280" type="cond"/>
            <line num="281" count="50" type="stmt"/>
            <line num="282" count="50" type="stmt"/>
            <line num="283" count="50" type="stmt"/>
            <line falsecount="50" truecount="0" num="283" type="cond"/>
            <line num="284" count="0" type="stmt"/>
            <line num="286" count="50" type="stmt"/>
            <line num="288" count="32" type="stmt"/>
            <line num="289" count="32" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDelimiterOffset(String,int,char) : int" num="301" count="0" type="method"/>
            <line num="302" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="303" type="cond"/>
            <line num="304" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="lTrim(String) : String" num="316" count="413" type="method"/>
            <line num="317" count="413" type="stmt"/>
            <line falsecount="413" truecount="0" num="317" type="cond"/>
            <line num="318" count="0" type="stmt"/>
            <line num="321" count="413" type="stmt"/>
            <line num="322" count="413" type="stmt"/>
            <line num="323" count="413" type="stmt"/>
            <line num="324" count="413" type="stmt"/>
            <line falsecount="413" truecount="82" num="324" type="cond"/>
            <line num="325" count="82" type="stmt"/>
            <line num="328" count="413" type="stmt"/>
            <line falsecount="370" truecount="43" num="328" type="cond"/>
            <line num="329" count="43" type="stmt"/>
            <line num="332" count="413" type="stmt"/>
            <line complexity="5" visibility="public" signature="lTrimKeepTabs(String) : String" num="342" count="3" type="method"/>
            <line num="343" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="343" type="cond"/>
            <line num="344" count="0" type="stmt"/>
            <line num="347" count="3" type="stmt"/>
            <line num="348" count="3" type="stmt"/>
            <line num="349" count="3" type="stmt"/>
            <line num="350" count="3" type="stmt"/>
            <line falsecount="3" truecount="6" num="350" type="cond"/>
            <line num="351" count="6" type="stmt"/>
            <line num="354" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="354" type="cond"/>
            <line num="355" count="2" type="stmt"/>
            <line num="358" count="3" type="stmt"/>
            <line complexity="6" visibility="public" signature="rTrim(String) : String" num="368" count="667" type="method"/>
            <line num="369" count="667" type="stmt"/>
            <line falsecount="667" truecount="0" num="369" type="cond"/>
            <line num="370" count="0" type="stmt"/>
            <line num="373" count="667" type="stmt"/>
            <line num="374" count="667" type="stmt"/>
            <line num="375" count="667" type="stmt"/>
            <line falsecount="667" truecount="420" num="375" type="cond"/>
            <line num="376" count="420" type="stmt"/>
            <line num="379" count="667" type="stmt"/>
            <line falsecount="630" truecount="37" num="379" type="cond"/>
            <line num="380" count="37" type="stmt"/>
            <line num="383" count="667" type="stmt"/>
            <line complexity="4" visibility="public" signature="getPZMetaDataFromFile(String,char,char,Parser,boolean) : MetaData" num="399" count="48" type="method"/>
            <line num="401" count="48" type="stmt"/>
            <line num="402" count="48" type="stmt"/>
            <line num="404" count="48" type="stmt"/>
            <line num="405" count="48" type="stmt"/>
            <line num="406" count="155" type="stmt"/>
            <line num="407" count="155" type="stmt"/>
            <line num="408" count="155" type="stmt"/>
            <line falsecount="155" truecount="0" num="408" type="cond"/>
            <line num="409" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="409" type="cond"/>
            <line num="410" count="0" type="stmt"/>
            <line num="412" count="0" type="stmt"/>
            <line num="413" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="413" type="cond"/>
            <line num="414" count="0" type="stmt"/>
            <line num="416" count="0" type="stmt"/>
            <line num="419" count="155" type="stmt"/>
            <line num="420" count="155" type="stmt"/>
            <line num="421" count="155" type="stmt"/>
            <line num="424" count="48" type="stmt"/>
            <line complexity="26" visibility="public" signature="isMultiLine(char[],char,char) : boolean" num="439" count="72" type="method"/>
            <line num="443" count="72" type="stmt"/>
            <line falsecount="28" truecount="44" num="443" type="cond"/>
            <line num="445" count="44" type="stmt"/>
            <line num="446" count="44" type="stmt"/>
            <line falsecount="34" truecount="977" num="446" type="cond"/>
            <line num="447" count="977" type="stmt"/>
            <line falsecount="956" truecount="21" num="447" type="cond"/>
            <line num="448" count="21" type="stmt"/>
            <line num="454" count="956" type="stmt"/>
            <line falsecount="952" truecount="4" num="454" type="cond"/>
            <line num="455" count="4" type="stmt"/>
            <line falsecount="1" truecount="3" num="455" type="cond"/>
            <line num="459" count="3" type="stmt"/>
            <line num="460" count="3" type="stmt"/>
            <line falsecount="3" truecount="41" num="460" type="cond"/>
            <line num="461" count="41" type="stmt"/>
            <line num="462" count="41" type="stmt"/>
            <line num="463" count="41" type="stmt"/>
            <line falsecount="38" truecount="3" num="463" type="cond"/>
            <line num="465" count="3" type="stmt"/>
            <line falsecount="3" truecount="95" num="465" type="cond"/>
            <line num="466" count="95" type="stmt"/>
            <line falsecount="94" truecount="1" num="466" type="cond"/>
            <line num="467" count="1" type="stmt"/>
            <line num="472" count="3" type="stmt"/>
            <line num="475" count="1" type="stmt"/>
            <line num="476" count="952" type="stmt"/>
            <line falsecount="856" truecount="96" num="476" type="cond"/>
            <line num="481" count="96" type="stmt"/>
            <line falsecount="0" truecount="96" num="481" type="cond"/>
            <line num="482" count="96" type="stmt"/>
            <line falsecount="96" truecount="0" num="482" type="cond"/>
            <line num="483" count="0" type="stmt"/>
            <line num="484" count="96" type="stmt"/>
            <line falsecount="89" truecount="7" num="484" type="cond"/>
            <line num="485" count="7" type="stmt"/>
            <line num="487" count="89" type="stmt"/>
            <line num="490" count="856" type="stmt"/>
            <line falsecount="850" truecount="6" num="490" type="cond"/>
            <line num="491" count="6" type="stmt"/>
            <line num="502" count="28" type="stmt"/>
            <line falsecount="0" truecount="56" num="502" type="cond"/>
            <line num="503" count="56" type="stmt"/>
            <line falsecount="28" truecount="28" num="503" type="cond"/>
            <line num="506" count="28" type="stmt"/>
            <line num="508" count="28" type="stmt"/>
            <line falsecount="28" truecount="0" num="508" type="cond"/>
            <line num="512" count="0" type="stmt"/>
            <line num="513" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="513" type="cond"/>
            <line num="514" count="0" type="stmt"/>
            <line num="515" count="0" type="stmt"/>
            <line num="516" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="516" type="cond"/>
            <line num="518" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="518" type="cond"/>
            <line num="519" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="519" type="cond"/>
            <line num="520" count="0" type="stmt"/>
            <line num="525" count="0" type="stmt"/>
            <line num="527" count="28" type="stmt"/>
            <line num="531" count="62" type="stmt"/>
            <line complexity="2" visibility="public" signature="calculateRecordLengths(MetaData) : Map&lt;String, Integer&gt;" num="534" count="4" type="method"/>
            <line num="535" count="4" type="stmt"/>
            <line num="538" count="4" type="stmt"/>
            <line num="539" count="4" type="stmt"/>
            <line num="540" count="11" type="stmt"/>
            <line num="543" count="4" type="stmt"/>
            <line num="545" count="4" type="stmt"/>
            <line num="546" count="4" type="stmt"/>
            <line falsecount="4" truecount="1" num="546" type="cond"/>
            <line num="547" count="1" type="stmt"/>
            <line num="548" count="1" type="stmt"/>
            <line num="550" count="1" type="stmt"/>
            <line num="551" count="1" type="stmt"/>
            <line num="552" count="2" type="stmt"/>
            <line num="555" count="1" type="stmt"/>
            <line num="558" count="4" type="stmt"/>
            <line complexity="7" visibility="public" signature="getCMDKeyForDelimitedFile(MetaData,List&lt;String&gt;) : String" num="562" count="75" type="method"/>
            <line num="563" count="75" type="stmt"/>
            <line falsecount="0" truecount="75" num="563" type="cond"/>
            <line num="566" count="75" type="stmt"/>
            <line num="568" count="0" type="stmt"/>
            <line num="571" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="571" type="cond"/>
            <line num="572" count="0" type="stmt"/>
            <line num="573" count="0" type="stmt"/>
            <line num="575" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="575" type="cond"/>
            <line num="578" count="0" type="stmt"/>
            <line num="579" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="579" type="cond"/>
            <line num="581" count="0" type="stmt"/>
            <line num="584" count="0" type="stmt"/>
            <line num="585" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="585" type="cond"/>
            <line num="587" count="0" type="stmt"/>
            <line num="593" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getColumnMetaData(String,MetaData) : List&lt;ColumnMetaData&gt;" num="596" count="88" type="method"/>
            <line num="597" count="88" type="stmt"/>
            <line falsecount="1" truecount="87" num="597" type="cond"/>
            <line num="598" count="87" type="stmt"/>
            <line num="601" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="getColumnIndex(String,MetaData,String,boolean) : int" num="604" count="78" type="method"/>
            <line num="605" count="78" type="stmt"/>
            <line num="606" count="78" type="stmt"/>
            <line num="607" count="78" type="stmt"/>
            <line falsecount="2" truecount="76" num="607" type="cond"/>
            <line num="608" count="76" type="stmt"/>
            <line num="610" count="78" type="stmt"/>
            <line num="612" count="78" type="stmt"/>
            <line falsecount="76" truecount="2" num="612" type="cond"/>
            <line num="613" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="614" type="cond"/>
            <line num="616" count="76" type="stmt"/>
            <line complexity="3" visibility="public" signature="padding(int,char) : String" num="644" count="16" type="method"/>
            <line num="645" count="16" type="stmt"/>
            <line falsecount="16" truecount="0" num="645" type="cond"/>
            <line num="646" count="0" type="stmt"/>
            <line num="648" count="16" type="stmt"/>
            <line num="649" count="16" type="stmt"/>
            <line falsecount="16" truecount="329" num="649" type="cond"/>
            <line num="650" count="329" type="stmt"/>
            <line num="652" count="16" type="stmt"/>
            <line complexity="5" visibility="public" signature="buidColumnIndexMap(List&lt;ColumnMetaData&gt;,Parser) : Map&lt;String, Integer&gt;" num="666" count="88" type="method"/>
            <line num="667" count="88" type="stmt"/>
            <line num="668" count="88" type="stmt"/>
            <line falsecount="0" truecount="88" num="668" type="cond"/>
            <line num="669" count="88" type="stmt"/>
            <line num="670" count="88" type="stmt"/>
            <line num="671" count="88" type="stmt"/>
            <line num="672" count="310" type="stmt"/>
            <line num="673" count="310" type="stmt"/>
            <line falsecount="121" truecount="189" num="673" type="cond"/>
            <line num="676" count="189" type="stmt"/>
            <line num="678" count="310" type="stmt"/>
            <line num="681" count="88" type="stmt"/>
            <line complexity="9" visibility="public" signature="stripNonLongChars(String) : String" num="696" count="10" type="method"/>
            <line num="697" count="10" type="stmt"/>
            <line num="699" count="10" type="stmt"/>
            <line falsecount="4" truecount="60" num="699" type="cond"/>
            <line num="700" count="60" type="stmt"/>
            <line num="701" count="60" type="stmt"/>
            <line falsecount="54" truecount="6" num="701" type="cond"/>
            <line num="703" count="6" type="stmt"/>
            <line num="704" count="54" type="stmt"/>
            <line falsecount="37" truecount="17" num="704" type="cond"/>
            <line num="705" count="17" type="stmt"/>
            <line num="710" count="10" type="stmt"/>
            <line num="711" count="10" type="stmt"/>
            <line num="712" count="10" type="stmt"/>
            <line falsecount="7" truecount="3" num="712" type="cond"/>
            <line num="713" count="3" type="stmt"/>
            <line num="716" count="7" type="stmt"/>
            <line complexity="10" visibility="public" signature="stripNonDoubleChars(String) : String" num="726" count="15" type="method"/>
            <line num="727" count="15" type="stmt"/>
            <line num="729" count="15" type="stmt"/>
            <line falsecount="15" truecount="126" num="729" type="cond"/>
            <line num="730" count="126" type="stmt"/>
            <line num="731" count="126" type="stmt"/>
            <line falsecount="74" truecount="52" num="731" type="cond"/>
            <line num="732" count="52" type="stmt"/>
            <line num="735" count="15" type="stmt"/>
            <line num="736" count="15" type="stmt"/>
            <line num="737" count="15" type="stmt"/>
            <line falsecount="11" truecount="4" num="737" type="cond"/>
            <line num="738" count="4" type="stmt"/>
            <line num="741" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="loadConvertProperties() : Properties" num="752" count="58" type="method"/>
            <line num="753" count="58" type="stmt"/>
            <line num="754" count="58" type="stmt"/>
            <line num="755" count="58" type="stmt"/>
            <line num="757" count="58" type="stmt"/>
            <line complexity="3" visibility="public" signature="isListElementsEmpty(List&lt;String&gt;) : boolean" num="769" count="2" type="method"/>
            <line num="770" count="2" type="stmt"/>
            <line num="771" count="7" type="stmt"/>
            <line falsecount="7" truecount="0" num="771" type="cond"/>
            <line num="772" count="0" type="stmt"/>
            <line num="775" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="runPzConverter(Properties,String,Class&lt;?&gt;) : Object" num="791" count="3" type="method"/>
            <line num="792" count="3" type="stmt"/>
            <line num="793" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="793" type="cond"/>
            <line num="794" count="0" type="stmt"/>
            <line num="796" count="3" type="stmt"/>
            <line num="797" count="3" type="stmt"/>
            <line num="798" count="3" type="stmt"/>
            <line num="800" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="buildMDFromSQLTable(Connection,String,Parser) : List&lt;ColumnMetaData&gt;" num="819" count="0" type="method"/>
            <line num="821" count="0" type="stmt"/>
            <line num="822" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="822" type="cond"/>
            <line num="823" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="823" type="cond"/>
            <line num="824" count="0" type="stmt"/>
            <line num="826" count="0" type="stmt"/>
            <line num="829" count="0" type="stmt"/>
            <line num="829" count="0" type="stmt"/>
            <line num="831" count="0" type="stmt"/>
            <line num="832" count="0" type="stmt"/>
            <line num="832" count="0" type="stmt"/>
            <line num="834" count="0" type="stmt"/>
            <line num="837" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="837" type="cond"/>
            <line num="839" count="0" type="stmt"/>
            <line num="840" count="0" type="stmt"/>
            <line num="841" count="0" type="stmt"/>
            <line num="842" count="0" type="stmt"/>
            <line num="843" count="0" type="stmt"/>
            <line num="844" count="0" type="stmt"/>
            <line num="846" count="0" type="stmt"/>
            <line num="849" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="849" type="cond"/>
            <line num="850" count="0" type="stmt"/>
            <line num="853" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.sf.flatpack.converter">
         <metrics coveredelements="6" complexity="7" loc="259" methods="7" classes="5" statements="7" coveredconditionals="0" coveredmethods="3" elements="14" ncloc="45" files="5" conditionals="0" coveredstatements="3"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/converter/ConvertBigDecimal.java" name="ConvertBigDecimal.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="24" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ConvertBigDecimal">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="convertValue(String) : Object" num="20" count="1" type="method"/>
            <line num="22" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/converter/ConvertDouble.java" name="ConvertDouble.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="57" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="8" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ConvertDouble">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="convertValue(String) : Object" num="52" count="1" type="method"/>
            <line num="54" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/converter/ConvertInteger.java" name="ConvertInteger.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="57" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="8" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ConvertInteger">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="convertValue(String) : Object" num="52" count="1" type="method"/>
            <line num="54" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/converter/Converter.java" name="Converter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="51" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Converter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/converter/FPConvertException.java" name="FPConvertException.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="70" coveredmethods="0" methods="4" elements="8" classes="1" ncloc="16" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="FPConvertException">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="FPConvertException()" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="FPConvertException(String)" num="51" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="FPConvertException(Throwable)" num="58" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="FPConvertException(String,Throwable)" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.sf.flatpack.xml">
         <metrics coveredelements="157" complexity="62" loc="593" methods="33" classes="4" statements="136" coveredconditionals="30" coveredmethods="24" elements="215" ncloc="306" files="4" conditionals="46" coveredstatements="103"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/xml/MapParser.java" name="MapParser.java">
            <metrics coveredelements="90" coveredconditionals="21" complexity="27" loc="278" coveredmethods="5" methods="8" elements="125" classes="1" ncloc="158" statements="85" conditionals="32" coveredstatements="64"/>
            <class name="MapParser">
               <metrics coveredelements="90" coveredconditionals="21" complexity="27" coveredmethods="5" methods="8" elements="125" statements="85" conditionals="32" coveredstatements="64"/>
            </class>
            <line complexity="1" visibility="private" signature="MapParser()" num="77" count="0" type="method"/>
            <line complexity="7" visibility="public" signature="parse(Reader,Parser) : Map&lt;String, Object&gt;" num="93" count="23" type="method"/>
            <line num="95" count="23" type="stmt"/>
            <line falsecount="23" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="23" type="stmt"/>
            <line num="100" count="23" type="stmt"/>
            <line num="101" count="23" type="stmt"/>
            <line num="102" count="23" type="stmt"/>
            <line num="103" count="23" type="stmt"/>
            <line num="104" count="21" type="stmt"/>
            <line num="106" count="21" type="stmt"/>
            <line num="108" count="20" type="stmt"/>
            <line num="111" count="20" type="stmt"/>
            <line num="113" count="20" type="stmt"/>
            <line falsecount="20" truecount="230" num="113" type="cond"/>
            <line num="114" count="230" type="stmt"/>
            <line num="116" count="230" type="stmt"/>
            <line num="118" count="230" type="stmt"/>
            <line falsecount="220" truecount="10" num="118" type="cond"/>
            <line num="119" count="10" type="stmt"/>
            <line num="120" count="10" type="stmt"/>
            <line num="121" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="121" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="129" count="10" type="stmt"/>
            <line num="130" count="10" type="stmt"/>
            <line num="131" count="10" type="stmt"/>
            <line num="132" count="10" type="stmt"/>
            <line num="133" count="10" type="stmt"/>
            <line num="134" count="10" type="stmt"/>
            <line num="135" count="10" type="stmt"/>
            <line num="136" count="10" type="stmt"/>
            <line num="137" count="10" type="stmt"/>
            <line num="139" count="10" type="stmt"/>
            <line num="143" count="20" type="stmt"/>
            <line falsecount="20" truecount="0" num="143" type="cond"/>
            <line num="144" count="0" type="stmt"/>
            <line num="146" count="20" type="stmt"/>
            <line complexity="2" visibility="private" signature="getAttributeValue(NamedNodeMap,String) : String" num="149" count="70" type="method"/>
            <line num="150" count="70" type="stmt"/>
            <line num="151" count="70" type="stmt"/>
            <line falsecount="0" truecount="70" num="151" type="cond"/>
            <line complexity="7" visibility="private" signature="parseColumnElements(NodeList) : List&lt;ColumnMetaData&gt;" num="154" count="31" type="method"/>
            <line num="155" count="31" type="stmt"/>
            <line num="156" count="31" type="stmt"/>
            <line num="157" count="31" type="stmt"/>
            <line falsecount="30" truecount="304" num="157" type="cond"/>
            <line num="158" count="304" type="stmt"/>
            <line num="160" count="304" type="stmt"/>
            <line num="162" count="304" type="stmt"/>
            <line falsecount="177" truecount="127" num="162" type="cond"/>
            <line num="163" count="127" type="stmt"/>
            <line num="164" count="127" type="stmt"/>
            <line num="167" count="127" type="stmt"/>
            <line num="168" count="127" type="stmt"/>
            <line falsecount="127" truecount="0" num="168" type="cond"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="127" type="stmt"/>
            <line falsecount="126" truecount="1" num="170" type="cond"/>
            <line num="172" count="1" type="stmt"/>
            <line num="175" count="126" type="stmt"/>
            <line num="176" count="126" type="stmt"/>
            <line num="179" count="126" type="stmt"/>
            <line falsecount="0" truecount="126" num="179" type="cond"/>
            <line num="180" count="126" type="stmt"/>
            <line num="181" count="126" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="188" count="126" type="stmt"/>
            <line num="191" count="30" type="stmt"/>
            <line complexity="3" visibility="private" signature="convertAttributeToInt(String) : int" num="195" count="40" type="method"/>
            <line num="196" count="40" type="stmt"/>
            <line falsecount="40" truecount="0" num="196" type="cond"/>
            <line num="197" count="0" type="stmt"/>
            <line num="200" count="40" type="stmt"/>
            <line num="201" count="40" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDebug(boolean) : void" num="213" count="0" type="method"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="setShowDebug(Map&lt;String, Object&gt;) : void" num="217" count="0" type="method"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="222" type="cond"/>
            <line num="223" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="230" type="cond"/>
            <line num="231" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="parseMap(Reader,Parser) : MetaData" num="254" count="9" type="method"/>
            <line num="256" count="9" type="stmt"/>
            <line num="258" count="9" type="stmt"/>
            <line num="259" count="9" type="stmt"/>
            <line num="261" count="9" type="stmt"/>
            <line num="262" count="9" type="stmt"/>
            <line num="268" count="9" type="stmt"/>
            <line num="269" count="9" type="stmt"/>
            <line falsecount="9" truecount="2" num="269" type="cond"/>
            <line num="270" count="2" type="stmt"/>
            <line num="271" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="271" type="cond"/>
            <line num="272" count="1" type="stmt"/>
            <line num="276" count="9" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/xml/MetaData.java" name="MetaData.java">
            <metrics coveredelements="30" coveredconditionals="5" complexity="17" loc="87" coveredmethods="7" methods="11" elements="43" classes="1" ncloc="65" statements="26" conditionals="6" coveredstatements="18"/>
            <class name="MetaData">
               <metrics coveredelements="30" coveredconditionals="5" complexity="17" coveredmethods="7" methods="11" elements="43" statements="26" conditionals="6" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="public" signature="MetaData(List&lt;ColumnMetaData&gt;,Map)" num="25" count="48" type="method"/>
            <line num="26" count="48" type="stmt"/>
            <line num="27" count="48" type="stmt"/>
            <line num="28" count="48" type="stmt"/>
            <line complexity="1" visibility="package" signature="MetaData(List&lt;ColumnMetaData&gt;,Map,Map&lt;String, XMLRecordElement&gt;)" num="31" count="9" type="method"/>
            <line num="32" count="9" type="stmt"/>
            <line num="33" count="9" type="stmt"/>
            <line num="34" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="getColumnsNames() : List&lt;ColumnMetaData&gt;" num="37" count="97" type="method"/>
            <line num="38" count="97" type="stmt"/>
            <line complexity="1" visibility="public" signature="getColumnIndexMap() : Map" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setColumnIndexMap(Map) : void" num="45" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setColumnsNames(List&lt;ColumnMetaData&gt;) : void" num="49" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isAnyRecordFormatSpecified() : boolean" num="53" count="80" type="method"/>
            <line num="54" count="80" type="stmt"/>
            <line complexity="1" visibility="public" signature="xmlRecordIterator() : Iterator&lt;Entry&lt;String, XMLRecordElement&gt;&gt;" num="57" count="6" type="method"/>
            <line num="58" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getListColumnsForRecord(String) : List&lt;ColumnMetaData&gt;" num="61" count="1" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="7" visibility="public" signature="getColumnIndex(String,String) : int" num="65" count="78" type="method"/>
            <line num="66" count="78" type="stmt"/>
            <line num="67" count="78" type="stmt"/>
            <line falsecount="77" truecount="1" num="67" type="cond"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="77" type="stmt"/>
            <line falsecount="0" truecount="77" num="69" type="cond"/>
            <line num="70" count="77" type="stmt"/>
            <line num="71" count="77" type="stmt"/>
            <line falsecount="2" truecount="75" num="71" type="cond"/>
            <line num="73" count="75" type="stmt"/>
            <line num="76" count="78" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/xml/ResolveLocalDTD.java" name="ResolveLocalDTD.java">
            <metrics coveredelements="7" coveredconditionals="2" complexity="3" loc="74" coveredmethods="1" methods="1" elements="11" classes="1" ncloc="21" statements="6" conditionals="4" coveredstatements="4"/>
            <class name="ResolveLocalDTD">
               <metrics coveredelements="7" coveredconditionals="2" complexity="3" coveredmethods="1" methods="1" elements="11" statements="6" conditionals="4" coveredstatements="4"/>
            </class>
            <line complexity="3" visibility="public" signature="resolveEntity(String,String) : InputSource" num="57" count="23" type="method"/>
            <line num="59" count="23" type="stmt"/>
            <line falsecount="0" truecount="23" num="59" type="cond"/>
            <line num="60" count="23" type="stmt"/>
            <line num="62" count="23" type="stmt"/>
            <line falsecount="0" truecount="23" num="62" type="cond"/>
            <line num="63" count="23" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/xml/XMLRecordElement.java" name="XMLRecordElement.java">
            <metrics coveredelements="30" coveredconditionals="2" complexity="15" loc="154" coveredmethods="11" methods="13" elements="36" classes="1" ncloc="62" statements="19" conditionals="4" coveredstatements="17"/>
            <class name="XMLRecordElement">
               <metrics coveredelements="30" coveredconditionals="2" complexity="15" coveredmethods="11" methods="13" elements="36" statements="19" conditionals="4" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="getElementNumber() : int" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setElementNumber(int) : void" num="49" count="10" type="method"/>
            <line num="50" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="getEndPositition() : int" num="56" count="5" type="method"/>
            <line num="57" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="setEndPositition(int) : void" num="64" count="10" type="method"/>
            <line num="65" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIndicator() : String" num="71" count="3" type="method"/>
            <line num="72" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="setIndicator(String) : void" num="79" count="10" type="method"/>
            <line num="80" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStartPosition() : int" num="86" count="3" type="method"/>
            <line num="87" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="setStartPosition(int) : void" num="94" count="10" type="method"/>
            <line num="95" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="getColumns() : List&lt;ColumnMetaData&gt;" num="102" count="6" type="method"/>
            <line num="103" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="setColumns(List&lt;ColumnMetaData&gt;,Parser) : void" num="112" count="10" type="method"/>
            <line num="113" count="10" type="stmt"/>
            <line num="114" count="10" type="stmt"/>
            <line complexity="3" visibility="public" signature="getColumnIndex(String) : int" num="124" count="1" type="method"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="126" type="cond"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="128" type="cond"/>
            <line num="129" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getElementCount() : int" num="141" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setElementCount(int) : void" num="151" count="10" type="method"/>
            <line num="152" count="10" type="stmt"/>
         </file>
      </package>
      <package name="net.sf.flatpack">
         <metrics coveredelements="577" complexity="347" loc="4028" methods="209" classes="20" statements="613" coveredconditionals="111" coveredmethods="113" elements="1042" ncloc="1683" files="20" conditionals="220" coveredstatements="353"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/AbstractDelimiterParser.java" name="AbstractDelimiterParser.java">
            <metrics coveredelements="143" coveredconditionals="41" complexity="59" loc="336" coveredmethods="9" methods="13" elements="195" classes="1" ncloc="197" statements="116" conditionals="66" coveredstatements="93"/>
            <class name="AbstractDelimiterParser">
               <metrics coveredelements="143" coveredconditionals="41" complexity="59" coveredmethods="9" methods="13" elements="195" statements="116" conditionals="66" coveredstatements="93"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractDelimiterParser(Reader,String,char,char,boolean)" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractDelimiterParser(Reader,char,char,boolean)" num="71" count="56" type="method"/>
            <line num="72" count="56" type="stmt"/>
            <line num="73" count="56" type="stmt"/>
            <line num="74" count="56" type="stmt"/>
            <line num="75" count="56" type="stmt"/>
            <line complexity="2" visibility="protected" signature="doParse() : DataSet" num="78" count="44" type="method"/>
            <line num="80" count="44" type="stmt"/>
            <line num="81" count="44" type="stmt"/>
            <line num="82" count="44" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getDelimiter() : char" num="91" count="249" type="method"/>
            <line num="92" count="249" type="stmt"/>
            <line complexity="1" visibility="protected" signature="setDelimiter(char) : void" num="95" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="isIgnoreFirstRecord() : boolean" num="99" count="53" type="method"/>
            <line num="100" count="53" type="stmt"/>
            <line complexity="1" visibility="protected" signature="setIgnoreFirstRecord(boolean) : void" num="103" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getQualifier() : char" num="107" count="317" type="method"/>
            <line num="108" count="317" type="stmt"/>
            <line complexity="1" visibility="protected" signature="setQualifier(char) : void" num="111" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getLineCount() : int" num="115" count="14" type="method"/>
            <line num="116" count="14" type="stmt"/>
            <line complexity="23" visibility="private" signature="doDelimitedFile(Reader,boolean) : DataSet" num="126" count="44" type="method"/>
            <line num="127" count="44" type="stmt"/>
            <line falsecount="44" truecount="0" num="127" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line num="130" count="44" type="stmt"/>
            <line num="131" count="44" type="stmt"/>
            <line num="131" count="44" type="stmt"/>
            <line num="133" count="44" type="stmt"/>
            <line num="135" count="44" type="stmt"/>
            <line num="137" count="44" type="stmt"/>
            <line num="138" count="44" type="stmt"/>
            <line num="139" count="44" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="141" count="112" type="stmt"/>
            <line falsecount="112" truecount="0" num="141" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="112" type="stmt"/>
            <line falsecount="68" truecount="44" num="144" type="cond"/>
            <line num="145" count="44" type="stmt"/>
            <line num="146" count="44" type="stmt"/>
            <line num="147" count="44" type="stmt"/>
            <line num="148" count="44" type="stmt"/>
            <line num="153" count="68" type="stmt"/>
            <line falsecount="66" truecount="2" num="153" type="cond"/>
            <line num="154" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="154" type="cond"/>
            <line num="155" count="2" type="stmt"/>
            <line num="158" count="66" type="stmt"/>
            <line num="160" count="66" type="stmt"/>
            <line num="161" count="66" type="stmt"/>
            <line num="162" count="66" type="stmt"/>
            <line num="163" count="66" type="stmt"/>
            <line num="165" count="66" type="stmt"/>
            <line falsecount="63" truecount="3" num="165" type="cond"/>
            <line num="168" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="168" type="cond"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="172" type="cond"/>
            <line num="174" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="175" type="cond"/>
            <line num="176" count="2" type="stmt"/>
            <line num="178" count="63" type="stmt"/>
            <line falsecount="60" truecount="3" num="178" type="cond"/>
            <line num="179" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="179" type="cond"/>
            <line num="181" count="3" type="stmt"/>
            <line falsecount="3" truecount="4" num="181" type="cond"/>
            <line num="182" count="4" type="stmt"/>
            <line num="186" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="186" type="cond"/>
            <line num="189" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="191" count="0" type="stmt"/>
            <line num="195" count="64" type="stmt"/>
            <line num="196" count="64" type="stmt"/>
            <line falsecount="0" truecount="64" num="196" type="cond"/>
            <line num="198" count="64" type="stmt"/>
            <line num="199" count="64" type="stmt"/>
            <line num="200" count="64" type="stmt"/>
            <line falsecount="63" truecount="1" num="200" type="cond"/>
            <line num="202" count="1" type="stmt"/>
            <line num="204" count="64" type="stmt"/>
            <line falsecount="60" truecount="4" num="204" type="cond"/>
            <line num="207" count="4" type="stmt"/>
            <line num="211" count="64" type="stmt"/>
            <line num="215" count="44" type="stmt"/>
            <line num="217" count="44" type="stmt"/>
            <line complexity="4" visibility="private" signature="oddNumberOfQualifier(String,char) : boolean" num="220" count="68" type="method"/>
            <line num="221" count="68" type="stmt"/>
            <line falsecount="68" truecount="0" num="221" type="cond"/>
            <line num="222" count="0" type="stmt"/>
            <line num="224" count="68" type="stmt"/>
            <line num="225" count="68" type="stmt"/>
            <line num="226" count="68" type="stmt"/>
            <line falsecount="0" truecount="0" num="226" type="cond"/>
            <line num="227" count="314" type="stmt"/>
            <line num="228" count="314" type="stmt"/>
            <line num="231" count="68" type="stmt"/>
            <line complexity="21" visibility="protected" signature="fetchNextRecord(BufferedReader,char,char) : String" num="249" count="170" type="method"/>
            <line num="250" count="170" type="stmt"/>
            <line num="251" count="170" type="stmt"/>
            <line num="252" count="170" type="stmt"/>
            <line num="254" count="170" type="stmt"/>
            <line falsecount="0" truecount="0" num="254" type="cond"/>
            <line num="255" count="128" type="stmt"/>
            <line num="256" count="128" type="stmt"/>
            <line num="257" count="128" type="stmt"/>
            <line num="258" count="128" type="stmt"/>
            <line falsecount="128" truecount="0" num="258" type="cond"/>
            <line num="261" count="0" type="stmt"/>
            <line num="269" count="128" type="stmt"/>
            <line num="270" count="128" type="stmt"/>
            <line falsecount="60" truecount="68" num="270" type="cond"/>
            <line num="271" count="68" type="stmt"/>
            <line num="277" count="128" type="stmt"/>
            <line num="278" count="128" type="stmt"/>
            <line falsecount="126" truecount="2" num="278" type="cond"/>
            <line num="284" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="284" type="cond"/>
            <line num="287" count="1" type="stmt"/>
            <line num="288" count="1" type="stmt"/>
            <line num="292" count="1" type="stmt"/>
            <line num="293" count="1" type="stmt"/>
            <line num="294" count="1" type="stmt"/>
            <line num="295" count="9" type="stmt"/>
            <line falsecount="9" truecount="0" num="295" type="cond"/>
            <line num="296" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="296" type="cond"/>
            <line num="297" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="298" type="cond"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="303" count="9" type="stmt"/>
            <line falsecount="9" truecount="0" num="303" type="cond"/>
            <line num="304" count="0" type="stmt"/>
            <line num="310" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="310" type="cond"/>
            <line num="311" count="1" type="stmt"/>
            <line num="318" count="126" type="stmt"/>
            <line falsecount="126" truecount="0" num="318" type="cond"/>
            <line num="319" count="126" type="stmt"/>
            <line falsecount="125" truecount="1" num="319" type="cond"/>
            <line num="320" count="1" type="stmt"/>
            <line num="325" count="126" type="stmt"/>
            <line num="328" count="170" type="stmt"/>
            <line falsecount="126" truecount="44" num="328" type="cond"/>
            <line num="330" count="44" type="stmt"/>
            <line num="333" count="126" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/AbstractFixedLengthParser.java" name="AbstractFixedLengthParser.java">
            <metrics coveredelements="37" coveredconditionals="7" complexity="18" loc="161" coveredmethods="3" methods="4" elements="69" classes="1" ncloc="82" statements="43" conditionals="22" coveredstatements="27"/>
            <class name="AbstractFixedLengthParser">
               <metrics coveredelements="37" coveredconditionals="7" complexity="18" coveredmethods="3" methods="4" elements="69" statements="43" conditionals="22" coveredstatements="27"/>
            </class>
            <line complexity="1" visibility="protected" signature="AbstractFixedLengthParser(Reader,String)" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="AbstractFixedLengthParser(Reader)" num="61" count="4" type="method"/>
            <line num="62" count="4" type="stmt"/>
            <line complexity="2" visibility="protected" signature="doParse() : DataSet" num="65" count="1" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="14" visibility="private" signature="doFixedLengthFile(Reader) : DataSet" num="82" count="1" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="2" type="stmt"/>
            <line num="100" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="100" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line num="105" count="2" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="107" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="121" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="131" type="cond"/>
            <line num="132" count="0" type="stmt"/>
            <line num="136" count="2" type="stmt"/>
            <line num="137" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="137" type="cond"/>
            <line num="139" count="2" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line num="141" count="2" type="stmt"/>
            <line num="143" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="143" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="147" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="147" type="cond"/>
            <line num="150" count="0" type="stmt"/>
            <line num="154" count="2" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/AbstractParser.java" name="AbstractParser.java">
            <metrics coveredelements="105" coveredconditionals="10" complexity="53" loc="414" coveredmethods="35" methods="45" elements="136" classes="1" ncloc="239" statements="77" conditionals="14" coveredstatements="60"/>
            <class name="AbstractParser">
               <metrics coveredelements="105" coveredconditionals="10" complexity="53" coveredmethods="35" methods="45" elements="136" statements="77" conditionals="14" coveredstatements="60"/>
            </class>
            <line complexity="1" visibility="public" signature="isAddSuffixToDuplicateColumnNames() : boolean" num="94" count="48" type="method"/>
            <line num="95" count="48" type="stmt"/>
            <line complexity="1" visibility="public" signature="setAddSuffixToDuplicateColumnNames(boolean) : Parser" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="AbstractParser(Reader)" num="104" count="60" type="method"/>
            <line num="105" count="60" type="stmt"/>
            <line complexity="1" visibility="protected" signature="AbstractParser(Reader,String)" num="108" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="3" visibility="protected" signature="initStreamOrSource(InputStream,File) : void" num="113" count="57" type="method"/>
            <line num="114" count="57" type="stmt"/>
            <line falsecount="56" truecount="1" num="114" type="cond"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="56" type="stmt"/>
            <line falsecount="53" truecount="3" num="118" type="cond"/>
            <line num="119" count="3" type="stmt"/>
            <line num="120" count="3" type="stmt"/>
            <line num="121" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="isHandlingShortLines() : boolean" num="130" count="6" type="method"/>
            <line num="132" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="setHandlingShortLines(boolean) : Parser" num="140" count="14" type="method"/>
            <line num="142" count="14" type="stmt"/>
            <line num="143" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="isIgnoreExtraColumns() : boolean" num="146" count="7" type="method"/>
            <line num="148" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="setIgnoreExtraColumns(boolean) : Parser" num="151" count="9" type="method"/>
            <line num="153" count="9" type="stmt"/>
            <line num="154" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="isPreserveLeadingWhitespace() : boolean" num="157" count="80" type="method"/>
            <line num="159" count="80" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPreserveLeadingWhitespace(boolean) : Parser" num="162" count="3" type="method"/>
            <line num="164" count="3" type="stmt"/>
            <line num="165" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="isPreserveTrailingWhitespace() : boolean" num="168" count="80" type="method"/>
            <line num="170" count="80" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPreserveTrailingWhitespace(boolean) : Parser" num="173" count="2" type="method"/>
            <line num="175" count="2" type="stmt"/>
            <line num="176" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="parse() : DataSet" num="179" count="57" type="method"/>
            <line num="181" count="57" type="stmt"/>
            <line falsecount="0" truecount="57" num="181" type="cond"/>
            <line num="182" count="57" type="stmt"/>
            <line num="184" count="57" type="stmt"/>
            <line complexity="1" visibility="public" signature="parseAsStream() : StreamingDataSet" num="187" count="13" type="method"/>
            <line num="189" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="stream() : Stream&lt;Record&gt;" num="192" count="3" type="method"/>
            <line num="194" count="3" type="stmt"/>
            <line complexity="2" visibility="protected" signature="closeReaders() : void" num="201" count="45" type="method"/>
            <line num="202" count="45" type="stmt"/>
            <line falsecount="41" truecount="4" num="202" type="cond"/>
            <line num="203" count="4" type="stmt"/>
            <line num="204" count="4" type="stmt"/>
            <line complexity="2" visibility="protected" signature="addToCloseReaderList(Reader) : void" num="211" count="4" type="method"/>
            <line num="212" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="212" type="cond"/>
            <line num="213" count="4" type="stmt"/>
            <line num="215" count="4" type="stmt"/>
            <line complexity="2" visibility="protected" signature="addToMetaData(List&lt;ColumnMetaData&gt;) : void" num="218" count="0" type="method"/>
            <line num="219" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="219" type="cond"/>
            <line num="220" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="isInitialised() : boolean" num="227" count="0" type="method"/>
            <line num="228" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="setInitialised(boolean) : void" num="231" count="53" type="method"/>
            <line num="232" count="53" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getDataDefinition() : String" num="235" count="0" type="method"/>
            <line num="236" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="setDataDefinition(String) : void" num="239" count="0" type="method"/>
            <line num="240" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="addError(DefaultDataSet,String,int,int) : void" num="256" count="7" type="method"/>
            <line num="257" count="7" type="stmt"/>
            <line complexity="3" visibility="protected" signature="addError(DefaultDataSet,String,int,int,String) : void" num="275" count="15" type="method"/>
            <line num="276" count="15" type="stmt"/>
            <line falsecount="13" truecount="2" num="276" type="cond"/>
            <line num="278" count="2" type="stmt"/>
            <line num="280" count="13" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getDataSourceReader() : Reader" num="286" count="57" type="method"/>
            <line num="287" count="57" type="stmt"/>
            <line complexity="1" visibility="protected" signature="setDataSourceReader(Reader) : void" num="294" count="4" type="method"/>
            <line num="295" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="isColumnNamesCaseSensitive() : boolean" num="298" count="261" type="method"/>
            <line num="300" count="261" type="stmt"/>
            <line complexity="1" visibility="public" signature="setColumnNamesCaseSensitive(boolean) : Parser" num="303" count="7" type="method"/>
            <line num="305" count="7" type="stmt"/>
            <line num="306" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="isIgnoreParseWarnings() : boolean" num="309" count="13" type="method"/>
            <line num="311" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="setIgnoreParseWarnings(boolean) : Parser" num="314" count="3" type="method"/>
            <line num="316" count="3" type="stmt"/>
            <line num="317" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNullEmptyStrings() : boolean" num="320" count="48" type="method"/>
            <line num="322" count="48" type="stmt"/>
            <line complexity="1" visibility="public" signature="setNullEmptyStrings(boolean) : Parser" num="325" count="2" type="method"/>
            <line num="327" count="2" type="stmt"/>
            <line num="328" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPzMetaData() : MetaData" num="331" count="273" type="method"/>
            <line num="332" count="273" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPzMetaData(MetaData) : void" num="335" count="57" type="method"/>
            <line num="336" count="57" type="stmt"/>
            <line complexity="1" visibility="public" signature="isFlagEmptyRows() : boolean" num="342" count="80" type="method"/>
            <line num="344" count="80" type="stmt"/>
            <line complexity="1" visibility="public" signature="setFlagEmptyRows(boolean) : Parser" num="351" count="1" type="method"/>
            <line num="353" count="1" type="stmt"/>
            <line num="354" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isStoreRawDataToDataError() : boolean" num="360" count="8" type="method"/>
            <line num="362" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="setStoreRawDataToDataError(boolean) : Parser" num="369" count="2" type="method"/>
            <line num="371" count="2" type="stmt"/>
            <line num="372" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="isStoreRawDataToDataSet() : boolean" num="378" count="80" type="method"/>
            <line num="380" count="80" type="stmt"/>
            <line complexity="1" visibility="public" signature="setStoreRawDataToDataSet(boolean) : Parser" num="387" count="12" type="method"/>
            <line num="389" count="12" type="stmt"/>
            <line num="390" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDataFileTable() : String" num="393" count="0" type="method"/>
            <line num="395" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDataFileTable(String) : Parser" num="398" count="0" type="method"/>
            <line num="400" count="0" type="stmt"/>
            <line num="401" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDataStructureTable() : String" num="404" count="0" type="method"/>
            <line num="406" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDataStructureTable(String) : Parser" num="409" count="0" type="method"/>
            <line num="411" count="0" type="stmt"/>
            <line num="412" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/CsvParserFactory.java" name="CsvParserFactory.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="33" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="13" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="CsvParserFactory">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="newForwardParser(Reader) : Parser" num="21" count="1" type="method"/>
            <line num="22" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="newInMemoryParser(Reader) : Parser" num="30" count="1" type="method"/>
            <line num="31" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/DBDelimiterParser.java" name="DBDelimiterParser.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="97" coveredmethods="0" methods="4" elements="25" classes="1" ncloc="47" statements="17" conditionals="4" coveredstatements="0"/>
            <class name="DBDelimiterParser">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="4" elements="25" statements="17" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DBDelimiterParser(Connection,InputStream,String,char,char,boolean)" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DBDelimiterParser(Connection,Reader,String,char,char,boolean)" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="4" visibility="protected" signature="init() : void" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="shouldCreateMDFromFile() : boolean" num="92" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/DBFixedLengthParser.java" name="DBFixedLengthParser.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="99" coveredmethods="0" methods="4" elements="22" classes="1" ncloc="43" statements="16" conditionals="2" coveredstatements="0"/>
            <class name="DBFixedLengthParser">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="4" elements="22" statements="16" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DBFixedLengthParser(Connection,InputStream,String)" num="61" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DBFixedLengthParser(Connection,File,String)" num="69" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DBFixedLengthParser(Connection,Reader,String)" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="3" visibility="protected" signature="init() : void" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/DataError.java" name="DataError.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="7" loc="125" coveredmethods="3" methods="7" elements="19" classes="1" ncloc="35" statements="12" conditionals="0" coveredstatements="6"/>
            <class name="DataError">
               <metrics coveredelements="9" coveredconditionals="0" complexity="7" coveredmethods="3" methods="7" elements="19" statements="12" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="DataError(String,int,int)" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DataError(String,int,int,String)" num="74" count="13" type="method"/>
            <line num="75" count="13" type="stmt"/>
            <line num="76" count="13" type="stmt"/>
            <line num="77" count="13" type="stmt"/>
            <line num="78" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="getErrorDesc() : String" num="86" count="2" type="method"/>
            <line num="87" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getErrorLevel() : int" num="95" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLineNo() : int" num="104" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRawData() : String" num="122" count="2" type="method"/>
            <line num="123" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/DataSet.java" name="DataSet.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="174" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="21" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="DataSet">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/DefaultDataSet.java" name="DefaultDataSet.java">
            <metrics coveredelements="80" coveredconditionals="14" complexity="76" loc="583" coveredmethods="20" methods="56" elements="204" classes="1" ncloc="334" statements="116" conditionals="32" coveredstatements="46"/>
            <class name="DefaultDataSet">
               <metrics coveredelements="80" coveredconditionals="14" complexity="76" coveredmethods="20" methods="56" elements="204" statements="116" conditionals="32" coveredstatements="46"/>
            </class>
            <line complexity="1" visibility="public" signature="DefaultDataSet(MetaData,Parser)" num="95" count="57" type="method"/>
            <line num="96" count="57" type="stmt"/>
            <line num="97" count="57" type="stmt"/>
            <line complexity="1" visibility="public" signature="addRow(Row) : void" num="100" count="72" type="method"/>
            <line num="101" count="72" type="stmt"/>
            <line complexity="1" visibility="public" signature="addError(DataError) : void" num="104" count="13" type="method"/>
            <line num="105" count="13" type="stmt"/>
            <line complexity="4" visibility="public" signature="getColumns() : String[]" num="113" count="3" type="method"/>
            <line num="116" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="116" type="cond"/>
            <line num="117" count="3" type="stmt"/>
            <line num="118" count="3" type="stmt"/>
            <line num="119" count="3" type="stmt"/>
            <line falsecount="3" truecount="16" num="119" type="cond"/>
            <line num="120" count="16" type="stmt"/>
            <line num="121" count="16" type="stmt"/>
            <line num="125" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="getColumns(String) : String[]" num="133" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="137" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="140" type="cond"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDate(String) : Date" num="149" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDate(String,SimpleDateFormat) : Date" num="154" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDouble(String) : double" num="159" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBigDecimal(String) : BigDecimal" num="164" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getObject(String,Class&lt;?&gt;) : Object" num="169" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBigDecimal(String,Supplier&lt;BigDecimal&gt;) : BigDecimal" num="174" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDate(String,SimpleDateFormat,Supplier&lt;Date&gt;) : Date" num="179" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDate(String,Supplier&lt;Date&gt;) : Date" num="184" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDouble(String,DoubleSupplier) : double" num="189" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInt(String,IntSupplier) : int" num="194" count="0" type="method"/>
            <line num="196" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLong(String,LongSupplier) : long" num="199" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getString(String,Supplier&lt;String&gt;) : String" num="204" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getErrorCount() : int" num="214" count="2" type="method"/>
            <line num="216" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="216" type="cond"/>
            <line num="217" count="2" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getErrors() : List&lt;DataError&gt;" num="228" count="12" type="method"/>
            <line num="230" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIndex() : int" num="238" count="0" type="method"/>
            <line num="240" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInt(String) : int" num="243" count="0" type="method"/>
            <line num="245" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLong(String) : long" num="248" count="0" type="method"/>
            <line num="250" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRowCount() : int" num="258" count="2" type="method"/>
            <line num="260" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRowNo() : int" num="268" count="0" type="method"/>
            <line num="270" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getString(String) : String" num="278" count="20" type="method"/>
            <line num="280" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(String,String) : void" num="283" count="0" type="method"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="goBottom() : void" num="296" count="0" type="method"/>
            <line num="298" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="goTop() : void" num="306" count="6" type="method"/>
            <line num="308" count="6" type="stmt"/>
            <line complexity="4" visibility="public" signature="isAnError(int) : boolean" num="316" count="0" type="method"/>
            <line num="318" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="318" type="cond"/>
            <line num="319" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="319" type="cond"/>
            <line num="320" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="next() : boolean" num="331" count="53" type="method"/>
            <line num="333" count="53" type="stmt"/>
            <line falsecount="5" truecount="48" num="333" type="cond"/>
            <line num="334" count="48" type="stmt"/>
            <line num="335" count="48" type="stmt"/>
            <line num="337" count="48" type="stmt"/>
            <line num="339" count="5" type="stmt"/>
            <line num="340" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRecord() : Optional&lt;Record&gt;" num="343" count="44" type="method"/>
            <line num="345" count="44" type="stmt"/>
            <line complexity="2" visibility="public" signature="orderRows(OrderBy) : void" num="353" count="6" type="method"/>
            <line num="355" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="355" type="cond"/>
            <line num="356" count="6" type="stmt"/>
            <line num="357" count="6" type="stmt"/>
            <line num="358" count="6" type="stmt"/>
            <line num="359" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="previous() : boolean" num="368" count="0" type="method"/>
            <line num="370" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="370" type="cond"/>
            <line num="371" count="0" type="stmt"/>
            <line num="372" count="0" type="stmt"/>
            <line num="374" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setLowerCase() : void" num="383" count="0" type="method"/>
            <line num="385" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setUpperCase() : void" num="392" count="0" type="method"/>
            <line num="394" count="0" type="stmt"/>
            <line num="395" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isRecordID(String) : boolean" num="404" count="1" type="method"/>
            <line num="406" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRecordID() : String" num="409" count="0" type="method"/>
            <line num="411" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="absolute(int) : void" num="421" count="0" type="method"/>
            <line num="423" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="423" type="cond"/>
            <line num="424" count="0" type="stmt"/>
            <line num="427" count="0" type="stmt"/>
            <line num="428" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setStrictNumericParse(boolean) : void" num="442" count="0" type="method"/>
            <line num="444" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="452" count="0" type="method"/>
            <line num="454" count="0" type="stmt"/>
            <line num="455" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPZConvertProps(Properties) : void" num="458" count="57" type="method"/>
            <line num="460" count="57" type="stmt"/>
            <line complexity="1" visibility="protected" signature="setPointer(int) : void" num="467" count="0" type="method"/>
            <line num="468" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clearRows() : void" num="471" count="6" type="method"/>
            <line num="473" count="6" type="stmt"/>
            <line num="475" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="clearAll() : void" num="478" count="0" type="method"/>
            <line num="480" count="0" type="stmt"/>
            <line num="481" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clearErrors() : void" num="484" count="0" type="method"/>
            <line num="486" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMetaData() : MetaData" num="489" count="12" type="method"/>
            <line num="490" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="setMetaData(MetaData) : void" num="493" count="52" type="method"/>
            <line num="494" count="52" type="stmt"/>
            <line num="495" count="52" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="498" count="0" type="method"/>
            <line num="500" count="0" type="stmt"/>
            <line num="501" count="0" type="stmt"/>
            <line num="502" count="0" type="stmt"/>
            <line num="503" count="0" type="stmt"/>
            <line num="504" count="0" type="stmt"/>
            <line num="505" count="0" type="stmt"/>
            <line num="506" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="contains(String) : boolean" num="509" count="2" type="method"/>
            <line num="511" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="511" type="cond"/>
            <line num="512" count="0" type="stmt"/>
            <line num="514" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="isRowEmpty() : boolean" num="524" count="2" type="method"/>
            <line num="526" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="526" type="cond"/>
            <line num="529" count="1" type="stmt"/>
            <line num="532" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="532" type="cond"/>
            <line num="533" count="0" type="stmt"/>
            <line num="536" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="getRawData() : String" num="544" count="2" type="method"/>
            <line num="546" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="546" type="cond"/>
            <line num="549" count="1" type="stmt"/>
            <line num="552" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="552" type="cond"/>
            <line num="553" count="0" type="stmt"/>
            <line num="556" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLocalDate(String,Supplier&lt;LocalDate&gt;) : LocalDate" num="559" count="0" type="method"/>
            <line num="561" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLocalDate(String) : LocalDate" num="564" count="0" type="method"/>
            <line num="566" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLocalDate(String,DateTimeFormatter) : LocalDate" num="569" count="0" type="method"/>
            <line num="571" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLocalDate(String,String,Supplier&lt;LocalDate&gt;) : LocalDate" num="574" count="0" type="method"/>
            <line num="576" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLocalDate(String,String) : LocalDate" num="579" count="0" type="method"/>
            <line num="581" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/DefaultParserFactory.java" name="DefaultParserFactory.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="17" loc="198" coveredmethods="5" methods="17" elements="34" classes="1" ncloc="78" statements="17" conditionals="0" coveredstatements="5"/>
            <class name="DefaultParserFactory">
               <metrics coveredelements="10" coveredconditionals="0" complexity="17" coveredmethods="5" methods="17" elements="34" statements="17" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="getInstance() : ParserFactory" num="47" count="45" type="method"/>
            <line num="48" count="45" type="stmt"/>
            <line complexity="1" visibility="public" signature="newFixedLengthParser(Connection,File,String) : Parser" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newFixedLengthParser(Connection,InputStream,String) : Parser" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newFixedLengthParser(File,File) : Parser" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newFixedLengthParser(InputStream,InputStream) : Parser" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newFixedLengthParser(Connection,Reader,String) : Parser" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newFixedLengthParser(Reader,Reader) : Parser" num="100" count="1" type="method"/>
            <line num="102" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="newDelimitedParser(Connection,InputStream,String,char,char,boolean) : Parser" num="111" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newDelimitedParser(File,File,char,char,boolean) : Parser" num="123" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newDelimitedParser(InputStream,InputStream,char,char,boolean) : Parser" num="135" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newDelimitedParser(File,char,char) : Parser" num="147" count="3" type="method"/>
            <line num="149" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="newCsvParser(InputStream) : Parser" num="157" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newCsvParser(Reader) : Parser" num="166" count="2" type="method"/>
            <line num="167" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="newDelimitedParser(InputStream,char,char) : Parser" num="176" count="0" type="method"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newDelimitedParser(Connection,Reader,String,char,char,boolean) : Parser" num="181" count="0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newDelimitedParser(Reader,char,char) : Parser" num="187" count="43" type="method"/>
            <line num="189" count="43" type="stmt"/>
            <line complexity="1" visibility="public" signature="newDelimitedParser(Reader,Reader,char,char,boolean) : Parser" num="192" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/DelimiterParser.java" name="DelimiterParser.java">
            <metrics coveredelements="29" coveredconditionals="5" complexity="13" loc="129" coveredmethods="6" methods="8" elements="46" classes="1" ncloc="70" statements="30" conditionals="8" coveredstatements="18"/>
            <class name="DelimiterParser">
               <metrics coveredelements="29" coveredconditionals="5" complexity="13" coveredmethods="6" methods="8" elements="46" statements="30" conditionals="8" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="public" signature="DelimiterParser(File,File,char,char,boolean)" num="58" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DelimiterParser(InputStream,InputStream,char,char,boolean)" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DelimiterParser(File,char,char,boolean)" num="71" count="3" type="method"/>
            <line num="72" count="3" type="stmt"/>
            <line num="73" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="DelimiterParser(InputStream,char,char,boolean)" num="76" count="1" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="DelimiterParser(Reader,char,char,boolean)" num="81" count="47" type="method"/>
            <line num="82" count="47" type="stmt"/>
            <line complexity="1" visibility="public" signature="DelimiterParser(Reader,Reader,char,char,boolean)" num="85" count="5" type="method"/>
            <line num="87" count="5" type="stmt"/>
            <line num="88" count="5" type="stmt"/>
            <line complexity="6" visibility="protected" signature="init() : void" num="91" count="53" type="method"/>
            <line num="93" count="53" type="stmt"/>
            <line num="96" count="53" type="stmt"/>
            <line num="98" count="53" type="stmt"/>
            <line num="99" count="53" type="stmt"/>
            <line falsecount="53" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="53" type="stmt"/>
            <line falsecount="53" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="107" count="53" type="stmt"/>
            <line falsecount="48" truecount="5" num="107" type="cond"/>
            <line num="108" count="5" type="stmt"/>
            <line num="109" count="5" type="stmt"/>
            <line num="111" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="111" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="119" count="53" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="shouldCreateMDFromFile() : boolean" num="125" count="52" type="method"/>
            <line num="127" count="52" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/FixedLengthParser.java" name="FixedLengthParser.java">
            <metrics coveredelements="15" coveredconditionals="3" complexity="9" loc="112" coveredmethods="2" methods="5" elements="34" classes="1" ncloc="54" statements="23" conditionals="6" coveredstatements="10"/>
            <class name="FixedLengthParser">
               <metrics coveredelements="15" coveredconditionals="3" complexity="9" coveredmethods="2" methods="5" elements="34" statements="23" conditionals="6" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="FixedLengthParser(InputStream,InputStream)" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="FixedLengthParser(File,File)" num="68" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="FixedLengthParser(Reader,Reader)" num="74" count="4" type="method"/>
            <line num="75" count="4" type="stmt"/>
            <line num="76" count="4" type="stmt"/>
            <line complexity="1" visibility="protected" signature="FixedLengthParser(Reader,String)" num="79" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="5" visibility="protected" signature="init() : void" num="83" count="4" type="method"/>
            <line num="85" count="4" type="stmt"/>
            <line num="88" count="4" type="stmt"/>
            <line num="90" count="4" type="stmt"/>
            <line num="91" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="99" count="4" type="stmt"/>
            <line num="100" count="4" type="stmt"/>
            <line num="102" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="102" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/InitialisationException.java" name="InitialisationException.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="4" loc="70" coveredmethods="1" methods="4" elements="8" classes="1" ncloc="16" statements="4" conditionals="0" coveredstatements="1"/>
            <class name="InitialisationException">
               <metrics coveredelements="2" coveredconditionals="0" complexity="4" coveredmethods="1" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="InitialisationException()" num="45" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="InitialisationException(String)" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="InitialisationException(Throwable)" num="59" count="1" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="InitialisationException(String,Throwable)" num="67" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/Parser.java" name="Parser.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="295" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="32" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Parser">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/ParserFactory.java" name="ParserFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="372" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="31" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ParserFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/Record.java" name="Record.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="359" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="42" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Record">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/RecordDataSet.java" name="RecordDataSet.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="36" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="RecordDataSet">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/RowRecord.java" name="RowRecord.java">
            <metrics coveredelements="110" coveredconditionals="24" complexity="59" loc="334" coveredmethods="18" methods="30" elements="204" classes="1" ncloc="267" statements="120" conditionals="54" coveredstatements="68"/>
            <class name="RowRecord">
               <metrics coveredelements="110" coveredconditionals="24" complexity="59" coveredmethods="18" methods="30" elements="204" statements="120" conditionals="54" coveredstatements="68"/>
            </class>
            <line complexity="1" visibility="public" signature="RowRecord(Row,MetaData,boolean,Properties,boolean,boolean,boolean,boolean)" num="36" count="48" type="method"/>
            <line num="38" count="48" type="stmt"/>
            <line num="39" count="48" type="stmt"/>
            <line num="40" count="48" type="stmt"/>
            <line num="41" count="48" type="stmt"/>
            <line num="42" count="48" type="stmt"/>
            <line num="43" count="48" type="stmt"/>
            <line num="44" count="48" type="stmt"/>
            <line num="45" count="48" type="stmt"/>
            <line num="46" count="48" type="stmt"/>
            <line complexity="2" visibility="public" signature="getRecordID() : String" num="49" count="1" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isRecordID(String) : boolean" num="58" count="1" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRowNo() : int" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isRowEmpty() : boolean" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="contains(String) : boolean" num="75" count="8" type="method"/>
            <line num="77" count="8" type="stmt"/>
            <line num="78" count="8" type="stmt"/>
            <line falsecount="4" truecount="16" num="78" type="cond"/>
            <line num="79" count="16" type="stmt"/>
            <line num="80" count="16" type="stmt"/>
            <line falsecount="12" truecount="4" num="80" type="cond"/>
            <line num="81" count="4" type="stmt"/>
            <line num="85" count="4" type="stmt"/>
            <line complexity="4" visibility="public" signature="getColumns() : String[]" num="94" count="3" type="method"/>
            <line num="96" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="96" type="cond"/>
            <line num="97" count="3" type="stmt"/>
            <line num="99" count="3" type="stmt"/>
            <line num="100" count="3" type="stmt"/>
            <line falsecount="3" truecount="5" num="100" type="cond"/>
            <line num="101" count="5" type="stmt"/>
            <line num="105" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="getColumns(String) : String[]" num="113" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDate(String,SimpleDateFormat,Supplier&lt;Date&gt;) : Date" num="129" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="132" type="cond"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDate(String,Supplier&lt;Date&gt;) : Date" num="138" count="1" type="method"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="141" type="cond"/>
            <line num="142" count="1" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDate(String) : Date" num="147" count="2" type="method"/>
            <line num="149" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDate(String,SimpleDateFormat) : Date" num="152" count="2" type="method"/>
            <line num="154" count="2" type="stmt"/>
            <line num="155" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="155" type="cond"/>
            <line num="157" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="getLocalDate(String,String,Supplier&lt;LocalDate&gt;) : LocalDate" num="162" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="165" type="cond"/>
            <line num="166" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getLocalDate(String,Supplier&lt;LocalDate&gt;) : LocalDate" num="171" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="174" type="cond"/>
            <line num="175" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLocalDate(String) : LocalDate" num="180" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getLocalDate(String,DateTimeFormatter) : LocalDate" num="185" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="188" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getLocalDate(String,String) : LocalDate" num="195" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="198" type="cond"/>
            <line num="200" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDouble(String,DoubleSupplier) : double" num="205" count="1" type="method"/>
            <line num="207" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="208" type="cond"/>
            <line num="209" count="1" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDouble(String) : double" num="214" count="1" type="method"/>
            <line num="216" count="1" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="219" type="cond"/>
            <line num="220" count="1" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="getInt(String,IntSupplier) : int" num="228" count="1" type="method"/>
            <line num="230" count="1" type="stmt"/>
            <line num="231" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="231" type="cond"/>
            <line num="232" count="1" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getInt(String) : int" num="237" count="1" type="method"/>
            <line num="239" count="1" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="241" type="cond"/>
            <line num="242" count="1" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getLong(String,LongSupplier) : long" num="248" count="0" type="method"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="251" type="cond"/>
            <line num="252" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getLong(String) : long" num="257" count="0" type="method"/>
            <line num="259" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="261" type="cond"/>
            <line num="262" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getStringValue(String) : String" num="268" count="66" type="method"/>
            <line num="269" count="66" type="stmt"/>
            <line complexity="1" visibility="public" signature="getObject(String,Class&lt;?&gt;) : Object" num="272" count="0" type="method"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getBigDecimal(String,Supplier&lt;BigDecimal&gt;) : BigDecimal" num="278" count="1" type="method"/>
            <line num="280" count="1" type="stmt"/>
            <line num="281" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="281" type="cond"/>
            <line num="282" count="1" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getBigDecimal(String) : BigDecimal" num="287" count="4" type="method"/>
            <line num="289" count="4" type="stmt"/>
            <line num="290" count="4" type="stmt"/>
            <line falsecount="3" truecount="1" num="290" type="cond"/>
            <line num="292" count="1" type="stmt"/>
            <line num="295" count="3" type="stmt"/>
            <line num="297" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="297" type="cond"/>
            <line num="299" count="0" type="stmt"/>
            <line num="301" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="getString(String,Supplier&lt;String&gt;) : String" num="304" count="1" type="method"/>
            <line num="306" count="1" type="stmt"/>
            <line num="307" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="307" type="cond"/>
            <line num="308" count="1" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getString(String) : String" num="313" count="56" type="method"/>
            <line num="315" count="56" type="stmt"/>
            <line num="317" count="54" type="stmt"/>
            <line falsecount="53" truecount="1" num="317" type="cond"/>
            <line num="318" count="1" type="stmt"/>
            <line num="319" count="53" type="stmt"/>
            <line falsecount="53" truecount="0" num="319" type="cond"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="53" type="stmt"/>
            <line falsecount="53" truecount="0" num="321" type="cond"/>
            <line num="322" count="0" type="stmt"/>
            <line num="326" count="54" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRawData() : String" num="329" count="3" type="method"/>
            <line num="331" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/StreamingDataSet.java" name="StreamingDataSet.java">
            <metrics coveredelements="20" coveredconditionals="5" complexity="10" loc="67" coveredmethods="4" methods="5" elements="27" classes="1" ncloc="46" statements="14" conditionals="8" coveredstatements="11"/>
            <class name="StreamingDataSet">
               <metrics coveredelements="20" coveredconditionals="5" complexity="10" coveredmethods="4" methods="5" elements="27" statements="14" conditionals="8" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="package" signature="stream() : Stream&lt;Record&gt;" num="23" count="3" type="method"/>
            <line num="24" count="3" type="stmt"/>
            <line complexity="1" visibility="package" signature="parallelStream() : Stream&lt;Record&gt;" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="spliterator() : Iterator&lt;Record&gt;" num="37" count="3" type="method"/>
            <line num="38" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="hasNext() : boolean" num="41" count="7" type="method"/>
            <line num="43" count="7" type="stmt"/>
            <line falsecount="7" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="46" count="7" type="stmt"/>
            <line falsecount="3" truecount="4" num="46" type="cond"/>
            <line num="47" count="4" type="stmt"/>
            <line num="49" count="3" type="stmt"/>
            <line num="51" count="7" type="stmt"/>
            <line complexity="4" visibility="public" signature="next() : Record" num="55" count="4" type="method"/>
            <line num="57" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="57" type="cond"/>
            <line num="58" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="58" type="cond"/>
            <line num="59" count="4" type="stmt"/>
            <line num="60" count="4" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/StreamingRecord.java" name="StreamingRecord.java">
            <metrics coveredelements="13" coveredconditionals="2" complexity="7" loc="34" coveredmethods="5" methods="5" elements="15" classes="1" ncloc="27" statements="6" conditionals="4" coveredstatements="6"/>
            <class name="StreamingRecord">
               <metrics coveredelements="13" coveredconditionals="2" complexity="7" coveredmethods="5" methods="5" elements="15" statements="6" conditionals="4" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="StreamingRecord(DataSet)" num="10" count="16" type="method"/>
            <line num="11" count="16" type="stmt"/>
            <line num="12" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRecord() : Optional&lt;Record&gt;" num="15" count="43" type="method"/>
            <line num="17" count="43" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : boolean" num="20" count="21" type="method"/>
            <line num="22" count="21" type="stmt"/>
            <line complexity="2" visibility="public" signature="getErrorCount() : int" num="25" count="1" type="method"/>
            <line num="27" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="27" type="cond"/>
            <line complexity="2" visibility="public" signature="getErrors() : List&lt;DataError&gt;" num="30" count="1" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="32" type="cond"/>
         </file>
      </package>
      <package name="net.sf.flatpack.brparse">
         <metrics coveredelements="150" complexity="98" loc="937" methods="55" classes="7" statements="180" coveredconditionals="34" coveredmethods="18" elements="301" ncloc="488" files="7" conditionals="66" coveredstatements="98"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/brparse/BuffReaderDataSet.java" name="BuffReaderDataSet.java">
            <metrics coveredelements="17" coveredconditionals="4" complexity="14" loc="162" coveredmethods="2" methods="11" elements="38" classes="1" ncloc="68" statements="21" conditionals="6" coveredstatements="11"/>
            <class name="BuffReaderDataSet">
               <metrics coveredelements="17" coveredconditionals="4" complexity="14" coveredmethods="2" methods="11" elements="38" statements="21" conditionals="6" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="BuffReaderDataSet(MetaData,InterfaceBuffReaderParse)" num="57" count="12" type="method"/>
            <line num="58" count="12" type="stmt"/>
            <line num="61" count="12" type="stmt"/>
            <line complexity="4" visibility="public" signature="next() : boolean" num="64" count="6" type="method"/>
            <line num="66" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="66" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="71" count="6" type="stmt"/>
            <line falsecount="2" truecount="4" num="71" type="cond"/>
            <line num="72" count="4" type="stmt"/>
            <line num="75" count="6" type="stmt"/>
            <line num="76" count="6" type="stmt"/>
            <line num="77" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="77" type="cond"/>
            <line num="78" count="6" type="stmt"/>
            <line num="79" count="6" type="stmt"/>
            <line num="82" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="previous() : boolean" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="orderRows(OrderBy) : void" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="absolute(int) : void" num="110" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIndex() : int" num="126" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="goBottom() : void" num="134" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="goTop() : void" num="142" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(String,String) : void" num="150" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRowCount() : int" num="158" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/brparse/BuffReaderDelimParser.java" name="BuffReaderDelimParser.java">
            <metrics coveredelements="80" coveredconditionals="20" complexity="36" loc="251" coveredmethods="9" methods="15" elements="119" classes="1" ncloc="155" statements="72" conditionals="32" coveredstatements="51"/>
            <class name="BuffReaderDelimParser">
               <metrics coveredelements="80" coveredconditionals="20" complexity="36" coveredmethods="9" methods="15" elements="119" statements="72" conditionals="32" coveredstatements="51"/>
            </class>
            <line complexity="1" visibility="public" signature="BuffReaderDelimParser(File,File,char,char,boolean)" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BuffReaderDelimParser(InputStream,InputStream,char,char,boolean)" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BuffReaderDelimParser(File,char,char,boolean)" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BuffReaderDelimParser(InputStream,char,char,boolean)" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BuffReaderDelimParser(Reader,Reader,char,char,boolean)" num="79" count="5" type="method"/>
            <line num="81" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="BuffReaderDelimParser(Reader,char,char,boolean)" num="84" count="4" type="method"/>
            <line num="85" count="4" type="stmt"/>
            <line complexity="2" visibility="protected" signature="doParse() : DataSet" num="88" count="9" type="method"/>
            <line num="90" count="9" type="stmt"/>
            <line num="91" count="9" type="stmt"/>
            <line num="93" count="9" type="stmt"/>
            <line num="95" count="9" type="stmt"/>
            <line num="97" count="9" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="buildRow(DefaultDataSet) : Row" num="112" count="9" type="method"/>
            <line num="115" count="9" type="stmt"/>
            <line num="116" count="14" type="stmt"/>
            <line num="117" count="14" type="stmt"/>
            <line num="118" count="14" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="123" count="14" type="stmt"/>
            <line falsecount="14" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="128" count="14" type="stmt"/>
            <line falsecount="9" truecount="5" num="128" type="cond"/>
            <line num="129" count="5" type="stmt"/>
            <line num="136" count="9" type="stmt"/>
            <line num="138" count="9" type="stmt"/>
            <line num="139" count="9" type="stmt"/>
            <line num="144" count="9" type="stmt"/>
            <line falsecount="9" truecount="0" num="144" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="148" count="9" type="stmt"/>
            <line complexity="5" visibility="private" signature="shouldSkipFirstRecord(String,DefaultDataSet) : boolean" num="152" count="14" type="method"/>
            <line num="153" count="14" type="stmt"/>
            <line falsecount="13" truecount="1" num="153" type="cond"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="13" type="stmt"/>
            <line falsecount="9" truecount="4" num="156" type="cond"/>
            <line num="157" count="4" type="stmt"/>
            <line num="158" count="4" type="stmt"/>
            <line num="159" count="4" type="stmt"/>
            <line num="160" count="4" type="stmt"/>
            <line num="162" count="9" type="stmt"/>
            <line complexity="4" visibility="private" signature="createRow(String,List&lt;String&gt;,String) : Row" num="165" count="9" type="method"/>
            <line num="166" count="9" type="stmt"/>
            <line num="167" count="9" type="stmt"/>
            <line falsecount="0" truecount="9" num="167" type="cond"/>
            <line num="169" count="9" type="stmt"/>
            <line num="170" count="9" type="stmt"/>
            <line num="172" count="9" type="stmt"/>
            <line falsecount="9" truecount="0" num="172" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line num="176" count="9" type="stmt"/>
            <line falsecount="6" truecount="3" num="176" type="cond"/>
            <line num="179" count="3" type="stmt"/>
            <line num="181" count="9" type="stmt"/>
            <line complexity="3" visibility="private" signature="validateColumns(DefaultDataSet,List&lt;String&gt;,List&lt;ColumnMetaData&gt;,String) : boolean" num="184" count="9" type="method"/>
            <line num="185" count="9" type="stmt"/>
            <line num="186" count="9" type="stmt"/>
            <line falsecount="6" truecount="3" num="186" type="cond"/>
            <line num="187" count="3" type="stmt"/>
            <line num="188" count="6" type="stmt"/>
            <line falsecount="4" truecount="2" num="188" type="cond"/>
            <line num="189" count="2" type="stmt"/>
            <line num="191" count="4" type="stmt"/>
            <line complexity="4" visibility="private" signature="handleTooFewColumns(DefaultDataSet,List&lt;String&gt;,String,int) : boolean" num="194" count="2" type="method"/>
            <line num="195" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="195" type="cond"/>
            <line num="197" count="2" type="stmt"/>
            <line falsecount="2" truecount="3" num="197" type="cond"/>
            <line num="198" count="3" type="stmt"/>
            <line num="202" count="2" type="stmt"/>
            <line num="203" count="2" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="206" type="cond"/>
            <line num="207" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="handleTooManyColumns(DefaultDataSet,List&lt;String&gt;,String,int) : boolean" num="211" count="3" type="method"/>
            <line num="212" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="212" type="cond"/>
            <line num="215" count="3" type="stmt"/>
            <line num="216" count="3" type="stmt"/>
            <line num="217" count="3" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="221" type="cond"/>
            <line num="222" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="close() : void" num="231" count="0" type="method"/>
            <line num="233" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="233" type="cond"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line complexity="2" visibility="protected" signature="finalize() : void" num="241" count="0" type="method"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/brparse/BuffReaderFixedParser.java" name="BuffReaderFixedParser.java">
            <metrics coveredelements="45" coveredconditionals="10" complexity="23" loc="222" coveredmethods="3" methods="8" elements="83" classes="1" ncloc="118" statements="51" conditionals="24" coveredstatements="32"/>
            <class name="BuffReaderFixedParser">
               <metrics coveredelements="45" coveredconditionals="10" complexity="23" coveredmethods="3" methods="8" elements="83" statements="51" conditionals="24" coveredstatements="32"/>
            </class>
            <line complexity="1" visibility="public" signature="BuffReaderFixedParser(InputStream,InputStream)" num="72" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BuffReaderFixedParser(File,File)" num="81" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BuffReaderFixedParser(Reader,Reader)" num="91" count="3" type="method"/>
            <line num="92" count="3" type="stmt"/>
            <line complexity="1" visibility="protected" signature="BuffReaderFixedParser(Reader,String)" num="95" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="2" visibility="protected" signature="doParse() : DataSet" num="99" count="3" type="method"/>
            <line num="101" count="3" type="stmt"/>
            <line num="102" count="3" type="stmt"/>
            <line num="103" count="3" type="stmt"/>
            <line num="104" count="3" type="stmt"/>
            <line num="106" count="3" type="stmt"/>
            <line num="108" count="3" type="stmt"/>
            <line num="110" count="3" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="13" visibility="public" signature="buildRow(DefaultDataSet) : Row" num="125" count="3" type="method"/>
            <line num="127" count="3" type="stmt"/>
            <line num="128" count="3" type="stmt"/>
            <line num="129" count="3" type="stmt"/>
            <line falsecount="0" truecount="0" num="129" type="cond"/>
            <line num="130" count="3" type="stmt"/>
            <line num="132" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="132" type="cond"/>
            <line num="133" count="0" type="stmt"/>
            <line num="136" count="3" type="stmt"/>
            <line num="138" count="3" type="stmt"/>
            <line num="139" count="3" type="stmt"/>
            <line num="140" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="140" type="cond"/>
            <line num="142" count="3" type="stmt"/>
            <line num="144" count="3" type="stmt"/>
            <line num="146" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="146" type="cond"/>
            <line num="150" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="150" type="cond"/>
            <line num="151" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="161" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="161" type="cond"/>
            <line num="162" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="162" type="cond"/>
            <line num="164" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="171" type="cond"/>
            <line num="172" count="0" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="178" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="178" type="cond"/>
            <line num="180" count="0" type="stmt"/>
            <line num="182" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="182" type="cond"/>
            <line num="185" count="3" type="stmt"/>
            <line num="188" count="3" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="close() : void" num="203" count="0" type="method"/>
            <line num="205" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="205" type="cond"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="2" visibility="protected" signature="finalize() : void" num="212" count="0" type="method"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/brparse/BuffReaderParseFactory.java" name="BuffReaderParseFactory.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="15" loc="182" coveredmethods="4" methods="15" elements="30" classes="1" ncloc="74" statements="15" conditionals="0" coveredstatements="4"/>
            <class name="BuffReaderParseFactory">
               <metrics coveredelements="8" coveredconditionals="0" complexity="15" coveredmethods="4" methods="15" elements="30" statements="15" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="getInstance() : ParserFactory" num="59" count="12" type="method"/>
            <line num="60" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="newFixedLengthParser(Connection,File,String) : Parser" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newFixedLengthParser(Connection,InputStream,String) : Parser" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newFixedLengthParser(File,File) : Parser" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newFixedLengthParser(Connection,Reader,String) : Parser" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newFixedLengthParser(Reader,Reader) : Parser" num="95" count="3" type="method"/>
            <line num="97" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="newFixedLengthParser(InputStream,InputStream) : Parser" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newDelimitedParser(Connection,InputStream,String,char,char,boolean) : Parser" num="111" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newDelimitedParser(File,File,char,char,boolean) : Parser" num="123" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newDelimitedParser(InputStream,InputStream,char,char,boolean) : Parser" num="135" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newDelimitedParser(File,char,char) : Parser" num="147" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newDelimitedParser(InputStream,char,char) : Parser" num="158" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newDelimitedParser(Connection,Reader,String,char,char,boolean) : Parser" num="166" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newDelimitedParser(Reader,char,char) : Parser" num="172" count="4" type="method"/>
            <line num="174" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="newDelimitedParser(Reader,Reader,char,char,boolean) : Parser" num="177" count="5" type="method"/>
            <line num="180" count="5" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/brparse/DBBuffReaderDelimParser.java" name="DBBuffReaderDelimParser.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="57" coveredmethods="0" methods="3" elements="16" classes="1" ncloc="35" statements="11" conditionals="2" coveredstatements="0"/>
            <class name="DBBuffReaderDelimParser">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="3" elements="16" statements="11" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DBBuffReaderDelimParser(Connection,Reader,String,char,char,boolean)" num="30" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="3" visibility="protected" signature="init() : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="shouldCreateMDFromFile() : boolean" num="52" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/brparse/DBBuffReaderFixedParser.java" name="DBBuffReaderFixedParser.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="41" coveredmethods="0" methods="3" elements="15" classes="1" ncloc="32" statements="10" conditionals="2" coveredstatements="0"/>
            <class name="DBBuffReaderFixedParser">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="3" elements="15" statements="10" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DBBuffReaderFixedParser(Connection,Reader,String)" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="3" visibility="protected" signature="init() : void" num="21" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="28" type="cond"/>
            <line num="29" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="shouldCreateMDFromFile() : boolean" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/brparse/InterfaceBuffReaderParse.java" name="InterfaceBuffReaderParse.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="22" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="InterfaceBuffReaderParse">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.sf.flatpack.ordering">
         <metrics coveredelements="74" complexity="30" loc="338" methods="15" classes="2" statements="59" coveredconditionals="8" coveredmethods="13" elements="90" ncloc="135" files="2" conditionals="16" coveredstatements="53"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/ordering/OrderBy.java" name="OrderBy.java">
            <metrics coveredelements="55" coveredconditionals="6" complexity="20" loc="182" coveredmethods="6" methods="6" elements="67" classes="1" ncloc="92" statements="47" conditionals="14" coveredstatements="43"/>
            <class name="OrderBy">
               <metrics coveredelements="55" coveredconditionals="6" complexity="20" coveredmethods="6" methods="6" elements="67" statements="47" conditionals="14" coveredstatements="43"/>
            </class>
            <line complexity="1" visibility="public" signature="addOrderColumn(OrderColumn) : void" num="73" count="6" type="method"/>
            <line num="74" count="6" type="stmt"/>
            <line complexity="10" visibility="public" signature="compare(Row,Row) : int" num="84" count="6" type="method"/>
            <line num="86" count="6" type="stmt"/>
            <line num="88" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="88" type="cond"/>
            <line num="89" count="6" type="stmt"/>
            <line num="92" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="92" type="cond"/>
            <line num="93" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="93" type="cond"/>
            <line num="96" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="96" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="100" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="104" count="6" type="stmt"/>
            <line num="108" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="108" type="cond"/>
            <line num="109" count="6" type="stmt"/>
            <line num="113" count="6" type="stmt"/>
            <line complexity="6" visibility="private" signature="compareCol(Row,Row,OrderColumn) : int" num="116" count="6" type="method"/>
            <line num="117" count="6" type="stmt"/>
            <line num="120" count="6" type="stmt"/>
            <line num="121" count="6" type="stmt"/>
            <line num="122" count="6" type="stmt"/>
            <line num="125" count="6" type="stmt"/>
            <line num="128" count="6" type="stmt"/>
            <line num="129" count="2" type="stmt"/>
            <line num="130" count="2" type="stmt"/>
            <line num="131" count="2" type="stmt"/>
            <line num="132" count="2" type="stmt"/>
            <line num="133" count="2" type="stmt"/>
            <line num="134" count="2" type="stmt"/>
            <line num="135" count="2" type="stmt"/>
            <line num="136" count="2" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="142" count="2" type="stmt"/>
            <line num="143" count="2" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="147" count="2" type="stmt"/>
            <line num="148" count="2" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="2" type="stmt"/>
            <line num="151" count="2" type="stmt"/>
            <line num="152" count="2" type="stmt"/>
            <line num="156" count="6" type="stmt"/>
            <line num="157" count="6" type="stmt"/>
            <line complexity="1" visibility="private" signature="getBadDateDefault() : Date" num="160" count="1" type="method"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="setMetaData(MetaData) : void" num="171" count="6" type="method"/>
            <line num="172" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="setParser(Parser) : void" num="178" count="6" type="method"/>
            <line num="179" count="6" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/ordering/OrderColumn.java" name="OrderColumn.java">
            <metrics coveredelements="19" coveredconditionals="2" complexity="10" loc="156" coveredmethods="7" methods="9" elements="23" classes="1" ncloc="43" statements="12" conditionals="2" coveredstatements="10"/>
            <class name="OrderColumn">
               <metrics coveredelements="19" coveredconditionals="2" complexity="10" coveredmethods="7" methods="9" elements="23" statements="12" conditionals="2" coveredstatements="10"/>
            </class>
            <line complexity="2" visibility="public" signature="OrderColumn(String,boolean,int)" num="80" count="6" type="method"/>
            <line num="81" count="6" type="stmt"/>
            <line num="82" count="6" type="stmt"/>
            <line num="84" count="6" type="stmt"/>
            <line falsecount="4" truecount="2" num="84" type="cond"/>
            <line num="85" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="OrderColumn(String,boolean)" num="97" count="2" type="method"/>
            <line num="98" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getColumnName() : String" num="104" count="12" type="method"/>
            <line num="105" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="setColumnName(String) : void" num="112" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSortIndicator() : int" num="119" count="6" type="method"/>
            <line num="120" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSelectedColType() : int" num="126" count="6" type="method"/>
            <line num="127" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="setSelectedColType(int) : void" num="133" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDateFormatPattern() : String" num="142" count="2" type="method"/>
            <line num="143" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDateFormatPattern(String) : void" num="153" count="2" type="method"/>
            <line num="154" count="2" type="stmt"/>
         </file>
      </package>
      <package name="net.sf.flatpack.writer">
         <metrics coveredelements="245" complexity="85" loc="659" methods="56" classes="9" statements="175" coveredconditionals="49" coveredmethods="44" elements="287" ncloc="438" files="9" conditionals="56" coveredstatements="152"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/writer/AbstractWriter.java" name="AbstractWriter.java">
            <metrics coveredelements="34" coveredconditionals="5" complexity="13" loc="96" coveredmethods="9" methods="10" elements="39" classes="1" ncloc="60" statements="23" conditionals="6" coveredstatements="20"/>
            <class name="AbstractWriter">
               <metrics coveredelements="34" coveredconditionals="5" complexity="13" coveredmethods="9" methods="10" elements="39" statements="23" conditionals="6" coveredstatements="20"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractWriter(java.io.Writer)" num="17" count="20" type="method"/>
            <line num="18" count="20" type="stmt"/>
            <line num="19" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractWriter(java.io.Writer,String)" num="22" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="addRecordEntry(String,Object) : Writer" num="28" count="91" type="method"/>
            <line num="30" count="91" type="stmt"/>
            <line falsecount="67" truecount="24" num="30" type="cond"/>
            <line num="31" count="24" type="stmt"/>
            <line num="34" count="91" type="stmt"/>
            <line falsecount="90" truecount="1" num="34" type="cond"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="90" type="stmt"/>
            <line num="38" count="90" type="stmt"/>
            <line complexity="1" visibility="public" signature="nextRecord() : Writer" num="58" count="34" type="method"/>
            <line num="62" count="34" type="stmt"/>
            <line num="63" count="34" type="stmt"/>
            <line num="64" count="34" type="stmt"/>
            <line complexity="2" visibility="protected" signature="write(Object) : void" num="67" count="107" type="method"/>
            <line num="68" count="107" type="stmt"/>
            <line falsecount="107" truecount="0" num="68" type="cond"/>
            <line num="70" count="107" type="stmt"/>
            <line complexity="1" visibility="protected" signature="write(char) : void" num="73" count="305" type="method"/>
            <line num="74" count="305" type="stmt"/>
            <line complexity="1" visibility="protected" signature="write(char[]) : void" num="77" count="21" type="method"/>
            <line num="78" count="21" type="stmt"/>
            <line complexity="1" visibility="public" signature="flush() : Writer" num="81" count="18" type="method"/>
            <line num="83" count="18" type="stmt"/>
            <line num="84" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="close() : void" num="87" count="6" type="method"/>
            <line num="89" count="6" type="stmt"/>
            <line num="90" count="6" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getRowMap() : Map&lt;String, Object&gt;" num="93" count="167" type="method"/>
            <line num="94" count="167" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/writer/AbstractWriterFactory.java" name="AbstractWriterFactory.java">
            <metrics coveredelements="15" coveredconditionals="0" complexity="5" loc="50" coveredmethods="4" methods="4" elements="15" classes="1" ncloc="34" statements="11" conditionals="0" coveredstatements="11"/>
            <class name="AbstractWriterFactory">
               <metrics coveredelements="15" coveredconditionals="0" complexity="5" coveredmethods="4" methods="4" elements="15" statements="11" conditionals="0" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="protected" signature="AbstractWriterFactory()" num="21" count="20" type="method"/>
            <line num="22" count="20" type="stmt"/>
            <line num="24" count="20" type="stmt"/>
            <line num="25" count="20" type="stmt"/>
            <line num="26" count="20" type="stmt"/>
            <line complexity="1" visibility="protected" signature="AbstractWriterFactory(Map&lt;String, ?&gt;)" num="29" count="2" type="method"/>
            <line num="30" count="2" type="stmt"/>
            <line num="31" count="2" type="stmt"/>
            <line complexity="2" visibility="protected" signature="AbstractWriterFactory(Reader)" num="34" count="7" type="method"/>
            <line num="35" count="7" type="stmt"/>
            <line num="37" count="7" type="stmt"/>
            <line num="38" count="7" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getColumnMapping() : Map&lt;String, Object&gt;" num="44" count="65" type="method"/>
            <line num="48" count="65" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/writer/DelimiterWriter.java" name="DelimiterWriter.java">
            <metrics coveredelements="88" coveredconditionals="26" complexity="24" loc="144" coveredmethods="9" methods="10" elements="93" classes="1" ncloc="115" statements="55" conditionals="28" coveredstatements="53"/>
            <class name="DelimiterWriter">
               <metrics coveredelements="88" coveredconditionals="26" complexity="24" coveredmethods="9" methods="10" elements="93" statements="55" conditionals="28" coveredstatements="53"/>
            </class>
            <line complexity="2" visibility="protected" signature="DelimiterWriter(Map,java.io.Writer,char,char,WriterOptions)" num="24" count="16" type="method"/>
            <line num="26" count="16" type="stmt"/>
            <line num="27" count="16" type="stmt"/>
            <line num="28" count="16" type="stmt"/>
            <line num="29" count="16" type="stmt"/>
            <line num="31" count="16" type="stmt"/>
            <line num="32" count="16" type="stmt"/>
            <line num="33" count="16" type="stmt"/>
            <line num="34" count="58" type="stmt"/>
            <line num="37" count="16" type="stmt"/>
            <line falsecount="6" truecount="10" num="37" type="cond"/>
            <line num="38" count="10" type="stmt"/>
            <line complexity="1" visibility="protected" signature="writeWithDelimiter(Object) : void" num="42" count="85" type="method"/>
            <line num="43" count="85" type="stmt"/>
            <line num="44" count="85" type="stmt"/>
            <line complexity="5" visibility="protected" signature="write(Object) : void" num="47" count="115" type="method"/>
            <line num="49" count="115" type="stmt"/>
            <line num="51" count="115" type="stmt"/>
            <line num="52" count="115" type="stmt"/>
            <line num="56" count="115" type="stmt"/>
            <line falsecount="103" truecount="12" num="56" type="cond"/>
            <line num="57" count="12" type="stmt"/>
            <line num="60" count="115" type="stmt"/>
            <line falsecount="107" truecount="8" num="60" type="cond"/>
            <line num="61" count="8" type="stmt"/>
            <line num="62" count="8" type="stmt"/>
            <line num="63" count="174" type="stmt"/>
            <line falsecount="152" truecount="22" num="63" type="cond"/>
            <line num="64" count="22" type="stmt"/>
            <line num="66" count="174" type="stmt"/>
            <line num="69" count="107" type="stmt"/>
            <line num="72" count="115" type="stmt"/>
            <line falsecount="103" truecount="12" num="72" type="cond"/>
            <line num="73" count="12" type="stmt"/>
            <line complexity="4" visibility="private" signature="toString(Object) : String" num="77" count="115" type="method"/>
            <line num="78" count="115" type="stmt"/>
            <line num="81" count="115" type="stmt"/>
            <line falsecount="113" truecount="2" num="81" type="cond"/>
            <line num="82" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="83" type="cond"/>
            <line num="84" count="113" type="stmt"/>
            <line falsecount="3" truecount="110" num="84" type="cond"/>
            <line num="85" count="110" type="stmt"/>
            <line num="87" count="115" type="stmt"/>
            <line complexity="3" visibility="protected" signature="writeColumnTitles() : void" num="90" count="11" type="method"/>
            <line num="91" count="11" type="stmt"/>
            <line num="92" count="11" type="stmt"/>
            <line falsecount="11" truecount="42" num="92" type="cond"/>
            <line num="93" count="42" type="stmt"/>
            <line num="95" count="42" type="stmt"/>
            <line falsecount="10" truecount="32" num="95" type="cond"/>
            <line num="96" count="32" type="stmt"/>
            <line num="98" count="10" type="stmt"/>
            <line complexity="4" visibility="protected" signature="writeRow() : void" num="103" count="20" type="method"/>
            <line num="104" count="20" type="stmt"/>
            <line num="105" count="20" type="stmt"/>
            <line falsecount="20" truecount="73" num="105" type="cond"/>
            <line num="106" count="73" type="stmt"/>
            <line num="107" count="73" type="stmt"/>
            <line falsecount="0" truecount="73" num="107" type="cond"/>
            <line num="108" count="73" type="stmt"/>
            <line falsecount="20" truecount="53" num="108" type="cond"/>
            <line num="109" count="53" type="stmt"/>
            <line num="111" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="nextRecord() : Writer" num="117" count="20" type="method"/>
            <line num="119" count="20" type="stmt"/>
            <line num="121" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="printFooter() : Writer" num="124" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="printHeader() : Writer" num="130" count="11" type="method"/>
            <line num="132" count="11" type="stmt"/>
            <line falsecount="0" truecount="11" num="132" type="cond"/>
            <line num="133" count="11" type="stmt"/>
            <line num="134" count="11" type="stmt"/>
            <line num="135" count="11" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="validateColumnTitle(String) : boolean" num="140" count="71" type="method"/>
            <line num="142" count="71" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/writer/DelimiterWriterFactory.java" name="DelimiterWriterFactory.java">
            <metrics coveredelements="28" coveredconditionals="0" complexity="16" loc="120" coveredmethods="7" methods="14" elements="52" classes="1" ncloc="81" statements="34" conditionals="4" coveredstatements="21"/>
            <class name="DelimiterWriterFactory">
               <metrics coveredelements="28" coveredconditionals="0" complexity="16" coveredmethods="7" methods="14" elements="52" statements="34" conditionals="4" coveredstatements="21"/>
            </class>
            <line complexity="1" visibility="public" signature="DelimiterWriterFactory(char,char)" num="23" count="13" type="method"/>
            <line num="24" count="13" type="stmt"/>
            <line num="25" count="13" type="stmt"/>
            <line num="26" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="DelimiterWriterFactory(Reader)" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DelimiterWriterFactory(Reader,char)" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DelimiterWriterFactory(Reader,char,char)" num="37" count="2" type="method"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="DelimiterWriterFactory(Map&lt;String, ?&gt;)" num="43" count="1" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="DelimiterWriterFactory(Map&lt;String, ?&gt;,char)" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DelimiterWriterFactory(Map&lt;String, ?&gt;,char,char)" num="51" count="2" type="method"/>
            <line num="52" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDelimiter() : char" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getQualifier() : char" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createWriter(java.io.Writer,WriterOptions) : Writer" num="65" count="7" type="method"/>
            <line num="66" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="createWriter(java.io.Writer) : Writer" num="69" count="10" type="method"/>
            <line num="71" count="10" type="stmt"/>
            <line complexity="2" visibility="public" signature="addColumnTitles(Collection&lt;String&gt;) : DelimiterWriterFactory" num="81" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="addColumnTitles(String) : DelimiterWriterFactory" num="97" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="98" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addColumnTitle(String) : DelimiterWriterFactory" num="107" count="44" type="method"/>
            <line num="108" count="44" type="stmt"/>
            <line num="109" count="44" type="stmt"/>
            <line num="110" count="44" type="stmt"/>
            <line num="112" count="44" type="stmt"/>
            <line num="113" count="44" type="stmt"/>
            <line num="114" count="44" type="stmt"/>
            <line num="116" count="44" type="stmt"/>
            <line num="117" count="44" type="stmt"/>
            <line num="118" count="44" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/writer/FixedLengthWriter.java" name="FixedLengthWriter.java">
            <metrics coveredelements="61" coveredconditionals="18" complexity="18" loc="123" coveredmethods="7" methods="9" elements="66" classes="1" ncloc="87" statements="39" conditionals="18" coveredstatements="36"/>
            <class name="FixedLengthWriter">
               <metrics coveredelements="61" coveredconditionals="18" complexity="18" coveredmethods="7" methods="9" elements="66" statements="39" conditionals="18" coveredstatements="36"/>
            </class>
            <line complexity="1" visibility="protected" signature="FixedLengthWriter(Map,java.io.Writer,char)" num="21" count="4" type="method"/>
            <line num="22" count="4" type="stmt"/>
            <line num="23" count="4" type="stmt"/>
            <line num="24" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="addRecordEntry(String,Object) : Writer" num="27" count="21" type="method"/>
            <line num="29" count="21" type="stmt"/>
            <line falsecount="1" truecount="20" num="29" type="cond"/>
            <line num="30" count="20" type="stmt"/>
            <line num="32" count="20" type="stmt"/>
            <line num="33" count="20" type="stmt"/>
            <line falsecount="19" truecount="1" num="33" type="cond"/>
            <line num="34" count="1" type="stmt"/>
            <line num="38" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="nextRecord() : Writer" num="41" count="3" type="method"/>
            <line num="43" count="3" type="stmt"/>
            <line num="44" count="21" type="stmt"/>
            <line num="45" count="21" type="stmt"/>
            <line num="48" count="3" type="stmt"/>
            <line complexity="7" visibility="protected" signature="formattedValue(Object,ColumnMetaData) : char[]" num="51" count="21" type="method"/>
            <line num="52" count="21" type="stmt"/>
            <line falsecount="19" truecount="2" num="52" type="cond"/>
            <line num="54" count="21" type="stmt"/>
            <line num="55" count="21" type="stmt"/>
            <line falsecount="19" truecount="2" num="55" type="cond"/>
            <line num="56" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="57" type="cond"/>
            <line num="59" count="19" type="stmt"/>
            <line num="62" count="21" type="stmt"/>
            <line num="64" count="21" type="stmt"/>
            <line num="65" count="21" type="stmt"/>
            <line num="73" count="21" type="stmt"/>
            <line num="74" count="21" type="stmt"/>
            <line falsecount="3" truecount="18" num="74" type="cond"/>
            <line num="75" count="18" type="stmt"/>
            <line falsecount="18" truecount="59" num="75" type="cond"/>
            <line num="76" count="59" type="stmt"/>
            <line num="79" count="3" type="stmt"/>
            <line num="82" count="21" type="stmt"/>
            <line falsecount="6" truecount="15" num="82" type="cond"/>
            <line num="84" count="15" type="stmt"/>
            <line num="87" count="21" type="stmt"/>
            <line complexity="1" visibility="protected" signature="validateColumnTitle(String) : boolean" num="90" count="20" type="method"/>
            <line num="92" count="20" type="stmt"/>
            <line num="93" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="printFooter() : Writer" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="printHeader() : Writer" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getColumnMetaData() : List&lt;ColumnMetaData&gt;" num="110" count="23" type="method"/>
            <line num="111" count="23" type="stmt"/>
            <line complexity="2" visibility="private" signature="getColumnMetaData(String) : ColumnMetaData" num="114" count="20" type="method"/>
            <line num="115" count="20" type="stmt"/>
            <line num="116" count="81" type="stmt"/>
            <line falsecount="61" truecount="20" num="116" type="cond"/>
            <line num="117" count="20" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/writer/FixedWriterFactory.java" name="FixedWriterFactory.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="4" loc="34" coveredmethods="3" methods="4" elements="10" classes="1" ncloc="23" statements="6" conditionals="0" coveredstatements="4"/>
            <class name="FixedWriterFactory">
               <metrics coveredelements="7" coveredconditionals="0" complexity="4" coveredmethods="3" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="FixedWriterFactory(Map)" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="FixedWriterFactory(Reader)" num="21" count="3" type="method"/>
            <line num="22" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="FixedWriterFactory(Reader,char)" num="25" count="4" type="method"/>
            <line num="26" count="4" type="stmt"/>
            <line num="27" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="createWriter(java.io.Writer) : Writer" num="30" count="4" type="method"/>
            <line num="32" count="4" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/writer/Writer.java" name="Writer.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="24" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Writer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/writer/WriterFactory.java" name="WriterFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="11" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="WriterFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/main/java/net/sf/flatpack/writer/WriterOptions.java" name="WriterOptions.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="5" loc="57" coveredmethods="5" methods="5" elements="12" classes="1" ncloc="22" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="WriterOptions">
               <metrics coveredelements="12" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="12" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="getInstance() : WriterOptions" num="18" count="15" type="method"/>
            <line num="19" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="isAutoPrintHeader() : boolean" num="25" count="16" type="method"/>
            <line num="26" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="autoPrintHeader(boolean) : WriterOptions" num="35" count="7" type="method"/>
            <line num="36" count="7" type="stmt"/>
            <line num="37" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLineSeparator() : String" num="44" count="16" type="method"/>
            <line num="45" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="setLineSeparator(String) : WriterOptions" num="53" count="4" type="method"/>
            <line num="54" count="4" type="stmt"/>
            <line num="55" count="4" type="stmt"/>
         </file>
      </package>
      <package name="net.sf.flatpack.examples.delimitedcolumnnamesinfile">
         <metrics coveredelements="0" complexity="5" loc="59" methods="1" classes="1" statements="18" coveredconditionals="0" coveredmethods="0" elements="25" ncloc="34" files="1" conditionals="6" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack-samples/src/main/java/net/sf/flatpack/examples/delimitedcolumnnamesinfile/DelimitedColumnNamesInFile.java" name="DelimitedColumnNamesInFile.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="59" coveredmethods="0" methods="1" elements="25" classes="1" ncloc="34" statements="18" conditionals="6" coveredstatements="0"/>
            <class name="DelimitedColumnNamesInFile">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="1" elements="25" statements="18" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="5" visibility="public" signature="main(String[]) : void" num="24" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="42" type="cond"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.sf.flatpack.examples.largedataset.delimiteddynamiccolumns">
         <metrics coveredelements="0" complexity="13" loc="58" methods="4" classes="1" statements="18" coveredconditionals="0" coveredmethods="0" elements="26" ncloc="37" files="1" conditionals="4" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack-samples/src/main/java/net/sf/flatpack/examples/largedataset/delimiteddynamiccolumns/LargeDelimitedWithPZMap.java" name="LargeDelimitedWithPZMap.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="58" coveredmethods="0" methods="4" elements="26" classes="1" ncloc="37" statements="18" conditionals="4" coveredstatements="0"/>
            <class name="LargeDelimitedWithPZMap">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="4" elements="26" statements="18" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line num="18" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDefaultDataFile() : String" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDefaultMapping() : String" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="10" visibility="public" signature="call(String,String) : void" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="54" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.sf.flatpack.examples.multilinedelimitedrecord">
         <metrics coveredelements="0" complexity="7" loc="56" methods="3" classes="1" statements="14" coveredconditionals="0" coveredmethods="0" elements="21" ncloc="35" files="1" conditionals="4" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack-samples/src/main/java/net/sf/flatpack/examples/multilinedelimitedrecord/DelimitedMultiLine.java" name="DelimitedMultiLine.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="56" coveredmethods="0" methods="3" elements="21" classes="1" ncloc="35" statements="14" conditionals="4" coveredstatements="0"/>
            <class name="DelimitedMultiLine">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="3" elements="21" statements="14" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="main(String[]) : void" num="21" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDefaultDataFile() : String" num="30" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="call(String) : void" num="34" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.sf.flatpack.examples.largedataset.fixedlengthdynamiccolumns">
         <metrics coveredelements="0" complexity="7" loc="47" methods="4" classes="1" statements="14" coveredconditionals="0" coveredmethods="0" elements="20" ncloc="32" files="1" conditionals="2" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack-samples/src/main/java/net/sf/flatpack/examples/largedataset/fixedlengthdynamiccolumns/LargeFixedLengthWithPZMap.java" name="LargeFixedLengthWithPZMap.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="47" coveredmethods="0" methods="4" elements="20" classes="1" ncloc="32" statements="14" conditionals="2" coveredstatements="0"/>
            <class name="LargeFixedLengthWithPZMap">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="4" elements="20" statements="14" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line num="18" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDefaultDataFile() : String" num="22" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDefaultMapping() : String" num="26" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="call(String,String) : void" num="30" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="38" type="cond"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.sf.flatpack.examples.fixedlengthdynamiccolumns">
         <metrics coveredelements="0" complexity="5" loc="46" methods="4" classes="1" statements="12" coveredconditionals="0" coveredmethods="0" elements="18" ncloc="29" files="1" conditionals="2" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack-samples/src/main/java/net/sf/flatpack/examples/fixedlengthdynamiccolumns/FixedLengthWithPZMap.java" name="FixedLengthWithPZMap.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="46" coveredmethods="0" methods="4" elements="18" classes="1" ncloc="29" statements="12" conditionals="2" coveredstatements="0"/>
            <class name="FixedLengthWithPZMap">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="4" elements="18" statements="12" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line num="18" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDefaultDataFile() : String" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDefaultMapping() : String" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="call(String,String) : void" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="37" type="cond"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.sf.flatpack.examples.lowlevelparse">
         <metrics coveredelements="0" complexity="12" loc="67" methods="3" classes="1" statements="19" coveredconditionals="0" coveredmethods="0" elements="28" ncloc="41" files="1" conditionals="6" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack-samples/src/main/java/net/sf/flatpack/examples/lowlevelparse/LowLevelParse.java" name="LowLevelParse.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="12" loc="67" coveredmethods="0" methods="3" elements="28" classes="1" ncloc="41" statements="19" conditionals="6" coveredstatements="0"/>
            <class name="LowLevelParse">
               <metrics coveredelements="0" coveredconditionals="0" complexity="12" coveredmethods="0" methods="3" elements="28" statements="19" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="main(String[]) : void" num="25" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDefaultDataFile() : String" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="call(String) : void" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="46" type="cond"/>
            <line num="47" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.sf.flatpack.examples.largedataset.largecsvperformancetest">
         <metrics coveredelements="0" complexity="22" loc="108" methods="4" classes="1" statements="41" coveredconditionals="0" coveredmethods="0" elements="59" ncloc="74" files="1" conditionals="14" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack-samples/src/main/java/net/sf/flatpack/examples/largedataset/largecsvperformancetest/CSVLarge.java" name="CSVLarge.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="22" loc="108" coveredmethods="0" methods="4" elements="59" classes="1" ncloc="74" statements="41" conditionals="14" coveredstatements="0"/>
            <class name="CSVLarge">
               <metrics coveredelements="0" coveredconditionals="0" complexity="22" coveredmethods="0" methods="4" elements="59" statements="41" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="main(String[]) : void" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDefaultDataFile() : String" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="10" visibility="public" signature="call(String) : void" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="58" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="9" visibility="private" signature="readSettings() : Map" num="91" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="98" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.sf.flatpack.examples.numericsanddates">
         <metrics coveredelements="0" complexity="5" loc="49" methods="4" classes="1" statements="14" coveredconditionals="0" coveredmethods="0" elements="20" ncloc="31" files="1" conditionals="2" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack-samples/src/main/java/net/sf/flatpack/examples/numericsanddates/NumericsAndDates.java" name="NumericsAndDates.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="49" coveredmethods="0" methods="4" elements="20" classes="1" ncloc="31" statements="14" conditionals="2" coveredstatements="0"/>
            <class name="NumericsAndDates">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="4" elements="20" statements="14" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="17" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDefaultDataFile() : String" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDefaultMapping() : String" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="call(String,String) : void" num="31" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="41" type="cond"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.sf.flatpack.examples.csvheaderandtrailer">
         <metrics coveredelements="0" complexity="9" loc="72" methods="4" classes="1" statements="29" coveredconditionals="0" coveredmethods="0" elements="41" ncloc="48" files="1" conditionals="8" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack-samples/src/main/java/net/sf/flatpack/examples/csvheaderandtrailer/CSVHeaderAndTrailer.java" name="CSVHeaderAndTrailer.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="72" coveredmethods="0" methods="4" elements="41" classes="1" ncloc="48" statements="29" conditionals="8" coveredstatements="0"/>
            <class name="CSVHeaderAndTrailer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="4" elements="41" statements="29" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="21" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDefaultMapping() : String" num="25" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDefaultDataFile() : String" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="call(String,String) : void" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="41" type="cond"/>
            <line num="43" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.sf.flatpack.examples.delimiteddynamiccolumns">
         <metrics coveredelements="0" complexity="10" loc="93" methods="4" classes="1" statements="34" coveredconditionals="0" coveredmethods="0" elements="48" ncloc="59" files="1" conditionals="10" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack-samples/src/main/java/net/sf/flatpack/examples/delimiteddynamiccolumns/DelimitedWithPZMap.java" name="DelimitedWithPZMap.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="93" coveredmethods="0" methods="4" elements="48" classes="1" ncloc="59" statements="34" conditionals="10" coveredstatements="0"/>
            <class name="DelimitedWithPZMap">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="4" elements="48" statements="34" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="25" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDefaultDataFile() : String" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDefaultMapping() : String" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="call(String,String) : void" num="41" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.sf.flatpack.examples">
         <metrics coveredelements="0" complexity="42" loc="284" methods="21" classes="1" statements="134" coveredconditionals="0" coveredmethods="0" elements="171" ncloc="239" files="1" conditionals="16" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack-samples/src/main/java/net/sf/flatpack/examples/Examples.java" name="Examples.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="42" loc="284" coveredmethods="0" methods="21" elements="171" classes="1" ncloc="239" statements="134" conditionals="16" coveredstatements="0"/>
            <class name="Examples">
               <metrics coveredelements="0" coveredconditionals="0" complexity="42" coveredmethods="0" methods="21" elements="171" statements="134" conditionals="16" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="39" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="repeat(Method) : void" num="47" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="doCall() : void" num="51" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="run() : void" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="doCSVTestFileCreator() : void" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="doCSVHeaderAndTrailer() : void" num="93" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="doCSVPerformanceTest() : void" num="103" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="doDelimitedWithPZMap() : void" num="114" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="doDelimitedWithPZMapErrors() : void" num="124" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="doDelimitedFileExportToExcel() : void" num="134" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="doFixedLengthWithPZMap() : void" num="144" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="doFixedLengthHeaderAndTrailer() : void" num="154" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="doLargeDelimitedWithPZMap() : void" num="164" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="doLargeFixedLengthWithPZMap() : void" num="174" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="doCSVLarge() : void" num="184" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="doLowLevelParse() : void" num="199" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="doDelimitedMultiLine() : void" num="208" count="0" type="method"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="doNumericsAndDates() : void" num="217" count="0" type="method"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="doStringBuffer() : void" num="227" count="0" type="method"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="232" type="cond"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="234" type="cond"/>
            <line num="235" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="244" type="cond"/>
            <line num="245" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="245" type="cond"/>
            <line num="246" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="doTestParsers() : void" num="256" count="0" type="method"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="262" type="cond"/>
            <line num="263" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="263" type="cond"/>
            <line num="264" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="267" type="cond"/>
            <line num="268" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="275" type="cond"/>
            <line num="276" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.sf.flatpack.examples.csvperformancetest">
         <metrics coveredelements="0" complexity="22" loc="135" methods="3" classes="1" statements="55" coveredconditionals="0" coveredmethods="0" elements="80" ncloc="91" files="1" conditionals="22" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack-samples/src/main/java/net/sf/flatpack/examples/csvperformancetest/CSVPerformanceTest.java" name="CSVPerformanceTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="22" loc="135" coveredmethods="0" methods="3" elements="80" classes="1" ncloc="91" statements="55" conditionals="22" coveredstatements="0"/>
            <class name="CSVPerformanceTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="22" coveredmethods="0" methods="3" elements="80" statements="55" conditionals="22" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="main(String[]) : void" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="11" visibility="public" signature="call(String,boolean,boolean) : void" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="9" visibility="private" signature="readSettings() : Map&lt;String, String&gt;" num="118" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.sf.flatpack.examples.exporttoexcel">
         <metrics coveredelements="0" complexity="7" loc="68" methods="4" classes="1" statements="19" coveredconditionals="0" coveredmethods="0" elements="27" ncloc="41" files="1" conditionals="4" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack-samples/src/main/java/net/sf/flatpack/examples/exporttoexcel/DelimitedFileExportToExcel.java" name="DelimitedFileExportToExcel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="68" coveredmethods="0" methods="4" elements="27" classes="1" ncloc="41" statements="19" conditionals="4" coveredstatements="0"/>
            <class name="DelimitedFileExportToExcel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="4" elements="27" statements="19" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="26" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDefaultDataFile() : String" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDefaultMapping() : String" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="call(String,String) : void" num="41" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.sf.flatpack.examples.delimiteddynamiccolumnswitherrors">
         <metrics coveredelements="0" complexity="8" loc="88" methods="4" classes="1" statements="33" coveredconditionals="0" coveredmethods="0" elements="45" ncloc="57" files="1" conditionals="8" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack-samples/src/main/java/net/sf/flatpack/examples/delimiteddynamiccolumnswitherrors/DelimitedWithPZMapErrors.java" name="DelimitedWithPZMapErrors.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="88" coveredmethods="0" methods="4" elements="45" classes="1" ncloc="57" statements="33" conditionals="8" coveredstatements="0"/>
            <class name="DelimitedWithPZMapErrors">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="4" elements="45" statements="33" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="25" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDefaultDataFile() : String" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDefaultMapping() : String" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="call(String,String) : void" num="40" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.sf.flatpack.examples.createsamplecsv">
         <metrics coveredelements="0" complexity="17" loc="86" methods="4" classes="1" statements="35" coveredconditionals="0" coveredmethods="0" elements="53" ncloc="60" files="1" conditionals="14" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack-samples/src/main/java/net/sf/flatpack/examples/createsamplecsv/CSVTestFileCreator.java" name="CSVTestFileCreator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="17" loc="86" coveredmethods="0" methods="4" elements="53" classes="1" ncloc="60" statements="35" conditionals="14" coveredstatements="0"/>
            <class name="CSVTestFileCreator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="17" coveredmethods="0" methods="4" elements="53" statements="35" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="main(String[]) : void" num="22" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="26" type="cond"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createFile(int,int) : void" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="12" visibility="public" signature="createFile(int,int,String) : void" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="printUsage() : void" num="80" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.sf.flatpack.examples.fixedlengthheaderandtrailer">
         <metrics coveredelements="0" complexity="10" loc="78" methods="4" classes="1" statements="34" coveredconditionals="0" coveredmethods="0" elements="48" ncloc="56" files="1" conditionals="10" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack-samples/src/main/java/net/sf/flatpack/examples/fixedlengthheaderandtrailer/FixedLengthHeaderAndTrailer.java" name="FixedLengthHeaderAndTrailer.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="78" coveredmethods="0" methods="4" elements="48" classes="1" ncloc="56" statements="34" conditionals="10" coveredstatements="0"/>
            <class name="FixedLengthHeaderAndTrailer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="4" elements="48" statements="34" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="18" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line num="20" count="0" type="stmt"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDefaultDataFile() : String" num="25" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDefaultMapping() : String" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="call(String,String) : void" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="39" type="cond"/>
            <line num="41" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="41" type="cond"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
         </file>
      </package>
   </project>
   <testproject name="FlatPack Parent 4.0.5-SNAPSHOT (Aggregated)" timestamp="1594318748271">
      <metrics coveredelements="1128" complexity="211" loc="2699" methods="156" classes="29" statements="1051" packages="11" coveredconditionals="30" coveredmethods="141" elements="1251" ncloc="1888" files="28" conditionals="44" coveredstatements="957"/>
      <package name="net.sf.flatpack.xml">
         <metrics coveredelements="61" complexity="9" loc="143" methods="7" classes="1" statements="56" coveredconditionals="0" coveredmethods="7" elements="63" ncloc="129" files="1" conditionals="0" coveredstatements="54"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/test/java/net/sf/flatpack/xml/MapParserTest.java" name="MapParserTest.java">
            <metrics coveredelements="61" coveredconditionals="0" complexity="9" loc="143" coveredmethods="7" methods="7" elements="63" classes="1" ncloc="129" statements="56" conditionals="0" coveredstatements="54"/>
            <class name="MapParserTest">
               <metrics coveredelements="61" complexity="9" methods="7" testruns="7" statements="56" coveredconditionals="0" coveredmethods="7" elements="63" testfailures="0" testduration="0.10300000000000001" conditionals="0" coveredstatements="54" testpasses="7"/>
            </class>
            <line complexity="2" visibility="public" signature="testInvalidMap() : void" num="60" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParseFixedMap() : void" num="70" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParseComplexFixedMap() : void" num="80" testsuccess="true" count="1" testduration="0.09" type="method"/>
            <line num="81" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParse() : void" num="96" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testInvalidDuplicate() : void" num="105" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParseCaseSensitive() : void" num="116" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParseIgnoreCase() : void" num="130" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
         </file>
      </package>
      <package name="net.sf.flatpack">
         <metrics coveredelements="173" complexity="24" loc="342" methods="22" classes="5" statements="163" coveredconditionals="0" coveredmethods="21" elements="185" ncloc="260" files="4" conditionals="0" coveredstatements="152"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/test/java/net/sf/flatpack/AllJunitTests.java" name="AllJunitTests.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="29" coveredmethods="0" methods="1" elements="10" classes="1" ncloc="16" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="AllJunitTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="10" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="suite() : Test" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
            <line num="20" count="0" type="stmt"/>
            <line num="21" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/test/java/net/sf/flatpack/DataSetFunctionalityTest.java" name="DataSetFunctionalityTest.java">
            <metrics coveredelements="133" coveredconditionals="0" complexity="15" loc="198" coveredmethods="15" methods="15" elements="133" classes="1" ncloc="159" statements="118" conditionals="0" coveredstatements="118"/>
            <class name="DataSetFunctionalityTest">
               <metrics coveredelements="133" complexity="15" methods="15" testruns="15" statements="118" coveredconditionals="0" coveredmethods="15" elements="133" testfailures="0" testduration="0.010000000000000002" conditionals="0" coveredstatements="118" testpasses="15"/>
            </class>
            <line complexity="1" visibility="public" signature="testContains() : void" num="22" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="23" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContainsForStream() : void" num="33" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDoNotPreserveSpace() : void" num="43" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDoPreserveLeadingSpace() : void" num="54" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDoPreserveTrailingSpace() : void" num="64" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDoPreserveBothSpace() : void" num="76" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDoubleQuote() : void" num="88" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMixedDoubleQuote() : void" num="98" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDoubleQuoteWithComma() : void" num="108" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDoubleQuoteWithDoubleQuoteInsideWithStream() : void" num="118" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDoubleQuoteWithDoubleQuoteInsideWithStream2() : void" num="134" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSpecialQualifier() : void" num="147" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInvalidLine() : void" num="160" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInvalidLineAsStreamOfRecord() : void" num="171" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContainsWithStream() : void" num="179" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/test/java/net/sf/flatpack/RecordTest.java" name="RecordTest.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="3" loc="56" coveredmethods="1" methods="1" elements="22" classes="1" ncloc="41" statements="21" conditionals="0" coveredstatements="19"/>
            <class name="RecordTest">
               <metrics coveredelements="20" complexity="3" methods="1" testruns="1" statements="21" coveredconditionals="0" coveredmethods="1" elements="22" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="19" testpasses="1"/>
            </class>
            <line complexity="3" visibility="public" signature="testContains() : void" num="20" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="21" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/test/java/net/sf/flatpack/StreamingTest.java" name="StreamingTest.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="5" loc="59" coveredmethods="5" methods="5" elements="20" classes="2" ncloc="44" statements="15" conditionals="0" coveredstatements="15"/>
            <class name="StreamingTest">
               <metrics coveredelements="12" complexity="1" methods="1" testruns="1" statements="11" coveredconditionals="0" coveredmethods="1" elements="12" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="11" testpasses="1"/>
            </class>
            <class name="StreamingTest.Test">
               <metrics coveredelements="8" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="getItemName() : String" num="20" count="3" type="method"/>
            <line num="21" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="setItemName(String) : void" num="24" count="2" type="method"/>
            <line num="25" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPrice() : BigDecimal" num="28" count="1" type="method"/>
            <line num="29" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPrice(BigDecimal) : void" num="32" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContains() : void" num="37" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="45" count="2" type="stmt"/>
            <line num="46" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line num="48" count="2" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
         </file>
      </package>
      <package name="net.sf.flatpack.brparse">
         <metrics coveredelements="59" complexity="11" loc="157" methods="11" classes="3" statements="52" coveredconditionals="0" coveredmethods="9" elements="63" ncloc="119" files="3" conditionals="0" coveredstatements="50"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/test/java/net/sf/flatpack/brparse/BuffReaderDataSetTest.java" name="BuffReaderDataSetTest.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="1" loc="23" coveredmethods="1" methods="1" elements="7" classes="1" ncloc="18" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="BuffReaderDataSetTest">
               <metrics coveredelements="7" complexity="1" methods="1" testruns="1" statements="6" coveredconditionals="0" coveredmethods="1" elements="7" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="6" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testCsv() : void" num="15" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="16" count="1" type="stmt"/>
            <line num="17" count="1" type="stmt"/>
            <line num="18" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/test/java/net/sf/flatpack/brparse/BuffReaderDelimParserTest.java" name="BuffReaderDelimParserTest.java">
            <metrics coveredelements="26" coveredconditionals="0" complexity="5" loc="67" coveredmethods="4" methods="5" elements="28" classes="1" ncloc="51" statements="23" conditionals="0" coveredstatements="22"/>
            <class name="BuffReaderDelimParserTest">
               <metrics coveredelements="26" complexity="5" methods="5" testruns="3" statements="23" coveredconditionals="0" coveredmethods="4" elements="28" testfailures="0" testduration="0.011" conditionals="0" coveredstatements="22" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="parseRawData(String,String) : String" num="26" count="3" type="method"/>
            <line num="27" count="3" type="stmt"/>
            <line num="28" count="3" type="stmt"/>
            <line num="29" count="3" type="stmt"/>
            <line num="30" count="3" type="stmt"/>
            <line num="31" count="3" type="stmt"/>
            <line num="32" count="3" type="stmt"/>
            <line num="34" count="3" type="stmt"/>
            <line num="35" count="3" type="stmt"/>
            <line num="36" count="3" type="stmt"/>
            <line num="37" count="3" type="stmt"/>
            <line num="39" count="3" type="stmt"/>
            <line num="40" count="3" type="stmt"/>
            <line num="41" count="3" type="stmt"/>
            <line num="43" count="3" type="stmt"/>
            <line num="44" count="3" type="stmt"/>
            <line num="46" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBuildExactRow() : void" num="49" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBuildShortRow() : void" num="54" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBuildLongRow() : void" num="59" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="64" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/test/java/net/sf/flatpack/brparse/BuffReaderFixedParserTest.java" name="BuffReaderFixedParserTest.java">
            <metrics coveredelements="26" coveredconditionals="0" complexity="5" loc="67" coveredmethods="4" methods="5" elements="28" classes="1" ncloc="50" statements="23" conditionals="0" coveredstatements="22"/>
            <class name="BuffReaderFixedParserTest">
               <metrics coveredelements="26" complexity="5" methods="5" testruns="3" statements="23" coveredconditionals="0" coveredmethods="4" elements="28" testfailures="0" testduration="0.011" conditionals="0" coveredstatements="22" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="parseRawData(String,String) : String" num="26" count="3" type="method"/>
            <line num="27" count="3" type="stmt"/>
            <line num="28" count="3" type="stmt"/>
            <line num="29" count="3" type="stmt"/>
            <line num="30" count="3" type="stmt"/>
            <line num="31" count="3" type="stmt"/>
            <line num="32" count="3" type="stmt"/>
            <line num="34" count="3" type="stmt"/>
            <line num="35" count="3" type="stmt"/>
            <line num="36" count="3" type="stmt"/>
            <line num="37" count="3" type="stmt"/>
            <line num="39" count="3" type="stmt"/>
            <line num="40" count="3" type="stmt"/>
            <line num="41" count="3" type="stmt"/>
            <line num="43" count="3" type="stmt"/>
            <line num="44" count="3" type="stmt"/>
            <line num="46" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBuildExactRow() : void" num="49" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBuildShortRow() : void" num="54" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBuildLongRow() : void" num="59" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="64" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.sf.flatpack.writer">
         <metrics coveredelements="234" complexity="36" loc="569" methods="26" classes="8" statements="232" coveredconditionals="6" coveredmethods="22" elements="266" ncloc="435" files="8" conditionals="8" coveredstatements="206"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/test/java/net/sf/flatpack/writer/AllTests.java" name="AllTests.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="21" coveredmethods="0" methods="1" elements="5" classes="1" ncloc="11" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="AllTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="5" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="suite() : Test" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line num="15" count="0" type="stmt"/>
            <line num="16" count="0" type="stmt"/>
            <line num="18" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/test/java/net/sf/flatpack/writer/DelimiterWriterTest.java" name="DelimiterWriterTest.java">
            <metrics coveredelements="119" coveredconditionals="0" complexity="15" loc="233" coveredmethods="11" methods="11" elements="120" classes="1" ncloc="180" statements="109" conditionals="0" coveredstatements="108"/>
            <class name="DelimiterWriterTest">
               <metrics coveredelements="119" complexity="15" methods="11" testruns="11" statements="109" coveredconditionals="0" coveredmethods="11" elements="120" testfailures="0" testduration="0.11" conditionals="0" coveredstatements="108" testpasses="11"/>
            </class>
            <line complexity="3" visibility="public" signature="testCloseable() : void" num="20" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="21" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWriteCsvNoMappingFile() : void" num="47" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWritingALong() : void" num="76" testsuccess="true" count="1" testduration="0.013" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWriteCsvWithMappingFile() : void" num="95" testsuccess="true" count="1" testduration="0.091" type="method"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWriteCsvWithMissingColumns() : void" num="115" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testCreateWriterWithoutColumnMapping() : void" num="134" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testCreateWriterWithNullOutputStream() : void" num="144" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAllowWriteWithNoMapping() : void" num="152" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="153" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWriteValueWithQualifier() : void" num="176" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWriteMultiLine() : void" num="198" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="199" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line num="213" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWriteMultiLineAtTheEnd() : void" num="216" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="217" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line num="222" count="1" type="stmt"/>
            <line num="223" count="1" type="stmt"/>
            <line num="224" count="1" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line num="228" count="1" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line num="230" count="1" type="stmt"/>
            <line num="231" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/test/java/net/sf/flatpack/writer/DoubleQualifierWriteReadTest.java" name="DoubleQualifierWriteReadTest.java">
            <metrics coveredelements="31" coveredconditionals="2" complexity="2" loc="65" coveredmethods="1" methods="1" elements="31" classes="1" ncloc="54" statements="28" conditionals="2" coveredstatements="28"/>
            <class name="DoubleQualifierWriteReadTest">
               <metrics coveredelements="31" complexity="2" methods="1" testruns="1" statements="28" coveredconditionals="2" coveredmethods="1" elements="31" testfailures="0" testduration="0.013" conditionals="2" coveredstatements="28" testpasses="1"/>
            </class>
            <line complexity="2" visibility="public" signature="testDelimiter() : void" num="25" testsuccess="true" count="1" testduration="0.013" type="method"/>
            <line num="26" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line falsecount="1" truecount="2" num="34" type="cond"/>
            <line num="35" count="2" type="stmt"/>
            <line num="36" count="2" type="stmt"/>
            <line num="37" count="6" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="3" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="2" type="stmt"/>
            <line num="49" count="6" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/test/java/net/sf/flatpack/writer/FixedLengthWriterTest.java" name="FixedLengthWriterTest.java">
            <metrics coveredelements="46" coveredconditionals="0" complexity="10" loc="140" coveredmethods="6" methods="8" elements="68" classes="1" ncloc="111" statements="60" conditionals="0" coveredstatements="40"/>
            <class name="FixedLengthWriterTest">
               <metrics coveredelements="46" complexity="10" methods="8" testruns="5" statements="60" coveredconditionals="0" coveredmethods="6" elements="68" testfailures="0" testduration="0.026" conditionals="0" coveredstatements="40" testpasses="5"/>
            </class>
            <line complexity="1" visibility="public" signature="testWriteFixedLength() : void" num="18" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="19" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWriterWithDifferentFillChar() : void" num="37" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testCreateParserWithMalformedMappingFile() : void" num="55" testsuccess="true" count="1" testduration="0.012" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testWriteStringWiderThanColumnDefinition() : void" num="66" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWriteNullColumn() : void" num="77" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="DONOTtestWriteDifferentRecords() : void" num="97" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getMapping() : Reader" num="121" count="4" type="method"/>
            <line num="122" count="4" type="stmt"/>
            <line num="123" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="getMappingDiffRecordTypes() : Reader" num="126" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/test/java/net/sf/flatpack/writer/MultiLineTest.java" name="MultiLineTest.java">
            <metrics coveredelements="25" coveredconditionals="1" complexity="3" loc="60" coveredmethods="2" methods="2" elements="26" classes="1" ncloc="49" statements="22" conditionals="2" coveredstatements="22"/>
            <class name="MultiLineTest">
               <metrics coveredelements="25" complexity="3" methods="2" testruns="1" statements="22" coveredconditionals="1" coveredmethods="2" elements="26" testfailures="0" testduration="0.002" conditionals="2" coveredstatements="22" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="26" count="1" type="method"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="2" type="stmt"/>
            <line num="32" count="2" type="stmt"/>
            <line num="33" count="2" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMultipleLine() : void" num="38" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="53" type="cond"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/test/java/net/sf/flatpack/writer/PZWriterTestCase.java" name="PZWriterTestCase.java">
            <metrics coveredelements="13" coveredconditionals="3" complexity="4" loc="30" coveredmethods="2" methods="2" elements="15" classes="1" ncloc="20" statements="9" conditionals="4" coveredstatements="8"/>
            <class name="PZWriterTestCase">
               <metrics coveredelements="13" coveredconditionals="3" complexity="4" coveredmethods="2" methods="2" elements="15" statements="9" conditionals="4" coveredstatements="8"/>
            </class>
            <line complexity="3" visibility="protected" signature="joinLines(String,String) : String" num="12" count="10" type="method"/>
            <line num="13" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="13" type="cond"/>
            <line num="14" count="0" type="stmt"/>
            <line num="17" count="10" type="stmt"/>
            <line num="18" count="10" type="stmt"/>
            <line num="19" count="10" type="stmt"/>
            <line falsecount="3" truecount="7" num="19" type="cond"/>
            <line num="20" count="7" type="stmt"/>
            <line num="21" count="7" type="stmt"/>
            <line num="24" count="10" type="stmt"/>
            <line complexity="1" visibility="protected" signature="normalizeLineEnding(String) : String" num="27" count="3" type="method"/>
            <line num="28" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/test/java/net/sf/flatpack/writer/Rfc4180TestCase.java" name="Rfc4180TestCase.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="6" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Rfc4180TestCase">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/test/java/net/sf/flatpack/writer/RoundTripTestCase.java" name="RoundTripTestCase.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="14" coveredmethods="0" methods="1" elements="1" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="RoundTripTestCase">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testDummy() : void" num="10" count="0" type="method"/>
         </file>
      </package>
      <package name="net.sf.flatpack.columninfile">
         <metrics coveredelements="23" complexity="14" loc="156" methods="7" classes="2" statements="40" coveredconditionals="0" coveredmethods="5" elements="53" ncloc="84" files="2" conditionals="6" coveredstatements="18"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/test/java/net/sf/flatpack/columninfile/DelimitedColumnNamesInFile.java" name="DelimitedColumnNamesInFile.java">
            <metrics coveredelements="3" coveredconditionals="0" complexity="6" loc="75" coveredmethods="1" methods="2" elements="28" classes="1" ncloc="40" statements="20" conditionals="6" coveredstatements="2"/>
            <class name="DelimitedColumnNamesInFile">
               <metrics coveredelements="3" coveredconditionals="0" complexity="6" coveredmethods="1" methods="2" elements="28" statements="20" conditionals="6" coveredstatements="2"/>
            </class>
            <line complexity="5" visibility="public" signature="main(String[]) : void" num="24" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDsForTest() : DataSet" num="63" count="3" type="method"/>
            <line num="65" count="3" type="stmt"/>
            <line num="68" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/test/java/net/sf/flatpack/columninfile/DelimitedColumnNamesInFileTest.java" name="DelimitedColumnNamesInFileTest.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="8" loc="81" coveredmethods="4" methods="5" elements="25" classes="1" ncloc="44" statements="20" conditionals="0" coveredstatements="16"/>
            <class name="DelimitedColumnNamesInFileTest">
               <metrics coveredelements="20" complexity="8" methods="5" testruns="3" statements="20" coveredconditionals="0" coveredmethods="4" elements="25" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="16" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="DelimitedColumnNamesInFileTest(String)" num="19" count="3" type="method"/>
            <line num="20" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="testErrorCount() : void" num="24" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="25" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testRowCount() : void" num="43" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testColumnNameCount() : void" num="61" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="78" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.sf.flatpack.utilities">
         <metrics coveredelements="19" complexity="5" loc="37" methods="1" classes="1" statements="10" coveredconditionals="8" coveredmethods="1" elements="19" ncloc="19" files="1" conditionals="8" coveredstatements="10"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/test/java/net/sf/flatpack/utilities/UnitTestUtils.java" name="UnitTestUtils.java">
            <metrics coveredelements="19" coveredconditionals="8" complexity="5" loc="37" coveredmethods="1" methods="1" elements="19" classes="1" ncloc="19" statements="10" conditionals="8" coveredstatements="10"/>
            <class name="UnitTestUtils">
               <metrics coveredelements="19" coveredconditionals="8" complexity="5" coveredmethods="1" methods="1" elements="19" statements="10" conditionals="8" coveredstatements="10"/>
            </class>
            <line complexity="5" visibility="public" signature="buildDelimString(String[],char,char) : String" num="21" count="14" type="method"/>
            <line num="22" count="14" type="stmt"/>
            <line num="23" count="14" type="stmt"/>
            <line falsecount="14" truecount="70" num="23" type="cond"/>
            <line num="24" count="70" type="stmt"/>
            <line falsecount="14" truecount="56" num="24" type="cond"/>
            <line num="25" count="56" type="stmt"/>
            <line num="27" count="70" type="stmt"/>
            <line falsecount="30" truecount="40" num="27" type="cond"/>
            <line num="28" count="40" type="stmt"/>
            <line num="30" count="70" type="stmt"/>
            <line num="31" count="70" type="stmt"/>
            <line falsecount="30" truecount="40" num="31" type="cond"/>
            <line num="32" count="40" type="stmt"/>
            <line num="35" count="14" type="stmt"/>
         </file>
      </package>
      <package name="net.sf.flatpack.parserutils">
         <metrics coveredelements="258" complexity="62" loc="609" methods="56" classes="4" statements="196" coveredconditionals="12" coveredmethods="53" elements="264" ncloc="379" files="4" conditionals="12" coveredstatements="193"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/test/java/net/sf/flatpack/parserutils/FixedWidthParserUtilsTest.java" name="FixedWidthParserUtilsTest.java">
            <metrics coveredelements="25" coveredconditionals="4" complexity="5" loc="68" coveredmethods="2" methods="3" elements="27" classes="1" ncloc="41" statements="20" conditionals="4" coveredstatements="19"/>
            <class name="FixedWidthParserUtilsTest">
               <metrics coveredelements="25" complexity="5" methods="3" testruns="1" statements="20" coveredconditionals="4" coveredmethods="2" elements="27" testfailures="0" testduration="0.0" conditionals="4" coveredstatements="19" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testFixedParse() : void" num="22" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="23" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line complexity="3" visibility="private" signature="check(String[],int[],String[],boolean,boolean) : void" num="35" count="5" type="method"/>
            <line num="37" count="5" type="stmt"/>
            <line num="39" count="5" type="stmt"/>
            <line num="41" count="5" type="stmt"/>
            <line num="42" count="15" type="stmt"/>
            <line num="43" count="15" type="stmt"/>
            <line num="44" count="15" type="stmt"/>
            <line num="47" count="5" type="stmt"/>
            <line num="48" count="5" type="stmt"/>
            <line falsecount="5" truecount="15" num="48" type="cond"/>
            <line num="50" count="15" type="stmt"/>
            <line num="53" count="5" type="stmt"/>
            <line num="57" count="5" type="stmt"/>
            <line num="59" count="5" type="stmt"/>
            <line falsecount="5" truecount="15" num="59" type="cond"/>
            <line num="60" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/test/java/net/sf/flatpack/parserutils/ParserUtilsLTrimTest.java" name="ParserUtilsLTrimTest.java">
            <metrics coveredelements="24" coveredconditionals="0" complexity="7" loc="93" coveredmethods="6" methods="7" elements="26" classes="1" ncloc="38" statements="19" conditionals="0" coveredstatements="18"/>
            <class name="ParserUtilsLTrimTest">
               <metrics coveredelements="24" complexity="7" methods="7" testruns="6" statements="19" coveredconditionals="0" coveredmethods="6" elements="26" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="18" testpasses="6"/>
            </class>
            <line complexity="1" visibility="public" signature="testTrimLeadingSpaces() : void" num="30" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTrimLeadingSpacesWithTrailingSpaces() : void" num="40" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTrimLeadingTabs() : void" num="51" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testKeepLeadingTabs() : void" num="62" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWithTabsInMiddleAndEnd() : void" num="72" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTrimTrailingSpaces() : void" num="82" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="90" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/test/java/net/sf/flatpack/parserutils/ParserUtilsSplitLineTest.java" name="ParserUtilsSplitLineTest.java">
            <metrics coveredelements="104" coveredconditionals="8" complexity="12" loc="242" coveredmethods="7" methods="8" elements="106" classes="1" ncloc="144" statements="90" conditionals="8" coveredstatements="89"/>
            <class name="ParserUtilsSplitLineTest">
               <metrics coveredelements="104" complexity="12" methods="8" testruns="6" statements="90" coveredconditionals="8" coveredmethods="7" elements="106" testfailures="0" testduration="0.005" conditionals="8" coveredstatements="89" testpasses="6"/>
            </class>
            <line complexity="3" visibility="public" signature="testNoLineBreaks() : void" num="40" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="7" type="stmt"/>
            <line num="44" count="7" type="stmt"/>
            <line num="46" count="7" type="stmt"/>
            <line num="48" count="7" type="stmt"/>
            <line num="52" count="7" type="stmt"/>
            <line falsecount="3" truecount="4" num="52" type="cond"/>
            <line num="56" count="7" type="stmt"/>
            <line falsecount="7" truecount="35" num="56" type="cond"/>
            <line num="57" count="35" type="stmt"/>
            <line complexity="2" visibility="public" signature="testLineBreaks() : void" num="67" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="7" type="stmt"/>
            <line num="71" count="7" type="stmt"/>
            <line num="73" count="7" type="stmt"/>
            <line num="75" count="7" type="stmt"/>
            <line num="79" count="7" type="stmt"/>
            <line num="83" count="7" type="stmt"/>
            <line falsecount="7" truecount="35" num="83" type="cond"/>
            <line num="84" count="35" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMalformedData() : void" num="99" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="100" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSomeExtremeCases() : void" num="108" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSomeExtremeCases2() : void" num="170" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="191" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="check(String,char,char,String[]) : void" num="198" count="46" type="method"/>
            <line num="199" count="46" type="stmt"/>
            <line num="201" count="46" type="stmt"/>
            <line num="204" count="46" type="stmt"/>
            <line falsecount="46" truecount="130" num="204" type="cond"/>
            <line num="205" count="130" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMultilineExtreme() : void" num="209" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="211" count="1" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line num="213" count="1" type="stmt"/>
            <line num="214" count="1" type="stmt"/>
            <line num="215" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line num="222" count="1" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line num="228" count="1" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line num="232" count="1" type="stmt"/>
            <line num="233" count="1" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="239" count="0" type="method"/>
            <line num="240" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/test/java/net/sf/flatpack/parserutils/ParserUtilsTest.java" name="ParserUtilsTest.java">
            <metrics coveredelements="105" coveredconditionals="0" complexity="38" loc="206" coveredmethods="38" methods="38" elements="105" classes="1" ncloc="156" statements="67" conditionals="0" coveredstatements="67"/>
            <class name="ParserUtilsTest">
               <metrics coveredelements="105" complexity="38" methods="38" testruns="34" statements="67" coveredconditionals="0" coveredmethods="38" elements="105" testfailures="0" testduration="0.008" conditionals="0" coveredstatements="67" testpasses="34"/>
            </class>
            <line complexity="1" visibility="public" signature="testStripNonDouble() : void" num="22" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="23" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="checkDoubleStrip(String,String) : void" num="33" count="8" type="method"/>
            <line num="34" count="8" type="stmt"/>
            <line num="35" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStripNonLong() : void" num="38" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="checkLongStrip(String,String) : void" num="49" count="8" type="method"/>
            <line num="50" count="8" type="stmt"/>
            <line num="51" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPZConverter() : void" num="54" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyRow() : void" num="62" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testQualifiedNonMultiLine() : void" num="68" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testQualifiedMultiLine() : void" num="73" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNonQualifiedNonMultiLine() : void" num="78" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNonQualifiedMultiLine() : void" num="83" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="testCsvSplit(String,String,String) : void" num="89" count="14" type="method"/>
            <line num="90" count="14" type="stmt"/>
            <line num="91" count="14" type="stmt"/>
            <line num="92" count="14" type="stmt"/>
            <line complexity="1" visibility="private" signature="testFancyCsvSplit(String,String,String) : void" num="95" count="12" type="method"/>
            <line num="96" count="12" type="stmt"/>
            <line num="97" count="12" type="stmt"/>
            <line num="98" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCsvSplit() : void" num="101" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="102" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCsvSplitWithDelimiter() : void" num="105" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="106" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCsvSplitWithDelimiterOnAll() : void" num="109" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="110" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCsvSplitWithDelimiterInsideOnFirstSingleCol() : void" num="113" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="114" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCsvSplitWithMultiDelimiterInsideOnFirstSingleCol() : void" num="117" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="118" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCsvSplitWithDelimiterInsideOnLastColTwoCol() : void" num="121" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="122" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCsvSplitWithMultiDelimiterInsideOnLastColTwoCol() : void" num="125" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="126" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCsvSplitWithDelimiterInsideOnLastCol3Col() : void" num="129" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="130" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCsvSplitWithDelimiterInsideOnFirst() : void" num="133" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="134" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCsvSplitWithDelimiterInside() : void" num="137" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="138" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCsvSplitWithMultiDelimiterInside() : void" num="141" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="142" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDodgyCharacter() : void" num="145" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="146" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStartDodgyCharacter() : void" num="149" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="150" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDodgyCharacterInQualifier() : void" num="153" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="154" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFancyQualifierCsvSplit() : void" num="157" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="158" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFancyQualifierSplitWithDelimiter() : void" num="161" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="162" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFancyQualifierSplitWithDelimiterOnAll() : void" num="165" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="166" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFancyQualifierCsvSplitWithDelimiterInsideOnFirstSingleCol() : void" num="169" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="170" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFancyQualifierCsvSplitWithMultiDelimiterInsideOnFirstSingleCol() : void" num="173" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="174" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFancyQualifierCsvSplitWithDelimiterInsideOnLastColTwoCol() : void" num="177" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="178" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFancyQualifierCsvSplitWithMultiDelimiterInsideOnLastColTwoCol() : void" num="181" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="182" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFancyQualifierCsvSplitWithDelimiterInsideOnLastCol3Col() : void" num="185" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="186" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFancyQualifierCsvSplitWithDelimiterInsideOnFirst() : void" num="189" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="190" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFancyQualifierCsvSplitWithDelimiterInside() : void" num="193" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="194" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFancyQualifierCsvSplitWithMultiDelimiterInside() : void" num="197" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="198" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFancyQualifierCsvSplitWithMultiDelimiterInsideLast() : void" num="202" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="203" count="1" type="stmt"/>
         </file>
      </package>
      <package name="net.sf.flatpack.rfc4180">
         <metrics coveredelements="70" complexity="13" loc="140" methods="5" classes="1" statements="65" coveredconditionals="0" coveredmethods="5" elements="70" ncloc="92" files="1" conditionals="0" coveredstatements="65"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/test/java/net/sf/flatpack/rfc4180/CsvWriterFormatDefintionTest.java" name="CsvWriterFormatDefintionTest.java">
            <metrics coveredelements="70" coveredconditionals="0" complexity="13" loc="140" coveredmethods="5" methods="5" elements="70" classes="1" ncloc="92" statements="65" conditionals="0" coveredstatements="65"/>
            <class name="CsvWriterFormatDefintionTest">
               <metrics coveredelements="70" complexity="13" methods="5" testruns="4" statements="65" coveredconditionals="0" coveredmethods="5" elements="70" testfailures="0" testduration="0.006" conditionals="0" coveredstatements="65" testpasses="4"/>
            </class>
            <line complexity="3" visibility="public" signature="testLineSeparation() : void" num="27" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="28" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testSameNumberOffFields() : void" num="52" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testSpacesArePartOfField() : void" num="81" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testLastFieldShouldNotHaveDelimiter() : void" num="106" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="107" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="getWriterForRfc4180(java.io.Writer,boolean) : Writer" num="130" count="4" type="method"/>
            <line num="131" count="4" type="stmt"/>
            <line num="132" count="4" type="stmt"/>
            <line num="133" count="4" type="stmt"/>
            <line num="135" count="4" type="stmt"/>
            <line num="138" count="4" type="stmt"/>
         </file>
      </package>
      <package name="net.sf.flatpack.pzparser">
         <metrics coveredelements="193" complexity="21" loc="328" methods="13" classes="1" statements="184" coveredconditionals="4" coveredmethods="12" elements="201" ncloc="247" files="1" conditionals="4" coveredstatements="177"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/test/java/net/sf/flatpack/pzparser/PZParserOptsTest.java" name="PZParserOptsTest.java">
            <metrics coveredelements="193" coveredconditionals="4" complexity="21" loc="328" coveredmethods="12" methods="13" elements="201" classes="1" ncloc="247" statements="184" conditionals="4" coveredstatements="177"/>
            <class name="PZParserOptsTest">
               <metrics coveredelements="193" complexity="21" methods="13" testruns="12" statements="184" coveredconditionals="4" coveredmethods="12" elements="201" testfailures="0" testduration="0.05600000000000001" conditionals="4" coveredstatements="177" testpasses="12"/>
            </class>
            <line complexity="1" visibility="public" signature="testHandleShortLines() : void" num="26" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIgnoreExtraColumns() : void" num="43" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyToNull() : void" num="60" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIgnoreWarnings() : void" num="78" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line complexity="5" visibility="public" signature="testCaseSensitiveMetaData() : void" num="97" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEmptyRowCheck() : void" num="150" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStoreRawDataToDataError() : void" num="173" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="174" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testStoreRawData() : void" num="192" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="193" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyLastColumn() : void" num="212" testsuccess="true" count="1" testduration="0.01" type="method"/>
            <line num="215" count="1" type="stmt"/>
            <line num="216" count="1" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="222" count="1" type="stmt"/>
            <line num="223" count="1" type="stmt"/>
            <line num="224" count="1" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBRParseParameters() : void" num="229" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="230" count="1" type="stmt"/>
            <line num="231" count="1" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line num="240" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testFixedWidthMultipleRecordElementsInMapping() : void" num="243" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="244" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line num="251" count="1" type="stmt"/>
            <line num="253" count="1" type="stmt"/>
            <line num="254" count="1" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line num="256" count="1" type="stmt"/>
            <line falsecount="1" truecount="2" num="256" type="cond"/>
            <line num="257" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="257" type="cond"/>
            <line num="258" count="1" type="stmt"/>
            <line num="259" count="1" type="stmt"/>
            <line num="261" count="1" type="stmt"/>
            <line num="264" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSorting() : void" num="269" testsuccess="true" count="1" testduration="0.025" type="method"/>
            <line num="270" count="1" type="stmt"/>
            <line num="271" count="1" type="stmt"/>
            <line num="272" count="1" type="stmt"/>
            <line num="273" count="1" type="stmt"/>
            <line num="275" count="1" type="stmt"/>
            <line num="276" count="1" type="stmt"/>
            <line num="277" count="1" type="stmt"/>
            <line num="278" count="1" type="stmt"/>
            <line num="279" count="1" type="stmt"/>
            <line num="281" count="1" type="stmt"/>
            <line num="282" count="1" type="stmt"/>
            <line num="283" count="1" type="stmt"/>
            <line num="284" count="1" type="stmt"/>
            <line num="285" count="1" type="stmt"/>
            <line num="288" count="1" type="stmt"/>
            <line num="289" count="1" type="stmt"/>
            <line num="290" count="1" type="stmt"/>
            <line num="291" count="1" type="stmt"/>
            <line num="292" count="1" type="stmt"/>
            <line num="293" count="1" type="stmt"/>
            <line num="294" count="1" type="stmt"/>
            <line num="297" count="1" type="stmt"/>
            <line num="298" count="1" type="stmt"/>
            <line num="299" count="1" type="stmt"/>
            <line num="300" count="1" type="stmt"/>
            <line num="301" count="1" type="stmt"/>
            <line num="305" count="1" type="stmt"/>
            <line num="306" count="1" type="stmt"/>
            <line num="307" count="1" type="stmt"/>
            <line num="308" count="1" type="stmt"/>
            <line num="309" count="1" type="stmt"/>
            <line num="310" count="1" type="stmt"/>
            <line num="311" count="1" type="stmt"/>
            <line num="312" count="1" type="stmt"/>
            <line num="313" count="1" type="stmt"/>
            <line num="314" count="1" type="stmt"/>
            <line num="317" count="1" type="stmt"/>
            <line num="318" count="1" type="stmt"/>
            <line num="319" count="1" type="stmt"/>
            <line num="320" count="1" type="stmt"/>
            <line num="321" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="325" count="0" type="method"/>
            <line num="326" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.sf.flatpack.delim.csv">
         <metrics coveredelements="14" complexity="2" loc="64" methods="1" classes="1" statements="15" coveredconditionals="0" coveredmethods="1" elements="16" ncloc="44" files="1" conditionals="0" coveredstatements="13"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/test/java/net/sf/flatpack/delim/csv/CsvParserTest.java" name="CsvParserTest.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="2" loc="64" coveredmethods="1" methods="1" elements="16" classes="1" ncloc="44" statements="15" conditionals="0" coveredstatements="13"/>
            <class name="CsvParserTest">
               <metrics coveredelements="14" complexity="2" methods="1" testruns="1" statements="15" coveredconditionals="0" coveredmethods="1" elements="16" testfailures="0" testduration="0.007" conditionals="0" coveredstatements="13" testpasses="1"/>
            </class>
            <line complexity="2" visibility="public" signature="testCsvWithWrongPzMap() : void" num="36" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.sf.flatpack.delim.tab">
         <metrics coveredelements="24" complexity="14" loc="154" methods="7" classes="2" statements="38" coveredconditionals="0" coveredmethods="5" elements="51" ncloc="80" files="2" conditionals="6" coveredstatements="19"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/test/java/net/sf/flatpack/delim/tab/TabDelimited.java" name="TabDelimited.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="6" loc="73" coveredmethods="1" methods="2" elements="26" classes="1" ncloc="36" statements="18" conditionals="6" coveredstatements="3"/>
            <class name="TabDelimited">
               <metrics coveredelements="4" coveredconditionals="0" complexity="6" coveredmethods="1" methods="2" elements="26" statements="18" conditionals="6" coveredstatements="3"/>
            </class>
            <line complexity="5" visibility="public" signature="main(String[]) : void" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDsForTest() : DataSet" num="63" count="3" type="method"/>
            <line num="64" count="3" type="stmt"/>
            <line num="67" count="3" type="stmt"/>
            <line num="69" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/flatpack/src/test/java/net/sf/flatpack/delim/tab/TabDelimitedTest.java" name="TabDelimitedTest.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="8" loc="81" coveredmethods="4" methods="5" elements="25" classes="1" ncloc="44" statements="20" conditionals="0" coveredstatements="16"/>
            <class name="TabDelimitedTest">
               <metrics coveredelements="20" complexity="8" methods="5" testruns="3" statements="20" coveredconditionals="0" coveredmethods="4" elements="25" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="16" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="TabDelimitedTest(String)" num="19" count="3" type="method"/>
            <line num="20" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="testErrorCount() : void" num="24" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="25" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testRowCount() : void" num="43" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testColumnNameCount() : void" num="61" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="78" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
         </file>
      </package>
   </testproject>
</coverage>