<?xml version="1.0" encoding="UTF-8"?>
<coverage generated="1594318104362" clover="4.4.1">
   <project name="Python 2.14-SNAPSHOT (Aggregated)" timestamp="1594318093551">
      <metrics coveredelements="2441" complexity="5206" loc="45954" methods="2646" classes="555" statements="10433" packages="28" coveredconditionals="429" coveredmethods="442" elements="17007" ncloc="30111" files="467" conditionals="3928" coveredstatements="1570"/>
      <package name="org.sonar.python">
         <metrics coveredelements="60" complexity="50" loc="469" methods="37" classes="8" statements="84" coveredconditionals="6" coveredmethods="16" elements="135" ncloc="283" files="6" conditionals="14" coveredstatements="38"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/PythonBuiltinFunctions.java" name="PythonBuiltinFunctions.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="5" loc="54" coveredmethods="2" methods="2" elements="7" classes="1" ncloc="27" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="PythonBuiltinFunctions">
               <metrics coveredelements="7" coveredconditionals="0" complexity="5" coveredmethods="2" methods="2" elements="7" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="contains(String) : boolean" num="37" count="4" type="method"/>
            <line num="38" count="4" type="stmt"/>
            <line complexity="4" visibility="package" signature="loadBuiltinNames(InputStream) : Set&lt;String&gt;" num="41" count="2" type="method"/>
            <line num="42" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/DocstringExtractor.java" name="DocstringExtractor.java">
            <metrics coveredelements="9" coveredconditionals="3" complexity="6" loc="50" coveredmethods="1" methods="2" elements="11" classes="1" ncloc="21" statements="5" conditionals="4" coveredstatements="5"/>
            <class name="DocstringExtractor">
               <metrics coveredelements="9" coveredconditionals="3" complexity="6" coveredmethods="1" methods="2" elements="11" statements="5" conditionals="4" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="private" signature="DocstringExtractor()" num="37" count="0" type="method"/>
            <line complexity="5" visibility="public" signature="extractDocstring(StatementList) : StringLiteral" num="40" count="72" type="method"/>
            <line num="41" count="72" type="stmt"/>
            <line falsecount="0" truecount="57" num="41" type="cond"/>
            <line num="42" count="57" type="stmt"/>
            <line num="43" count="57" type="stmt"/>
            <line falsecount="10" truecount="47" num="43" type="cond"/>
            <line num="45" count="47" type="stmt"/>
            <line num="48" count="25" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/PythonConfiguration.java" name="PythonConfiguration.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="36" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="11" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="PythonConfiguration">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="PythonConfiguration(Charset)" num="28" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCharset() : Charset" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/SubscriptionVisitor.java" name="SubscriptionVisitor.java">
            <metrics coveredelements="8" coveredconditionals="1" complexity="20" loc="156" coveredmethods="2" methods="16" elements="58" classes="2" ncloc="117" statements="34" conditionals="8" coveredstatements="5"/>
            <class name="SubscriptionVisitor">
               <metrics coveredelements="8" coveredconditionals="1" complexity="7" coveredmethods="2" methods="3" elements="29" statements="18" conditionals="8" coveredstatements="5"/>
            </class>
            <class name="SubscriptionVisitor.SubscriptionContextImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="13" elements="29" statements="16" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="analyze(Collection&lt;PythonSubscriptionCheck&gt;,PythonVisitorContext) : void" num="53" count="1" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="SubscriptionVisitor(Collection&lt;PythonSubscriptionCheck&gt;,PythonVisitorContext)" num="62" count="1" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="scan(Tree) : void" num="72" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="SubscriptionContextImpl(PythonCheck,Consumer&lt;SubscriptionContext&gt;)" num="90" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="execute() : void" num="95" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="syntaxNode() : Tree" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addIssue(Tree,String) : PythonCheck.PreciseIssue" num="104" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addIssue(LocationInFile,String) : PythonCheck.PreciseIssue" num="109" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addIssue(Token,String) : PythonCheck.PreciseIssue" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addIssue(Token,Token,String) : PythonCheck.PreciseIssue" num="119" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addFileIssue(String) : PythonCheck.PreciseIssue" num="124" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addLineIssue(String,int) : PythonCheck.PreciseIssue" num="129" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="addIssue(IssueLocation) : PythonCheck.PreciseIssue" num="134" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="pythonFile() : PythonFile" num="140" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="stubFilesSymbols() : Collection&lt;Symbol&gt;" num="145" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="workingDirectory() : File" num="150" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/TestPythonVisitorRunner.java" name="TestPythonVisitorRunner.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="11" loc="110" coveredmethods="6" methods="10" elements="35" classes="2" ncloc="74" statements="25" conditionals="0" coveredstatements="10"/>
            <class name="TestPythonVisitorRunner">
               <metrics coveredelements="10" coveredconditionals="0" complexity="6" coveredmethods="4" methods="6" elements="25" statements="19" conditionals="0" coveredstatements="6"/>
            </class>
            <class name="TestPythonVisitorRunner.TestPythonFile">
               <metrics coveredelements="6" coveredconditionals="0" complexity="5" coveredmethods="2" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="private" signature="TestPythonVisitorRunner()" num="42" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="scanFile(File,PythonCheck) : PythonVisitorContext" num="45" count="9" type="method"/>
            <line num="46" count="9" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createContext(File) : PythonVisitorContext" num="53" count="51" type="method"/>
            <line num="54" count="51" type="stmt"/>
            <line complexity="1" visibility="public" signature="createContext(File,File) : PythonVisitorContext" num="57" count="53" type="method"/>
            <line num="58" count="53" type="stmt"/>
            <line complexity="1" visibility="public" signature="createContext(File,File,String,ProjectLevelSymbolTable) : PythonVisitorContext" num="61" count="53" type="method"/>
            <line num="62" count="53" type="stmt"/>
            <line num="63" count="53" type="stmt"/>
            <line num="64" count="53" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="globalSymbols(List&lt;File&gt;,File) : ProjectLevelSymbolTable" num="69" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="TestPythonFile(File)" num="85" count="269" type="method"/>
            <line num="86" count="269" type="stmt"/>
            <line complexity="2" visibility="public" signature="content() : String" num="89" count="269" type="method"/>
            <line num="91" count="269" type="stmt"/>
            <line num="92" count="269" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="fileName() : String" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="uri() : URI" num="103" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/TokenLocation.java" name="TokenLocation.java">
            <metrics coveredelements="20" coveredconditionals="2" complexity="6" loc="63" coveredmethods="5" methods="5" elements="20" classes="1" ncloc="33" statements="13" conditionals="2" coveredstatements="13"/>
            <class name="TokenLocation">
               <metrics coveredelements="20" coveredconditionals="2" complexity="6" coveredmethods="5" methods="5" elements="20" statements="13" conditionals="2" coveredstatements="13"/>
            </class>
            <line complexity="2" visibility="public" signature="TokenLocation(Token)" num="31" count="8" type="method"/>
            <line num="32" count="8" type="stmt"/>
            <line num="33" count="8" type="stmt"/>
            <line num="35" count="8" type="stmt"/>
            <line num="36" count="8" type="stmt"/>
            <line num="38" count="8" type="stmt"/>
            <line falsecount="4" truecount="4" num="38" type="cond"/>
            <line num="39" count="4" type="stmt"/>
            <line num="40" count="4" type="stmt"/>
            <line num="43" count="4" type="stmt"/>
            <line num="44" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="startLine() : int" num="48" count="7" type="method"/>
            <line num="49" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="startLineOffset() : int" num="52" count="7" type="method"/>
            <line num="53" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="endLine() : int" num="56" count="8" type="method"/>
            <line num="57" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="endLineOffset() : int" num="60" count="8" type="method"/>
            <line num="61" count="8" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.python.checks">
         <metrics coveredelements="120" complexity="2129" loc="15820" methods="768" classes="180" statements="4119" coveredconditionals="40" coveredmethods="11" elements="6905" ncloc="11096" files="143" conditionals="2018" coveredstatements="69"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/AbstractCallExpressionCheck.java" name="AbstractCallExpressionCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="69" coveredmethods="0" methods="5" elements="24" classes="1" ncloc="41" statements="13" conditionals="6" coveredstatements="0"/>
            <class name="AbstractCallExpressionCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="5" elements="24" statements="13" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="isException(CallExpression) : boolean" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="visitNode(SubscriptionContext) : void" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="4" visibility="protected" signature="isWithinImport(Tree) : boolean" num="55" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="58" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="immutableSet(T) : Set&lt;T&gt;" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/AbstractDuplicateKeyCheck.java" name="AbstractDuplicateKeyCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="27" loc="111" coveredmethods="0" methods="7" elements="68" classes="1" ncloc="80" statements="35" conditionals="26" coveredstatements="0"/>
            <class name="AbstractDuplicateKeyCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="27" coveredmethods="0" methods="7" elements="68" statements="35" conditionals="26" coveredstatements="0"/>
            </class>
            <line complexity="7" visibility="package" signature="isSameKey(Expression,Expression) : boolean" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="42" type="cond"/>
            <line num="43" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="areEquivalentTuples(Tuple,Tuple) : boolean" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="areEquivalentNumbers(Tree,Tree) : boolean" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="toBigDecimal(Tree) : BigDecimal" num="73" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line complexity="4" visibility="private" signature="areEquivalentStringLiterals(StringLiteral,StringLiteral) : boolean" num="80" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="parseAsBigDecimal(String) : BigDecimal" num="94" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isANumber(Tree) : boolean" num="108" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/AbstractFunctionNameCheck.java" name="AbstractFunctionNameCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="63" coveredmethods="0" methods="2" elements="16" classes="1" ncloc="35" statements="10" conditionals="4" coveredstatements="0"/>
            <class name="AbstractFunctionNameCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="2" elements="16" statements="10" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="format() : String" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="initialize(Context) : void" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="47" type="cond"/>
            <line num="48" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/AbstractNameCheck.java" name="AbstractNameCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="38" coveredmethods="0" methods="1" elements="6" classes="1" ncloc="13" statements="3" conditionals="2" coveredstatements="0"/>
            <class name="AbstractNameCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="1" elements="6" statements="3" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="protected" signature="pattern() : Pattern" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="30" type="cond"/>
            <line num="31" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/AbstractStringFormatCheck.java" name="AbstractStringFormatCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="29" loc="195" coveredmethods="0" methods="12" elements="103" classes="1" ncloc="136" statements="59" conditionals="32" coveredstatements="0"/>
            <class name="AbstractStringFormatCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="29" coveredmethods="0" methods="12" elements="103" statements="59" conditionals="32" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="AbstractStringFormatCheck()" num="52" count="0" type="method"/>
            <line complexity="3" visibility="protected" signature="checkPrintfStyle(SubscriptionContext) : void" num="56" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="5" visibility="protected" signature="checkPrintfDictionary(SubscriptionContext,StringFormat,DictionaryLiteral) : void" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="98" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="3" visibility="protected" signature="checkPrintfExpressionList(SubscriptionContext,StringFormat,Token,Token,List&lt;Expression&gt;) : void" num="110" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="116" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="4" visibility="protected" signature="checkStrFormatStyle(SubscriptionContext) : void" num="121" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="129" type="cond"/>
            <line num="130" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="135" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="isQualifiedCallToStrFormat(CallExpression) : boolean" num="143" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="syntaxIssueReporter(SubscriptionContext,Tree,Tree) : Consumer&lt;String&gt;" num="150" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="2" visibility="protected" signature="reportIssue(SubscriptionContext,Tree,Tree,String) : void" num="154" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="2" visibility="protected" signature="reportInvalidArgumentSize(SubscriptionContext,Token,Token,long,long) : void" num="161" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="162" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="5" visibility="protected" signature="extractStringLiteral(Tree) : StringLiteral" num="169" count="0" type="method"/>
            <line num="170" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="170" type="cond"/>
            <line num="171" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="174" type="cond"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="176" type="cond"/>
            <line num="177" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="isMapping(Expression) : boolean" num="184" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isFStringOrBytesLiteral(StringElement) : boolean" num="190" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/AbstractUnreadPrivateMembersCheck.java" name="AbstractUnreadPrivateMembersCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="74" coveredmethods="0" methods="4" elements="24" classes="1" ncloc="45" statements="14" conditionals="6" coveredstatements="0"/>
            <class name="AbstractUnreadPrivateMembersCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="4" elements="24" statements="14" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="equalsToKind(Symbol) : boolean" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="47" type="cond"/>
            <line num="48" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="reportIssue(SubscriptionContext,Symbol) : void" num="53" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isNeverRead(Symbol) : boolean" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/AfterJumpStatementCheck.java" name="AfterJumpStatementCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="94" coveredmethods="0" methods="4" elements="32" classes="2" ncloc="66" statements="20" conditionals="8" coveredstatements="0"/>
            <class name="AfterJumpStatementCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="2" elements="26" statements="18" conditionals="6" coveredstatements="0"/>
            </class>
            <class name="AfterJumpStatementCheck.TryStatementVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="6" statements="2" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="7" visibility="private" signature="checkCfg(ControlFlowGraph,SubscriptionContext,StatementList) : void" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="58" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFunctionDef(FunctionDef) : void" num="82" count="0" type="method"/>
            <line complexity="2" visibility="public" signature="visitTryStatement(TryStatement) : void" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/AllBranchesAreIdenticalCheck.java" name="AllBranchesAreIdenticalCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="16" loc="114" coveredmethods="0" methods="7" elements="66" classes="1" ncloc="85" statements="41" conditionals="18" coveredstatements="0"/>
            <class name="AllBranchesAreIdenticalCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="16" coveredmethods="0" methods="7" elements="66" statements="41" conditionals="18" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="handleIfStatement(IfStatement,SubscriptionContext) : void" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="issueLocation(StatementList) : IssueLocation" num="68" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="handleConditionalExpression(ConditionalExpression,SubscriptionContext) : void" num="73" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="addSecondaryLocations(PreciseIssue,Expression) : void" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="areIdentical(Expression,Expression) : boolean" num="96" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="unwrapIdenticalExpressions(Expression) : Expression" num="102" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/ArgumentNumberCheck.java" name="ArgumentNumberCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="28" loc="184" coveredmethods="0" methods="9" elements="104" classes="1" ncloc="148" statements="67" conditionals="28" coveredstatements="0"/>
            <class name="ArgumentNumberCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="28" coveredmethods="0" methods="9" elements="104" statements="67" conditionals="28" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="initialize(Context) : void" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="7" visibility="private" signature="checkPositionalParameters(SubscriptionContext,CallExpression,FunctionSymbol) : void" num="67" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="positionalParamsWithoutDefault(FunctionSymbol) : Map&lt;String, FunctionSymbol.Parameter&gt;" num="104" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="addPositionalIssue(SubscriptionContext,Tree,FunctionSymbol,String,String) : void" num="121" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isReceiverClassSymbol(QualifiedExpression) : boolean" num="127" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isException(CallExpression,FunctionSymbol) : boolean" num="133" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="extendsZopeInterface(Symbol) : boolean" num="143" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="144" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="addSecondary(FunctionSymbol,PreciseIssue) : void" num="150" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="152" type="cond"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="checkKeywordArguments(SubscriptionContext,CallExpression,FunctionSymbol,Expression) : void" num="157" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="166" type="cond"/>
            <line num="167" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="167" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="175" type="cond"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/ArgumentTypeCheck.java" name="ArgumentTypeCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="31" loc="178" coveredmethods="0" methods="10" elements="113" classes="1" ncloc="139" statements="67" conditionals="36" coveredstatements="0"/>
            <class name="ArgumentTypeCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="31" coveredmethods="0" methods="10" elements="113" statements="67" conditionals="36" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="initialize(Context) : void" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="7" visibility="private" signature="checkFunctionCall(SubscriptionContext,CallExpression,FunctionSymbol,boolean) : void" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="shouldReportPositionalArgument(RegularArgument,FunctionSymbol,int) : boolean" num="94" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="98" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="shouldReportKeywordArgument(RegularArgument,FunctionSymbol) : boolean" num="105" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="reportIssue(SubscriptionContext,FunctionSymbol,RegularArgument) : void" num="123" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isIncompatibleTypes(InferredType,InferredType) : boolean" num="131" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isNotDuckTypeCompatible(InferredType,InferredType) : boolean" num="136" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="couldBeDuckTypeCompatible(InferredType,InferredType) : boolean" num="143" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="10" visibility="public" signature="matchBuiltinCategory(Predicate&lt;String&gt;) : String" num="150" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="151" type="cond"/>
            <line num="152" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="154" type="cond"/>
            <line num="158" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="160" type="cond"/>
            <line num="161" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="164" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="166" type="cond"/>
            <line num="167" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="169" type="cond"/>
            <line num="170" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isException(InferredType) : boolean" num="175" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/BackslashInStringCheck.java" name="BackslashInStringCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="17" loc="83" coveredmethods="0" methods="4" elements="44" classes="1" ncloc="57" statements="30" conditionals="10" coveredstatements="0"/>
            <class name="BackslashInStringCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="17" coveredmethods="0" methods="4" elements="44" statements="30" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="6" visibility="public" signature="initialize(Context) : void" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="42" type="cond"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="8" visibility="private" signature="isBackslashedSpaceAfterInlineMarkup(boolean,String,int,char) : boolean" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="58" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isInPrefix(boolean,char) : boolean" num="73" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="isRawStringLiteral(boolean,char) : boolean" num="77" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/BackticksUsageCheck.java" name="BackticksUsageCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="34" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="12" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="BackticksUsageCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="30" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/BareRaiseInFinallyCheck.java" name="BareRaiseInFinallyCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="58" coveredmethods="0" methods="3" elements="21" classes="1" ncloc="34" statements="12" conditionals="6" coveredstatements="0"/>
            <class name="BareRaiseInFinallyCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="3" elements="21" statements="12" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="6" visibility="public" signature="initialize(Context) : void" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="36" type="cond"/>
            <line num="37" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="39" type="cond"/>
            <line num="40" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isWithinExceptClause(RaiseStatement) : boolean" num="49" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isWithinExitFunction(RaiseStatement) : boolean" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/BooleanExpressionInExceptCheck.java" name="BooleanExpressionInExceptCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="42" coveredmethods="0" methods="1" elements="8" classes="1" ncloc="19" statements="5" conditionals="2" coveredstatements="0"/>
            <class name="BooleanExpressionInExceptCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="1" elements="8" statements="5" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="initialize(Context) : void" num="31" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="36" type="cond"/>
            <line num="37" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/BreakContinueOutsideLoopCheck.java" name="BreakContinueOutsideLoopCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="56" coveredmethods="0" methods="1" elements="13" classes="1" ncloc="31" statements="12" conditionals="0" coveredstatements="0"/>
            <class name="BreakContinueOutsideLoopCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="13" statements="12" conditionals="0" coveredstatements="0"/>
            </class>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/BuiltinShadowingAssignmentCheck.java" name="BuiltinShadowingAssignmentCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="19" loc="128" coveredmethods="0" methods="7" elements="53" classes="1" ncloc="96" statements="30" conditionals="16" coveredstatements="0"/>
            <class name="BuiltinShadowingAssignmentCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="19" coveredmethods="0" methods="7" elements="53" statements="30" conditionals="16" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="checkAssignmentExpression(SubscriptionContext) : void" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="checkAssignment(SubscriptionContext) : void" num="83" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="checkAnnotatedAssignment(SubscriptionContext) : void" num="97" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="100" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="raiseIssueForNonGlobalVariable(SubscriptionContext,Name) : void" num="109" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="shouldReportIssue(Tree) : boolean" num="121" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isBuiltInName(Name) : boolean" num="125" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/CaughtExceptionsCheck.java" name="CaughtExceptionsCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="88" coveredmethods="0" methods="3" elements="29" classes="1" ncloc="57" statements="16" conditionals="10" coveredstatements="0"/>
            <class name="CaughtExceptionsCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="3" elements="29" statements="16" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="5" visibility="public" signature="initialize(Context) : void" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="58" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="canBeOrExtendBaseException(InferredType) : boolean" num="67" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="inheritsFromBaseException(Symbol) : boolean" num="80" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/ChangeMethodContractCheck.java" name="ChangeMethodContractCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="36" loc="168" coveredmethods="0" methods="7" elements="104" classes="1" ncloc="129" statements="63" conditionals="34" coveredstatements="0"/>
            <class name="ChangeMethodContractCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="36" coveredmethods="0" methods="7" elements="104" statements="63" conditionals="34" coveredstatements="0"/>
            </class>
            <line complexity="7" visibility="public" signature="initialize(Context) : void" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="7" visibility="private" signature="checkMethodContract(SubscriptionContext,FunctionSymbol) : void" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="reportOnMissingParameters(SubscriptionContext,FunctionSymbol,FunctionSymbol) : void" num="89" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="reportIssue(SubscriptionContext,String,LocationInFile,FunctionSymbol) : void" num="101" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="reportOnExtraParameters(SubscriptionContext,FunctionSymbol,FunctionSymbol) : void" num="113" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="checkDefaultValuesAndParamNames(SubscriptionContext,FunctionSymbol,FunctionSymbol) : void" num="125" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="131" type="cond"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="134" type="cond"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="145" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="11" visibility="private" signature="checkDefaultValueAndKeywordOnly(SubscriptionContext,FunctionSymbol,FunctionSymbol.Parameter,FunctionSymbol.Parameter) : void" num="152" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="161" type="cond"/>
            <line num="162" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
            <line num="165" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/CheckList.java" name="CheckList.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="2" loc="220" coveredmethods="1" methods="2" elements="3" classes="1" ncloc="195" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="CheckList">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="private" signature="CheckList()" num="55" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getChecks() : Iterable&lt;Class&gt;" num="58" count="15" type="method"/>
            <line num="59" count="15" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/CheckUtils.java" name="CheckUtils.java">
            <metrics coveredelements="15" coveredconditionals="5" complexity="23" loc="116" coveredmethods="3" methods="6" elements="71" classes="1" ncloc="80" statements="39" conditionals="26" coveredstatements="7"/>
            <class name="CheckUtils">
               <metrics coveredelements="15" coveredconditionals="5" complexity="23" coveredmethods="3" methods="6" elements="71" statements="39" conditionals="26" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="private" signature="CheckUtils()" num="35" count="1" type="method"/>
            <line complexity="10" visibility="public" signature="areEquivalent(Tree,Tree) : boolean" num="39" count="2" type="method"/>
            <line num="40" count="2" type="stmt"/>
            <line falsecount="1" truecount="0" num="40" type="cond"/>
            <line num="41" count="0" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="46" type="cond"/>
            <line num="47" count="0" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="49" type="cond"/>
            <line num="50" count="1" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="areLeavesEquivalent(Tree,Tree) : boolean" num="63" count="1" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="64" type="cond"/>
            <line num="65" count="1" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getParentClassDef(Tree) : ClassDef" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="classHasInheritance(ClassDef) : boolean" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="isCalledInClassBody(Symbol,ClassDef) : boolean" num="96" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/ChildAndParentExceptionCaughtCheck.java" name="ChildAndParentExceptionCaughtCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="12" loc="88" coveredmethods="0" methods="4" elements="43" classes="1" ncloc="64" statements="27" conditionals="12" coveredstatements="0"/>
            <class name="ChildAndParentExceptionCaughtCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="12" coveredmethods="0" methods="4" elements="43" statements="27" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="initialize(Context) : void" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="checkCaughtExceptions(SubscriptionContext,Map&lt;ClassSymbol, List&lt;Expression&gt;&gt;) : void" num="53" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="addExceptionExpression(Expression,Map&lt;ClassSymbol, List&lt;Expression&gt;&gt;) : void" num="73" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="addSecondaryLocations(PreciseIssue,List&lt;Expression&gt;) : void" num="83" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/ClassComplexityCheck.java" name="ClassComplexityCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="51" coveredmethods="0" methods="1" elements="9" classes="1" ncloc="28" statements="6" conditionals="2" coveredstatements="0"/>
            <class name="ClassComplexityCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="1" elements="9" statements="6" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="initialize(Context) : void" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/ClassMethodFirstArgumentNameCheck.java" name="ClassMethodFirstArgumentNameCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="93" coveredmethods="0" methods="3" elements="39" classes="1" ncloc="65" statements="22" conditionals="14" coveredstatements="0"/>
            <class name="ClassMethodFirstArgumentNameCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="3" elements="39" statements="22" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="private" signature="classParameterNames() : List&lt;String&gt;" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="initialize(Context) : void" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="checkFirstParameterName(FunctionDef,SubscriptionContext) : void" num="77" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/ClassNameCheck.java" name="ClassNameCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="58" coveredmethods="0" methods="2" elements="12" classes="1" ncloc="33" statements="8" conditionals="2" coveredstatements="0"/>
            <class name="ClassNameCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="12" statements="8" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="format() : String" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="initialize(Context) : void" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/CognitiveComplexityFunctionCheck.java" name="CognitiveComplexityFunctionCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="77" coveredmethods="0" methods="3" elements="28" classes="1" ncloc="51" statements="17" conditionals="8" coveredstatements="0"/>
            <class name="CognitiveComplexityFunctionCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="3" elements="28" statements="17" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="initialize(Context) : void" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="isInnerFunction(FunctionDef) : boolean" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setThreshold(int) : void" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/CollapsibleIfStatementsCheck.java" name="CollapsibleIfStatementsCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="12" loc="68" coveredmethods="0" methods="2" elements="23" classes="1" ncloc="44" statements="13" conditionals="8" coveredstatements="0"/>
            <class name="CollapsibleIfStatementsCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="12" coveredmethods="0" methods="2" elements="23" statements="13" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="scanFile(PythonVisitorContext) : void" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="11" visibility="public" signature="visitIfStatement(IfStatement) : void" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/CollectionLengthComparisonCheck.java" name="CollectionLengthComparisonCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="72" coveredmethods="0" methods="3" elements="19" classes="1" ncloc="43" statements="12" conditionals="4" coveredstatements="0"/>
            <class name="CollectionLengthComparisonCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="3" elements="19" statements="12" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="7" visibility="public" signature="initialize(Context) : void" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isZero(Expression) : boolean" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="isCallToLen(Expression) : boolean" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/CommentRegularExpressionCheck.java" name="CommentRegularExpressionCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="79" coveredmethods="0" methods="2" elements="23" classes="1" ncloc="51" statements="13" conditionals="8" coveredstatements="0"/>
            <class name="CommentRegularExpressionCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="2" elements="23" statements="13" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="5" visibility="private" signature="pattern() : Pattern" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="initialize(Context) : void" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/CommentedCodeCheck.java" name="CommentedCodeCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="28" loc="169" coveredmethods="0" methods="12" elements="99" classes="1" ncloc="131" statements="63" conditionals="24" coveredstatements="0"/>
            <class name="CommentedCodeCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="28" coveredmethods="0" methods="12" elements="99" statements="63" conditionals="24" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="initialize(Context) : void" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isMultilineComment(StringLiteral) : boolean" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="visitMultilineComment(StringLiteral,SubscriptionContext) : void" num="72" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="checkTriviaGroup(List&lt;Trivia&gt;,SubscriptionContext) : void" num="80" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="getTextForParsing(List&lt;Trivia&gt;) : String" num="90" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="100" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isOneWord(String) : boolean" num="111" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isEmpty(String) : boolean" num="115" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isEncoding(int,String) : boolean" num="121" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="isTextParsedAsCode(String) : boolean" num="125" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="isSimpleExpression(FileInput) : boolean" num="135" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="groupTrivias(Token) : List&lt;List&lt;Trivia&gt;&gt;" num="143" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="149" type="cond"/>
            <line num="150" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="handleOneLineComment(List&lt;List&lt;Trivia&gt;&gt;,List&lt;Trivia&gt;,Trivia) : List&lt;Trivia&gt;" num="155" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="157" type="cond"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="160" type="cond"/>
            <line num="161" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/ComparisonToNoneCheck.java" name="ComparisonToNoneCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="20" loc="77" coveredmethods="0" methods="6" elements="39" classes="1" ncloc="50" statements="21" conditionals="12" coveredstatements="0"/>
            <class name="ComparisonToNoneCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="20" coveredmethods="0" methods="6" elements="39" statements="21" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="9" visibility="private" signature="checkEqualityComparison(SubscriptionContext,BinaryExpression) : void" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="checkIdentityComparison(SubscriptionContext,IsExpression) : void" num="55" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="58" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="addIssue(SubscriptionContext,Tree,String,boolean) : void" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isNone(InferredType) : boolean" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="cannotBeNone(InferredType) : boolean" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/ConfusingWalrusCheck.java" name="ConfusingWalrusCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="108" coveredmethods="0" methods="5" elements="44" classes="2" ncloc="77" statements="29" conditionals="10" coveredstatements="0"/>
            <class name="ConfusingWalrusCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="4" elements="42" statements="28" conditionals="10" coveredstatements="0"/>
            </class>
            <class name="ConfusingWalrusCheck.WalrusVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="initialize(Context) : void" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="checkNestedWalrus(SubscriptionContext,Tree,String) : void" num="69" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="checkAssignmentExpression(SubscriptionContext) : void" num="78" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="hasKeywordArguments(ArgList) : boolean" num="91" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitAssignmentExpression(AssignmentExpression) : void" num="103" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/ConstantConditionCheck.java" name="ConstantConditionCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="45" loc="224" coveredmethods="0" methods="15" elements="136" classes="1" ncloc="177" statements="77" conditionals="44" coveredstatements="0"/>
            <class name="ConstantConditionCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="45" coveredmethods="0" methods="15" elements="136" statements="77" conditionals="44" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="visitFileInput(FileInput) : void" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitIfStatement(IfStatement) : void" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitConditionalExpression(ConditionalExpression) : void" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitComprehensionIf(ComprehensionIf) : void" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="checkConstantCondition(Expression) : void" num="93" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isConstant(Expression) : boolean" num="101" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isImmutableConstant(Expression) : boolean" num="105" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="getConstantBooleanExpression(Expression) : Expression" num="110" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="116" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="isConstantCollectionLiteral(Expression) : boolean" num="126" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="isAlwaysEmptyOrNonEmptyCollection(List&lt;? extends Tree&gt;) : boolean" num="141" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="142" type="cond"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="visitBinaryExpression(BinaryExpression) : void" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="162" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="165" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="9" visibility="private" signature="checkExpression(Expression) : void" num="178" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="179" type="cond"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="183" type="cond"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="185" type="cond"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="192" type="cond"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="194" type="cond"/>
            <line num="195" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="raiseIssueOnClassOrFunction(Expression,Symbol) : void" num="201" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="204" type="cond"/>
            <line num="205" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="205" type="cond"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="isClassOrFunction(Symbol) : boolean" num="210" count="0" type="method"/>
            <line num="211" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="211" type="cond"/>
            <line num="212" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="214" type="cond"/>
            <line num="216" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="locationForClassOrFunction(Symbol) : LocationInFile" num="221" count="0" type="method"/>
            <line num="222" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="222" type="cond"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/DbNoPasswordCheck.java" name="DbNoPasswordCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="31" loc="168" coveredmethods="0" methods="7" elements="86" classes="1" ncloc="131" statements="49" conditionals="30" coveredstatements="0"/>
            <class name="DbNoPasswordCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="31" coveredmethods="0" methods="7" elements="86" statements="49" conditionals="30" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="checkDbUri(SubscriptionContext) : void" num="76" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="checkDbApi(SubscriptionContext) : void" num="88" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="8" visibility="private" signature="getPasswordArgument(String,List&lt;Argument&gt;) : RegularArgument" num="99" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="10" visibility="private" signature="checkDjangoSettings(SubscriptionContext) : void" num="124" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="140" type="cond"/>
            <line num="141" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="147" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="isString(Tree,String) : boolean" num="155" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isDatabasesAssignment(AssignmentStatement) : boolean" num="162" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/DeadStoreCheck.java" name="DeadStoreCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="17" loc="141" coveredmethods="0" methods="12" elements="48" classes="1" ncloc="101" statements="26" conditionals="10" coveredstatements="0"/>
            <class name="DeadStoreCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="17" coveredmethods="0" methods="12" elements="48" statements="26" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="initialize(Context) : void" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="verifyBlock(SubscriptionContext,CfgBlock,LiveVariablesAnalysis.LiveVariables,Set&lt;Symbol&gt;,FunctionDef) : void" num="67" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isMultipleAssignement(Tree) : boolean" num="79" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isException(Symbol,Tree,FunctionDef) : boolean" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isAnnotatedAssignmentWithoutRhs(Tree) : boolean" num="96" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isUnderscoreVariable(Symbol) : boolean" num="100" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isLoopDeclarationSymbol(Symbol,Tree) : boolean" num="104" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isWithInstance(Tree) : boolean" num="109" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="isAssignmentToFalsyOrTrueLiteral(Tree) : boolean" num="113" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="118" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="isMinusOne(Expression) : boolean" num="126" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="127" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isNumericLiteralOne(Expression) : boolean" num="134" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isFunctionDeclarationSymbol(Symbol) : boolean" num="138" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/DeadStoreUtils.java" name="DeadStoreUtils.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="83" coveredmethods="0" methods="5" elements="30" classes="2" ncloc="52" statements="17" conditionals="8" coveredstatements="0"/>
            <class name="DeadStoreUtils">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="4" elements="27" statements="15" conditionals="8" coveredstatements="0"/>
            </class>
            <class name="DeadStoreUtils.UnnecessaryAssignment">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="DeadStoreUtils()" num="38" count="0" type="method"/>
            <line complexity="7" visibility="package" signature="findUnnecessaryAssignments(CfgBlock,LiveVariables,FunctionDef) : List&lt;UnnecessaryAssignment&gt;" num="45" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="isParameter(Tree) : boolean" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="isUsedInSubFunction(Symbol,FunctionDef) : boolean" num="69" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="UnnecessaryAssignment(Symbol,Tree)" num="78" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/DictionaryDuplicateKeyCheck.java" name="DictionaryDuplicateKeyCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="73" coveredmethods="0" methods="2" elements="39" classes="1" ncloc="50" statements="23" conditionals="14" coveredstatements="0"/>
            <class name="DictionaryDuplicateKeyCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="2" elements="39" statements="23" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="6" visibility="public" signature="initialize(Context) : void" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="41" type="cond"/>
            <line num="42" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="44" type="cond"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="findIdenticalKeys(int,List&lt;DictionaryLiteralElement&gt;,Set&lt;Integer&gt;) : List&lt;Tree&gt;" num="58" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/DuplicateArgumentCheck.java" name="DuplicateArgumentCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="40" loc="215" coveredmethods="0" methods="11" elements="130" classes="1" ncloc="173" statements="77" conditionals="42" coveredstatements="0"/>
            <class name="DuplicateArgumentCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="40" coveredmethods="0" methods="11" elements="130" statements="77" conditionals="42" coveredstatements="0"/>
            </class>
            <line complexity="5" visibility="public" signature="initialize(Context) : void" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="checkFunctionCall(CallExpression,FunctionSymbol,int,SubscriptionContext) : void" num="83" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="checkRegularArgument(RegularArgument,List&lt;FunctionSymbol.Parameter&gt;,int,Map&lt;String, List&lt;Tree&gt;&gt;) : boolean" num="113" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="116" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="121" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="checkDictionary(UnpackingExpression,Map&lt;String, List&lt;Tree&gt;&gt;) : void" num="136" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="reportIssues(Map&lt;String, List&lt;Tree&gt;&gt;,FunctionSymbol,SubscriptionContext) : void" num="141" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="143" type="cond"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="10" visibility="private" signature="extractKeysFromDictionary(UnpackingExpression) : Set&lt;String&gt;" num="154" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="157" type="cond"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="159" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="162" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="166" type="cond"/>
            <line num="167" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="169" type="cond"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="keysFromDictionaryCreation(CallExpression) : Set&lt;String&gt;" num="174" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="176" type="cond"/>
            <line num="177" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="keysInDictionaryLiteral(DictionaryLiteral) : Set&lt;String&gt;" num="185" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isException(FunctionSymbol) : boolean" num="194" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="extendsZopeInterface(Symbol) : boolean" num="198" count="0" type="method"/>
            <line num="199" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="199" type="cond"/>
            <line num="200" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="locationFromTree(Tree,SubscriptionContext) : LocationInFile" num="207" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="210" type="cond"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/DuplicatedMethodFieldNamesCheck.java" name="DuplicatedMethodFieldNamesCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="135" coveredmethods="0" methods="11" elements="51" classes="3" ncloc="98" statements="32" conditionals="8" coveredstatements="0"/>
            <class name="DuplicatedMethodFieldNamesCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="5" elements="39" statements="26" conditionals="8" coveredstatements="0"/>
            </class>
            <class name="DuplicatedMethodFieldNamesCheck.MethodVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="DuplicatedMethodFieldNamesCheck.TokenWithTypeInfo">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="initialize(Context) : void" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFunctionDef(FunctionDef) : void" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitClassDef(ClassDef) : void" num="72" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="TokenWithTypeInfo(Tree,String)" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getValue() : String" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getLine() : int" num="91" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getType() : String" num="95" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="lookForDuplications(SubscriptionContext,List&lt;Tree&gt;,List&lt;Tree&gt;) : void" num="100" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="differOnlyByCapitalization(String,String) : boolean" num="116" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="mergeLists(List&lt;Tree&gt;,List&lt;Tree&gt;) : List&lt;TokenWithTypeInfo&gt;" num="120" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getMessage(TokenWithTypeInfo,TokenWithTypeInfo) : String" num="131" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/DuplicatedMethodImplementationCheck.java" name="DuplicatedMethodImplementationCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="104" coveredmethods="0" methods="6" elements="51" classes="2" ncloc="70" statements="29" conditionals="16" coveredstatements="0"/>
            <class name="DuplicatedMethodImplementationCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="12" coveredmethods="0" methods="4" elements="44" statements="26" conditionals="14" coveredstatements="0"/>
            </class>
            <class name="DuplicatedMethodImplementationCheck.MethodVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="7" statements="3" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="initialize(Context) : void" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="46" type="cond"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="checkMethods(FunctionDef,List&lt;FunctionDef&gt;,int,SubscriptionContext) : void" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="isException(FunctionDef) : boolean" num="69" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="isOnASingleLine(StatementList,boolean) : boolean" num="81" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitClassDef(ClassDef) : void" num="90" count="0" type="method"/>
            <line complexity="2" visibility="public" signature="visitFunctionDef(FunctionDef) : void" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/ElseAfterLoopsWithoutBreakCheck.java" name="ElseAfterLoopsWithoutBreakCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="12" loc="78" coveredmethods="0" methods="5" elements="33" classes="1" ncloc="44" statements="16" conditionals="12" coveredstatements="0"/>
            <class name="ElseAfterLoopsWithoutBreakCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="12" coveredmethods="0" methods="5" elements="33" statements="16" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="check(SubscriptionContext) : void" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="47" type="cond"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getElseClause(Tree) : ElseClause" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line complexity="2" visibility="private" signature="getLoopBody(Tree) : Tree" num="56" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line complexity="4" visibility="private" signature="containsFreeBreak(Tree) : boolean" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/EmptyFunctionCheck.java" name="EmptyFunctionCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="72" coveredmethods="0" methods="2" elements="34" classes="1" ncloc="47" statements="20" conditionals="12" coveredstatements="0"/>
            <class name="EmptyFunctionCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="2" elements="34" statements="20" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="7" visibility="public" signature="initialize(Context) : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="41" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="47" type="cond"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="hasCommentAbove(FunctionDef) : boolean" num="60" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/EmptyNestedBlockCheck.java" name="EmptyNestedBlockCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="67" coveredmethods="0" methods="2" elements="25" classes="1" ncloc="43" statements="15" conditionals="8" coveredstatements="0"/>
            <class name="EmptyNestedBlockCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="2" elements="25" statements="15" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="7" visibility="public" signature="initialize(Context) : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="41" type="cond"/>
            <line num="42" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="containsComment(List&lt;Token&gt;) : boolean" num="64" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/ExceptRethrowingCheck.java" name="ExceptRethrowingCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="63" coveredmethods="0" methods="1" elements="27" classes="1" ncloc="39" statements="16" conditionals="10" coveredstatements="0"/>
            <class name="ExceptRethrowingCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="1" elements="27" statements="16" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="7" visibility="public" signature="initialize(Context) : void" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="47" type="cond"/>
            <line num="48" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/ExceptionCauseTypeCheck.java" name="ExceptionCauseTypeCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="72" coveredmethods="0" methods="3" elements="23" classes="1" ncloc="45" statements="14" conditionals="6" coveredstatements="0"/>
            <class name="ExceptionCauseTypeCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="3" elements="23" statements="14" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="initialize(Context) : void" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isAccessToCause(Expression) : boolean" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="check(Expression,SubscriptionContext) : void" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/ExceptionNotThrownCheck.java" name="ExceptionNotThrownCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="84" coveredmethods="0" methods="5" elements="21" classes="1" ncloc="53" statements="12" conditionals="4" coveredstatements="0"/>
            <class name="ExceptionNotThrownCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="5" elements="21" statements="12" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="check(Function&lt;Tree, Symbol&gt;) : Consumer&lt;SubscriptionContext&gt;" num="51" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isThrowable(ClassSymbol) : boolean" num="68" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="symbolFromInvocation(Tree) : Symbol" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="symbolFromName(Tree) : Symbol" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/ExceptionSuperClassDeclarationCheck.java" name="ExceptionSuperClassDeclarationCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="70" coveredmethods="0" methods="2" elements="18" classes="1" ncloc="45" statements="10" conditionals="6" coveredstatements="0"/>
            <class name="ExceptionSuperClassDeclarationCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="2" elements="18" statements="10" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="initialize(Context) : void" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="checkSuperClass(RegularArgument,SubscriptionContext) : void" num="60" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/ExecStatementUsageCheck.java" name="ExecStatementUsageCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="38" coveredmethods="0" methods="1" elements="4" classes="1" ncloc="16" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="ExecStatementUsageCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="4" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="31" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/ExitHasBadArgumentsCheck.java" name="ExitHasBadArgumentsCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="74" coveredmethods="0" methods="3" elements="32" classes="1" ncloc="47" statements="19" conditionals="10" coveredstatements="0"/>
            <class name="ExitHasBadArgumentsCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="3" elements="32" statements="19" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="initialize(Context) : void" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isStarredParam(Parameter) : boolean" num="58" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="raiseIssue(SubscriptionContext,FunctionDef,int) : void" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/Expressions.java" name="Expressions.java">
            <metrics coveredelements="98" coveredconditionals="34" complexity="55" loc="266" coveredmethods="6" methods="12" elements="179" classes="2" ncloc="202" statements="113" conditionals="54" coveredstatements="58"/>
            <class name="Expressions">
               <metrics coveredelements="28" coveredconditionals="6" complexity="29" coveredmethods="2" methods="7" elements="98" statements="65" conditionals="26" coveredstatements="20"/>
            </class>
            <class name="Expressions.EscapeSequence">
               <metrics coveredelements="70" coveredconditionals="28" complexity="26" coveredmethods="4" methods="5" elements="81" statements="48" conditionals="28" coveredstatements="38"/>
            </class>
            <line complexity="1" visibility="private" signature="Expressions()" num="50" count="0" type="method"/>
            <line complexity="9" visibility="public" signature="isFalsy(Expression) : boolean" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="singleAssignedValue(Name) : Expression" num="78" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="98" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="removeParentheses(Expression) : Expression" num="105" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="unescape(StringLiteral) : String" num="120" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="unescape(StringElement) : String" num="134" count="46" type="method"/>
            <line num="135" count="46" type="stmt"/>
            <line num="136" count="46" type="stmt"/>
            <line num="137" count="46" type="stmt"/>
            <line num="138" count="46" type="stmt"/>
            <line num="139" count="46" type="stmt"/>
            <line falsecount="0" truecount="44" num="139" type="cond"/>
            <line num="140" count="44" type="stmt"/>
            <line num="142" count="46" type="stmt"/>
            <line complexity="4" visibility="package" signature="unescapeString(String,boolean) : String" num="155" count="45" type="method"/>
            <line num="157" count="45" type="stmt"/>
            <line falsecount="37" truecount="0" num="157" type="cond"/>
            <line num="158" count="0" type="stmt"/>
            <line num="160" count="37" type="stmt"/>
            <line num="161" count="37" type="stmt"/>
            <line num="162" count="37" type="stmt"/>
            <line num="163" count="37" type="stmt"/>
            <line falsecount="37" truecount="148" num="163" type="cond"/>
            <line num="164" count="148" type="stmt"/>
            <line num="165" count="148" type="stmt"/>
            <line falsecount="56" truecount="92" num="165" type="cond"/>
            <line num="166" count="92" type="stmt"/>
            <line num="167" count="92" type="stmt"/>
            <line num="169" count="56" type="stmt"/>
            <line num="170" count="56" type="stmt"/>
            <line num="171" count="56" type="stmt"/>
            <line num="174" count="37" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 184()" num="184" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="EscapeSequence(int,String)" num="200" count="46" type="method"/>
            <line num="201" count="46" type="stmt"/>
            <line num="202" count="46" type="stmt"/>
            <line complexity="14" visibility="private" signature="extract(String,int,boolean) : EscapeSequence" num="205" count="56" type="method"/>
            <line num="206" count="56" type="stmt"/>
            <line falsecount="55" truecount="1" num="206" type="cond"/>
            <line num="207" count="1" type="stmt"/>
            <line num="209" count="55" type="stmt"/>
            <line num="210" count="55" type="stmt"/>
            <line falsecount="16" truecount="39" num="210" type="cond"/>
            <line num="211" count="55" type="stmt"/>
            <line falsecount="40" truecount="15" num="211" type="cond"/>
            <line num="212" count="15" type="stmt"/>
            <line num="213" count="40" type="stmt"/>
            <line falsecount="38" truecount="2" num="213" type="cond"/>
            <line num="215" count="2" type="stmt"/>
            <line num="216" count="38" type="stmt"/>
            <line falsecount="35" truecount="3" num="216" type="cond"/>
            <line num="218" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="218" type="cond"/>
            <line num="219" count="35" type="stmt"/>
            <line falsecount="20" truecount="15" num="219" type="cond"/>
            <line num="220" count="15" type="stmt"/>
            <line num="221" count="20" type="stmt"/>
            <line falsecount="18" truecount="2" num="221" type="cond"/>
            <line num="222" count="2" type="stmt"/>
            <line num="223" count="18" type="stmt"/>
            <line falsecount="16" truecount="2" num="223" type="cond"/>
            <line num="224" count="2" type="stmt"/>
            <line num="225" count="16" type="stmt"/>
            <line falsecount="15" truecount="1" num="225" type="cond"/>
            <line num="227" count="1" type="stmt"/>
            <line num="229" count="15" type="stmt"/>
            <line complexity="3" visibility="private" signature="extractHexadecimal(String,int,int) : EscapeSequence" num="233" count="19" type="method"/>
            <line num="234" count="19" type="stmt"/>
            <line falsecount="3" truecount="16" num="234" type="cond"/>
            <line num="235" count="16" type="stmt"/>
            <line num="236" count="16" type="stmt"/>
            <line num="237" count="15" type="stmt"/>
            <line num="239" count="1" type="stmt"/>
            <line num="242" count="3" type="stmt"/>
            <line complexity="7" visibility="private" signature="extractOctal(String,int) : EscapeSequence" num="246" count="15" type="method"/>
            <line num="248" count="15" type="stmt"/>
            <line num="249" count="15" type="stmt"/>
            <line falsecount="11" truecount="4" num="249" type="cond"/>
            <line num="250" count="15" type="stmt"/>
            <line num="251" count="15" type="stmt"/>
            <line num="252" count="15" type="stmt"/>
            <line falsecount="15" truecount="16" num="252" type="cond"/>
            <line num="253" count="16" type="stmt"/>
            <line num="254" count="16" type="stmt"/>
            <line num="255" count="16" type="stmt"/>
            <line num="257" count="15" type="stmt"/>
            <line falsecount="5" truecount="10" num="257" type="cond"/>
            <line num="258" count="10" type="stmt"/>
            <line num="260" count="5" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/FieldDuplicatesClassNameCheck.java" name="FieldDuplicatesClassNameCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="55" coveredmethods="0" methods="1" elements="11" classes="1" ncloc="32" statements="8" conditionals="2" coveredstatements="0"/>
            <class name="FieldDuplicatesClassNameCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="1" elements="11" statements="8" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="initialize(Context) : void" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="40" type="cond"/>
            <line num="41" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/FieldNameCheck.java" name="FieldNameCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="80" coveredmethods="0" methods="2" elements="21" classes="1" ncloc="51" statements="15" conditionals="4" coveredstatements="0"/>
            <class name="FieldNameCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="2" elements="21" statements="15" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="initialize(Context) : void" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="fieldsToCheck(ClassDef) : List&lt;Symbol&gt;" num="73" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/FileComplexityCheck.java" name="FileComplexityCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="52" coveredmethods="0" methods="1" elements="8" classes="1" ncloc="29" statements="5" conditionals="2" coveredstatements="0"/>
            <class name="FileComplexityCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="1" elements="8" statements="5" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="initialize(Context) : void" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/FixmeCommentCheck.java" name="FixmeCommentCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="49" coveredmethods="0" methods="1" elements="10" classes="1" ncloc="25" statements="7" conditionals="2" coveredstatements="0"/>
            <class name="FixmeCommentCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="1" elements="10" statements="7" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="initialize(Context) : void" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="42" type="cond"/>
            <line num="43" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/FunctionComplexityCheck.java" name="FunctionComplexityCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="52" coveredmethods="0" methods="1" elements="9" classes="1" ncloc="29" statements="6" conditionals="2" coveredstatements="0"/>
            <class name="FunctionComplexityCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="1" elements="9" statements="6" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="initialize(Context) : void" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/FunctionNameCheck.java" name="FunctionNameCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="39" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="15" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="FunctionNameCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="typeName() : String" num="29" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldCheckFunctionDeclaration(FunctionDef) : boolean" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/FunctionUsingLoopVariableCheck.java" name="FunctionUsingLoopVariableCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="49" loc="246" coveredmethods="0" methods="16" elements="153" classes="2" ncloc="205" statements="89" conditionals="48" coveredstatements="0"/>
            <class name="FunctionUsingLoopVariableCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="33" coveredmethods="0" methods="9" elements="100" statements="59" conditionals="32" coveredstatements="0"/>
            </class>
            <class name="FunctionUsingLoopVariableCheck.CallOrReturnVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="16" coveredmethods="0" methods="7" elements="53" statements="30" conditionals="16" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="9" visibility="private" signature="checkFunctionLike(SubscriptionContext) : void" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="reportIssue(SubscriptionContext,FunctionLike,List&lt;Tree&gt;,List&lt;Tree&gt;,String) : void" num="91" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="isUsedInFunctionLike(Tree,FunctionLike) : boolean" num="110" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isUsedAsDefaultValue(Tree,ParameterList) : boolean" num="126" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isWithinEnclosingLoop(Tree,Tree) : boolean" num="131" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="8" visibility="private" signature="getEnclosingScopeSymbols(Tree) : Set&lt;Symbol&gt;" num="135" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="143" type="cond"/>
            <line num="144" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="149" type="cond"/>
            <line num="150" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="enclosingLoop(FunctionLike) : Tree" num="155" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="isReturnedOrCalledWithinLoop(FunctionLike,Tree) : boolean" num="161" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="164" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CallOrReturnVisitor(FunctionLike,Tree)" num="177" count="0" type="method"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="visitCallExpression(CallExpression) : void" num="182" count="0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="185" type="cond"/>
            <line num="186" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="186" type="cond"/>
            <line num="187" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="191" type="cond"/>
            <line num="192" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitReturnStatement(ReturnStatement) : void" num="199" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitYieldStatement(YieldStatement) : void" num="204" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="variableAssigned(LambdaExpression) : Name" num="209" count="0" type="method"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="211" type="cond"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="213" type="cond"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="216" type="cond"/>
            <line num="217" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="isFunctionLikeReturned(Tree) : boolean" num="224" count="0" type="method"/>
            <line num="225" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="225" type="cond"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="isLambdaReturned(LambdaExpression,Tree) : boolean" num="234" count="0" type="method"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="236" type="cond"/>
            <line num="237" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/GenericExceptionRaisedCheck.java" name="GenericExceptionRaisedCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="67" coveredmethods="0" methods="2" elements="21" classes="1" ncloc="41" statements="13" conditionals="6" coveredstatements="0"/>
            <class name="GenericExceptionRaisedCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="2" elements="21" statements="13" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="initialize(Context) : void" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="isGenericExceptionClass(Expression) : boolean" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/HardcodedIPCheck.java" name="HardcodedIPCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="128" coveredmethods="0" methods="7" elements="54" classes="1" ncloc="93" statements="35" conditionals="12" coveredstatements="0"/>
            <class name="HardcodedIPCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="7" elements="54" statements="35" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="7" visibility="public" signature="initialize(Context) : void" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line complexity="1" visibility="private" signature="isMultilineString(StringLiteral) : boolean" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isValidIPV4(String) : boolean" num="86" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="isValidIPV6(String,String) : boolean" num="91" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isIPV4Exception(String) : boolean" num="109" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isIPV6Exception(String) : boolean" num="116" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getCompressionSeparatorCount(String) : int" num="120" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/IdenticalExpressionOnBinaryOperatorCheck.java" name="IdenticalExpressionOnBinaryOperatorCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="58" coveredmethods="0" methods="3" elements="13" classes="1" ncloc="33" statements="8" conditionals="2" coveredstatements="0"/>
            <class name="IdenticalExpressionOnBinaryOperatorCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="3" elements="13" statements="8" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="checkBinaryExpression(SubscriptionContext) : void" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isLeftShiftBy1(Expression,Token) : boolean" num="55" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/IdentityComparisonWithCachedTypesCheck.java" name="IdentityComparisonWithCachedTypesCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="135" coveredmethods="0" methods="5" elements="47" classes="1" ncloc="74" statements="26" conditionals="16" coveredstatements="0"/>
            <class name="IdentityComparisonWithCachedTypesCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="5" elements="47" statements="26" conditionals="16" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="checkIsComparison(SubscriptionContext) : void" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="58" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="isUnsuitableOperand(Expression) : boolean" num="91" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isUnsuitableType(InferredType) : boolean" num="114" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="isVariableThatCanEscape(Symbol) : boolean" num="123" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/IdentityComparisonWithNewObjectCheck.java" name="IdentityComparisonWithNewObjectCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="26" loc="163" coveredmethods="0" methods="6" elements="68" classes="1" ncloc="99" statements="44" conditionals="18" coveredstatements="0"/>
            <class name="IdentityComparisonWithNewObjectCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="26" coveredmethods="0" methods="6" elements="68" statements="44" conditionals="18" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="checkIsComparison(SubscriptionContext) : void" num="58" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="checkOperand(Expression,IsExpression,SubscriptionContext) : boolean" num="78" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="7" visibility="private" signature="findIssueForOperand(Expression) : Optional&lt;List&lt;Tree&gt;&gt;" num="98" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="109" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="9" visibility="private" signature="instantiatesFreshObject(Expression) : boolean" num="130" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="141" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="cannotEscape(Symbol) : boolean" num="153" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/IgnoredParameterCheck.java" name="IgnoredParameterCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="72" coveredmethods="0" methods="2" elements="15" classes="1" ncloc="45" statements="11" conditionals="2" coveredstatements="0"/>
            <class name="IgnoredParameterCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="15" statements="11" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="initialize(Context) : void" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isSymbolUsedInUnreachableBlocks(LiveVariablesAnalysis,Set&lt;CfgBlock&gt;,Symbol) : boolean" num="69" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/IgnoredPureOperationsCheck.java" name="IgnoredPureOperationsCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="328" coveredmethods="0" methods="4" elements="46" classes="1" ncloc="295" statements="26" conditionals="16" coveredstatements="0"/>
            <class name="IgnoredPureOperationsCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="4" elements="46" statements="26" conditionals="16" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 275()" num="275" count="0" type="method"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="initialize(Context) : void" num="283" count="0" type="method"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="287" type="cond"/>
            <line num="288" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line complexity="9" visibility="private" signature="checkExpression(SubscriptionContext,Expression) : void" num="295" count="0" type="method"/>
            <line num="296" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="296" type="cond"/>
            <line num="297" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="299" type="cond"/>
            <line num="300" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="304" type="cond"/>
            <line num="305" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="307" type="cond"/>
            <line num="308" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="310" type="cond"/>
            <line num="311" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="313" type="cond"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="316" type="cond"/>
            <line num="317" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isInTryBlock(Tree) : boolean" num="322" count="0" type="method"/>
            <line num="325" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/IgnoredSystemExitCheck.java" name="IgnoredSystemExitCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="25" loc="193" coveredmethods="0" methods="8" elements="96" classes="2" ncloc="130" statements="58" conditionals="30" coveredstatements="0"/>
            <class name="IgnoredSystemExitCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="16" coveredmethods="0" methods="5" elements="62" statements="39" conditionals="18" coveredstatements="0"/>
            </class>
            <class name="IgnoredSystemExitCheck.ExceptionReRaiseCheckVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="3" elements="34" statements="19" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ExceptionReRaiseCheckVisitor(Symbol)" num="60" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="visitRaiseStatement(RaiseStatement) : void" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitCallExpression(CallExpression) : void" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="findExceptionInstanceSymbol(Expression) : Symbol" num="103" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="findExceptionName(Expression) : String" num="112" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="116" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="handlePossibleBareException(SubscriptionContext,ExceptClause,boolean) : void" num="128" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="131" type="cond"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="handleCaughtException(SubscriptionContext,Expression,Symbol,Tree,boolean) : boolean" num="140" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="143" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="151" type="cond"/>
            <line num="153" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="161" type="cond"/>
            <line num="162" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="initialize(Context) : void" num="168" count="0" type="method"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="176" type="cond"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/ImplicitStringConcatenationCheck.java" name="ImplicitStringConcatenationCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="93" coveredmethods="0" methods="5" elements="43" classes="1" ncloc="61" statements="24" conditionals="14" coveredstatements="0"/>
            <class name="ImplicitStringConcatenationCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="5" elements="43" statements="24" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="initialize(Context) : void" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="46" type="cond"/>
            <line num="48" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="7" visibility="private" signature="checkStringLiteral(StringLiteral,SubscriptionContext) : void" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="isException(StringElement,StringElement) : boolean" num="77" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isWithinCollection(StringLiteral) : boolean" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="haveSameQuotes(StringElement,StringElement) : boolean" num="88" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/IncompatibleOperandsCheck.java" name="IncompatibleOperandsCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="27" loc="175" coveredmethods="0" methods="11" elements="99" classes="2" ncloc="138" statements="68" conditionals="20" coveredstatements="0"/>
            <class name="IncompatibleOperandsCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="26" coveredmethods="0" methods="10" elements="96" statements="66" conditionals="20" coveredstatements="0"/>
            </class>
            <class name="IncompatibleOperandsCheck.SpecialMethodNames">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 52()" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 59()" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 81()" num="81" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SpecialMethodNames(String,String)" num="90" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitBinaryExpression(BinaryExpression) : void" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="visitUnaryExpression(UnaryExpression) : void" num="104" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="10" visibility="private" signature="checkOperands(Token,InferredType,InferredType) : void" num="115" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="116" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="132" type="cond"/>
            <line num="133" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="138" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="message(Token,InferredType,InferredType) : String" num="143" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="147" type="cond"/>
            <line num="148" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="hasUnresolvedMethod(boolean,Symbol) : boolean" num="153" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="hasIncompatibleTypeOrAbsentSpecialMethod(Symbol,InferredType) : boolean" num="157" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="161" type="cond"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="areHardcodedCompatible(InferredType,InferredType) : boolean" num="171" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/IncorrectExceptionTypeCheck.java" name="IncorrectExceptionTypeCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="80" coveredmethods="0" methods="2" elements="40" classes="1" ncloc="52" statements="22" conditionals="16" coveredstatements="0"/>
            <class name="IncorrectExceptionTypeCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="2" elements="40" statements="22" conditionals="16" coveredstatements="0"/>
            </class>
            <line complexity="6" visibility="public" signature="initialize(Context) : void" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="mayInheritFromBaseException(Symbol) : boolean" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/InequalityUsageCheck.java" name="InequalityUsageCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="42" coveredmethods="0" methods="1" elements="8" classes="1" ncloc="20" statements="5" conditionals="2" coveredstatements="0"/>
            <class name="InequalityUsageCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="1" elements="8" statements="5" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="initialize(Context) : void" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="37" type="cond"/>
            <line num="38" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/InfiniteRecursionCheck.java" name="InfiniteRecursionCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="53" loc="293" coveredmethods="0" methods="21" elements="160" classes="2" ncloc="235" statements="93" conditionals="46" coveredstatements="0"/>
            <class name="InfiniteRecursionCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="3" elements="47" statements="30" conditionals="14" coveredstatements="0"/>
            </class>
            <class name="InfiniteRecursionCheck.RecursiveCallCollector">
               <metrics coveredelements="0" coveredconditionals="0" complexity="42" coveredmethods="0" methods="18" elements="113" statements="63" conditionals="32" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="initialize(Context) : void" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="collectRecursiveCallsAndCheckIfEndBlockIsReachable(FunctionDef,PythonFile,List&lt;Tree&gt;) : boolean" num="81" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isInsideTryBlock(Tree) : boolean" num="112" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="RecursiveCallCollector(FunctionDef,Symbol)" num="130" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="140" type="cond"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="findRecursiveCalls(List&lt;Tree&gt;) : List&lt;Tree&gt;" num="153" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="visitCallExpression(CallExpression) : void" num="159" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="162" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isAsyncWithoutAwait(CallExpression) : boolean" num="168" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFunctionDef(FunctionDef) : void" num="173" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="visitLambda(LambdaExpression) : void" num="178" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="visitConditionalExpression(ConditionalExpression) : void" num="183" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitPyListOrSetCompExpression(ComprehensionExpression) : void" num="189" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitComprehensionIf(ComprehensionIf) : void" num="195" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="visitDictCompExpression(DictCompExpressionImpl) : void" num="200" count="0" type="method"/>
            <line complexity="4" visibility="public" signature="visitAssignmentStatement(AssignmentStatement) : void" num="205" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="207" type="cond"/>
            <line num="211" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="visitBinaryExpression(BinaryExpression) : void" num="216" count="0" type="method"/>
            <line num="218" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="221" type="cond"/>
            <line num="222" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="matchesLookupFunction(Expression) : boolean" num="226" count="0" type="method"/>
            <line num="227" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="227" type="cond"/>
            <line num="228" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="matchesLookupMethod(Expression) : boolean" num="235" count="0" type="method"/>
            <line num="236" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="236" type="cond"/>
            <line num="237" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="241" type="cond"/>
            <line num="242" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="matchesLookupSelf(Expression) : boolean" num="248" count="0" type="method"/>
            <line num="249" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="249" type="cond"/>
            <line num="250" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="matchesLookupClassName(Expression) : boolean" num="255" count="0" type="method"/>
            <line num="256" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="256" type="cond"/>
            <line num="257" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="findSelfParameterSymbol(FunctionDef) : Symbol" num="262" count="0" type="method"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="265" type="cond"/>
            <line num="266" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="269" type="cond"/>
            <line num="270" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="273" type="cond"/>
            <line complexity="3" visibility="private" signature="findParentClassName(FunctionDef) : String" num="276" count="0" type="method"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="279" type="cond"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="284" type="cond"/>
            <line num="285" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/InitReturnsValueCheck.java" name="InitReturnsValueCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="78" coveredmethods="0" methods="4" elements="23" classes="2" ncloc="48" statements="13" conditionals="6" coveredstatements="0"/>
            <class name="InitReturnsValueCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="1" elements="14" statements="9" conditionals="4" coveredstatements="0"/>
            </class>
            <class name="InitReturnsValueCheck.ReturnAndYieldVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="3" elements="9" statements="4" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="initialize(Context) : void" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="44" type="cond"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFunctionDef(FunctionDef) : void" num="60" count="0" type="method"/>
            <line complexity="3" visibility="public" signature="visitReturnStatement(ReturnStatement) : void" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitYieldStatement(YieldStatement) : void" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/InstanceAndClassMethodsAtLeastOnePositionalCheck.java" name="InstanceAndClassMethodsAtLeastOnePositionalCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="90" coveredmethods="0" methods="3" elements="33" classes="1" ncloc="59" statements="20" conditionals="10" coveredstatements="0"/>
            <class name="InstanceAndClassMethodsAtLeastOnePositionalCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="3" elements="33" statements="20" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="isUsageInClassBody(Usage,ClassDef) : boolean" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="9" visibility="private" signature="handleFunctionDef(SubscriptionContext,ClassDef,FunctionDef) : void" num="49" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/InstanceMethodSelfAsFirstCheck.java" name="InstanceMethodSelfAsFirstCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="21" loc="157" coveredmethods="0" methods="7" elements="67" classes="1" ncloc="110" statements="40" conditionals="20" coveredstatements="0"/>
            <class name="InstanceMethodSelfAsFirstCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="21" coveredmethods="0" methods="7" elements="67" statements="40" conditionals="20" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="private" signature="getExcludedDecorators() : List&lt;String&gt;" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isNonInstanceMethodDecorator(Decorator) : boolean" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="isExceptionalUsageInClassBody(Usage,ClassDef) : boolean" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="isUsedAsDecorator(Tree,Tree) : boolean" num="83" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="isRelevantMethod(ClassDef,ClassSymbol,FunctionDef) : boolean" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isValidExceptionForCls(FunctionDef,String,boolean) : boolean" num="111" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="initialize(Context) : void" num="115" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="141" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="148" type="cond"/>
            <line num="151" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/InvalidOpenModeCheck.java" name="InvalidOpenModeCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="29" loc="120" coveredmethods="0" methods="4" elements="84" classes="1" ncloc="92" statements="46" conditionals="34" coveredstatements="0"/>
            <class name="InvalidOpenModeCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="29" coveredmethods="0" methods="4" elements="84" statements="46" conditionals="34" coveredstatements="0"/>
            </class>
            <line complexity="8" visibility="public" signature="initialize(Context) : void" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="7" visibility="private" signature="checkOpenMode(SubscriptionContext,Expression,StringLiteral) : void" num="72" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="12" visibility="private" signature="isInvalidMode(Set&lt;Character&gt;) : boolean" num="95" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line complexity="2" visibility="private" signature="raiseIssue(Expression,StringLiteral,SubscriptionContext) : void" num="114" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="116" type="cond"/>
            <line num="117" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/InvariantReturnCheck.java" name="InvariantReturnCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="65" loc="274" coveredmethods="0" methods="20" elements="202" classes="2" ncloc="224" statements="110" conditionals="72" coveredstatements="0"/>
            <class name="InvariantReturnCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="61" coveredmethods="0" methods="16" elements="192" statements="104" conditionals="72" coveredstatements="0"/>
            </class>
            <class name="InvariantReturnCheck.LatestExecutedBlock">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="6" visibility="public" signature="initialize(Context) : void" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="collectLatestExecutedBlocks(ControlFlowGraph) : List&lt;LatestExecutedBlock&gt;" num="80" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="collectBlocksHavingReturnBeforeExceptOrFinallyBlock(List&lt;LatestExecutedBlock&gt;,PythonCfgBranchingBlock) : void" num="92" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="returnExpressionsHaveTheSameValue(List&lt;LatestExecutedBlock&gt;) : boolean" num="104" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="haveTheSameValue(LatestExecutedBlock,LatestExecutedBlock) : boolean" num="113" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="haveTheSameValue(LatestExecutedBlock,List&lt;? extends Tree&gt;,LatestExecutedBlock,List&lt;? extends Tree&gt;) : boolean" num="117" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="121" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="9" visibility="private" signature="haveTheSameValue(LatestExecutedBlock,Tree,LatestExecutedBlock,Tree) : boolean" num="129" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="130" type="cond"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="132" type="cond"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="134" type="cond"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="138" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="140" type="cond"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="142" type="cond"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="144" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="unaryExpressionsHaveTheSameValue(LatestExecutedBlock,UnaryExpression,LatestExecutedBlock,UnaryExpression) : boolean" num="150" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="binaryExpressionsHaveTheSameValue(LatestExecutedBlock,BinaryExpression,LatestExecutedBlock,BinaryExpression) : boolean" num="155" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="identifierHaveTheSameValue(LatestExecutedBlock,Name,LatestExecutedBlock,Name) : boolean" num="161" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="162" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="167" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="findUniquePreviousBinding(LatestExecutedBlock,Symbol) : Tree" num="175" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="181" type="cond"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="184" type="cond"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="188" type="cond"/>
            <line num="189" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="194" type="cond"/>
            <line complexity="3" visibility="private" signature="findLastBinding(List&lt;Tree&gt;,Symbol) : Tree" num="197" count="0" type="method"/>
            <line num="199" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="199" type="cond"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="201" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="findLastBinding(Tree,Symbol) : Tree" num="208" count="0" type="method"/>
            <line num="210" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="210" type="cond"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="212" type="cond"/>
            <line num="213" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line complexity="7" visibility="private" signature="couldBeModified(Name) : boolean" num="219" count="0" type="method"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="222" type="cond"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="226" type="cond"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="229" type="cond"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="231" type="cond"/>
            <line num="232" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="endsWithElementKind(CfgBlock,Kind) : boolean" num="237" count="0" type="method"/>
            <line num="238" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="lastElement(CfgBlock,Kind) : Tree" num="241" count="0" type="method"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="245" type="cond"/>
            <line complexity="1" visibility="private" signature="LatestExecutedBlock(CfgBlock)" num="254" count="0" type="method"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="hasReturnStatement() : boolean" num="259" count="0" type="method"/>
            <line num="260" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="returnExpressions() : List&lt;Expression&gt;" num="263" count="0" type="method"/>
            <line num="264" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="returnNone() : boolean" num="267" count="0" type="method"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/ItemOperationsTypeCheck.java" name="ItemOperationsTypeCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="29" loc="166" coveredmethods="0" methods="10" elements="93" classes="1" ncloc="129" statements="51" conditionals="32" coveredstatements="0"/>
            <class name="ItemOperationsTypeCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="29" coveredmethods="0" methods="10" elements="93" statements="51" conditionals="32" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="7" visibility="private" signature="checkSubscription(SubscriptionContext) : void" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isWithinTypeAnnotation(SubscriptionExpression) : boolean" num="85" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isWithinDelStatement(SubscriptionExpression) : boolean" num="90" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isWithinAssignment(SubscriptionExpression) : boolean" num="96" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="11" visibility="private" signature="isValidSubscription(Expression,String,String,List&lt;String&gt;,List&lt;LocationInFile&gt;) : boolean" num="102" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="121" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isTypingSymbol(Symbol) : boolean" num="130" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="canHaveMethod(Symbol,String,String) : boolean" num="136" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="137" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="reportIssue(SubscriptionExpression,Expression,String,SubscriptionContext,List&lt;LocationInFile&gt;) : void" num="147" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="152" type="cond"/>
            <line num="153" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="nameFromExpression(Expression) : String" num="160" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="161" type="cond"/>
            <line num="162" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/IterationOnNonIterableCheck.java" name="IterationOnNonIterableCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="33" loc="173" coveredmethods="0" methods="10" elements="118" classes="1" ncloc="140" statements="72" conditionals="36" coveredstatements="0"/>
            <class name="IterationOnNonIterableCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="33" coveredmethods="0" methods="10" elements="118" statements="72" conditionals="36" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="checkAssignment(SubscriptionContext) : void" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="isLhsIterable(ExpressionList) : boolean" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="checkForComprehension(SubscriptionContext) : void" num="79" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="reportIssue(SubscriptionContext,Expression,List&lt;LocationInFile&gt;,String) : void" num="88" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="checkYieldStatement(SubscriptionContext) : void" num="93" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="checkUnpackingExpression(SubscriptionContext) : void" num="106" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="109" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="checkForStatement(SubscriptionContext) : void" num="118" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="127" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="isAsyncIterable(Expression) : boolean" num="133" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="134" type="cond"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="137" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="9" visibility="private" signature="isValidIterable(Expression,List&lt;LocationInFile&gt;) : boolean" num="144" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="145" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="148" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="153" type="cond"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="161" type="cond"/>
            <line num="162" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/JumpInFinallyCheck.java" name="JumpInFinallyCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="62" coveredmethods="0" methods="3" elements="29" classes="1" ncloc="37" statements="16" conditionals="10" coveredstatements="0"/>
            <class name="JumpInFinallyCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="3" elements="29" statements="16" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="31" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="checkJumpStatement(SubscriptionContext,String) : void" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="40" type="cond"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="isInFinally(Tree) : boolean" num="45" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="47" type="cond"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/LdapAuthenticationCheck.java" name="LdapAuthenticationCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="21" loc="109" coveredmethods="0" methods="4" elements="55" classes="1" ncloc="80" statements="31" conditionals="20" coveredstatements="0"/>
            <class name="LdapAuthenticationCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="21" coveredmethods="0" methods="4" elements="55" statements="31" conditionals="20" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="initialize(Context) : void" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="9" visibility="private" signature="isPasswordProvided(ArgList,Set&lt;Tree&gt;) : boolean" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="isValidPassword(Expression,Set&lt;Tree&gt;) : boolean" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="isNoneOrEmptyString(Expression,Set&lt;Tree&gt;) : boolean" num="100" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/LineLengthCheck.java" name="LineLengthCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="54" coveredmethods="0" methods="1" elements="12" classes="1" ncloc="30" statements="7" conditionals="4" coveredstatements="0"/>
            <class name="LineLengthCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="1" elements="12" statements="7" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="initialize(Context) : void" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="44" type="cond"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="46" type="cond"/>
            <line num="47" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/LocalVariableAndParameterNameConventionCheck.java" name="LocalVariableAndParameterNameConventionCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="91" coveredmethods="0" methods="3" elements="32" classes="1" ncloc="63" statements="19" conditionals="10" coveredstatements="0"/>
            <class name="LocalVariableAndParameterNameConventionCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="3" elements="32" statements="19" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="checkName(Symbol,SubscriptionContext) : void" num="64" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="raiseIssueForNameAndUsage(SubscriptionContext,String,Usage) : void" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/LongIntegerWithLowercaseSuffixUsageCheck.java" name="LongIntegerWithLowercaseSuffixUsageCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="43" coveredmethods="0" methods="1" elements="8" classes="1" ncloc="20" statements="5" conditionals="2" coveredstatements="0"/>
            <class name="LongIntegerWithLowercaseSuffixUsageCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="1" elements="8" statements="5" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="initialize(Context) : void" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="38" type="cond"/>
            <line num="39" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/LoopExecutingAtMostOnceCheck.java" name="LoopExecutingAtMostOnceCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="112" coveredmethods="0" methods="5" elements="47" classes="1" ncloc="81" statements="28" conditionals="14" coveredstatements="0"/>
            <class name="LoopExecutingAtMostOnceCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="5" elements="47" statements="28" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="checkCfg(ControlFlowGraph,SubscriptionContext) : void" num="56" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="7" visibility="private" signature="checkLoop(CfgBranchingBlock,SubscriptionContext) : void" num="67" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="breakOfInnerLoop(CfgBlock,CfgBranchingBlock) : boolean" num="97" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="blockInsideLoop(CfgBlock,Tree) : boolean" num="107" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/MethodNameCheck.java" name="MethodNameCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="41" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="17" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="MethodNameCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="typeName() : String" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldCheckFunctionDeclaration(FunctionDef) : boolean" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/MethodShouldBeStaticCheck.java" name="MethodShouldBeStaticCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="23" loc="145" coveredmethods="0" methods="11" elements="59" classes="3" ncloc="106" statements="36" conditionals="12" coveredstatements="0"/>
            <class name="MethodShouldBeStaticCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="18" coveredmethods="0" methods="7" elements="46" statements="29" conditionals="10" coveredstatements="0"/>
            </class>
            <class name="MethodShouldBeStaticCheck.RaiseStatementVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="9" statements="5" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="MethodShouldBeStaticCheck.SelfVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="8" visibility="public" signature="initialize(Context) : void" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="mayRaiseNotImplementedError(FunctionDef) : boolean" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="hasValuableCode(FunctionDef) : boolean" num="68" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isStringLiteral(Statement) : boolean" num="73" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="isUsingSelfArg(FunctionDef) : boolean" num="77" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isStatic(FunctionDef) : boolean" num="101" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isBuiltInMethod(FunctionDef) : boolean" num="107" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitRaiseStatement(RaiseStatement) : void" num="117" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitName(Name) : void" num="124" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="SelfVisitor(String)" num="136" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitName(Name) : void" num="140" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/MissingDocstringCheck.java" name="MissingDocstringCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="109" coveredmethods="0" methods="7" elements="49" classes="2" ncloc="75" statements="26" conditionals="16" coveredstatements="0"/>
            <class name="MissingDocstringCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="6" elements="47" statements="25" conditionals="16" coveredstatements="0"/>
            </class>
            <class name="MissingDocstringCheck.DeclarationType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="DeclarationType(String)" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="checkDocString(SubscriptionContext,StringLiteral) : void" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="getType(Tree) : DeclarationType" num="72" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="raiseIssueNoDocstring(Tree,DeclarationType,SubscriptionContext) : void" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="raiseIssue(Tree,String,DeclarationType,SubscriptionContext) : void" num="93" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getNameNode(Tree) : Name" num="102" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/MissingNewlineAtEndOfFileCheck.java" name="MissingNewlineAtEndOfFileCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="39" coveredmethods="0" methods="1" elements="7" classes="1" ncloc="17" statements="4" conditionals="2" coveredstatements="0"/>
            <class name="MissingNewlineAtEndOfFileCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="1" elements="7" statements="4" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="initialize(Context) : void" num="30" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="34" type="cond"/>
            <line num="35" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/ModifiedParameterValueCheck.java" name="ModifiedParameterValueCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="36" loc="261" coveredmethods="0" methods="22" elements="120" classes="1" ncloc="205" statements="76" conditionals="22" coveredstatements="0"/>
            <class name="ModifiedParameterValueCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="36" coveredmethods="0" methods="22" elements="120" statements="76" conditionals="22" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 70()" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 74()" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 80()" num="80" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 86()" num="86" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 92()" num="92" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="initialize(Context) : void" num="105" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="defaultValueType(Expression) : String" num="123" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isUsingMemoization(Symbol) : boolean" num="133" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="7" visibility="private" signature="getMutations(Parameter) : List&lt;Tree&gt;" num="137" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="144" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="148" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="isWriteUsage(Optional&lt;Symbol&gt;,String,Set&lt;String&gt;,Usage) : boolean" num="165" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="167" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isAccessingExpression(Expression,Tree) : boolean" num="184" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="mightBeReferencedOutsideOfFunction(Tree) : boolean" num="192" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="194" type="cond"/>
            <line num="195" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="isAccessingSelf(Expression) : boolean" num="203" count="0" type="method"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isSelf(Expression) : boolean" num="214" count="0" type="method"/>
            <line num="215" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getAttributeSet(Symbol) : List&lt;Tree&gt;" num="218" count="0" type="method"/>
            <line num="219" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isUsedInLhsOfCompoundAssignment(Tree) : boolean" num="225" count="0" type="method"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isGetItemOnDefaultDict(String,Tree) : boolean" num="230" count="0" type="method"/>
            <line num="231" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isObjectOfSubscription(Tree,Tree) : boolean" num="234" count="0" type="method"/>
            <line num="235" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isQualifier(Tree,Tree) : boolean" num="238" count="0" type="method"/>
            <line num="239" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="isUsedInLhsOfAssignment(Tree,Predicate&lt;Expression&gt;) : boolean" num="242" count="0" type="method"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="244" type="cond"/>
            <line num="245" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isUsedInDelStatement(Tree) : boolean" num="252" count="0" type="method"/>
            <line num="253" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isMutatingMethod(Set&lt;String&gt;,String) : boolean" num="256" count="0" type="method"/>
            <line num="257" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/ModuleNameCheck.java" name="ModuleNameCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="64" coveredmethods="0" methods="2" elements="18" classes="1" ncloc="37" statements="10" conditionals="6" coveredstatements="0"/>
            <class name="ModuleNameCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="2" elements="18" statements="10" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="initialize(SubscriptionCheck.Context) : void" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="pattern() : Pattern" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="58" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/NeedlessPassCheck.java" name="NeedlessPassCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="60" coveredmethods="0" methods="2" elements="10" classes="1" ncloc="34" statements="6" conditionals="2" coveredstatements="0"/>
            <class name="NeedlessPassCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="10" statements="6" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="initialize(Context) : void" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="46" type="cond"/>
            <line num="47" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isNotStringLiteralExpressionStatement(Statement) : boolean" num="56" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/NestedConditionalExpressionCheck.java" name="NestedConditionalExpressionCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="54" coveredmethods="0" methods="1" elements="12" classes="1" ncloc="30" statements="7" conditionals="4" coveredstatements="0"/>
            <class name="NestedConditionalExpressionCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="1" elements="12" statements="7" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="initialize(Context) : void" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="44" type="cond"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="46" type="cond"/>
            <line num="47" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/NestedControlFlowDepthCheck.java" name="NestedControlFlowDepthCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="118" coveredmethods="0" methods="7" elements="48" classes="1" ncloc="83" statements="33" conditionals="8" coveredstatements="0"/>
            <class name="NestedControlFlowDepthCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="7" elements="48" statements="33" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="scanFile(PythonVisitorContext) : void" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="visitIfStatement(IfStatement) : void" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitForStatement(ForStatement) : void" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitWhileStatement(WhileStatement) : void" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitTryStatement(TryStatement) : void" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitWithStatement(WithStatement) : void" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="checkNode() : void" num="103" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="114" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/NewStyleClassCheck.java" name="NewStyleClassCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="42" coveredmethods="0" methods="1" elements="7" classes="1" ncloc="19" statements="4" conditionals="2" coveredstatements="0"/>
            <class name="NewStyleClassCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="1" elements="7" statements="4" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="initialize(Context) : void" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="37" type="cond"/>
            <line num="38" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/NoPersonReferenceInTodoCheck.java" name="NoPersonReferenceInTodoCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="71" coveredmethods="0" methods="2" elements="18" classes="1" ncloc="44" statements="12" conditionals="4" coveredstatements="0"/>
            <class name="NoPersonReferenceInTodoCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="2" elements="18" statements="12" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="checkComment(Trivia,SubscriptionContext) : void" num="60" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/NoReRaiseInExitCheck.java" name="NoReRaiseInExitCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="20" loc="135" coveredmethods="0" methods="6" elements="67" classes="2" ncloc="94" statements="41" conditionals="20" coveredstatements="0"/>
            <class name="NoReRaiseInExitCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="3" elements="43" statements="28" conditionals="12" coveredstatements="0"/>
            </class>
            <class name="NoReRaiseInExitCheck.RaiseVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="3" elements="24" statements="13" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RaiseVisitor(Symbol,Symbol)" num="49" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitExceptClause(ExceptClause) : void" num="54" count="0" type="method"/>
            <line complexity="7" visibility="public" signature="visitRaiseStatement(RaiseStatement) : void" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="extractPackedParameter(ParameterList) : Symbol" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="extractCaughtExceptionParameter(ParameterList) : Symbol" num="99" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="initialize(Context) : void" num="115" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/NonCallableCalledCheck.java" name="NonCallableCalledCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="78" coveredmethods="0" methods="3" elements="33" classes="1" ncloc="51" statements="20" conditionals="10" coveredstatements="0"/>
            <class name="NonCallableCalledCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="3" elements="33" statements="20" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="5" visibility="public" signature="initialize(Context) : void" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="nameFromExpression(Expression) : String" num="64" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="addTypeName(InferredType) : String" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/NonStringInAllPropertyCheck.java" name="NonStringInAllPropertyCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="23" loc="121" coveredmethods="0" methods="5" elements="73" classes="1" ncloc="93" statements="40" conditionals="28" coveredstatements="0"/>
            <class name="NonStringInAllPropertyCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="23" coveredmethods="0" methods="5" elements="73" statements="40" conditionals="28" coveredstatements="0"/>
            </class>
            <line complexity="5" visibility="public" signature="initialize(Context) : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="58" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="checkAllProperty(SubscriptionContext,AssignmentStatement) : void" num="68" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="isClassOrFunctionSymbol(Symbol) : boolean" num="81" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getAllExpressions(Expression) : List&lt;Expression&gt;" num="97" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="98" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="7" visibility="private" signature="couldBeString(Expression,Set&lt;Tree&gt;) : boolean" num="104" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="109" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/NotImplementedErrorInOperatorMethodsCheck.java" name="NotImplementedErrorInOperatorMethodsCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="130" coveredmethods="0" methods="2" elements="29" classes="2" ncloc="100" statements="17" conditionals="10" coveredstatements="0"/>
            <class name="NotImplementedErrorInOperatorMethodsCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="1" elements="11" statements="8" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="NotImplementedErrorInOperatorMethodsCheck.RaiseNotImplementedErrorVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="1" elements="18" statements="9" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="6" visibility="public" signature="visitRaiseStatement(RaiseStatement) : void" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="initialize(Context) : void" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/OneStatementPerLineCheck.java" name="OneStatementPerLineCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="73" coveredmethods="0" methods="3" elements="20" classes="1" ncloc="44" statements="13" conditionals="4" coveredstatements="0"/>
            <class name="OneStatementPerLineCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="3" elements="20" statements="13" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="checkStatement(SubscriptionContext) : void" num="55" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="leaveFile() : void" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/OverwrittenCollectionEntryCheck.java" name="OverwrittenCollectionEntryCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="32" loc="204" coveredmethods="0" methods="11" elements="127" classes="3" ncloc="165" statements="74" conditionals="42" coveredstatements="0"/>
            <class name="OverwrittenCollectionEntryCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="29" coveredmethods="0" methods="8" elements="117" statements="67" conditionals="42" coveredstatements="0"/>
            </class>
            <class name="OverwrittenCollectionEntryCheck.CollectionKey">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="OverwrittenCollectionEntryCheck.CollectionWrite">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="6" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="check(SubscriptionContext,StatementList) : void" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="lhs(AssignmentStatement) : Expression" num="80" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="collectionWrite(AssignmentStatement,Expression) : CollectionWrite" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="collectionWrite(AssignmentStatement,Expression,String,Token,Token) : CollectionWrite" num="101" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="109" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="key(List&lt;Tree&gt;) : String" num="124" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="129" type="cond"/>
            <line num="130" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="10" visibility="private" signature="key(Tree) : String" num="137" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="141" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="143" type="cond"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="145" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="147" type="cond"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="152" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="152" type="cond"/>
            <line num="153" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="153" type="cond"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="reportOverwrites(SubscriptionContext,Map&lt;CollectionKey, List&lt;CollectionWrite&gt;&gt;) : void" num="160" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="162" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="166" type="cond"/>
            <line num="167" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="CollectionKey(Symbol,String)" num="180" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="nest(String) : CollectionKey" num="184" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="CollectionWrite(CollectionKey,Token,Token,AssignmentStatement,Expression)" num="196" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/ParsingErrorCheck.java" name="ParsingErrorCheck.java">
            <metrics coveredelements="5" coveredconditionals="1" complexity="2" loc="39" coveredmethods="1" methods="1" elements="6" classes="1" ncloc="16" statements="3" conditionals="2" coveredstatements="3"/>
            <class name="ParsingErrorCheck">
               <metrics coveredelements="5" coveredconditionals="1" complexity="2" coveredmethods="1" methods="1" elements="6" statements="3" conditionals="2" coveredstatements="3"/>
            </class>
            <line complexity="2" visibility="public" signature="scanFile(PythonVisitorContext) : void" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
            <line num="34" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="34" type="cond"/>
            <line num="35" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/PreIncrementDecrementCheck.java" name="PreIncrementDecrementCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="46" coveredmethods="0" methods="2" elements="12" classes="1" ncloc="23" statements="6" conditionals="4" coveredstatements="0"/>
            <class name="PreIncrementDecrementCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="2" elements="12" statements="6" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="checkIncrementDecrement(SubscriptionContext) : void" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="42" type="cond"/>
            <line num="43" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="43" type="cond"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/PredictableSaltCheck.java" name="PredictableSaltCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="18" loc="111" coveredmethods="0" methods="5" elements="70" classes="1" ncloc="84" statements="39" conditionals="26" coveredstatements="0"/>
            <class name="PredictableSaltCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="18" coveredmethods="0" methods="5" elements="70" statements="39" conditionals="26" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="handleCallExpression(CallExpression,SubscriptionContext) : void" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="7" visibility="private" signature="checkArguments(CallExpression,int,SubscriptionContext) : void" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="checkSensitiveArgument(RegularArgument,SubscriptionContext) : void" num="81" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="sensitiveArgumentByFQN() : Map&lt;String, Integer&gt;" num="97" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="98" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/PrintStatementUsageCheck.java" name="PrintStatementUsageCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="39" coveredmethods="0" methods="1" elements="4" classes="1" ncloc="17" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="PrintStatementUsageCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="4" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/PropertyAccessorParameterCountCheck.java" name="PropertyAccessorParameterCountCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="26" loc="211" coveredmethods="0" methods="9" elements="101" classes="3" ncloc="159" statements="64" conditionals="28" coveredstatements="0"/>
            <class name="PropertyAccessorParameterCountCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="4" elements="33" statements="21" conditionals="8" coveredstatements="0"/>
            </class>
            <class name="PropertyAccessorParameterCountCheck.PropertyAccessorTriple">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="PropertyAccessorParameterCountCheck.CollectPropertiesVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="17" coveredmethods="0" methods="5" elements="68" statements="43" conditionals="20" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="private" signature="findFunctionDefFromArgument(List&lt;RegularArgument&gt;,int) : Optional&lt;FunctionDef&gt;" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="visitCallExpression(CallExpression) : void" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="visitFunctionDef(FunctionDef) : void" num="111" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="138" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="143" type="cond"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="145" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitClassDef(ClassDef) : void" num="154" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="propertyAccessors() : List&lt;PropertyAccessorTriple&gt;" num="159" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="countRequiredParameters(FunctionDef) : long" num="165" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="167" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="checkOnlySelfParameter(SubscriptionContext,FunctionDef,String) : void" num="177" count="0" type="method"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="179" type="cond"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="checkSetterParameters(SubscriptionContext,FunctionDef) : void" num="184" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="187" type="cond"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="195" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/RaiseOutsideExceptCheck.java" name="RaiseOutsideExceptCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="72" coveredmethods="0" methods="3" elements="29" classes="1" ncloc="46" statements="16" conditionals="10" coveredstatements="0"/>
            <class name="RaiseOutsideExceptCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="3" elements="29" statements="16" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="initialize(Context) : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="41" type="cond"/>
            <line num="42" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="44" type="cond"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="isInsideExceptOrFinally(Tree) : boolean" num="51" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="58" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isFunctionCalledInsideExceptBlock(FunctionDef) : boolean" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/RedundantJumpCheck.java" name="RedundantJumpCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="96" coveredmethods="0" methods="7" elements="37" classes="1" ncloc="66" statements="20" conditionals="10" coveredstatements="0"/>
            <class name="RedundantJumpCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="7" elements="37" statements="20" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="checkCfg(ControlFlowGraph,SubscriptionContext) : void" num="51" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="message(Tree) : String" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isInsideSingleStatementBlock(Tree) : boolean" num="76" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isReturnWithExpression(Tree) : boolean" num="81" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isException(Tree) : boolean" num="85" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="hasTryAncestor(Tree) : boolean" num="92" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/ReturnAndYieldInOneFunctionCheck.java" name="ReturnAndYieldInOneFunctionCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="70" coveredmethods="0" methods="4" elements="17" classes="2" ncloc="40" statements="9" conditionals="4" coveredstatements="0"/>
            <class name="ReturnAndYieldInOneFunctionCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="1" elements="9" statements="6" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="ReturnAndYieldInOneFunctionCheck.ReturnAndYieldVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="3" elements="8" statements="3" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="initialize(Context) : void" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="42" type="cond"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFunctionDef(FunctionDef) : void" num="53" count="0" type="method"/>
            <line complexity="2" visibility="public" signature="visitReturnStatement(ReturnStatement) : void" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitYieldStatement(YieldStatement) : void" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/ReturnYieldOutsideFunctionCheck.java" name="ReturnYieldOutsideFunctionCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="54" coveredmethods="0" methods="1" elements="13" classes="1" ncloc="31" statements="12" conditionals="0" coveredstatements="0"/>
            <class name="ReturnYieldOutsideFunctionCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="13" statements="12" conditionals="0" coveredstatements="0"/>
            </class>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/RobustCipherAlgorithmCheck.java" name="RobustCipherAlgorithmCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="76" coveredmethods="0" methods="2" elements="20" classes="1" ncloc="38" statements="14" conditionals="4" coveredstatements="0"/>
            <class name="RobustCipherAlgorithmCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="2" elements="20" statements="14" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 39()" num="39" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="initialize(Context) : void" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/SameBranchCheck.java" name="SameBranchCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="24" loc="152" coveredmethods="0" methods="9" elements="94" classes="1" ncloc="118" statements="61" conditionals="24" coveredstatements="0"/>
            <class name="SameBranchCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="24" coveredmethods="0" methods="9" elements="94" statements="61" conditionals="24" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="initialize(Context) : void" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="allIdenticalBranches(IfStatement) : boolean" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="findSameBranches(List&lt;? extends Tree&gt;,SubscriptionContext) : void" num="73" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="checkBranches(List&lt;? extends Tree&gt;,int,SubscriptionContext) : void" num="79" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="issueLocation(Tree,String) : IssueLocation" num="111" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getIfBranches(IfStatement) : List&lt;StatementList&gt;" num="116" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="121" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="lookForElseIfs(List&lt;StatementList&gt;,ElseClause) : void" num="128" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="130" type="cond"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="singleIfChild(StatementList) : IfStatement" num="136" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="138" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="isOnASingleLine(Tree) : boolean" num="144" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="145" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/SameConditionCheck.java" name="SameConditionCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="98" coveredmethods="0" methods="6" elements="49" classes="1" ncloc="69" statements="29" conditionals="14" coveredstatements="0"/>
            <class name="SameConditionCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="6" elements="49" statements="29" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="initialize(Context) : void" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getConditionsToCompare(IfStatement) : List&lt;Expression&gt;" num="56" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="lookForElseIfs(List&lt;Expression&gt;,ElseClause) : void" num="67" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="findSameConditions(List&lt;Expression&gt;,SubscriptionContext) : void" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="compareConditions(List&lt;Expression&gt;,int,SubscriptionContext) : void" num="81" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="singleIfChild(StatementList) : IfStatement" num="91" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/SecureModeEncryptionAlgorithmsCheck.java" name="SecureModeEncryptionAlgorithmsCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="18" loc="130" coveredmethods="0" methods="6" elements="68" classes="1" ncloc="98" statements="42" conditionals="20" coveredstatements="0"/>
            <class name="SecureModeEncryptionAlgorithmsCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="18" coveredmethods="0" methods="6" elements="68" statements="42" conditionals="20" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 55()" num="55" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 65()" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="initialize(Context) : void" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="checkPydesLibrary(SubscriptionContext,CallExpression,Symbol) : void" num="88" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="checkPycryptoAndCryptodomeLibraries(SubscriptionContext,CallExpression,Symbol) : void" num="94" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="7" visibility="protected" signature="checkPycaLibrary(SubscriptionContext,CallExpression,Symbol) : void" num="112" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="118" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/SelfAssignmentCheck.java" name="SelfAssignmentCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="22" loc="136" coveredmethods="0" methods="10" elements="60" classes="2" ncloc="96" statements="36" conditionals="14" coveredstatements="0"/>
            <class name="SelfAssignmentCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="21" coveredmethods="0" methods="9" elements="58" statements="35" conditionals="14" coveredstatements="0"/>
            </class>
            <class name="SelfAssignmentCheck.CallExpressionDescendantVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="checkAssignmentExpression(SubscriptionContext) : void" num="68" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="checkAssignement(SubscriptionContext) : void" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="checkAnnotatedAssignment(SubscriptionContext) : void" num="86" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="addImportedName(AliasedName) : void" num="95" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="isException(Statement,Expression) : boolean" num="105" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isAllowedName(Name) : boolean" num="112" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="inClassDef(Tree) : boolean" num="116" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="hasCallExpressionDescendant(Tree) : boolean" num="122" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitCallExpression(CallExpression) : void" num="131" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/SetDuplicateKeyCheck.java" name="SetDuplicateKeyCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="68" coveredmethods="0" methods="2" elements="35" classes="1" ncloc="45" statements="21" conditionals="12" coveredstatements="0"/>
            <class name="SetDuplicateKeyCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="2" elements="35" statements="21" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="5" visibility="public" signature="initialize(Context) : void" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="39" type="cond"/>
            <line num="40" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="42" type="cond"/>
            <line num="43" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="findIdenticalKeys(int,List&lt;Expression&gt;,Set&lt;Integer&gt;) : List&lt;Tree&gt;" num="56" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/SillyEqualityCheck.java" name="SillyEqualityCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="27" loc="105" coveredmethods="0" methods="4" elements="57" classes="1" ncloc="74" statements="33" conditionals="20" coveredstatements="0"/>
            <class name="SillyEqualityCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="27" coveredmethods="0" methods="4" elements="57" statements="33" conditionals="20" coveredstatements="0"/>
            </class>
            <line complexity="14" visibility="public" signature="initialize(Context) : void" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="raiseIssue(SubscriptionContext,BinaryExpression,String) : void" num="72" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="canImplementEqOrNe(Expression) : boolean" num="77" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="10" visibility="private" signature="builtinTypeCategory(InferredType) : String" num="81" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="100" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/SillyIdentityCheck.java" name="SillyIdentityCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="50" coveredmethods="0" methods="1" elements="19" classes="1" ncloc="26" statements="10" conditionals="8" coveredstatements="0"/>
            <class name="SillyIdentityCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="1" elements="19" statements="10" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="7" visibility="public" signature="initialize(Context) : void" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="40" type="cond"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="42" type="cond"/>
            <line num="43" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="44" type="cond"/>
            <line num="45" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/SpecialMethodParamListCheck.java" name="SpecialMethodParamListCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="19" loc="163" coveredmethods="0" methods="7" elements="73" classes="1" ncloc="113" statements="44" conditionals="22" coveredstatements="0"/>
            <class name="SpecialMethodParamListCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="19" coveredmethods="0" methods="7" elements="73" statements="44" conditionals="22" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 73()" num="73" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="lessThanExpectedMessage(String,int,int) : String" num="81" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="moreThanExpectedMessage(String,int,int) : String" num="85" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="isRelevantMethodDefinition(FunctionDef) : boolean" num="89" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="100" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="hasPackedOrKeywordParameter(List&lt;AnyParameter&gt;) : boolean" num="108" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="isRequiredParameter(AnyParameter) : boolean" num="112" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="initialize(Context) : void" num="120" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="132" type="cond"/>
            <line num="133" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="137" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="142" type="cond"/>
            <line num="144" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="153" type="cond"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/StringFormat.java" name="StringFormat.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="90" loc="497" coveredmethods="0" methods="35" elements="313" classes="6" ncloc="383" statements="194" conditionals="84" coveredstatements="0"/>
            <class name="StringFormat">
               <metrics coveredelements="0" coveredconditionals="0" complexity="30" coveredmethods="0" methods="12" elements="106" statements="62" conditionals="32" coveredstatements="0"/>
            </class>
            <class name="StringFormat.ReplacementField">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="StringFormat.NamedField">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="11" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="StringFormat.PositionalField">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="11" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="StringFormat.ParseState">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="StringFormat.StrFormatParser">
               <metrics coveredelements="0" coveredconditionals="0" complexity="48" coveredmethods="0" methods="11" elements="181" statements="118" conditionals="52" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="ReplacementField(BiConsumer&lt;SubscriptionContext, Expression&gt;)" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="validateArgument(SubscriptionContext,Expression) : void" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="NamedField(BiConsumer&lt;SubscriptionContext, Expression&gt;,String)" num="83" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNamed() : boolean" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isPositional() : boolean" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="position() : int" num="103" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="PositionalField(BiConsumer&lt;SubscriptionContext, Expression&gt;,int)" num="112" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNamed() : boolean" num="117" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isPositional() : boolean" num="122" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="127" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="position() : int" num="132" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="StringFormat(List&lt;ReplacementField&gt;)" num="140" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="replacementFields() : List&lt;ReplacementField&gt;" num="144" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numExpectedPositional() : long" num="148" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numExpectedArguments() : long" num="156" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasPositionalFields() : boolean" num="166" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNamedFields() : boolean" num="170" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="StrFormatParser(Consumer&lt;String&gt;,String)" num="193" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line complexity="17" visibility="public" signature="parse() : Optional&lt;StringFormat&gt;" num="199" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="203" type="cond"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="213" type="cond"/>
            <line num="214" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="218" type="cond"/>
            <line num="219" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="223" type="cond"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="230" type="cond"/>
            <line num="231" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="241" type="cond"/>
            <line num="242" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="250" type="cond"/>
            <line num="252" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="checkParserState() : boolean" num="258" count="0" type="method"/>
            <line num="259" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="259" type="cond"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="264" type="cond"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="tryParseFormatSpecifierField(char) : boolean" num="272" count="0" type="method"/>
            <line num="273" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="273" type="cond"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="parseFormatCurly(int) : int" num="284" count="0" type="method"/>
            <line num="285" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="285" type="cond"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="parseInitial(char,int) : int" num="294" count="0" type="method"/>
            <line num="295" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="295" type="cond"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="297" type="cond"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="299" type="cond"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="302" type="cond"/>
            <line num="303" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="parseFormatSpecifier(char) : void" num="310" count="0" type="method"/>
            <line num="311" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="311" type="cond"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="314" type="cond"/>
            <line num="315" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="tryParseFlagCharacter(char) : boolean" num="321" count="0" type="method"/>
            <line num="322" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="322" type="cond"/>
            <line num="323" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="324" type="cond"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="tryParseField(char) : boolean" num="336" count="0" type="method"/>
            <line num="337" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="337" type="cond"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="339" type="cond"/>
            <line num="340" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="341" type="cond"/>
            <line num="342" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="parseFieldName(char,int) : int" num="352" count="0" type="method"/>
            <line num="353" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="353" type="cond"/>
            <line num="354" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="358" type="cond"/>
            <line num="360" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="createField(String) : ReplacementField" num="368" count="0" type="method"/>
            <line num="369" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="369" type="cond"/>
            <line num="370" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line num="372" count="0" type="stmt"/>
            <line num="373" count="0" type="stmt"/>
            <line num="374" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="374" type="cond"/>
            <line num="375" count="0" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createFromStrFormatStyle(Consumer&lt;String&gt;,String) : Optional&lt;StringFormat&gt;" num="383" count="0" type="method"/>
            <line num="388" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="createFromPrintfStyle(Consumer&lt;String&gt;,String) : Optional&lt;StringFormat&gt;" num="391" count="0" type="method"/>
            <line num="392" count="0" type="stmt"/>
            <line num="393" count="0" type="stmt"/>
            <line num="395" count="0" type="stmt"/>
            <line num="396" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="396" type="cond"/>
            <line num="397" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="397" type="cond"/>
            <line num="399" count="0" type="stmt"/>
            <line num="400" count="0" type="stmt"/>
            <line num="403" count="0" type="stmt"/>
            <line num="404" count="0" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="406" type="cond"/>
            <line num="408" count="0" type="stmt"/>
            <line num="411" count="0" type="stmt"/>
            <line num="412" count="0" type="stmt"/>
            <line num="413" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="413" type="cond"/>
            <line num="414" count="0" type="stmt"/>
            <line num="415" count="0" type="stmt"/>
            <line num="416" count="0" type="stmt"/>
            <line num="418" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="418" type="cond"/>
            <line num="419" count="0" type="stmt"/>
            <line num="420" count="0" type="stmt"/>
            <line num="421" count="0" type="stmt"/>
            <line num="424" count="0" type="stmt"/>
            <line num="425" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="425" type="cond"/>
            <line num="426" count="0" type="stmt"/>
            <line num="428" count="0" type="stmt"/>
            <line num="429" count="0" type="stmt"/>
            <line num="430" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line num="435" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="435" type="cond"/>
            <line num="436" count="0" type="stmt"/>
            <line num="437" count="0" type="stmt"/>
            <line num="440" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="printfWidthOrPrecisionValidator() : BiConsumer&lt;SubscriptionContext, Expression&gt;" num="443" count="0" type="method"/>
            <line num="444" count="0" type="stmt"/>
            <line num="445" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="445" type="cond"/>
            <line num="446" count="0" type="stmt"/>
            <line complexity="8" visibility="private" signature="printfConversionValidator(char) : BiConsumer&lt;SubscriptionContext, Expression&gt;" num="451" count="0" type="method"/>
            <line num="452" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="452" type="cond"/>
            <line num="453" count="0" type="stmt"/>
            <line num="454" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="454" type="cond"/>
            <line num="455" count="0" type="stmt"/>
            <line num="460" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="460" type="cond"/>
            <line num="461" count="0" type="stmt"/>
            <line num="462" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="462" type="cond"/>
            <line num="463" count="0" type="stmt"/>
            <line num="468" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="468" type="cond"/>
            <line num="469" count="0" type="stmt"/>
            <line num="470" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="470" type="cond"/>
            <line num="471" count="0" type="stmt"/>
            <line num="477" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="cannotBeOfType(Expression,String) : boolean" num="480" count="0" type="method"/>
            <line num="483" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="cannotBeSingleCharString(Expression) : boolean" num="486" count="0" type="method"/>
            <line num="487" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="487" type="cond"/>
            <line num="488" count="0" type="stmt"/>
            <line num="491" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="491" type="cond"/>
            <line num="492" count="0" type="stmt"/>
            <line num="495" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/StringFormatCorrectnessCheck.java" name="StringFormatCorrectnessCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="36" loc="260" coveredmethods="0" methods="9" elements="146" classes="1" ncloc="194" statements="89" conditionals="48" coveredstatements="0"/>
            <class name="StringFormatCorrectnessCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="36" coveredmethods="0" methods="9" elements="146" statements="89" conditionals="48" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="checkCallExpression(SubscriptionContext) : void" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="isCallToLog(CallExpression) : boolean" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="7" visibility="private" signature="isQualifiedCallToLogger(CallExpression) : boolean" num="81" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="9" visibility="private" signature="checkLoggerLog(SubscriptionContext,CallExpression) : void" num="110" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="127" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="131" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="144" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="152" type="cond"/>
            <line num="153" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="checkNamed(SubscriptionContext,List&lt;RegularArgument&gt;,StringFormat,Token,Token) : void" num="163" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="166" type="cond"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="171" type="cond"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="176" type="cond"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="3" visibility="protected" signature="checkPrintfStyle(SubscriptionContext,BinaryExpression,StringLiteral) : void" num="181" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="184" type="cond"/>
            <line num="186" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="191" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="isInterestingDictLiteral(Expression) : boolean" num="206" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="207" type="cond"/>
            <line num="208" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="213" type="cond"/>
            <line num="214" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="217" type="cond"/>
            <line num="218" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line complexity="3" visibility="protected" signature="checkStrFormatStyle(SubscriptionContext,CallExpression,Expression,StringLiteral) : void" num="225" count="0" type="method"/>
            <line num="227" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="227" type="cond"/>
            <line num="228" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="232" type="cond"/>
            <line num="233" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/StringFormatMisuseCheck.java" name="StringFormatMisuseCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="21" loc="147" coveredmethods="0" methods="6" elements="76" classes="1" ncloc="102" statements="42" conditionals="28" coveredstatements="0"/>
            <class name="StringFormatMisuseCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="21" coveredmethods="0" methods="6" elements="76" statements="42" conditionals="28" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="6" visibility="protected" signature="checkPrintfStyle(SubscriptionContext,BinaryExpression,StringLiteral) : void" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="5" visibility="protected" signature="checkStrFormatStyle(SubscriptionContext,CallExpression,Expression,StringLiteral) : void" num="76" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="116" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="checkNamed(SubscriptionContext,StringFormat,Expression) : void" num="121" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="checkPositional(SubscriptionContext,StringFormat,Expression) : void" num="129" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="130" type="cond"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="132" type="cond"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="134" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="checkTuples(SubscriptionContext,StringFormat,Tuple) : void" num="140" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="141" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/StringLiteralDuplicationCheck.java" name="StringLiteralDuplicationCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="113" coveredmethods="0" methods="5" elements="29" classes="1" ncloc="79" statements="18" conditionals="6" coveredstatements="0"/>
            <class name="StringLiteralDuplicationCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="5" elements="29" statements="18" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="visitFileInput(FileInput) : void" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitExpressionStatement(ExpressionStatement) : void" num="81" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitStringLiteral(StringLiteral) : void" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="98" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitDecorator(Decorator) : void" num="104" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="visitTypeAnnotation(TypeAnnotation) : void" num="109" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/TempFileCreationCheck.java" name="TempFileCreationCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="52" coveredmethods="0" methods="2" elements="11" classes="1" ncloc="28" statements="7" conditionals="2" coveredstatements="0"/>
            <class name="TempFileCreationCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="11" statements="7" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="isInsecureTempFile(Symbol) : Optional&lt;String&gt;" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="47" type="cond"/>
            <line num="48" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/TooManyLinesInFileCheck.java" name="TooManyLinesInFileCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="51" coveredmethods="0" methods="1" elements="7" classes="1" ncloc="26" statements="4" conditionals="2" coveredstatements="0"/>
            <class name="TooManyLinesInFileCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="1" elements="7" statements="4" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="initialize(Context) : void" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/TooManyParametersCheck.java" name="TooManyParametersCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="69" coveredmethods="0" methods="1" elements="28" classes="1" ncloc="44" statements="17" conditionals="10" coveredstatements="0"/>
            <class name="TooManyParametersCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="1" elements="28" statements="17" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="6" visibility="public" signature="initialize(Context) : void" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="46" type="cond"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/TooManyReturnsCheck.java" name="TooManyReturnsCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="82" coveredmethods="0" methods="4" elements="17" classes="2" ncloc="51" statements="11" conditionals="2" coveredstatements="0"/>
            <class name="TooManyReturnsCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="1" elements="10" statements="7" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="TooManyReturnsCheck.ReturnCountVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="initialize(Context) : void" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFunctionDef(FunctionDef) : void" num="65" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="visitReturnStatement(ReturnStatement) : void" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitYieldStatement(YieldStatement) : void" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/TrailingCommentCheck.java" name="TrailingCommentCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="63" coveredmethods="0" methods="1" elements="15" classes="1" ncloc="36" statements="10" conditionals="4" coveredstatements="0"/>
            <class name="TrailingCommentCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="1" elements="15" statements="10" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="initialize(Context) : void" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/TrailingWhitespaceCheck.java" name="TrailingWhitespaceCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="44" coveredmethods="0" methods="1" elements="9" classes="1" ncloc="20" statements="4" conditionals="4" coveredstatements="0"/>
            <class name="TrailingWhitespaceCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="1" elements="9" statements="4" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="scanFile(PythonVisitorContext) : void" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="37" type="cond"/>
            <line num="38" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="38" type="cond"/>
            <line num="39" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/UndeclaredNameUsageCheck.java" name="UndeclaredNameUsageCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="24" loc="151" coveredmethods="0" methods="10" elements="72" classes="2" ncloc="117" statements="46" conditionals="16" coveredstatements="0"/>
            <class name="UndeclaredNameUsageCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="18" coveredmethods="0" methods="7" elements="57" statements="38" conditionals="12" coveredstatements="0"/>
            </class>
            <class name="UndeclaredNameUsageCheck.UnresolvedSymbolsVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="3" elements="15" statements="8" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="6" visibility="public" signature="initialize(Context) : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="58" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="importsManipulatedAllProperty(FileInput) : boolean" num="79" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="7" visibility="private" signature="checkCfgBlock(CfgBlock,SubscriptionContext,DefinedVariables,Set&lt;CfgBlock&gt;,DefinedVariablesAnalysis,List&lt;Symbol&gt;) : void" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isParameter(Tree) : boolean" num="103" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isSymbolUsedInUnreachableBlocks(DefinedVariablesAnalysis,Set&lt;CfgBlock&gt;,Symbol) : boolean" num="107" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isUndefined(DefinedVariablesAnalysis.VariableDefinition) : boolean" num="111" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="addNameIssues(Map&lt;String, List&lt;Name&gt;&gt;,SubscriptionContext) : void" num="115" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="visitName(Name) : void" num="129" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="131" type="cond"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitImportFrom(ImportFrom) : void" num="136" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitCallExpression(CallExpression) : void" num="142" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="144" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/UndefinedNameAllPropertyCheck.java" name="UndefinedNameAllPropertyCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="30" loc="208" coveredmethods="0" methods="15" elements="102" classes="3" ncloc="162" statements="61" conditionals="26" coveredstatements="0"/>
            <class name="UndefinedNameAllPropertyCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="23" coveredmethods="0" methods="9" elements="83" statements="50" conditionals="24" coveredstatements="0"/>
            </class>
            <class name="UndefinedNameAllPropertyCheck.UnknownNameSourcesVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="4" elements="16" statements="10" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="UndefinedNameAllPropertyCheck.ModuleLevelVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="5" visibility="public" signature="initialize(Context) : void" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="checkAllProperty(SubscriptionContext,AssignmentStatement) : void" num="77" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="shouldExcludeFile(FileInput) : boolean" num="99" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isUnknownSymbol(PythonFile,Map&lt;String, Symbol&gt;,StringLiteral) : boolean" num="110" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isInitFileExportingModule(PythonFile,String) : boolean" num="121" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getStringExpressions(Expression) : List&lt;Tree&gt;" num="125" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="existsFileWithName(URI,String) : boolean" num="136" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="isString(Tree) : boolean" num="145" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="148" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="retrieveStringLiteral(Tree) : StringLiteral" num="155" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitImportFrom(ImportFrom) : void" num="166" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitCallExpression(CallExpression) : void" num="172" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitSubscriptionExpression(SubscriptionExpression) : void" num="179" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="181" type="cond"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isSymbolWithFQN(Symbol,String) : boolean" num="188" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFunctionDef(FunctionDef) : void" num="197" count="0" type="method"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitClassDef(ClassDef) : void" num="203" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/UnreachableExceptCheck.java" name="UnreachableExceptCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="12" loc="95" coveredmethods="0" methods="4" elements="47" classes="1" ncloc="69" statements="29" conditionals="14" coveredstatements="0"/>
            <class name="UnreachableExceptCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="12" coveredmethods="0" methods="4" elements="47" statements="29" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="handleExceptClause(SubscriptionContext,Map&lt;String, Expression&gt;,ExceptClause) : void" num="53" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="58" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="handleExceptionExpression(SubscriptionContext,Map&lt;String, Expression&gt;,Expression,Map&lt;String, Expression&gt;) : void" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="retrieveAlreadyHandledExceptions(ClassSymbol,Map&lt;String, Expression&gt;) : List&lt;Expression&gt;" num="92" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/UnreadPrivateAttributesCheck.java" name="UnreadPrivateAttributesCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="51" coveredmethods="0" methods="3" elements="8" classes="1" ncloc="25" statements="3" conditionals="2" coveredstatements="0"/>
            <class name="UnreadPrivateAttributesCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="3" elements="8" statements="3" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="package" signature="memberPrefix() : String" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="39" type="cond"/>
            <line complexity="1" visibility="package" signature="kind() : Symbol.Kind" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="message(String) : String" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/UnreadPrivateInnerClassesCheck.java" name="UnreadPrivateInnerClassesCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="43" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="19" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="UnreadPrivateInnerClassesCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="memberPrefix() : String" num="29" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="kind() : Symbol.Kind" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="message(String) : String" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/UnreadPrivateMethodsCheck.java" name="UnreadPrivateMethodsCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="43" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="19" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="UnreadPrivateMethodsCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="memberPrefix() : String" num="29" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="kind() : Symbol.Kind" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="message(String) : String" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/UnusedLocalVariableCheck.java" name="UnusedLocalVariableCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="93" coveredmethods="0" methods="6" elements="22" classes="1" ncloc="64" statements="14" conditionals="2" coveredstatements="0"/>
            <class name="UnusedLocalVariableCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="6" elements="22" statements="14" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="checkLocalVars(SubscriptionContext,Tree,Set&lt;Symbol&gt;) : void" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="hasOnlyBindingUsages(Symbol) : boolean" num="73" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isTupleDeclaration(Tree) : boolean" num="79" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isCallingLocalsFunction(Tree) : boolean" num="85" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="calleeHasNameLocals(CallExpression) : boolean" num="89" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/UnusedNestedDefinitionCheck.java" name="UnusedNestedDefinitionCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="72" coveredmethods="0" methods="3" elements="30" classes="1" ncloc="46" statements="17" conditionals="10" coveredstatements="0"/>
            <class name="UnusedNestedDefinitionCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="3" elements="30" statements="17" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="initialize(Context) : void" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="checkNestedDefinition(Tree,Name,SubscriptionContext) : void" num="58" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="checkSymbolUsages(Symbol,SubscriptionContext) : void" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/UselessParenthesisAfterKeywordCheck.java" name="UselessParenthesisAfterKeywordCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="27" loc="126" coveredmethods="0" methods="9" elements="67" classes="1" ncloc="95" statements="38" conditionals="20" coveredstatements="0"/>
            <class name="UselessParenthesisAfterKeywordCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="27" coveredmethods="0" methods="9" elements="67" statements="38" conditionals="20" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="initialize(Context) : void" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="handleYieldExpression(SubscriptionContext,YieldExpression) : void" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="handleReturnStatement(SubscriptionContext,ReturnStatement) : void" num="77" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="handleNotOperator(SubscriptionContext,UnaryExpression) : void" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="handleRaiseStatement(SubscriptionContext,RaiseStatement) : void" num="97" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="98" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="handleForStatement(SubscriptionContext,ForStatement) : void" num="103" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="checkExprExcludeTuples(Expression,SubscriptionContext,String) : void" num="112" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="checkExpr(Expression,SubscriptionContext,String) : void" num="116" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="checkExpr(Expression,SubscriptionContext,String,boolean) : void" num="120" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="121" type="cond"/>
            <line num="123" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/UselessParenthesisCheck.java" name="UselessParenthesisCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="45" coveredmethods="0" methods="1" elements="8" classes="1" ncloc="21" statements="5" conditionals="2" coveredstatements="0"/>
            <class name="UselessParenthesisCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="1" elements="8" statements="5" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="initialize(Context) : void" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="40" type="cond"/>
            <line num="41" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/UselessStatementCheck.java" name="UselessStatementCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="32" loc="196" coveredmethods="0" methods="12" elements="95" classes="1" ncloc="153" statements="57" conditionals="26" coveredstatements="0"/>
            <class name="UselessStatementCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="32" coveredmethods="0" methods="12" elements="95" statements="57" conditionals="26" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="private" signature="ignoredOperators() : List&lt;String&gt;" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="checkNode(SubscriptionContext) : void" num="100" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isBooleanExpressionWithCalls(Tree) : boolean" num="116" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="checkConditionalExpression(SubscriptionContext) : void" num="120" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="checkStringLiteral(SubscriptionContext) : void" num="128" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="130" type="cond"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="7" visibility="private" signature="checkName(SubscriptionContext) : void" num="136" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="142" type="cond"/>
            <line num="143" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="148" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="checkQualifiedExpression(SubscriptionContext) : void" num="153" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="checkBinaryExpression(SubscriptionContext) : void" num="161" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="167" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="couldBePython2PrintStatement(BinaryExpression) : boolean" num="173" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="checkUnaryExpression(SubscriptionContext) : void" num="179" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="182" type="cond"/>
            <line num="183" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isDocString(StringLiteral) : boolean" num="188" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/VerifiedSslTlsCertificateCheck.java" name="VerifiedSslTlsCertificateCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="51" loc="431" coveredmethods="0" methods="22" elements="180" classes="4" ncloc="301" statements="110" conditionals="48" coveredstatements="0"/>
            <class name="VerifiedSslTlsCertificateCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="46" coveredmethods="0" methods="17" elements="165" statements="100" conditionals="48" coveredstatements="0"/>
            </class>
            <class name="VerifiedSslTlsCertificateCheck.Fqn">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="VerifiedSslTlsCertificateCheck.IssueReport">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="VerifiedSslTlsCertificateCheck.VulnerabilityAndProblematicToken">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="8" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="sslSetVerifyCheck(SubscriptionContext) : void" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="context(String) : String" num="107" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="ssl(String) : String" num="111" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="extractFlags(Tree) : HashSet&lt;QualifiedExpression&gt;" num="120" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="121" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="checkFlagSettings(Set&lt;QualifiedExpression&gt;) : Optional&lt;IssueReport&gt;" num="140" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="143" type="cond"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="145" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="IssueReport(String,Token)" num="160" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="requestsCheck(SubscriptionContext) : void" num="174" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="181" type="cond"/>
            <line num="186" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="193" type="cond"/>
            <line num="194" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="197" type="cond"/>
            <line num="198" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="searchVerifyAssignment(CallExpression) : Optional&lt;List&lt;Expression&gt;&gt;" num="210" count="0" type="method"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="212" type="cond"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="215" type="cond"/>
            <line num="216" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="searchVerifyInKwargs(CallExpression) : Optional&lt;List&lt;Expression&gt;&gt;" num="230" count="0" type="method"/>
            <line num="235" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="searchDangerousVerifySettingInDictionary(DictionaryLiteral) : Optional&lt;Expression&gt;" num="247" count="0" type="method"/>
            <line num="248" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="isFalsyCollection(Expression) : boolean" num="263" count="0" type="method"/>
            <line num="264" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="264" type="cond"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="267" type="cond"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isFalsyNoArgCollectionConstruction(CallExpression,String) : boolean" num="280" count="0" type="method"/>
            <line num="281" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="isFalsyRange(CallExpression,String) : boolean" num="284" count="0" type="method"/>
            <line num="285" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="285" type="cond"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="288" type="cond"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="291" type="cond"/>
            <line num="292" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="standardSslCheck(SubscriptionContext) : void" num="300" count="0" type="method"/>
            <line num="301" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="315" type="cond"/>
            <line num="316" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="findNextAssignmentLine(List&lt;Usage&gt;,int) : int" num="322" count="0" type="method"/>
            <line num="323" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="325" type="cond"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="327" type="cond"/>
            <line num="328" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="selectRelevantModifyingUsages(List&lt;Usage&gt;,int) : List&lt;Usage&gt;" num="342" count="0" type="method"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 357()" num="357" count="0" type="method"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="VulnerabilityAndProblematicToken(boolean,Token,boolean)" num="370" count="0" type="method"/>
            <line num="374" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="overrideBy(VulnerabilityAndProblematicToken) : void" num="379" count="0" type="method"/>
            <line num="380" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="searchRhsForVulnerableMethod(Expression) : Optional&lt;VulnerabilityAndProblematicToken&gt;" num="391" count="0" type="method"/>
            <line num="392" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="392" type="cond"/>
            <line num="393" count="0" type="stmt"/>
            <line num="394" count="0" type="stmt"/>
            <line num="395" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="395" type="cond"/>
            <line num="396" count="0" type="stmt"/>
            <line num="397" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="397" type="cond"/>
            <line num="398" count="0" type="stmt"/>
            <line num="399" count="0" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="searchForVerifyModeOverride(Usage) : Optional&lt;VulnerabilityAndProblematicToken&gt;" num="409" count="0" type="method"/>
            <line num="410" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="410" type="cond"/>
            <line num="411" count="0" type="stmt"/>
            <line num="429" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/WeakSSLProtocolCheck.java" name="WeakSSLProtocolCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="60" coveredmethods="0" methods="2" elements="9" classes="1" ncloc="37" statements="5" conditionals="2" coveredstatements="0"/>
            <class name="WeakSSLProtocolCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="9" statements="5" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="initialize(Context) : void" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isWeakProtocol(Symbol) : boolean" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/WildcardImportCheck.java" name="WildcardImportCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="126" coveredmethods="0" methods="10" elements="42" classes="2" ncloc="85" statements="24" conditionals="8" coveredstatements="0"/>
            <class name="WildcardImportCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="1" elements="18" statements="11" conditionals="6" coveredstatements="0"/>
            </class>
            <class name="WildcardImportCheck.WildcardImportVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="9" elements="24" statements="13" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="visitImportFrom(ImportFrom) : void" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFunctionDef(FunctionDef) : void" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitClassDef(ClassDef) : void" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitStatementList(StatementList) : void" num="69" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitAssignmentStatement(AssignmentStatement) : void" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitCallExpression(CallExpression) : void" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="raiseIssuesIf(BooleanSupplier) : void" num="90" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isDisallowedAssignment(Expression) : boolean" num="94" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="mayContainApplicationLogic(Tree) : boolean" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="initialize(Context) : void" num="104" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="109" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="121" type="cond"/>
            <line num="122" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/WrongAssignmentOperatorCheck.java" name="WrongAssignmentOperatorCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="61" coveredmethods="0" methods="2" elements="24" classes="1" ncloc="37" statements="14" conditionals="8" coveredstatements="0"/>
            <class name="WrongAssignmentOperatorCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="2" elements="24" statements="14" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="7" visibility="public" signature="initialize(Context) : void" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="38" type="cond"/>
            <line num="39" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="39" type="cond"/>
            <line num="40" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="46" type="cond"/>
            <line num="48" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="noSpacingBetween(Token,Token) : boolean" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/XMLParserXXEVulnerableCheck.java" name="XMLParserXXEVulnerableCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="38" loc="171" coveredmethods="0" methods="10" elements="93" classes="1" ncloc="127" statements="51" conditionals="32" coveredstatements="0"/>
            <class name="XMLParserXXEVulnerableCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="38" coveredmethods="0" methods="10" elements="93" statements="51" conditionals="32" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="checkCallExpressionFqn(CallExpression,String) : boolean" num="60" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="checkLxmlParseCall(SubscriptionContext) : void" num="67" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getParserCall(CallExpression) : CallExpression" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="7" visibility="private" signature="getArgValueAsCallExpression(RegularArgument) : CallExpression" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="isUnsafeParserUsage(CallExpression) : boolean" num="100" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="7" visibility="private" signature="checkLxmlXsltCall(SubscriptionContext) : void" num="112" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="116" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="checkSetFeatureCall(SubscriptionContext) : void" num="132" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="134" type="cond"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="checkSettingFeatureGesToTrue(CallExpression) : boolean" num="144" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="153" type="cond"/>
            <line num="154" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isCallToSetFeature(CallExpression) : boolean" num="166" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.python.checks.hotspots">
         <metrics coveredelements="0" complexity="467" loc="3303" methods="181" classes="32" statements="844" coveredconditionals="0" coveredmethods="0" elements="1461" ncloc="2403" files="26" conditionals="436" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/hotspots/AbstractCookieFlagCheck.java" name="AbstractCookieFlagCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="22" loc="148" coveredmethods="0" methods="8" elements="74" classes="1" ncloc="113" statements="44" conditionals="22" coveredstatements="0"/>
            <class name="AbstractCookieFlagCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="22" coveredmethods="0" methods="8" elements="74" statements="44" conditionals="22" coveredstatements="0"/>
            </class>
            <line complexity="8" visibility="public" signature="initialize(Context) : void" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getArgument(List&lt;Argument&gt;,int,String) : RegularArgument" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="checkSensitivePositionalArgument(List&lt;Argument&gt;,int) : RegularArgument" num="85" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getSubscriptionToCookies(List&lt;ExpressionList&gt;) : Stream&lt;SubscriptionExpression&gt;" num="100" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="isSettingFlag(SubscriptionExpression,String) : boolean" num="113" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getSubscripts(SubscriptionExpression) : List&lt;ExpressionList&gt;" num="123" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="127" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isFlagNameStringLiteral(Expression,String) : boolean" num="134" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getObject(Expression) : Expression" num="138" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/hotspots/ClearTextProtocolsCheck.java" name="ClearTextProtocolsCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="21" loc="143" coveredmethods="0" methods="6" elements="80" classes="1" ncloc="110" statements="48" conditionals="26" coveredstatements="0"/>
            <class name="ClearTextProtocolsCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="21" coveredmethods="0" methods="6" elements="80" statements="48" conditionals="26" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 50()" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="7" visibility="private" signature="handleAssignmentStatement(AssignmentStatement,SubscriptionContext) : void" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="7" visibility="private" signature="unsafeProtocol(String) : Optional&lt;String&gt;" num="102" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="118" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="isUnsafeLib(Symbol) : Optional&lt;String&gt;" num="127" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="130" type="cond"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="message(String) : String" num="140" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/hotspots/CommandLineArgsCheck.java" name="CommandLineArgsCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="63" coveredmethods="0" methods="4" elements="19" classes="1" ncloc="38" statements="11" conditionals="4" coveredstatements="0"/>
            <class name="CommandLineArgsCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="4" elements="19" statements="11" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="checkSysArgNode(SubscriptionContext) : void" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="46" type="cond"/>
            <line num="47" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="47" type="cond"/>
            <line num="48" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="functionsToCheck() : Set&lt;String&gt;" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="message() : String" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/hotspots/CorsCheck.java" name="CorsCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="75" loc="361" coveredmethods="0" methods="20" elements="231" classes="1" ncloc="286" statements="131" conditionals="80" coveredstatements="0"/>
            <class name="CorsCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="75" coveredmethods="0" methods="20" elements="231" statements="131" conditionals="80" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="7" visibility="private" signature="checkDjangoSettings(SubscriptionContext) : void" num="106" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="119" type="cond"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="8" visibility="private" signature="checkAllowOriginProperty(SubscriptionContext) : void" num="126" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="130" type="cond"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="138" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="142" type="cond"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="checkDjangoResponseSetItem(SubscriptionContext) : void" num="149" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="reportOnSetMethod(SubscriptionContext,String) : void" num="153" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="159" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="checkFlaskDecorator(SubscriptionContext) : void" num="165" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="169" type="cond"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="171" type="cond"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="179" type="cond"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="checkWerkzeugHeaders(SubscriptionContext) : void" num="188" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="192" type="cond"/>
            <line num="193" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line complexity="10" visibility="private" signature="checkFlaskResponse(SubscriptionContext) : void" num="202" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="206" type="cond"/>
            <line num="207" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="207" type="cond"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="212" type="cond"/>
            <line num="213" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="213" type="cond"/>
            <line num="214" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="217" type="cond"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="219" type="cond"/>
            <line num="220" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="reportOnHeader(SubscriptionContext,T) : void" num="226" count="0" type="method"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="228" type="cond"/>
            <line num="229" count="0" type="stmt"/>
            <line complexity="8" visibility="private" signature="checkFlaskCorsCall(SubscriptionContext) : void" num="234" count="0" type="method"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="237" type="cond"/>
            <line num="238" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="241" type="cond"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="248" type="cond"/>
            <line num="249" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="254" type="cond"/>
            <line num="255" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="259" type="cond"/>
            <line num="260" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="262" type="cond"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="checkResourcesElements(SubscriptionContext,CallExpression,List&lt;DictionaryLiteralElement&gt;) : void" num="269" count="0" type="method"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="271" type="cond"/>
            <line num="272" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="275" type="cond"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="originsToReport(Expression) : boolean" num="282" count="0" type="method"/>
            <line num="283" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="283" type="cond"/>
            <line num="284" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="getValueInDictionary(Tree,String) : Optional&lt;Expression&gt;" num="291" count="0" type="method"/>
            <line num="292" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="292" type="cond"/>
            <line num="293" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="296" type="cond"/>
            <line num="297" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="298" type="cond"/>
            <line num="299" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="303" type="cond"/>
            <line num="304" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getSingleElementInList(Expression) : Optional&lt;Expression&gt;" num="310" count="0" type="method"/>
            <line num="311" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="311" type="cond"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="313" type="cond"/>
            <line num="314" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isString(Tree,String) : boolean" num="321" count="0" type="method"/>
            <line num="322" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="isString(Tree,List&lt;String&gt;) : boolean" num="325" count="0" type="method"/>
            <line num="326" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="326" type="cond"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="328" type="cond"/>
            <line num="329" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isVarAssignment(AssignmentStatement,String) : boolean" num="334" count="0" type="method"/>
            <line num="335" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getOnlyAssignedLhs(AssignmentStatement) : Optional&lt;Expression&gt;" num="339" count="0" type="method"/>
            <line num="340" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="341" type="cond"/>
            <line num="342" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getArgument(List&lt;Argument&gt;,String) : Optional&lt;Expression&gt;" num="348" count="0" type="method"/>
            <line num="349" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isSymbol(Symbol,String) : boolean" num="357" count="0" type="method"/>
            <line num="358" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/hotspots/CsrfDisabledCheck.java" name="CsrfDisabledCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="45" loc="342" coveredmethods="0" methods="18" elements="160" classes="1" ncloc="255" statements="96" conditionals="46" coveredstatements="0"/>
            <class name="CsrfDisabledCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="45" coveredmethods="0" methods="18" elements="160" statements="96" conditionals="46" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="djangoMiddlewareArrayCheck(SubscriptionContext) : void" num="76" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line num="78" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isLhsCalled(String) : Predicate&lt;AssignmentStatement&gt;" num="98" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isStringSatisfying(Predicate&lt;String&gt;) : Predicate&lt;Expression&gt;" num="105" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isListAnyMatch(Predicate&lt;Expression&gt;) : Predicate&lt;Expression&gt;" num="110" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="decoratorCsrfExemptCheck(SubscriptionContext) : void" num="122" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="130" type="cond"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="functionCsrfExemptCheck(SubscriptionContext) : void" num="136" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="flaskWtfCsrfEnabledFalseCheck(SubscriptionContext) : void" num="145" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="metaCheck(SubscriptionContext) : void" num="165" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="167" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="177" type="cond"/>
            <line num="178" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="182" type="cond"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="184" type="cond"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="formInstantiationCheck(SubscriptionContext) : void" num="192" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="199" type="cond"/>
            <line num="200" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="204" type="cond"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="searchForProblemsInFormInitializationArguments(RegularArgument) : Optional&lt;Expression&gt;" num="215" count="0" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="217" type="cond"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="219" type="cond"/>
            <line num="220" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="searchForBadCsrfSettingInDictionary(DictionaryLiteral) : Optional&lt;Expression&gt;" num="230" count="0" type="method"/>
            <line num="231" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="improperlyConfiguredFlaskApp(SubscriptionContext) : void" num="242" count="0" type="method"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="244" type="cond"/>
            <line num="245" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="254" type="cond"/>
            <line num="255" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="isFlaskAppInstantiation(Expression) : boolean" num="261" count="0" type="method"/>
            <line num="262" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="262" type="cond"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="extractQualifiedNameComponents(Expression) : Optional&lt;ArrayList&lt;String&gt;&gt;" num="272" count="0" type="method"/>
            <line num="273" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="273" type="cond"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="277" type="cond"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="checkNestedQualifiedExpressions(List&lt;Pattern&gt;,Expression) : boolean" num="294" count="0" type="method"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="297" type="cond"/>
            <line num="298" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="298" type="cond"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="301" type="cond"/>
            <line num="302" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isWithinCsrfEnablingStatement(Usage) : boolean" num="313" count="0" type="method"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="isWithinCall(Set&lt;String&gt;,List&lt;Pattern&gt;,Tree) : boolean" num="328" count="0" type="method"/>
            <line num="330" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="331" type="cond"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="333" type="cond"/>
            <line num="334" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/hotspots/DataEncryptionCheck.java" name="DataEncryptionCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="83" coveredmethods="0" methods="1" elements="8" classes="1" ncloc="56" statements="5" conditionals="2" coveredstatements="0"/>
            <class name="DataEncryptionCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="1" elements="8" statements="5" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="initialize(Context) : void" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/hotspots/DebugModeCheck.java" name="DebugModeCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="93" coveredmethods="0" methods="5" elements="42" classes="1" ncloc="66" statements="23" conditionals="14" coveredstatements="0"/>
            <class name="DebugModeCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="5" elements="42" statements="23" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="7" visibility="public" signature="initialize(Context) : void" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isDebugIdentifier(Expression) : boolean" num="72" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isTrueLiteral(Expression) : boolean" num="76" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="isDebugArgument(Argument) : boolean" num="80" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getQualifiedName(CallExpression) : String" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/hotspots/DisabledHtmlAutoEscapeCheck.java" name="DisabledHtmlAutoEscapeCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="20" loc="129" coveredmethods="0" methods="8" elements="56" classes="1" ncloc="97" statements="32" conditionals="16" coveredstatements="0"/>
            <class name="DisabledHtmlAutoEscapeCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="20" coveredmethods="0" methods="8" elements="56" statements="32" conditionals="16" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 49()" num="49" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="checkKeyValuePair(SubscriptionContext,KeyValuePair) : void" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isStringLiteral(Expression,String) : boolean" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="checkCallExpression(SubscriptionContext,CallExpression) : void" num="79" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="checkJinjaOptions(SubscriptionContext,CallExpression,Name) : void" num="105" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isAutoEscapeArgument(RegularArgument) : boolean" num="121" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="message() : String" num="126" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/hotspots/DisabledHtmlAutoEscapeLegacyCheck.java" name="DisabledHtmlAutoEscapeLegacyCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="31" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="DisabledHtmlAutoEscapeLegacyCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="message() : String" num="27" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/hotspots/DynamicCodeExecutionCheck.java" name="DynamicCodeExecutionCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="51" coveredmethods="0" methods="2" elements="15" classes="1" ncloc="28" statements="9" conditionals="4" coveredstatements="0"/>
            <class name="DynamicCodeExecutionCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="2" elements="15" statements="9" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="initialize(Context) : void" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="37" type="cond"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="isFuncNameExecOrEval(CallExpression) : boolean" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/hotspots/EmailSendingCheck.java" name="EmailSendingCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="48" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="26" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="EmailSendingCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="functionsToCheck() : Set&lt;String&gt;" num="28" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="message() : String" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/hotspots/ExpandingArchiveCheck.java" name="ExpandingArchiveCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="41" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="18" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="ExpandingArchiveCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="functionsToCheck() : Set&lt;String&gt;" num="29" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="message() : String" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/hotspots/HardCodedCredentialsCheck.java" name="HardCodedCredentialsCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="61" loc="299" coveredmethods="0" methods="20" elements="196" classes="1" ncloc="251" statements="112" conditionals="64" coveredstatements="0"/>
            <class name="HardCodedCredentialsCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="61" coveredmethods="0" methods="20" elements="196" statements="112" conditionals="64" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="private" signature="sensitiveArgumentByFQN() : Map&lt;String, Integer&gt;" num="78" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="variablePatterns() : Stream&lt;Pattern&gt;" num="94" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="literalPatterns() : Stream&lt;Pattern&gt;" num="101" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="102" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="111" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="handleDictionaryLiteral(DictionaryLiteral,SubscriptionContext) : void" num="121" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="checkKeyValuePair(KeyValuePair,SubscriptionContext) : void" num="130" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="131" type="cond"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="handleParameterList(ParameterList,SubscriptionContext) : void" num="142" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="145" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="handleRegularArgument(RegularArgument,SubscriptionContext) : void" num="156" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="160" type="cond"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="handleCallExpression(CallExpression,SubscriptionContext) : void" num="166" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="167" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="171" type="cond"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="7" visibility="private" signature="checkSensitiveArgument(CallExpression,int,SubscriptionContext) : void" num="176" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="177" type="cond"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="179" type="cond"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="181" type="cond"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="183" type="cond"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="handleStringLiteral(StringLiteral,SubscriptionContext) : void" num="190" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="191" type="cond"/>
            <line num="192" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="194" type="cond"/>
            <line num="195" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="198" type="cond"/>
            <line num="199" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="201" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isDocString(StringLiteral) : boolean" num="206" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="isURLWithCredentials(StringLiteral) : boolean" num="215" count="0" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="216" type="cond"/>
            <line num="217" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="222" type="cond"/>
            <line num="223" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="handleAssignmentStatement(AssignmentStatement,SubscriptionContext) : void" num="231" count="0" type="method"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="235" type="cond"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="238" type="cond"/>
            <line num="239" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="243" type="cond"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="246" type="cond"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="248" type="cond"/>
            <line num="249" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="checkAssignedValue(AssignmentStatement,String,SubscriptionContext) : void" num="256" count="0" type="method"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="258" type="cond"/>
            <line num="259" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="credentialSymbolName(Symbol) : String" num="263" count="0" type="method"/>
            <line num="264" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="264" type="cond"/>
            <line num="265" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isSuspiciousStringLiteral(Tree) : boolean" num="270" count="0" type="method"/>
            <line num="271" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isCredential(String,Stream&lt;Pattern&gt;) : boolean" num="275" count="0" type="method"/>
            <line num="276" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="matchedCredential(String,Stream&lt;Pattern&gt;) : String" num="279" count="0" type="method"/>
            <line num="280" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="281" type="cond"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="284" type="cond"/>
            <line num="285" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="toPatterns(String) : List&lt;Pattern&gt;" num="293" count="0" type="method"/>
            <line num="294" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/hotspots/HashingDataCheck.java" name="HashingDataCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="23" loc="215" coveredmethods="0" methods="10" elements="66" classes="1" ncloc="163" statements="36" conditionals="20" coveredstatements="0"/>
            <class name="HashingDataCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="23" coveredmethods="0" methods="10" elements="66" statements="36" conditionals="20" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="109" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="isException(CallExpression) : boolean" num="127" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isDjangoMakePasswordFunctionWithoutSaltAndHasher(CallExpression) : boolean" num="132" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="checkOverwriteDjangoHashers(SubscriptionContext) : void" num="138" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="141" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="147" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="isOverwritingDjangoHashers(List&lt;ExpressionList&gt;) : boolean" num="158" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="162" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
            <line num="166" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="checkQuestionableHashingAlgorithm(SubscriptionContext) : void" num="174" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="176" type="cond"/>
            <line num="177" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="179" type="cond"/>
            <line num="180" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="180" type="cond"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getQualifiedName(Expression) : String" num="185" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="186" type="cond"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="188" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="checkCreatingCustomHasher(SubscriptionContext) : void" num="193" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="196" type="cond"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="functionsToCheck() : Set&lt;String&gt;" num="206" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="message() : String" num="211" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/hotspots/HttpOnlyCookieCheck.java" name="HttpOnlyCookieCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="54" coveredmethods="0" methods="4" elements="13" classes="1" ncloc="29" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="HttpOnlyCookieCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="13" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="flagName() : String" num="31" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 36()" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="message() : String" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="sensitiveArgumentByFQN() : Map&lt;String, Integer&gt;" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/hotspots/LoggersConfigurationCheck.java" name="LoggersConfigurationCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="94" coveredmethods="0" methods="3" elements="26" classes="1" ncloc="64" statements="15" conditionals="8" coveredstatements="0"/>
            <class name="LoggersConfigurationCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="3" elements="26" statements="15" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="initialize(Context) : void" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="58" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="isClassExtendingLogger(SubscriptionContext,ClassDef) : void" num="68" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="isSettingLastResort(SubscriptionContext,AssignmentStatement) : void" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/hotspots/OsExecCheck.java" name="OsExecCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="77" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="52" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="OsExecCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="functionsToCheck() : Set&lt;String&gt;" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="message() : String" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/hotspots/ProcessSignallingCheck.java" name="ProcessSignallingCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="43" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="20" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="ProcessSignallingCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="functionsToCheck() : Set&lt;String&gt;" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="message() : String" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/hotspots/PseudoRandomCheck.java" name="PseudoRandomCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="53" coveredmethods="0" methods="1" elements="8" classes="1" ncloc="29" statements="5" conditionals="2" coveredstatements="0"/>
            <class name="PseudoRandomCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="1" elements="8" statements="5" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="initialize(Context) : void" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="47" type="cond"/>
            <line num="48" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/hotspots/PubliclyWritableDirectoriesCheck.java" name="PubliclyWritableDirectoriesCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="108" coveredmethods="0" methods="5" elements="38" classes="1" ncloc="77" statements="23" conditionals="10" coveredstatements="0"/>
            <class name="PubliclyWritableDirectoriesCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="5" elements="38" statements="23" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="7" visibility="public" signature="initialize(Context) : void" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="containsDirectory(String,String) : boolean" num="85" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isNonCompliantOsEnvironArgument(Expression) : boolean" num="89" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isOsEnvironGetter(CallExpression) : boolean" num="94" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="isOsEnvironQualifiedExpression(Expression) : boolean" num="99" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="100" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/hotspots/RegexCheck.java" name="RegexCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="20" loc="116" coveredmethods="0" methods="4" elements="63" classes="1" ncloc="87" statements="35" conditionals="24" coveredstatements="0"/>
            <class name="RegexCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="20" coveredmethods="0" methods="4" elements="63" statements="35" conditionals="24" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="initialize(Context) : void" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="58" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="9" visibility="private" signature="checkRegexArgument(Argument,SubscriptionContext) : void" num="64" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="getExpression(Expression) : Expression" num="91" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="isSuspiciousRegex(String) : boolean" num="109" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/hotspots/SQLQueriesCheck.java" name="SQLQueriesCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="33" loc="203" coveredmethods="0" methods="16" elements="104" classes="3" ncloc="161" statements="62" conditionals="26" coveredstatements="0"/>
            <class name="SQLQueriesCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="28" coveredmethods="0" methods="12" elements="88" statements="52" conditionals="24" coveredstatements="0"/>
            </class>
            <class name="SQLQueriesCheck.SymbolsFromImport">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SQLQueriesCheck.FormattedStringVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="3" elements="13" statements="8" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="visitFile(SubscriptionContext) : void" num="60" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitAliasedName(AliasedName) : void" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isSQLQueryFromDjangoModel(String) : boolean" num="91" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isSQLQueryFromDjangoDBConnection(String) : boolean" num="95" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="7" visibility="private" signature="checkCallExpression(SubscriptionContext) : void" num="99" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="addIssue(SubscriptionContext,CallExpression) : void" num="117" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="isException(CallExpression,String) : boolean" num="122" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="sensitiveArgumentValue(CallExpression) : Optional&lt;Tree&gt;" num="130" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="132" type="cond"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="140" type="cond"/>
            <line num="141" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="143" type="cond"/>
            <line num="144" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isFormatted(Expression) : boolean" num="149" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="extraContainsFormattedSqlQueries(List&lt;Argument&gt;,String) : boolean" num="155" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isAssignment(RegularArgument) : boolean" num="167" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getExpression(Expression) : Expression" num="171" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitStringElement(StringElement) : void" num="182" count="0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitCallExpression(CallExpression) : void" num="188" count="0" type="method"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitBinaryExpression(BinaryExpression) : void" num="197" count="0" type="method"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/hotspots/SecureCookieCheck.java" name="SecureCookieCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="54" coveredmethods="0" methods="4" elements="13" classes="1" ncloc="29" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="SecureCookieCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="13" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 31()" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="flagName() : String" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="message() : String" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="sensitiveArgumentByFQN() : Map&lt;String, Integer&gt;" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/hotspots/StandardInputCheck.java" name="StandardInputCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="103" coveredmethods="0" methods="6" elements="45" classes="1" ncloc="75" statements="27" conditionals="12" coveredstatements="0"/>
            <class name="StandardInputCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="6" elements="45" statements="27" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="initialize(Context) : void" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getFunctionName(Expression) : String" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="isException(CallExpression) : boolean" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="isQuestionablePropertyAccess(Name) : boolean" num="79" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="functionsToCheck() : Set&lt;String&gt;" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="message() : String" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/hotspots/StrongCryptographicKeysCheck.java" name="StrongCryptographicKeysCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="42" loc="235" coveredmethods="0" methods="21" elements="121" classes="5" ncloc="178" statements="68" conditionals="32" coveredstatements="0"/>
            <class name="StrongCryptographicKeysCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="2" elements="22" statements="12" conditionals="8" coveredstatements="0"/>
            </class>
            <class name="StrongCryptographicKeysCheck.CryptoAPICheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="23" coveredmethods="0" methods="7" elements="75" statements="44" conditionals="24" coveredstatements="0"/>
            </class>
            <class name="StrongCryptographicKeysCheck.CryptographyModuleCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="StrongCryptographicKeysCheck.CryptoModuleCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="StrongCryptographicKeysCheck.CryptodomeModuleCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="initialize(Context) : void" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getQualifiedName(CallExpression) : String" num="64" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line complexity="3" visibility="private" signature="isNonCompliantKeySizeArgument(Argument,int) : boolean" num="80" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="isNonCompliantExponentArgument(Argument,int) : boolean" num="92" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="98" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="isLessThan2048(Expression) : boolean" num="104" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="isLessThan65537(Expression) : boolean" num="112" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="isNonCompliantCurveArgument(Argument,int) : boolean" num="120" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="121" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="isNonCompliantCurve(Expression) : boolean" num="132" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="137" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="5" visibility="package" signature="checkArguments(SubscriptionContext,List&lt;Argument&gt;) : void" num="147" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="154" type="cond"/>
            <line num="155" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getKeySizeArgumentPosition() : int" num="168" count="0" type="method"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getExponentArgumentPosition() : int" num="173" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getKeySizeKeywordName() : String" num="178" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getExponentKeywordName() : String" num="183" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getExponentArgumentPosition() : int" num="191" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getKeySizeArgumentPosition() : int" num="196" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getExponentKeywordName() : String" num="201" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getKeySizeKeywordName() : String" num="206" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getExponentArgumentPosition() : int" num="214" count="0" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getExponentKeywordName() : String" num="219" count="0" type="method"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getKeySizeKeywordName() : String" num="224" count="0" type="method"/>
            <line num="226" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getKeySizeArgumentPosition() : int" num="229" count="0" type="method"/>
            <line num="231" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/main/java/org/sonar/python/checks/hotspots/UnverifiedHostnameCheck.java" name="UnverifiedHostnameCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="19" loc="116" coveredmethods="0" methods="6" elements="65" classes="1" ncloc="86" statements="35" conditionals="24" coveredstatements="0"/>
            <class name="UnverifiedHostnameCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="19" coveredmethods="0" methods="6" elements="65" statements="35" conditionals="24" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="private" signature="functionsToCheck() : Set&lt;String&gt;" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="7" visibility="private" signature="checkSuspiciousCall(CallExpression,Symbol,SubscriptionContext) : void" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="isUnsafeContext(Symbol,Symbol) : boolean" num="80" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="opensUnsecureConnection(Symbol,CallExpression) : boolean" num="95" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="checkCallExpression(SubscriptionContext) : void" num="106" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.python.checks.utils">
         <metrics coveredelements="0" complexity="15" loc="131" methods="9" classes="1" statements="39" coveredconditionals="0" coveredmethods="0" elements="60" ncloc="93" files="1" conditionals="12" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks-testkit/src/main/java/org/sonar/python/checks/utils/PythonCheckVerifier.java" name="PythonCheckVerifier.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="131" coveredmethods="0" methods="9" elements="60" classes="1" ncloc="93" statements="39" conditionals="12" coveredstatements="0"/>
            <class name="PythonCheckVerifier">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="9" elements="60" statements="39" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="PythonCheckVerifier()" num="47" count="0" type="method"/>
            <line complexity="2" visibility="private" signature="scanFileForIssues(PythonCheck,PythonVisitorContext) : List&lt;PreciseIssue&gt;" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="verify(String,PythonCheck) : void" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="verifyNoIssue(String,PythonCheck) : void" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="verify(List&lt;String&gt;,PythonCheck) : void" num="68" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="verifyNoIssue(List&lt;String&gt;,PythonCheck) : void" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="createVerifier(List&lt;File&gt;,PythonCheck,ProjectLevelSymbolTable,File) : MultiFileVerifier" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="addFileIssues(PythonCheck,MultiFileVerifier,File,PythonVisitorContext) : void" num="93" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="addPreciseIssue(Path,MultiFileVerifier,PreciseIssue) : MultiFileVerifier.Issue" num="109" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.plugins.python.api.symbols">
         <metrics coveredelements="2" complexity="1" loc="252" methods="1" classes="8" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" ncloc="106" files="5" conditionals="0" coveredstatements="1"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/symbols/AmbiguousSymbol.java" name="AmbiguousSymbol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="26" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AmbiguousSymbol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/symbols/ClassSymbol.java" name="ClassSymbol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="56" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="26" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ClassSymbol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/symbols/FunctionSymbol.java" name="FunctionSymbol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="70" coveredmethods="0" methods="0" elements="0" classes="2" ncloc="31" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FunctionSymbol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="FunctionSymbol.Parameter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/symbols/Symbol.java" name="Symbol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="52" coveredmethods="0" methods="0" elements="0" classes="2" ncloc="21" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Symbol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Symbol.Kind">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/symbols/Usage.java" name="Usage.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="48" coveredmethods="1" methods="1" elements="2" classes="2" ncloc="23" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="Usage">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="Usage.Kind">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="isBindingUsage() : boolean" num="26" count="7" type="method"/>
            <line num="27" count="7" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.plugins.python.api.cfg">
         <metrics coveredelements="0" complexity="11" loc="203" methods="8" classes="3" statements="30" coveredconditionals="0" coveredmethods="0" elements="42" ncloc="106" files="3" conditionals="4" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/cfg/CfgBlock.java" name="CfgBlock.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="41" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="CfgBlock">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/cfg/CfgBranchingBlock.java" name="CfgBranchingBlock.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="39" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="CfgBranchingBlock">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/cfg/ControlFlowGraph.java" name="ControlFlowGraph.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="123" coveredmethods="0" methods="8" elements="42" classes="1" ncloc="87" statements="30" conditionals="4" coveredstatements="0"/>
            <class name="ControlFlowGraph">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="8" elements="42" statements="30" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ControlFlowGraph(Set&lt;CfgBlock&gt;,CfgBlock,CfgBlock)" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="build(StatementList,PythonFile) : ControlFlowGraph" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="build(FunctionDef,PythonFile) : ControlFlowGraph" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="build(FileInput,PythonFile) : ControlFlowGraph" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="start() : CfgBlock" num="83" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="end() : CfgBlock" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="blocks() : Set&lt;CfgBlock&gt;" num="91" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="116" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.python.semantic">
         <metrics coveredelements="51" complexity="373" loc="2648" methods="188" classes="18" statements="813" coveredconditionals="12" coveredmethods="10" elements="1293" ncloc="2130" files="11" conditionals="292" coveredstatements="29"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/semantic/AmbiguousSymbolImpl.java" name="AmbiguousSymbolImpl.java">
            <metrics coveredelements="4" coveredconditionals="1" complexity="10" loc="84" coveredmethods="1" methods="6" elements="34" classes="1" ncloc="55" statements="20" conditionals="8" coveredstatements="2"/>
            <class name="AmbiguousSymbolImpl">
               <metrics coveredelements="4" coveredconditionals="1" complexity="10" coveredmethods="1" methods="6" elements="34" statements="20" conditionals="8" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="AmbiguousSymbolImpl(String,String,Set&lt;Symbol&gt;)" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="create(Set&lt;Symbol&gt;) : AmbiguousSymbol" num="42" count="1" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="43" type="cond"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(Symbol) : AmbiguousSymbol" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="alternatives() : Set&lt;Symbol&gt;" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="copyWithoutUsages() : AmbiguousSymbolImpl" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="removeUsages() : void" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/semantic/BuiltinSymbols.java" name="BuiltinSymbols.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="341" coveredmethods="0" methods="2" elements="10" classes="1" ncloc="293" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="BuiltinSymbols">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="10" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="BuiltinSymbols()" num="29" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="all() : Set&lt;String&gt;" num="331" count="0" type="method"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/semantic/ClassSymbolImpl.java" name="ClassSymbolImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="54" loc="294" coveredmethods="0" methods="28" elements="173" classes="1" ncloc="239" statements="101" conditionals="44" coveredstatements="0"/>
            <class name="ClassSymbolImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="54" coveredmethods="0" methods="28" elements="173" statements="101" conditionals="44" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="ClassSymbolImpl(ClassDef,String,PythonFile)" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassSymbolImpl(String,String)" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassSymbolImpl(String,String,LocationInFile,boolean,boolean,String)" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="4" visibility="package" signature="copyWithoutUsages() : ClassSymbolImpl" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="superClasses() : List&lt;Symbol&gt;" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="addSuperClass(Symbol) : void" num="114" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasUnresolvedTypeHierarchy() : boolean" num="121" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="hasUnresolvedTypeHierarchy(boolean) : boolean" num="126" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="declaredMembers() : Set&lt;Symbol&gt;" num="140" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="resolveMember(String) : Optional&lt;Symbol&gt;" num="146" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="149" type="cond"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="152" type="cond"/>
            <line num="153" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasMetaClass() : boolean" num="160" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="canHaveMember(String) : boolean" num="164" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="166" type="cond"/>
            <line num="167" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="170" type="cond"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="hasSuperClassWithUnknownMetaClass() : boolean" num="181" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="183" type="cond"/>
            <line num="184" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="186" type="cond"/>
            <line num="187" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="definitionLocation() : LocationInFile" num="194" count="0" type="method"/>
            <line num="196" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isOrExtends(String) : boolean" num="199" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isOrExtends(ClassSymbol) : boolean" num="204" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="canBeOrExtend(String) : boolean" num="210" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasDecorators() : boolean" num="216" count="0" type="method"/>
            <line num="218" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="membersByName() : Map&lt;String, Symbol&gt;" num="221" count="0" type="method"/>
            <line num="222" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="222" type="cond"/>
            <line num="223" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="addMembers(Collection&lt;Symbol&gt;) : void" num="228" count="0" type="method"/>
            <line num="229" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="229" type="cond"/>
            <line num="230" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setHasSuperClassWithoutSymbol() : void" num="238" count="0" type="method"/>
            <line num="239" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setHasMetaClass() : void" num="242" count="0" type="method"/>
            <line num="243" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setMetaclassFQN(String) : void" num="246" count="0" type="method"/>
            <line num="247" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="metaclassFQN() : String" num="250" count="0" type="method"/>
            <line num="252" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="allSuperClasses(boolean) : Set&lt;Symbol&gt;" num="255" count="0" type="method"/>
            <line num="256" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="256" type="cond"/>
            <line num="257" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="257" type="cond"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="263" type="cond"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="exploreSuperClasses(Symbol,Set&lt;Symbol&gt;,boolean) : void" num="270" count="0" type="method"/>
            <line num="271" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="271" type="cond"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="276" type="cond"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="removeUsages() : void" num="284" count="0" type="method"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="hasSuperClassWithoutSymbol() : boolean" num="291" count="0" type="method"/>
            <line num="292" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/semantic/FunctionSymbolImpl.java" name="FunctionSymbolImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="41" loc="313" coveredmethods="0" methods="31" elements="149" classes="3" ncloc="257" statements="98" conditionals="20" coveredstatements="0"/>
            <class name="FunctionSymbolImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="33" coveredmethods="0" methods="23" elements="127" statements="84" conditionals="20" coveredstatements="0"/>
            </class>
            <class name="FunctionSymbolImpl.ParameterState">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="FunctionSymbolImpl.ParameterImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="8" elements="22" statements="14" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="package" signature="FunctionSymbolImpl(FunctionDef,String,PythonFile)" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setParametersWithType(ParameterList) : void" num="77" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line complexity="1" visibility="package" signature="FunctionSymbolImpl(String,FunctionSymbol)" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="FunctionSymbolImpl(String,String,boolean,boolean,boolean,boolean,List&lt;Parameter&gt;,List&lt;String&gt;)" num="97" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="copyWithoutUsages() : FunctionSymbolImpl" num="111" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isInstanceMethod(FunctionDef) : boolean" num="118" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="decorators(FunctionDef) : List&lt;String&gt;" num="127" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="createParameterNames(List&lt;AnyParameter&gt;,String) : void" num="136" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="7" visibility="private" signature="addParameter(org.sonar.plugins.python.api.tree.Parameter,String,ParameterState) : void" num="154" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="157" type="cond"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="160" type="cond"/>
            <line num="161" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="165" type="cond"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="170" type="cond"/>
            <line num="171" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="171" type="cond"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="175" type="cond"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decorators() : List&lt;String&gt;" num="181" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parameters() : List&lt;Parameter&gt;" num="191" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isStub() : boolean" num="196" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isAsynchronous() : boolean" num="201" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasVariadicParameter() : boolean" num="206" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isInstanceMethod() : boolean" num="211" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasDecorators() : boolean" num="216" count="0" type="method"/>
            <line num="218" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="definitionLocation() : LocationInFile" num="221" count="0" type="method"/>
            <line num="223" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="declaredReturnType() : InferredType" num="226" count="0" type="method"/>
            <line num="227" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setAnnotatedReturnTypeName(TypeAnnotation) : void" num="230" count="0" type="method"/>
            <line num="231" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="annotatedReturnTypeName() : String" num="238" count="0" type="method"/>
            <line num="240" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDeclaredReturnType(InferredType) : void" num="243" count="0" type="method"/>
            <line num="244" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="owner() : Symbol" num="247" count="0" type="method"/>
            <line num="248" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setOwner(Symbol) : void" num="251" count="0" type="method"/>
            <line num="252" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="ParameterImpl(String,InferredType,boolean,boolean,ParameterState,LocationInFile)" num="265" count="0" type="method"/>
            <line num="267" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="276" count="0" type="method"/>
            <line num="279" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="declaredType() : InferredType" num="282" count="0" type="method"/>
            <line num="284" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasDefaultValue() : boolean" num="287" count="0" type="method"/>
            <line num="289" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isVariadic() : boolean" num="292" count="0" type="method"/>
            <line num="294" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isKeywordOnly() : boolean" num="297" count="0" type="method"/>
            <line num="299" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isPositionalOnly() : boolean" num="302" count="0" type="method"/>
            <line num="304" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="location() : LocationInFile" num="307" count="0" type="method"/>
            <line num="310" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/semantic/ProjectLevelSymbolTable.java" name="ProjectLevelSymbolTable.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="14" loc="102" coveredmethods="3" methods="8" elements="39" classes="1" ncloc="71" statements="23" conditionals="8" coveredstatements="3"/>
            <class name="ProjectLevelSymbolTable">
               <metrics coveredelements="6" coveredconditionals="0" complexity="14" coveredmethods="3" methods="8" elements="39" statements="23" conditionals="8" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="empty() : ProjectLevelSymbolTable" num="43" count="309" type="method"/>
            <line num="44" count="309" type="stmt"/>
            <line complexity="1" visibility="public" signature="from(Map&lt;String, Set&lt;Symbol&gt;&gt;) : ProjectLevelSymbolTable" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ProjectLevelSymbolTable()" num="51" count="225" type="method"/>
            <line num="52" count="225" type="stmt"/>
            <line complexity="1" visibility="private" signature="ProjectLevelSymbolTable(Map&lt;String, Set&lt;Symbol&gt;&gt;)" num="55" count="309" type="method"/>
            <line num="56" count="309" type="stmt"/>
            <line complexity="6" visibility="public" signature="addModule(FileInput,String,PythonFile) : void" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="globalSymbolsByFQN() : Map&lt;String, Symbol&gt;" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSymbol(String) : Symbol" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSymbolsFromModule(String) : Set&lt;Symbol&gt;" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/semantic/Scope.java" name="Scope.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="51" loc="269" coveredmethods="0" methods="17" elements="188" classes="1" ncloc="229" statements="123" conditionals="48" coveredstatements="0"/>
            <class name="Scope">
               <metrics coveredelements="0" coveredconditionals="0" complexity="51" coveredmethods="0" methods="17" elements="188" statements="123" conditionals="48" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="Scope(Scope,Tree,PythonFile,String,ProjectLevelSymbolTable)" num="58" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="symbols() : Set&lt;Symbol&gt;" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="createBuiltinSymbol(String,Map&lt;String, Symbol&gt;) : void" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="3" visibility="package" signature="createSymbolsFromWildcardImport(Set&lt;Symbol&gt;,ImportFrom) : void" num="83" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="createSelfParameter(Parameter) : void" num="100" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="addFunctionSymbol(FunctionDef,String) : void" num="112" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="8" visibility="private" signature="copySymbol(String,Symbol) : Symbol" num="125" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="7" visibility="package" signature="addModuleSymbol(Name,String) : void" num="165" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="168" type="cond"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="175" type="cond"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="6" visibility="package" signature="addImportedSymbol(Name,String,String) : void" num="185" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="188" type="cond"/>
            <line num="189" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="191" type="cond"/>
            <line num="192" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isExistingSymbol(String) : boolean" num="201" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="3" visibility="package" signature="addBindingUsage(Name,Usage.Kind,String) : void" num="205" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="207" type="cond"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="213" type="cond"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="resetSymbolInfo(String,SymbolImpl) : void" num="219" count="0" type="method"/>
            <line num="220" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="220" type="cond"/>
            <line num="221" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="223" type="cond"/>
            <line num="224" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="226" type="cond"/>
            <line num="227" count="0" type="stmt"/>
            <line complexity="4" visibility="package" signature="resolve(String) : SymbolImpl" num="231" count="0" type="method"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="234" type="cond"/>
            <line num="235" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="237" type="cond"/>
            <line num="238" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="addGlobalName(String) : void" num="243" count="0" type="method"/>
            <line num="244" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="addNonLocalName(String) : void" num="247" count="0" type="method"/>
            <line num="248" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="addClassSymbol(ClassDef,String) : void" num="251" count="0" type="method"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="253" type="cond"/>
            <line num="254" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="replaceSymbolWithAmbiguousSymbol(Symbol,AmbiguousSymbol) : void" num="263" count="0" type="method"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/semantic/SelfSymbolImpl.java" name="SelfSymbolImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="45" coveredmethods="0" methods="3" elements="9" classes="1" ncloc="20" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="SelfSymbolImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="9" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="SelfSymbolImpl(String,Scope)" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="addOrCreateChildUsage(Name,Usage.Kind) : void" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="removeUsages() : void" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/semantic/SymbolImpl.java" name="SymbolImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="25" loc="169" coveredmethods="0" methods="19" elements="75" classes="1" ncloc="128" statements="44" conditionals="12" coveredstatements="0"/>
            <class name="SymbolImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="25" coveredmethods="0" methods="19" elements="75" statements="44" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SymbolImpl(String,String)" num="53" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SymbolImpl(String,String,String)" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="usages() : List&lt;Usage&gt;" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fullyQualifiedName() : String" num="76" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="is(Kind) : boolean" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="kind() : Kind" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setKind(Kind) : void" num="98" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="addUsage(Tree,Usage.Kind) : void" num="102" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="3" visibility="package" signature="addOrCreateChildUsage(Name,Usage.Kind) : void" num="111" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="addChildSymbol(Symbol) : void" num="124" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inferredType() : InferredType" num="128" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInferredType(InferredType) : void" num="132" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="annotatedTypeName() : String" num="136" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setAnnotatedTypeName(TypeAnnotation) : void" num="141" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="copyWithoutUsages() : SymbolImpl" num="145" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="removeUsages() : void" num="149" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getChildrenSymbolByName() : Map&lt;String, Symbol&gt;" num="154" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="3" visibility="package" signature="getTypeSymbolFromExpression(Expression) : Symbol" num="158" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="160" type="cond"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/semantic/SymbolTableBuilder.java" name="SymbolTableBuilder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="109" loc="707" coveredmethods="0" methods="55" elements="421" classes="6" ncloc="594" statements="282" conditionals="84" coveredstatements="0"/>
            <class name="SymbolTableBuilder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="24" coveredmethods="0" methods="8" elements="114" statements="82" conditionals="24" coveredstatements="0"/>
            </class>
            <class name="SymbolTableBuilder.SymbolToUpdate">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SymbolTableBuilder.ScopeVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SymbolTableBuilder.FirstPhaseVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="58" coveredmethods="0" methods="29" elements="199" statements="124" conditionals="46" coveredstatements="0"/>
            </class>
            <class name="SymbolTableBuilder.SecondPhaseVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="17" coveredmethods="0" methods="11" elements="81" statements="60" conditionals="10" coveredstatements="0"/>
            </class>
            <class name="SymbolTableBuilder.ThirdPhaseVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="2" elements="16" statements="10" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SymbolTableBuilder(PythonFile)" num="102" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SymbolTableBuilder(String,PythonFile)" num="109" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="SymbolTableBuilder(String,PythonFile,ProjectLevelSymbolTable)" num="113" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitFileInput(FileInput) : void" num="124" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="SymbolToUpdate(Symbol,AmbiguousSymbol)" num="142" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="createAmbiguousSymbols() : void" num="148" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="152" type="cond"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="154" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getAlternativeDefinitions(Symbol,List&lt;Usage&gt;) : Set&lt;Symbol&gt;" num="169" count="0" type="method"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="7" visibility="private" signature="addSymbolsToTree(FileInputImpl) : void" num="195" count="0" type="method"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="197" type="cond"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="200" type="cond"/>
            <line num="201" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="206" type="cond"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="216" type="cond"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="218" type="cond"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="220" type="cond"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getClassMembers(Map&lt;String, Symbol&gt;,Map&lt;String, SymbolImpl&gt;) : Set&lt;Symbol&gt;" num="226" count="0" type="method"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="230" type="cond"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="232" type="cond"/>
            <line num="234" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="currentScopeRootTree() : Tree" num="250" count="0" type="method"/>
            <line num="251" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="enterScope(Tree) : void" num="254" count="0" type="method"/>
            <line num="255" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="leaveScope() : Tree" num="258" count="0" type="method"/>
            <line num="259" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="currentScope() : Scope" num="262" count="0" type="method"/>
            <line num="263" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="visitFileInput(FileInput) : void" num="269" count="0" type="method"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="274" type="cond"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitLambda(LambdaExpression) : void" num="283" count="0" type="method"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitDictCompExpression(DictCompExpressionImpl) : void" num="292" count="0" type="method"/>
            <line num="294" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitPyListOrSetCompExpression(ComprehensionExpression) : void" num="300" count="0" type="method"/>
            <line num="302" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFunctionDef(FunctionDef) : void" num="308" count="0" type="method"/>
            <line num="310" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitClassDef(ClassDef) : void" num="320" count="0" type="method"/>
            <line num="322" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getFullyQualifiedName(String) : String" num="331" count="0" type="method"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="334" type="cond"/>
            <line num="335" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="335" type="cond"/>
            <line num="337" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="scopeQualifiedName() : String" num="340" count="0" type="method"/>
            <line num="341" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="342" type="cond"/>
            <line num="343" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="343" type="cond"/>
            <line num="346" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitImportName(ImportName) : void" num="351" count="0" type="method"/>
            <line num="353" count="0" type="stmt"/>
            <line num="354" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="visitImportFrom(ImportFrom) : void" num="357" count="0" type="method"/>
            <line num="359" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="360" type="cond"/>
            <line num="363" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="363" type="cond"/>
            <line num="364" count="0" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="365" type="cond"/>
            <line num="366" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="368" type="cond"/>
            <line num="369" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line num="372" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="createImportedNames(List&lt;AliasedName&gt;,String,List&lt;Token&gt;) : void" num="380" count="0" type="method"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="384" type="cond"/>
            <line num="387" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="387" type="cond"/>
            <line num="388" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line num="391" count="0" type="stmt"/>
            <line num="392" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="392" type="cond"/>
            <line num="393" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="393" type="cond"/>
            <line num="394" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="394" type="cond"/>
            <line num="395" count="0" type="stmt"/>
            <line num="396" count="0" type="stmt"/>
            <line num="399" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="resolveFullyQualifiedNameBasedOnRelativeImport(List&lt;Token&gt;,String) : String" num="404" count="0" type="method"/>
            <line num="406" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="406" type="cond"/>
            <line num="407" count="0" type="stmt"/>
            <line num="409" count="0" type="stmt"/>
            <line num="410" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="410" type="cond"/>
            <line num="411" count="0" type="stmt"/>
            <line num="413" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="413" type="cond"/>
            <line complexity="1" visibility="public" signature="visitForStatement(ForStatement) : void" num="416" count="0" type="method"/>
            <line num="418" count="0" type="stmt"/>
            <line num="419" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitComprehensionFor(ComprehensionFor) : void" num="422" count="0" type="method"/>
            <line num="424" count="0" type="stmt"/>
            <line num="425" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="addCompDeclarationParam(Tree) : void" num="428" count="0" type="method"/>
            <line num="429" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="createLoopVariables(ForStatement) : void" num="432" count="0" type="method"/>
            <line num="433" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="createParameters(FunctionLike) : void" num="437" count="0" type="method"/>
            <line num="438" count="0" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="439" type="cond"/>
            <line num="440" count="0" type="stmt"/>
            <line num="443" count="0" type="stmt"/>
            <line num="444" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="444" type="cond"/>
            <line num="445" count="0" type="stmt"/>
            <line num="446" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="446" type="cond"/>
            <line num="447" count="0" type="stmt"/>
            <line num="448" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="454" type="cond"/>
            <line num="459" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="addTupleParamElementsToBindingUsage(TupleParameter) : void" num="465" count="0" type="method"/>
            <line num="466" count="0" type="stmt"/>
            <line num="470" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitAssignmentStatement(AssignmentStatement) : void" num="476" count="0" type="method"/>
            <line num="478" count="0" type="stmt"/>
            <line num="480" count="0" type="stmt"/>
            <line num="482" count="0" type="stmt"/>
            <line num="484" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitAnnotatedAssignment(AnnotatedAssignment) : void" num="487" count="0" type="method"/>
            <line num="489" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="489" type="cond"/>
            <line num="490" count="0" type="stmt"/>
            <line num="491" count="0" type="stmt"/>
            <line num="493" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitCompoundAssignment(CompoundAssignmentStatement) : void" num="496" count="0" type="method"/>
            <line num="498" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="498" type="cond"/>
            <line num="499" count="0" type="stmt"/>
            <line num="501" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitAssignmentExpression(AssignmentExpression) : void" num="504" count="0" type="method"/>
            <line num="506" count="0" type="stmt"/>
            <line num="507" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitGlobalStatement(GlobalStatement) : void" num="510" count="0" type="method"/>
            <line num="512" count="0" type="stmt"/>
            <line num="515" count="0" type="stmt"/>
            <line num="516" count="0" type="stmt"/>
            <line num="519" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitNonlocalStatement(NonlocalStatement) : void" num="522" count="0" type="method"/>
            <line num="524" count="0" type="stmt"/>
            <line num="527" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitExceptClause(ExceptClause) : void" num="530" count="0" type="method"/>
            <line num="532" count="0" type="stmt"/>
            <line num="533" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitWithItem(WithItem) : void" num="536" count="0" type="method"/>
            <line num="538" count="0" type="stmt"/>
            <line num="539" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="createScope(Tree,Scope) : void" num="542" count="0" type="method"/>
            <line num="543" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="addBindingUsage(Name,Usage.Kind) : void" num="546" count="0" type="method"/>
            <line num="547" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="addBindingUsage(Name,Usage.Kind,String) : void" num="550" count="0" type="method"/>
            <line num="551" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFileInput(FileInput) : void" num="562" count="0" type="method"/>
            <line num="564" count="0" type="stmt"/>
            <line num="565" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFunctionDef(FunctionDef) : void" num="568" count="0" type="method"/>
            <line num="570" count="0" type="stmt"/>
            <line num="571" count="0" type="stmt"/>
            <line num="572" count="0" type="stmt"/>
            <line num="573" count="0" type="stmt"/>
            <line num="574" count="0" type="stmt"/>
            <line num="575" count="0" type="stmt"/>
            <line num="576" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitParameter(Parameter) : void" num="579" count="0" type="method"/>
            <line num="582" count="0" type="stmt"/>
            <line num="583" count="0" type="stmt"/>
            <line num="584" count="0" type="stmt"/>
            <line num="585" count="0" type="stmt"/>
            <line num="586" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitLambda(LambdaExpression) : void" num="589" count="0" type="method"/>
            <line num="591" count="0" type="stmt"/>
            <line num="592" count="0" type="stmt"/>
            <line num="593" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitPyListOrSetCompExpression(ComprehensionExpression) : void" num="596" count="0" type="method"/>
            <line num="598" count="0" type="stmt"/>
            <line num="599" count="0" type="stmt"/>
            <line num="600" count="0" type="stmt"/>
            <line num="601" count="0" type="stmt"/>
            <line num="602" count="0" type="stmt"/>
            <line num="603" count="0" type="stmt"/>
            <line num="604" count="0" type="stmt"/>
            <line num="605" count="0" type="stmt"/>
            <line num="606" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitDictCompExpression(DictCompExpressionImpl) : void" num="609" count="0" type="method"/>
            <line num="611" count="0" type="stmt"/>
            <line num="612" count="0" type="stmt"/>
            <line num="613" count="0" type="stmt"/>
            <line num="614" count="0" type="stmt"/>
            <line num="615" count="0" type="stmt"/>
            <line num="616" count="0" type="stmt"/>
            <line num="617" count="0" type="stmt"/>
            <line num="618" count="0" type="stmt"/>
            <line num="619" count="0" type="stmt"/>
            <line num="620" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitClassDef(ClassDef) : void" num="623" count="0" type="method"/>
            <line num="625" count="0" type="stmt"/>
            <line num="626" count="0" type="stmt"/>
            <line num="627" count="0" type="stmt"/>
            <line num="628" count="0" type="stmt"/>
            <line num="629" count="0" type="stmt"/>
            <line num="630" count="0" type="stmt"/>
            <line num="631" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="visitQualifiedExpression(QualifiedExpression) : void" num="634" count="0" type="method"/>
            <line num="637" count="0" type="stmt"/>
            <line num="638" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="638" type="cond"/>
            <line num="639" count="0" type="stmt"/>
            <line num="640" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="640" type="cond"/>
            <line num="641" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="641" type="cond"/>
            <line num="642" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitDecorator(Decorator) : void" num="647" count="0" type="method"/>
            <line num="649" count="0" type="stmt"/>
            <line num="650" count="0" type="stmt"/>
            <line num="651" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitName(Name) : void" num="654" count="0" type="method"/>
            <line num="656" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="656" type="cond"/>
            <line num="657" count="0" type="stmt"/>
            <line num="659" count="0" type="stmt"/>
            <line num="660" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="addSymbolUsage(Name) : void" num="663" count="0" type="method"/>
            <line num="664" count="0" type="stmt"/>
            <line num="665" count="0" type="stmt"/>
            <line num="667" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="667" type="cond"/>
            <line num="668" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="visitFunctionDef(FunctionDef) : void" num="675" count="0" type="method"/>
            <line num="677" count="0" type="stmt"/>
            <line num="678" count="0" type="stmt"/>
            <line num="679" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="679" type="cond"/>
            <line num="680" count="0" type="stmt"/>
            <line num="681" count="0" type="stmt"/>
            <line num="683" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitQualifiedExpression(QualifiedExpression) : void" num="694" count="0" type="method"/>
            <line num="696" count="0" type="stmt"/>
            <line num="697" count="0" type="stmt"/>
            <line num="702" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="702" type="cond"/>
            <line num="703" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/semantic/SymbolUtils.java" name="SymbolUtils.java">
            <metrics coveredelements="36" coveredconditionals="11" complexity="61" loc="280" coveredmethods="4" methods="16" elements="188" classes="1" ncloc="225" statements="104" conditionals="68" coveredstatements="21"/>
            <class name="SymbolUtils">
               <metrics coveredelements="36" coveredconditionals="11" complexity="61" coveredmethods="4" methods="16" elements="188" statements="104" conditionals="68" coveredstatements="21"/>
            </class>
            <line complexity="1" visibility="private" signature="SymbolUtils()" num="64" count="0" type="method"/>
            <line complexity="2" visibility="public" signature="getModuleFileName(String) : String" num="67" count="203" type="method"/>
            <line num="68" count="203" type="stmt"/>
            <line num="69" count="203" type="stmt"/>
            <line falsecount="31" truecount="172" num="69" type="cond"/>
            <line complexity="3" visibility="public" signature="fullyQualifiedModuleName(String,String) : String" num="74" count="107" type="method"/>
            <line num="75" count="107" type="stmt"/>
            <line num="76" count="107" type="stmt"/>
            <line falsecount="106" truecount="1" num="76" type="cond"/>
            <line num="77" count="1" type="stmt"/>
            <line num="79" count="106" type="stmt"/>
            <line falsecount="20" truecount="86" num="79" type="cond"/>
            <line complexity="7" visibility="package" signature="resolveTypeHierarchy(ClassDef,Symbol,PythonFile,Map&lt;String, Symbol&gt;) : void" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="addParentClass(PythonFile,Map&lt;String, Symbol&gt;,ClassSymbolImpl,RegularArgument) : void" num="107" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="119" type="cond"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="normalizeSymbol(Symbol,PythonFile,Map&lt;String, Symbol&gt;) : Symbol" num="132" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="134" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="138" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isBuiltinTypeshedFile(PythonFile) : boolean" num="144" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isTypingFile(PythonFile) : boolean" num="148" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getSymbolFromArgument(RegularArgument) : Symbol" num="152" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="159" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assignmentsLhs(AssignmentStatement) : List&lt;Expression&gt;" num="165" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="7" visibility="package" signature="boundNamesFromExpression(Tree) : List&lt;Name&gt;" num="172" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="174" type="cond"/>
            <line num="175" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="177" type="cond"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="179" type="cond"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="181" type="cond"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="183" type="cond"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="185" type="cond"/>
            <line num="186" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="pythonPackageName(File,File) : String" num="191" count="9" type="method"/>
            <line num="192" count="9" type="stmt"/>
            <line num="193" count="9" type="stmt"/>
            <line num="194" count="9" type="stmt"/>
            <line falsecount="0" truecount="8" num="194" type="cond"/>
            <line num="195" count="8" type="stmt"/>
            <line num="196" count="8" type="stmt"/>
            <line falsecount="5" truecount="3" num="196" type="cond"/>
            <line num="197" count="3" type="stmt"/>
            <line num="199" count="5" type="stmt"/>
            <line num="200" count="5" type="stmt"/>
            <line num="202" count="9" type="stmt"/>
            <line complexity="3" visibility="public" signature="pathOf(PythonFile) : Path" num="205" count="3" type="method"/>
            <line num="207" count="3" type="stmt"/>
            <line num="208" count="3" type="stmt"/>
            <line num="209" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="209" type="cond"/>
            <line num="210" count="1" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line num="214" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isTypeShedFile(PythonFile) : boolean" num="218" count="0" type="method"/>
            <line num="219" count="0" type="stmt"/>
            <line complexity="11" visibility="public" signature="firstParameterOffset(FunctionSymbol,boolean) : int" num="228" count="0" type="method"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="230" type="cond"/>
            <line num="231" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="234" type="cond"/>
            <line num="236" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="239" type="cond"/>
            <line num="241" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="243" type="cond"/>
            <line num="245" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="247" type="cond"/>
            <line num="249" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="251" type="cond"/>
            <line num="253" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getOverriddenMethod(FunctionSymbol) : Optional&lt;FunctionSymbol&gt;" num="259" count="0" type="method"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="261" type="cond"/>
            <line num="262" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="265" type="cond"/>
            <line num="266" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="269" type="cond"/>
            <line num="270" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="273" type="cond"/>
            <line num="274" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/semantic/UsageImpl.java" name="UsageImpl.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="3" loc="44" coveredmethods="2" methods="3" elements="7" classes="1" ncloc="19" statements="4" conditionals="0" coveredstatements="3"/>
            <class name="UsageImpl">
               <metrics coveredelements="5" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="UsageImpl(Tree,Kind)" num="30" count="7" type="method"/>
            <line num="31" count="7" type="stmt"/>
            <line num="32" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="tree() : Tree" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="kind() : Kind" num="40" count="20" type="method"/>
            <line num="42" count="20" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.plugins.python.api.tree">
         <metrics coveredelements="23" complexity="87" loc="4286" methods="83" classes="91" statements="136" coveredconditionals="3" coveredmethods="10" elements="227" ncloc="1252" files="90" conditionals="8" coveredstatements="10"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/AliasedName.java" name="AliasedName.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="41" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AliasedName">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/AnnotatedAssignment.java" name="AnnotatedAssignment.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="42" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AnnotatedAssignment">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/AnyParameter.java" name="AnyParameter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="23" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AnyParameter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/ArgList.java" name="ArgList.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="26" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ArgList">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/Argument.java" name="Argument.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="26" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Argument">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/AssertStatement.java" name="AssertStatement.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="38" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AssertStatement">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/AssignmentExpression.java" name="AssignmentExpression.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="36" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AssignmentExpression">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/AssignmentStatement.java" name="AssignmentStatement.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="37" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AssignmentStatement">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/AwaitExpression.java" name="AwaitExpression.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="35" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AwaitExpression">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/BaseTreeVisitor.java" name="BaseTreeVisitor.java">
            <metrics coveredelements="23" coveredconditionals="3" complexity="80" loc="475" coveredmethods="10" methods="77" elements="211" classes="1" ncloc="366" statements="128" conditionals="6" coveredstatements="10"/>
            <class name="BaseTreeVisitor">
               <metrics coveredelements="23" coveredconditionals="3" complexity="80" coveredmethods="10" methods="77" elements="211" statements="128" conditionals="6" coveredstatements="10"/>
            </class>
            <line complexity="2" visibility="protected" signature="scan(Tree) : void" num="31" count="34" type="method"/>
            <line num="32" count="34" type="stmt"/>
            <line falsecount="0" truecount="33" num="32" type="cond"/>
            <line num="33" count="33" type="stmt"/>
            <line complexity="2" visibility="protected" signature="scan(List&lt;? extends Tree&gt;) : void" num="37" count="23" type="method"/>
            <line num="38" count="23" type="stmt"/>
            <line falsecount="0" truecount="23" num="38" type="cond"/>
            <line num="39" count="23" type="stmt"/>
            <line num="40" count="23" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFileInput(FileInput) : void" num="45" count="4" type="method"/>
            <line num="47" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitStatementList(StatementList) : void" num="50" count="3" type="method"/>
            <line num="52" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitIfStatement(IfStatement) : void" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitElseClause(ElseClause) : void" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitExecStatement(ExecStatement) : void" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitAssertStatement(AssertStatement) : void" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitDelStatement(DelStatement) : void" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitPassStatement(PassStatement) : void" num="86" count="2" type="method"/>
            <line complexity="1" visibility="public" signature="visitPrintStatement(PrintStatement) : void" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitReturnStatement(ReturnStatement) : void" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitYieldStatement(YieldStatement) : void" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitYieldExpression(YieldExpression) : void" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitRaiseStatement(RaiseStatement) : void" num="111" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitBreakStatement(BreakStatement) : void" num="117" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="visitContinueStatement(ContinueStatement) : void" num="122" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="visitFunctionDef(FunctionDef) : void" num="127" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitName(Name) : void" num="136" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="visitClassDef(ClassDef) : void" num="141" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitAliasedName(AliasedName) : void" num="149" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitDottedName(DottedName) : void" num="155" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitImportFrom(ImportFrom) : void" num="160" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitForStatement(ForStatement) : void" num="166" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitImportName(ImportName) : void" num="174" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitGlobalStatement(GlobalStatement) : void" num="179" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitNonlocalStatement(NonlocalStatement) : void" num="184" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitWhileStatement(WhileStatement) : void" num="189" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitExpressionStatement(ExpressionStatement) : void" num="196" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitTryStatement(TryStatement) : void" num="201" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFinallyClause(FinallyClause) : void" num="209" count="0" type="method"/>
            <line num="211" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitExceptClause(ExceptClause) : void" num="214" count="0" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitWithStatement(WithStatement) : void" num="221" count="0" type="method"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitWithItem(WithItem) : void" num="227" count="0" type="method"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitQualifiedExpression(QualifiedExpression) : void" num="233" count="0" type="method"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitCallExpression(CallExpression) : void" num="239" count="0" type="method"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitArgumentList(ArgList) : void" num="245" count="0" type="method"/>
            <line num="247" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitRegularArgument(RegularArgument) : void" num="250" count="0" type="method"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitAssignmentStatement(AssignmentStatement) : void" num="256" count="0" type="method"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitAssignmentExpression(AssignmentExpression) : void" num="262" count="0" type="method"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitExpressionList(ExpressionList) : void" num="268" count="0" type="method"/>
            <line num="270" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitBinaryExpression(BinaryExpression) : void" num="273" count="0" type="method"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitLambda(LambdaExpression) : void" num="279" count="0" type="method"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitParameterList(ParameterList) : void" num="285" count="0" type="method"/>
            <line num="287" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitTupleParameter(TupleParameter) : void" num="290" count="0" type="method"/>
            <line num="292" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitParameter(Parameter) : void" num="295" count="0" type="method"/>
            <line num="297" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitTypeAnnotation(TypeAnnotation) : void" num="302" count="0" type="method"/>
            <line num="304" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitNumericLiteral(NumericLiteral) : void" num="307" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="visitStringLiteral(StringLiteral) : void" num="312" count="15" type="method"/>
            <line num="314" count="15" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitStringElement(StringElement) : void" num="317" count="16" type="method"/>
            <line num="319" count="16" type="stmt"/>
            <line falsecount="15" truecount="0" num="319" type="cond"/>
            <line num="320" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitListLiteral(ListLiteral) : void" num="324" count="0" type="method"/>
            <line num="326" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitUnaryExpression(UnaryExpression) : void" num="329" count="0" type="method"/>
            <line num="331" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitUnpackingExpression(UnpackingExpression) : void" num="334" count="0" type="method"/>
            <line num="336" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitAwaitExpression(AwaitExpression) : void" num="339" count="0" type="method"/>
            <line num="341" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitSliceExpression(SliceExpression) : void" num="344" count="0" type="method"/>
            <line num="346" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitSliceList(SliceList) : void" num="350" count="0" type="method"/>
            <line num="352" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitSliceItem(SliceItem) : void" num="355" count="0" type="method"/>
            <line num="357" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitSubscriptionExpression(SubscriptionExpression) : void" num="362" count="0" type="method"/>
            <line num="364" count="0" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitParenthesizedExpression(ParenthesizedExpression) : void" num="368" count="1" type="method"/>
            <line num="370" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitTuple(Tuple) : void" num="373" count="0" type="method"/>
            <line num="375" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitConditionalExpression(ConditionalExpression) : void" num="378" count="0" type="method"/>
            <line num="380" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitPyListOrSetCompExpression(ComprehensionExpression) : void" num="385" count="0" type="method"/>
            <line num="387" count="0" type="stmt"/>
            <line num="388" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitComprehensionFor(ComprehensionFor) : void" num="391" count="0" type="method"/>
            <line num="393" count="0" type="stmt"/>
            <line num="394" count="0" type="stmt"/>
            <line num="395" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitComprehensionIf(ComprehensionIf) : void" num="398" count="0" type="method"/>
            <line num="400" count="0" type="stmt"/>
            <line num="401" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitDictionaryLiteral(DictionaryLiteral) : void" num="404" count="0" type="method"/>
            <line num="406" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitSetLiteral(SetLiteral) : void" num="409" count="0" type="method"/>
            <line num="411" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitKeyValuePair(KeyValuePair) : void" num="414" count="0" type="method"/>
            <line num="416" count="0" type="stmt"/>
            <line num="417" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitDictCompExpression(DictCompExpressionImpl) : void" num="420" count="0" type="method"/>
            <line num="422" count="0" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line num="424" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitCompoundAssignment(CompoundAssignmentStatement) : void" num="427" count="0" type="method"/>
            <line num="429" count="0" type="stmt"/>
            <line num="430" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitAnnotatedAssignment(AnnotatedAssignment) : void" num="433" count="0" type="method"/>
            <line num="435" count="0" type="stmt"/>
            <line num="436" count="0" type="stmt"/>
            <line num="437" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitNone(NoneExpression) : void" num="440" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="visitRepr(ReprExpression) : void" num="445" count="0" type="method"/>
            <line num="447" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitEllipsis(EllipsisExpression) : void" num="450" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="visitDecorator(Decorator) : void" num="455" count="0" type="method"/>
            <line num="457" count="0" type="stmt"/>
            <line num="458" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitToken(Token) : void" num="461" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="visitFormattedExpression(FormattedExpression) : void" num="465" count="0" type="method"/>
            <line num="467" count="0" type="stmt"/>
            <line num="468" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFormatSpecifier(FormatSpecifier) : void" num="471" count="0" type="method"/>
            <line num="473" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/BinaryExpression.java" name="BinaryExpression.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="35" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="BinaryExpression">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/BreakStatement.java" name="BreakStatement.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="27" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="BreakStatement">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/CallExpression.java" name="CallExpression.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="55" coveredmethods="0" methods="1" elements="6" classes="1" ncloc="19" statements="3" conditionals="2" coveredstatements="0"/>
            <class name="CallExpression">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="1" elements="6" statements="3" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="package" signature="calleeSymbol() : Symbol" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/ClassDef.java" name="ClassDef.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="71" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="22" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ClassDef">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/CompoundAssignmentStatement.java" name="CompoundAssignmentStatement.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="37" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="CompoundAssignmentStatement">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/ComprehensionClause.java" name="ComprehensionClause.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="29" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ComprehensionClause">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/ComprehensionExpression.java" name="ComprehensionExpression.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="51" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ComprehensionExpression">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/ComprehensionFor.java" name="ComprehensionFor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="44" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ComprehensionFor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/ComprehensionIf.java" name="ComprehensionIf.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="35" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ComprehensionIf">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/ConditionalExpression.java" name="ConditionalExpression.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="41" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ConditionalExpression">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/ContinueStatement.java" name="ContinueStatement.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="27" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ContinueStatement">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/Decorator.java" name="Decorator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="46" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Decorator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/DelStatement.java" name="DelStatement.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="37" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="DelStatement">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/DictCompExpression.java" name="DictCompExpression.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="46" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="DictCompExpression">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/DictionaryLiteral.java" name="DictionaryLiteral.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="43" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="DictionaryLiteral">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/DictionaryLiteralElement.java" name="DictionaryLiteralElement.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="26" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="DictionaryLiteralElement">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/DottedName.java" name="DottedName.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="30" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="DottedName">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/EllipsisExpression.java" name="EllipsisExpression.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="34" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="EllipsisExpression">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/ElseClause.java" name="ElseClause.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="36" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ElseClause">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/ExceptClause.java" name="ExceptClause.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="54" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="14" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ExceptClause">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/ExecStatement.java" name="ExecStatement.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="44" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ExecStatement">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/Expression.java" name="Expression.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="33" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="Expression">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="type() : InferredType" num="28" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/ExpressionList.java" name="ExpressionList.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="34" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ExpressionList">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/ExpressionStatement.java" name="ExpressionStatement.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="29" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ExpressionStatement">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/FileInput.java" name="FileInput.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="44" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FileInput">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/FinallyClause.java" name="FinallyClause.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="34" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FinallyClause">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/ForStatement.java" name="ForStatement.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="54" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="16" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ForStatement">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/FormatSpecifier.java" name="FormatSpecifier.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="33" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FormatSpecifier">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/FormattedExpression.java" name="FormattedExpression.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="40" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FormattedExpression">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/FunctionDef.java" name="FunctionDef.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="63" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="18" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FunctionDef">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/FunctionLike.java" name="FunctionLike.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="39" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FunctionLike">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/GlobalStatement.java" name="GlobalStatement.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="35" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="GlobalStatement">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/HasSymbol.java" name="HasSymbol.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="32" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="HasSymbol">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/IfStatement.java" name="IfStatement.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="59" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="IfStatement">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/ImportFrom.java" name="ImportFrom.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="59" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="15" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ImportFrom">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/ImportName.java" name="ImportName.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="37" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ImportName">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/ImportStatement.java" name="ImportStatement.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="28" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ImportStatement">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/InExpression.java" name="InExpression.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="36" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="InExpression">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/IsExpression.java" name="IsExpression.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="36" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="IsExpression">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/KeyValuePair.java" name="KeyValuePair.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="35" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="KeyValuePair">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/LambdaExpression.java" name="LambdaExpression.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="35" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="LambdaExpression">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/ListLiteral.java" name="ListLiteral.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="36" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ListLiteral">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/Name.java" name="Name.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="31" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Name">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/NoneExpression.java" name="NoneExpression.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="27" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="NoneExpression">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/NonlocalStatement.java" name="NonlocalStatement.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="35" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="NonlocalStatement">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/NumericLiteral.java" name="NumericLiteral.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="33" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="NumericLiteral">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/Parameter.java" name="Parameter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="57" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="14" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Parameter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/ParameterList.java" name="ParameterList.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="35" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ParameterList">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/ParenthesizedExpression.java" name="ParenthesizedExpression.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="37" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ParenthesizedExpression">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/PassStatement.java" name="PassStatement.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="27" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="PassStatement">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/PrintStatement.java" name="PrintStatement.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="38" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="PrintStatement">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/QualifiedExpression.java" name="QualifiedExpression.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="59" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="19" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="QualifiedExpression">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="symbol() : Symbol" num="45" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="usage() : Usage" num="54" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/RaiseStatement.java" name="RaiseStatement.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="43" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="RaiseStatement">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/RegularArgument.java" name="RegularArgument.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="37" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="RegularArgument">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/ReprExpression.java" name="ReprExpression.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="37" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ReprExpression">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/ReturnStatement.java" name="ReturnStatement.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="35" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ReturnStatement">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/SetLiteral.java" name="SetLiteral.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="41" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SetLiteral">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/SliceExpression.java" name="SliceExpression.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="41" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SliceExpression">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/SliceItem.java" name="SliceItem.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="55" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="13" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SliceItem">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/SliceList.java" name="SliceList.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="30" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SliceList">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/Statement.java" name="Statement.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="27" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="6" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="Statement">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="separator() : Token" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/StatementList.java" name="StatementList.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="28" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="StatementList">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/StringElement.java" name="StringElement.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="56" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="StringElement">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/StringLiteral.java" name="StringLiteral.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="32" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="StringLiteral">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/SubscriptionExpression.java" name="SubscriptionExpression.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="41" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SubscriptionExpression">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/Token.java" name="Token.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="37" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Token">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/Tree.java" name="Tree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="219" coveredmethods="0" methods="1" elements="2" classes="2" ncloc="116" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="Tree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Tree.Kind">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="Kind(Class&lt;? extends Tree&gt;)" num="212" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/TreeVisitor.java" name="TreeVisitor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="175" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="79" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TreeVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/Trivia.java" name="Trivia.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="30" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Trivia">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/TryStatement.java" name="TryStatement.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="62" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TryStatement">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/Tuple.java" name="Tuple.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="60" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Tuple">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/TupleParameter.java" name="TupleParameter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="45" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TupleParameter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/TypeAnnotation.java" name="TypeAnnotation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="40" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TypeAnnotation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/UnaryExpression.java" name="UnaryExpression.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="35" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="UnaryExpression">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/UnpackingExpression.java" name="UnpackingExpression.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="38" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="UnpackingExpression">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/WhileStatement.java" name="WhileStatement.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="44" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="WhileStatement">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/WithItem.java" name="WithItem.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="42" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="WithItem">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/WithStatement.java" name="WithStatement.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="47" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="WithStatement">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/YieldExpression.java" name="YieldExpression.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="45" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="YieldExpression">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/tree/YieldStatement.java" name="YieldStatement.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="27" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="YieldStatement">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="org.sonar.python.cfg">
         <metrics coveredelements="21" complexity="92" loc="731" methods="56" classes="7" statements="230" coveredconditionals="4" coveredmethods="5" elements="336" ncloc="505" files="6" conditionals="50" coveredstatements="12"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/cfg/CfgUtils.java" name="CfgUtils.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="53" coveredmethods="0" methods="3" elements="18" classes="1" ncloc="28" statements="11" conditionals="4" coveredstatements="0"/>
            <class name="CfgUtils">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="3" elements="18" statements="11" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="CfgUtils()" num="31" count="0" type="method"/>
            <line complexity="3" visibility="public" signature="unreachableBlocks(ControlFlowGraph) : Set&lt;CfgBlock&gt;" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="39" type="cond"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="41" type="cond"/>
            <line num="42" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="difference(Set&lt;CfgBlock&gt;,Set&lt;CfgBlock&gt;) : Set&lt;CfgBlock&gt;" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/cfg/ControlFlowGraphBuilder.java" name="ControlFlowGraphBuilder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="56" loc="380" coveredmethods="0" methods="26" elements="241" classes="2" ncloc="304" statements="177" conditionals="38" coveredstatements="0"/>
            <class name="ControlFlowGraphBuilder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="55" coveredmethods="0" methods="25" elements="238" statements="175" conditionals="38" coveredstatements="0"/>
            </class>
            <class name="ControlFlowGraphBuilder.Loop">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="ControlFlowGraphBuilder(StatementList)" num="68" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="addParametersToStartBlock(StatementList) : void" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="addParameters(List&lt;AnyParameter&gt;,PythonCfgSimpleBlock) : void" num="93" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="computePredecessors() : void" num="103" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="removeEmptyBlocks() : void" num="111" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCfg() : ControlFlowGraph" num="129" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="createSimpleBlock(CfgBlock) : PythonCfgSimpleBlock" num="133" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="createBranchingBlock(Tree,CfgBlock,CfgBlock) : PythonCfgBranchingBlock" num="139" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="createBranchingBlock(Tree,CfgBlock) : PythonCfgBranchingBlock" num="145" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="build(List&lt;Statement&gt;,PythonCfgBlock) : PythonCfgBlock" num="151" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="153" type="cond"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="11" visibility="private" signature="build(Statement,PythonCfgBlock) : PythonCfgBlock" num="160" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="buildWithStatement(WithStatement,PythonCfgBlock) : PythonCfgBlock" num="192" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="197" type="cond"/>
            <line num="198" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="tryStatement(TryStatement,PythonCfgBlock) : PythonCfgBlock" num="203" count="0" type="method"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="207" type="cond"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="216" type="cond"/>
            <line num="217" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="219" type="cond"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="exceptClauses(TryStatement,PythonCfgBlock,PythonCfgBlock) : PythonCfgBlock" num="233" count="0" type="method"/>
            <line num="234" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="234" type="cond"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="236" type="cond"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="241" type="cond"/>
            <line num="242" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="245" type="cond"/>
            <line num="246" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="currentLoop(Tree) : Loop" num="253" count="0" type="method"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="255" type="cond"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="buildBreakStatement(BreakStatement,PythonCfgBlock) : PythonCfgBlock" num="262" count="0" type="method"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="buildContinueStatement(ContinueStatement,PythonCfgBlock) : PythonCfgBlock" num="269" count="0" type="method"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="buildLoop(Tree,List&lt;Tree&gt;,StatementList,ElseClause,PythonCfgBlock) : PythonCfgBlock" num="276" count="0" type="method"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="278" type="cond"/>
            <line num="279" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="buildForStatement(ForStatement,PythonCfgBlock) : PythonCfgBlock" num="290" count="0" type="method"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="buildWhileStatement(WhileStatement,PythonCfgBlock) : PythonCfgBlock" num="297" count="0" type="method"/>
            <line num="298" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="buildIfStatement(IfStatement,PythonCfgBlock) : PythonCfgBlock" num="320" count="0" type="method"/>
            <line num="321" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="325" type="cond"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="buildElifClauses(PythonCfgBlock,PythonCfgBlock,List&lt;IfStatement&gt;) : PythonCfgBlock" num="336" count="0" type="method"/>
            <line num="337" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="337" type="cond"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="buildReturnStatement(ReturnStatement,PythonCfgBlock) : PythonCfgBlock" num="348" count="0" type="method"/>
            <line num="349" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="349" type="cond"/>
            <line num="350" count="0" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line num="354" count="0" type="stmt"/>
            <line num="355" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isStatementAtClassLevel(ReturnStatement) : boolean" num="359" count="0" type="method"/>
            <line num="360" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="buildRaiseStatement(RaiseStatement,PythonCfgBlock) : PythonCfgBlock" num="363" count="0" type="method"/>
            <line num="364" count="0" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="Loop(PythonCfgBlock,PythonCfgBlock)" num="375" count="0" type="method"/>
            <line num="376" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/cfg/PythonCfgBlock.java" name="PythonCfgBlock.java">
            <metrics coveredelements="13" coveredconditionals="3" complexity="11" loc="93" coveredmethods="2" methods="8" elements="32" classes="1" ncloc="57" statements="18" conditionals="6" coveredstatements="8"/>
            <class name="PythonCfgBlock">
               <metrics coveredelements="13" coveredconditionals="3" complexity="11" coveredmethods="2" methods="8" elements="32" statements="18" conditionals="6" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="predecessors() : Set&lt;CfgBlock&gt;" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="elements() : List&lt;Tree&gt;" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addElement(Tree) : void" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isEmptyBlock() : boolean" num="52" count="3" type="method"/>
            <line num="53" count="3" type="stmt"/>
            <line complexity="3" visibility="package" signature="firstNonEmptySuccessor() : PythonCfgBlock" num="56" count="1" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line falsecount="0" truecount="3" num="59" type="cond"/>
            <line num="60" count="3" type="stmt"/>
            <line num="61" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="61" type="cond"/>
            <line num="62" count="2" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="2" visibility="protected" signature="toStringDisplayPosition() : String" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="addPredecessor(PythonCfgBlock) : void" num="90" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/cfg/PythonCfgBranchingBlock.java" name="PythonCfgBranchingBlock.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="87" coveredmethods="0" methods="9" elements="22" classes="1" ncloc="55" statements="13" conditionals="0" coveredstatements="0"/>
            <class name="PythonCfgBranchingBlock">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="9" elements="22" statements="13" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="PythonCfgBranchingBlock(Tree,CfgBlock,CfgBlock)" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="successors() : Set&lt;CfgBlock&gt;" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="syntacticSuccessor() : CfgBlock" num="50" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="trueSuccessor() : CfgBlock" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="falseSuccessor() : CfgBlock" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="branchingTree() : Tree" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="replaceSuccessors(Map&lt;PythonCfgBlock, PythonCfgBlock&gt;) : void" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setTrueSuccessor(PythonCfgBlock) : void" num="77" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="toStringDisplayPosition() : String" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/cfg/PythonCfgEndBlock.java" name="PythonCfgEndBlock.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="57" coveredmethods="0" methods="5" elements="9" classes="1" ncloc="30" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="PythonCfgEndBlock">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="9" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="successors() : Set&lt;CfgBlock&gt;" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="elements() : List&lt;Tree&gt;" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="replaceSuccessors(Map&lt;PythonCfgBlock, PythonCfgBlock&gt;) : void" num="42" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="syntacticSuccessor() : CfgBlock" num="47" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/cfg/PythonCfgSimpleBlock.java" name="PythonCfgSimpleBlock.java">
            <metrics coveredelements="8" coveredconditionals="1" complexity="6" loc="61" coveredmethods="3" methods="5" elements="14" classes="1" ncloc="31" statements="7" conditionals="2" coveredstatements="4"/>
            <class name="PythonCfgSimpleBlock">
               <metrics coveredelements="8" coveredconditionals="1" complexity="6" coveredmethods="3" methods="5" elements="14" statements="7" conditionals="2" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="PythonCfgSimpleBlock(CfgBlock)" num="34" count="4" type="method"/>
            <line num="35" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="successors() : Set&lt;CfgBlock&gt;" num="38" count="6" type="method"/>
            <line num="40" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="syntacticSuccessor() : CfgBlock" num="43" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setSyntacticSuccessor(CfgBlock) : void" num="49" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="replaceSuccessors(Map&lt;PythonCfgBlock, PythonCfgBlock&gt;) : void" num="54" count="1" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.python.types">
         <metrics coveredelements="19" complexity="205" loc="1470" methods="106" classes="15" statements="446" coveredconditionals="0" coveredmethods="7" elements="718" ncloc="1085" files="10" conditionals="166" coveredstatements="12"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/types/AnyType.java" name="AnyType.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="6" loc="58" coveredmethods="3" methods="6" elements="12" classes="1" ncloc="31" statements="6" conditionals="0" coveredstatements="3"/>
            <class name="AnyType">
               <metrics coveredelements="6" coveredconditionals="0" complexity="6" coveredmethods="3" methods="6" elements="12" statements="6" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="isIdentityComparableWith(InferredType) : boolean" num="29" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="canHaveMember(String) : boolean" num="34" count="1" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="resolveMember(String) : Optional&lt;Symbol&gt;" num="39" count="1" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="canOnlyBe(String) : boolean" num="44" count="1" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="canBeOrExtend(String) : boolean" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isCompatibleWith(InferredType) : boolean" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/types/FlowSensitiveTypeInference.java" name="FlowSensitiveTypeInference.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="121" coveredmethods="0" methods="8" elements="45" classes="1" ncloc="88" statements="29" conditionals="8" coveredstatements="0"/>
            <class name="FlowSensitiveTypeInference">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="8" elements="45" statements="29" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="FlowSensitiveTypeInference(Set&lt;Symbol&gt;,Map&lt;QualifiedExpression, MemberAccess&gt;,Map&lt;AssignmentStatement, Assignment&gt;)" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="initialState() : ProgramState" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="updateProgramState(Tree,ProgramState) : void" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="updateTree(Tree,TypeInferenceProgramState) : void" num="80" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitName(Name) : void" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFunctionDef(FunctionDef) : void" num="93" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="visitQualifiedExpression(QualifiedExpression) : void" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="handleAssignment(AssignmentStatement,TypeInferenceProgramState) : void" num="107" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/types/HasTypeDependencies.java" name="HasTypeDependencies.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="29" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="HasTypeDependencies">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/types/InferredTypes.java" name="InferredTypes.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="33" loc="191" coveredmethods="0" methods="17" elements="100" classes="1" ncloc="146" statements="57" conditionals="26" coveredstatements="0"/>
            <class name="InferredTypes">
               <metrics coveredelements="0" coveredconditionals="0" complexity="33" coveredmethods="0" methods="17" elements="100" statements="57" conditionals="26" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 48()" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="InferredTypes()" num="76" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="isInitialized() : boolean" num="79" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="anyType() : InferredType" num="83" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="runtimeBuiltinType(String) : InferredType" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="runtimeType(Symbol) : InferredType" num="91" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="setBuiltinSymbols(Map&lt;String, Symbol&gt;) : void" num="101" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="or(InferredType,InferredType) : InferredType" num="105" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="union(Stream&lt;InferredType&gt;) : InferredType" num="109" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="declaredType(TypeAnnotation) : InferredType" num="113" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="declaredType(Expression,Map&lt;String, Symbol&gt;) : InferredType" num="121" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="130" type="cond"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="genericType(Symbol,List&lt;Expression&gt;,Map&lt;String, Symbol&gt;) : InferredType" num="139" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="141" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="142" type="cond"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="145" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="unionDeclaredType(List&lt;Expression&gt;,Map&lt;String, Symbol&gt;) : InferredType" num="153" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="optionalDeclaredType(List&lt;Expression&gt;,Map&lt;String, Symbol&gt;) : InferredType" num="157" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="typeSymbols(InferredType) : Collection&lt;ClassSymbol&gt;" num="162" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="164" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="166" type="cond"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="typeName(InferredType) : String" num="174" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="177" type="cond"/>
            <line num="178" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="typeClassLocation(InferredType) : LocationInFile" num="183" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="186" type="cond"/>
            <line num="187" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/types/RuntimeType.java" name="RuntimeType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="23" loc="135" coveredmethods="0" methods="14" elements="65" classes="1" ncloc="98" statements="35" conditionals="16" coveredstatements="0"/>
            <class name="RuntimeType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="23" coveredmethods="0" methods="14" elements="65" statements="35" conditionals="16" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="RuntimeType(ClassSymbol)" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="isIdentityComparableWith(InferredType) : boolean" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="46" type="cond"/>
            <line num="47" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="canHaveMember(String) : boolean" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="resolveMember(String) : Optional&lt;Symbol&gt;" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="canOnlyBe(String) : boolean" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="canBeOrExtend(String) : boolean" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="isCompatibleWith(InferredType) : boolean" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="equals(Object) : boolean" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="typeClassSuperClassesFQN() : Set&lt;String&gt;" num="104" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="typeClassMembersFQN() : Set&lt;String&gt;" num="111" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="hasUnresolvedHierarchy() : boolean" num="118" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="122" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="127" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTypeClass() : ClassSymbol" num="132" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/types/TypeInference.java" name="TypeInference.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="40" loc="307" coveredmethods="0" methods="17" elements="171" classes="4" ncloc="240" statements="112" conditionals="42" coveredstatements="0"/>
            <class name="TypeInference">
               <metrics coveredelements="0" coveredconditionals="0" complexity="23" coveredmethods="0" methods="10" elements="103" statements="69" conditionals="24" coveredstatements="0"/>
            </class>
            <class name="TypeInference.Propagation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="3" elements="31" statements="18" conditionals="10" coveredstatements="0"/>
            </class>
            <class name="TypeInference.Assignment">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="15" statements="11" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="TypeInference.MemberAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="2" elements="22" statements="14" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="inferTypes(FileInput,PythonFile) : void" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFunctionDef(FunctionDef) : void" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitQualifiedExpression(QualifiedExpression) : void" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="inferTypesAndMemberAccessSymbols(FunctionDef,PythonFile) : void" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitName(Name) : void" num="105" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="visitAssignmentStatement(AssignmentStatement) : void" num="121" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="130" type="cond"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="134" type="cond"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitQualifiedExpression(QualifiedExpression) : void" num="149" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="flowSensitiveTypeInference(ControlFlowGraph,Set&lt;Symbol&gt;) : void" num="169" count="0" type="method"/>
            <line num="170" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="processPropagations(Set&lt;Symbol&gt;) : void" num="177" count="0" type="method"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="186" type="cond"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="applyPropagations(Set&lt;Propagation&gt;,Set&lt;Symbol&gt;,boolean) : void" num="196" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="198" type="cond"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="202" type="cond"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="204" type="cond"/>
            <line num="205" count="0" type="stmt"/>
            <line complexity="7" visibility="package" signature="computeDependencies(Expression,Set&lt;Symbol&gt;) : void" num="218" count="0" type="method"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="221" type="cond"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="223" type="cond"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="226" type="cond"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="230" type="cond"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="234" type="cond"/>
            <line num="235" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="areDependenciesReady(Set&lt;Symbol&gt;) : boolean" num="240" count="0" type="method"/>
            <line num="241" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="dependents() : Set&lt;Propagation&gt;" num="247" count="0" type="method"/>
            <line num="248" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="Assignment(SymbolImpl,Name,Expression)" num="257" count="0" type="method"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="propagate(Set&lt;Symbol&gt;) : boolean" num="264" count="0" type="method"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="267" type="cond"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="MemberAccess(QualifiedExpression)" num="284" count="0" type="method"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="propagate(Set&lt;Symbol&gt;) : boolean" num="289" count="0" type="method"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="293" type="cond"/>
            <line num="294" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="296" type="cond"/>
            <line num="297" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="299" type="cond"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/types/TypeInferenceProgramState.java" name="TypeInferenceProgramState.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="12" loc="101" coveredmethods="0" methods="8" elements="40" classes="1" ncloc="71" statements="26" conditionals="6" coveredstatements="0"/>
            <class name="TypeInferenceProgramState">
               <metrics coveredelements="0" coveredconditionals="0" complexity="12" coveredmethods="0" methods="8" elements="40" statements="26" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="TypeInferenceProgramState()" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="setTypes(Symbol,Set&lt;InferredType&gt;) : void" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getTypes(Symbol) : Set&lt;InferredType&gt;" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="equals(Object) : boolean" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="join(ProgramState) : ProgramState" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : ProgramState" num="97" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/types/TypeShed.java" name="TypeShed.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="48" loc="339" coveredmethods="0" methods="19" elements="215" classes="3" ncloc="279" statements="142" conditionals="54" coveredstatements="0"/>
            <class name="TypeShed">
               <metrics coveredelements="0" coveredconditionals="0" complexity="34" coveredmethods="0" methods="13" elements="163" statements="112" conditionals="38" coveredstatements="0"/>
            </class>
            <class name="TypeShed.ReturnTypeVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="5" elements="48" statements="27" conditionals="16" coveredstatements="0"/>
            </class>
            <class name="TypeShed.ModuleDescription">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="4" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="TypeShed()" num="77" count="0" type="method"/>
            <line complexity="3" visibility="public" signature="builtinSymbols() : Map&lt;String, Symbol&gt;" num="80" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="setDeclaredReturnType(Symbol,FunctionDef) : void" num="108" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="116" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="typingModuleSymbols() : Set&lt;Symbol&gt;" num="122" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="commonSymbols(Map&lt;String, Symbol&gt;,Map&lt;String, Symbol&gt;,String) : Set&lt;Symbol&gt;" num="128" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="132" type="cond"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="143" type="cond"/>
            <line num="144" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="typingExtensionsSymbols(Map&lt;String, Set&lt;Symbol&gt;&gt;) : Set&lt;Symbol&gt;" num="151" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="symbolsForModule(String) : Set&lt;Symbol&gt;" num="157" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="symbolWithFQN(String,String) : Symbol" num="166" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="170" type="cond"/>
            <line num="171" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="182" type="cond"/>
            <line num="183" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="searchTypeShedForModule(String) : Set&lt;Symbol&gt;" num="189" count="0" type="method"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="191" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="195" type="cond"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="200" type="cond"/>
            <line num="201" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="204" type="cond"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="209" type="cond"/>
            <line num="210" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getResourceForModule(String,String) : ModuleDescription" num="217" count="0" type="method"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="224" type="cond"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="226" type="cond"/>
            <line num="227" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getModuleSymbols(String,String,Map&lt;String, Set&lt;Symbol&gt;&gt;) : Map&lt;String, Symbol&gt;" num="235" count="0" type="method"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="237" type="cond"/>
            <line num="238" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="typeShedClass(String) : ClassSymbol" num="254" count="0" type="method"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="256" type="cond"/>
            <line num="257" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="259" type="cond"/>
            <line num="260" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="stubFilesSymbols() : Collection&lt;Symbol&gt;" num="265" count="0" type="method"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFunctionDef(FunctionDef) : void" num="273" count="0" type="method"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitAnnotatedAssignment(AnnotatedAssignment) : void" num="283" count="0" type="method"/>
            <line num="285" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="285" type="cond"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="setAnnotatedType(Symbol,AnnotatedAssignment) : void" num="292" count="0" type="method"/>
            <line num="293" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="294" type="cond"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="setAnnotatedReturnType(Symbol,FunctionDef) : void" num="300" count="0" type="method"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="302" type="cond"/>
            <line num="303" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="304" type="cond"/>
            <line num="305" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="setParameterTypes(Symbol,FunctionDef) : void" num="309" count="0" type="method"/>
            <line num="310" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="310" type="cond"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="313" type="cond"/>
            <line num="316" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="318" type="cond"/>
            <line num="319" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="320" type="cond"/>
            <line num="321" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="ModuleDescription(InputStream,String,String)" num="332" count="0" type="method"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/types/TypeShedPythonFile.java" name="TypeShedPythonFile.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="7" loc="65" coveredmethods="4" methods="4" elements="13" classes="1" ncloc="38" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="TypeShedPythonFile">
               <metrics coveredelements="13" coveredconditionals="0" complexity="7" coveredmethods="4" methods="4" elements="13" statements="9" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="package" signature="TypeShedPythonFile(InputStream,String)" num="41" count="9" type="method"/>
            <line num="42" count="9" type="stmt"/>
            <line num="43" count="9" type="stmt"/>
            <line complexity="4" visibility="public" signature="content() : String" num="46" count="9" type="method"/>
            <line num="48" count="9" type="stmt"/>
            <line num="48" count="9" type="stmt"/>
            <line num="49" count="5" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="fileName() : String" num="56" count="2" type="method"/>
            <line num="58" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="uri() : URI" num="61" count="2" type="method"/>
            <line num="63" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/types/UnionType.java" name="UnionType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="23" loc="124" coveredmethods="0" methods="13" elements="57" classes="1" ncloc="88" statements="30" conditionals="14" coveredstatements="0"/>
            <class name="UnionType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="23" coveredmethods="0" methods="13" elements="57" statements="30" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="UnionType(Set&lt;InferredType&gt;)" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="or(InferredType,InferredType) : InferredType" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="42" type="cond"/>
            <line num="43" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="addTypes(InferredType,Set&lt;InferredType&gt;) : void" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isIdentityComparableWith(InferredType) : boolean" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="canHaveMember(String) : boolean" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="resolveMember(String) : Optional&lt;Symbol&gt;" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line complexity="1" visibility="public" signature="canOnlyBe(String) : boolean" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="canBeOrExtend(String) : boolean" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isCompatibleWith(InferredType) : boolean" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="equals(Object) : boolean" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="111" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="116" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="types() : Set&lt;InferredType&gt;" num="121" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.python.tree">
         <metrics coveredelements="461" complexity="1032" loc="8697" methods="757" classes="86" statements="1955" coveredconditionals="86" coveredmethods="106" elements="3188" ncloc="6032" files="84" conditionals="476" coveredstatements="269"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/AliasedNameImpl.java" name="AliasedNameImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="83" coveredmethods="0" methods="8" elements="20" classes="1" ncloc="53" statements="12" conditionals="0" coveredstatements="0"/>
            <class name="AliasedNameImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="8" elements="20" statements="12" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AliasedNameImpl(Token,DottedName,Name)" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AliasedNameImpl(DottedName)" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="asKeyword() : Token" num="52" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="alias() : Name" num="58" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dottedName() : DottedName" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/AnnotatedAssignmentImpl.java" name="AnnotatedAssignmentImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="95" coveredmethods="0" methods="9" elements="22" classes="1" ncloc="65" statements="13" conditionals="0" coveredstatements="0"/>
            <class name="AnnotatedAssignmentImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="9" elements="22" statements="13" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AnnotatedAssignmentImpl(Expression,TypeAnnotation,Token,Expression,Separators)" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="variable() : Expression" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="annotation() : TypeAnnotation" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equalToken() : Token" num="62" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assignedValue() : Expression" num="68" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="separator() : Token" num="74" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/ArgListImpl.java" name="ArgListImpl.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="6" loc="68" coveredmethods="3" methods="5" elements="20" classes="1" ncloc="41" statements="13" conditionals="2" coveredstatements="7"/>
            <class name="ArgListImpl">
               <metrics coveredelements="10" coveredconditionals="0" complexity="6" coveredmethods="3" methods="5" elements="20" statements="13" conditionals="2" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="ArgListImpl(List&lt;Argument&gt;,List&lt;Token&gt;)" num="35" count="2" type="method"/>
            <line num="36" count="2" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="arguments() : List&lt;Argument&gt;" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="50" count="2" type="method"/>
            <line num="52" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="64" count="2" type="method"/>
            <line num="66" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/AssertStatementImpl.java" name="AssertStatementImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="84" coveredmethods="0" methods="8" elements="19" classes="1" ncloc="55" statements="11" conditionals="0" coveredstatements="0"/>
            <class name="AssertStatementImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="8" elements="19" statements="11" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AssertStatementImpl(Token,Expression,Expression,Separators)" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertKeyword() : Token" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="condition() : Expression" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="message() : Expression" num="58" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="separator() : Token" num="64" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/AssignmentExpressionImpl.java" name="AssignmentExpressionImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="72" coveredmethods="0" methods="7" elements="16" classes="1" ncloc="43" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="AssignmentExpressionImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AssignmentExpressionImpl(Name,Token,Expression)" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="lhsName() : Name" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="operator() : Token" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="expression() : Expression" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="computeChildren() : List&lt;Tree&gt;" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/AssignmentStatementImpl.java" name="AssignmentStatementImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="91" coveredmethods="0" methods="8" elements="30" classes="1" ncloc="62" statements="20" conditionals="2" coveredstatements="0"/>
            <class name="AssignmentStatementImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="8" elements="30" statements="20" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AssignmentStatementImpl(List&lt;Token&gt;,List&lt;ExpressionList&gt;,Expression,Separators)" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assignedValue() : Expression" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equalTokens() : List&lt;Token&gt;" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="lhsExpressions() : List&lt;ExpressionList&gt;" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="separator() : Token" num="60" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/AwaitExpressionImpl.java" name="AwaitExpressionImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="66" coveredmethods="0" methods="6" elements="13" classes="1" ncloc="38" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="AwaitExpressionImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AwaitExpressionImpl(Token,Expression)" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="awaitToken() : Token" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="expression() : Expression" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/BinaryExpressionImpl.java" name="BinaryExpressionImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="17" loc="140" coveredmethods="0" methods="10" elements="67" classes="1" ncloc="106" statements="47" conditionals="10" coveredstatements="0"/>
            <class name="BinaryExpressionImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="17" coveredmethods="0" methods="10" elements="67" statements="47" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="kindsByOperator() : Map&lt;String, Kind&gt;" num="51" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BinaryExpressionImpl(Expression,Token,Expression)" num="78" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="leftOperand() : Expression" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="operator() : Token" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rightOperand() : Expression" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="105" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="110" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="type() : InferredType" num="115" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="typeDependencies() : List&lt;Expression&gt;" num="133" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/BreakStatementImpl.java" name="BreakStatementImpl.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="6" loc="67" coveredmethods="3" methods="6" elements="13" classes="1" ncloc="40" statements="7" conditionals="0" coveredstatements="4"/>
            <class name="BreakStatementImpl">
               <metrics coveredelements="7" coveredconditionals="0" complexity="6" coveredmethods="3" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="BreakStatementImpl(Token,Separators)" num="37" count="1" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="breakKeyword() : Token" num="42" count="1" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="separator() : Token" num="47" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="63" count="1" type="method"/>
            <line num="65" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/CallExpressionImpl.java" name="CallExpressionImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="17" loc="126" coveredmethods="0" methods="12" elements="49" classes="1" ncloc="93" statements="27" conditionals="10" coveredstatements="0"/>
            <class name="CallExpressionImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="17" coveredmethods="0" methods="12" elements="49" statements="27" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CallExpressionImpl(Expression,ArgList,Token,Token)" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="callee() : Expression" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="argumentList() : ArgList" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="arguments() : List&lt;Argument&gt;" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line complexity="1" visibility="public" signature="leftPar() : Token" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rightPar() : Token" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="type() : InferredType" num="97" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="100" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="getType(Symbol) : InferredType" num="106" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="typeDependencies() : List&lt;Expression&gt;" num="122" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/ClassDefImpl.java" name="ClassDefImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="17" loc="157" coveredmethods="0" methods="17" elements="45" classes="1" ncloc="119" statements="28" conditionals="0" coveredstatements="0"/>
            <class name="ClassDefImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="17" coveredmethods="0" methods="17" elements="45" statements="28" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ClassDefImpl(List&lt;Decorator&gt;,Token,Name,Token,ArgList,Token,Token,Token,Token,StatementList,Token,StringLiteral)" num="58" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decorators() : List&lt;Decorator&gt;" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="classKeyword() : Token" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : Name" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="leftPar() : Token" num="100" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="args() : ArgList" num="106" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rightPar() : Token" num="112" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="colon() : Token" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="body() : StatementList" num="123" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="docstring() : StringLiteral" num="128" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="classFields() : Set&lt;Symbol&gt;" num="134" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instanceFields() : Set&lt;Symbol&gt;" num="139" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addClassField(Symbol) : void" num="144" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addInstanceField(Symbol) : void" num="148" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="152" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/CompoundAssignmentStatementImpl.java" name="CompoundAssignmentStatementImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="84" coveredmethods="0" methods="8" elements="19" classes="1" ncloc="54" statements="11" conditionals="0" coveredstatements="0"/>
            <class name="CompoundAssignmentStatementImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="8" elements="19" statements="11" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CompoundAssignmentStatementImpl(Expression,Token,Expression,Separators)" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rhsExpression() : Expression" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compoundAssignmentToken() : Token" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="lhsExpression() : Expression" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="separator() : Token" num="63" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/ComprehensionExpressionImpl.java" name="ComprehensionExpressionImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="103" coveredmethods="0" methods="9" elements="28" classes="1" ncloc="71" statements="19" conditionals="0" coveredstatements="0"/>
            <class name="ComprehensionExpressionImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="9" elements="28" statements="19" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ComprehensionExpressionImpl(Kind,Token,Expression,ComprehensionFor,Token)" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="resultExpression() : Expression" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="comprehensionFor() : ComprehensionFor" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localVariables() : Set&lt;Symbol&gt;" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addLocalVariableSymbol(Symbol) : void" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="type() : InferredType" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/ComprehensionForImpl.java" name="ComprehensionForImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="99" coveredmethods="0" methods="10" elements="25" classes="1" ncloc="67" statements="15" conditionals="0" coveredstatements="0"/>
            <class name="ComprehensionForImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="10" elements="25" statements="15" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ComprehensionForImpl(Token,Token,Expression,Token,Expression,ComprehensionClause)" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="asyncToken() : Token" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="forToken() : Token" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="loopExpression() : Expression" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inToken() : Token" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterable() : Expression" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="nestedClause() : ComprehensionClause" num="79" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/ComprehensionIfImpl.java" name="ComprehensionIfImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="77" coveredmethods="0" methods="7" elements="16" classes="1" ncloc="48" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="ComprehensionIfImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ComprehensionIfImpl(Token,Expression,ComprehensionClause)" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ifToken() : Token" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="condition() : Expression" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="nestedClause() : ComprehensionClause" num="57" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/ConditionalExpressionImpl.java" name="ConditionalExpressionImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="101" coveredmethods="0" methods="11" elements="26" classes="1" ncloc="69" statements="15" conditionals="0" coveredstatements="0"/>
            <class name="ConditionalExpressionImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="11" elements="26" statements="15" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ConditionalExpressionImpl(Expression,Token,Expression,Token,Expression)" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ifKeyword() : Token" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="elseKeyword() : Token" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="trueExpression() : Expression" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="falseExpression() : Expression" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="condition() : Expression" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="type() : InferredType" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="typeDependencies() : List&lt;Expression&gt;" num="97" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/ContinueStatementImpl.java" name="ContinueStatementImpl.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="6" loc="67" coveredmethods="3" methods="6" elements="13" classes="1" ncloc="40" statements="7" conditionals="0" coveredstatements="4"/>
            <class name="ContinueStatementImpl">
               <metrics coveredelements="7" coveredconditionals="0" complexity="6" coveredmethods="3" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="ContinueStatementImpl(Token,Separators)" num="37" count="1" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="continueKeyword() : Token" num="42" count="1" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="separator() : Token" num="47" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="63" count="1" type="method"/>
            <line num="65" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/DecoratorImpl.java" name="DecoratorImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="12" loc="99" coveredmethods="0" methods="9" elements="29" classes="1" ncloc="65" statements="14" conditionals="6" coveredstatements="0"/>
            <class name="DecoratorImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="12" coveredmethods="0" methods="9" elements="29" statements="14" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="DecoratorImpl(Token,DottedName,Token,ArgList,Token,Token)" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line complexity="1" visibility="public" signature="atToken() : Token" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : DottedName" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="leftPar() : Token" num="67" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="arguments() : ArgList" num="73" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rightPar() : Token" num="79" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/DelStatementImpl.java" name="DelStatementImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="76" coveredmethods="0" methods="7" elements="16" classes="1" ncloc="48" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="DelStatementImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DelStatementImpl(Token,List&lt;Expression&gt;,Separators)" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="delKeyword() : Token" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="expressions() : List&lt;Expression&gt;" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="separator() : Token" num="55" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/DictCompExpressionImpl.java" name="DictCompExpressionImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="106" coveredmethods="0" methods="11" elements="27" classes="1" ncloc="73" statements="16" conditionals="0" coveredstatements="0"/>
            <class name="DictCompExpressionImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="11" elements="27" statements="16" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DictCompExpressionImpl(Token,Expression,Token,Expression,ComprehensionFor,Token)" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="keyExpression() : Expression" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="colonToken() : Token" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="valueExpression() : Expression" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="comprehensionFor() : ComprehensionFor" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localVariables() : Set&lt;Symbol&gt;" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addLocalVariableSymbol(Symbol) : void" num="98" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="type() : InferredType" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/DictOrSetLiteralImpl.java" name="DictOrSetLiteralImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="71" coveredmethods="0" methods="6" elements="26" classes="1" ncloc="44" statements="18" conditionals="2" coveredstatements="0"/>
            <class name="DictOrSetLiteralImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="6" elements="26" statements="18" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DictOrSetLiteralImpl(Token,List&lt;Token&gt;,List&lt;E&gt;,Token)" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="lCurlyBrace() : Token" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rCurlyBrace() : Token" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="commas() : List&lt;Token&gt;" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="elements() : List&lt;E&gt;" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/DictionaryLiteralImpl.java" name="DictionaryLiteralImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="49" coveredmethods="0" methods="4" elements="8" classes="1" ncloc="25" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="DictionaryLiteralImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DictionaryLiteralImpl(Token,List&lt;Token&gt;,List&lt;DictionaryLiteralElement&gt;,Token)" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="type() : InferredType" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/DottedNameImpl.java" name="DottedNameImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="55" coveredmethods="0" methods="5" elements="10" classes="1" ncloc="29" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="DottedNameImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DottedNameImpl(List&lt;Name&gt;)" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="names() : List&lt;Name&gt;" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/EllipsisExpressionImpl.java" name="EllipsisExpressionImpl.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="5" loc="56" coveredmethods="5" methods="5" elements="10" classes="1" ncloc="29" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="EllipsisExpressionImpl">
               <metrics coveredelements="10" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="EllipsisExpressionImpl(List&lt;Token&gt;)" num="33" count="1" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ellipsis() : List&lt;Token&gt;" num="37" count="1" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="42" count="1" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="47" count="1" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="52" count="3" type="method"/>
            <line num="54" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/ElseClauseImpl.java" name="ElseClauseImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="74" coveredmethods="0" methods="6" elements="17" classes="1" ncloc="47" statements="11" conditionals="0" coveredstatements="0"/>
            <class name="ElseClauseImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="17" statements="11" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ElseClauseImpl(Token,Token,Token,Token,StatementList,Token)" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="elseKeyword() : Token" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="body() : StatementList" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/ExceptClauseImpl.java" name="ExceptClauseImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="12" loc="136" coveredmethods="0" methods="12" elements="51" classes="1" ncloc="103" statements="39" conditionals="0" coveredstatements="0"/>
            <class name="ExceptClauseImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="12" coveredmethods="0" methods="12" elements="51" statements="39" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ExceptClauseImpl(Token,Token,Token,Token,StatementList,Token)" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ExceptClauseImpl(Token,Token,Token,Token,StatementList,Token,Expression,Token,Token,Expression)" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ExceptClauseImpl(Token,Token,Token,Token,StatementList,Token,Expression)" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="exceptKeyword() : Token" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="body() : StatementList" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="asKeyword() : Token" num="97" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="commaToken() : Token" num="103" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="exception() : Expression" num="109" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="exceptionInstance() : Expression" num="115" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="121" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="126" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="131" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/ExecStatementImpl.java" name="ExecStatementImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="105" coveredmethods="0" methods="10" elements="32" classes="1" ncloc="74" statements="22" conditionals="0" coveredstatements="0"/>
            <class name="ExecStatementImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="10" elements="32" statements="22" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ExecStatementImpl(Token,Expression,Token,Expression,Token,Expression,Separators)" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ExecStatementImpl(Token,Expression,Separators)" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="execKeyword() : Token" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="expression() : Expression" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="globalsExpression() : Expression" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localsExpression() : Expression" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="separator() : Token" num="84" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/ExpressionListImpl.java" name="ExpressionListImpl.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="7" loc="72" coveredmethods="2" methods="6" elements="22" classes="1" ncloc="45" statements="14" conditionals="2" coveredstatements="3"/>
            <class name="ExpressionListImpl">
               <metrics coveredelements="5" coveredconditionals="0" complexity="7" coveredmethods="2" methods="6" elements="22" statements="14" conditionals="2" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="ExpressionListImpl(List&lt;Expression&gt;,List&lt;Token&gt;)" num="34" count="2" type="method"/>
            <line num="35" count="2" type="stmt"/>
            <line num="36" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="expressions() : List&lt;Expression&gt;" num="39" count="1" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="commas() : List&lt;Token&gt;" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/ExpressionStatementImpl.java" name="ExpressionStatementImpl.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="6" loc="65" coveredmethods="4" methods="6" elements="13" classes="1" ncloc="38" statements="7" conditionals="0" coveredstatements="5"/>
            <class name="ExpressionStatementImpl">
               <metrics coveredelements="9" coveredconditionals="0" complexity="6" coveredmethods="4" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="ExpressionStatementImpl(List&lt;Expression&gt;,Separators)" num="36" count="65" type="method"/>
            <line num="37" count="65" type="stmt"/>
            <line num="38" count="65" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="41" count="55" type="method"/>
            <line num="43" count="55" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="expressions() : List&lt;Expression&gt;" num="51" count="55" type="method"/>
            <line num="53" count="55" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="56" count="54" type="method"/>
            <line num="58" count="54" type="stmt"/>
            <line complexity="1" visibility="public" signature="separator() : Token" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/FileInputImpl.java" name="FileInputImpl.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="8" loc="86" coveredmethods="5" methods="8" elements="18" classes="1" ncloc="56" statements="10" conditionals="0" coveredstatements="7"/>
            <class name="FileInputImpl">
               <metrics coveredelements="12" coveredconditionals="0" complexity="8" coveredmethods="5" methods="8" elements="18" statements="10" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="FileInputImpl(StatementList,Token,StringLiteral)" num="45" count="72" type="method"/>
            <line num="46" count="72" type="stmt"/>
            <line num="47" count="72" type="stmt"/>
            <line num="48" count="72" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="51" count="7" type="method"/>
            <line num="53" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="statements() : StatementList" num="56" count="6" type="method"/>
            <line num="59" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="docstring() : StringLiteral" num="62" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="globalVariables() : Set&lt;Symbol&gt;" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addGlobalVariables(Symbol) : void" num="73" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="77" count="33" type="method"/>
            <line num="79" count="33" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="82" count="72" type="method"/>
            <line num="84" count="72" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/FinallyClauseImpl.java" name="FinallyClauseImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="74" coveredmethods="0" methods="6" elements="17" classes="1" ncloc="47" statements="11" conditionals="0" coveredstatements="0"/>
            <class name="FinallyClauseImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="17" statements="11" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="FinallyClauseImpl(Token,Token,Token,Token,StatementList,Token)" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="finallyKeyword() : Token" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="body() : StatementList" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/ForStatementImpl.java" name="ForStatementImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="133" coveredmethods="0" methods="13" elements="37" classes="1" ncloc="98" statements="24" conditionals="0" coveredstatements="0"/>
            <class name="ForStatementImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="13" elements="37" statements="24" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ForStatementImpl(Token,List&lt;Expression&gt;,Token,List&lt;Expression&gt;,Token,Token,Token,StatementList,Token,ElseClause,Token)" num="53" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="forKeyword() : Token" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="expressions() : List&lt;Expression&gt;" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inKeyword() : Token" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExpressions() : List&lt;Expression&gt;" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="colon() : Token" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="body() : StatementList" num="105" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="elseClause() : ElseClause" num="110" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isAsync() : boolean" num="116" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="asyncKeyword() : Token" num="121" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="127" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/FormatSpecifierImpl.java" name="FormatSpecifierImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="67" coveredmethods="0" methods="6" elements="16" classes="1" ncloc="39" statements="10" conditionals="0" coveredstatements="0"/>
            <class name="FormatSpecifierImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="16" statements="10" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="FormatSpecifierImpl(Token,List&lt;FormattedExpression&gt;)" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="columnToken() : Token" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="formatExpressions() : List&lt;FormattedExpression&gt;" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="computeChildren() : List&lt;Tree&gt;" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/FormattedExpressionImpl.java" name="FormattedExpressionImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="75" coveredmethods="0" methods="7" elements="16" classes="1" ncloc="46" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="FormattedExpressionImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="FormattedExpressionImpl(Expression,Token,FormatSpecifier)" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="expression() : Expression" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equalToken() : Token" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="formatSpecifier() : FormatSpecifier" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="computeChildren() : List&lt;Tree&gt;" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/FunctionDefImpl.java" name="FunctionDefImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="20" loc="183" coveredmethods="0" methods="20" elements="54" classes="1" ncloc="140" statements="34" conditionals="0" coveredstatements="0"/>
            <class name="FunctionDefImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="20" coveredmethods="0" methods="20" elements="54" statements="34" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="FunctionDefImpl(List&lt;Decorator&gt;,Token,Token,Name,Token,ParameterList,Token,TypeAnnotation,Token,Token,Token,StatementList,Token,boolean,StringLiteral)" num="65" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decorators() : List&lt;Decorator&gt;" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="defKeyword() : Token" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="asyncKeyword() : Token" num="96" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : Name" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="leftPar() : Token" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parameters() : ParameterList" num="112" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rightPar() : Token" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnTypeAnnotation() : TypeAnnotation" num="123" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="colon() : Token" num="129" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="body() : StatementList" num="134" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isMethodDefinition() : boolean" num="139" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="docstring() : StringLiteral" num="144" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localVariables() : Set&lt;Symbol&gt;" num="150" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addLocalVariableSymbol(Symbol) : void" num="155" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="159" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="164" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="169" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setFunctionSymbol(FunctionSymbol) : void" num="175" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="functionSymbol() : FunctionSymbol" num="179" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/GlobalStatementImpl.java" name="GlobalStatementImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="76" coveredmethods="0" methods="7" elements="16" classes="1" ncloc="48" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="GlobalStatementImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="GlobalStatementImpl(Token,List&lt;Name&gt;,Separators)" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="globalKeyword() : Token" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="variables() : List&lt;Name&gt;" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="separator() : Token" num="60" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/IfStatementImpl.java" name="IfStatementImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="134" coveredmethods="0" methods="11" elements="40" classes="1" ncloc="95" statements="29" conditionals="0" coveredstatements="0"/>
            <class name="IfStatementImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="11" elements="40" statements="29" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="IfStatementImpl(Token,Expression,Token,Token,Token,StatementList,Token,List&lt;IfStatement&gt;,ElseClause)" num="56" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="IfStatementImpl(Token,Expression,Token,Token,Token,StatementList,Token)" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="keyword() : Token" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="condition() : Expression" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="body() : StatementList" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="elifBranches() : List&lt;IfStatement&gt;" num="103" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isElif() : boolean" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="elseBranch() : ElseClause" num="113" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="119" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="124" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="129" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/ImportFromImpl.java" name="ImportFromImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="128" coveredmethods="0" methods="14" elements="37" classes="1" ncloc="93" statements="21" conditionals="2" coveredstatements="0"/>
            <class name="ImportFromImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="14" elements="37" statements="21" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="ImportFromImpl(Token,List&lt;Token&gt;,DottedName,Token,List&lt;AliasedName&gt;,Token,Separators)" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fromKeyword() : Token" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="module() : DottedName" num="65" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="importKeyword() : Token" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dottedPrefixForModule() : List&lt;Token&gt;" num="76" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="importedNames() : List&lt;AliasedName&gt;" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isWildcardImport() : boolean" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="wildcard() : Token" num="92" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasUnresolvedWildcardImport() : boolean" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setHasUnresolvedWildcardImport(boolean) : void" num="103" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="separator() : Token" num="107" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="113" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="123" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/ImportNameImpl.java" name="ImportNameImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="77" coveredmethods="0" methods="7" elements="16" classes="1" ncloc="48" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="ImportNameImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ImportNameImpl(Token,List&lt;AliasedName&gt;,Separators)" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="importKeyword() : Token" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="modules() : List&lt;AliasedName&gt;" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="separator() : Token" num="56" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/InExpressionImpl.java" name="InExpressionImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="57" coveredmethods="0" methods="4" elements="9" classes="1" ncloc="31" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="InExpressionImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="InExpressionImpl(Expression,Token,Token,Expression)" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="notToken() : Token" num="47" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/IsExpressionImpl.java" name="IsExpressionImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="57" coveredmethods="0" methods="4" elements="9" classes="1" ncloc="31" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="IsExpressionImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="IsExpressionImpl(Expression,Token,Token,Expression)" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="notToken() : Token" num="47" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/KeyValuePairImpl.java" name="KeyValuePairImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="75" coveredmethods="0" methods="7" elements="16" classes="1" ncloc="47" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="KeyValuePairImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="KeyValuePairImpl(Expression,Token,Expression)" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="key() : Expression" num="43" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="colon() : Token" num="49" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="value() : Expression" num="55" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/LambdaExpressionImpl.java" name="LambdaExpressionImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="101" coveredmethods="0" methods="11" elements="25" classes="1" ncloc="69" statements="14" conditionals="0" coveredstatements="0"/>
            <class name="LambdaExpressionImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="11" elements="25" statements="14" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LambdaExpressionImpl(Token,Token,Expression,ParameterList)" num="45" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="lambdaKeyword() : Token" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="colonToken() : Token" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="expression() : Expression" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parameters() : ParameterList" num="67" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localVariables() : Set&lt;Symbol&gt;" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isMethodDefinition() : boolean" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addLocalVariableSymbol(Symbol) : void" num="83" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="97" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/ListLiteralImpl.java" name="ListLiteralImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="79" coveredmethods="0" methods="8" elements="18" classes="1" ncloc="49" statements="10" conditionals="0" coveredstatements="0"/>
            <class name="ListLiteralImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="8" elements="18" statements="10" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ListLiteralImpl(Token,ExpressionList,Token)" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="leftBracket() : Token" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="elements() : ExpressionList" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rightBracket() : Token" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="type() : InferredType" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/NameImpl.java" name="NameImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="17" loc="116" coveredmethods="0" methods="13" elements="37" classes="1" ncloc="82" statements="20" conditionals="4" coveredstatements="0"/>
            <class name="NameImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="17" coveredmethods="0" methods="13" elements="37" statements="20" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="NameImpl(Token,boolean)" num="45" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="isVariable() : boolean" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="symbol() : Symbol" num="80" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="usage() : Usage" num="86" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setSymbol(Symbol) : void" num="92" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setUsage(Usage) : void" num="96" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="type() : InferredType" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isBooleanBuiltinSymbol() : boolean" num="108" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInferredType(InferredType) : void" num="113" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/NoneExpressionImpl.java" name="NoneExpressionImpl.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="6" loc="62" coveredmethods="5" methods="6" elements="12" classes="1" ncloc="35" statements="6" conditionals="0" coveredstatements="5"/>
            <class name="NoneExpressionImpl">
               <metrics coveredelements="10" coveredconditionals="0" complexity="6" coveredmethods="5" methods="6" elements="12" statements="6" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="NoneExpressionImpl(Token)" num="34" count="2" type="method"/>
            <line num="35" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="none() : Token" num="38" count="1" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="43" count="1" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="48" count="2" type="method"/>
            <line num="50" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="53" count="4" type="method"/>
            <line num="55" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="type() : InferredType" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/NonlocalStatementImpl.java" name="NonlocalStatementImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="76" coveredmethods="0" methods="7" elements="16" classes="1" ncloc="48" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="NonlocalStatementImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="NonlocalStatementImpl(Token,List&lt;Name&gt;,Separators)" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="nonlocalKeyword() : Token" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="variables() : List&lt;Name&gt;" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="separator() : Token" num="55" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/NumericLiteralImpl.java" name="NumericLiteralImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="92" coveredmethods="0" methods="8" elements="36" classes="1" ncloc="61" statements="20" conditionals="8" coveredstatements="0"/>
            <class name="NumericLiteralImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="8" elements="36" statements="20" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="NumericLiteralImpl(Token)" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="valueAsLong() : long" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="valueAsString() : String" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="type() : InferredType" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="computeType() : InferredType" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/ParameterImpl.java" name="ParameterImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="109" coveredmethods="0" methods="10" elements="28" classes="1" ncloc="73" statements="18" conditionals="0" coveredstatements="0"/>
            <class name="ParameterImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="10" elements="28" statements="18" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ParameterImpl(Token,Name,TypeAnnotation,Token,Expression)" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ParameterImpl(Token)" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="starToken() : Token" num="65" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : Name" num="71" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="typeAnnotation() : TypeAnnotation" num="77" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equalToken() : Token" num="83" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="defaultValue() : Expression" num="89" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="105" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/ParameterListImpl.java" name="ParameterListImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="79" coveredmethods="0" methods="6" elements="22" classes="1" ncloc="51" statements="14" conditionals="2" coveredstatements="0"/>
            <class name="ParameterListImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="6" elements="22" statements="14" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ParameterListImpl(List&lt;AnyParameter&gt;,List&lt;Token&gt;)" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="nonTuple() : List&lt;Parameter&gt;" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="all() : List&lt;AnyParameter&gt;" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/ParenthesizedExpressionImpl.java" name="ParenthesizedExpressionImpl.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="9" loc="85" coveredmethods="5" methods="9" elements="20" classes="1" ncloc="54" statements="11" conditionals="0" coveredstatements="7"/>
            <class name="ParenthesizedExpressionImpl">
               <metrics coveredelements="12" coveredconditionals="0" complexity="9" coveredmethods="5" methods="9" elements="20" statements="11" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="ParenthesizedExpressionImpl(Token,Expression,Token)" num="40" count="1" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="leftParenthesis() : Token" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="expression() : Expression" num="51" count="3" type="method"/>
            <line num="53" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="rightParenthesis() : Token" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="61" count="1" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="66" count="1" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="71" count="3" type="method"/>
            <line num="73" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="type() : InferredType" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="typeDependencies() : List&lt;Expression&gt;" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/PassStatementImpl.java" name="PassStatementImpl.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="6" loc="67" coveredmethods="5" methods="6" elements="13" classes="1" ncloc="40" statements="7" conditionals="0" coveredstatements="6"/>
            <class name="PassStatementImpl">
               <metrics coveredelements="11" coveredconditionals="0" complexity="6" coveredmethods="5" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="PassStatementImpl(Token,Separators)" num="37" count="14" type="method"/>
            <line num="38" count="14" type="stmt"/>
            <line num="39" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="passKeyword() : Token" num="42" count="1" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="separator() : Token" num="47" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="53" count="6" type="method"/>
            <line num="55" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="58" count="2" type="method"/>
            <line num="60" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="63" count="3" type="method"/>
            <line num="65" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/PrintStatementImpl.java" name="PrintStatementImpl.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="6" loc="69" coveredmethods="4" methods="6" elements="14" classes="1" ncloc="42" statements="8" conditionals="0" coveredstatements="6"/>
            <class name="PrintStatementImpl">
               <metrics coveredelements="10" coveredconditionals="0" complexity="6" coveredmethods="4" methods="6" elements="14" statements="8" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="PrintStatementImpl(Token,List&lt;Expression&gt;,Separators)" num="38" count="15" type="method"/>
            <line num="39" count="15" type="stmt"/>
            <line num="40" count="15" type="stmt"/>
            <line num="41" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="printKeyword() : Token" num="44" count="3" type="method"/>
            <line num="46" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="expressions() : List&lt;Expression&gt;" num="49" count="3" type="method"/>
            <line num="51" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="64" count="6" type="method"/>
            <line num="66" count="6" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/PyTree.java" name="PyTree.java">
            <metrics coveredelements="25" coveredconditionals="6" complexity="15" loc="92" coveredmethods="5" methods="7" elements="47" classes="1" ncloc="62" statements="24" conditionals="16" coveredstatements="14"/>
            <class name="PyTree">
               <metrics coveredelements="25" coveredconditionals="6" complexity="15" coveredmethods="5" methods="7" elements="47" statements="24" conditionals="16" coveredstatements="14"/>
            </class>
            <line complexity="1" visibility="protected" signature="PyTree()" num="32" count="4231" type="method"/>
            <line complexity="2" visibility="public" signature="is(Kind) : boolean" num="35" count="271" type="method"/>
            <line num="37" count="271" type="stmt"/>
            <line num="38" count="271" type="stmt"/>
            <line num="39" count="271" type="stmt"/>
            <line falsecount="122" truecount="149" num="39" type="cond"/>
            <line num="40" count="149" type="stmt"/>
            <line num="43" count="122" type="stmt"/>
            <line complexity="4" visibility="public" signature="firstToken() : Token" num="46" count="8" type="method"/>
            <line num="48" count="8" type="stmt"/>
            <line falsecount="0" truecount="7" num="48" type="cond"/>
            <line num="49" count="7" type="stmt"/>
            <line num="50" count="7" type="stmt"/>
            <line falsecount="0" truecount="2" num="50" type="cond"/>
            <line num="51" count="2" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="57" count="8" type="stmt"/>
            <line complexity="4" visibility="public" signature="lastToken() : Token" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parent() : Tree" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="setParent(Tree) : void" num="80" count="576" type="method"/>
            <line num="81" count="576" type="stmt"/>
            <line complexity="2" visibility="public" signature="children() : List&lt;Tree&gt;" num="86" count="938" type="method"/>
            <line num="87" count="938" type="stmt"/>
            <line falsecount="257" truecount="681" num="87" type="cond"/>
            <line num="88" count="681" type="stmt"/>
            <line num="90" count="938" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/PythonTreeMaker.java" name="PythonTreeMaker.java">
            <metrics coveredelements="211" coveredconditionals="63" complexity="259" loc="1328" coveredmethods="18" methods="80" elements="1116" classes="1" ncloc="1180" statements="724" conditionals="312" coveredstatements="130"/>
            <class name="PythonTreeMaker">
               <metrics coveredelements="211" coveredconditionals="63" complexity="259" coveredmethods="18" methods="80" elements="1116" statements="724" conditionals="312" coveredstatements="130"/>
            </class>
            <line complexity="2" visibility="public" signature="fileInput(AstNode) : FileInput" num="103" count="606" type="method"/>
            <line num="104" count="606" type="stmt"/>
            <line num="105" count="72" type="stmt"/>
            <line falsecount="57" truecount="0" num="105" type="cond"/>
            <line num="106" count="72" type="stmt"/>
            <line num="107" count="72" type="stmt"/>
            <line num="108" count="72" type="stmt"/>
            <line num="109" count="72" type="stmt"/>
            <line complexity="2" visibility="private" signature="toPyToken(com.sonar.sslr.api.Token) : Token" num="112" count="1269" type="method"/>
            <line num="113" count="1269" type="stmt"/>
            <line falsecount="1269" truecount="0" num="113" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="1269" type="stmt"/>
            <line complexity="1" visibility="private" signature="toPyToken(List&lt;com.sonar.sslr.api.Token&gt;) : List&lt;Token&gt;" num="119" count="96" type="method"/>
            <line num="120" count="96" type="stmt"/>
            <line complexity="2" visibility="public" signature="setParents(Tree) : void" num="123" count="648" type="method"/>
            <line num="124" count="648" type="stmt"/>
            <line num="125" count="576" type="stmt"/>
            <line falsecount="0" truecount="576" num="125" type="cond"/>
            <line num="126" count="576" type="stmt"/>
            <line num="127" count="576" type="stmt"/>
            <line complexity="32" visibility="private" signature="statement(StatementWithSeparator) : Statement" num="132" count="636" type="method"/>
            <line num="133" count="636" type="stmt"/>
            <line num="134" count="636" type="stmt"/>
            <line falsecount="621" truecount="0" num="134" type="cond"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="621" type="stmt"/>
            <line falsecount="608" truecount="13" num="137" type="cond"/>
            <line num="138" count="13" type="stmt"/>
            <line num="140" count="608" type="stmt"/>
            <line falsecount="596" truecount="0" num="140" type="cond"/>
            <line num="141" count="0" type="stmt"/>
            <line num="143" count="596" type="stmt"/>
            <line falsecount="596" truecount="0" num="143" type="cond"/>
            <line num="144" count="0" type="stmt"/>
            <line num="146" count="596" type="stmt"/>
            <line falsecount="595" truecount="0" num="146" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="149" count="595" type="stmt"/>
            <line falsecount="595" truecount="0" num="149" type="cond"/>
            <line num="150" count="0" type="stmt"/>
            <line num="152" count="595" type="stmt"/>
            <line falsecount="593" truecount="0" num="152" type="cond"/>
            <line num="153" count="0" type="stmt"/>
            <line num="155" count="593" type="stmt"/>
            <line falsecount="592" truecount="0" num="155" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line num="158" count="592" type="stmt"/>
            <line falsecount="591" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="161" count="591" type="stmt"/>
            <line falsecount="591" truecount="0" num="161" type="cond"/>
            <line num="162" count="0" type="stmt"/>
            <line num="164" count="591" type="stmt"/>
            <line falsecount="591" truecount="0" num="164" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="167" count="591" type="stmt"/>
            <line falsecount="370" truecount="0" num="167" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line num="170" count="370" type="stmt"/>
            <line falsecount="274" truecount="0" num="170" type="cond"/>
            <line num="171" count="0" type="stmt"/>
            <line num="173" count="274" type="stmt"/>
            <line falsecount="183" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line num="176" count="183" type="stmt"/>
            <line falsecount="180" truecount="0" num="176" type="cond"/>
            <line num="177" count="0" type="stmt"/>
            <line num="179" count="180" type="stmt"/>
            <line falsecount="178" truecount="0" num="179" type="cond"/>
            <line num="180" count="0" type="stmt"/>
            <line num="182" count="178" type="stmt"/>
            <line falsecount="176" truecount="0" num="182" type="cond"/>
            <line num="183" count="0" type="stmt"/>
            <line num="185" count="176" type="stmt"/>
            <line falsecount="175" truecount="0" num="185" type="cond"/>
            <line num="186" count="0" type="stmt"/>
            <line num="188" count="175" type="stmt"/>
            <line falsecount="174" truecount="0" num="188" type="cond"/>
            <line num="189" count="0" type="stmt"/>
            <line num="191" count="174" type="stmt"/>
            <line falsecount="118" truecount="0" num="191" type="cond"/>
            <line num="192" count="0" type="stmt"/>
            <line num="194" count="118" type="stmt"/>
            <line falsecount="118" truecount="0" num="194" type="cond"/>
            <line num="195" count="0" type="stmt"/>
            <line num="197" count="118" type="stmt"/>
            <line falsecount="0" truecount="114" num="197" type="cond"/>
            <line num="198" count="114" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="200" type="cond"/>
            <line num="201" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="203" type="cond"/>
            <line num="204" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="206" type="cond"/>
            <line num="207" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="209" type="cond"/>
            <line num="210" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="annotatedAssignment(StatementWithSeparator) : AnnotatedAssignment" num="215" count="0" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="225" type="cond"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getStatementListFromSuite(AstNode) : StatementList" num="233" count="0" type="method"/>
            <line num="234" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getStatementsFromSuite(AstNode) : List&lt;Statement&gt;" num="237" count="0" type="method"/>
            <line num="238" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="238" type="cond"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="240" type="cond"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getStatements(AstNode) : List&lt;StatementWithSeparator&gt;" num="250" count="635" type="method"/>
            <line num="251" count="635" type="stmt"/>
            <line num="252" count="635" type="stmt"/>
            <line num="253" count="635" type="stmt"/>
            <line num="254" count="3095" type="stmt"/>
            <line falsecount="0" truecount="1302" num="254" type="cond"/>
            <line num="255" count="1302" type="stmt"/>
            <line num="256" count="1302" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="262" count="635" type="stmt"/>
            <line complexity="3" visibility="private" signature="getStatementsWithSeparators(AstNode) : List&lt;StatementWithSeparator&gt;" num="265" count="1312" type="method"/>
            <line num="266" count="1312" type="stmt"/>
            <line num="267" count="1312" type="stmt"/>
            <line num="268" count="1312" type="stmt"/>
            <line num="269" count="1312" type="stmt"/>
            <line num="270" count="1312" type="stmt"/>
            <line num="271" count="1312" type="stmt"/>
            <line falsecount="1312" truecount="1324" num="271" type="cond"/>
            <line num="272" count="1324" type="stmt"/>
            <line num="273" count="1324" type="stmt"/>
            <line num="274" count="1324" type="stmt"/>
            <line num="275" count="1324" type="stmt"/>
            <line num="276" count="1324" type="stmt"/>
            <line falsecount="0" truecount="1312" num="276" type="cond"/>
            <line num="277" count="1312" type="stmt"/>
            <line num="279" count="1324" type="stmt"/>
            <line num="281" count="1312" type="stmt"/>
            <line complexity="1" visibility="public" signature="printStatement(StatementWithSeparator) : PrintStatement" num="285" count="15" type="method"/>
            <line num="286" count="15" type="stmt"/>
            <line num="287" count="15" type="stmt"/>
            <line num="288" count="15" type="stmt"/>
            <line num="289" count="15" type="stmt"/>
            <line complexity="3" visibility="public" signature="execStatement(StatementWithSeparator) : ExecStatement" num="292" count="0" type="method"/>
            <line num="293" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="297" type="cond"/>
            <line num="298" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="304" type="cond"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="assertStatement(StatementWithSeparator) : AssertStatement" num="311" count="0" type="method"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="317" type="cond"/>
            <line num="318" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="passStatement(StatementWithSeparator) : PassStatement" num="323" count="14" type="method"/>
            <line num="324" count="14" type="stmt"/>
            <line num="325" count="14" type="stmt"/>
            <line num="326" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="delStatement(StatementWithSeparator) : DelStatement" num="329" count="0" type="method"/>
            <line num="330" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="returnStatement(StatementWithSeparator) : ReturnStatement" num="336" count="0" type="method"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="341" type="cond"/>
            <line num="342" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="yieldStatement(StatementWithSeparator) : YieldStatement" num="347" count="0" type="method"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="yieldExpression(AstNode) : YieldExpression" num="353" count="0" type="method"/>
            <line num="354" count="0" type="stmt"/>
            <line num="355" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="357" type="cond"/>
            <line num="358" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="361" type="cond"/>
            <line num="362" count="0" type="stmt"/>
            <line num="364" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="364" type="cond"/>
            <line complexity="4" visibility="public" signature="raiseStatement(StatementWithSeparator) : RaiseStatement" num="367" count="0" type="method"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line num="372" count="0" type="stmt"/>
            <line num="373" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="373" type="cond"/>
            <line num="374" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="383" type="cond"/>
            <line falsecount="0" truecount="0" num="383" type="cond"/>
            <line complexity="1" visibility="public" signature="breakStatement(StatementWithSeparator) : BreakStatement" num="386" count="1" type="method"/>
            <line num="387" count="1" type="stmt"/>
            <line num="388" count="1" type="stmt"/>
            <line num="389" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="continueStatement(StatementWithSeparator) : ContinueStatement" num="392" count="1" type="method"/>
            <line num="393" count="1" type="stmt"/>
            <line num="394" count="1" type="stmt"/>
            <line num="395" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="importStatement(StatementWithSeparator) : ImportStatement" num="398" count="0" type="method"/>
            <line num="399" count="0" type="stmt"/>
            <line num="400" count="0" type="stmt"/>
            <line num="401" count="0" type="stmt"/>
            <line num="402" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="402" type="cond"/>
            <line num="403" count="0" type="stmt"/>
            <line num="405" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="importName(AstNode,Separators) : ImportName" num="408" count="0" type="method"/>
            <line num="409" count="0" type="stmt"/>
            <line num="410" count="0" type="stmt"/>
            <line num="415" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="importFromStatement(AstNode,Separators) : ImportFrom" num="418" count="0" type="method"/>
            <line num="419" count="0" type="stmt"/>
            <line num="420" count="0" type="stmt"/>
            <line num="421" count="0" type="stmt"/>
            <line num="422" count="0" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line num="424" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="424" type="cond"/>
            <line num="425" count="0" type="stmt"/>
            <line num="427" count="0" type="stmt"/>
            <line num="428" count="0" type="stmt"/>
            <line num="429" count="0" type="stmt"/>
            <line num="430" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="430" type="cond"/>
            <line num="431" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line num="436" count="0" type="stmt"/>
            <line num="437" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="437" type="cond"/>
            <line num="438" count="0" type="stmt"/>
            <line num="440" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="aliasedName(AstNode) : AliasedName" num="443" count="0" type="method"/>
            <line num="444" count="0" type="stmt"/>
            <line num="445" count="0" type="stmt"/>
            <line num="446" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="446" type="cond"/>
            <line num="447" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line num="453" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="453" type="cond"/>
            <line num="454" count="0" type="stmt"/>
            <line num="456" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="dottedName(AstNode) : DottedName" num="459" count="0" type="method"/>
            <line num="460" count="0" type="stmt"/>
            <line num="464" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="globalStatement(StatementWithSeparator) : GlobalStatement" num="467" count="0" type="method"/>
            <line num="468" count="0" type="stmt"/>
            <line num="469" count="0" type="stmt"/>
            <line num="470" count="0" type="stmt"/>
            <line num="471" count="0" type="stmt"/>
            <line num="474" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="nonlocalStatement(StatementWithSeparator) : NonlocalStatement" num="477" count="0" type="method"/>
            <line num="478" count="0" type="stmt"/>
            <line num="479" count="0" type="stmt"/>
            <line num="480" count="0" type="stmt"/>
            <line num="481" count="0" type="stmt"/>
            <line num="484" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="ifStatement(AstNode) : IfStatement" num="488" count="0" type="method"/>
            <line num="489" count="0" type="stmt"/>
            <line num="490" count="0" type="stmt"/>
            <line num="491" count="0" type="stmt"/>
            <line num="492" count="0" type="stmt"/>
            <line num="493" count="0" type="stmt"/>
            <line num="494" count="0" type="stmt"/>
            <line num="495" count="0" type="stmt"/>
            <line num="496" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="496" type="cond"/>
            <line num="497" count="0" type="stmt"/>
            <line num="499" count="0" type="stmt"/>
            <line num="503" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="elifStatement(AstNode) : IfStatement" num="506" count="0" type="method"/>
            <line num="507" count="0" type="stmt"/>
            <line num="508" count="0" type="stmt"/>
            <line num="509" count="0" type="stmt"/>
            <line num="510" count="0" type="stmt"/>
            <line num="511" count="0" type="stmt"/>
            <line num="512" count="0" type="stmt"/>
            <line num="513" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="elseClause(AstNode) : ElseClause" num="516" count="0" type="method"/>
            <line num="517" count="0" type="stmt"/>
            <line num="518" count="0" type="stmt"/>
            <line num="519" count="0" type="stmt"/>
            <line num="520" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="funcDefStatement(AstNode) : FunctionDef" num="523" count="0" type="method"/>
            <line num="524" count="0" type="stmt"/>
            <line num="525" count="0" type="stmt"/>
            <line num="526" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="526" type="cond"/>
            <line num="527" count="0" type="stmt"/>
            <line num="531" count="0" type="stmt"/>
            <line num="532" count="0" type="stmt"/>
            <line num="533" count="0" type="stmt"/>
            <line num="534" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="534" type="cond"/>
            <line num="535" count="0" type="stmt"/>
            <line num="537" count="0" type="stmt"/>
            <line num="538" count="0" type="stmt"/>
            <line num="541" count="0" type="stmt"/>
            <line num="542" count="0" type="stmt"/>
            <line num="543" count="0" type="stmt"/>
            <line num="544" count="0" type="stmt"/>
            <line num="545" count="0" type="stmt"/>
            <line num="546" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="546" type="cond"/>
            <line num="547" count="0" type="stmt"/>
            <line num="549" count="0" type="stmt"/>
            <line num="550" count="0" type="stmt"/>
            <line num="552" count="0" type="stmt"/>
            <line num="553" count="0" type="stmt"/>
            <line num="554" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="554" type="cond"/>
            <line num="555" count="0" type="stmt"/>
            <line num="556" count="0" type="stmt"/>
            <line num="559" count="0" type="stmt"/>
            <line num="560" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="decorator(AstNode) : Decorator" num="565" count="0" type="method"/>
            <line num="566" count="0" type="stmt"/>
            <line num="567" count="0" type="stmt"/>
            <line num="568" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="568" type="cond"/>
            <line num="569" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="569" type="cond"/>
            <line num="570" count="0" type="stmt"/>
            <line num="571" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="571" type="cond"/>
            <line num="572" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="isMethodDefinition(AstNode) : boolean" num="575" count="0" type="method"/>
            <line num="576" count="0" type="stmt"/>
            <line num="577" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="577" type="cond"/>
            <line num="578" count="0" type="stmt"/>
            <line num="580" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="classDefStatement(AstNode) : ClassDef" num="583" count="0" type="method"/>
            <line num="584" count="0" type="stmt"/>
            <line num="585" count="0" type="stmt"/>
            <line num="586" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="586" type="cond"/>
            <line num="587" count="0" type="stmt"/>
            <line num="591" count="0" type="stmt"/>
            <line num="592" count="0" type="stmt"/>
            <line num="593" count="0" type="stmt"/>
            <line num="594" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="594" type="cond"/>
            <line num="595" count="0" type="stmt"/>
            <line num="597" count="0" type="stmt"/>
            <line num="598" count="0" type="stmt"/>
            <line num="599" count="0" type="stmt"/>
            <line num="600" count="0" type="stmt"/>
            <line num="601" count="0" type="stmt"/>
            <line num="602" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="603" type="cond"/>
            <line falsecount="0" truecount="0" num="603" type="cond"/>
            <line complexity="1" visibility="private" signature="name(AstNode) : Name" num="607" count="0" type="method"/>
            <line num="608" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="variable(AstNode) : Name" num="611" count="0" type="method"/>
            <line num="612" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="forStatement(AstNode) : ForStatement" num="615" count="0" type="method"/>
            <line num="616" count="0" type="stmt"/>
            <line num="617" count="0" type="stmt"/>
            <line num="618" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="618" type="cond"/>
            <line num="619" count="0" type="stmt"/>
            <line num="620" count="0" type="stmt"/>
            <line num="622" count="0" type="stmt"/>
            <line num="623" count="0" type="stmt"/>
            <line num="624" count="0" type="stmt"/>
            <line num="625" count="0" type="stmt"/>
            <line num="626" count="0" type="stmt"/>
            <line num="627" count="0" type="stmt"/>
            <line num="628" count="0" type="stmt"/>
            <line num="629" count="0" type="stmt"/>
            <line num="630" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="630" type="cond"/>
            <line num="631" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="whileStatement(AstNode) : WhileStatementImpl" num="635" count="0" type="method"/>
            <line num="636" count="0" type="stmt"/>
            <line num="637" count="0" type="stmt"/>
            <line num="638" count="0" type="stmt"/>
            <line num="639" count="0" type="stmt"/>
            <line num="640" count="0" type="stmt"/>
            <line num="641" count="0" type="stmt"/>
            <line num="642" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="642" type="cond"/>
            <line num="643" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="expressionStatement(StatementWithSeparator) : ExpressionStatement" num="648" count="116" type="method"/>
            <line num="649" count="116" type="stmt"/>
            <line num="650" count="116" type="stmt"/>
            <line num="651" count="116" type="stmt"/>
            <line num="654" count="65" type="stmt"/>
            <line complexity="2" visibility="public" signature="assignment(StatementWithSeparator) : AssignmentStatement" num="657" count="0" type="method"/>
            <line num="658" count="0" type="stmt"/>
            <line num="659" count="0" type="stmt"/>
            <line num="660" count="0" type="stmt"/>
            <line num="661" count="0" type="stmt"/>
            <line num="662" count="0" type="stmt"/>
            <line num="663" count="0" type="stmt"/>
            <line num="664" count="0" type="stmt"/>
            <line num="665" count="0" type="stmt"/>
            <line num="667" count="0" type="stmt"/>
            <line num="668" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="668" type="cond"/>
            <line num="669" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="compoundAssignment(StatementWithSeparator) : CompoundAssignmentStatement" num="672" count="0" type="method"/>
            <line num="673" count="0" type="stmt"/>
            <line num="674" count="0" type="stmt"/>
            <line num="675" count="0" type="stmt"/>
            <line num="676" count="0" type="stmt"/>
            <line num="677" count="0" type="stmt"/>
            <line num="678" count="0" type="stmt"/>
            <line num="679" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="679" type="cond"/>
            <line num="680" count="0" type="stmt"/>
            <line num="682" count="0" type="stmt"/>
            <line num="684" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="expressionList(AstNode) : ExpressionList" num="687" count="70" type="method"/>
            <line num="688" count="70" type="stmt"/>
            <line falsecount="0" truecount="70" num="688" type="cond"/>
            <line num="689" count="70" type="stmt"/>
            <line num="692" count="1" type="stmt"/>
            <line num="693" count="1" type="stmt"/>
            <line num="695" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="tryStatement(AstNode) : TryStatement" num="698" count="0" type="method"/>
            <line num="699" count="0" type="stmt"/>
            <line num="700" count="0" type="stmt"/>
            <line num="701" count="0" type="stmt"/>
            <line num="702" count="0" type="stmt"/>
            <line num="703" count="0" type="stmt"/>
            <line num="705" count="0" type="stmt"/>
            <line num="706" count="0" type="stmt"/>
            <line num="709" count="0" type="stmt"/>
            <line num="710" count="0" type="stmt"/>
            <line num="711" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="711" type="cond"/>
            <line num="712" count="0" type="stmt"/>
            <line num="713" count="0" type="stmt"/>
            <line num="714" count="0" type="stmt"/>
            <line num="715" count="0" type="stmt"/>
            <line num="718" count="0" type="stmt"/>
            <line num="719" count="0" type="stmt"/>
            <line num="720" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="720" type="cond"/>
            <line num="721" count="0" type="stmt"/>
            <line num="723" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="withStatement(AstNode) : WithStatement" num="727" count="0" type="method"/>
            <line num="728" count="0" type="stmt"/>
            <line num="729" count="0" type="stmt"/>
            <line num="730" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="730" type="cond"/>
            <line num="731" count="0" type="stmt"/>
            <line num="732" count="0" type="stmt"/>
            <line num="734" count="0" type="stmt"/>
            <line num="735" count="0" type="stmt"/>
            <line num="736" count="0" type="stmt"/>
            <line num="737" count="0" type="stmt"/>
            <line num="738" count="0" type="stmt"/>
            <line num="739" count="0" type="stmt"/>
            <line num="740" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="withItems(List&lt;AstNode&gt;) : List&lt;WithItem&gt;" num="743" count="0" type="method"/>
            <line num="744" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="withItem(AstNode) : WithItem" num="747" count="0" type="method"/>
            <line num="748" count="0" type="stmt"/>
            <line num="749" count="0" type="stmt"/>
            <line num="750" count="0" type="stmt"/>
            <line num="751" count="0" type="stmt"/>
            <line num="752" count="0" type="stmt"/>
            <line num="753" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="753" type="cond"/>
            <line num="754" count="0" type="stmt"/>
            <line num="755" count="0" type="stmt"/>
            <line num="757" count="0" type="stmt"/>
            <line complexity="9" visibility="private" signature="exceptClause(AstNode,StatementList) : ExceptClause" num="760" count="0" type="method"/>
            <line num="761" count="0" type="stmt"/>
            <line num="762" count="0" type="stmt"/>
            <line num="763" count="0" type="stmt"/>
            <line num="764" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="764" type="cond"/>
            <line num="765" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="765" type="cond"/>
            <line num="766" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="766" type="cond"/>
            <line num="767" count="0" type="stmt"/>
            <line num="768" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="768" type="cond"/>
            <line num="769" count="0" type="stmt"/>
            <line num="771" count="0" type="stmt"/>
            <line num="772" count="0" type="stmt"/>
            <line num="773" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="773" type="cond"/>
            <line num="774" count="0" type="stmt"/>
            <line num="775" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="775" type="cond"/>
            <line num="776" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="776" type="cond"/>
            <line num="777" count="0" type="stmt"/>
            <line num="779" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="expressionsFromTest(AstNode) : List&lt;Expression&gt;" num="784" count="21" type="method"/>
            <line num="785" count="21" type="stmt"/>
            <line complexity="1" visibility="private" signature="expressionsFromTestListStarExpr(AstNode) : List&lt;Expression&gt;" num="788" count="0" type="method"/>
            <line num="789" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="expressionsFromExprList(AstNode) : List&lt;Expression&gt;" num="794" count="0" type="method"/>
            <line num="795" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="exprListOrTestList(AstNode) : Expression" num="800" count="0" type="method"/>
            <line num="801" count="0" type="stmt"/>
            <line num="805" count="0" type="stmt"/>
            <line num="806" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="806" type="cond"/>
            <line num="807" count="0" type="stmt"/>
            <line num="809" count="0" type="stmt"/>
            <line num="810" count="0" type="stmt"/>
            <line complexity="29" visibility="public" signature="expression(AstNode) : Expression" num="813" count="986" type="method"/>
            <line num="814" count="986" type="stmt"/>
            <line falsecount="977" truecount="0" num="814" type="cond"/>
            <line num="815" count="0" type="stmt"/>
            <line num="817" count="977" type="stmt"/>
            <line falsecount="964" truecount="13" num="817" type="cond"/>
            <line num="818" count="13" type="stmt"/>
            <line num="820" count="964" type="stmt"/>
            <line falsecount="955" truecount="0" num="820" type="cond"/>
            <line num="821" count="0" type="stmt"/>
            <line num="823" count="955" type="stmt"/>
            <line falsecount="953" truecount="0" num="823" type="cond"/>
            <line num="824" count="0" type="stmt"/>
            <line num="826" count="953" type="stmt"/>
            <line falsecount="811" truecount="142" num="826" type="cond"/>
            <line num="827" count="142" type="stmt"/>
            <line num="829" count="811" type="stmt"/>
            <line falsecount="611" truecount="200" num="829" type="cond"/>
            <line num="830" count="200" type="stmt"/>
            <line num="832" count="611" type="stmt"/>
            <line falsecount="608" truecount="0" num="832" type="cond"/>
            <line num="833" count="0" type="stmt"/>
            <line num="835" count="608" type="stmt"/>
            <line falsecount="578" truecount="0" num="835" type="cond"/>
            <line num="836" count="0" type="stmt"/>
            <line num="838" count="578" type="stmt"/>
            <line falsecount="578" truecount="0" num="838" type="cond"/>
            <line num="839" count="0" type="stmt"/>
            <line num="841" count="578" type="stmt"/>
            <line falsecount="411" truecount="0" num="841" type="cond"/>
            <line num="842" count="0" type="stmt"/>
            <line num="844" count="411" type="stmt"/>
            <line falsecount="408" truecount="0" num="844" type="cond"/>
            <line num="845" count="0" type="stmt"/>
            <line num="847" count="408" type="stmt"/>
            <line falsecount="67" truecount="341" num="847" type="cond"/>
            <line num="848" count="341" type="stmt"/>
            <line falsecount="0" truecount="341" num="848" type="cond"/>
            <line num="849" count="341" type="stmt"/>
            <line num="851" count="0" type="stmt"/>
            <line num="854" count="67" type="stmt"/>
            <line falsecount="48" truecount="0" num="854" type="cond"/>
            <line num="859" count="0" type="stmt"/>
            <line num="861" count="48" type="stmt"/>
            <line falsecount="9" truecount="0" num="861" type="cond"/>
            <line num="862" count="0" type="stmt"/>
            <line num="864" count="9" type="stmt"/>
            <line falsecount="9" truecount="0" num="864" type="cond"/>
            <line num="865" count="0" type="stmt"/>
            <line num="867" count="9" type="stmt"/>
            <line falsecount="6" truecount="0" num="867" type="cond"/>
            <line num="868" count="0" type="stmt"/>
            <line num="870" count="6" type="stmt"/>
            <line falsecount="4" truecount="0" num="870" type="cond"/>
            <line num="871" count="0" type="stmt"/>
            <line num="873" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="873" type="cond"/>
            <line num="874" count="2" type="stmt"/>
            <line num="876" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="876" type="cond"/>
            <line num="877" count="1" type="stmt"/>
            <line num="879" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="assignmentExpression(AstNode) : Expression" num="882" count="0" type="method"/>
            <line num="883" count="0" type="stmt"/>
            <line num="884" count="0" type="stmt"/>
            <line num="885" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="885" type="cond"/>
            <line num="886" count="0" type="stmt"/>
            <line num="887" count="0" type="stmt"/>
            <line num="889" count="0" type="stmt"/>
            <line num="890" count="0" type="stmt"/>
            <line num="891" count="0" type="stmt"/>
            <line num="892" count="0" type="stmt"/>
            <line num="893" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="repr(AstNode) : Expression" num="896" count="0" type="method"/>
            <line num="897" count="0" type="stmt"/>
            <line num="898" count="0" type="stmt"/>
            <line num="899" count="0" type="stmt"/>
            <line num="900" count="0" type="stmt"/>
            <line num="901" count="0" type="stmt"/>
            <line num="902" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="punctuators(AstNode,PythonPunctuator) : List&lt;Token&gt;" num="905" count="63" type="method"/>
            <line num="906" count="63" type="stmt"/>
            <line complexity="8" visibility="private" signature="dictOrSetLiteral(AstNode) : Expression" num="909" count="0" type="method"/>
            <line num="910" count="0" type="stmt"/>
            <line num="911" count="0" type="stmt"/>
            <line num="912" count="0" type="stmt"/>
            <line num="913" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="913" type="cond"/>
            <line num="914" count="0" type="stmt"/>
            <line num="916" count="0" type="stmt"/>
            <line num="917" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="917" type="cond"/>
            <line num="918" count="0" type="stmt"/>
            <line num="919" count="0" type="stmt"/>
            <line num="920" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="920" type="cond"/>
            <line num="921" count="0" type="stmt"/>
            <line num="922" count="0" type="stmt"/>
            <line num="923" count="0" type="stmt"/>
            <line num="925" count="0" type="stmt"/>
            <line num="926" count="0" type="stmt"/>
            <line num="929" count="0" type="stmt"/>
            <line num="930" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="930" type="cond"/>
            <line num="931" count="0" type="stmt"/>
            <line num="932" count="0" type="stmt"/>
            <line num="933" count="0" type="stmt"/>
            <line num="934" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="934" type="cond"/>
            <line num="935" count="0" type="stmt"/>
            <line num="936" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="936" type="cond"/>
            <line num="937" count="0" type="stmt"/>
            <line num="938" count="0" type="stmt"/>
            <line num="940" count="0" type="stmt"/>
            <line num="941" count="0" type="stmt"/>
            <line num="944" count="0" type="stmt"/>
            <line num="946" count="0" type="stmt"/>
            <line num="947" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="parenthesized(AstNode) : Expression" num="950" count="13" type="method"/>
            <line num="951" count="13" type="stmt"/>
            <line num="952" count="13" type="stmt"/>
            <line num="954" count="13" type="stmt"/>
            <line num="955" count="13" type="stmt"/>
            <line falsecount="13" truecount="0" num="955" type="cond"/>
            <line num="956" count="0" type="stmt"/>
            <line num="959" count="13" type="stmt"/>
            <line num="960" count="13" type="stmt"/>
            <line falsecount="11" truecount="0" num="960" type="cond"/>
            <line num="961" count="0" type="stmt"/>
            <line num="964" count="11" type="stmt"/>
            <line num="965" count="11" type="stmt"/>
            <line falsecount="9" truecount="0" num="965" type="cond"/>
            <line num="966" count="0" type="stmt"/>
            <line num="968" count="9" type="stmt"/>
            <line num="969" count="1" type="stmt"/>
            <line num="970" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="970" type="cond"/>
            <line num="971" count="1" type="stmt"/>
            <line num="972" count="1" type="stmt"/>
            <line num="975" count="0" type="stmt"/>
            <line num="976" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="conditionalExpression(AstNode) : ConditionalExpression" num="979" count="0" type="method"/>
            <line num="980" count="0" type="stmt"/>
            <line num="981" count="0" type="stmt"/>
            <line num="982" count="0" type="stmt"/>
            <line num="983" count="0" type="stmt"/>
            <line num="984" count="0" type="stmt"/>
            <line num="985" count="0" type="stmt"/>
            <line num="986" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="powerExpression(AstNode) : Expression" num="989" count="0" type="method"/>
            <line num="990" count="0" type="stmt"/>
            <line num="991" count="0" type="stmt"/>
            <line num="992" count="0" type="stmt"/>
            <line num="994" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="994" type="cond"/>
            <line num="995" count="0" type="stmt"/>
            <line num="997" count="0" type="stmt"/>
            <line num="998" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="998" type="cond"/>
            <line num="999" count="0" type="stmt"/>
            <line num="1001" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="withTrailer(Expression,AstNode) : Expression" num="1004" count="0" type="method"/>
            <line num="1005" count="0" type="stmt"/>
            <line num="1007" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1007" type="cond"/>
            <line num="1008" count="0" type="stmt"/>
            <line num="1009" count="0" type="stmt"/>
            <line num="1010" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1010" type="cond"/>
            <line num="1011" count="0" type="stmt"/>
            <line num="1013" count="0" type="stmt"/>
            <line num="1014" count="0" type="stmt"/>
            <line num="1015" count="0" type="stmt"/>
            <line num="1017" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1017" type="cond"/>
            <line num="1018" count="0" type="stmt"/>
            <line num="1019" count="0" type="stmt"/>
            <line num="1020" count="0" type="stmt"/>
            <line num="1023" count="0" type="stmt"/>
            <line num="1024" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="subscriptionOrSlicing(Expression,Token,AstNode,Token) : Expression" num="1028" count="0" type="method"/>
            <line num="1029" count="0" type="stmt"/>
            <line num="1030" count="0" type="stmt"/>
            <line num="1031" count="0" type="stmt"/>
            <line num="1032" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1032" type="cond"/>
            <line num="1033" count="0" type="stmt"/>
            <line num="1035" count="0" type="stmt"/>
            <line num="1042" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1042" type="cond"/>
            <line num="1043" count="0" type="stmt"/>
            <line num="1044" count="0" type="stmt"/>
            <line num="1045" count="0" type="stmt"/>
            <line num="1048" count="0" type="stmt"/>
            <line num="1049" count="0" type="stmt"/>
            <line num="1050" count="0" type="stmt"/>
            <line num="1051" count="0" type="stmt"/>
            <line complexity="4" visibility="package" signature="sliceItem(AstNode) : SliceItem" num="1055" count="0" type="method"/>
            <line num="1056" count="0" type="stmt"/>
            <line num="1057" count="0" type="stmt"/>
            <line num="1058" count="0" type="stmt"/>
            <line num="1059" count="0" type="stmt"/>
            <line num="1060" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1060" type="cond"/>
            <line num="1061" count="0" type="stmt"/>
            <line num="1062" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1062" type="cond"/>
            <line num="1063" count="0" type="stmt"/>
            <line num="1065" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="sliceBound(AstNode) : Expression" num="1068" count="0" type="method"/>
            <line num="1070" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1070" type="cond"/>
            <line num="1071" count="0" type="stmt"/>
            <line num="1073" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="listLiteral(AstNode) : Expression" num="1076" count="0" type="method"/>
            <line num="1077" count="0" type="stmt"/>
            <line num="1078" count="0" type="stmt"/>
            <line num="1080" count="0" type="stmt"/>
            <line num="1081" count="0" type="stmt"/>
            <line num="1082" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1082" type="cond"/>
            <line num="1083" count="0" type="stmt"/>
            <line num="1084" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1084" type="cond"/>
            <line num="1085" count="0" type="stmt"/>
            <line num="1086" count="0" type="stmt"/>
            <line num="1088" count="0" type="stmt"/>
            <line num="1090" count="0" type="stmt"/>
            <line num="1092" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="compFor(AstNode) : ComprehensionFor" num="1095" count="0" type="method"/>
            <line num="1096" count="0" type="stmt"/>
            <line num="1097" count="0" type="stmt"/>
            <line num="1098" count="0" type="stmt"/>
            <line num="1099" count="0" type="stmt"/>
            <line num="1100" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1100" type="cond"/>
            <line num="1102" count="0" type="stmt"/>
            <line num="1104" count="0" type="stmt"/>
            <line num="1105" count="0" type="stmt"/>
            <line num="1106" count="0" type="stmt"/>
            <line num="1107" count="0" type="stmt"/>
            <line num="1108" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="compClause(AstNode) : ComprehensionClause" num="1111" count="0" type="method"/>
            <line num="1113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1113" type="cond"/>
            <line num="1114" count="0" type="stmt"/>
            <line num="1116" count="0" type="stmt"/>
            <line num="1117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1117" type="cond"/>
            <line num="1118" count="0" type="stmt"/>
            <line num="1120" count="0" type="stmt"/>
            <line num="1121" count="0" type="stmt"/>
            <line num="1122" count="0" type="stmt"/>
            <line num="1123" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="argList(AstNode) : ArgList" num="1127" count="0" type="method"/>
            <line num="1129" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1129" type="cond"/>
            <line num="1130" count="0" type="stmt"/>
            <line num="1133" count="0" type="stmt"/>
            <line num="1134" count="0" type="stmt"/>
            <line num="1136" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="checkGeneratorExpressionInArgument(List&lt;Argument&gt;) : void" num="1143" count="0" type="method"/>
            <line num="1144" count="0" type="stmt"/>
            <line num="1149" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1149" type="cond"/>
            <line num="1150" count="0" type="stmt"/>
            <line num="1151" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="argument(AstNode) : Argument" num="1155" count="0" type="method"/>
            <line num="1156" count="0" type="stmt"/>
            <line num="1157" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1157" type="cond"/>
            <line num="1158" count="0" type="stmt"/>
            <line num="1159" count="0" type="stmt"/>
            <line num="1161" count="0" type="stmt"/>
            <line num="1163" count="0" type="stmt"/>
            <line num="1164" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1164" type="cond"/>
            <line num="1165" count="0" type="stmt"/>
            <line num="1166" count="0" type="stmt"/>
            <line num="1168" count="0" type="stmt"/>
            <line num="1169" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1169" type="cond"/>
            <line num="1170" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1170" type="cond"/>
            <line num="1171" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1171" type="cond"/>
            <line num="1173" count="0" type="stmt"/>
            <line num="1174" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1174" type="cond"/>
            <line num="1176" count="0" type="stmt"/>
            <line num="1177" count="0" type="stmt"/>
            <line num="1179" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1179" type="cond"/>
            <line complexity="5" visibility="private" signature="binaryExpression(AstNode) : Expression" num="1182" count="0" type="method"/>
            <line num="1183" count="0" type="stmt"/>
            <line num="1184" count="0" type="stmt"/>
            <line num="1185" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1185" type="cond"/>
            <line num="1186" count="0" type="stmt"/>
            <line num="1187" count="0" type="stmt"/>
            <line num="1188" count="0" type="stmt"/>
            <line num="1189" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1189" type="cond"/>
            <line num="1190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1190" type="cond"/>
            <line num="1191" count="0" type="stmt"/>
            <line num="1192" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1192" type="cond"/>
            <line num="1193" count="0" type="stmt"/>
            <line num="1195" count="0" type="stmt"/>
            <line num="1198" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="lambdaExpression(AstNode) : LambdaExpression" num="1201" count="0" type="method"/>
            <line num="1202" count="0" type="stmt"/>
            <line num="1203" count="0" type="stmt"/>
            <line num="1204" count="0" type="stmt"/>
            <line num="1205" count="0" type="stmt"/>
            <line num="1206" count="0" type="stmt"/>
            <line num="1207" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1207" type="cond"/>
            <line num="1208" count="0" type="stmt"/>
            <line num="1210" count="0" type="stmt"/>
            <line num="1211" count="0" type="stmt"/>
            <line num="1214" count="0" type="stmt"/>
            <line complexity="12" visibility="private" signature="parameter(AstNode) : AnyParameter" num="1217" count="0" type="method"/>
            <line num="1218" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1218" type="cond"/>
            <line num="1219" count="0" type="stmt"/>
            <line num="1221" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1221" type="cond"/>
            <line num="1222" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1222" type="cond"/>
            <line num="1223" count="0" type="stmt"/>
            <line num="1225" count="0" type="stmt"/>
            <line num="1227" count="0" type="stmt"/>
            <line num="1229" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1229" type="cond"/>
            <line num="1230" count="0" type="stmt"/>
            <line num="1235" count="0" type="stmt"/>
            <line num="1237" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1237" type="cond"/>
            <line num="1238" count="0" type="stmt"/>
            <line num="1241" count="0" type="stmt"/>
            <line num="1242" count="0" type="stmt"/>
            <line num="1247" count="0" type="stmt"/>
            <line num="1248" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1248" type="cond"/>
            <line num="1249" count="0" type="stmt"/>
            <line num="1252" count="0" type="stmt"/>
            <line num="1254" count="0" type="stmt"/>
            <line num="1255" count="0" type="stmt"/>
            <line num="1256" count="0" type="stmt"/>
            <line num="1257" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1257" type="cond"/>
            <line num="1258" count="0" type="stmt"/>
            <line num="1259" count="0" type="stmt"/>
            <line num="1262" count="0" type="stmt"/>
            <line num="1263" count="0" type="stmt"/>
            <line num="1264" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1264" type="cond"/>
            <line num="1265" count="0" type="stmt"/>
            <line num="1266" count="0" type="stmt"/>
            <line num="1269" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="numericLiteral(AstNode) : Expression" num="1272" count="0" type="method"/>
            <line num="1273" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="stringLiteral(AstNode) : Expression" num="1276" count="142" type="method"/>
            <line num="1277" count="142" type="stmt"/>
            <line num="1278" count="142" type="stmt"/>
            <line num="1279" count="147" type="stmt"/>
            <line num="1280" count="147" type="stmt"/>
            <line num="1281" count="147" type="stmt"/>
            <line falsecount="138" truecount="9" num="1281" type="cond"/>
            <line num="1282" count="9" type="stmt"/>
            <line num="1286" count="141" type="stmt"/>
            <line num="1288" count="136" type="stmt"/>
            <line complexity="2" visibility="private" signature="formatSpecifier(AstNode) : FormatSpecifier" num="1291" count="0" type="method"/>
            <line num="1292" count="0" type="stmt"/>
            <line num="1293" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1293" type="cond"/>
            <line num="1294" count="0" type="stmt"/>
            <line num="1297" count="0" type="stmt"/>
            <line num="1298" count="0" type="stmt"/>
            <line num="1303" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="formattedExpression(AstNode) : FormattedExpression" num="1306" count="0" type="method"/>
            <line num="1307" count="0" type="stmt"/>
            <line num="1308" count="0" type="stmt"/>
            <line num="1309" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1309" type="cond"/>
            <line num="1310" count="0" type="stmt"/>
            <line num="1312" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="suiteIndent(AstNode) : Token" num="1315" count="0" type="method"/>
            <line num="1316" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1316" type="cond"/>
            <line complexity="2" visibility="private" signature="suiteNewLine(AstNode) : Token" num="1319" count="0" type="method"/>
            <line num="1320" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1320" type="cond"/>
            <line complexity="2" visibility="private" signature="suiteDedent(AstNode) : Token" num="1323" count="0" type="method"/>
            <line num="1324" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1324" type="cond"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/QualifiedExpressionImpl.java" name="QualifiedExpressionImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="72" coveredmethods="0" methods="7" elements="16" classes="1" ncloc="44" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="QualifiedExpressionImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="QualifiedExpressionImpl(Name,Expression,Token)" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="qualifier() : Expression" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dotToken() : Token" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : Name" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/RaiseStatementImpl.java" name="RaiseStatementImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="95" coveredmethods="0" methods="9" elements="22" classes="1" ncloc="65" statements="13" conditionals="0" coveredstatements="0"/>
            <class name="RaiseStatementImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="9" elements="22" statements="13" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RaiseStatementImpl(Token,List&lt;Expression&gt;,Token,Expression,Separators)" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="raiseKeyword() : Token" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fromKeyword() : Token" num="57" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fromExpression() : Expression" num="63" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="expressions() : List&lt;Expression&gt;" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="separator() : Token" num="74" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/RegularArgumentImpl.java" name="RegularArgumentImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="82" coveredmethods="0" methods="8" elements="20" classes="1" ncloc="53" statements="12" conditionals="0" coveredstatements="0"/>
            <class name="RegularArgumentImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="8" elements="20" statements="12" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RegularArgumentImpl(Name,Token,Expression)" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RegularArgumentImpl(Expression)" num="45" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="keywordArgument() : Name" num="51" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equalToken() : Token" num="57" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="expression() : Expression" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/ReprExpressionImpl.java" name="ReprExpressionImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="71" coveredmethods="0" methods="7" elements="16" classes="1" ncloc="43" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="ReprExpressionImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ReprExpressionImpl(Token,ExpressionList,Token)" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="openingBacktick() : Token" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="expressionList() : ExpressionList" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="closingBacktick() : Token" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/ReturnStatementImpl.java" name="ReturnStatementImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="74" coveredmethods="0" methods="7" elements="16" classes="1" ncloc="46" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="ReturnStatementImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ReturnStatementImpl(Token,List&lt;Expression&gt;,Separators)" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnKeyword() : Token" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="expressions() : List&lt;Expression&gt;" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="separator() : Token" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/Separators.java" name="Separators.java">
            <metrics coveredelements="8" coveredconditionals="2" complexity="6" loc="53" coveredmethods="2" methods="3" elements="14" classes="1" ncloc="29" statements="5" conditionals="6" coveredstatements="4"/>
            <class name="Separators">
               <metrics coveredelements="8" coveredconditionals="2" complexity="6" coveredmethods="2" methods="3" elements="14" statements="5" conditionals="6" coveredstatements="4"/>
            </class>
            <line complexity="3" visibility="package" signature="Separators(AstNode,AstNode)" num="39" count="1328" type="method"/>
            <line num="40" count="1328" type="stmt"/>
            <line falsecount="0" truecount="1313" num="40" type="cond"/>
            <line num="41" count="1328" type="stmt"/>
            <line falsecount="0" truecount="180" num="41" type="cond"/>
            <line num="42" count="1328" type="stmt"/>
            <line complexity="2" visibility="public" signature="last() : Token" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="47" type="cond"/>
            <line complexity="1" visibility="public" signature="elements() : List&lt;Token&gt;" num="50" count="67" type="method"/>
            <line num="51" count="67" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/SetLiteralImpl.java" name="SetLiteralImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="49" coveredmethods="0" methods="4" elements="8" classes="1" ncloc="25" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="SetLiteralImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SetLiteralImpl(Token,List&lt;Expression&gt;,List&lt;Token&gt;,Token)" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="type() : InferredType" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/SimpleStatement.java" name="SimpleStatement.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="49" coveredmethods="0" methods="1" elements="20" classes="1" ncloc="25" statements="11" conditionals="8" coveredstatements="0"/>
            <class name="SimpleStatement">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="1" elements="20" statements="11" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="7" visibility="public" signature="lastToken() : Token" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="34" type="cond"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="38" type="cond"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="42" type="cond"/>
            <line num="43" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line num="47" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/SliceExpressionImpl.java" name="SliceExpressionImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="12" loc="105" coveredmethods="0" methods="10" elements="32" classes="1" ncloc="72" statements="18" conditionals="4" coveredstatements="0"/>
            <class name="SliceExpressionImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="12" coveredmethods="0" methods="10" elements="32" statements="18" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SliceExpressionImpl(Expression,Token,SliceList,Token)" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="object() : Expression" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="leftBracket() : Token" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sliceList() : SliceList" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rightBracket() : Token" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="type() : InferredType" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="typeDependencies() : List&lt;Expression&gt;" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/SliceItemImpl.java" name="SliceItemImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="96" coveredmethods="0" methods="9" elements="22" classes="1" ncloc="65" statements="13" conditionals="0" coveredstatements="0"/>
            <class name="SliceItemImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="9" elements="22" statements="13" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SliceItemImpl(Expression,Token,Expression,Token,Expression)" num="42" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="lowerBound() : Expression" num="53" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="boundSeparator() : Token" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="upperBound() : Expression" num="64" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="strideSeparator() : Token" num="70" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="stride() : Expression" num="76" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/SliceListImpl.java" name="SliceListImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="72" coveredmethods="0" methods="6" elements="22" classes="1" ncloc="44" statements="14" conditionals="2" coveredstatements="0"/>
            <class name="SliceListImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="6" elements="22" statements="14" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SliceListImpl(List&lt;Tree&gt;,List&lt;Token&gt;)" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="slices() : List&lt;Tree&gt;" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="separators() : List&lt;Token&gt;" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/StatementListImpl.java" name="StatementListImpl.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="5" loc="59" coveredmethods="4" methods="5" elements="10" classes="1" ncloc="31" statements="5" conditionals="0" coveredstatements="4"/>
            <class name="StatementListImpl">
               <metrics coveredelements="8" coveredconditionals="0" complexity="5" coveredmethods="4" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="StatementListImpl(List&lt;Statement&gt;)" num="35" count="75" type="method"/>
            <line num="36" count="75" type="stmt"/>
            <line complexity="1" visibility="public" signature="statements() : List&lt;Statement&gt;" num="39" count="60" type="method"/>
            <line num="41" count="60" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="44" count="3" type="method"/>
            <line num="46" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="54" count="57" type="method"/>
            <line num="56" count="57" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/StatementWithSeparator.java" name="StatementWithSeparator.java">
            <metrics coveredelements="9" coveredconditionals="2" complexity="4" loc="41" coveredmethods="3" methods="3" elements="9" classes="1" ncloc="17" statements="4" conditionals="2" coveredstatements="4"/>
            <class name="StatementWithSeparator">
               <metrics coveredelements="9" coveredconditionals="2" complexity="4" coveredmethods="3" methods="3" elements="9" statements="4" conditionals="2" coveredstatements="4"/>
            </class>
            <line complexity="2" visibility="public" signature="StatementWithSeparator(AstNode,Separators)" num="29" count="3145" type="method"/>
            <line num="30" count="3145" type="stmt"/>
            <line num="31" count="3145" type="stmt"/>
            <line falsecount="1324" truecount="1821" num="31" type="cond"/>
            <line complexity="1" visibility="public" signature="statement() : AstNode" num="34" count="959" type="method"/>
            <line num="35" count="959" type="stmt"/>
            <line complexity="1" visibility="public" signature="separator() : Separators" num="38" count="321" type="method"/>
            <line num="39" count="321" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/StringElementImpl.java" name="StringElementImpl.java">
            <metrics coveredelements="51" coveredconditionals="8" complexity="23" loc="150" coveredmethods="14" methods="19" elements="61" classes="1" ncloc="104" statements="34" conditionals="8" coveredstatements="29"/>
            <class name="StringElementImpl">
               <metrics coveredelements="51" coveredconditionals="8" complexity="23" coveredmethods="14" methods="19" elements="61" statements="34" conditionals="8" coveredstatements="29"/>
            </class>
            <line complexity="1" visibility="public" signature="StringElementImpl(Token)" num="39" count="176" type="method"/>
            <line num="40" count="176" type="stmt"/>
            <line num="41" count="176" type="stmt"/>
            <line complexity="1" visibility="public" signature="firstToken() : Token" num="44" count="16" type="method"/>
            <line num="46" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="lastToken() : Token" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="54" count="48" type="method"/>
            <line num="56" count="48" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="59" count="16" type="method"/>
            <line num="61" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="64" count="95" type="method"/>
            <line num="69" count="95" type="stmt"/>
            <line complexity="1" visibility="public" signature="value() : String" num="72" count="10" type="method"/>
            <line num="74" count="10" type="stmt"/>
            <line complexity="2" visibility="public" signature="trimmedQuotesValue() : String" num="77" count="84" type="method"/>
            <line num="79" count="84" type="stmt"/>
            <line num="81" count="84" type="stmt"/>
            <line num="82" count="84" type="stmt"/>
            <line falsecount="78" truecount="6" num="82" type="cond"/>
            <line num="83" count="6" type="stmt"/>
            <line num="85" count="84" type="stmt"/>
            <line complexity="1" visibility="public" signature="prefix() : String" num="88" count="216" type="method"/>
            <line num="90" count="216" type="stmt"/>
            <line complexity="1" visibility="public" signature="isTripleQuoted() : boolean" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isInterpolated() : boolean" num="98" count="163" type="method"/>
            <line num="100" count="163" type="stmt"/>
            <line num="101" count="163" type="stmt"/>
            <line complexity="1" visibility="public" signature="interpolatedExpressions() : List&lt;Expression&gt;" num="104" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="formattedExpressions() : List&lt;FormattedExpression&gt;" num="109" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="addFormattedExpression(FormattedExpression) : void" num="114" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="isTripleQuote(String) : boolean" num="119" count="113" type="method"/>
            <line num="120" count="113" type="stmt"/>
            <line falsecount="38" truecount="75" num="120" type="cond"/>
            <line num="121" count="75" type="stmt"/>
            <line num="122" count="75" type="stmt"/>
            <line num="124" count="38" type="stmt"/>
            <line complexity="1" visibility="private" signature="removePrefix(String) : String" num="127" count="84" type="method"/>
            <line num="128" count="84" type="stmt"/>
            <line complexity="1" visibility="private" signature="isCharQuote(char) : boolean" num="131" count="432" type="method"/>
            <line num="132" count="432" type="stmt"/>
            <line complexity="2" visibility="private" signature="prefixLength(String) : int" num="135" count="329" type="method"/>
            <line num="136" count="329" type="stmt"/>
            <line num="137" count="329" type="stmt"/>
            <line falsecount="329" truecount="103" num="137" type="cond"/>
            <line num="138" count="103" type="stmt"/>
            <line num="140" count="329" type="stmt"/>
            <line complexity="2" visibility="public" signature="contentStartIndex() : int" num="143" count="29" type="method"/>
            <line num="144" count="29" type="stmt"/>
            <line num="145" count="29" type="stmt"/>
            <line falsecount="24" truecount="5" num="145" type="cond"/>
            <line num="146" count="5" type="stmt"/>
            <line num="148" count="24" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/StringLiteralImpl.java" name="StringLiteralImpl.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="9" loc="80" coveredmethods="5" methods="7" elements="18" classes="1" ncloc="49" statements="9" conditionals="2" coveredstatements="5"/>
            <class name="StringLiteralImpl">
               <metrics coveredelements="10" coveredconditionals="0" complexity="9" coveredmethods="5" methods="7" elements="18" statements="9" conditionals="2" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="package" signature="StringLiteralImpl(List&lt;StringElement&gt;)" num="40" count="136" type="method"/>
            <line num="41" count="136" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="44" count="95" type="method"/>
            <line num="46" count="95" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="49" count="15" type="method"/>
            <line num="51" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="54" count="107" type="method"/>
            <line num="56" count="107" type="stmt"/>
            <line complexity="1" visibility="public" signature="stringElements() : List&lt;StringElement&gt;" num="59" count="79" type="method"/>
            <line num="61" count="79" type="stmt"/>
            <line complexity="1" visibility="public" signature="trimmedQuotesValue() : String" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="type() : InferredType" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/SubscriptionExpressionImpl.java" name="SubscriptionExpressionImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="81" coveredmethods="0" methods="8" elements="19" classes="1" ncloc="51" statements="11" conditionals="0" coveredstatements="0"/>
            <class name="SubscriptionExpressionImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="8" elements="19" statements="11" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SubscriptionExpressionImpl(Expression,Token,ExpressionList,Token)" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="object() : Expression" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="leftBracket() : Token" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subscripts() : ExpressionList" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rightBracket() : Token" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/TokenImpl.java" name="TokenImpl.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="11" loc="89" coveredmethods="8" methods="11" elements="23" classes="1" ncloc="56" statements="12" conditionals="0" coveredstatements="9"/>
            <class name="TokenImpl">
               <metrics coveredelements="17" coveredconditionals="0" complexity="11" coveredmethods="8" methods="11" elements="23" statements="12" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="TokenImpl(com.sonar.sslr.api.Token)" num="36" count="2990" type="method"/>
            <line num="37" count="2990" type="stmt"/>
            <line num="38" count="2990" type="stmt"/>
            <line complexity="1" visibility="public" signature="value() : String" num="41" count="313" type="method"/>
            <line num="43" count="313" type="stmt"/>
            <line complexity="1" visibility="public" signature="line() : int" num="46" count="13" type="method"/>
            <line num="48" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="column() : int" num="51" count="9" type="method"/>
            <line num="53" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="trivia() : List&lt;Trivia&gt;" num="56" count="3" type="method"/>
            <line num="58" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="type() : TokenType" num="61" count="69" type="method"/>
            <line num="62" count="69" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="70" count="226" type="method"/>
            <line num="72" count="226" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="75" count="25" type="method"/>
            <line num="77" count="25" type="stmt"/>
            <line complexity="1" visibility="public" signature="firstToken() : Token" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="lastToken() : Token" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/TreeUtils.java" name="TreeUtils.java">
            <metrics coveredelements="15" coveredconditionals="5" complexity="49" loc="278" coveredmethods="1" methods="20" elements="164" classes="2" ncloc="214" statements="90" conditionals="54" coveredstatements="9"/>
            <class name="TreeUtils">
               <metrics coveredelements="15" coveredconditionals="5" complexity="47" coveredmethods="1" methods="18" elements="161" statements="89" conditionals="54" coveredstatements="9"/>
            </class>
            <class name="TreeUtils.CollectFunctionDefsVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="TreeUtils()" num="56" count="0" type="method"/>
            <line complexity="3" visibility="public" signature="firstAncestor(Tree,Predicate&lt;Tree&gt;) : Tree" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="firstAncestorOfKind(Tree,Kind) : Tree" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="tokens(Tree) : List&lt;Token&gt;" num="82" count="47" type="method"/>
            <line num="83" count="47" type="stmt"/>
            <line falsecount="47" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="47" type="stmt"/>
            <line falsecount="31" truecount="16" num="85" type="cond"/>
            <line num="86" count="16" type="stmt"/>
            <line num="88" count="31" type="stmt"/>
            <line num="89" count="31" type="stmt"/>
            <line num="90" count="51" type="stmt"/>
            <line falsecount="31" truecount="20" num="90" type="cond"/>
            <line num="91" count="20" type="stmt"/>
            <line num="93" count="31" type="stmt"/>
            <line num="96" count="31" type="stmt"/>
            <line complexity="1" visibility="public" signature="nonWhitespaceTokens(Tree) : List&lt;Token&gt;" num="99" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasDescendant(Tree,Predicate&lt;Tree&gt;) : boolean" num="105" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="flattenTuples(Expression) : Stream&lt;Expression&gt;" num="109" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getSymbolFromTree(Tree) : Optional&lt;Symbol&gt;" num="118" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="119" type="cond"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getClassSymbolFromDef(ClassDef) : ClassSymbol" num="125" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="127" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="132" type="cond"/>
            <line num="133" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getFunctionSymbolFromDef(FunctionDef) : FunctionSymbol" num="143" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="145" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="154" type="cond"/>
            <line num="155" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="nonTupleParameters(FunctionDef) : List&lt;Parameter&gt;" num="161" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="164" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="positionalParameters(FunctionDef) : List&lt;Parameter&gt;" num="169" count="0" type="method"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="171" type="cond"/>
            <line num="172" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="177" type="cond"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="180" type="cond"/>
            <line num="181" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="181" type="cond"/>
            <line num="182" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="topLevelFunctionDefs(ClassDef) : List&lt;FunctionDef&gt;" num="203" count="0" type="method"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitClassDef(ClassDef) : void" num="213" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="visitFunctionDef(FunctionDef) : void" num="218" count="0" type="method"/>
            <line num="220" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="argumentByKeyword(String,List&lt;Argument&gt;) : RegularArgument" num="225" count="0" type="method"/>
            <line num="227" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="227" type="cond"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="229" type="cond"/>
            <line num="230" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="nthArgumentOrKeyword(int,String,List&lt;Argument&gt;) : RegularArgument" num="236" count="0" type="method"/>
            <line num="238" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="238" type="cond"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="240" type="cond"/>
            <line num="241" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="243" type="cond"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="245" type="cond"/>
            <line num="246" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="hasKeyword(Argument,String) : boolean" num="253" count="0" type="method"/>
            <line num="254" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="254" type="cond"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="isBooleanLiteral(Tree) : boolean" num="261" count="0" type="method"/>
            <line num="262" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="262" type="cond"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="locationInFile(Tree,String) : LocationInFile" num="269" count="0" type="method"/>
            <line num="271" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="271" type="cond"/>
            <line num="272" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/TriviaImpl.java" name="TriviaImpl.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="3" loc="42" coveredmethods="2" methods="3" elements="6" classes="1" ncloc="17" statements="3" conditionals="0" coveredstatements="2"/>
            <class name="TriviaImpl">
               <metrics coveredelements="4" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="TriviaImpl(Token)" num="29" count="451" type="method"/>
            <line num="30" count="451" type="stmt"/>
            <line complexity="1" visibility="public" signature="token() : Token" num="33" count="2" type="method"/>
            <line num="35" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="value() : String" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/TryStatementImpl.java" name="TryStatementImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="104" coveredmethods="0" methods="9" elements="26" classes="1" ncloc="74" statements="17" conditionals="0" coveredstatements="0"/>
            <class name="TryStatementImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="9" elements="26" statements="17" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="TryStatementImpl(Token,Token,Token,Token,StatementList,Token,List&lt;ExceptClause&gt;,FinallyClause,ElseClause)" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="tryKeyword() : Token" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="exceptClauses() : List&lt;ExceptClause&gt;" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="finallyClause() : FinallyClause" num="72" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="elseClause() : ElseClause" num="78" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="body() : StatementList" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/TupleImpl.java" name="TupleImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="12" loc="104" coveredmethods="0" methods="9" elements="38" classes="1" ncloc="73" statements="23" conditionals="6" coveredstatements="0"/>
            <class name="TupleImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="12" coveredmethods="0" methods="9" elements="38" statements="23" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="TupleImpl(Token,List&lt;Expression&gt;,List&lt;Token&gt;,Token)" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="leftParenthesis() : Token" num="48" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="elements() : List&lt;Expression&gt;" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="commas() : List&lt;Token&gt;" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rightParenthesis() : Token" num="64" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="type() : InferredType" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/TupleParameterImpl.java" name="TupleParameterImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="89" coveredmethods="0" methods="8" elements="30" classes="1" ncloc="59" statements="20" conditionals="2" coveredstatements="0"/>
            <class name="TupleParameterImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="8" elements="30" statements="20" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="TupleParameterImpl(Token,List&lt;AnyParameter&gt;,List&lt;Token&gt;,Token)" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="openingParenthesis() : Token" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parameters() : List&lt;AnyParameter&gt;" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="commas() : List&lt;Token&gt;" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="closingParenthesis() : Token" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/TypeAnnotationImpl.java" name="TypeAnnotationImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="75" coveredmethods="0" methods="6" elements="20" classes="1" ncloc="47" statements="14" conditionals="0" coveredstatements="0"/>
            <class name="TypeAnnotationImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="20" statements="14" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="TypeAnnotationImpl(Token,Expression,Kind)" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="TypeAnnotationImpl(Token,Token,Expression)" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="expression() : Expression" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/UnaryExpressionImpl.java" name="UnaryExpressionImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="91" coveredmethods="0" methods="8" elements="27" classes="1" ncloc="60" statements="17" conditionals="2" coveredstatements="0"/>
            <class name="UnaryExpressionImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="8" elements="27" statements="17" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="kindsByOperator() : Map&lt;String, Kind&gt;" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="UnaryExpressionImpl(Token,Expression)" num="53" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="operator() : Token" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="expression() : Expression" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="type() : InferredType" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/UnpackingExpressionImpl.java" name="UnpackingExpressionImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="66" coveredmethods="0" methods="6" elements="13" classes="1" ncloc="38" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="UnpackingExpressionImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="UnpackingExpressionImpl(Token,Expression)" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="starToken() : Token" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="expression() : Expression" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/WhileStatementImpl.java" name="WhileStatementImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="101" coveredmethods="0" methods="9" elements="25" classes="1" ncloc="70" statements="16" conditionals="0" coveredstatements="0"/>
            <class name="WhileStatementImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="9" elements="25" statements="16" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="WhileStatementImpl(Token,Expression,Token,Token,Token,StatementList,Token,ElseClause)" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="whileKeyword() : Token" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="condition() : Expression" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="colon() : Token" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="body() : StatementList" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="elseClause() : ElseClause" num="89" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/WithStatementImpl.java" name="WithStatementImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="18" loc="165" coveredmethods="0" methods="17" elements="55" classes="2" ncloc="124" statements="36" conditionals="2" coveredstatements="0"/>
            <class name="WithStatementImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="10" elements="39" statements="27" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="WithStatementImpl.WithItemImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="WithStatementImpl(Token,List&lt;WithItem&gt;,List&lt;Token&gt;,Token,Token,Token,StatementList,Token,Token)" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="withKeyword() : Token" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="withItems() : List&lt;WithItem&gt;" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="colon() : Token" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="statements() : StatementList" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isAsync() : boolean" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="asyncKeyword() : Token" num="90" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="WithItemImpl(Expression,Token,Expression)" num="127" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : Expression" num="133" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="as() : Token" num="138" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="expression() : Expression" num="144" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="150" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="155" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="160" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/YieldExpressionImpl.java" name="YieldExpressionImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="77" coveredmethods="0" methods="7" elements="16" classes="1" ncloc="49" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="YieldExpressionImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="YieldExpressionImpl(Token,Token,List&lt;Expression&gt;)" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="yieldKeyword() : Token" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fromKeyword() : Token" num="51" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="expressions() : List&lt;Expression&gt;" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/tree/YieldStatementImpl.java" name="YieldStatementImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="66" coveredmethods="0" methods="6" elements="13" classes="1" ncloc="39" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="YieldStatementImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="YieldStatementImpl(YieldExpression,Separators)" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="yieldExpression() : YieldExpression" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="separator() : Token" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKind() : Kind" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(TreeVisitor) : void" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeChildren() : List&lt;Tree&gt;" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.plugins.python.api">
         <metrics coveredelements="104" complexity="61" loc="728" methods="60" classes="16" statements="98" coveredconditionals="0" coveredmethods="42" elements="160" ncloc="377" files="11" conditionals="2" coveredstatements="62"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/IssueLocation.java" name="IssueLocation.java">
            <metrics coveredelements="62" coveredconditionals="0" complexity="28" loc="206" coveredmethods="25" methods="28" elements="68" classes="4" ncloc="142" statements="40" conditionals="0" coveredstatements="37"/>
            <class name="IssueLocation">
               <metrics coveredelements="12" coveredconditionals="0" complexity="8" coveredmethods="6" methods="8" elements="16" statements="8" conditionals="0" coveredstatements="6"/>
            </class>
            <class name="IssueLocation.PreciseIssueLocation">
               <metrics coveredelements="25" coveredconditionals="0" complexity="8" coveredmethods="7" methods="8" elements="27" statements="19" conditionals="0" coveredstatements="18"/>
            </class>
            <class name="IssueLocation.LineLevelIssueLocation">
               <metrics coveredelements="13" coveredconditionals="0" complexity="6" coveredmethods="6" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <class name="IssueLocation.FileLevelIssueLocation">
               <metrics coveredelements="12" coveredconditionals="0" complexity="6" coveredmethods="6" methods="6" elements="12" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="private" signature="IssueLocation(String)" num="36" count="6" type="method"/>
            <line num="37" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="atFileLevel(String) : IssueLocation" num="40" count="1" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="atLineLevel(String,int) : IssueLocation" num="44" count="3" type="method"/>
            <line num="45" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="preciseLocation(Tree,String) : IssueLocation" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="preciseLocation(Token,String) : IssueLocation" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="preciseLocation(Token,Token,String) : IssueLocation" num="56" count="1" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="preciseLocation(LocationInFile,String) : IssueLocation" num="60" count="1" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="message() : String" num="64" count="4" type="method"/>
            <line num="66" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="PreciseIssueLocation(Token,Token,String)" num="88" count="1" type="method"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="PreciseIssueLocation(Token,String)" num="98" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="PreciseIssueLocation(LocationInFile,String)" num="102" count="1" type="method"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="startLine() : int" num="111" count="2" type="method"/>
            <line num="113" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="startLineOffset() : int" num="116" count="2" type="method"/>
            <line num="118" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="endLine() : int" num="121" count="2" type="method"/>
            <line num="123" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="endLineOffset() : int" num="126" count="2" type="method"/>
            <line num="128" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="fileId() : String" num="131" count="2" type="method"/>
            <line num="133" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="LineLevelIssueLocation(String,int)" num="142" count="3" type="method"/>
            <line num="143" count="3" type="stmt"/>
            <line num="144" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="startLine() : int" num="147" count="4" type="method"/>
            <line num="149" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="startLineOffset() : int" num="152" count="2" type="method"/>
            <line num="154" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="endLine() : int" num="157" count="1" type="method"/>
            <line num="159" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="endLineOffset() : int" num="162" count="1" type="method"/>
            <line num="164" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="fileId() : String" num="167" count="1" type="method"/>
            <line num="169" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="FileLevelIssueLocation(String)" num="176" count="1" type="method"/>
            <line num="177" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="startLine() : int" num="180" count="1" type="method"/>
            <line num="182" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="startLineOffset() : int" num="185" count="1" type="method"/>
            <line num="187" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="endLine() : int" num="190" count="1" type="method"/>
            <line num="192" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="endLineOffset() : int" num="195" count="1" type="method"/>
            <line num="197" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="fileId() : String" num="200" count="1" type="method"/>
            <line num="202" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/LocationInFile.java" name="LocationInFile.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="6" loc="56" coveredmethods="6" methods="6" elements="16" classes="1" ncloc="30" statements="10" conditionals="0" coveredstatements="10"/>
            <class name="LocationInFile">
               <metrics coveredelements="16" coveredconditionals="0" complexity="6" coveredmethods="6" methods="6" elements="16" statements="10" conditionals="0" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="LocationInFile(String,int,int,int,int)" num="29" count="1" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="fileId() : String" num="37" count="1" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="startLine() : int" num="41" count="1" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="startLineOffset() : int" num="45" count="1" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="endLine() : int" num="49" count="1" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="endLineOffset() : int" num="53" count="1" type="method"/>
            <line num="54" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/Parser.java" name="Parser.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="39" coveredmethods="1" methods="1" elements="3" classes="1" ncloc="12" statements="2" conditionals="0" coveredstatements="1"/>
            <class name="Parser">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="parse(String) : FileInput" num="34" count="3" type="method"/>
            <line num="35" count="3" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/PythonCheck.java" name="PythonCheck.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="10" loc="88" coveredmethods="5" methods="10" elements="27" classes="2" ncloc="53" statements="17" conditionals="0" coveredstatements="7"/>
            <class name="PythonCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="PythonCheck.PreciseIssue">
               <metrics coveredelements="12" coveredconditionals="0" complexity="10" coveredmethods="5" methods="10" elements="27" statements="17" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="PreciseIssue(PythonCheck,IssueLocation)" num="40" count="2" type="method"/>
            <line num="41" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="cost() : Integer" num="46" count="1" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="withCost(int) : PreciseIssue" num="51" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="primaryLocation() : IssueLocation" num="56" count="2" type="method"/>
            <line num="57" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="secondary(Tree,String) : PreciseIssue" num="60" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="secondary(Token,String) : PreciseIssue" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="secondary(IssueLocation) : PreciseIssue" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="secondary(LocationInFile,String) : PreciseIssue" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="secondaryLocations() : List&lt;IssueLocation&gt;" num="80" count="1" type="method"/>
            <line num="81" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="check() : PythonCheck" num="84" count="1" type="method"/>
            <line num="85" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/PythonCustomRuleRepository.java" name="PythonCustomRuleRepository.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="43" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="PythonCustomRuleRepository">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/PythonFile.java" name="PythonFile.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="32" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="PythonFile">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/PythonSubscriptionCheck.java" name="PythonSubscriptionCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="31" coveredmethods="0" methods="2" elements="2" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="PythonSubscriptionCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="2" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="scanFile(PythonVisitorContext) : void" num="23" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="leaveFile() : void" num="28" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/PythonVisitorCheck.java" name="PythonVisitorCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="52" coveredmethods="0" methods="4" elements="13" classes="1" ncloc="26" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="PythonVisitorCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="13" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="getContext() : PythonVisitorContext" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="addIssue(Token,String) : PreciseIssue" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="addIssue(Tree,String) : PreciseIssue" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="scanFile(PythonVisitorContext) : void" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/PythonVisitorContext.java" name="PythonVisitorContext.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="10" loc="89" coveredmethods="5" methods="9" elements="31" classes="1" ncloc="57" statements="20" conditionals="2" coveredstatements="7"/>
            <class name="PythonVisitorContext">
               <metrics coveredelements="12" coveredconditionals="0" complexity="10" coveredmethods="5" methods="9" elements="31" statements="20" conditionals="2" coveredstatements="7"/>
            </class>
            <line complexity="2" visibility="public" signature="PythonVisitorContext(FileInput,PythonFile,File,String)" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="47" type="cond"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="PythonVisitorContext(FileInput,PythonFile,File,String,ProjectLevelSymbolTable)" num="51" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="PythonVisitorContext(PythonFile,RecognitionException)" num="59" count="2" type="method"/>
            <line num="60" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="rootTree() : FileInput" num="65" count="2" type="method"/>
            <line num="66" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="pythonFile() : PythonFile" num="69" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parsingException() : RecognitionException" num="73" count="2" type="method"/>
            <line num="74" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="addIssue(PreciseIssue) : void" num="77" count="2" type="method"/>
            <line num="78" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIssues() : List&lt;PreciseIssue&gt;" num="81" count="2" type="method"/>
            <line num="82" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="workingDirectory() : File" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/SubscriptionCheck.java" name="SubscriptionCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="33" coveredmethods="0" methods="0" elements="0" classes="2" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SubscriptionCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SubscriptionCheck.Context">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/SubscriptionContext.java" name="SubscriptionContext.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="59" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="23" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SubscriptionContext">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="org.sonar.python.api">
         <metrics coveredelements="129" complexity="18" loc="705" methods="17" classes="4" statements="114" coveredconditionals="2" coveredmethods="15" elements="133" ncloc="478" files="4" conditionals="2" coveredstatements="112"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/api/PythonGrammar.java" name="PythonGrammar.java">
            <metrics coveredelements="103" coveredconditionals="0" complexity="5" loc="444" coveredmethods="5" methods="5" elements="103" classes="1" ncloc="327" statements="98" conditionals="0" coveredstatements="98"/>
            <class name="PythonGrammar">
               <metrics coveredelements="103" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="103" statements="98" conditionals="0" coveredstatements="98"/>
            </class>
            <line complexity="1" visibility="public" signature="create() : Grammar" num="165" count="713" type="method"/>
            <line num="166" count="713" type="stmt"/>
            <line num="168" count="713" type="stmt"/>
            <line num="170" count="713" type="stmt"/>
            <line num="171" count="713" type="stmt"/>
            <line num="172" count="713" type="stmt"/>
            <line num="173" count="713" type="stmt"/>
            <line num="175" count="713" type="stmt"/>
            <line num="176" count="713" type="stmt"/>
            <line complexity="1" visibility="public" signature="grammar(LexerfulGrammarBuilder) : void" num="179" count="713" type="method"/>
            <line num="182" count="713" type="stmt"/>
            <line num="190" count="713" type="stmt"/>
            <line num="192" count="713" type="stmt"/>
            <line num="193" count="713" type="stmt"/>
            <line num="195" count="713" type="stmt"/>
            <line num="196" count="713" type="stmt"/>
            <line num="199" count="713" type="stmt"/>
            <line num="200" count="713" type="stmt"/>
            <line num="201" count="713" type="stmt"/>
            <line num="203" count="713" type="stmt"/>
            <line num="204" count="713" type="stmt"/>
            <line num="207" count="713" type="stmt"/>
            <line num="208" count="713" type="stmt"/>
            <line num="215" count="713" type="stmt"/>
            <line num="220" count="713" type="stmt"/>
            <line num="223" count="713" type="stmt"/>
            <line num="228" count="713" type="stmt"/>
            <line num="238" count="713" type="stmt"/>
            <line num="239" count="713" type="stmt"/>
            <line num="240" count="713" type="stmt"/>
            <line num="244" count="713" type="stmt"/>
            <line num="245" count="713" type="stmt"/>
            <line num="248" count="713" type="stmt"/>
            <line num="249" count="713" type="stmt"/>
            <line num="250" count="713" type="stmt"/>
            <line num="251" count="713" type="stmt"/>
            <line num="257" count="713" type="stmt"/>
            <line num="258" count="713" type="stmt"/>
            <line num="264" count="713" type="stmt"/>
            <line num="265" count="713" type="stmt"/>
            <line num="266" count="713" type="stmt"/>
            <line num="268" count="713" type="stmt"/>
            <line num="272" count="713" type="stmt"/>
            <line num="274" count="713" type="stmt"/>
            <line num="284" count="713" type="stmt"/>
            <line num="287" count="713" type="stmt"/>
            <line num="289" count="713" type="stmt"/>
            <line num="300" count="713" type="stmt"/>
            <line num="303" count="713" type="stmt"/>
            <line complexity="1" visibility="public" signature="expressions(LexerfulGrammarBuilder) : void" num="310" count="713" type="method"/>
            <line num="311" count="713" type="stmt"/>
            <line num="312" count="713" type="stmt"/>
            <line num="314" count="713" type="stmt"/>
            <line num="316" count="713" type="stmt"/>
            <line num="317" count="713" type="stmt"/>
            <line num="318" count="713" type="stmt"/>
            <line num="320" count="713" type="stmt"/>
            <line num="321" count="713" type="stmt"/>
            <line num="332" count="713" type="stmt"/>
            <line num="333" count="713" type="stmt"/>
            <line num="334" count="713" type="stmt"/>
            <line complexity="1" visibility="public" signature="simpleStatements(LexerfulGrammarBuilder) : void" num="341" count="713" type="method"/>
            <line num="342" count="713" type="stmt"/>
            <line num="358" count="713" type="stmt"/>
            <line num="362" count="713" type="stmt"/>
            <line num="364" count="713" type="stmt"/>
            <line num="366" count="713" type="stmt"/>
            <line num="367" count="713" type="stmt"/>
            <line num="368" count="713" type="stmt"/>
            <line num="369" count="713" type="stmt"/>
            <line num="370" count="713" type="stmt"/>
            <line num="371" count="713" type="stmt"/>
            <line num="372" count="713" type="stmt"/>
            <line num="374" count="713" type="stmt"/>
            <line num="375" count="713" type="stmt"/>
            <line num="376" count="713" type="stmt"/>
            <line num="383" count="713" type="stmt"/>
            <line num="384" count="713" type="stmt"/>
            <line num="385" count="713" type="stmt"/>
            <line num="387" count="713" type="stmt"/>
            <line num="389" count="713" type="stmt"/>
            <line num="390" count="713" type="stmt"/>
            <line complexity="1" visibility="public" signature="compoundStatements(LexerfulGrammarBuilder) : void" num="397" count="713" type="method"/>
            <line num="398" count="713" type="stmt"/>
            <line num="407" count="713" type="stmt"/>
            <line num="410" count="713" type="stmt"/>
            <line num="413" count="713" type="stmt"/>
            <line num="415" count="713" type="stmt"/>
            <line num="416" count="713" type="stmt"/>
            <line num="417" count="713" type="stmt"/>
            <line num="419" count="713" type="stmt"/>
            <line num="425" count="713" type="stmt"/>
            <line num="427" count="713" type="stmt"/>
            <line num="428" count="713" type="stmt"/>
            <line num="430" count="713" type="stmt"/>
            <line num="431" count="713" type="stmt"/>
            <line num="432" count="713" type="stmt"/>
            <line num="434" count="713" type="stmt"/>
            <line num="435" count="713" type="stmt"/>
            <line num="436" count="713" type="stmt"/>
            <line num="438" count="713" type="stmt"/>
            <line num="439" count="713" type="stmt"/>
            <line num="441" count="713" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/api/PythonKeyword.java" name="PythonKeyword.java">
            <metrics coveredelements="14" coveredconditionals="2" complexity="6" loc="102" coveredmethods="4" methods="5" elements="16" classes="1" ncloc="60" statements="9" conditionals="2" coveredstatements="8"/>
            <class name="PythonKeyword">
               <metrics coveredelements="14" coveredconditionals="2" complexity="6" coveredmethods="4" methods="5" elements="16" statements="9" conditionals="2" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="package" signature="PythonKeyword(String)" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="78" count="8486" type="method"/>
            <line num="80" count="8486" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : String" num="83" count="22382" type="method"/>
            <line num="85" count="22382" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasToBeSkippedFromAst(AstNode) : boolean" num="88" count="132" type="method"/>
            <line num="90" count="132" type="stmt"/>
            <line complexity="2" visibility="public" signature="keywordValues() : String[]" num="93" count="1" type="method"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line falsecount="1" truecount="31" num="96" type="cond"/>
            <line num="97" count="31" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/api/PythonPunctuator.java" name="PythonPunctuator.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="4" loc="111" coveredmethods="3" methods="4" elements="8" classes="1" ncloc="69" statements="4" conditionals="0" coveredstatements="3"/>
            <class name="PythonPunctuator">
               <metrics coveredelements="6" coveredconditionals="0" complexity="4" coveredmethods="3" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="package" signature="PythonPunctuator(String)" num="92" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="96" count="34059" type="method"/>
            <line num="98" count="34059" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : String" num="101" count="437296" type="method"/>
            <line num="103" count="437296" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasToBeSkippedFromAst(AstNode) : boolean" num="106" count="134" type="method"/>
            <line num="108" count="134" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/api/PythonTokenType.java" name="PythonTokenType.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="3" loc="48" coveredmethods="3" methods="3" elements="6" classes="1" ncloc="22" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="PythonTokenType">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="getName() : String" num="33" count="27226" type="method"/>
            <line num="35" count="27226" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : String" num="38" count="5" type="method"/>
            <line num="40" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasToBeSkippedFromAst(AstNode) : boolean" num="43" count="27225" type="method"/>
            <line num="45" count="27225" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.python.lexer">
         <metrics coveredelements="251" complexity="75" loc="622" methods="30" classes="6" statements="161" coveredconditionals="68" coveredmethods="27" elements="259" ncloc="393" files="6" conditionals="68" coveredstatements="156"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/lexer/FStringChannel.java" name="FStringChannel.java">
            <metrics coveredelements="42" coveredconditionals="14" complexity="12" loc="91" coveredmethods="3" methods="4" elements="44" classes="1" ncloc="59" statements="26" conditionals="14" coveredstatements="25"/>
            <class name="FStringChannel">
               <metrics coveredelements="42" coveredconditionals="14" complexity="12" coveredmethods="3" methods="4" elements="44" statements="26" conditionals="14" coveredstatements="25"/>
            </class>
            <line complexity="1" visibility="public" signature="FStringChannel(LexerState)" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="consume(CodeReader,Lexer) : boolean" num="43" count="139" type="method"/>
            <line num="45" count="139" type="stmt"/>
            <line num="46" count="139" type="stmt"/>
            <line falsecount="138" truecount="1" num="46" type="cond"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="138" type="stmt"/>
            <line falsecount="97" truecount="41" num="52" type="cond"/>
            <line num="53" count="41" type="stmt"/>
            <line num="54" count="41" type="stmt"/>
            <line num="55" count="41" type="stmt"/>
            <line falsecount="10" truecount="115" num="55" type="cond"/>
            <line num="56" count="115" type="stmt"/>
            <line num="57" count="115" type="stmt"/>
            <line falsecount="33" truecount="82" num="57" type="cond"/>
            <line num="58" count="82" type="stmt"/>
            <line num="59" count="33" type="stmt"/>
            <line falsecount="31" truecount="2" num="59" type="cond"/>
            <line num="60" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="63" count="31" type="stmt"/>
            <line num="66" count="41" type="stmt"/>
            <line falsecount="21" truecount="20" num="66" type="cond"/>
            <line num="67" count="20" type="stmt"/>
            <line num="68" count="20" type="stmt"/>
            <line num="69" count="20" type="stmt"/>
            <line num="72" count="118" type="stmt"/>
            <line complexity="1" visibility="private" signature="addUnknownCharToken(String,Lexer,int,int) : void" num="75" count="21" type="method"/>
            <line num="76" count="21" type="stmt"/>
            <line complexity="3" visibility="private" signature="setInitialLineAndColumn(CodeReader) : void" num="85" count="139" type="method"/>
            <line num="86" count="139" type="stmt"/>
            <line falsecount="113" truecount="26" num="86" type="cond"/>
            <line num="87" count="26" type="stmt"/>
            <line num="88" count="26" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/lexer/IndentationChannel.java" name="IndentationChannel.java">
            <metrics coveredelements="59" coveredconditionals="18" complexity="15" loc="117" coveredmethods="6" methods="6" elements="59" classes="1" ncloc="79" statements="35" conditionals="18" coveredstatements="35"/>
            <class name="IndentationChannel">
               <metrics coveredelements="59" coveredconditionals="18" complexity="15" coveredmethods="6" methods="6" elements="59" statements="35" conditionals="18" coveredstatements="35"/>
            </class>
            <line complexity="1" visibility="public" signature="IndentationChannel(LexerState)" num="36" count="721" type="method"/>
            <line num="37" count="721" type="stmt"/>
            <line complexity="7" visibility="public" signature="consume(CodeReader,Lexer) : boolean" num="40" count="115976" type="method"/>
            <line num="42" count="115976" type="stmt"/>
            <line falsecount="115569" truecount="407" num="42" type="cond"/>
            <line num="43" count="407" type="stmt"/>
            <line num="44" count="407" type="stmt"/>
            <line num="47" count="115569" type="stmt"/>
            <line falsecount="14315" truecount="101254" num="47" type="cond"/>
            <line num="48" count="101254" type="stmt"/>
            <line num="51" count="14315" type="stmt"/>
            <line num="52" count="14315" type="stmt"/>
            <line num="54" count="14315" type="stmt"/>
            <line num="55" count="14315" type="stmt"/>
            <line num="56" count="14315" type="stmt"/>
            <line falsecount="14315" truecount="42327" num="56" type="cond"/>
            <line num="57" count="42327" type="stmt"/>
            <line num="58" count="42327" type="stmt"/>
            <line num="61" count="14315" type="stmt"/>
            <line falsecount="12839" truecount="1476" num="61" type="cond"/>
            <line num="62" count="1476" type="stmt"/>
            <line num="65" count="12839" type="stmt"/>
            <line num="66" count="12839" type="stmt"/>
            <line num="67" count="12839" type="stmt"/>
            <line falsecount="12839" truecount="39764" num="67" type="cond"/>
            <line num="68" count="39764" type="stmt"/>
            <line num="69" count="39764" type="stmt"/>
            <line num="70" count="39764" type="stmt"/>
            <line falsecount="39665" truecount="99" num="70" type="cond"/>
            <line num="71" count="99" type="stmt"/>
            <line num="73" count="39665" type="stmt"/>
            <line num="77" count="12839" type="stmt"/>
            <line num="78" count="12839" type="stmt"/>
            <line complexity="1" visibility="private" signature="countTabReplacer(int) : int" num="81" count="99" type="method"/>
            <line num="82" count="99" type="stmt"/>
            <line complexity="1" visibility="private" signature="isWhiteSpace(char) : boolean" num="85" count="56642" type="method"/>
            <line num="86" count="56642" type="stmt"/>
            <line complexity="1" visibility="private" signature="isBlankLine(char) : boolean" num="89" count="14315" type="method"/>
            <line num="90" count="14315" type="stmt"/>
            <line complexity="4" visibility="private" signature="processIndents(Lexer,int,int,int) : void" num="93" count="12839" type="method"/>
            <line num="94" count="12839" type="stmt"/>
            <line falsecount="9034" truecount="3805" num="94" type="cond"/>
            <line num="95" count="3805" type="stmt"/>
            <line num="96" count="3805" type="stmt"/>
            <line num="103" count="9034" type="stmt"/>
            <line falsecount="6328" truecount="2706" num="103" type="cond"/>
            <line num="104" count="2706" type="stmt"/>
            <line falsecount="2706" truecount="3296" num="104" type="cond"/>
            <line num="105" count="3296" type="stmt"/>
            <line num="106" count="3296" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/lexer/LexerState.java" name="LexerState.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="2" loc="47" coveredmethods="2" methods="2" elements="9" classes="1" ncloc="21" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="LexerState">
               <metrics coveredelements="9" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="9" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="reset() : void" num="34" count="1161" type="method"/>
            <line num="35" count="1161" type="stmt"/>
            <line num="36" count="1161" type="stmt"/>
            <line num="38" count="1161" type="stmt"/>
            <line num="39" count="1161" type="stmt"/>
            <line complexity="1" visibility="public" signature="reset(int,int) : void" num="42" count="29" type="method"/>
            <line num="43" count="29" type="stmt"/>
            <line num="44" count="29" type="stmt"/>
            <line num="45" count="29" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/lexer/NewLineChannel.java" name="NewLineChannel.java">
            <metrics coveredelements="63" coveredconditionals="12" complexity="23" loc="131" coveredmethods="8" methods="8" elements="63" classes="1" ncloc="84" statements="43" conditionals="12" coveredstatements="43"/>
            <class name="NewLineChannel">
               <metrics coveredelements="63" coveredconditionals="12" complexity="23" coveredmethods="8" methods="8" elements="63" statements="43" conditionals="12" coveredstatements="43"/>
            </class>
            <line complexity="1" visibility="public" signature="NewLineChannel(LexerState)" num="37" count="721" type="method"/>
            <line num="38" count="721" type="stmt"/>
            <line complexity="4" visibility="public" signature="consume(CodeReader,Lexer) : boolean" num="41" count="133105" type="method"/>
            <line num="43" count="133105" type="stmt"/>
            <line num="44" count="133105" type="stmt"/>
            <line num="46" count="133105" type="stmt"/>
            <line falsecount="133085" truecount="20" num="46" type="cond"/>
            <line num="48" count="20" type="stmt"/>
            <line num="49" count="20" type="stmt"/>
            <line num="50" count="20" type="stmt"/>
            <line num="51" count="20" type="stmt"/>
            <line num="54" count="133085" type="stmt"/>
            <line falsecount="115976" truecount="17109" num="54" type="cond"/>
            <line num="55" count="17109" type="stmt"/>
            <line num="56" count="17109" type="stmt"/>
            <line num="59" count="115976" type="stmt"/>
            <line complexity="4" visibility="private" signature="processNewLine(CodeReader,Lexer) : boolean" num="62" count="17109" type="method"/>
            <line num="63" count="17109" type="stmt"/>
            <line falsecount="16722" truecount="387" num="63" type="cond"/>
            <line num="65" count="387" type="stmt"/>
            <line num="66" count="387" type="stmt"/>
            <line num="69" count="16722" type="stmt"/>
            <line falsecount="12076" truecount="4646" num="69" type="cond"/>
            <line num="71" count="4646" type="stmt"/>
            <line num="72" count="4646" type="stmt"/>
            <line num="76" count="12076" type="stmt"/>
            <line num="84" count="12076" type="stmt"/>
            <line num="85" count="12076" type="stmt"/>
            <line complexity="7" visibility="private" signature="checkForBrackets(char) : void" num="88" count="133105" type="method"/>
            <line num="89" count="133105" type="stmt"/>
            <line num="90" count="1151" type="stmt"/>
            <line num="91" count="6803" type="stmt"/>
            <line num="92" count="392" type="stmt"/>
            <line num="93" count="8346" type="stmt"/>
            <line num="94" count="8346" type="stmt"/>
            <line num="95" count="1151" type="stmt"/>
            <line num="96" count="6722" type="stmt"/>
            <line num="97" count="392" type="stmt"/>
            <line num="98" count="8265" type="stmt"/>
            <line num="99" count="8265" type="stmt"/>
            <line num="100" count="116494" type="stmt"/>
            <line num="101" count="116494" type="stmt"/>
            <line complexity="2" visibility="private" signature="joinLines(CodeReader) : void" num="105" count="387" type="method"/>
            <line num="106" count="387" type="stmt"/>
            <line falsecount="387" truecount="2558" num="106" type="cond"/>
            <line num="107" count="2558" type="stmt"/>
            <line num="109" count="387" type="stmt"/>
            <line complexity="3" visibility="private" signature="consumeEOL(CodeReader) : void" num="112" count="16742" type="method"/>
            <line num="113" count="16742" type="stmt"/>
            <line falsecount="16740" truecount="2" num="113" type="cond"/>
            <line num="115" count="2" type="stmt"/>
            <line num="116" count="2" type="stmt"/>
            <line num="119" count="16740" type="stmt"/>
            <line complexity="1" visibility="private" signature="isNewLine(char) : boolean" num="123" count="133105" type="method"/>
            <line num="124" count="133105" type="stmt"/>
            <line complexity="1" visibility="private" signature="isImplicitLineJoining() : boolean" num="127" count="17109" type="method"/>
            <line num="128" count="17109" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/lexer/PythonLexer.java" name="PythonLexer.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="4" loc="109" coveredmethods="2" methods="4" elements="12" classes="1" ncloc="59" statements="8" conditionals="0" coveredstatements="4"/>
            <class name="PythonLexer">
               <metrics coveredelements="6" coveredconditionals="0" complexity="4" coveredmethods="2" methods="4" elements="12" statements="8" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="private" signature="PythonLexer()" num="46" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="create(LexerState) : Lexer" num="49" count="707" type="method"/>
            <line num="50" count="707" type="stmt"/>
            <line num="51" count="707" type="stmt"/>
            <line num="52" count="707" type="stmt"/>
            <line complexity="1" visibility="public" signature="fStringLexer(LexerState) : Lexer" num="55" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="addCommonChannels(Lexer.Builder,LexerState) : void" num="62" count="721" type="method"/>
            <line num="63" count="721" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/lexer/StringLiteralsChannel.java" name="StringLiteralsChannel.java">
            <metrics coveredelements="72" coveredconditionals="24" complexity="19" loc="127" coveredmethods="6" methods="6" elements="72" classes="1" ncloc="91" statements="42" conditionals="24" coveredstatements="42"/>
            <class name="StringLiteralsChannel">
               <metrics coveredelements="72" coveredconditionals="24" complexity="19" coveredmethods="6" methods="6" elements="72" statements="42" conditionals="24" coveredstatements="42"/>
            </class>
            <line complexity="5" visibility="public" signature="consume(CodeReader,Lexer) : boolean" num="45" count="71299" type="method"/>
            <line num="47" count="71299" type="stmt"/>
            <line num="48" count="71299" type="stmt"/>
            <line num="49" count="71299" type="stmt"/>
            <line num="50" count="71299" type="stmt"/>
            <line num="51" count="71299" type="stmt"/>
            <line falsecount="3989" truecount="67310" num="51" type="cond"/>
            <line num="52" count="67310" type="stmt"/>
            <line num="54" count="3989" type="stmt"/>
            <line falsecount="3985" truecount="4" num="54" type="cond"/>
            <line num="55" count="4" type="stmt"/>
            <line num="57" count="3985" type="stmt"/>
            <line falsecount="3985" truecount="43213" num="57" type="cond"/>
            <line num="58" count="43213" type="stmt"/>
            <line num="60" count="3985" type="stmt"/>
            <line num="67" count="3985" type="stmt"/>
            <line num="68" count="3985" type="stmt"/>
            <line complexity="2" visibility="private" signature="read(CodeReader) : boolean" num="71" count="3989" type="method"/>
            <line num="72" count="3989" type="stmt"/>
            <line falsecount="3800" truecount="189" num="72" type="cond"/>
            <line num="73" count="189" type="stmt"/>
            <line num="75" count="3800" type="stmt"/>
            <line complexity="4" visibility="private" signature="readString(CodeReader) : boolean" num="79" count="3800" type="method"/>
            <line num="80" count="3800" type="stmt"/>
            <line num="81" count="3800" type="stmt"/>
            <line falsecount="3798" truecount="27182" num="81" type="cond"/>
            <line num="82" count="27182" type="stmt"/>
            <line falsecount="27180" truecount="2" num="82" type="cond"/>
            <line num="83" count="2" type="stmt"/>
            <line num="85" count="27180" type="stmt"/>
            <line falsecount="26973" truecount="207" num="85" type="cond"/>
            <line num="87" count="207" type="stmt"/>
            <line num="89" count="27180" type="stmt"/>
            <line num="91" count="3798" type="stmt"/>
            <line num="92" count="3798" type="stmt"/>
            <line complexity="4" visibility="private" signature="readLongString(CodeReader) : boolean" num="95" count="189" type="method"/>
            <line num="96" count="189" type="stmt"/>
            <line num="97" count="189" type="stmt"/>
            <line falsecount="187" truecount="6822" num="97" type="cond"/>
            <line num="98" count="6822" type="stmt"/>
            <line falsecount="6820" truecount="2" num="98" type="cond"/>
            <line num="99" count="2" type="stmt"/>
            <line num="101" count="6820" type="stmt"/>
            <line falsecount="6808" truecount="12" num="101" type="cond"/>
            <line num="103" count="12" type="stmt"/>
            <line num="105" count="6820" type="stmt"/>
            <line num="107" count="187" type="stmt"/>
            <line num="108" count="187" type="stmt"/>
            <line complexity="3" visibility="private" signature="readStringPrefix(CodeReader) : void" num="111" count="71299" type="method"/>
            <line num="112" count="71299" type="stmt"/>
            <line num="113" count="71299" type="stmt"/>
            <line falsecount="65336" truecount="5963" num="113" type="cond"/>
            <line num="114" count="5963" type="stmt"/>
            <line num="115" count="5963" type="stmt"/>
            <line num="117" count="71299" type="stmt"/>
            <line falsecount="70164" truecount="1135" num="117" type="cond"/>
            <line num="118" count="1135" type="stmt"/>
            <line num="119" count="1135" type="stmt"/>
            <line complexity="1" visibility="private" signature="isLookingOnLongString(CodeReader,char,int) : boolean" num="123" count="10998" type="method"/>
            <line num="124" count="10998" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.python.cfg.fixpoint">
         <metrics coveredelements="2" complexity="79" loc="787" methods="51" classes="14" statements="208" coveredconditionals="0" coveredmethods="1" elements="309" ncloc="505" files="7" conditionals="50" coveredstatements="1"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/cfg/fixpoint/CfgBlockState.java" name="CfgBlockState.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="100" coveredmethods="0" methods="7" elements="34" classes="1" ncloc="57" statements="21" conditionals="6" coveredstatements="0"/>
            <class name="CfgBlockState">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="7" elements="34" statements="21" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="CfgBlockState(CfgBlock)" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSymbolReadWrites(Tree) : Map&lt;Symbol, SymbolReadWrite&gt;" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="init(CfgBlock) : void" num="56" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="computeGenAndKill(Set&lt;Symbol&gt;,Map&lt;Symbol, SymbolReadWrite&gt;) : void" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getGen() : Set&lt;Symbol&gt;" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKill() : Set&lt;Symbol&gt;" num="91" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isSymbolUsedInBlock(Symbol) : boolean" num="95" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/cfg/fixpoint/DefinedVariablesAnalysis.java" name="DefinedVariablesAnalysis.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="133" coveredmethods="0" methods="10" elements="59" classes="3" ncloc="91" statements="41" conditionals="8" coveredstatements="0"/>
            <class name="DefinedVariablesAnalysis">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="3" elements="26" statements="17" conditionals="6" coveredstatements="0"/>
            </class>
            <class name="DefinedVariablesAnalysis.VariableDefinition">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="1" elements="6" statements="3" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="DefinedVariablesAnalysis.DefinedVariables">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="27" statements="21" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="analyze(ControlFlowGraph,Set&lt;Symbol&gt;) : DefinedVariablesAnalysis" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="compute(ControlFlowGraph,Set&lt;Symbol&gt;) : void" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="47" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDefinedVariables(CfgBlock) : DefinedVariables" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="3" visibility="package" signature="join(VariableDefinition,VariableDefinition) : VariableDefinition" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="DefinedVariables(CfgBlock)" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="build(CfgBlock,Map&lt;Symbol, VariableDefinition&gt;) : DefinedVariables" num="91" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="propagate(Map&lt;CfgBlock, DefinedVariables&gt;) : boolean" num="101" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="join(Map&lt;Symbol, VariableDefinition&gt;,Map&lt;Symbol, VariableDefinition&gt;) : Map&lt;Symbol, VariableDefinition&gt;" num="113" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIn() : Map&lt;Symbol, VariableDefinition&gt;" num="125" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOut() : Map&lt;Symbol, VariableDefinition&gt;" num="129" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/cfg/fixpoint/ForwardAnalysis.java" name="ForwardAnalysis.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="85" coveredmethods="0" methods="3" elements="26" classes="2" ncloc="46" statements="19" conditionals="4" coveredstatements="0"/>
            <class name="ForwardAnalysis">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="1" elements="15" statements="10" conditionals="4" coveredstatements="0"/>
            </class>
            <class name="ForwardAnalysis.ProgramStateAtBlock">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="11" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="compute(ControlFlowGraph) : void" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="47" type="cond"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="ProgramStateAtBlock(CfgBlock,ProgramState)" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="propagate() : boolean" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/cfg/fixpoint/LiveVariablesAnalysis.java" name="LiveVariablesAnalysis.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="137" coveredmethods="0" methods="10" elements="51" classes="2" ncloc="82" statements="35" conditionals="6" coveredstatements="0"/>
            <class name="LiveVariablesAnalysis">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="4" elements="29" statements="19" conditionals="6" coveredstatements="0"/>
            </class>
            <class name="LiveVariablesAnalysis.LiveVariables">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="22" statements="16" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="analyze(ControlFlowGraph) : LiveVariablesAnalysis" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="compute(ControlFlowGraph) : void" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLiveVariables(CfgBlock) : LiveVariables" num="60" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getReadSymbols() : Set&lt;Symbol&gt;" num="64" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="LiveVariables(CfgBlock)" num="92" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="build(CfgBlock) : LiveVariables" num="99" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="propagate(Map&lt;CfgBlock, LiveVariables&gt;) : boolean" num="108" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="difference(Set&lt;Symbol&gt;,Set&lt;Symbol&gt;) : Set&lt;Symbol&gt;" num="122" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIn() : Set&lt;Symbol&gt;" num="129" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOut() : Set&lt;Symbol&gt;" num="133" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/cfg/fixpoint/ProgramState.java" name="ProgramState.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="26" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ProgramState">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/cfg/fixpoint/ReachingDefinitionsAnalysis.java" name="ReachingDefinitionsAnalysis.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="24" loc="211" coveredmethods="1" methods="12" elements="109" classes="3" ncloc="163" statements="75" conditionals="22" coveredstatements="1"/>
            <class name="ReachingDefinitionsAnalysis">
               <metrics coveredelements="2" coveredconditionals="0" complexity="21" coveredmethods="1" methods="9" elements="95" statements="64" conditionals="22" coveredstatements="1"/>
            </class>
            <class name="ReachingDefinitionsAnalysis.ProgramStateAtBlock">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="11" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ReachingDefinitionsAnalysis.ProgramStateAtElement">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ReachingDefinitionsAnalysis(PythonFile)" num="62" count="11" type="method"/>
            <line num="63" count="11" type="stmt"/>
            <line complexity="6" visibility="public" signature="valuesAtLocation(Name) : Set&lt;Expression&gt;" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getAssignedExpressions(Name,ProgramStateAtElement) : Set&lt;Expression&gt;" num="88" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="compute(ControlFlowGraph,Set&lt;Symbol&gt;) : void" num="103" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="updateProgramStateByElement(ControlFlowGraph) : void" num="122" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFunctionDef(FunctionDef) : void" num="128" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="visitName(Name) : void" num="132" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="ProgramStateAtBlock(CfgBlock,Map&lt;Symbol, Set&lt;Expression&gt;&gt;)" num="148" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="propagate() : boolean" num="157" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ProgramStateAtElement(Map&lt;Symbol, Set&lt;Expression&gt;&gt;,Tree)" num="170" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="join(Map&lt;Symbol, Set&lt;Expression&gt;&gt;,Map&lt;Symbol, Set&lt;Expression&gt;&gt;) : Map&lt;Symbol, Set&lt;Expression&gt;&gt;" num="176" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="updateProgramState(Tree,Map&lt;Symbol, Set&lt;Expression&gt;&gt;) : void" num="189" count="0" type="method"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="195" type="cond"/>
            <line num="196" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="199" type="cond"/>
            <line num="200" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/cfg/fixpoint/ReadWriteVisitor.java" name="ReadWriteVisitor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="95" coveredmethods="0" methods="9" elements="30" classes="2" ncloc="61" statements="17" conditionals="4" coveredstatements="0"/>
            <class name="ReadWriteVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="5" elements="22" statements="13" conditionals="4" coveredstatements="0"/>
            </class>
            <class name="ReadWriteVisitor.SymbolReadWrite">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="symbolToUsages() : Map&lt;Symbol, SymbolReadWrite&gt;" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFunctionDef(FunctionDef) : void" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitLambda(LambdaExpression) : void" num="48" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="visitName(Name) : void" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="addToSymbolToUsageMap(Usage,Symbol) : void" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isWrite() : boolean" num="78" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isRead() : boolean" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addUsage(Usage) : void" num="86" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="usages() : List&lt;Usage&gt;" num="91" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.plugins.python.api.types">
         <metrics coveredelements="0" complexity="1" loc="87" methods="1" classes="2" statements="0" coveredconditionals="0" coveredmethods="0" elements="1" ncloc="36" files="2" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/types/BuiltinTypes.java" name="BuiltinTypes.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="40" coveredmethods="0" methods="1" elements="1" classes="1" ncloc="17" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="BuiltinTypes">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="BuiltinTypes()" num="37" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/plugins/python/api/types/InferredType.java" name="InferredType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="47" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="19" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="InferredType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="org.sonar.python.metrics">
         <metrics coveredelements="5" complexity="101" loc="661" methods="62" classes="8" statements="184" coveredconditionals="1" coveredmethods="1" elements="308" ncloc="482" files="4" conditionals="62" coveredstatements="3"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/metrics/CognitiveComplexityVisitor.java" name="CognitiveComplexityVisitor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="47" loc="273" coveredmethods="0" methods="27" elements="143" classes="3" ncloc="215" statements="86" conditionals="30" coveredstatements="0"/>
            <class name="CognitiveComplexityVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="33" coveredmethods="0" methods="19" elements="104" statements="65" conditionals="20" coveredstatements="0"/>
            </class>
            <class name="CognitiveComplexityVisitor.SecondaryLocationConsumer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CognitiveComplexityVisitor.NestingLevel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="8" elements="39" statements="21" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="CognitiveComplexityVisitor(SecondaryLocationConsumer)" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="complexity(Tree,SecondaryLocationConsumer) : int" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getComplexity() : int" num="72" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitIfStatement(IfStatement) : void" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitElseClause(ElseClause) : void" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitWhileStatement(WhileStatement) : void" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitForStatement(ForStatement) : void" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitExceptClause(ExceptClause) : void" num="104" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="visitBinaryExpression(BinaryExpression) : void" num="110" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="121" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="flattenOperators(BinaryExpression,List&lt;Token&gt;) : void" num="131" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="140" type="cond"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFunctionDef(FunctionDef) : void" num="145" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitClassDef(ClassDef) : void" num="152" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitStatementList(StatementList) : void" num="159" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="161" type="cond"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitConditionalExpression(ConditionalExpression) : void" num="170" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="isStmtListIncrementsNestingLevel(StatementList) : boolean" num="178" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="179" type="cond"/>
            <line num="180" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="incrementWithNesting(Token) : void" num="186" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="incrementWithoutNesting(Token) : void" num="190" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="incrementComplexity(Token,int) : void" num="194" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="195" type="cond"/>
            <line num="196" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="secondaryMessage(int) : String" num="201" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="202" type="cond"/>
            <line num="203" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="NestingLevel()" num="215" count="0" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="NestingLevel(NestingLevel,Tree)" num="220" count="0" type="method"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="222" type="cond"/>
            <line num="223" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="223" type="cond"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="225" type="cond"/>
            <line num="226" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isFunction() : boolean" num="236" count="0" type="method"/>
            <line num="237" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="isWrapperFunction(FunctionDef) : boolean" num="240" count="0" type="method"/>
            <line num="241" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="241" type="cond"/>
            <line num="242" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="isSimpleReturn(Statement) : boolean" num="251" count="0" type="method"/>
            <line num="252" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="252" type="cond"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="level() : int" num="259" count="0" type="method"/>
            <line num="260" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="increment() : void" num="263" count="0" type="method"/>
            <line num="264" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="decrement() : void" num="267" count="0" type="method"/>
            <line num="268" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/metrics/ComplexityVisitor.java" name="ComplexityVisitor.java">
            <metrics coveredelements="5" coveredconditionals="1" complexity="15" loc="108" coveredmethods="1" methods="10" elements="43" classes="2" ncloc="74" statements="25" conditionals="8" coveredstatements="3"/>
            <class name="ComplexityVisitor">
               <metrics coveredelements="5" coveredconditionals="1" complexity="13" coveredmethods="1" methods="9" elements="36" statements="21" conditionals="6" coveredstatements="3"/>
            </class>
            <class name="ComplexityVisitor.FunctionComplexityVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="1" elements="7" statements="4" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="complexity(Tree) : int" num="38" count="1" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="39" type="cond"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFunctionDef(FunctionDef) : void" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitForStatement(ForStatement) : void" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitWhileStatement(WhileStatement) : void" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitIfStatement(IfStatement) : void" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitConditionalExpression(ConditionalExpression) : void" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="visitBinaryExpression(BinaryExpression) : void" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitComprehensionIf(ComprehensionIf) : void" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getComplexity() : int" num="91" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitFunctionDef(FunctionDef) : void" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/metrics/FileLinesVisitor.java" name="FileLinesVisitor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="30" loc="195" coveredmethods="0" methods="16" elements="96" classes="1" ncloc="140" statements="56" conditionals="24" coveredstatements="0"/>
            <class name="FileLinesVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="30" coveredmethods="0" methods="16" elements="96" statements="56" conditionals="24" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="scanFile(PythonVisitorContext) : void" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="visitFile() : void" num="78" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="visitNode(SubscriptionContext) : void" num="86" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="handleDocString(StringLiteral) : void" num="103" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="visitToken(Token) : void" num="118" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="119" type="cond"/>
            <line num="120" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="127" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="visitComment(Trivia) : void" num="137" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="140" type="cond"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="143" type="cond"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="leaveFile() : void" num="148" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLinesWithNoSonar() : Set&lt;Integer&gt;" num="158" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLinesOfCode() : Set&lt;Integer&gt;" num="162" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCommentLineCount() : int" num="166" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExecutableLines() : Set&lt;Integer&gt;" num="170" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="isBlank(String) : boolean" num="174" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="175" type="cond"/>
            <line num="176" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="176" type="cond"/>
            <line num="177" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getContents(String) : String" num="183" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStatements() : int" num="188" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getClassDefs() : int" num="192" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/metrics/FileMetrics.java" name="FileMetrics.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="85" coveredmethods="0" methods="9" elements="26" classes="2" ncloc="53" statements="17" conditionals="0" coveredstatements="0"/>
            <class name="FileMetrics">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="8" elements="23" statements="15" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="FileMetrics.FunctionVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="FileMetrics(PythonVisitorContext)" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFunctionDef(FunctionDef) : void" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numberOfStatements() : int" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numberOfFunctions() : int" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numberOfClasses() : int" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="complexity() : int" num="69" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cognitiveComplexity() : int" num="73" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="functionComplexities() : List&lt;Integer&gt;" num="77" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fileLinesVisitor() : FileLinesVisitor" num="81" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.python.parser">
         <metrics coveredelements="43" complexity="13" loc="163" methods="11" classes="3" statements="32" coveredconditionals="4" coveredmethods="10" elements="47" ncloc="101" files="2" conditionals="4" coveredstatements="29"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/parser/FStringParser.java" name="FStringParser.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="2" loc="56" coveredmethods="1" methods="2" elements="12" classes="1" ncloc="31" statements="10" conditionals="0" coveredstatements="7"/>
            <class name="FStringParser">
               <metrics coveredelements="8" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="12" statements="10" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="FStringParser()" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fStringExpressions(Token) : List&lt;AstNode&gt;" num="46" count="29" type="method"/>
            <line num="47" count="29" type="stmt"/>
            <line num="48" count="29" type="stmt"/>
            <line num="49" count="29" type="stmt"/>
            <line num="50" count="29" type="stmt"/>
            <line num="51" count="29" type="stmt"/>
            <line num="52" count="29" type="stmt"/>
            <line num="53" count="29" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/main/java/org/sonar/python/parser/PythonParser.java" name="PythonParser.java">
            <metrics coveredelements="35" coveredconditionals="4" complexity="11" loc="107" coveredmethods="9" methods="9" elements="35" classes="2" ncloc="70" statements="22" conditionals="4" coveredstatements="22"/>
            <class name="PythonParser">
               <metrics coveredelements="12" coveredconditionals="0" complexity="6" coveredmethods="6" methods="6" elements="12" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <class name="PythonParser.SslrPythonParser">
               <metrics coveredelements="23" coveredconditionals="4" complexity="5" coveredmethods="3" methods="3" elements="23" statements="16" conditionals="4" coveredstatements="16"/>
            </class>
            <line complexity="1" visibility="public" signature="create() : PythonParser" num="40" count="699" type="method"/>
            <line num="41" count="699" type="stmt"/>
            <line complexity="1" visibility="private" signature="PythonParser()" num="44" count="699" type="method"/>
            <line num="45" count="699" type="stmt"/>
            <line complexity="1" visibility="public" signature="parse(String) : AstNode" num="48" count="1013" type="method"/>
            <line num="49" count="1013" type="stmt"/>
            <line complexity="1" visibility="public" signature="setRootRule(Rule) : void" num="52" count="366" type="method"/>
            <line num="53" count="366" type="stmt"/>
            <line complexity="1" visibility="public" signature="getGrammar() : Grammar" num="56" count="143" type="method"/>
            <line num="57" count="143" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRootRule() : RuleDefinition" num="60" count="882" type="method"/>
            <line num="61" count="882" type="stmt"/>
            <line complexity="1" visibility="private" signature="SslrPythonParser()" num="72" count="699" type="method"/>
            <line num="73" count="699" type="stmt"/>
            <line num="74" count="699" type="stmt"/>
            <line num="75" count="699" type="stmt"/>
            <line num="76" count="699" type="stmt"/>
            <line complexity="1" visibility="public" signature="parse(String) : AstNode" num="79" count="1013" type="method"/>
            <line num="81" count="1013" type="stmt"/>
            <line num="82" count="1013" type="stmt"/>
            <line num="83" count="1013" type="stmt"/>
            <line complexity="3" visibility="private" signature="tokens() : List&lt;Token&gt;" num="86" count="1013" type="method"/>
            <line num="87" count="1013" type="stmt"/>
            <line num="88" count="1013" type="stmt"/>
            <line falsecount="631" truecount="382" num="88" type="cond"/>
            <line num="89" count="382" type="stmt"/>
            <line num="90" count="382" type="stmt"/>
            <line num="91" count="382" type="stmt"/>
            <line falsecount="382" truecount="503" num="91" type="cond"/>
            <line num="92" count="503" type="stmt"/>
            <line num="93" count="503" type="stmt"/>
            <line num="101" count="382" type="stmt"/>
            <line num="103" count="1013" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.samples.python">
         <metrics coveredelements="0" complexity="6" loc="167" methods="6" classes="4" statements="13" coveredconditionals="0" coveredmethods="0" elements="19" ncloc="73" files="4" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/its/plugin/python-custom-rules-plugin/src/main/java/org/sonar/samples/python/CustomPythonRuleRepository.java" name="CustomPythonRuleRepository.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="53" coveredmethods="0" methods="3" elements="12" classes="1" ncloc="29" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="CustomPythonRuleRepository">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="12" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="define(Context) : void" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="repositoryKey() : String" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="checkClasses() : List&lt;Class&gt;" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/its/plugin/python-custom-rules-plugin/src/main/java/org/sonar/samples/python/CustomPythonRulesPlugin.java" name="CustomPythonRulesPlugin.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="31" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="8" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="CustomPythonRulesPlugin">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="define(Context) : void" num="26" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/its/plugin/python-custom-rules-plugin/src/main/java/org/sonar/samples/python/CustomPythonSubscriptionCheck.java" name="CustomPythonSubscriptionCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="41" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="18" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="CustomPythonSubscriptionCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/its/plugin/python-custom-rules-plugin/src/main/java/org/sonar/samples/python/CustomPythonVisitorCheck.java" name="CustomPythonVisitorCheck.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="42" coveredmethods="0" methods="1" elements="3" classes="1" ncloc="18" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="CustomPythonVisitorCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="visitFunctionDef(FunctionDef) : void" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.plugins.python.coverage">
         <metrics coveredelements="145" complexity="39" loc="292" methods="14" classes="2" statements="97" coveredconditionals="37" coveredmethods="14" elements="153" ncloc="223" files="2" conditionals="42" coveredstatements="94"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/main/java/org/sonar/plugins/python/coverage/CoberturaParser.java" name="CoberturaParser.java">
            <metrics coveredelements="98" coveredconditionals="30" complexity="25" loc="157" coveredmethods="6" methods="6" elements="104" classes="1" ncloc="126" statements="64" conditionals="34" coveredstatements="62"/>
            <class name="CoberturaParser">
               <metrics coveredelements="98" coveredconditionals="30" complexity="25" coveredmethods="6" methods="6" elements="104" statements="64" conditionals="34" coveredstatements="62"/>
            </class>
            <line complexity="6" visibility="public" signature="parseReport(File,SensorContext,Map&lt;InputFile, NewCoverage&gt;) : void" num="47" count="14" type="method"/>
            <line num="48" count="14" type="stmt"/>
            <line num="49" count="14" type="stmt"/>
            <line num="51" count="14" type="stmt"/>
            <line num="52" count="14" type="stmt"/>
            <line num="53" count="14" type="stmt"/>
            <line num="54" count="14" type="stmt"/>
            <line num="55" count="14" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="12" type="stmt"/>
            <line num="61" count="12" type="stmt"/>
            <line falsecount="11" truecount="19" num="61" type="cond"/>
            <line num="62" count="19" type="stmt"/>
            <line falsecount="12" truecount="7" num="62" type="cond"/>
            <line num="63" count="7" type="stmt"/>
            <line num="64" count="12" type="stmt"/>
            <line falsecount="0" truecount="12" num="64" type="cond"/>
            <line num="65" count="12" type="stmt"/>
            <line num="69" count="14" type="stmt"/>
            <line num="70" count="11" type="stmt"/>
            <line falsecount="10" truecount="1" num="70" type="cond"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="5" visibility="private" signature="extractBaseDirectories(SMInputCursor,File) : List&lt;File&gt;" num="75" count="7" type="method"/>
            <line num="76" count="7" type="stmt"/>
            <line num="77" count="7" type="stmt"/>
            <line num="78" count="7" type="stmt"/>
            <line falsecount="7" truecount="10" num="78" type="cond"/>
            <line num="79" count="10" type="stmt"/>
            <line num="80" count="10" type="stmt"/>
            <line falsecount="0" truecount="10" num="80" type="cond"/>
            <line num="81" count="10" type="stmt"/>
            <line num="82" count="10" type="stmt"/>
            <line falsecount="0" truecount="10" num="82" type="cond"/>
            <line num="83" count="10" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="89" count="7" type="stmt"/>
            <line falsecount="7" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="7" type="stmt"/>
            <line complexity="3" visibility="private" signature="collectFileMeasures(SMInputCursor,SensorContext,Map&lt;InputFile, NewCoverage&gt;,List&lt;File&gt;) : void" num="95" count="12" type="method"/>
            <line num="97" count="12" type="stmt"/>
            <line falsecount="11" truecount="19" num="97" type="cond"/>
            <line num="98" count="19" type="stmt"/>
            <line num="99" count="19" type="stmt"/>
            <line num="100" count="19" type="stmt"/>
            <line falsecount="5" truecount="14" num="100" type="cond"/>
            <line num="101" count="14" type="stmt"/>
            <line num="102" count="14" type="stmt"/>
            <line num="104" count="5" type="stmt"/>
            <line complexity="5" visibility="private" signature="resolve(SensorContext,List&lt;File&gt;,String) : InputFile" num="109" count="19" type="method"/>
            <line num="111" count="19" type="stmt"/>
            <line num="112" count="19" type="stmt"/>
            <line num="113" count="19" type="stmt"/>
            <line falsecount="17" truecount="2" num="113" type="cond"/>
            <line num="114" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="114" type="cond"/>
            <line num="115" count="1" type="stmt"/>
            <line num="117" count="2" type="stmt"/>
            <line num="119" count="17" type="stmt"/>
            <line num="123" count="17" type="stmt"/>
            <line falsecount="16" truecount="1" num="123" type="cond"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="127" count="16" type="stmt"/>
            <line falsecount="13" truecount="3" num="127" type="cond"/>
            <line num="128" count="3" type="stmt"/>
            <line num="129" count="3" type="stmt"/>
            <line num="131" count="13" type="stmt"/>
            <line num="133" count="15" type="stmt"/>
            <line complexity="2" visibility="private" signature="logUnresolvedFile(String,String) : void" num="136" count="5" type="method"/>
            <line num="137" count="5" type="stmt"/>
            <line num="138" count="5" type="stmt"/>
            <line falsecount="1" truecount="4" num="138" type="cond"/>
            <line num="139" count="4" type="stmt"/>
            <line complexity="4" visibility="private" signature="collectFileData(SMInputCursor,NewCoverage) : void" num="143" count="14" type="method"/>
            <line num="144" count="14" type="stmt"/>
            <line num="145" count="14" type="stmt"/>
            <line falsecount="14" truecount="63" num="145" type="cond"/>
            <line num="146" count="63" type="stmt"/>
            <line num="147" count="63" type="stmt"/>
            <line num="149" count="63" type="stmt"/>
            <line num="150" count="63" type="stmt"/>
            <line num="151" count="63" type="stmt"/>
            <line falsecount="45" truecount="18" num="151" type="cond"/>
            <line num="152" count="18" type="stmt"/>
            <line num="153" count="18" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/main/java/org/sonar/plugins/python/coverage/PythonCoverageSensor.java" name="PythonCoverageSensor.java">
            <metrics coveredelements="47" coveredconditionals="7" complexity="14" loc="135" coveredmethods="8" methods="8" elements="49" classes="1" ncloc="97" statements="33" conditionals="8" coveredstatements="32"/>
            <class name="PythonCoverageSensor">
               <metrics coveredelements="47" coveredconditionals="7" complexity="14" coveredmethods="8" methods="8" elements="49" statements="33" conditionals="8" coveredstatements="32"/>
            </class>
            <line complexity="1" visibility="public" signature="PythonCoverageSensor(AnalysisWarningsWrapper)" num="58" count="17" type="method"/>
            <line num="59" count="17" type="stmt"/>
            <line complexity="1" visibility="public" signature="describe(SensorDescriptor) : void" num="62" count="1" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="execute(SensorContext) : void" num="69" count="15" type="method"/>
            <line num="71" count="15" type="stmt"/>
            <line num="72" count="15" type="stmt"/>
            <line num="74" count="15" type="stmt"/>
            <line num="76" count="15" type="stmt"/>
            <line num="77" count="15" type="stmt"/>
            <line num="78" count="15" type="stmt"/>
            <line falsecount="4" truecount="11" num="78" type="cond"/>
            <line num="79" count="11" type="stmt"/>
            <line num="80" count="11" type="stmt"/>
            <line num="81" count="14" type="stmt"/>
            <line num="82" count="12" type="stmt"/>
            <line complexity="2" visibility="private" signature="getCoverageReports(String,Configuration) : List&lt;File&gt;" num="87" count="15" type="method"/>
            <line num="88" count="15" type="stmt"/>
            <line falsecount="14" truecount="1" num="88" type="cond"/>
            <line num="89" count="1" type="stmt"/>
            <line num="92" count="14" type="stmt"/>
            <line complexity="2" visibility="private" signature="warnDeprecatedPropertyUsage(Configuration) : void" num="97" count="15" type="method"/>
            <line num="98" count="15" type="stmt"/>
            <line falsecount="11" truecount="4" num="98" type="cond"/>
            <line num="99" count="4" type="stmt"/>
            <line num="100" count="4" type="stmt"/>
            <line num="101" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="uniqueAbsolutePaths(List&lt;File&gt;) : Set&lt;File&gt;" num="105" count="11" type="method"/>
            <line num="106" count="11" type="stmt"/>
            <line complexity="3" visibility="private" signature="parseReport(File,SensorContext) : Map&lt;InputFile, NewCoverage&gt;" num="111" count="14" type="method"/>
            <line num="112" count="14" type="stmt"/>
            <line num="113" count="14" type="stmt"/>
            <line num="114" count="14" type="stmt"/>
            <line num="115" count="14" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="119" count="2" type="stmt"/>
            <line num="121" count="12" type="stmt"/>
            <line complexity="2" visibility="private" signature="saveMeasures(Map&lt;InputFile, NewCoverage&gt;,HashSet&lt;InputFile&gt;) : void" num="124" count="12" type="method"/>
            <line num="125" count="12" type="stmt"/>
            <line num="126" count="14" type="stmt"/>
            <line num="127" count="14" type="stmt"/>
            <line num="128" count="14" type="stmt"/>
            <line falsecount="14" truecount="0" num="128" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="14" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.plugins.python">
         <metrics coveredelements="276" complexity="121" loc="1535" methods="80" classes="18" statements="300" coveredconditionals="30" coveredmethods="54" elements="442" ncloc="1002" files="15" conditionals="62" coveredstatements="192"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/main/java/org/sonar/plugins/python/DirectoryScanner.java" name="DirectoryScanner.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="4" loc="60" coveredmethods="3" methods="4" elements="13" classes="1" ncloc="33" statements="9" conditionals="0" coveredstatements="8"/>
            <class name="DirectoryScanner">
               <metrics coveredelements="11" coveredconditionals="0" complexity="4" coveredmethods="3" methods="4" elements="13" statements="9" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="DirectoryScanner(File,WildcardPattern)" num="36" count="31" type="method"/>
            <line num="37" count="31" type="stmt"/>
            <line num="38" count="31" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIncludedFiles() : List&lt;File&gt;" num="41" count="31" type="method"/>
            <line num="42" count="31" type="stmt"/>
            <line num="43" count="31" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(File,String) : boolean" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(File) : boolean" num="50" count="1087" type="method"/>
            <line num="52" count="1087" type="stmt"/>
            <line num="53" count="1087" type="stmt"/>
            <line num="54" count="1087" type="stmt"/>
            <line num="57" count="31" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/main/java/org/sonar/plugins/python/EmptyReportException.java" name="EmptyReportException.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="26" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="EmptyReportException">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/main/java/org/sonar/plugins/python/ExternalIssuesSensor.java" name="ExternalIssuesSensor.java">
            <metrics coveredelements="18" coveredconditionals="4" complexity="5" loc="72" coveredmethods="3" methods="3" elements="18" classes="1" ncloc="42" statements="11" conditionals="4" coveredstatements="11"/>
            <class name="ExternalIssuesSensor">
               <metrics coveredelements="18" coveredconditionals="4" complexity="5" coveredmethods="3" methods="3" elements="18" statements="11" conditionals="4" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="describe(SensorDescriptor) : void" num="38" count="2" type="method"/>
            <line num="40" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="execute(SensorContext) : void" num="46" count="14" type="method"/>
            <line num="48" count="14" type="stmt"/>
            <line num="49" count="14" type="stmt"/>
            <line num="50" count="14" type="stmt"/>
            <line num="51" count="14" type="stmt"/>
            <line complexity="3" visibility="private" signature="logUnresolvedInputFiles(Set&lt;String&gt;) : void" num="54" count="14" type="method"/>
            <line num="55" count="14" type="stmt"/>
            <line falsecount="3" truecount="11" num="55" type="cond"/>
            <line num="56" count="11" type="stmt"/>
            <line num="58" count="3" type="stmt"/>
            <line num="59" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="59" type="cond"/>
            <line num="60" count="1" type="stmt"/>
            <line num="62" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/main/java/org/sonar/plugins/python/Python.java" name="Python.java">
            <metrics coveredelements="15" coveredconditionals="3" complexity="5" loc="57" coveredmethods="3" methods="3" elements="16" classes="1" ncloc="29" statements="9" conditionals="4" coveredstatements="9"/>
            <class name="Python">
               <metrics coveredelements="15" coveredconditionals="3" complexity="5" coveredmethods="3" methods="3" elements="16" statements="9" conditionals="4" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="Python(Configuration)" num="36" count="2" type="method"/>
            <line num="37" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFileSuffixes() : String[]" num="41" count="2" type="method"/>
            <line num="43" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="44" type="cond"/>
            <line complexity="2" visibility="private" signature="filterEmptyStrings(String[]) : String[]" num="47" count="2" type="method"/>
            <line num="48" count="2" type="stmt"/>
            <line num="49" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="50" type="cond"/>
            <line num="51" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/main/java/org/sonar/plugins/python/PythonChecks.java" name="PythonChecks.java">
            <metrics coveredelements="16" coveredconditionals="2" complexity="6" loc="65" coveredmethods="5" methods="5" elements="16" classes="1" ncloc="37" statements="9" conditionals="2" coveredstatements="9"/>
            <class name="PythonChecks">
               <metrics coveredelements="16" coveredconditionals="2" complexity="6" coveredmethods="5" methods="5" elements="16" statements="9" conditionals="2" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="package" signature="PythonChecks(CheckFactory)" num="37" count="10" type="method"/>
            <line num="38" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="addChecks(String,Iterable&lt;Class&gt;) : PythonChecks" num="40" count="19" type="method"/>
            <line num="41" count="19" type="stmt"/>
            <line num="43" count="19" type="stmt"/>
            <line complexity="2" visibility="public" signature="addCustomChecks(PythonCustomRuleRepository[]) : PythonChecks" num="46" count="10" type="method"/>
            <line num="47" count="10" type="stmt"/>
            <line falsecount="1" truecount="9" num="47" type="cond"/>
            <line num="48" count="9" type="stmt"/>
            <line num="49" count="9" type="stmt"/>
            <line num="53" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="all() : List&lt;PythonCheck&gt;" num="56" count="1" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ruleKey(PythonCheck) : RuleKey" num="60" count="1" type="method"/>
            <line num="62" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/main/java/org/sonar/plugins/python/PythonHighlighter.java" name="PythonHighlighter.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="15" loc="160" coveredmethods="1" methods="8" elements="45" classes="1" ncloc="77" statements="27" conditionals="10" coveredstatements="3"/>
            <class name="PythonHighlighter">
               <metrics coveredelements="4" coveredconditionals="0" complexity="15" coveredmethods="1" methods="8" elements="45" statements="27" conditionals="10" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="PythonHighlighter(SensorContext,InputFile)" num="96" count="4" type="method"/>
            <line num="97" count="4" type="stmt"/>
            <line num="98" count="4" type="stmt"/>
            <line num="99" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="scanFile(PythonVisitorContext) : void" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="checkFirstStatement(StringLiteral) : void" num="115" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="116" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="7" visibility="private" signature="visitToken(Token) : void" num="125" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="129" type="cond"/>
            <line num="130" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="132" type="cond"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isPython3Keyword(String) : boolean" num="146" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="leaveFile() : void" num="150" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="highlight(Token,TypeOfText) : void" num="155" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/main/java/org/sonar/plugins/python/PythonPlugin.java" name="PythonPlugin.java">
            <metrics coveredelements="27" coveredconditionals="3" complexity="8" loc="205" coveredmethods="6" methods="6" elements="28" classes="1" ncloc="166" statements="18" conditionals="4" coveredstatements="18"/>
            <class name="PythonPlugin">
               <metrics coveredelements="27" coveredconditionals="3" complexity="8" coveredmethods="6" methods="6" elements="28" statements="18" conditionals="4" coveredstatements="18"/>
            </class>
            <line complexity="2" visibility="public" signature="define(Context) : void" num="54" count="3" type="method"/>
            <line num="57" count="3" type="stmt"/>
            <line num="77" count="3" type="stmt"/>
            <line num="78" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="78" type="cond"/>
            <line num="79" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="addCoberturaExtensions(Context) : void" num="88" count="2" type="method"/>
            <line num="89" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="addXUnitExtensions(Context) : void" num="115" count="2" type="method"/>
            <line num="116" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="addPylintExtensions(Context) : void" num="139" count="2" type="method"/>
            <line num="140" count="2" type="stmt"/>
            <line complexity="2" visibility="private" signature="addBanditExtensions(Context) : void" num="174" count="2" type="method"/>
            <line num="175" count="2" type="stmt"/>
            <line num="176" count="2" type="stmt"/>
            <line num="177" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="177" type="cond"/>
            <line num="178" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="addFlake8Extensions(Context) : void" num="191" count="2" type="method"/>
            <line num="192" count="2" type="stmt"/>
            <line num="193" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/main/java/org/sonar/plugins/python/PythonProfile.java" name="PythonProfile.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="6" loc="81" coveredmethods="3" methods="3" elements="19" classes="1" ncloc="51" statements="16" conditionals="0" coveredstatements="16"/>
            <class name="PythonProfile">
               <metrics coveredelements="19" coveredconditionals="0" complexity="6" coveredmethods="3" methods="3" elements="19" statements="16" conditionals="0" coveredstatements="16"/>
            </class>
            <line complexity="1" visibility="public" signature="define(Context) : void" num="47" count="1" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="4" visibility="package" signature="getSecurityRuleKeys(String,String,String) : Set&lt;RuleKey&gt;" num="56" count="6" type="method"/>
            <line num="58" count="6" type="stmt"/>
            <line num="60" count="6" type="stmt"/>
            <line num="61" count="5" type="stmt"/>
            <line num="62" count="4" type="stmt"/>
            <line num="63" count="3" type="stmt"/>
            <line num="64" count="3" type="stmt"/>
            <line num="65" count="3" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="75" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="securityRuleMessage(Exception) : String" num="78" count="3" type="method"/>
            <line num="79" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/main/java/org/sonar/plugins/python/PythonReportSensor.java" name="PythonReportSensor.java">
            <metrics coveredelements="32" coveredconditionals="6" complexity="9" loc="98" coveredmethods="4" methods="5" elements="33" classes="1" ncloc="64" statements="22" conditionals="6" coveredstatements="22"/>
            <class name="PythonReportSensor">
               <metrics coveredelements="32" coveredconditionals="6" complexity="9" coveredmethods="4" methods="5" elements="33" statements="22" conditionals="6" coveredstatements="22"/>
            </class>
            <line complexity="1" visibility="public" signature="PythonReportSensor(Configuration,AnalysisWarningsWrapper,String)" num="42" count="13" type="method"/>
            <line num="43" count="13" type="stmt"/>
            <line num="44" count="13" type="stmt"/>
            <line num="45" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="describe(SensorDescriptor) : void" num="48" count="1" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="execute(SensorContext) : void" num="56" count="12" type="method"/>
            <line num="58" count="12" type="stmt"/>
            <line num="59" count="12" type="stmt"/>
            <line num="60" count="12" type="stmt"/>
            <line num="61" count="12" type="stmt"/>
            <line num="62" count="12" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="getReports(Configuration,String,String,String) : List&lt;File&gt;" num="69" count="26" type="method"/>
            <line num="70" count="26" type="stmt"/>
            <line num="72" count="26" type="stmt"/>
            <line num="73" count="26" type="stmt"/>
            <line num="75" count="26" type="stmt"/>
            <line falsecount="20" truecount="6" num="75" type="cond"/>
            <line num="76" count="6" type="stmt"/>
            <line falsecount="2" truecount="4" num="76" type="cond"/>
            <line num="78" count="4" type="stmt"/>
            <line num="79" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="79" type="cond"/>
            <line num="80" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="88" count="26" type="stmt"/>
            <line complexity="1" visibility="protected" signature="processReports(SensorContext,List&lt;File&gt;) : void" num="91" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/main/java/org/sonar/plugins/python/PythonRuleRepository.java" name="PythonRuleRepository.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="2" loc="60" coveredmethods="2" methods="2" elements="8" classes="1" ncloc="30" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="PythonRuleRepository">
               <metrics coveredelements="8" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="8" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="define(Context) : void" num="39" count="3" type="method"/>
            <line num="41" count="3" type="stmt"/>
            <line num="45" count="3" type="stmt"/>
            <line num="46" count="3" type="stmt"/>
            <line num="48" count="3" type="stmt"/>
            <line num="52" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="getCheckClasses() : List&lt;Class&gt;" num="55" count="3" type="method"/>
            <line num="56" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/main/java/org/sonar/plugins/python/PythonScanner.java" name="PythonScanner.java">
            <metrics coveredelements="66" coveredconditionals="7" complexity="26" loc="273" coveredmethods="9" methods="14" elements="132" classes="2" ncloc="219" statements="96" conditionals="22" coveredstatements="50"/>
            <class name="PythonScanner">
               <metrics coveredelements="57" coveredconditionals="7" complexity="22" coveredmethods="5" methods="10" elements="118" statements="86" conditionals="22" coveredstatements="45"/>
            </class>
            <class name="PythonScanner.GlobalSymbolsScanner">
               <metrics coveredelements="9" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="14" statements="10" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="PythonScanner(SensorContext,PythonChecks,FileLinesContextFactory,NoSonarFilter,List&lt;InputFile&gt;)" num="78" count="9" type="method"/>
            <line num="82" count="9" type="stmt"/>
            <line num="83" count="9" type="stmt"/>
            <line num="84" count="9" type="stmt"/>
            <line num="85" count="9" type="stmt"/>
            <line num="86" count="9" type="stmt"/>
            <line num="87" count="9" type="stmt"/>
            <line num="90" count="9" type="stmt"/>
            <line num="91" count="9" type="stmt"/>
            <line complexity="1" visibility="protected" signature="name() : String" num="94" count="6" type="method"/>
            <line num="96" count="6" type="stmt"/>
            <line complexity="4" visibility="protected" signature="scanFile(InputFile) : void" num="99" count="1" type="method"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="129" type="cond"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="getWorkingDirectory(SensorContext) : File" num="136" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="137" type="cond"/>
            <line complexity="1" visibility="protected" signature="processException(Exception,InputFile) : void" num="140" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="saveIssues(InputFile,List&lt;PreciseIssue&gt;) : void" num="145" count="1" type="method"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="153" type="cond"/>
            <line num="154" count="0" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="166" type="cond"/>
            <line num="167" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="175" type="cond"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="component(String,SensorContext) : InputFile" num="183" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="186" type="cond"/>
            <line num="187" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="newLocation(InputFile,NewIssue,IssueLocation) : NewIssueLocation" num="192" count="1" type="method"/>
            <line num="193" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="195" type="cond"/>
            <line num="196" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="197" type="cond"/>
            <line num="198" count="1" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="206" type="cond"/>
            <line num="207" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="saveMeasures(InputFile,PythonVisitorContext) : void" num="212" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="saveMetricOnFile(InputFile,Metric&lt;Integer&gt;,Integer) : void" num="238" count="0" type="method"/>
            <line num="239" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="GlobalSymbolsScanner(SensorContext)" num="248" count="9" type="method"/>
            <line num="249" count="9" type="stmt"/>
            <line complexity="1" visibility="protected" signature="name() : String" num="252" count="18" type="method"/>
            <line num="254" count="18" type="stmt"/>
            <line complexity="1" visibility="protected" signature="scanFile(InputFile) : void" num="257" count="8" type="method"/>
            <line num="259" count="8" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="processException(Exception,InputFile) : void" num="267" count="3" type="method"/>
            <line num="269" count="3" type="stmt"/>
            <line num="270" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/main/java/org/sonar/plugins/python/PythonSensor.java" name="PythonSensor.java">
            <metrics coveredelements="21" coveredconditionals="1" complexity="11" loc="132" coveredmethods="5" methods="9" elements="38" classes="2" ncloc="95" statements="27" conditionals="2" coveredstatements="15"/>
            <class name="PythonSensor">
               <metrics coveredelements="21" coveredconditionals="1" complexity="6" coveredmethods="5" methods="5" elements="23" statements="16" conditionals="2" coveredstatements="15"/>
            </class>
            <class name="PythonSensor.TestHighlightingScanner">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="4" elements="15" statements="11" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="PythonSensor(FileLinesContextFactory,CheckFactory,NoSonarFilter)" num="58" count="1" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="PythonSensor(FileLinesContextFactory,CheckFactory,NoSonarFilter,PythonCustomRuleRepository[])" num="62" count="10" type="method"/>
            <line num="64" count="10" type="stmt"/>
            <line num="67" count="10" type="stmt"/>
            <line num="68" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="describe(SensorDescriptor) : void" num="71" count="1" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="execute(SensorContext) : void" num="79" count="9" type="method"/>
            <line num="81" count="9" type="stmt"/>
            <line num="82" count="9" type="stmt"/>
            <line num="83" count="9" type="stmt"/>
            <line num="84" count="3" type="stmt"/>
            <line num="85" count="3" type="stmt"/>
            <line falsecount="2" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getInputFiles(InputFile.Type,SensorContext) : List&lt;InputFile&gt;" num="90" count="18" type="method"/>
            <line num="91" count="18" type="stmt"/>
            <line num="92" count="18" type="stmt"/>
            <line num="93" count="18" type="stmt"/>
            <line num="94" count="18" type="stmt"/>
            <line num="95" count="18" type="stmt"/>
            <line complexity="1" visibility="package" signature="TestHighlightingScanner(SensorContext)" num="103" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="name() : String" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="2" visibility="protected" signature="scanFile(InputFile) : void" num="112" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="processException(Exception,InputFile) : void" num="127" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/main/java/org/sonar/plugins/python/Scanner.java" name="Scanner.java">
            <metrics coveredelements="22" coveredconditionals="4" complexity="5" loc="71" coveredmethods="2" methods="2" elements="22" classes="1" ncloc="44" statements="16" conditionals="4" coveredstatements="16"/>
            <class name="Scanner">
               <metrics coveredelements="22" coveredconditionals="4" complexity="5" coveredmethods="2" methods="2" elements="22" statements="16" conditionals="4" coveredstatements="16"/>
            </class>
            <line complexity="1" visibility="package" signature="Scanner(SensorContext)" num="37" count="19" type="method"/>
            <line num="38" count="19" type="stmt"/>
            <line complexity="4" visibility="package" signature="execute(List&lt;InputFile&gt;,SensorContext) : void" num="41" count="13" type="method"/>
            <line num="42" count="13" type="stmt"/>
            <line num="43" count="13" type="stmt"/>
            <line num="44" count="13" type="stmt"/>
            <line num="45" count="13" type="stmt"/>
            <line num="46" count="13" type="stmt"/>
            <line num="47" count="13" type="stmt"/>
            <line falsecount="11" truecount="2" num="47" type="cond"/>
            <line num="48" count="2" type="stmt"/>
            <line num="49" count="2" type="stmt"/>
            <line num="51" count="11" type="stmt"/>
            <line num="52" count="11" type="stmt"/>
            <line num="54" count="3" type="stmt"/>
            <line num="55" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="55" type="cond"/>
            <line num="56" count="1" type="stmt"/>
            <line num="59" count="11" type="stmt"/>
            <line num="63" count="4" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/main/java/org/sonar/plugins/python/SonarQubePythonFile.java" name="SonarQubePythonFile.java">
            <metrics coveredelements="15" coveredconditionals="0" complexity="9" loc="75" coveredmethods="7" methods="8" elements="18" classes="2" ncloc="42" statements="10" conditionals="0" coveredstatements="8"/>
            <class name="SonarQubePythonFile">
               <metrics coveredelements="10" coveredconditionals="0" complexity="6" coveredmethods="5" methods="6" elements="12" statements="6" conditionals="0" coveredstatements="5"/>
            </class>
            <class name="SonarQubePythonFile.Sq62File">
               <metrics coveredelements="5" coveredconditionals="0" complexity="3" coveredmethods="2" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="private" signature="SonarQubePythonFile(InputFile)" num="31" count="5" type="method"/>
            <line num="32" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(InputFile) : PythonFile" num="35" count="5" type="method"/>
            <line num="36" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="fileName() : String" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inputFile() : InputFile" num="44" count="7" type="method"/>
            <line num="45" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="uri() : URI" num="48" count="1" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="53" count="1" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="Sq62File(InputFile)" num="60" count="5" type="method"/>
            <line num="61" count="5" type="stmt"/>
            <line complexity="2" visibility="public" signature="content() : String" num="64" count="5" type="method"/>
            <line num="66" count="5" type="stmt"/>
            <line num="67" count="5" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/main/java/org/sonar/plugins/python/SymbolVisitor.java" name="SymbolVisitor.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="10" loc="100" coveredmethods="1" methods="8" elements="36" classes="1" ncloc="69" statements="24" conditionals="4" coveredstatements="1"/>
            <class name="SymbolVisitor">
               <metrics coveredelements="2" coveredconditionals="0" complexity="10" coveredmethods="1" methods="8" elements="36" statements="24" conditionals="4" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="SymbolVisitor(NewSymbolTable)" num="42" count="1" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitClassDef(ClassDef) : void" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFunctionDef(FunctionDef) : void" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitLambda(LambdaExpression) : void" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitPyListOrSetCompExpression(ComprehensionExpression) : void" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitDictCompExpression(DictCompExpressionImpl) : void" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFileInput(FileInput) : void" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="handleSymbol(Symbol) : void" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.plugins.python.cpd">
         <metrics coveredelements="2" complexity="9" loc="75" methods="4" classes="1" statements="15" coveredconditionals="0" coveredmethods="1" elements="27" ncloc="45" files="1" conditionals="8" coveredstatements="1"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/main/java/org/sonar/plugins/python/cpd/PythonCpdAnalyzer.java" name="PythonCpdAnalyzer.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="9" loc="75" coveredmethods="1" methods="4" elements="27" classes="1" ncloc="45" statements="15" conditionals="8" coveredstatements="1"/>
            <class name="PythonCpdAnalyzer">
               <metrics coveredelements="2" coveredconditionals="0" complexity="9" coveredmethods="1" methods="4" elements="27" statements="15" conditionals="8" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="PythonCpdAnalyzer(SensorContext)" num="39" count="11" type="method"/>
            <line num="40" count="11" type="stmt"/>
            <line complexity="6" visibility="public" signature="pushCpdTokens(InputFile,PythonVisitorContext) : void" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isNewLineWithIndentationChange(TokenType,TokenType) : boolean" num="64" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isIgnoredType(TokenType) : boolean" num="68" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.plugins.python.bandit">
         <metrics coveredelements="77" complexity="26" loc="254" methods="12" classes="4" statements="49" coveredconditionals="17" coveredmethods="12" elements="79" ncloc="159" files="3" conditionals="18" coveredstatements="48"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/main/java/org/sonar/plugins/python/bandit/BanditJsonReportReader.java" name="BanditJsonReportReader.java">
            <metrics coveredelements="26" coveredconditionals="4" complexity="7" loc="89" coveredmethods="5" methods="5" elements="26" classes="2" ncloc="59" statements="17" conditionals="4" coveredstatements="17"/>
            <class name="BanditJsonReportReader">
               <metrics coveredelements="26" coveredconditionals="4" complexity="7" coveredmethods="5" methods="5" elements="26" statements="17" conditionals="4" coveredstatements="17"/>
            </class>
            <class name="BanditJsonReportReader.Issue">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="BanditJsonReportReader(Consumer&lt;Issue&gt;)" num="55" count="5" type="method"/>
            <line num="56" count="5" type="stmt"/>
            <line complexity="1" visibility="package" signature="read(InputStream,Consumer&lt;Issue&gt;) : void" num="59" count="5" type="method"/>
            <line num="60" count="5" type="stmt"/>
            <line complexity="2" visibility="private" signature="read(InputStream) : void" num="63" count="5" type="method"/>
            <line num="64" count="5" type="stmt"/>
            <line num="65" count="4" type="stmt"/>
            <line num="66" count="4" type="stmt"/>
            <line falsecount="1" truecount="3" num="66" type="cond"/>
            <line num="67" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="onResult(JSONObject) : void" num="71" count="34" type="method"/>
            <line num="72" count="34" type="stmt"/>
            <line num="73" count="34" type="stmt"/>
            <line num="74" count="34" type="stmt"/>
            <line num="75" count="34" type="stmt"/>
            <line num="76" count="34" type="stmt"/>
            <line num="77" count="34" type="stmt"/>
            <line num="78" count="34" type="stmt"/>
            <line num="79" count="34" type="stmt"/>
            <line complexity="2" visibility="private" signature="toInteger(Object) : Integer" num="82" count="34" type="method"/>
            <line num="83" count="34" type="stmt"/>
            <line falsecount="28" truecount="6" num="83" type="cond"/>
            <line num="84" count="6" type="stmt"/>
            <line num="86" count="28" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/main/java/org/sonar/plugins/python/bandit/BanditRulesDefinition.java" name="BanditRulesDefinition.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="37" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="12" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="BanditRulesDefinition">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="define(RulesDefinition.Context) : void" num="32" count="1" type="method"/>
            <line num="34" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/main/java/org/sonar/plugins/python/bandit/BanditSensor.java" name="BanditSensor.java">
            <metrics coveredelements="49" coveredconditionals="13" complexity="18" loc="128" coveredmethods="6" methods="6" elements="51" classes="1" ncloc="88" statements="31" conditionals="14" coveredstatements="30"/>
            <class name="BanditSensor">
               <metrics coveredelements="49" coveredconditionals="13" complexity="18" coveredmethods="6" methods="6" elements="51" statements="31" conditionals="14" coveredstatements="30"/>
            </class>
            <line complexity="4" visibility="protected" signature="importReport(File,SensorContext,Set&lt;String&gt;) : void" num="53" count="6" type="method"/>
            <line num="55" count="6" type="stmt"/>
            <line num="55" count="6" type="stmt"/>
            <line num="56" count="5" type="stmt"/>
            <line num="57" count="5" type="stmt"/>
            <line num="58" count="5" type="stmt"/>
            <line num="60" count="3" type="stmt"/>
            <line complexity="7" visibility="private" signature="saveIssue(SensorContext,Issue,Set&lt;String&gt;,boolean) : void" num="65" count="34" type="method"/>
            <line num="66" count="34" type="stmt"/>
            <line falsecount="29" truecount="5" num="66" type="cond"/>
            <line num="67" count="5" type="stmt"/>
            <line num="68" count="5" type="stmt"/>
            <line num="71" count="29" type="stmt"/>
            <line num="72" count="29" type="stmt"/>
            <line falsecount="6" truecount="23" num="72" type="cond"/>
            <line num="73" count="23" type="stmt"/>
            <line num="74" count="23" type="stmt"/>
            <line num="77" count="6" type="stmt"/>
            <line num="78" count="6" type="stmt"/>
            <line num="83" count="6" type="stmt"/>
            <line num="87" count="6" type="stmt"/>
            <line falsecount="1" truecount="5" num="87" type="cond"/>
            <line num="88" count="5" type="stmt"/>
            <line num="91" count="5" type="stmt"/>
            <line num="93" count="5" type="stmt"/>
            <line falsecount="0" truecount="5" num="93" type="cond"/>
            <line num="94" count="5" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="100" count="5" type="stmt"/>
            <line complexity="4" visibility="private" signature="toSonarQubeSeverity(String,String) : Severity" num="103" count="6" type="method"/>
            <line num="104" count="6" type="stmt"/>
            <line falsecount="3" truecount="3" num="104" type="cond"/>
            <line num="105" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="105" type="cond"/>
            <line num="106" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="106" type="cond"/>
            <line num="107" count="1" type="stmt"/>
            <line num="109" count="2" type="stmt"/>
            <line complexity="1" visibility="protected" signature="linterName() : String" num="113" count="3" type="method"/>
            <line num="115" count="3" type="stmt"/>
            <line complexity="1" visibility="protected" signature="reportPathKey() : String" num="118" count="7" type="method"/>
            <line num="120" count="7" type="stmt"/>
            <line complexity="1" visibility="protected" signature="logger() : Logger" num="123" count="2" type="method"/>
            <line num="125" count="2" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.plugins.python.flake8">
         <metrics coveredelements="83" complexity="22" loc="245" methods="10" classes="4" statements="57" coveredconditionals="16" coveredmethods="10" elements="83" ncloc="153" files="3" conditionals="16" coveredstatements="57"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/main/java/org/sonar/plugins/python/flake8/Flake8ReportReader.java" name="Flake8ReportReader.java">
            <metrics coveredelements="51" coveredconditionals="12" complexity="12" loc="107" coveredmethods="4" methods="4" elements="51" classes="2" ncloc="74" statements="35" conditionals="12" coveredstatements="35"/>
            <class name="Flake8ReportReader">
               <metrics coveredelements="45" coveredconditionals="12" complexity="11" coveredmethods="3" methods="3" elements="45" statements="30" conditionals="12" coveredstatements="30"/>
            </class>
            <class name="Flake8ReportReader.Issue">
               <metrics coveredelements="6" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="6" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="5" visibility="public" signature="parse(File,FileSystem) : List&lt;Issue&gt;" num="40" count="6" type="method"/>
            <line num="41" count="6" type="stmt"/>
            <line num="42" count="6" type="stmt"/>
            <line num="42" count="6" type="stmt"/>
            <line num="43" count="5" type="stmt"/>
            <line falsecount="5" truecount="13" num="43" type="cond"/>
            <line num="44" count="13" type="stmt"/>
            <line num="45" count="13" type="stmt"/>
            <line falsecount="4" truecount="9" num="45" type="cond"/>
            <line num="46" count="9" type="stmt"/>
            <line num="50" count="5" type="stmt"/>
            <line complexity="5" visibility="private" signature="parseLine(String) : Issue" num="53" count="13" type="method"/>
            <line num="55" count="13" type="stmt"/>
            <line falsecount="1" truecount="12" num="55" type="cond"/>
            <line num="56" count="12" type="stmt"/>
            <line falsecount="1" truecount="11" num="56" type="cond"/>
            <line num="57" count="11" type="stmt"/>
            <line num="58" count="11" type="stmt"/>
            <line falsecount="4" truecount="7" num="58" type="cond"/>
            <line num="59" count="7" type="stmt"/>
            <line num="60" count="7" type="stmt"/>
            <line num="61" count="7" type="stmt"/>
            <line num="62" count="7" type="stmt"/>
            <line num="63" count="7" type="stmt"/>
            <line num="64" count="7" type="stmt"/>
            <line num="66" count="4" type="stmt"/>
            <line num="67" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="67" type="cond"/>
            <line num="68" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="70" count="2" type="stmt"/>
            <line num="71" count="2" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="79" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="startsWithWhitespace(String) : boolean" num="82" count="12" type="method"/>
            <line num="83" count="12" type="stmt"/>
            <line num="84" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="Issue(String,String,String,Integer,Integer)" num="99" count="9" type="method"/>
            <line num="100" count="9" type="stmt"/>
            <line num="101" count="9" type="stmt"/>
            <line num="102" count="9" type="stmt"/>
            <line num="103" count="9" type="stmt"/>
            <line num="104" count="9" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/main/java/org/sonar/plugins/python/flake8/Flake8RulesDefinition.java" name="Flake8RulesDefinition.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="37" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="12" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="Flake8RulesDefinition">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="define(RulesDefinition.Context) : void" num="32" count="1" type="method"/>
            <line num="34" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/main/java/org/sonar/plugins/python/flake8/Flake8Sensor.java" name="Flake8Sensor.java">
            <metrics coveredelements="30" coveredconditionals="4" complexity="9" loc="101" coveredmethods="5" methods="5" elements="30" classes="1" ncloc="67" statements="21" conditionals="4" coveredstatements="21"/>
            <class name="Flake8Sensor">
               <metrics coveredelements="30" coveredconditionals="4" complexity="9" coveredmethods="5" methods="5" elements="30" statements="21" conditionals="4" coveredstatements="21"/>
            </class>
            <line complexity="2" visibility="protected" signature="importReport(File,SensorContext,Set&lt;String&gt;) : void" num="46" count="6" type="method"/>
            <line num="48" count="6" type="stmt"/>
            <line num="49" count="6" type="stmt"/>
            <line num="50" count="5" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="4" visibility="private" signature="saveIssue(SensorContext,Flake8ReportReader.Issue,Set&lt;String&gt;) : void" num="57" count="9" type="method"/>
            <line num="58" count="9" type="stmt"/>
            <line num="59" count="9" type="stmt"/>
            <line falsecount="7" truecount="2" num="59" type="cond"/>
            <line num="60" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="64" count="7" type="stmt"/>
            <line num="65" count="7" type="stmt"/>
            <line num="70" count="7" type="stmt"/>
            <line num="73" count="7" type="stmt"/>
            <line falsecount="2" truecount="5" num="73" type="cond"/>
            <line num="74" count="5" type="stmt"/>
            <line num="75" count="5" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="81" count="7" type="stmt"/>
            <line num="82" count="7" type="stmt"/>
            <line num="83" count="7" type="stmt"/>
            <line complexity="1" visibility="protected" signature="linterName() : String" num="86" count="2" type="method"/>
            <line num="88" count="2" type="stmt"/>
            <line complexity="1" visibility="protected" signature="reportPathKey() : String" num="91" count="7" type="method"/>
            <line num="93" count="7" type="stmt"/>
            <line complexity="1" visibility="protected" signature="logger() : Logger" num="96" count="1" type="method"/>
            <line num="98" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.plugins.python.warnings">
         <metrics coveredelements="4" complexity="2" loc="71" methods="2" classes="2" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" ncloc="20" files="2" conditionals="0" coveredstatements="2"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/main/java/org/sonar/plugins/python/warnings/AnalysisWarningsWrapper.java" name="AnalysisWarningsWrapper.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="35" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AnalysisWarningsWrapper">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/main/java/org/sonar/plugins/python/warnings/DefaultAnalysisWarningsWrapper.java" name="DefaultAnalysisWarningsWrapper.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="36" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="12" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="DefaultAnalysisWarningsWrapper">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="DefaultAnalysisWarningsWrapper(AnalysisWarnings)" num="28" count="1" type="method"/>
            <line num="29" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="addWarning(String) : void" num="32" count="2" type="method"/>
            <line num="34" count="2" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.plugins.python.pylint">
         <metrics coveredelements="313" complexity="98" loc="886" methods="49" classes="10" statements="232" coveredconditionals="61" coveredmethods="45" elements="351" ncloc="566" files="10" conditionals="70" coveredstatements="207"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/main/java/org/sonar/plugins/python/pylint/CommandStreamConsumer.java" name="CommandStreamConsumer.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="38" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="14" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="CommandStreamConsumer">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="consumeLine(String) : void" num="30" count="4" type="method"/>
            <line num="32" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getData() : List&lt;String&gt;" num="35" count="12" type="method"/>
            <line num="36" count="12" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/main/java/org/sonar/plugins/python/pylint/Issue.java" name="Issue.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="7" loc="62" coveredmethods="5" methods="7" elements="18" classes="1" ncloc="34" statements="11" conditionals="0" coveredstatements="9"/>
            <class name="Issue">
               <metrics coveredelements="14" coveredconditionals="0" complexity="7" coveredmethods="5" methods="7" elements="18" statements="11" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="package" signature="Issue(String,int,String,String,String)" num="30" count="55" type="method"/>
            <line num="31" count="55" type="stmt"/>
            <line num="32" count="55" type="stmt"/>
            <line num="33" count="55" type="stmt"/>
            <line num="34" count="55" type="stmt"/>
            <line num="35" count="55" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getFilename() : String" num="43" count="9" type="method"/>
            <line num="44" count="9" type="stmt"/>
            <line complexity="1" visibility="package" signature="getLine() : int" num="47" count="5" type="method"/>
            <line num="48" count="5" type="stmt"/>
            <line complexity="1" visibility="package" signature="getRuleId() : String" num="51" count="44" type="method"/>
            <line num="52" count="44" type="stmt"/>
            <line complexity="1" visibility="package" signature="getObjName() : String" num="55" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getDescription() : String" num="59" count="5" type="method"/>
            <line num="60" count="5" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/main/java/org/sonar/plugins/python/pylint/PylintArguments.java" name="PylintArguments.java">
            <metrics coveredelements="21" coveredconditionals="4" complexity="5" loc="63" coveredmethods="3" methods="3" elements="21" classes="1" ncloc="35" statements="14" conditionals="4" coveredstatements="14"/>
            <class name="PylintArguments">
               <metrics coveredelements="21" coveredconditionals="4" complexity="5" coveredmethods="3" methods="3" elements="21" statements="14" conditionals="4" coveredstatements="14"/>
            </class>
            <line complexity="2" visibility="public" signature="PylintArguments(Command)" num="36" count="4" type="method"/>
            <line num="37" count="4" type="stmt"/>
            <line num="38" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="38" type="cond"/>
            <line complexity="2" visibility="private" signature="pylintVersion(Command) : String" num="41" count="4" type="method"/>
            <line num="42" count="4" type="stmt"/>
            <line num="43" count="4" type="stmt"/>
            <line num="44" count="4" type="stmt"/>
            <line num="45" count="4" type="stmt"/>
            <line num="46" count="4" type="stmt"/>
            <line num="48" count="4" type="stmt"/>
            <line num="49" count="4" type="stmt"/>
            <line num="50" count="4" type="stmt"/>
            <line falsecount="1" truecount="3" num="50" type="cond"/>
            <line num="51" count="3" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="arguments() : String[]" num="59" count="3" type="method"/>
            <line num="60" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/main/java/org/sonar/plugins/python/pylint/PylintConfiguration.java" name="PylintConfiguration.java">
            <metrics coveredelements="17" coveredconditionals="4" complexity="5" loc="59" coveredmethods="3" methods="3" elements="17" classes="1" ncloc="32" statements="10" conditionals="4" coveredstatements="10"/>
            <class name="PylintConfiguration">
               <metrics coveredelements="17" coveredconditionals="4" complexity="5" coveredmethods="3" methods="3" elements="17" statements="10" conditionals="4" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="PylintConfiguration(Configuration)" num="38" count="2" type="method"/>
            <line num="39" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="getPylintConfigPath(FileSystem) : String" num="42" count="4" type="method"/>
            <line num="43" count="4" type="stmt"/>
            <line num="44" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="44" type="cond"/>
            <line num="45" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line num="48" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="48" type="cond"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPylintPath() : String" num="55" count="1" type="method"/>
            <line num="56" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/main/java/org/sonar/plugins/python/pylint/PylintImportSensor.java" name="PylintImportSensor.java">
            <metrics coveredelements="58" coveredconditionals="11" complexity="18" loc="147" coveredmethods="10" methods="10" elements="62" classes="1" ncloc="111" statements="40" conditionals="12" coveredstatements="37"/>
            <class name="PylintImportSensor">
               <metrics coveredelements="58" coveredconditionals="11" complexity="18" coveredmethods="10" methods="10" elements="62" statements="40" conditionals="12" coveredstatements="37"/>
            </class>
            <line complexity="1" visibility="public" signature="PylintImportSensor(Configuration,AnalysisWarningsWrapper)" num="51" count="4" type="method"/>
            <line num="52" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="describe(SensorDescriptor) : void" num="55" count="1" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="reportPathKey() : String" num="63" count="3" type="method"/>
            <line num="65" count="3" type="stmt"/>
            <line complexity="1" visibility="protected" signature="defaultReportPath() : String" num="68" count="3" type="method"/>
            <line num="70" count="3" type="stmt"/>
            <line complexity="3" visibility="protected" signature="processReports(SensorContext,List&lt;File&gt;) : void" num="73" count="3" type="method"/>
            <line num="75" count="3" type="stmt"/>
            <line num="76" count="3" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="86" count="3" type="stmt"/>
            <line complexity="3" visibility="private" signature="parse(File,FileSystem) : List&lt;Issue&gt;" num="89" count="2" type="method"/>
            <line num="90" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line falsecount="2" truecount="11" num="94" type="cond"/>
            <line num="95" count="11" type="stmt"/>
            <line num="96" count="11" type="stmt"/>
            <line num="97" count="11" type="stmt"/>
            <line falsecount="2" truecount="9" num="97" type="cond"/>
            <line num="98" count="9" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line complexity="2" visibility="private" signature="saveIssues(List&lt;Issue&gt;,SensorContext) : void" num="105" count="3" type="method"/>
            <line num="106" count="3" type="stmt"/>
            <line num="107" count="3" type="stmt"/>
            <line num="108" count="9" type="stmt"/>
            <line num="109" count="9" type="stmt"/>
            <line num="110" count="9" type="stmt"/>
            <line falsecount="0" truecount="9" num="110" type="cond"/>
            <line num="111" count="9" type="stmt"/>
            <line num="112" count="9" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="processRule(Issue,InputFile,ActiveRule,SensorContext) : void" num="119" count="12" type="method"/>
            <line num="120" count="12" type="stmt"/>
            <line falsecount="7" truecount="5" num="120" type="cond"/>
            <line num="121" count="5" type="stmt"/>
            <line num="124" count="5" type="stmt"/>
            <line num="129" count="5" type="stmt"/>
            <line num="130" count="7" type="stmt"/>
            <line falsecount="3" truecount="4" num="130" type="cond"/>
            <line num="131" count="4" type="stmt"/>
            <line complexity="2" visibility="private" signature="logUnknownRuleWarning(String) : void" num="135" count="4" type="method"/>
            <line num="136" count="4" type="stmt"/>
            <line falsecount="1" truecount="3" num="136" type="cond"/>
            <line num="137" count="3" type="stmt"/>
            <line num="138" count="3" type="stmt"/>
            <line complexity="1" visibility="package" signature="clearLoggedWarnings() : void" num="143" count="2" type="method"/>
            <line num="144" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/main/java/org/sonar/plugins/python/pylint/PylintIssuesAnalyzer.java" name="PylintIssuesAnalyzer.java">
            <metrics coveredelements="33" coveredconditionals="11" complexity="13" loc="115" coveredmethods="3" methods="5" elements="56" classes="1" ncloc="74" statements="35" conditionals="16" coveredstatements="19"/>
            <class name="PylintIssuesAnalyzer">
               <metrics coveredelements="33" coveredconditionals="11" complexity="13" coveredmethods="3" methods="5" elements="56" statements="35" conditionals="16" coveredstatements="19"/>
            </class>
            <line complexity="1" visibility="package" signature="PylintIssuesAnalyzer(String,String)" num="45" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="3" visibility="package" signature="PylintIssuesAnalyzer(String,String,PylintArguments)" num="49" count="14" type="method"/>
            <line num="50" count="14" type="stmt"/>
            <line num="52" count="12" type="stmt"/>
            <line falsecount="7" truecount="5" num="52" type="cond"/>
            <line num="53" count="5" type="stmt"/>
            <line falsecount="3" truecount="2" num="53" type="cond"/>
            <line num="54" count="2" type="stmt"/>
            <line num="56" count="3" type="stmt"/>
            <line num="59" count="10" type="stmt"/>
            <line complexity="3" visibility="private" signature="pylintPathWithDefault(String) : String" num="62" count="15" type="method"/>
            <line num="63" count="15" type="stmt"/>
            <line falsecount="10" truecount="5" num="63" type="cond"/>
            <line num="64" count="5" type="stmt"/>
            <line falsecount="2" truecount="3" num="64" type="cond"/>
            <line num="65" count="3" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line num="69" count="10" type="stmt"/>
            <line complexity="3" visibility="public" signature="analyze(String,Charset,File) : List&lt;Issue&gt;" num="72" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="3" visibility="protected" signature="parseOutput(List&lt;String&gt;) : List&lt;Issue&gt;" num="100" count="5" type="method"/>
            <line num="101" count="5" type="stmt"/>
            <line num="103" count="5" type="stmt"/>
            <line num="104" count="5" type="stmt"/>
            <line falsecount="0" truecount="5" num="104" type="cond"/>
            <line num="105" count="5" type="stmt"/>
            <line num="106" count="44" type="stmt"/>
            <line num="107" count="44" type="stmt"/>
            <line falsecount="1" truecount="43" num="107" type="cond"/>
            <line num="108" count="43" type="stmt"/>
            <line num="113" count="5" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/main/java/org/sonar/plugins/python/pylint/PylintReportParser.java" name="PylintReportParser.java">
            <metrics coveredelements="57" coveredconditionals="11" complexity="11" loc="114" coveredmethods="4" methods="4" elements="59" classes="1" ncloc="73" statements="43" conditionals="12" coveredstatements="42"/>
            <class name="PylintReportParser">
               <metrics coveredelements="57" coveredconditionals="11" complexity="11" coveredmethods="4" methods="4" elements="59" statements="43" conditionals="12" coveredstatements="42"/>
            </class>
            <line complexity="1" visibility="private" signature="initializeIdMap() : Map&lt;String, String&gt;" num="39" count="1" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="6" visibility="public" signature="parseLine(String) : Issue" num="54" count="55" type="method"/>
            <line num="61" count="55" type="stmt"/>
            <line num="63" count="55" type="stmt"/>
            <line num="64" count="55" type="stmt"/>
            <line num="65" count="55" type="stmt"/>
            <line num="66" count="55" type="stmt"/>
            <line num="67" count="55" type="stmt"/>
            <line num="69" count="55" type="stmt"/>
            <line falsecount="1" truecount="54" num="69" type="cond"/>
            <line num="70" count="54" type="stmt"/>
            <line falsecount="0" truecount="54" num="70" type="cond"/>
            <line num="71" count="54" type="stmt"/>
            <line num="72" count="54" type="stmt"/>
            <line falsecount="2" truecount="52" num="72" type="cond"/>
            <line num="73" count="52" type="stmt"/>
            <line num="74" count="52" type="stmt"/>
            <line num="75" count="52" type="stmt"/>
            <line num="77" count="52" type="stmt"/>
            <line num="79" count="52" type="stmt"/>
            <line falsecount="23" truecount="29" num="79" type="cond"/>
            <line num="80" count="29" type="stmt"/>
            <line num="82" count="23" type="stmt"/>
            <line num="85" count="52" type="stmt"/>
            <line num="86" count="52" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="95" count="55" type="stmt"/>
            <line complexity="3" visibility="private" signature="ruleId(String) : String" num="98" count="52" type="method"/>
            <line num="99" count="52" type="stmt"/>
            <line num="100" count="52" type="stmt"/>
            <line num="101" count="52" type="stmt"/>
            <line falsecount="42" truecount="10" num="101" type="cond"/>
            <line num="102" count="10" type="stmt"/>
            <line num="104" count="52" type="stmt"/>
            <line falsecount="42" truecount="10" num="104" type="cond"/>
            <line num="105" count="10" type="stmt"/>
            <line num="107" count="52" type="stmt"/>
            <line complexity="1" visibility="private" signature="isDetail(String) : boolean" num="110" count="54" type="method"/>
            <line num="111" count="54" type="stmt"/>
            <line num="112" count="54" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/main/java/org/sonar/plugins/python/pylint/PylintRuleParser.java" name="PylintRuleParser.java">
            <metrics coveredelements="33" coveredconditionals="12" complexity="13" loc="73" coveredmethods="3" methods="3" elements="33" classes="1" ncloc="46" statements="18" conditionals="12" coveredstatements="18"/>
            <class name="PylintRuleParser">
               <metrics coveredelements="33" coveredconditionals="12" complexity="13" coveredmethods="3" methods="3" elements="33" statements="18" conditionals="12" coveredstatements="18"/>
            </class>
            <line complexity="6" visibility="public" signature="PylintRuleParser(String)" num="40" count="5" type="method"/>
            <line num="41" count="5" type="stmt"/>
            <line num="41" count="5" type="stmt"/>
            <line num="42" count="5" type="stmt"/>
            <line num="43" count="4" type="stmt"/>
            <line falsecount="3" truecount="19485" num="43" type="cond"/>
            <line num="44" count="19485" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line num="50" count="5" type="stmt"/>
            <line falsecount="2" truecount="3" num="50" type="cond"/>
            <line num="51" count="3" type="stmt"/>
            <line complexity="6" visibility="private" signature="onXmlEvent(XMLEvent) : void" num="55" count="19484" type="method"/>
            <line num="56" count="19484" type="stmt"/>
            <line falsecount="14985" truecount="4499" num="56" type="cond"/>
            <line num="57" count="4499" type="stmt"/>
            <line num="58" count="4499" type="stmt"/>
            <line num="59" count="4499" type="stmt"/>
            <line falsecount="3759" truecount="740" num="59" type="cond"/>
            <line num="60" count="740" type="stmt"/>
            <line num="62" count="14985" type="stmt"/>
            <line falsecount="4508" truecount="10477" num="62" type="cond"/>
            <line num="63" count="10477" type="stmt"/>
            <line num="64" count="4508" type="stmt"/>
            <line falsecount="3768" truecount="740" num="64" type="cond"/>
            <line num="65" count="740" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasRuleDefinition(String) : boolean" num="69" count="9" type="method"/>
            <line num="70" count="9" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/main/java/org/sonar/plugins/python/pylint/PylintRuleRepository.java" name="PylintRuleRepository.java">
            <metrics coveredelements="26" coveredconditionals="4" complexity="9" loc="78" coveredmethods="4" methods="4" elements="29" classes="1" ncloc="48" statements="19" conditionals="6" coveredstatements="18"/>
            <class name="PylintRuleRepository">
               <metrics coveredelements="26" coveredconditionals="4" complexity="9" coveredmethods="4" methods="4" elements="29" statements="19" conditionals="6" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="public" signature="PylintRuleRepository(RulesDefinitionXmlLoader)" num="41" count="1" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="define(Context) : void" num="45" count="1" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="3" visibility="private" signature="defineRemediationFunction(NewRepository) : void" num="55" count="1" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="370" type="stmt"/>
            <line num="59" count="370" type="stmt"/>
            <line falsecount="370" truecount="0" num="59" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="370" type="stmt"/>
            <line falsecount="0" truecount="370" num="61" type="cond"/>
            <line num="62" count="370" type="stmt"/>
            <line complexity="4" visibility="private" signature="loadRemediationCostMap() : Map&lt;String, String&gt;" num="67" count="1" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line falsecount="1" truecount="370" num="70" type="cond"/>
            <line num="71" count="370" type="stmt"/>
            <line num="72" count="370" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/main/java/org/sonar/plugins/python/pylint/PylintSensor.java" name="PylintSensor.java">
            <metrics coveredelements="50" coveredconditionals="4" complexity="15" loc="137" coveredmethods="8" methods="8" elements="52" classes="1" ncloc="99" statements="40" conditionals="4" coveredstatements="38"/>
            <class name="PylintSensor">
               <metrics coveredelements="50" coveredconditionals="4" complexity="15" coveredmethods="8" methods="8" elements="52" statements="40" conditionals="4" coveredstatements="38"/>
            </class>
            <line complexity="1" visibility="public" signature="PylintSensor(PylintConfiguration,Configuration,AnalysisWarnings)" num="49" count="6" type="method"/>
            <line num="50" count="6" type="stmt"/>
            <line num="51" count="6" type="stmt"/>
            <line num="52" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="describe(SensorDescriptor) : void" num="55" count="1" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="shouldExecute() : boolean" num="64" count="6" type="method"/>
            <line num="65" count="6" type="stmt"/>
            <line complexity="6" visibility="public" signature="execute(SensorContext) : void" num="68" count="4" type="method"/>
            <line num="70" count="4" type="stmt"/>
            <line num="71" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="71" type="cond"/>
            <line num="72" count="2" type="stmt"/>
            <line num="75" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="75" type="cond"/>
            <line num="76" count="2" type="stmt"/>
            <line num="79" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="86" count="2" type="stmt"/>
            <line num="87" count="3" type="stmt"/>
            <line num="88" count="3" type="stmt"/>
            <line num="89" count="3" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line complexity="2" visibility="private" signature="initializeAnalyzer(SensorContext) : boolean" num="97" count="3" type="method"/>
            <line num="98" count="3" type="stmt"/>
            <line num="99" count="3" type="stmt"/>
            <line num="100" count="3" type="stmt"/>
            <line num="101" count="3" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="createAnalyzer(String,String) : PylintIssuesAnalyzer" num="110" count="1" type="method"/>
            <line num="111" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="analyzeFile(SensorContext,InputFile,File) : void" num="114" count="3" type="method"/>
            <line num="115" count="3" type="stmt"/>
            <line num="117" count="3" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="3" type="stmt"/>
            <line num="121" count="3" type="stmt"/>
            <line complexity="2" visibility="private" signature="prepareWorkDir(File) : boolean" num="125" count="3" type="method"/>
            <line num="126" count="3" type="stmt"/>
            <line num="127" count="3" type="stmt"/>
            <line num="129" count="3" type="stmt"/>
            <line num="130" count="3" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.plugins.python.parser">
         <metrics coveredelements="15" complexity="10" loc="92" methods="4" classes="3" statements="19" coveredconditionals="0" coveredmethods="3" elements="27" ncloc="55" files="1" conditionals="4" coveredstatements="12"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/main/java/org/sonar/plugins/python/parser/StaxParser.java" name="StaxParser.java">
            <metrics coveredelements="15" coveredconditionals="0" complexity="10" loc="92" coveredmethods="3" methods="4" elements="27" classes="3" ncloc="55" statements="19" conditionals="4" coveredstatements="12"/>
            <class name="StaxParser">
               <metrics coveredelements="15" coveredconditionals="0" complexity="6" coveredmethods="3" methods="3" elements="16" statements="13" conditionals="0" coveredstatements="12"/>
            </class>
            <class name="StaxParser.UndeclaredEntitiesXMLResolver">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="1" elements="11" statements="6" conditionals="4" coveredstatements="0"/>
            </class>
            <class name="StaxParser.XmlStreamHandler">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="StaxParser(XmlStreamHandler)" num="43" count="26" type="method"/>
            <line num="44" count="26" type="stmt"/>
            <line num="45" count="26" type="stmt"/>
            <line num="46" count="26" type="stmt"/>
            <line num="47" count="26" type="stmt"/>
            <line num="48" count="26" type="stmt"/>
            <line complexity="4" visibility="public" signature="parse(File) : void" num="51" count="24" type="method"/>
            <line num="52" count="24" type="stmt"/>
            <line num="52" count="24" type="stmt"/>
            <line num="53" count="24" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parse(InputStream) : void" num="59" count="27" type="method"/>
            <line num="60" count="27" type="stmt"/>
            <line num="61" count="27" type="stmt"/>
            <line num="62" count="27" type="stmt"/>
            <line num="64" count="27" type="stmt"/>
            <line complexity="4" visibility="public" signature="resolveEntity(String,String,String,String) : Object" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.plugins.python.xunit">
         <metrics coveredelements="235" complexity="63" loc="574" methods="39" classes="5" statements="155" coveredconditionals="42" coveredmethods="39" elements="238" ncloc="352" files="5" conditionals="44" coveredstatements="154"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/main/java/org/sonar/plugins/python/xunit/PythonXUnitSensor.java" name="PythonXUnitSensor.java">
            <metrics coveredelements="94" coveredconditionals="15" complexity="21" loc="199" coveredmethods="13" methods="13" elements="95" classes="1" ncloc="147" statements="66" conditionals="16" coveredstatements="66"/>
            <class name="PythonXUnitSensor">
               <metrics coveredelements="94" coveredconditionals="15" complexity="21" coveredmethods="13" methods="13" elements="95" statements="66" conditionals="16" coveredstatements="66"/>
            </class>
            <line complexity="1" visibility="public" signature="PythonXUnitSensor(Configuration,FileSystem,AnalysisWarningsWrapper)" num="52" count="9" type="method"/>
            <line num="53" count="9" type="stmt"/>
            <line num="54" count="9" type="stmt"/>
            <line complexity="1" visibility="protected" signature="reportPathKey() : String" num="57" count="9" type="method"/>
            <line num="59" count="9" type="stmt"/>
            <line complexity="1" visibility="protected" signature="defaultReportPath() : String" num="62" count="9" type="method"/>
            <line num="64" count="9" type="stmt"/>
            <line complexity="2" visibility="protected" signature="processReports(SensorContext,List&lt;File&gt;) : void" num="67" count="9" type="method"/>
            <line num="69" count="9" type="stmt"/>
            <line falsecount="7" truecount="2" num="69" type="cond"/>
            <line num="70" count="2" type="stmt"/>
            <line num="72" count="7" type="stmt"/>
            <line complexity="2" visibility="private" signature="simpleMode(SensorContext,List&lt;File&gt;) : void" num="76" count="2" type="method"/>
            <line num="77" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="79" count="2" type="stmt"/>
            <line num="80" count="3" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="86" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="86" type="cond"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="detailedMode(SensorContext,List&lt;File&gt;) : void" num="96" count="7" type="method"/>
            <line num="97" count="7" type="stmt"/>
            <line num="98" count="7" type="stmt"/>
            <line num="99" count="7" type="stmt"/>
            <line num="100" count="7" type="stmt"/>
            <line num="102" count="5" type="stmt"/>
            <line num="104" count="5" type="stmt"/>
            <line complexity="1" visibility="private" signature="processReportDetailed(SensorContext,Collection&lt;TestSuite&gt;) : void" num="108" count="5" type="method"/>
            <line num="109" count="5" type="stmt"/>
            <line num="110" count="5" type="stmt"/>
            <line num="111" count="6" type="stmt"/>
            <line num="112" count="6" type="stmt"/>
            <line num="113" count="6" type="stmt"/>
            <line num="115" count="6" type="stmt"/>
            <line num="116" count="6" type="stmt"/>
            <line num="117" count="6" type="stmt"/>
            <line num="118" count="6" type="stmt"/>
            <line num="119" count="6" type="stmt"/>
            <line complexity="4" visibility="private" signature="findResource(TestCase,String) : InputFile" num="123" count="24" type="method"/>
            <line num="125" count="24" type="stmt"/>
            <line num="127" count="24" type="stmt"/>
            <line falsecount="12" truecount="12" num="127" type="cond"/>
            <line num="128" count="12" type="stmt"/>
            <line num="131" count="24" type="stmt"/>
            <line falsecount="12" truecount="12" num="131" type="cond"/>
            <line num="132" count="12" type="stmt"/>
            <line num="133" count="12" type="stmt"/>
            <line falsecount="3" truecount="9" num="133" type="cond"/>
            <line num="134" count="12" type="stmt"/>
            <line num="137" count="12" type="stmt"/>
            <line complexity="3" visibility="private" signature="findResourceUsingNoseTestsStrategy(String) : InputFile" num="140" count="12" type="method"/>
            <line num="142" count="12" type="stmt"/>
            <line num="144" count="12" type="stmt"/>
            <line num="146" count="12" type="stmt"/>
            <line falsecount="10" truecount="2" num="146" type="cond"/>
            <line num="148" count="2" type="stmt"/>
            <line num="149" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="149" type="cond"/>
            <line num="150" count="2" type="stmt"/>
            <line num="154" count="12" type="stmt"/>
            <line complexity="2" visibility="private" signature="lookupResources(Collection&lt;TestSuite&gt;) : Map&lt;InputFile, TestResult&gt;" num="157" count="5" type="method"/>
            <line num="158" count="5" type="stmt"/>
            <line num="160" count="5" type="stmt"/>
            <line num="161" count="5" type="stmt"/>
            <line num="162" count="24" type="stmt"/>
            <line num="163" count="24" type="stmt"/>
            <line num="164" count="24" type="stmt"/>
            <line num="165" count="24" type="stmt"/>
            <line falsecount="1" truecount="23" num="165" type="cond"/>
            <line num="166" count="23" type="stmt"/>
            <line num="167" count="23" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="174" count="5" type="stmt"/>
            <line complexity="1" visibility="private" signature="getSonarTestFile(File) : InputFile" num="177" count="26" type="method"/>
            <line num="179" count="26" type="stmt"/>
            <line num="180" count="26" type="stmt"/>
            <line complexity="1" visibility="private" signature="saveMeasure(SensorContext,InputComponent,Metric&lt;Integer&gt;,int) : void" num="183" count="28" type="method"/>
            <line num="184" count="28" type="stmt"/>
            <line complexity="1" visibility="private" signature="saveMeasure(SensorContext,InputComponent,Metric&lt;Long&gt;,long) : void" num="191" count="7" type="method"/>
            <line num="192" count="7" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/main/java/org/sonar/plugins/python/xunit/TestCase.java" name="TestCase.java">
            <metrics coveredelements="33" coveredconditionals="6" complexity="12" loc="124" coveredmethods="8" methods="8" elements="33" classes="1" ncloc="58" statements="19" conditionals="6" coveredstatements="19"/>
            <class name="TestCase">
               <metrics coveredelements="33" coveredconditionals="6" complexity="12" coveredmethods="8" methods="8" elements="33" statements="19" conditionals="6" coveredstatements="19"/>
            </class>
            <line complexity="1" visibility="public" signature="TestCase(String,int,String,String,String,String,String)" num="63" count="42" type="method"/>
            <line num="64" count="42" type="stmt"/>
            <line num="65" count="42" type="stmt"/>
            <line num="66" count="42" type="stmt"/>
            <line num="67" count="42" type="stmt"/>
            <line num="68" count="42" type="stmt"/>
            <line num="69" count="42" type="stmt"/>
            <line num="70" count="42" type="stmt"/>
            <line complexity="1" visibility="public" signature="isError() : boolean" num="76" count="32" type="method"/>
            <line num="77" count="32" type="stmt"/>
            <line complexity="1" visibility="public" signature="isFailure() : boolean" num="83" count="34" type="method"/>
            <line num="84" count="34" type="stmt"/>
            <line complexity="1" visibility="public" signature="isSkipped() : boolean" num="90" count="37" type="method"/>
            <line num="91" count="37" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime() : int" num="94" count="37" type="method"/>
            <line num="95" count="37" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFile() : String" num="98" count="36" type="method"/>
            <line num="100" count="36" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTestClassname() : String" num="103" count="36" type="method"/>
            <line num="105" count="36" type="stmt"/>
            <line complexity="5" visibility="public" signature="getDetails() : String" num="111" count="4" type="method"/>
            <line num="112" count="4" type="stmt"/>
            <line num="113" count="4" type="stmt"/>
            <line num="114" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="114" type="cond"/>
            <line num="115" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="115" type="cond"/>
            <line falsecount="1" truecount="1" num="117" type="cond"/>
            <line num="119" count="2" type="stmt"/>
            <line num="122" count="4" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/main/java/org/sonar/plugins/python/xunit/TestResult.java" name="TestResult.java">
            <metrics coveredelements="27" coveredconditionals="6" complexity="10" loc="66" coveredmethods="7" methods="7" elements="27" classes="1" ncloc="37" statements="14" conditionals="6" coveredstatements="14"/>
            <class name="TestResult">
               <metrics coveredelements="27" coveredconditionals="6" complexity="10" coveredmethods="7" methods="7" elements="27" statements="14" conditionals="6" coveredstatements="14"/>
            </class>
            <line complexity="1" visibility="public" signature="getErrors() : int" num="30" count="11" type="method"/>
            <line num="31" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSkipped() : int" num="34" count="11" type="method"/>
            <line num="35" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTests() : int" num="38" count="6" type="method"/>
            <line num="39" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExecutedTests() : int" num="42" count="9" type="method"/>
            <line num="43" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTime() : int" num="46" count="11" type="method"/>
            <line num="47" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFailures() : int" num="50" count="11" type="method"/>
            <line num="51" count="11" type="stmt"/>
            <line complexity="4" visibility="public" signature="addTestCase(TestCase) : void" num="54" count="40" type="method"/>
            <line num="55" count="40" type="stmt"/>
            <line falsecount="33" truecount="7" num="55" type="cond"/>
            <line num="56" count="7" type="stmt"/>
            <line num="57" count="33" type="stmt"/>
            <line falsecount="25" truecount="8" num="57" type="cond"/>
            <line num="58" count="8" type="stmt"/>
            <line num="59" count="25" type="stmt"/>
            <line falsecount="18" truecount="7" num="59" type="cond"/>
            <line num="60" count="7" type="stmt"/>
            <line num="62" count="40" type="stmt"/>
            <line num="63" count="40" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/main/java/org/sonar/plugins/python/xunit/TestSuite.java" name="TestSuite.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="5" loc="69" coveredmethods="5" methods="5" elements="16" classes="1" ncloc="29" statements="11" conditionals="0" coveredstatements="11"/>
            <class name="TestSuite">
               <metrics coveredelements="16" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="16" statements="11" conditionals="0" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="TestSuite(String)" num="39" count="11" type="method"/>
            <line num="40" count="11" type="stmt"/>
            <line num="41" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKey() : String" num="44" count="25" type="method"/>
            <line num="45" count="25" type="stmt"/>
            <line complexity="1" visibility="public" signature="addTestCase(TestCase) : void" num="48" count="33" type="method"/>
            <line num="49" count="33" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTestCases() : List&lt;TestCase&gt;" num="52" count="10" type="method"/>
            <line num="53" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDetails() : String" num="59" count="2" type="method"/>
            <line num="60" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/main/java/org/sonar/plugins/python/xunit/TestSuiteParser.java" name="TestSuiteParser.java">
            <metrics coveredelements="65" coveredconditionals="15" complexity="15" loc="116" coveredmethods="6" methods="6" elements="67" classes="1" ncloc="81" statements="45" conditionals="16" coveredstatements="44"/>
            <class name="TestSuiteParser">
               <metrics coveredelements="65" coveredconditionals="15" complexity="15" coveredmethods="6" methods="6" elements="67" statements="45" conditionals="16" coveredstatements="44"/>
            </class>
            <line complexity="3" visibility="public" signature="stream(SMHierarchicCursor) : void" num="38" count="10" type="method"/>
            <line num="40" count="10" type="stmt"/>
            <line num="41" count="10" type="stmt"/>
            <line falsecount="8" truecount="10" num="41" type="cond"/>
            <line num="42" count="10" type="stmt"/>
            <line num="43" count="10" type="stmt"/>
            <line num="44" count="10" type="stmt"/>
            <line num="45" count="10" type="stmt"/>
            <line num="47" count="10" type="stmt"/>
            <line falsecount="8" truecount="34" num="47" type="cond"/>
            <line num="48" count="34" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParsedReports() : Collection&lt;TestSuite&gt;" num="56" count="7" type="method"/>
            <line num="57" count="7" type="stmt"/>
            <line complexity="5" visibility="private" signature="parseTestCaseTag(SMInputCursor) : TestCase" num="60" count="34" type="method"/>
            <line num="61" count="34" type="stmt"/>
            <line num="62" count="34" type="stmt"/>
            <line num="63" count="32" type="stmt"/>
            <line num="64" count="32" type="stmt"/>
            <line num="65" count="32" type="stmt"/>
            <line num="67" count="32" type="stmt"/>
            <line num="68" count="32" type="stmt"/>
            <line num="70" count="32" type="stmt"/>
            <line num="71" count="32" type="stmt"/>
            <line falsecount="14" truecount="18" num="71" type="cond"/>
            <line num="72" count="18" type="stmt"/>
            <line num="73" count="18" type="stmt"/>
            <line falsecount="14" truecount="4" num="73" type="cond"/>
            <line num="74" count="4" type="stmt"/>
            <line num="75" count="14" type="stmt"/>
            <line falsecount="7" truecount="7" num="75" type="cond"/>
            <line num="76" count="7" type="stmt"/>
            <line num="77" count="7" type="stmt"/>
            <line num="78" count="7" type="stmt"/>
            <line num="79" count="7" type="stmt"/>
            <line falsecount="1" truecount="6" num="79" type="cond"/>
            <line num="80" count="6" type="stmt"/>
            <line num="81" count="6" type="stmt"/>
            <line num="82" count="6" type="stmt"/>
            <line num="85" count="32" type="stmt"/>
            <line complexity="2" visibility="private" signature="parseTime(SMInputCursor) : double" num="88" count="34" type="method"/>
            <line num="89" count="34" type="stmt"/>
            <line num="90" count="34" type="stmt"/>
            <line num="91" count="34" type="stmt"/>
            <line num="92" count="32" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="96" count="32" type="stmt"/>
            <line complexity="2" visibility="private" signature="getExpectedAttribute(SMInputCursor,String) : String" num="99" count="91" type="method"/>
            <line num="100" count="91" type="stmt"/>
            <line num="101" count="91" type="stmt"/>
            <line falsecount="90" truecount="1" num="101" type="cond"/>
            <line num="102" count="1" type="stmt"/>
            <line num="104" count="90" type="stmt"/>
            <line complexity="2" visibility="private" signature="parseTestCaseName(SMInputCursor) : String" num="107" count="34" type="method"/>
            <line num="108" count="34" type="stmt"/>
            <line num="109" count="34" type="stmt"/>
            <line num="110" count="34" type="stmt"/>
            <line falsecount="34" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="113" count="34" type="stmt"/>
         </file>
      </package>
   </project>
   <testproject name="Python 2.14-SNAPSHOT (Aggregated)" timestamp="1594318093551">
      <metrics coveredelements="1867" complexity="1439" loc="25304" methods="1312" classes="319" statements="7046" packages="34" coveredconditionals="27" coveredmethods="330" elements="8536" ncloc="16128" files="303" conditionals="178" coveredstatements="1510"/>
      <package name="org.sonar.python.it">
         <metrics coveredelements="0" complexity="2" loc="83" methods="2" classes="1" statements="11" coveredconditionals="0" coveredmethods="0" elements="13" ncloc="55" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/its/ruling/src/test/java/org/sonar/python/it/PythonRulingTest.java" name="PythonRulingTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="83" coveredmethods="0" methods="2" elements="13" classes="1" ncloc="55" statements="11" conditionals="0" coveredstatements="0"/>
            <class name="PythonRulingTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="13" statements="11" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="prepare_quality_profile() : void" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.python">
         <metrics coveredelements="76" complexity="79" loc="1072" methods="71" classes="15" statements="312" coveredconditionals="0" coveredmethods="15" elements="395" ncloc="716" files="11" conditionals="12" coveredstatements="61"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/PythonBuiltinFunctionsTest.java" name="PythonBuiltinFunctionsTest.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="3" loc="48" coveredmethods="3" methods="3" elements="9" classes="1" ncloc="23" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="PythonBuiltinFunctionsTest">
               <metrics coveredelements="9" complexity="3" methods="3" testruns="2" statements="6" coveredconditionals="0" coveredmethods="3" elements="9" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="6" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="30" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="unreadable_inputstream() : void" num="38" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="read() : int" num="41" count="1" type="method"/>
            <line num="43" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/DocstringExtractorTest.java" name="DocstringExtractorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="94" coveredmethods="0" methods="6" elements="32" classes="2" ncloc="61" statements="24" conditionals="2" coveredstatements="0"/>
            <class name="DocstringExtractorTest">
               <metrics coveredelements="0" complexity="5" methods="3" testruns="1" statements="18" coveredconditionals="0" coveredmethods="0" elements="23" testfailures="1" testduration="0.003" conditionals="2" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="DocstringExtractorTest.DocstringVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="9" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="42" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertDocstring(Tree.Kind,int,String) : void" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getDocstring(Tree.Kind,int) : StringLiteral" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFileInput(FileInput) : void" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFunctionDef(FunctionDef) : void" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitClassDef(ClassDef) : void" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/FileLinesVisitorTest.java" name="FileLinesVisitorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="63" coveredmethods="0" methods="3" elements="16" classes="1" ncloc="30" statements="13" conditionals="0" coveredstatements="0"/>
            <class name="FileLinesVisitorTest">
               <metrics coveredelements="0" complexity="3" methods="3" testruns="3" statements="13" coveredconditionals="0" coveredmethods="0" elements="16" testfailures="3" testduration="0.14500000000000002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="32" testsuccess="false" count="0" testduration="0.132" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_ignoreHeaderComments() : void" num="46" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="executable_lines() : void" num="56" testsuccess="false" count="0" testduration="0.01" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/IssueLocationTest.java" name="IssueLocationTest.java">
            <metrics coveredelements="35" coveredconditionals="0" complexity="4" loc="85" coveredmethods="4" methods="4" elements="35" classes="1" ncloc="57" statements="31" conditionals="0" coveredstatements="31"/>
            <class name="IssueLocationTest">
               <metrics coveredelements="35" complexity="4" methods="4" testruns="4" statements="31" coveredconditionals="0" coveredmethods="4" elements="35" testfailures="0" testduration="0.047" conditionals="0" coveredstatements="31" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="file_level() : void" num="39" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="line_level() : void" num="50" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="precise_issue_location() : void" num="61" testsuccess="true" count="1" testduration="0.044" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="tokens() : void" num="72" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/PythonCheckTest.java" name="PythonCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="128" coveredmethods="0" methods="8" elements="52" classes="1" ncloc="88" statements="44" conditionals="0" coveredstatements="0"/>
            <class name="PythonCheckTest">
               <metrics coveredelements="0" complexity="8" methods="8" testruns="3" statements="44" coveredconditionals="0" coveredmethods="0" elements="52" testfailures="3" testduration="0.003" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="private" signature="scanFileForIssues(PythonCheck) : List&lt;PreciseIssue&gt;" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="47" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFunctionDef(FunctionDef) : void" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_cost() : void" num="75" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFunctionDef(FunctionDef) : void" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_secondary_location() : void" num="90" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFunctionDef(FunctionDef) : void" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitReturnStatement(ReturnStatement) : void" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/PythonSubscriptionCheckTest.java" name="PythonSubscriptionCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="12" loc="159" coveredmethods="0" methods="11" elements="68" classes="2" ncloc="121" statements="55" conditionals="2" coveredstatements="0"/>
            <class name="PythonSubscriptionCheckTest">
               <metrics coveredelements="0" complexity="12" methods="11" testruns="5" statements="55" coveredconditionals="0" coveredmethods="0" elements="68" testfailures="5" testduration="0.008" conditionals="2" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="PythonSubscriptionCheckTest.TestPythonCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="scanFileForIssues(File,PythonCheck) : List&lt;PreciseIssue&gt;" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="51" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_cost() : void" num="80" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_tokens() : void" num="98" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="initialize(Context) : void" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_trivia() : void" num="117" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="120" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_file_line() : void" num="139" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="142" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/PythonTestUtils.java" name="PythonTestUtils.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="20" loc="155" coveredmethods="1" methods="15" elements="75" classes="1" ncloc="116" statements="52" conditionals="8" coveredstatements="1"/>
            <class name="PythonTestUtils">
               <metrics coveredelements="2" coveredconditionals="0" complexity="20" coveredmethods="1" methods="15" elements="75" statements="52" conditionals="8" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="private" signature="PythonTestUtils()" num="50" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="appendNewLine(String) : String" num="53" count="16" type="method"/>
            <line num="54" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="parse(String) : FileInput" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parse(SymbolTableBuilder,String) : FileInput" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parseWithoutSymbols(String) : FileInput" num="68" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getFirstChild(Tree,Predicate&lt;Tree&gt;) : T" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAllDescendant(Tree,Predicate&lt;Tree&gt;) : List&lt;T&gt;" num="88" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFirstDescendant(Tree,Predicate&lt;Tree&gt;) : T" num="99" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLastDescendant(Tree,Predicate&lt;Tree&gt;) : T" num="105" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="pythonFile(String) : PythonFile" num="111" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="lastExpression(String) : Expression" num="122" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="lastStatement(StatementList) : Statement" num="136" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="lastExpressionInFunction(String) : Expression" num="141" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="functionSymbol(PythonFile,String) : FunctionSymbol" num="146" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="functionSymbol(String) : FunctionSymbol" num="152" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/PythonVisitorCheckTest.java" name="PythonVisitorCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="155" coveredmethods="0" methods="11" elements="59" classes="3" ncloc="115" statements="48" conditionals="0" coveredstatements="0"/>
            <class name="PythonVisitorCheckTest">
               <metrics coveredelements="0" complexity="10" methods="10" testruns="5" statements="47" coveredconditionals="0" coveredmethods="0" elements="57" testfailures="5" testduration="0.009000000000000001" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="PythonVisitorCheckTest.TestPythonCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="PythonVisitorCheckTest.SymbolsRecordingCheck">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="scanFileForIssues(File,PythonCheck) : List&lt;PreciseIssue&gt;" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="56" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFunctionDef(FunctionDef) : void" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_cost() : void" num="84" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFunctionDef(FunctionDef) : void" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="working_directory() : void" num="100" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="initialize(SubscriptionCheck.Context) : void" num="104" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="working_directory_null() : void" num="117" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="initialize(SubscriptionCheck.Context) : void" num="120" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="stubFilesSymbols() : void" num="133" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="150" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/ReadWriteVisitorTest.java" name="ReadWriteVisitorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="50" coveredmethods="0" methods="1" elements="11" classes="1" ncloc="27" statements="10" conditionals="0" coveredstatements="0"/>
            <class name="ReadWriteVisitorTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="10" coveredconditionals="0" coveredmethods="0" elements="11" testfailures="1" testduration="0.001" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test_usages() : void" num="37" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/TestPythonVisitorRunnerTest.java" name="TestPythonVisitorRunnerTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="3" loc="53" coveredmethods="1" methods="3" elements="10" classes="1" ncloc="28" statements="7" conditionals="0" coveredstatements="1"/>
            <class name="TestPythonVisitorRunnerTest">
               <metrics coveredelements="2" complexity="3" methods="3" testruns="3" statements="7" coveredconditionals="0" coveredmethods="1" elements="10" testfailures="2" testduration="0.004" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="unknown_file() : void" num="35" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="file_uri() : void" num="40" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="global_symbols() : void" num="47" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/TokenLocationTest.java" name="TokenLocationTest.java">
            <metrics coveredelements="28" coveredconditionals="0" complexity="6" loc="82" coveredmethods="6" methods="6" elements="28" classes="1" ncloc="50" statements="22" conditionals="0" coveredstatements="22"/>
            <class name="TokenLocationTest">
               <metrics coveredelements="28" complexity="6" methods="6" testruns="4" statements="22" coveredconditionals="0" coveredmethods="6" elements="28" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="22" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="test_multiline() : void" num="35" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_newline_token() : void" num="47" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_one_line() : void" num="53" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_comment() : void" num="62" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertOffsets(TokenLocation,int,int,int,int) : void" num="68" count="7" type="method"/>
            <line num="69" count="7" type="stmt"/>
            <line num="70" count="7" type="stmt"/>
            <line num="71" count="7" type="stmt"/>
            <line num="72" count="7" type="stmt"/>
            <line complexity="1" visibility="private" signature="lex(String) : List&lt;Token&gt;" num="75" count="7" type="method"/>
            <line num="76" count="7" type="stmt"/>
            <line num="77" count="7" type="stmt"/>
            <line num="78" count="7" type="stmt"/>
            <line num="79" count="7" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.python.checks">
         <metrics coveredelements="110" complexity="219" loc="5004" methods="208" classes="136" statements="399" coveredconditionals="6" coveredmethods="20" elements="619" ncloc="1820" files="135" conditionals="12" coveredstatements="84"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/AfterJumpStatementCheckTest.java" name="AfterJumpStatementCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="36" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="13" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="AfterJumpStatementCheckTest">
               <metrics coveredelements="0" complexity="2" methods="2" testruns="2" statements="2" coveredconditionals="0" coveredmethods="0" elements="4" testfailures="2" testduration="0.006" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.005" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_empty_file() : void" num="32" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="34" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/AllBranchesAreIdenticalCheckTest.java" name="AllBranchesAreIdenticalCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="AllBranchesAreIdenticalCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.004" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/ArgumentNumberCheckTest.java" name="ArgumentNumberCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="39" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="16" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="ArgumentNumberCheckTest">
               <metrics coveredelements="0" complexity="2" methods="2" testruns="2" statements="2" coveredconditionals="0" coveredmethods="0" elements="4" testfailures="2" testduration="0.009000000000000001" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="false" count="0" testduration="0.007" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_multiple_files() : void" num="33" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="35" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/ArgumentTypeCheckTest.java" name="ArgumentTypeCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="31" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="ArgumentTypeCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.013" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.013" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/BackslashInStringCheckTest.java" name="BackslashInStringCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="BackslashInStringCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/BackticksUsageCheckTest.java" name="BackticksUsageCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="BackticksUsageCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.001" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/BareRaiseInFinallyCheckTest.java" name="BareRaiseInFinallyCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="BareRaiseInFinallyCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/BooleanExpressionInExceptCheckTest.java" name="BooleanExpressionInExceptCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="BooleanExpressionInExceptCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/BreakContinueOutsideLoopCheckTest.java" name="BreakContinueOutsideLoopCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="BreakContinueOutsideLoopCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/BuiltinShadowingAssignmentCheckTest.java" name="BuiltinShadowingAssignmentCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="BuiltinShadowingAssignmentCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testVariableShadowing() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/CaughtExceptionsCheckTest.java" name="CaughtExceptionsCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="31" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="CaughtExceptionsCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.003" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/ChangeMethodContractCheckTest.java" name="ChangeMethodContractCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="31" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="ChangeMethodContractCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.006" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.006" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/CheckListTest.java" name="CheckListTest.java">
            <metrics coveredelements="28" coveredconditionals="3" complexity="10" loc="109" coveredmethods="4" methods="4" elements="31" classes="1" ncloc="71" statements="23" conditionals="4" coveredstatements="21"/>
            <class name="CheckListTest">
               <metrics coveredelements="28" complexity="10" methods="4" testruns="3" statements="23" coveredconditionals="3" coveredmethods="4" elements="31" testfailures="0" testduration="0.08399999999999999" conditionals="4" coveredstatements="21" testpasses="3"/>
            </class>
            <line complexity="3" visibility="public" signature="count() : void" num="48" testsuccess="true" count="1" testduration="0.012" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="171" type="stmt"/>
            <line falsecount="14" truecount="157" num="53" type="cond"/>
            <line num="54" count="157" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="63" testsuccess="true" count="1" testduration="0.047" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="157" type="stmt"/>
            <line num="69" count="157" type="stmt"/>
            <line complexity="3" visibility="public" signature="validate_sqKey_field_in_json() : void" num="75" testsuccess="true" count="1" testduration="0.025" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line complexity="3" visibility="private" signature="extractSqKey(Path) : String" num="97" count="157" type="method"/>
            <line num="98" count="157" type="stmt"/>
            <line num="99" count="157" type="stmt"/>
            <line num="100" count="157" type="stmt"/>
            <line num="101" count="157" type="stmt"/>
            <line falsecount="157" truecount="0" num="101" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="157" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/CheckUtilsTest.java" name="CheckUtilsTest.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="13" loc="158" coveredmethods="2" methods="11" elements="70" classes="1" ncloc="121" statements="55" conditionals="4" coveredstatements="5"/>
            <class name="CheckUtilsTest">
               <metrics coveredelements="7" complexity="13" methods="11" testruns="9" statements="55" coveredconditionals="0" coveredmethods="2" elements="70" testfailures="7" testduration="0.014000000000000002" conditionals="4" coveredstatements="5" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="private_constructor() : void" num="40" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="statement_equivalence() : void" num="48" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="comparison_equivalence() : void" num="59" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="tree_equivalence() : void" num="67" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="null_equivalence() : void" num="73" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="statement_list_equivalence() : void" num="80" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="lambda_equivalence() : void" num="90" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="no_parent_class() : void" num="96" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parent_class() : void" num="106" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="parse(String) : Tree" num="137" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="descendantFunction(Tree,String) : FunctionDef" num="144" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="148" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/ChildAndParentExceptionCaughtCheckTest.java" name="ChildAndParentExceptionCaughtCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="ChildAndParentExceptionCaughtCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.003" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/ClassComplexityCheckTest.java" name="ClassComplexityCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="34" coveredmethods="0" methods="1" elements="4" classes="1" ncloc="11" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="ClassComplexityCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="3" coveredconditionals="0" coveredmethods="0" elements="4" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/ClassMethodFirstArgumentNameCheckTest.java" name="ClassMethodFirstArgumentNameCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="31" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="ClassMethodFirstArgumentNameCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/ClassNameCheckTest.java" name="ClassNameCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="ClassNameCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/CognitiveComplexityFunctionCheckTest.java" name="CognitiveComplexityFunctionCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="39" coveredmethods="0" methods="2" elements="5" classes="1" ncloc="15" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="CognitiveComplexityFunctionCheckTest">
               <metrics coveredelements="0" complexity="2" methods="2" testruns="2" statements="3" coveredconditionals="0" coveredmethods="0" elements="5" testfailures="2" testduration="0.005" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="29" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="default_threshold() : void" num="35" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="37" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/CollapsibleIfStatementsCheckTest.java" name="CollapsibleIfStatementsCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="CollapsibleIfStatementsCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.01" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.01" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/CollectionLengthComparisonCheckTest.java" name="CollectionLengthComparisonCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="CollectionLengthComparisonCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/CommentRegularExpressionCheckTest.java" name="CommentRegularExpressionCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="37" coveredmethods="0" methods="1" elements="5" classes="1" ncloc="12" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="CommentRegularExpressionCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="4" coveredconditionals="0" coveredmethods="0" elements="5" testfailures="1" testduration="0.001" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/CommentedCodeCheckTest.java" name="CommentedCodeCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="37" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="13" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="CommentedCodeCheckTest">
               <metrics coveredelements="0" complexity="2" methods="2" testruns="2" statements="2" coveredconditionals="0" coveredmethods="0" elements="4" testfailures="2" testduration="0.003" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_encoding() : void" num="32" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="34" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/ComparisonToNoneCheckTest.java" name="ComparisonToNoneCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="ComparisonToNoneCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/ConfusingWalrusCheckTest.java" name="ConfusingWalrusCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="31" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="ConfusingWalrusCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.004" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/ConstantConditionCheckTest.java" name="ConstantConditionCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="ConstantConditionCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.015" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.015" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/DbNoPasswordCheckTest.java" name="DbNoPasswordCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="37" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="13" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="DbNoPasswordCheckTest">
               <metrics coveredelements="0" complexity="2" methods="2" testruns="2" statements="2" coveredconditionals="0" coveredmethods="0" elements="4" testfailures="2" testduration="0.007" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_django() : void" num="32" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="34" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/DeadStoreCheckTest.java" name="DeadStoreCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="31" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="DeadStoreCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.01" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.01" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/DictionaryDuplicateKeyCheckTest.java" name="DictionaryDuplicateKeyCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="31" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="DictionaryDuplicateKeyCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.006" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.006" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/DuplicateArgumentCheckTest.java" name="DuplicateArgumentCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="31" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="DuplicateArgumentCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.006" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.006" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/DuplicatedMethodFieldNamesCheckTest.java" name="DuplicatedMethodFieldNamesCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="DuplicatedMethodFieldNamesCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.003" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/DuplicatedMethodImplementationCheckTest.java" name="DuplicatedMethodImplementationCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="DuplicatedMethodImplementationCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.003" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/ElseAfterLoopsWithoutBreakCheckTest.java" name="ElseAfterLoopsWithoutBreakCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="35" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="ElseAfterLoopsWithoutBreakCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.003" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/EmptyFunctionCheckTest.java" name="EmptyFunctionCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="EmptyFunctionCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/EmptyNestedBlockCheckTest.java" name="EmptyNestedBlockCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="EmptyNestedBlockCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.004" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/ExceptRethrowingCheckTest.java" name="ExceptRethrowingCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="ExceptRethrowingCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.003" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/ExceptionCauseTypeCheckTest.java" name="ExceptionCauseTypeCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="ExceptionCauseTypeCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/ExceptionNotThrownCheckTest.java" name="ExceptionNotThrownCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="35" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="ExceptionNotThrownCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.004" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/ExceptionSuperClassDeclarationCheckTest.java" name="ExceptionSuperClassDeclarationCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="ExceptionSuperClassDeclarationCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.001" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/ExecStatementUsageCheckTest.java" name="ExecStatementUsageCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="ExecStatementUsageCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.001" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/ExitHasBadArgumentsCheckTest.java" name="ExitHasBadArgumentsCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="ExitHasBadArgumentsCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/ExpressionsTest.java" name="ExpressionsTest.java">
            <metrics coveredelements="62" coveredconditionals="3" complexity="22" loc="246" coveredmethods="13" methods="20" elements="131" classes="2" ncloc="191" statements="107" conditionals="4" coveredstatements="46"/>
            <class name="ExpressionsTest">
               <metrics coveredelements="62" complexity="21" methods="19" testruns="13" statements="106" coveredconditionals="3" coveredmethods="13" elements="129" testfailures="5" testduration="0.025" conditionals="4" coveredstatements="46" testpasses="8"/>
            </class>
            <class name="ExpressionsTest.NameVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="falsy() : void" num="47" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove_parentheses() : void" num="82" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unescape_string_literal() : void" num="91" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unescape_string_element_using_different_prefix() : void" num="99" testsuccess="false" count="0" testduration="0.008" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unescape_string_element_containing_ignored_line_beak() : void" num="115" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="118" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="unescape_string_element_backslash_and_quotes() : void" num="126" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="unescape_string_element_named_escape_sequences() : void" num="134" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="unescape_string_element_python_string_with_x_u_U_escape_sequences() : void" num="145" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="147" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="unescape_string_element_python_bytes_with_x_u_U_escape_sequences() : void" num="151" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="153" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="unescape_string_element_various_octal_length() : void" num="156" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="unescape_string_element_unsupported() : void" num="169" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="171" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="unescape_string_element_invalid_escape_sequences() : void" num="174" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="stringElement(String) : StringElement" num="189" count="42" type="method"/>
            <line num="190" count="42" type="stmt"/>
            <line complexity="1" visibility="private" signature="stringLiteral(String) : StringLiteral" num="193" count="46" type="method"/>
            <line num="194" count="46" type="stmt"/>
            <line complexity="1" visibility="private" signature="exp(String) : Expression" num="197" count="48" type="method"/>
            <line num="198" count="48" type="stmt"/>
            <line complexity="3" visibility="private" signature="exp(Tree) : Expression" num="201" count="176" type="method"/>
            <line num="202" count="176" type="stmt"/>
            <line falsecount="132" truecount="44" num="202" type="cond"/>
            <line num="203" count="44" type="stmt"/>
            <line num="205" count="132" type="stmt"/>
            <line num="206" count="132" type="stmt"/>
            <line num="207" count="132" type="stmt"/>
            <line falsecount="0" truecount="132" num="207" type="cond"/>
            <line num="208" count="132" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="parse(String) : FileInput" num="214" count="49" type="method"/>
            <line num="215" count="49" type="stmt"/>
            <line complexity="1" visibility="public" signature="singleAssignedValue() : void" num="218" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="lastNameValue(String) : Expression" num="228" count="0" type="method"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitName(Name) : void" num="240" count="0" type="method"/>
            <line num="242" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/FieldDuplicatesClassNameCheckTest.java" name="FieldDuplicatesClassNameCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="FieldDuplicatesClassNameCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/FieldNameCheckTest.java" name="FieldNameCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="34" coveredmethods="0" methods="1" elements="4" classes="1" ncloc="11" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="FieldNameCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="3" coveredconditionals="0" coveredmethods="0" elements="4" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/FileComplexityCheckTest.java" name="FileComplexityCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="40" coveredmethods="0" methods="2" elements="6" classes="1" ncloc="15" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="FileComplexityCheckTest">
               <metrics coveredelements="0" complexity="2" methods="2" testruns="2" statements="4" coveredconditionals="0" coveredmethods="0" elements="6" testfailures="2" testduration="0.004" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="defaults() : void" num="35" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="37" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/FixmeCommentCheckTest.java" name="FixmeCommentCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="FixmeCommentCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/FunctionComplexityCheckTest.java" name="FunctionComplexityCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="40" coveredmethods="0" methods="2" elements="7" classes="1" ncloc="16" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="FunctionComplexityCheckTest">
               <metrics coveredelements="0" complexity="2" methods="2" testruns="2" statements="5" coveredconditionals="0" coveredmethods="0" elements="7" testfailures="2" testduration="0.004" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_with_default_threshold() : void" num="34" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/FunctionNameCheckTest.java" name="FunctionNameCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="FunctionNameCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/FunctionUsingLoopVariableCheckTest.java" name="FunctionUsingLoopVariableCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="31" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="FunctionUsingLoopVariableCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.009" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.009" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/GenericExceptionRaisedCheckTest.java" name="GenericExceptionRaisedCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="GenericExceptionRaisedCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/HardcodedIPCheckTest.java" name="HardcodedIPCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="31" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="HardcodedIPCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.005" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.005" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/IdenticalExpressionOnBinaryOperatorCheckTest.java" name="IdenticalExpressionOnBinaryOperatorCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="IdenticalExpressionOnBinaryOperatorCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.004" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/IdentityComparisonWithCachedTypesCheckTest.java" name="IdentityComparisonWithCachedTypesCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="35" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="IdentityComparisonWithCachedTypesCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.006" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="false" count="0" testduration="0.006" type="method"/>
            <line num="30" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/IdentityComparisonWithNewObjectCheckTest.java" name="IdentityComparisonWithNewObjectCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="33" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="IdentityComparisonWithNewObjectCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.005" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.005" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/IgnoredParameterCheckTest.java" name="IgnoredParameterCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="31" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="IgnoredParameterCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/IgnoredPureOperationsCheckTest.java" name="IgnoredPureOperationsCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="IgnoredPureOperationsCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.003" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/IgnoredSystemExitCheckTest.java" name="IgnoredSystemExitCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="IgnoredSystemExitCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.003" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/ImplicitStringConcatenationCheckTest.java" name="ImplicitStringConcatenationCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="31" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="ImplicitStringConcatenationCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.006" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.006" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/IncompatibleOperandsCheckTest.java" name="IncompatibleOperandsCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="37" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="13" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="IncompatibleOperandsCheckTest">
               <metrics coveredelements="0" complexity="2" methods="2" testruns="2" statements="2" coveredconditionals="0" coveredmethods="0" elements="4" testfailures="2" testduration="0.007" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test_comparison() : void" num="27" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_arithmetic() : void" num="32" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="34" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/IncorrectExceptionTypeCheckTest.java" name="IncorrectExceptionTypeCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="47" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="23" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="IncorrectExceptionTypeCheckTest">
               <metrics coveredelements="0" complexity="3" methods="3" testruns="3" statements="3" coveredconditionals="0" coveredmethods="0" elements="6" testfailures="3" testduration="0.006" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_wildcard_import() : void" num="33" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_regular_import() : void" num="40" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="42" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/InequalityUsageCheckTest.java" name="InequalityUsageCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="InequalityUsageCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.001" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/InfiniteRecursionCheckTest.java" name="InfiniteRecursionCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="34" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="InfiniteRecursionCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.012" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="29" testsuccess="false" count="0" testduration="0.012" type="method"/>
            <line num="31" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/InitReturnsValueCheckTest.java" name="InitReturnsValueCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="InitReturnsValueCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/InstanceAndClassMethodsAtLeastOnePositionalCheckTest.java" name="InstanceAndClassMethodsAtLeastOnePositionalCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="34" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="InstanceAndClassMethodsAtLeastOnePositionalCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/InstanceMethodSelfAsFirstCheckTest.java" name="InstanceMethodSelfAsFirstCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="39" coveredmethods="0" methods="2" elements="6" classes="1" ncloc="15" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="InstanceMethodSelfAsFirstCheckTest">
               <metrics coveredelements="0" complexity="2" methods="2" testruns="2" statements="4" coveredconditionals="0" coveredmethods="0" elements="6" testfailures="2" testduration="0.005" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIgnoredDecorators() : void" num="32" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/InvalidOpenModeCheckTest.java" name="InvalidOpenModeCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="InvalidOpenModeCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.004" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/InvariantReturnCheckTest.java" name="InvariantReturnCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="35" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="InvariantReturnCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.01" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="30" testsuccess="false" count="0" testduration="0.01" type="method"/>
            <line num="32" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/ItemOperationsTypeCheckTest.java" name="ItemOperationsTypeCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="42" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="17" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="ItemOperationsTypeCheckTest">
               <metrics coveredelements="0" complexity="3" methods="3" testruns="3" statements="3" coveredconditionals="0" coveredmethods="0" elements="6" testfailures="3" testduration="0.038" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test_delitem() : void" num="27" testsuccess="false" count="0" testduration="0.02" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_getitem() : void" num="32" testsuccess="false" count="0" testduration="0.011" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_setitem() : void" num="37" testsuccess="false" count="0" testduration="0.007" type="method"/>
            <line num="39" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/IterationOnNonIterableCheckTest.java" name="IterationOnNonIterableCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="IterationOnNonIterableCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.007" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.007" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/JumpInFinallyCheckTest.java" name="JumpInFinallyCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="JumpInFinallyCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.003" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/LdapAuthenticationCheckTest.java" name="LdapAuthenticationCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="31" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="LdapAuthenticationCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.003" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/LineLengthCheckTest.java" name="LineLengthCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="34" coveredmethods="0" methods="1" elements="4" classes="1" ncloc="11" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="LineLengthCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="3" coveredconditionals="0" coveredmethods="0" elements="4" testfailures="1" testduration="0.001" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/LocalVariableAndParameterNameConventionCheckTest.java" name="LocalVariableAndParameterNameConventionCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="35" coveredmethods="0" methods="1" elements="4" classes="1" ncloc="11" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="LocalVariableAndParameterNameConventionCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="3" coveredconditionals="0" coveredmethods="0" elements="4" testfailures="1" testduration="0.003" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/LongIntegerWithLowercaseSuffixUsageCheckTest.java" name="LongIntegerWithLowercaseSuffixUsageCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="LongIntegerWithLowercaseSuffixUsageCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.003" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/LoopExecutingAtMostOnceCheckTest.java" name="LoopExecutingAtMostOnceCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="LoopExecutingAtMostOnceCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.003" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/MethodNameCheckTest.java" name="MethodNameCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="MethodNameCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/MethodShouldBeStaticCheckTest.java" name="MethodShouldBeStaticCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="31" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="MethodShouldBeStaticCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.006" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.006" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/MissingDocstringCheckTest.java" name="MissingDocstringCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="42" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="17" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="MissingDocstringCheckTest">
               <metrics coveredelements="0" complexity="3" methods="3" testruns="3" statements="3" coveredconditionals="0" coveredmethods="0" elements="6" testfailures="3" testduration="0.004" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMissingDocStringAtModuleLevel() : void" num="32" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyModule() : void" num="37" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="39" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/MissingNewlineAtEndOfFileCheckTest.java" name="MissingNewlineAtEndOfFileCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="47" coveredmethods="0" methods="4" elements="8" classes="1" ncloc="21" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="MissingNewlineAtEndOfFileCheckTest">
               <metrics coveredelements="0" complexity="4" methods="4" testruns="4" statements="4" coveredconditionals="0" coveredmethods="0" elements="8" testfailures="4" testduration="0.005" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="missing_new_line() : void" num="27" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="missing_new_line_comment() : void" num="32" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="file_with_new_line() : void" num="37" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="empty_file() : void" num="42" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="44" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/ModifiedParameterValueCheckTest.java" name="ModifiedParameterValueCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="ModifiedParameterValueCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.006" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.006" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/ModuleNameCheckTest.java" name="ModuleNameCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="44" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="18" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="ModuleNameCheckTest">
               <metrics coveredelements="0" complexity="3" methods="3" testruns="3" statements="3" coveredconditionals="0" coveredmethods="0" elements="6" testfailures="3" testduration="0.003" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="bad_name() : void" num="29" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="good_name_camel_case() : void" num="34" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="good_name_snake_case() : void" num="39" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="41" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/NeedlessPassCheckTest.java" name="NeedlessPassCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="31" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="NeedlessPassCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.005" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.005" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/NestedConditionalExpressionCheckTest.java" name="NestedConditionalExpressionCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="NestedConditionalExpressionCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.003" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/NestedControlFlowDepthCheckTest.java" name="NestedControlFlowDepthCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="NestedControlFlowDepthCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.003" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/NewStyleClassCheckTest.java" name="NewStyleClassCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="NewStyleClassCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/NoPersonReferenceInTodoCheckTest.java" name="NoPersonReferenceInTodoCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="NoPersonReferenceInTodoCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/NoReRaiseInExitCheckTest.java" name="NoReRaiseInExitCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="31" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="NoReRaiseInExitCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/NonCallableCalledCheckTest.java" name="NonCallableCalledCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="NonCallableCalledCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.004" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/NonStringInAllPropertyCheckTest.java" name="NonStringInAllPropertyCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="31" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="NonStringInAllPropertyCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.003" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/NotImplementedErrorInOperatorMethodsCheckTest.java" name="NotImplementedErrorInOperatorMethodsCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="30" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="NotImplementedErrorInOperatorMethodsCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.003" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="26" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="28" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/OneStatementPerLineCheckTest.java" name="OneStatementPerLineCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="OneStatementPerLineCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.003" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/OverwrittenCollectionEntryCheckTest.java" name="OverwrittenCollectionEntryCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="OverwrittenCollectionEntryCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.005" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.005" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/ParsingErrorCheckTest.java" name="ParsingErrorCheckTest.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="2" loc="57" coveredmethods="1" methods="1" elements="14" classes="1" ncloc="31" statements="13" conditionals="0" coveredstatements="12"/>
            <class name="ParsingErrorCheckTest">
               <metrics coveredelements="13" complexity="2" methods="1" testruns="1" statements="13" coveredconditionals="0" coveredmethods="1" elements="14" testfailures="0" testduration="0.052" conditionals="0" coveredstatements="12" testpasses="1"/>
            </class>
            <line complexity="2" visibility="public" signature="test() : void" num="36" testsuccess="true" count="1" testduration="0.052" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/PreIncrementDecrementCheckTest.java" name="PreIncrementDecrementCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="PreIncrementDecrementCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/PredictableSaltCheckTest.java" name="PredictableSaltCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="PredictableSaltCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.004" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/PrintStatementUsageCheckTest.java" name="PrintStatementUsageCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="PrintStatementUsageCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/PropertyAccessorParameterCountCheckTest.java" name="PropertyAccessorParameterCountCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="PropertyAccessorParameterCountCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.003" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/RaiseOutsideExceptCheckTest.java" name="RaiseOutsideExceptCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="RaiseOutsideExceptCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.001" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/RedundantJumpCheckTest.java" name="RedundantJumpCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="RedundantJumpCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.01" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.01" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/ReturnAndYieldInOneFunctionCheckTest.java" name="ReturnAndYieldInOneFunctionCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="ReturnAndYieldInOneFunctionCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.005" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.005" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/ReturnYieldOutsideFunctionCheckTest.java" name="ReturnYieldOutsideFunctionCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="ReturnYieldOutsideFunctionCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.003" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/RobustCipherAlgorithmCheckTest.java" name="RobustCipherAlgorithmCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="RobustCipherAlgorithmCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.005" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="26" testsuccess="false" count="0" testduration="0.005" type="method"/>
            <line num="28" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/SameBranchCheckTest.java" name="SameBranchCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="SameBranchCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.006" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.006" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/SameConditionCheckTest.java" name="SameConditionCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="SameConditionCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.003" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/SecureModeEncryptionAlgorithmsCheckTest.java" name="SecureModeEncryptionAlgorithmsCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="31" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="SecureModeEncryptionAlgorithmsCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.006" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.006" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/SelfAssignmentCheckTest.java" name="SelfAssignmentCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="SelfAssignmentCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.003" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/SetDuplicateKeyCheckTest.java" name="SetDuplicateKeyCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="31" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="SetDuplicateKeyCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.188" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.188" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/SillyEqualityCheckTest.java" name="SillyEqualityCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="SillyEqualityCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.003" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/SillyIdentityCheckTest.java" name="SillyIdentityCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="SillyIdentityCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/SpecialMethodParamListCheckTest.java" name="SpecialMethodParamListCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="SpecialMethodParamListCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.006" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.006" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/StringFormatCorrectnessCheckTest.java" name="StringFormatCorrectnessCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="31" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="StringFormatCorrectnessCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.009" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.009" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/StringFormatMisuseCheckTest.java" name="StringFormatMisuseCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="36" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="13" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="StringFormatMisuseCheckTest">
               <metrics coveredelements="0" complexity="2" methods="2" testruns="2" statements="2" coveredconditionals="0" coveredmethods="0" elements="4" testfailures="2" testduration="0.008" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test_printf_style() : void" num="27" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_str_format_style() : void" num="32" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="34" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/StringLiteralDuplicationCheckTest.java" name="StringLiteralDuplicationCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="StringLiteralDuplicationCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.006" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.006" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/TempFileCreationCheckTest.java" name="TempFileCreationCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="TempFileCreationCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/TooManyLinesInFileCheckTest.java" name="TooManyLinesInFileCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="47" coveredmethods="0" methods="3" elements="9" classes="1" ncloc="21" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="TooManyLinesInFileCheckTest">
               <metrics coveredelements="0" complexity="3" methods="3" testruns="3" statements="6" coveredconditionals="0" coveredmethods="0" elements="9" testfailures="3" testduration="0.030000000000000002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test_negative() : void" num="29" testsuccess="false" count="0" testduration="0.005" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_positive() : void" num="35" testsuccess="false" count="0" testduration="0.021" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_empty_file() : void" num="41" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/TooManyParametersCheckTest.java" name="TooManyParametersCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="TooManyParametersCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.001" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/TooManyReturnsCheckTest.java" name="TooManyReturnsCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="33" coveredmethods="0" methods="1" elements="4" classes="1" ncloc="11" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="TooManyReturnsCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="3" coveredconditionals="0" coveredmethods="0" elements="4" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/TrailingCommentCheckTest.java" name="TrailingCommentCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="TrailingCommentCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.003" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/TrailingWhitespaceCheckTest.java" name="TrailingWhitespaceCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="TrailingWhitespaceCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/UndeclaredNameUsageCheckTest.java" name="UndeclaredNameUsageCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="57" coveredmethods="0" methods="5" elements="10" classes="1" ncloc="30" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="UndeclaredNameUsageCheckTest">
               <metrics coveredelements="0" complexity="5" methods="5" testruns="5" statements="5" coveredconditionals="0" coveredmethods="0" elements="10" testfailures="5" testduration="0.032" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="false" count="0" testduration="0.015" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_wildcard_import() : void" num="33" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_wildcard_import_all_property() : void" num="40" testsuccess="false" count="0" testduration="0.007" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_unresolved_wildcard_import() : void" num="47" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_dynamic_globals() : void" num="52" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="54" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/UndefinedNameAllPropertyCheckTest.java" name="UndefinedNameAllPropertyCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="57" coveredmethods="0" methods="6" elements="12" classes="1" ncloc="29" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="UndefinedNameAllPropertyCheckTest">
               <metrics coveredelements="0" complexity="6" methods="6" testruns="6" statements="6" coveredconditionals="0" coveredmethods="0" elements="12" testfailures="6" testduration="0.008" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_wildcard_import() : void" num="32" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_init_exports_module() : void" num="37" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_uses_getattr() : void" num="42" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_manipulates_globals() : void" num="47" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_manipulates_sys_modules() : void" num="52" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="54" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/UnreachableExceptCheckTest.java" name="UnreachableExceptCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="UnreachableExceptCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.004" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/UnreadPrivateAttributesCheckTest.java" name="UnreadPrivateAttributesCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="39" coveredmethods="0" methods="2" elements="6" classes="1" ncloc="15" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="UnreadPrivateAttributesCheckTest">
               <metrics coveredelements="0" complexity="2" methods="2" testruns="2" statements="4" coveredconditionals="0" coveredmethods="0" elements="6" testfailures="2" testduration="0.004" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_single_underscore() : void" num="32" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/UnreadPrivateInnerClassesCheckTest.java" name="UnreadPrivateInnerClassesCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="UnreadPrivateInnerClassesCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/UnreadPrivateMethodsCheckTest.java" name="UnreadPrivateMethodsCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="UnreadPrivateMethodsCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.001" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/UnusedLocalVariableCheckTest.java" name="UnusedLocalVariableCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="31" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="UnusedLocalVariableCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.003" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/UnusedNestedDefinitionCheckTest.java" name="UnusedNestedDefinitionCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="31" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="UnusedNestedDefinitionCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/UselessParenthesisAfterKeywordCheckTest.java" name="UselessParenthesisAfterKeywordCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="UselessParenthesisAfterKeywordCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.005" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.005" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/UselessParenthesisCheckTest.java" name="UselessParenthesisCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="UselessParenthesisCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.006" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.006" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/UselessStatementCheckTest.java" name="UselessStatementCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="39" coveredmethods="0" methods="2" elements="7" classes="1" ncloc="16" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="UselessStatementCheckTest">
               <metrics coveredelements="0" complexity="2" methods="2" testruns="2" statements="5" coveredconditionals="0" coveredmethods="0" elements="7" testfailures="2" testduration="0.006" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="custom() : void" num="32" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/VerifiedSslTlsCertificateCheckTest.java" name="VerifiedSslTlsCertificateCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="VerifiedSslTlsCertificateCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.012" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="26" testsuccess="false" count="0" testduration="0.012" type="method"/>
            <line num="28" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/WeakSSLProtocolCheckTest.java" name="WeakSSLProtocolCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="WeakSSLProtocolCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/WildcardImportCheckTest.java" name="WildcardImportCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="67" coveredmethods="0" methods="8" elements="16" classes="1" ncloc="37" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="WildcardImportCheckTest">
               <metrics coveredelements="0" complexity="8" methods="8" testruns="8" statements="8" coveredconditionals="0" coveredmethods="0" elements="16" testfailures="8" testduration="0.034" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.008" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_assignment() : void" num="32" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_invalid_assignment() : void" num="37" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_call() : void" num="42" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_invalid_call() : void" num="47" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_init_py() : void" num="52" testsuccess="false" count="0" testduration="0.006" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_allowed() : void" num="57" testsuccess="false" count="0" testduration="0.006" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_empty() : void" num="62" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="64" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/WrongAssignmentOperatorCheckTest.java" name="WrongAssignmentOperatorCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="31" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="WrongAssignmentOperatorCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.001" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/XMLParserXXEVulnerableCheckTest.java" name="XMLParserXXEVulnerableCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="31" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="XMLParserXXEVulnerableCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.005" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.005" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.python.checks.hotspots">
         <metrics coveredelements="0" complexity="39" loc="861" methods="39" classes="25" statements="48" coveredconditionals="0" coveredmethods="0" elements="87" ncloc="292" files="25" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/hotspots/ClearTextProtocolsCheckTest.java" name="ClearTextProtocolsCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="33" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="ClearTextProtocolsCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.008" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="false" count="0" testduration="0.008" type="method"/>
            <line num="30" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/hotspots/CommandLineArgsCheckTest.java" name="CommandLineArgsCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="CommandLineArgsCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/hotspots/CorsCheckTest.java" name="CorsCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="38" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="14" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="CorsCheckTest">
               <metrics coveredelements="0" complexity="2" methods="2" testruns="2" statements="2" coveredconditionals="0" coveredmethods="0" elements="4" testfailures="2" testduration="0.007" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="false" count="0" testduration="0.006" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_django_settings() : void" num="33" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="35" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/hotspots/CsrfDisabledCheckTest.java" name="CsrfDisabledCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="74" coveredmethods="0" methods="10" elements="22" classes="1" ncloc="42" statements="12" conditionals="0" coveredstatements="0"/>
            <class name="CsrfDisabledCheckTest">
               <metrics coveredelements="0" complexity="10" methods="10" testruns="9" statements="12" coveredconditionals="0" coveredmethods="0" elements="22" testfailures="9" testduration="0.013999999999999999" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="private" signature="testFile(String) : void" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMiddlewareArray() : void" num="32" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCsrfExempt() : void" num="37" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWtfCsrfEnabledFalse() : void" num="42" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testThreeWaysToDeactivateCsrfInFlaskForm() : void" num="47" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGloballyMissingCSRFProtect() : void" num="52" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExemptDecorators() : void" num="57" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExemptAsFunction() : void" num="63" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fixupTestsMoreRobustCSRFProtect() : void" num="68" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fixupCsrfInGlobalScope() : void" num="71" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="72" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/hotspots/DataEncryptionCheckTest.java" name="DataEncryptionCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="31" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="DataEncryptionCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.003" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/hotspots/DebugModeCheckTest.java" name="DebugModeCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="41" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="17" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="DebugModeCheckTest">
               <metrics coveredelements="0" complexity="3" methods="3" testruns="3" statements="3" coveredconditionals="0" coveredmethods="0" elements="6" testfailures="3" testduration="0.004" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_globalSettings_file() : void" num="32" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_settings_file() : void" num="37" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="39" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/hotspots/DisabledHtmlAutoEscapeCheckTest.java" name="DisabledHtmlAutoEscapeCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="34" coveredmethods="0" methods="1" elements="4" classes="1" ncloc="11" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="DisabledHtmlAutoEscapeCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="3" coveredconditionals="0" coveredmethods="0" elements="4" testfailures="1" testduration="0.004" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/hotspots/DisabledHtmlAutoEscapeLegacyCheckTest.java" name="DisabledHtmlAutoEscapeLegacyCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="33" coveredmethods="0" methods="1" elements="4" classes="1" ncloc="11" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="DisabledHtmlAutoEscapeLegacyCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="3" coveredconditionals="0" coveredmethods="0" elements="4" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/hotspots/DynamicCodeExecutionCheckTest.java" name="DynamicCodeExecutionCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="DynamicCodeExecutionCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/hotspots/EmailSendingCheckTest.java" name="EmailSendingCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="31" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="EmailSendingCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.003" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/hotspots/ExpandingArchiveCheckTest.java" name="ExpandingArchiveCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="33" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="ExpandingArchiveCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="30" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/hotspots/HardCodedCredentialsCheckTest.java" name="HardCodedCredentialsCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="39" coveredmethods="0" methods="2" elements="6" classes="1" ncloc="15" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="HardCodedCredentialsCheckTest">
               <metrics coveredelements="0" complexity="2" methods="2" testruns="2" statements="4" coveredconditionals="0" coveredmethods="0" elements="6" testfailures="2" testduration="0.012" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.01" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="custom() : void" num="32" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/hotspots/HashingDataCheckTest.java" name="HashingDataCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="37" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="13" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="HashingDataCheckTest">
               <metrics coveredelements="0" complexity="2" methods="2" testruns="2" statements="2" coveredconditionals="0" coveredmethods="0" elements="4" testfailures="2" testduration="0.006" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_globalSettings() : void" num="32" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="34" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/hotspots/HttpOnlyCookieCheckTest.java" name="HttpOnlyCookieCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="31" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="HttpOnlyCookieCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.004" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/hotspots/LoggersConfigurationCheckTest.java" name="LoggersConfigurationCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="30" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="LoggersConfigurationCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="26" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="28" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/hotspots/OsExecCheckTest.java" name="OsExecCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="30" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="OsExecCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.004" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="26" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="28" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/hotspots/ProcessSignallingCheckTest.java" name="ProcessSignallingCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="ProcessSignallingCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.003" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/hotspots/PseudoRandomCheckTest.java" name="PseudoRandomCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="PseudoRandomCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/hotspots/PubliclyWritableDirectoriesCheckTest.java" name="PubliclyWritableDirectoriesCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="30" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="PubliclyWritableDirectoriesCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.006" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="26" testsuccess="false" count="0" testduration="0.006" type="method"/>
            <line num="28" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/hotspots/RegexCheckTest.java" name="RegexCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="32" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="RegexCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.004" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/hotspots/SQLQueriesCheckTest.java" name="SQLQueriesCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="31" coveredmethods="0" methods="1" elements="3" classes="1" ncloc="10" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="SQLQueriesCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="2" coveredconditionals="0" coveredmethods="0" elements="3" testfailures="1" testduration="0.006" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="26" testsuccess="false" count="0" testduration="0.006" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/hotspots/SecureCookieCheckTest.java" name="SecureCookieCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="31" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="SecureCookieCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.004" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/hotspots/StandardInputCheckTest.java" name="StandardInputCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="30" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="StandardInputCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.003" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="26" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="28" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/hotspots/StrongCryptographicKeysCheckTest.java" name="StrongCryptographicKeysCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="31" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="StrongCryptographicKeysCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.003" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks/src/test/java/org/sonar/python/checks/hotspots/UnverifiedHostnameCheckTest.java" name="UnverifiedHostnameCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="33" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="UnverifiedHostnameCheckTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.004" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="30" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.python.checks.utils">
         <metrics coveredelements="5" complexity="20" loc="195" methods="14" classes="4" statements="36" coveredconditionals="0" coveredmethods="2" elements="54" ncloc="135" files="2" conditionals="4" coveredstatements="3"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks-testkit/src/test/java/org/sonar/python/checks/utils/PythonCheckVerifierAdditionalTest.java" name="PythonCheckVerifierAdditionalTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="70" coveredmethods="0" methods="6" elements="18" classes="1" ncloc="44" statements="12" conditionals="0" coveredstatements="0"/>
            <class name="PythonCheckVerifierAdditionalTest">
               <metrics coveredelements="0" complexity="7" methods="6" testruns="3" statements="12" coveredconditionals="0" coveredmethods="0" elements="18" testfailures="3" testduration="0.009000000000000001" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="file_level_issue() : void" num="32" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="line_level_issue() : void" num="42" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="no_issue() : void" num="52" testsuccess="false" count="0" testduration="0.005" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-checks-testkit/src/test/java/org/sonar/python/checks/utils/PythonCheckVerifierTest.java" name="PythonCheckVerifierTest.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="13" loc="125" coveredmethods="2" methods="8" elements="36" classes="3" ncloc="91" statements="24" conditionals="4" coveredstatements="3"/>
            <class name="PythonCheckVerifierTest">
               <metrics coveredelements="5" complexity="11" methods="6" testruns="20" statements="19" coveredconditionals="0" coveredmethods="2" elements="29" testfailures="20" testduration="0.15000000000000002" conditionals="4" coveredstatements="3" testpasses="0"/>
            </class>
            <class name="PythonCheckVerifierTest.FuncdefVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="PythonCheckVerifierTest.FunctiondefSubscription">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="4" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="visitFunctionDef(FunctionDef) : void" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="initialize(Context) : void" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="data() : Object[][]" num="63" count="1" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="PythonCheckVerifierTest(String,boolean)" num="79" count="20" type="method"/>
            <line num="80" count="20" type="stmt"/>
            <line num="81" count="20" type="stmt"/>
            <line complexity="2" visibility="public" signature="basetree_test() : void" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="subscription_test() : void" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="assertNoFailureOfVerifier(String,PythonCheck) : void" num="102" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="assertFailOfVerifier(String,PythonCheck) : void" num="116" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.plugins.python.api.cfg">
         <metrics coveredelements="0" complexity="149" loc="1308" methods="108" classes="5" statements="326" coveredconditionals="0" coveredmethods="0" elements="512" ncloc="1087" files="3" conditionals="78" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/plugins/python/api/cfg/CfgValidator.java" name="CfgValidator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="28" loc="231" coveredmethods="0" methods="17" elements="114" classes="1" ncloc="178" statements="77" conditionals="20" coveredstatements="0"/>
            <class name="CfgValidator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="28" coveredmethods="0" methods="17" elements="114" statements="77" conditionals="20" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 40()" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="CfgValidator(ExpectedCfgStructure)" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="assertCfgStructure(ControlFlowGraph) : void" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="3" visibility="package" signature="assertCfg(ControlFlowGraph) : void" num="56" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="assertPredecessors(CfgBlock,String) : void" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="assertElements(CfgBlock,String) : void" num="93" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertEmptyBlock(CfgBlock) : void" num="105" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="assertSuccessors(CfgBlock) : void" num="119" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="assertSyntacticSuccessor(CfgBlock) : void" num="134" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="138" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertLiveVariables(ControlFlowGraph,LiveVariablesAnalysis) : void" num="153" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertDefinedVariables(ControlFlowGraph,DefinedVariablesAnalysis) : void" num="158" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="assertDefinedVars(ControlFlowGraph,DefinedVariablesAnalysis) : void" num="163" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="169" type="cond"/>
            <line num="170" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="definedVariables(Map&lt;Symbol, DefinedVariablesAnalysis.VariableDefinition&gt;) : Set&lt;Symbol&gt;" num="180" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="assertLva(ControlFlowGraph,LiveVariablesAnalysis) : void" num="187" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="189" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="197" type="cond"/>
            <line num="198" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isParameterBlock(CfgBlock) : boolean" num="210" count="0" type="method"/>
            <line num="211" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertVariablesAreEqual(String,Set&lt;Symbol&gt;,Set&lt;String&gt;,String) : void" num="214" count="0" type="method"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="buildDebugMessage(String,String) : String" num="227" count="0" type="method"/>
            <line num="228" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/plugins/python/api/cfg/ControlFlowGraphTest.java" name="ControlFlowGraphTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="49" loc="699" coveredmethods="0" methods="49" elements="168" classes="1" ncloc="613" statements="119" conditionals="0" coveredstatements="0"/>
            <class name="ControlFlowGraphTest">
               <metrics coveredelements="0" complexity="49" methods="49" testruns="45" statements="119" coveredconditionals="0" coveredmethods="0" elements="168" testfailures="45" testduration="0.12700000000000006" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="empty_file() : void" num="44" testsuccess="false" count="0" testduration="0.008" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="pass_statement() : void" num="56" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="single_element() : void" num="67" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="element_order() : void" num="73" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="return_statement() : void" num="79" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="if_statement() : void" num="91" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="if_statement_with_return() : void" num="107" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="if_else_statement() : void" num="125" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="if_else_statement_with_return() : void" num="145" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="if_elif_statement() : void" num="167" testsuccess="false" count="0" testduration="0.005" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="if_elif_else_statement() : void" num="197" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="while_statement() : void" num="210" testsuccess="false" count="0" testduration="0.005" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="continue_statement() : void" num="221" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="223" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="continue_outside_loop() : void" num="232" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="234" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="return_outside_function() : void" num="237" testsuccess="false" count="0" testduration="0.005" type="method"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="continue_nested_while() : void" num="246" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="248" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="break_statement() : void" num="257" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="259" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="for_statement() : void" num="270" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="272" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="for_statement_else() : void" num="279" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="281" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="for_statement_else_break() : void" num="290" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="292" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="continue_statement_in_for() : void" num="303" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="305" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="continue_nested_for() : void" num="314" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="316" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="simple_try_except() : void" num="327" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="329" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="simple_try_except_finally() : void" num="339" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="341" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="simple_try_except_finally_else() : void" num="353" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="355" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="simple_try_except_value_error() : void" num="370" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="372" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="simple_try_except_all_exceptions() : void" num="387" testsuccess="false" count="0" testduration="0.005" type="method"/>
            <line num="389" count="0" type="stmt"/>
            <line num="395" count="0" type="stmt"/>
            <line num="396" count="0" type="stmt"/>
            <line num="397" count="0" type="stmt"/>
            <line num="398" count="0" type="stmt"/>
            <line num="399" count="0" type="stmt"/>
            <line num="400" count="0" type="stmt"/>
            <line num="401" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="raise_without_try() : void" num="406" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="408" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="raise_in_try() : void" num="414" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="416" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="return_in_try() : void" num="427" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="429" count="0" type="stmt"/>
            <line num="441" count="0" type="stmt"/>
            <line num="442" count="0" type="stmt"/>
            <line num="444" count="0" type="stmt"/>
            <line num="446" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="break_in_try() : void" num="449" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="451" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="continue_in_try() : void" num="464" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="466" count="0" type="stmt"/>
            <line num="480" count="0" type="stmt"/>
            <line num="481" count="0" type="stmt"/>
            <line num="483" count="0" type="stmt"/>
            <line num="485" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="return_in_except() : void" num="488" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="490" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="return_in_else() : void" num="503" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="505" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="continue_in_except() : void" num="521" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="523" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="continue_in_else() : void" num="537" testsuccess="false" count="0" testduration="0.005" type="method"/>
            <line num="539" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="break_in_except() : void" num="555" testsuccess="false" count="0" testduration="0.005" type="method"/>
            <line num="557" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="break_in_else() : void" num="571" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="573" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="with_statement() : void" num="589" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="591" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CFGBlock_toString() : void" num="599" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="601" count="0" type="stmt"/>
            <line num="602" count="0" type="stmt"/>
            <line num="603" count="0" type="stmt"/>
            <line num="604" count="0" type="stmt"/>
            <line num="605" count="0" type="stmt"/>
            <line num="609" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CFG_toString() : void" num="612" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="614" count="0" type="stmt"/>
            <line num="621" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="class_def() : void" num="629" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="631" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="if_stmt_test_predecessors() : void" num="642" testsuccess="false" count="0" testduration="0.006" type="method"/>
            <line num="644" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parameters() : void" num="652" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="654" count="0" type="stmt"/>
            <line num="655" count="0" type="stmt"/>
            <line num="656" count="0" type="stmt"/>
            <line num="657" count="0" type="stmt"/>
            <line num="659" count="0" type="stmt"/>
            <line num="660" count="0" type="stmt"/>
            <line num="661" count="0" type="stmt"/>
            <line num="662" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="successors_predecessors_order() : void" num="665" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="667" count="0" type="stmt"/>
            <line num="671" count="0" type="stmt"/>
            <line num="672" count="0" type="stmt"/>
            <line num="673" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="verifyCfg(String) : ControlFlowGraph" num="676" count="0" type="method"/>
            <line num="677" count="0" type="stmt"/>
            <line num="678" count="0" type="stmt"/>
            <line num="679" count="0" type="stmt"/>
            <line num="680" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertNoEmptyBlocksInCFG(ControlFlowGraph) : void" num="683" count="0" type="method"/>
            <line num="684" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="cfg(String) : ControlFlowGraph" num="689" count="0" type="method"/>
            <line num="690" count="0" type="stmt"/>
            <line num="691" count="0" type="stmt"/>
            <line num="692" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="fileCfg(String) : ControlFlowGraph" num="695" count="0" type="method"/>
            <line num="696" count="0" type="stmt"/>
            <line num="697" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/plugins/python/api/cfg/ExpectedCfgStructure.java" name="ExpectedCfgStructure.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="72" loc="378" coveredmethods="0" methods="42" elements="230" classes="3" ncloc="296" statements="130" conditionals="58" coveredstatements="0"/>
            <class name="ExpectedCfgStructure">
               <metrics coveredelements="0" coveredconditionals="0" complexity="24" coveredmethods="0" methods="22" elements="58" statements="32" conditionals="4" coveredstatements="0"/>
            </class>
            <class name="ExpectedCfgStructure.BlockExpectation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="12" coveredmethods="0" methods="12" elements="34" statements="22" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ExpectedCfgStructure.Parser">
               <metrics coveredelements="0" coveredconditionals="0" complexity="36" coveredmethods="0" methods="8" elements="138" statements="76" conditionals="54" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="ExpectedCfgStructure()" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="parse(Set&lt;CfgBlock&gt;) : ExpectedCfgStructure" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="parse(Set&lt;CfgBlock&gt;,Function&lt;ExpectedCfgStructure, ExpectedCfgStructure&gt;) : ExpectedCfgStructure" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="size() : int" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="hasNonEmptyPredecessors() : boolean" num="78" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="hasNonEmptyElementNumbers() : boolean" num="83" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="3" visibility="package" signature="testId(CfgBlock) : String" num="88" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="blockIds(Collection&lt;? extends CfgBlock&gt;) : List&lt;String&gt;" num="98" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="cfgBlock(String) : CfgBlock" num="102" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="expectedSucc(CfgBlock) : List&lt;String&gt;" num="106" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="expectedSyntSucc(CfgBlock) : String" num="110" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="expectedPred(CfgBlock) : List&lt;String&gt;" num="115" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="expectedLiveInVariables(CfgBlock) : Set&lt;String&gt;" num="119" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="expectedLiveOutVariables(CfgBlock) : Set&lt;String&gt;" num="123" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="expecteInDefVariables(CfgBlock) : Set&lt;String&gt;" num="127" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="expecteOutDefVariables(CfgBlock) : Set&lt;String&gt;" num="131" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="expectedGenVariables(CfgBlock) : Set&lt;String&gt;" num="135" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="expectedKilledVariables(CfgBlock) : Set&lt;String&gt;" num="139" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="expectedNumberOfElements(CfgBlock) : int" num="143" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getExpectation(CfgBlock) : BlockExpectation" num="147" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="createExpectation(CfgBlock,String) : BlockExpectation" num="151" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="createEmptyBlockExpectation() : BlockExpectation" num="158" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="withSuccessorsIds(String) : BlockExpectation" num="177" count="0" type="method"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="withPredecessorIds(String) : BlockExpectation" num="182" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="withElementNumber(int) : BlockExpectation" num="187" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="withSyntacticSuccessor(String) : BlockExpectation" num="192" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="withDefInVariables(String) : BlockExpectation" num="197" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="withDefOutVariables(String) : BlockExpectation" num="202" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="withLiveInVariables(String) : BlockExpectation" num="207" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="withLiveOutVariables(String) : BlockExpectation" num="212" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="withGenVariables(String) : BlockExpectation" num="217" count="0" type="method"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="withKilledVariables(String) : BlockExpectation" num="222" count="0" type="method"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="matchesBlock(CfgBlock) : boolean" num="227" count="0" type="method"/>
            <line num="228" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="collectionsEquals(Collection&lt;?&gt;,Collection&lt;?&gt;) : boolean" num="232" count="0" type="method"/>
            <line num="233" count="0" type="stmt"/>
            <line complexity="19" visibility="package" signature="parse(Set&lt;CfgBlock&gt;) : ExpectedCfgStructure" num="243" count="0" type="method"/>
            <line num="244" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="247" type="cond"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="253" type="cond"/>
            <line num="254" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="258" type="cond"/>
            <line num="259" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="263" type="cond"/>
            <line num="264" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="268" type="cond"/>
            <line num="269" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="273" type="cond"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="276" type="cond"/>
            <line num="277" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="280" type="cond"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="282" type="cond"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="284" type="cond"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="286" type="cond"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="288" type="cond"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="290" type="cond"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="292" type="cond"/>
            <line num="293" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="294" type="cond"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="296" type="cond"/>
            <line num="297" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="298" type="cond"/>
            <line num="299" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line complexity="7" visibility="private" signature="getBlockFunctionCall(List&lt;Tree&gt;) : CallExpression" num="308" count="0" type="method"/>
            <line num="309" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="312" type="cond"/>
            <line num="313" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="314" type="cond"/>
            <line num="315" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="316" type="cond"/>
            <line num="317" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="318" type="cond"/>
            <line num="319" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="324" type="cond"/>
            <line num="325" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="328" type="cond"/>
            <line num="329" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="callsWithSuccArg(List&lt;Tree&gt;) : Stream&lt;CallExpression&gt;" num="334" count="0" type="method"/>
            <line num="335" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="336" type="cond"/>
            <line complexity="1" visibility="private" signature="names(Tree) : String[]" num="345" count="0" type="method"/>
            <line num="346" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getVariableStrings(Tree) : String[]" num="349" count="0" type="method"/>
            <line num="350" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getStringList(Tree) : List&lt;String&gt;" num="353" count="0" type="method"/>
            <line num="354" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="354" type="cond"/>
            <line num="355" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isNameWithValue(Tree,String) : boolean" num="362" count="0" type="method"/>
            <line num="363" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getValue(Tree) : String" num="368" count="0" type="method"/>
            <line num="369" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="369" type="cond"/>
            <line num="370" count="0" type="stmt"/>
            <line num="372" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="372" type="cond"/>
            <line num="373" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.python.semantic">
         <metrics coveredelements="38" complexity="194" loc="3333" methods="189" classes="13" statements="1298" coveredconditionals="0" coveredmethods="7" elements="1497" ncloc="2714" files="12" conditionals="10" coveredstatements="31"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/semantic/AmbiguousSymbolTest.java" name="AmbiguousSymbolTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="14" loc="191" coveredmethods="1" methods="14" elements="70" classes="1" ncloc="151" statements="56" conditionals="0" coveredstatements="1"/>
            <class name="AmbiguousSymbolTest">
               <metrics coveredelements="2" complexity="14" methods="14" testruns="13" statements="56" coveredconditionals="0" coveredmethods="1" elements="70" testfailures="12" testduration="0.007" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="overloaded_functions() : void" num="42" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove_usages() : void" num="59" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="redefined_class() : void" num="73" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="redefined_class_member() : void" num="91" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="global_ambiguous_symbol() : void" num="104" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="not_ambiguous_symbols() : void" num="116" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="empty_ambiguous_symbol_creation() : void" num="125" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="127" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="singleton_ambiguous_symbol_creation() : void" num="130" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ambiguous_symbol_creation_different_name_different_fqn() : void" num="135" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ambiguous_symbol_creation_different_name_same_fqn() : void" num="142" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ambiguous_symbol_creation_different_fqn() : void" num="151" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="aliased_import() : void" num="161" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy_without_usages() : void" num="174" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="symbols(String) : Map&lt;String, Symbol&gt;" num="187" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/semantic/ClassLocalSymbolsTest.java" name="ClassLocalSymbolsTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="131" coveredmethods="0" methods="7" elements="37" classes="1" ncloc="98" statements="30" conditionals="0" coveredstatements="0"/>
            <class name="ClassLocalSymbolsTest">
               <metrics coveredelements="0" complexity="7" methods="7" testruns="6" statements="30" coveredconditionals="0" coveredmethods="0" elements="37" testfailures="6" testduration="0.01" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="no_field() : void" num="36" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="only_methods() : void" num="45" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="class_fields() : void" num="54" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance_fields() : void" num="65" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="same_name() : void" num="95" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="same_name_method_fn() : void" num="106" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="parseClass(String) : ClassDef" num="126" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/semantic/ClassSymbolImplTest.java" name="ClassSymbolImplTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="12" loc="221" coveredmethods="0" methods="12" elements="129" classes="1" ncloc="173" statements="117" conditionals="0" coveredstatements="0"/>
            <class name="ClassSymbolImplTest">
               <metrics coveredelements="0" complexity="12" methods="12" testruns="12" statements="117" coveredconditionals="0" coveredmethods="0" elements="129" testfailures="12" testduration="0.007" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="hasUnresolvedTypeHierarchy() : void" num="39" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cycle_between_super_classes() : void" num="66" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_throw_when_adding_super_class_after_super_classes_were_read() : void" num="79" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_throw_when_adding_super_class_after_checking_hierarchy() : void" num="89" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="resolveMember() : void" num="99" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="resolve_inherited_member() : void" num="114" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="resolve_overridden_member() : void" num="124" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_throw_when_adding_member_after_call_to_resolveMember() : void" num="136" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isOrExtends() : void" num="144" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isOrExtends_non_class_symbol() : void" num="161" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="canBeOrExtend() : void" num="177" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="removeUsages() : void" num="206" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/semantic/ClassSymbolTest.java" name="ClassSymbolTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="30" loc="522" coveredmethods="0" methods="30" elements="233" classes="1" ncloc="443" statements="203" conditionals="0" coveredstatements="0"/>
            <class name="ClassSymbolTest">
               <metrics coveredelements="0" complexity="30" methods="30" testruns="27" statements="203" coveredconditionals="0" coveredmethods="0" elements="233" testfailures="27" testduration="0.02500000000000001" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="no_parents() : void" num="38" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="local_parent() : void" num="53" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="multiple_local_parents() : void" num="74" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unknown_parent() : void" num="99" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="builtin_parent() : void" num="113" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="builtin_parent_with_unknown() : void" num="129" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="multiple_bindings() : void" num="145" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="multiple_bindings_2() : void" num="157" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="call_expression_argument() : void" num="169" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parent_is_not_a_class() : void" num="185" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unpacking_expression_as_parent() : void" num="202" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="204" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parent_has_multiple_bindings() : void" num="217" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="219" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="defines_metaclass() : void" num="233" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="235" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="defines_metaclass_python_2() : void" num="282" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="284" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="defines_attrs() : void" num="300" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="302" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="class_with_global_statement() : void" num="319" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="321" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="class_with_nonlocal_statement() : void" num="331" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="333" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="class_members_empty() : void" num="343" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="345" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="class_members() : void" num="351" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="353" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="duplicated_class_member_self() : void" num="364" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="366" count="0" type="stmt"/>
            <line num="372" count="0" type="stmt"/>
            <line num="374" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="class_members_with_inheritance() : void" num="384" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="386" count="0" type="stmt"/>
            <line num="392" count="0" type="stmt"/>
            <line num="393" count="0" type="stmt"/>
            <line num="394" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy_without_usages() : void" num="397" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="399" count="0" type="stmt"/>
            <line num="403" count="0" type="stmt"/>
            <line num="405" count="0" type="stmt"/>
            <line num="411" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="static_member_usages() : void" num="414" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="416" count="0" type="stmt"/>
            <line num="424" count="0" type="stmt"/>
            <line num="425" count="0" type="stmt"/>
            <line num="426" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inherited_static_member() : void" num="429" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="431" count="0" type="stmt"/>
            <line num="438" count="0" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line num="440" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inherits_from_ambiguous_symbol() : void" num="443" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="445" count="0" type="stmt"/>
            <line num="454" count="0" type="stmt"/>
            <line num="455" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inherits_from_function_call() : void" num="458" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="460" count="0" type="stmt"/>
            <line num="467" count="0" type="stmt"/>
            <line num="468" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="has_decorators() : void" num="471" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="473" count="0" type="stmt"/>
            <line num="477" count="0" type="stmt"/>
            <line num="479" count="0" type="stmt"/>
            <line num="482" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertEqualsWithoutUsages(ClassSymbolImpl) : void" num="485" count="0" type="method"/>
            <line num="486" count="0" type="stmt"/>
            <line num="487" count="0" type="stmt"/>
            <line num="489" count="0" type="stmt"/>
            <line num="490" count="0" type="stmt"/>
            <line num="491" count="0" type="stmt"/>
            <line num="493" count="0" type="stmt"/>
            <line num="494" count="0" type="stmt"/>
            <line num="495" count="0" type="stmt"/>
            <line num="497" count="0" type="stmt"/>
            <line num="498" count="0" type="stmt"/>
            <line num="499" count="0" type="stmt"/>
            <line num="501" count="0" type="stmt"/>
            <line num="502" count="0" type="stmt"/>
            <line num="503" count="0" type="stmt"/>
            <line num="505" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="firstClassSymbol(String) : ClassSymbol" num="509" count="0" type="method"/>
            <line num="510" count="0" type="stmt"/>
            <line num="511" count="0" type="stmt"/>
            <line num="512" count="0" type="stmt"/>
            <line num="513" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="lastClassSymbol(String) : ClassSymbol" num="516" count="0" type="method"/>
            <line num="517" count="0" type="stmt"/>
            <line num="518" count="0" type="stmt"/>
            <line num="519" count="0" type="stmt"/>
            <line num="520" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/semantic/FullyQualifiedNameTest.java" name="FullyQualifiedNameTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="43" loc="621" coveredmethods="0" methods="43" elements="220" classes="1" ncloc="531" statements="177" conditionals="0" coveredstatements="0"/>
            <class name="FullyQualifiedNameTest">
               <metrics coveredelements="0" complexity="43" methods="43" testruns="39" statements="177" coveredconditionals="0" coveredmethods="0" elements="220" testfailures="39" testduration="0.059000000000000025" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="callee_qualified_expression() : void" num="51" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="callee_qualified_expression_alias() : void" num="60" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="submodule_alias() : void" num="69" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="alias_import_preserves_fqn() : void" num="78" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="django_submodule_import_preserves_fqn() : void" num="88" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="import_alias_reassigned() : void" num="98" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="callee_qualified_expression_without_import() : void" num="110" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="callee_name_without_import() : void" num="119" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="callee_subscription() : void" num="128" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="callee_qualified_expression_submodule() : void" num="137" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="var_callee_same_name_different_symbol() : void" num="146" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="function_definition_callee_symbol() : void" num="158" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="class_definition_callee_symbol() : void" num="168" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="170" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="method_definition_symbol() : void" num="178" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="method_definition_subclass_symbol() : void" num="191" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subfunction_definition() : void" num="205" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="relative_import_symbols() : void" num="216" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="218" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="imported_symbol() : void" num="294" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="296" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="from_imported_symbol() : void" num="313" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="315" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="two_usages_callee_symbol() : void" num="325" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="327" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getNameEqualTo(FileInput,String) : Name" num="336" count="0" type="method"/>
            <line num="337" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getCallExpression(FileInput) : CallExpression" num="340" count="0" type="method"/>
            <line num="341" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getQualifiedExpression(FileInput) : QualifiedExpression" num="344" count="0" type="method"/>
            <line num="345" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="qualified_expression_symbol() : void" num="348" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="350" count="0" type="stmt"/>
            <line num="354" count="0" type="stmt"/>
            <line num="355" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="from_import() : void" num="362" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="364" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="from_import_multiple_names() : void" num="371" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="373" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line num="385" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line num="388" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="from_import_reassigned() : void" num="394" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="396" count="0" type="stmt"/>
            <line num="401" count="0" type="stmt"/>
            <line num="403" count="0" type="stmt"/>
            <line num="408" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="import_reassigned_exceptions() : void" num="411" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="413" count="0" type="stmt"/>
            <line num="418" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="from_import_alias() : void" num="421" testsuccess="false" count="0" testduration="0.015" type="method"/>
            <line num="423" count="0" type="stmt"/>
            <line num="427" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="from_import_submodule_alias() : void" num="430" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="432" count="0" type="stmt"/>
            <line num="436" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="from_import_relative() : void" num="439" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="441" count="0" type="stmt"/>
            <line num="445" count="0" type="stmt"/>
            <line num="447" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="from_import_submodule() : void" num="454" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="456" count="0" type="stmt"/>
            <line num="460" count="0" type="stmt"/>
            <line num="462" count="0" type="stmt"/>
            <line num="466" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="init_module_relative_import() : void" num="469" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="471" count="0" type="stmt"/>
            <line num="472" count="0" type="stmt"/>
            <line num="473" count="0" type="stmt"/>
            <line num="474" count="0" type="stmt"/>
            <line num="475" count="0" type="stmt"/>
            <line num="476" count="0" type="stmt"/>
            <line num="477" count="0" type="stmt"/>
            <line num="478" count="0" type="stmt"/>
            <line num="479" count="0" type="stmt"/>
            <line num="480" count="0" type="stmt"/>
            <line num="481" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="virtual_call_having_instance_as_qualifier() : void" num="484" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="486" count="0" type="stmt"/>
            <line num="494" count="0" type="stmt"/>
            <line num="495" count="0" type="stmt"/>
            <line num="496" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="virtual_call_qualifier_unknown_type() : void" num="499" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="501" count="0" type="stmt"/>
            <line num="507" count="0" type="stmt"/>
            <line num="508" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subclass_type() : void" num="511" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="513" count="0" type="stmt"/>
            <line num="521" count="0" type="stmt"/>
            <line num="522" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="type_symbol_different_than_class() : void" num="525" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="527" count="0" type="stmt"/>
            <line num="533" count="0" type="stmt"/>
            <line num="534" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="type_symbol_null() : void" num="537" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="539" count="0" type="stmt"/>
            <line num="544" count="0" type="stmt"/>
            <line num="545" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="type_with_global_symbol() : void" num="548" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="550" count="0" type="stmt"/>
            <line num="558" count="0" type="stmt"/>
            <line num="559" count="0" type="stmt"/>
            <line num="560" count="0" type="stmt"/>
            <line num="561" count="0" type="stmt"/>
            <line num="562" count="0" type="stmt"/>
            <line num="564" count="0" type="stmt"/>
            <line num="565" count="0" type="stmt"/>
            <line num="567" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add_type_more_than_one_binding_usage() : void" num="570" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="572" count="0" type="stmt"/>
            <line num="582" count="0" type="stmt"/>
            <line num="583" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fqn_of_inherited_method() : void" num="586" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="588" count="0" type="stmt"/>
            <line num="596" count="0" type="stmt"/>
            <line num="597" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fqn_of_inherited_method_with_import() : void" num="600" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="602" count="0" type="stmt"/>
            <line num="609" count="0" type="stmt"/>
            <line num="610" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertNameAndQualifiedName(FileInput,String,String) : void" num="613" count="0" type="method"/>
            <line num="614" count="0" type="stmt"/>
            <line num="615" count="0" type="stmt"/>
            <line num="616" count="0" type="stmt"/>
            <line num="617" count="0" type="stmt"/>
            <line num="618" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/semantic/FunctionSymbolTest.java" name="FunctionSymbolTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="224" coveredmethods="0" methods="5" elements="118" classes="1" ncloc="170" statements="113" conditionals="0" coveredstatements="0"/>
            <class name="FunctionSymbolTest">
               <metrics coveredelements="0" complexity="5" methods="5" testruns="5" statements="113" coveredconditionals="0" coveredmethods="0" elements="118" testfailures="5" testduration="0.366" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="arity() : void" num="43" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reassigned_symbol() : void" num="132" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="owner() : void" num="159" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="instance_method() : void" num="178" testsuccess="false" count="0" testduration="0.355" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="locations() : void" num="203" testsuccess="false" count="0" testduration="0.005" type="method"/>
            <line num="205" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/semantic/ProjectLevelSymbolTableTest.java" name="ProjectLevelSymbolTableTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="30" loc="616" coveredmethods="0" methods="29" elements="307" classes="1" ncloc="537" statements="276" conditionals="2" coveredstatements="0"/>
            <class name="ProjectLevelSymbolTableTest">
               <metrics coveredelements="0" complexity="30" methods="29" testruns="27" statements="276" coveredconditionals="0" coveredmethods="0" elements="307" testfailures="27" testduration="0.01800000000000001" conditionals="2" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="private" signature="getSymbolByName(FileInput) : Map&lt;String, Symbol&gt;" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="wildcard_import() : void" num="56" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unresolved_wildcard_import() : void" num="88" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="function_symbol() : void" num="99" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="import_already_existing_symbol() : void" num="141" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="other_imported_symbol() : void" num="170" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="aliased_imported_symbols() : void" num="188" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="type_hierarchy() : void" num="208" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="not_class_symbol_in_super_class() : void" num="248" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="metaclass_in_imported_symbol() : void" num="265" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="267" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="builtin_symbol_in_super_class() : void" num="284" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="multi_level_type_hierarchy() : void" num="301" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="303" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ambiguous_imported_symbol() : void" num="352" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="354" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="imported_class_hasSuperClassWithoutSymbol() : void" num="374" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="376" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line num="388" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line num="391" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="globalSymbols(FileInput,String) : Set&lt;Symbol&gt;" num="394" count="0" type="method"/>
            <line num="395" count="0" type="stmt"/>
            <line num="396" count="0" type="stmt"/>
            <line num="397" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="397" type="cond"/>
            <line complexity="1" visibility="public" signature="global_symbols() : void" num="400" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="402" count="0" type="stmt"/>
            <line num="408" count="0" type="stmt"/>
            <line num="409" count="0" type="stmt"/>
            <line num="410" count="0" type="stmt"/>
            <line num="411" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="global_symbols_private_by_convention() : void" num="414" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="417" count="0" type="stmt"/>
            <line num="420" count="0" type="stmt"/>
            <line num="421" count="0" type="stmt"/>
            <line num="422" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="local_symbols_not_exported() : void" num="425" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="427" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line num="435" count="0" type="stmt"/>
            <line num="436" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="redefined_symbols() : void" num="439" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="441" count="0" type="stmt"/>
            <line num="449" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="function_symbols() : void" num="454" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="456" count="0" type="stmt"/>
            <line num="459" count="0" type="stmt"/>
            <line num="460" count="0" type="stmt"/>
            <line num="462" count="0" type="stmt"/>
            <line num="466" count="0" type="stmt"/>
            <line num="467" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="redefined_class_symbol() : void" num="470" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="472" count="0" type="stmt"/>
            <line num="476" count="0" type="stmt"/>
            <line num="477" count="0" type="stmt"/>
            <line num="478" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="classdef_with_missing_symbol() : void" num="481" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="483" count="0" type="stmt"/>
            <line num="488" count="0" type="stmt"/>
            <line num="489" count="0" type="stmt"/>
            <line num="491" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="class_symbol() : void" num="494" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="496" count="0" type="stmt"/>
            <line num="499" count="0" type="stmt"/>
            <line num="500" count="0" type="stmt"/>
            <line num="501" count="0" type="stmt"/>
            <line num="502" count="0" type="stmt"/>
            <line num="503" count="0" type="stmt"/>
            <line num="504" count="0" type="stmt"/>
            <line num="506" count="0" type="stmt"/>
            <line num="510" count="0" type="stmt"/>
            <line num="511" count="0" type="stmt"/>
            <line num="512" count="0" type="stmt"/>
            <line num="513" count="0" type="stmt"/>
            <line num="514" count="0" type="stmt"/>
            <line num="515" count="0" type="stmt"/>
            <line num="518" count="0" type="stmt"/>
            <line num="523" count="0" type="stmt"/>
            <line num="524" count="0" type="stmt"/>
            <line num="525" count="0" type="stmt"/>
            <line num="526" count="0" type="stmt"/>
            <line num="527" count="0" type="stmt"/>
            <line num="528" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="class_inheriting_from_imported_symbol() : void" num="531" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="533" count="0" type="stmt"/>
            <line num="541" count="0" type="stmt"/>
            <line num="542" count="0" type="stmt"/>
            <line num="543" count="0" type="stmt"/>
            <line num="544" count="0" type="stmt"/>
            <line num="545" count="0" type="stmt"/>
            <line num="546" count="0" type="stmt"/>
            <line num="547" count="0" type="stmt"/>
            <line num="548" count="0" type="stmt"/>
            <line num="549" count="0" type="stmt"/>
            <line num="550" count="0" type="stmt"/>
            <line num="551" count="0" type="stmt"/>
            <line num="552" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="symbol_duplicated_by_wildcard_import() : void" num="555" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="557" count="0" type="stmt"/>
            <line num="562" count="0" type="stmt"/>
            <line num="563" count="0" type="stmt"/>
            <line num="565" count="0" type="stmt"/>
            <line num="570" count="0" type="stmt"/>
            <line num="571" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="class_having_itself_as_superclass_should_not_trigger_error() : void" num="574" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="576" count="0" type="stmt"/>
            <line num="577" count="0" type="stmt"/>
            <line num="578" count="0" type="stmt"/>
            <line num="579" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="global_symbols_stdlib_imports() : void" num="582" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="584" count="0" type="stmt"/>
            <line num="591" count="0" type="stmt"/>
            <line num="592" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="module_importing_itself() : void" num="595" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="597" count="0" type="stmt"/>
            <line num="601" count="0" type="stmt"/>
            <line num="602" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="imports_wont_trigger_typeshed_lookup() : void" num="605" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="608" count="0" type="stmt"/>
            <line num="613" count="0" type="stmt"/>
            <line num="614" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/semantic/SelfSymbolImplTest.java" name="SelfSymbolImplTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="53" coveredmethods="0" methods="1" elements="9" classes="1" ncloc="28" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="SelfSymbolImplTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="8" coveredconditionals="0" coveredmethods="0" elements="9" testfailures="1" testduration="0.001" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="removeUsages() : void" num="37" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/semantic/SymbolImplTest.java" name="SymbolImplTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="72" coveredmethods="0" methods="3" elements="21" classes="1" ncloc="43" statements="18" conditionals="0" coveredstatements="0"/>
            <class name="SymbolImplTest">
               <metrics coveredelements="0" complexity="3" methods="3" testruns="2" statements="18" coveredconditionals="0" coveredmethods="0" elements="21" testfailures="2" testduration="0.011" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="assert_is() : void" num="39" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="removeUsages() : void" num="50" testsuccess="false" count="0" testduration="0.01" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="symbols(String) : Map&lt;String, Symbol&gt;" num="68" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/semantic/SymbolTableBuilderTest.java" name="SymbolTableBuilderTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="39" loc="463" coveredmethods="1" methods="37" elements="266" classes="2" ncloc="386" statements="225" conditionals="4" coveredstatements="1"/>
            <class name="SymbolTableBuilderTest">
               <metrics coveredelements="2" coveredconditionals="0" complexity="38" coveredmethods="1" methods="36" elements="263" statements="223" conditionals="4" coveredstatements="1"/>
            </class>
            <class name="SymbolTableBuilderTest.TestVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="getSymbolByName(FunctionDef) : Map&lt;String, Symbol&gt;" num="60" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="init() : void" num="64" count="1" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="global_variable() : void" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="local_variable() : void" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="free_variable() : void" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rebound_variable() : void" num="120" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="simple_parameter() : void" num="127" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="multiple_assignment() : void" num="134" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="tuple_assignment() : void" num="148" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="function_with_global_var() : void" num="162" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="function_with_nonlocal_var() : void" num="168" count="0" type="method"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="function_with_nested_nonlocal_var() : void" num="174" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="lambdas() : void" num="186" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="for_stmt() : void" num="210" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="comprehension() : void" num="226" count="0" type="method"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="func_wrapping_class() : void" num="237" count="0" type="method"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="var_with_usages_in_decorator() : void" num="243" count="0" type="method"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="function_with_unused_import() : void" num="253" count="0" type="method"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="importing_stdlib() : void" num="266" count="0" type="method"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="function_with_tuple_param() : void" num="281" count="0" type="method"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="function_with_star_param() : void" num="288" count="0" type="method"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="print_local_var() : void" num="299" count="0" type="method"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="tuples_in_comp() : void" num="306" count="0" type="method"/>
            <line num="308" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="comprehension_scope() : void" num="318" count="0" type="method"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="comprehension_shadowing_names() : void" num="328" count="0" type="method"/>
            <line num="330" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="interpolated_string() : void" num="339" count="0" type="method"/>
            <line num="341" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fn_inside_comprehension_same_name() : void" num="347" count="0" type="method"/>
            <line num="349" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="exception_instance() : void" num="355" count="0" type="method"/>
            <line num="357" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="with_instance() : void" num="363" count="0" type="method"/>
            <line num="365" count="0" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unpacking() : void" num="371" count="0" type="method"/>
            <line num="373" count="0" type="stmt"/>
            <line num="374" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="using_builtin_symbol() : void" num="379" count="0" type="method"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line num="385" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="keyword_usage() : void" num="390" count="0" type="method"/>
            <line num="392" count="0" type="stmt"/>
            <line num="393" count="0" type="stmt"/>
            <line num="394" count="0" type="stmt"/>
            <line num="395" count="0" type="stmt"/>
            <line num="396" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parameter_default_value() : void" num="399" count="0" type="method"/>
            <line num="401" count="0" type="stmt"/>
            <line num="402" count="0" type="stmt"/>
            <line num="403" count="0" type="stmt"/>
            <line num="404" count="0" type="stmt"/>
            <line num="405" count="0" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line num="407" count="0" type="stmt"/>
            <line num="408" count="0" type="stmt"/>
            <line num="409" count="0" type="stmt"/>
            <line num="410" count="0" type="stmt"/>
            <line num="412" count="0" type="stmt"/>
            <line num="413" count="0" type="stmt"/>
            <line num="414" count="0" type="stmt"/>
            <line num="415" count="0" type="stmt"/>
            <line num="416" count="0" type="stmt"/>
            <line num="418" count="0" type="stmt"/>
            <line num="419" count="0" type="stmt"/>
            <line num="420" count="0" type="stmt"/>
            <line num="421" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="comprehension_vars() : void" num="424" count="0" type="method"/>
            <line num="426" count="0" type="stmt"/>
            <line num="427" count="0" type="stmt"/>
            <line num="428" count="0" type="stmt"/>
            <line num="429" count="0" type="stmt"/>
            <line num="430" count="0" type="stmt"/>
            <line num="431" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assignment_expression() : void" num="434" count="0" type="method"/>
            <line num="436" count="0" type="stmt"/>
            <line num="437" count="0" type="stmt"/>
            <line num="438" count="0" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line num="440" count="0" type="stmt"/>
            <line num="441" count="0" type="stmt"/>
            <line num="442" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFunctionDef(FunctionDef) : void" num="446" count="0" type="method"/>
            <line num="448" count="0" type="stmt"/>
            <line num="449" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getNameFromExpression(Tree) : List&lt;Name&gt;" num="453" count="0" type="method"/>
            <line num="454" count="0" type="stmt"/>
            <line num="455" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="455" type="cond"/>
            <line num="456" count="0" type="stmt"/>
            <line num="457" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="457" type="cond"/>
            <line num="458" count="0" type="stmt"/>
            <line num="460" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/semantic/SymbolUtilsTest.java" name="SymbolUtilsTest.java">
            <metrics coveredelements="21" coveredconditionals="0" complexity="8" loc="170" coveredmethods="3" methods="6" elements="74" classes="1" ncloc="130" statements="64" conditionals="4" coveredstatements="18"/>
            <class name="SymbolUtilsTest">
               <metrics coveredelements="21" complexity="8" methods="6" testruns="5" statements="64" coveredconditionals="0" coveredmethods="3" elements="74" testfailures="2" testduration="0.007" conditionals="4" coveredstatements="18" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="package_name_by_file() : void" num="50" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="fqn_by_package_with_subpackage() : void" num="58" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="path_of() : void" num="67" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="first_parameter_offset() : void" num="83" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get_overridden_method() : void" num="114" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="descendantFunction(Tree,String) : FunctionDef" num="157" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="159" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="161" type="cond"/>
            <line num="162" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/semantic/UsageImplTest.java" name="UsageImplTest.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="2" loc="49" coveredmethods="2" methods="2" elements="13" classes="1" ncloc="24" statements="11" conditionals="0" coveredstatements="11"/>
            <class name="UsageImplTest">
               <metrics coveredelements="13" complexity="2" methods="2" testruns="1" statements="11" coveredconditionals="0" coveredmethods="2" elements="13" testfailures="0" testduration="0.029" conditionals="0" coveredstatements="11" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="binding_usages() : void" num="32" testsuccess="true" count="1" testduration="0.029" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertBindingUsage(Usage.Kind,boolean) : void" num="43" count="7" type="method"/>
            <line num="44" count="7" type="stmt"/>
            <line num="45" count="7" type="stmt"/>
            <line num="46" count="7" type="stmt"/>
            <line num="47" count="7" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.plugins.python.api.tree">
         <metrics coveredelements="0" complexity="31" loc="370" methods="30" classes="2" statements="203" coveredconditionals="0" coveredmethods="0" elements="235" ncloc="310" files="1" conditionals="2" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/plugins/python/api/tree/BaseTreeVisitorTest.java" name="BaseTreeVisitorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="31" loc="370" coveredmethods="0" methods="30" elements="235" classes="2" ncloc="310" statements="203" conditionals="2" coveredstatements="0"/>
            <class name="BaseTreeVisitorTest">
               <metrics coveredelements="0" complexity="28" methods="28" testruns="27" statements="199" coveredconditionals="0" coveredmethods="0" elements="227" testfailures="27" testduration="0.04000000000000001" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="BaseTreeVisitorTest.FirstLastTokenVerifierVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="8" statements="4" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="FirstLastTokenVerifierVisitor()" num="41" count="0" type="method"/>
            <line complexity="2" visibility="protected" signature="scan(Tree) : void" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="if_statement() : void" num="53" testsuccess="false" count="0" testduration="0.005" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="exec_statement() : void" num="66" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assert_statement() : void" num="79" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="delete_statement() : void" num="91" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fundef_statement() : void" num="102" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fundef_with_tuple_param() : void" num="115" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="import_statement() : void" num="130" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="for_statement() : void" num="149" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="while_statement() : void" num="159" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="try_statement() : void" num="169" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="with_statement() : void" num="180" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="class_statement() : void" num="190" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="qualified_expr() : void" num="202" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assignement_stmt() : void" num="211" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assignment_expr() : void" num="222" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="annotated_assignment() : void" num="232" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="lambda() : void" num="245" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="starred_expr() : void" num="255" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="await_expr() : void" num="264" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="slice_expr() : void" num="273" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subscription_expr() : void" num="288" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parenthesized_expr() : void" num="298" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="tuple() : void" num="307" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="309" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cond_expression() : void" num="316" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="list_or_set_comprehension() : void" num="327" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="329" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dict_comprehension() : void" num="345" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="347" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line num="354" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="repr_expression() : void" num="357" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="359" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="364" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="parse(String,Function&lt;AstNode, T&gt;) : T" num="367" count="0" type="method"/>
            <line num="368" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.python.cfg">
         <metrics coveredelements="9" complexity="5" loc="125" methods="5" classes="2" statements="21" coveredconditionals="0" coveredmethods="1" elements="26" ncloc="71" files="2" conditionals="0" coveredstatements="8"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/cfg/CfgUtilsTest.java" name="CfgUtilsTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="84" coveredmethods="0" methods="4" elements="17" classes="1" ncloc="53" statements="13" conditionals="0" coveredstatements="0"/>
            <class name="CfgUtilsTest">
               <metrics coveredelements="0" complexity="4" methods="4" testruns="3" statements="13" coveredconditionals="0" coveredmethods="0" elements="17" testfailures="3" testduration="0.004" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="unreachableBlocks_empty() : void" num="42" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unreachableBlocks_one() : void" num="50" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unreachableBlocks_conditional() : void" num="60" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="cfg(String) : ControlFlowGraph" num="79" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/cfg/PythonCfgBlockTest.java" name="PythonCfgBlockTest.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="1" loc="41" coveredmethods="1" methods="1" elements="9" classes="1" ncloc="18" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="PythonCfgBlockTest">
               <metrics coveredelements="9" complexity="1" methods="1" testruns="1" statements="8" coveredconditionals="0" coveredmethods="1" elements="9" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="8" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="loop_of_empty_block() : void" num="30" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.python.types">
         <metrics coveredelements="17" complexity="99" loc="1506" methods="97" classes="10" statements="487" coveredconditionals="0" coveredmethods="5" elements="586" ncloc="1110" files="10" conditionals="2" coveredstatements="12"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/types/AnyTypeTest.java" name="AnyTypeTest.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="5" loc="57" coveredmethods="3" methods="5" elements="13" classes="1" ncloc="30" statements="8" conditionals="0" coveredstatements="3"/>
            <class name="AnyTypeTest">
               <metrics coveredelements="6" complexity="5" methods="5" testruns="5" statements="8" coveredconditionals="0" coveredmethods="3" elements="13" testfailures="2" testduration="0.001" conditionals="0" coveredstatements="3" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="isIdentityComparableWith() : void" num="30" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="canHaveMember() : void" num="36" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="resolveMember() : void" num="41" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_canOnlyBe() : void" num="46" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_canBeOrExtend() : void" num="51" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/types/CustomStubSanityTest.java" name="CustomStubSanityTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="74" coveredmethods="0" methods="2" elements="18" classes="1" ncloc="44" statements="14" conditionals="2" coveredstatements="0"/>
            <class name="CustomStubSanityTest">
               <metrics coveredelements="0" complexity="4" methods="2" testruns="1" statements="14" coveredconditionals="0" coveredmethods="0" elements="18" testfailures="1" testduration="0.021" conditionals="2" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="2" visibility="public" signature="test() : void" num="40" testsuccess="false" count="0" testduration="0.021" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="pathToModuleName(Path) : String" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/types/InferredTypesTest.java" name="InferredTypesTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="169" coveredmethods="0" methods="10" elements="61" classes="1" ncloc="126" statements="51" conditionals="0" coveredstatements="0"/>
            <class name="InferredTypesTest">
               <metrics coveredelements="0" complexity="10" methods="10" testruns="9" statements="51" coveredconditionals="0" coveredmethods="0" elements="61" testfailures="9" testduration="0.003" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test_runtimeType() : void" num="45" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_or() : void" num="53" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ambiguous_class_symbol() : void" num="65" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_aliased_type_annotations() : void" num="73" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_union_type_annotations() : void" num="88" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_optional_type_annotations() : void" num="115" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_typeSymbol() : void" num="130" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_typeName() : void" num="141" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_typeLocation() : void" num="152" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="typeAnnotation(String) : TypeAnnotation" num="166" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/types/MemberResolutionTest.java" name="MemberResolutionTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="63" coveredmethods="0" methods="2" elements="9" classes="1" ncloc="38" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="MemberResolutionTest">
               <metrics coveredelements="0" complexity="2" methods="2" testruns="2" statements="7" coveredconditionals="0" coveredmethods="0" elements="9" testfailures="2" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="basic_method_resolution() : void" num="35" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="super_method_resolution() : void" num="49" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/types/RuntimeTypeTest.java" name="RuntimeTypeTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="223" coveredmethods="0" methods="11" elements="130" classes="1" ncloc="170" statements="119" conditionals="0" coveredstatements="0"/>
            <class name="RuntimeTypeTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="11" elements="130" statements="119" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="isIdentityComparableWith() : void" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="member() : void" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="overridden_symbol() : void" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cycle_between_super_types() : void" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unresolved_type_hierarchy() : void" num="109" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_equals() : void" num="120" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_hashCode() : void" num="152" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_toString() : void" num="163" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_canOnlyBe() : void" num="168" count="0" type="method"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_canBeOrExtend() : void" num="174" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_isCompatibleWith() : void" num="190" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/types/TypeInferenceProgramStateTest.java" name="TypeInferenceProgramStateTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="92" coveredmethods="0" methods="5" elements="32" classes="1" ncloc="61" statements="27" conditionals="0" coveredstatements="0"/>
            <class name="TypeInferenceProgramStateTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="32" statements="27" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="join(ProgramState) : ProgramState" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : ProgramState" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_equals() : void" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_hashcode() : void" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_toString() : void" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/types/TypeInferenceTest.java" name="TypeInferenceTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="29" loc="398" coveredmethods="0" methods="29" elements="122" classes="1" ncloc="325" statements="93" conditionals="0" coveredstatements="0"/>
            <class name="TypeInferenceTest">
               <metrics coveredelements="0" complexity="29" methods="29" testruns="29" statements="93" coveredconditionals="0" coveredmethods="0" elements="122" testfailures="29" testduration="0.028000000000000014" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="unknown_expression_type() : void" num="58" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unpacking_assignment() : void" num="64" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="call_expression() : void" num="72" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="variable_outside_function() : void" num="87" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parameter() : void" num="92" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="local_variable() : void" num="107" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="global_variable() : void" num="114" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="simple_propagation_between_variables() : void" num="122" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="variable_read_appearing_before_initialization() : void" num="131" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cycle_between_variables_with_initialization() : void" num="140" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unresolvable_cycle_between_variables() : void" num="150" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unsupported_assignment() : void" num="159" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="propagate_return_type_to_variable() : void" num="184" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="multiple_types() : void" num="216" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="218" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numeric_literals() : void" num="224" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="string_literals() : void" num="237" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="list_literals() : void" num="250" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dict_literals() : void" num="258" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set_literals() : void" num="266" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="268" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="generator_literal() : void" num="273" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="275" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="tuple_literal() : void" num="278" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="280" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="none_type() : void" num="284" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="286" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="true_false_literal() : void" num="289" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="builtin_function_types() : void" num="295" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="297" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="builtin_method_types() : void" num="307" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="309" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="conditional_expressions() : void" num="313" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="315" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="flow_sensitive_type_inference() : void" num="332" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="334" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line num="354" count="0" type="stmt"/>
            <line num="355" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="flow_insensitive_when_try_except() : void" num="360" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="362" count="0" type="stmt"/>
            <line num="374" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="execution_order_assignment_statement() : void" num="383" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="385" count="0" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line num="391" count="0" type="stmt"/>
            <line num="392" count="0" type="stmt"/>
            <line num="393" count="0" type="stmt"/>
            <line num="395" count="0" type="stmt"/>
            <line num="396" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/types/TypeShedPythonFileTest.java" name="TypeShedPythonFileTest.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="2" loc="52" coveredmethods="2" methods="2" elements="11" classes="1" ncloc="26" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="TypeShedPythonFileTest">
               <metrics coveredelements="11" complexity="2" methods="2" testruns="2" statements="9" coveredconditionals="0" coveredmethods="2" elements="11" testfailures="0" testduration="0.036000000000000004" conditionals="0" coveredstatements="9" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="existing_resource() : void" num="36" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="error_while_reading_resource() : void" num="44" testsuccess="true" count="1" testduration="0.035" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/types/TypeShedTest.java" name="TypeShedTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="21" loc="234" coveredmethods="0" methods="21" elements="122" classes="1" ncloc="183" statements="101" conditionals="0" coveredstatements="0"/>
            <class name="TypeShedTest">
               <metrics coveredelements="0" complexity="21" methods="21" testruns="21" statements="101" coveredconditionals="0" coveredmethods="0" elements="122" testfailures="21" testduration="0.05900000000000001" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="classes() : void" num="40" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="str() : void" num="50" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="not_a_class() : void" num="57" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unknown_name() : void" num="62" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="none_type() : void" num="67" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="typing_module() : void" num="73" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="stdlib_symbols() : void" num="83" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="third_party_symbols() : void" num="101" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_resolve_packages() : void" num="110" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="package_symbols() : void" num="124" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="package_submodules_symbols() : void" num="133" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="package_inner_submodules_symbols() : void" num="142" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="package_relative_import() : void" num="150" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="package_member_fqn_points_to_original_fqn() : void" num="166" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="package_member_ambigous_symbol_common_fqn() : void" num="174" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="two_exported_symbols_with_same_local_names() : void" num="182" testsuccess="false" count="0" testduration="0.016" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="package_django() : void" num="192" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="return_type_hints() : void" num="200" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="package_django_class_property_type() : void" num="209" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="package_sqlite3_connect_type_in_ambiguous_symbol() : void" num="217" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="stub_files_symbols() : void" num="224" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/types/UnionTypeTest.java" name="UnionTypeTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="144" coveredmethods="0" methods="10" elements="68" classes="1" ncloc="107" statements="58" conditionals="0" coveredstatements="0"/>
            <class name="UnionTypeTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="10" elements="68" statements="58" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="construction() : void" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isIdentityComparableWith() : void" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="canHaveMember() : void" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="resolveMember() : void" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_equals() : void" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_hashCode() : void" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_toString() : void" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_canOnlyBe() : void" num="113" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_canBeOrExtend() : void" num="120" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_isCompatibleWith() : void" num="131" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.python.tree">
         <metrics coveredelements="111" complexity="136" loc="3302" methods="126" classes="10" statements="2022" coveredconditionals="2" coveredmethods="11" elements="2156" ncloc="2729" files="10" conditionals="8" coveredstatements="98"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/tree/BinaryExpressionImplTest.java" name="BinaryExpressionImplTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="72" coveredmethods="0" methods="4" elements="21" classes="1" ncloc="45" statements="17" conditionals="0" coveredstatements="0"/>
            <class name="BinaryExpressionImplTest">
               <metrics coveredelements="0" complexity="4" methods="4" testruns="4" statements="17" coveredconditionals="0" coveredmethods="0" elements="21" testfailures="4" testduration="0.008" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="type() : void" num="36" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="logical_expressions() : void" num="46" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="type_dependencies() : void" num="55" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="long_sequence_binary_expressions() : void" num="64" testsuccess="false" count="0" testduration="0.005" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/tree/CallExpressionImplTest.java" name="CallExpressionImplTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="105" coveredmethods="0" methods="5" elements="32" classes="1" ncloc="71" statements="27" conditionals="0" coveredstatements="0"/>
            <class name="CallExpressionImplTest">
               <metrics coveredelements="0" complexity="5" methods="5" testruns="5" statements="27" coveredconditionals="0" coveredmethods="0" elements="32" testfailures="5" testduration="0.007" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="constructor_type() : void" num="40" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="function_call_type() : void" num="52" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ambiguous_callee_symbol_type() : void" num="57" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="not_callable_callee_symbol_type() : void" num="93" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="null_callee_symbol_type() : void" num="101" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="103" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/tree/ComprehensionExpressionImplTest.java" name="ComprehensionExpressionImplTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="52" coveredmethods="0" methods="1" elements="12" classes="1" ncloc="25" statements="11" conditionals="0" coveredstatements="0"/>
            <class name="ComprehensionExpressionImplTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="11" coveredconditionals="0" coveredmethods="0" elements="12" testfailures="1" testduration="0.045" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="type() : void" num="33" testsuccess="false" count="0" testduration="0.045" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/tree/NameImplTest.java" name="NameImplTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="61" coveredmethods="0" methods="2" elements="13" classes="1" ncloc="34" statements="11" conditionals="0" coveredstatements="0"/>
            <class name="NameImplTest">
               <metrics coveredelements="0" complexity="2" methods="2" testruns="2" statements="11" coveredconditionals="0" coveredmethods="0" elements="13" testfailures="2" testduration="0.037000000000000005" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="type() : void" num="34" testsuccess="false" count="0" testduration="0.035" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="type_of_boolean() : void" num="46" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/tree/ParenthesizedExpressionImplTest.java" name="ParenthesizedExpressionImplTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="44" coveredmethods="0" methods="2" elements="7" classes="1" ncloc="19" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="ParenthesizedExpressionImplTest">
               <metrics coveredelements="0" complexity="2" methods="2" testruns="2" statements="5" coveredconditionals="0" coveredmethods="0" elements="7" testfailures="2" testduration="0.003" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="type() : void" num="32" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="typeDependencies() : void" num="39" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/tree/PythonTreeMakerTest.java" name="PythonTreeMakerTest.java">
            <metrics coveredelements="111" coveredconditionals="2" complexity="96" loc="2504" coveredmethods="11" methods="87" elements="1899" classes="1" ncloc="2211" statements="1806" conditionals="6" coveredstatements="98"/>
            <class name="PythonTreeMakerTest">
               <metrics coveredelements="111" complexity="96" methods="87" testruns="75" statements="1806" coveredconditionals="2" coveredmethods="11" elements="1899" testfailures="65" testduration="0.07900000000000004" conditionals="6" coveredstatements="98" testpasses="10"/>
            </class>
            <line complexity="1" visibility="public" signature="file_input() : void" num="129" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="variadic_is_kind() : void" num="151" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="unexpected_expression_should_throw_an_exception() : void" num="160" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="verify_expected_statement() : void" num="170" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="IfStatement() : void" num="209" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="printStatement() : void" num="265" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="267" count="1" type="stmt"/>
            <line num="268" count="1" type="stmt"/>
            <line num="269" count="1" type="stmt"/>
            <line num="270" count="1" type="stmt"/>
            <line num="271" count="1" type="stmt"/>
            <line num="272" count="1" type="stmt"/>
            <line num="273" count="1" type="stmt"/>
            <line num="274" count="1" type="stmt"/>
            <line num="276" count="1" type="stmt"/>
            <line num="277" count="1" type="stmt"/>
            <line num="278" count="1" type="stmt"/>
            <line num="279" count="1" type="stmt"/>
            <line num="280" count="1" type="stmt"/>
            <line num="281" count="1" type="stmt"/>
            <line num="282" count="1" type="stmt"/>
            <line num="284" count="1" type="stmt"/>
            <line num="285" count="1" type="stmt"/>
            <line num="286" count="1" type="stmt"/>
            <line num="287" count="1" type="stmt"/>
            <line num="288" count="1" type="stmt"/>
            <line num="289" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="execStatement() : void" num="292" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="294" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertStatement() : void" num="330" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="passStatement() : void" num="352" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="354" count="1" type="stmt"/>
            <line num="355" count="1" type="stmt"/>
            <line num="356" count="1" type="stmt"/>
            <line num="357" count="1" type="stmt"/>
            <line num="358" count="1" type="stmt"/>
            <line num="359" count="1" type="stmt"/>
            <line num="360" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="delStatement() : void" num="363" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="365" count="0" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line num="372" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line num="385" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line num="388" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnStatement() : void" num="392" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="394" count="0" type="stmt"/>
            <line num="395" count="0" type="stmt"/>
            <line num="396" count="0" type="stmt"/>
            <line num="397" count="0" type="stmt"/>
            <line num="398" count="0" type="stmt"/>
            <line num="399" count="0" type="stmt"/>
            <line num="400" count="0" type="stmt"/>
            <line num="401" count="0" type="stmt"/>
            <line num="403" count="0" type="stmt"/>
            <line num="404" count="0" type="stmt"/>
            <line num="405" count="0" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line num="407" count="0" type="stmt"/>
            <line num="408" count="0" type="stmt"/>
            <line num="409" count="0" type="stmt"/>
            <line num="411" count="0" type="stmt"/>
            <line num="412" count="0" type="stmt"/>
            <line num="413" count="0" type="stmt"/>
            <line num="414" count="0" type="stmt"/>
            <line num="415" count="0" type="stmt"/>
            <line num="416" count="0" type="stmt"/>
            <line num="417" count="0" type="stmt"/>
            <line num="419" count="0" type="stmt"/>
            <line num="420" count="0" type="stmt"/>
            <line num="421" count="0" type="stmt"/>
            <line num="422" count="0" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line num="424" count="0" type="stmt"/>
            <line num="425" count="0" type="stmt"/>
            <line num="426" count="0" type="stmt"/>
            <line num="427" count="0" type="stmt"/>
            <line num="428" count="0" type="stmt"/>
            <line num="430" count="0" type="stmt"/>
            <line num="431" count="0" type="stmt"/>
            <line num="432" count="0" type="stmt"/>
            <line num="433" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="yieldStatement() : void" num="436" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="438" count="0" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line num="440" count="0" type="stmt"/>
            <line num="441" count="0" type="stmt"/>
            <line num="442" count="0" type="stmt"/>
            <line num="443" count="0" type="stmt"/>
            <line num="444" count="0" type="stmt"/>
            <line num="445" count="0" type="stmt"/>
            <line num="446" count="0" type="stmt"/>
            <line num="447" count="0" type="stmt"/>
            <line num="449" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line num="453" count="0" type="stmt"/>
            <line num="454" count="0" type="stmt"/>
            <line num="455" count="0" type="stmt"/>
            <line num="456" count="0" type="stmt"/>
            <line num="457" count="0" type="stmt"/>
            <line num="458" count="0" type="stmt"/>
            <line num="459" count="0" type="stmt"/>
            <line num="461" count="0" type="stmt"/>
            <line num="462" count="0" type="stmt"/>
            <line num="463" count="0" type="stmt"/>
            <line num="464" count="0" type="stmt"/>
            <line num="465" count="0" type="stmt"/>
            <line num="466" count="0" type="stmt"/>
            <line num="467" count="0" type="stmt"/>
            <line num="468" count="0" type="stmt"/>
            <line num="469" count="0" type="stmt"/>
            <line num="470" count="0" type="stmt"/>
            <line num="471" count="0" type="stmt"/>
            <line num="473" count="0" type="stmt"/>
            <line num="474" count="0" type="stmt"/>
            <line num="475" count="0" type="stmt"/>
            <line num="476" count="0" type="stmt"/>
            <line num="477" count="0" type="stmt"/>
            <line num="479" count="0" type="stmt"/>
            <line num="480" count="0" type="stmt"/>
            <line num="481" count="0" type="stmt"/>
            <line num="482" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="raiseStatement() : void" num="485" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="487" count="0" type="stmt"/>
            <line num="488" count="0" type="stmt"/>
            <line num="489" count="0" type="stmt"/>
            <line num="490" count="0" type="stmt"/>
            <line num="491" count="0" type="stmt"/>
            <line num="492" count="0" type="stmt"/>
            <line num="493" count="0" type="stmt"/>
            <line num="494" count="0" type="stmt"/>
            <line num="495" count="0" type="stmt"/>
            <line num="496" count="0" type="stmt"/>
            <line num="498" count="0" type="stmt"/>
            <line num="499" count="0" type="stmt"/>
            <line num="500" count="0" type="stmt"/>
            <line num="501" count="0" type="stmt"/>
            <line num="502" count="0" type="stmt"/>
            <line num="503" count="0" type="stmt"/>
            <line num="504" count="0" type="stmt"/>
            <line num="505" count="0" type="stmt"/>
            <line num="506" count="0" type="stmt"/>
            <line num="508" count="0" type="stmt"/>
            <line num="509" count="0" type="stmt"/>
            <line num="510" count="0" type="stmt"/>
            <line num="511" count="0" type="stmt"/>
            <line num="512" count="0" type="stmt"/>
            <line num="513" count="0" type="stmt"/>
            <line num="514" count="0" type="stmt"/>
            <line num="515" count="0" type="stmt"/>
            <line num="516" count="0" type="stmt"/>
            <line num="518" count="0" type="stmt"/>
            <line num="519" count="0" type="stmt"/>
            <line num="520" count="0" type="stmt"/>
            <line num="521" count="0" type="stmt"/>
            <line num="522" count="0" type="stmt"/>
            <line num="523" count="0" type="stmt"/>
            <line num="524" count="0" type="stmt"/>
            <line num="525" count="0" type="stmt"/>
            <line num="526" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="breakStatement() : void" num="529" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="531" count="1" type="stmt"/>
            <line num="532" count="1" type="stmt"/>
            <line num="533" count="1" type="stmt"/>
            <line num="534" count="1" type="stmt"/>
            <line num="535" count="1" type="stmt"/>
            <line num="536" count="1" type="stmt"/>
            <line num="537" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="continueStatement() : void" num="540" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="542" count="1" type="stmt"/>
            <line num="543" count="1" type="stmt"/>
            <line num="544" count="1" type="stmt"/>
            <line num="545" count="1" type="stmt"/>
            <line num="546" count="1" type="stmt"/>
            <line num="547" count="1" type="stmt"/>
            <line num="548" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="importStatement() : void" num="551" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="553" count="0" type="stmt"/>
            <line num="554" count="0" type="stmt"/>
            <line num="555" count="0" type="stmt"/>
            <line num="556" count="0" type="stmt"/>
            <line num="557" count="0" type="stmt"/>
            <line num="558" count="0" type="stmt"/>
            <line num="559" count="0" type="stmt"/>
            <line num="560" count="0" type="stmt"/>
            <line num="561" count="0" type="stmt"/>
            <line num="562" count="0" type="stmt"/>
            <line num="563" count="0" type="stmt"/>
            <line num="564" count="0" type="stmt"/>
            <line num="565" count="0" type="stmt"/>
            <line num="567" count="0" type="stmt"/>
            <line num="568" count="0" type="stmt"/>
            <line num="569" count="0" type="stmt"/>
            <line num="570" count="0" type="stmt"/>
            <line num="571" count="0" type="stmt"/>
            <line num="572" count="0" type="stmt"/>
            <line num="573" count="0" type="stmt"/>
            <line num="574" count="0" type="stmt"/>
            <line num="575" count="0" type="stmt"/>
            <line num="576" count="0" type="stmt"/>
            <line num="577" count="0" type="stmt"/>
            <line num="578" count="0" type="stmt"/>
            <line num="579" count="0" type="stmt"/>
            <line num="580" count="0" type="stmt"/>
            <line num="581" count="0" type="stmt"/>
            <line num="582" count="0" type="stmt"/>
            <line num="584" count="0" type="stmt"/>
            <line num="585" count="0" type="stmt"/>
            <line num="586" count="0" type="stmt"/>
            <line num="587" count="0" type="stmt"/>
            <line num="588" count="0" type="stmt"/>
            <line num="589" count="0" type="stmt"/>
            <line num="590" count="0" type="stmt"/>
            <line num="591" count="0" type="stmt"/>
            <line num="592" count="0" type="stmt"/>
            <line num="593" count="0" type="stmt"/>
            <line num="594" count="0" type="stmt"/>
            <line num="596" count="0" type="stmt"/>
            <line num="597" count="0" type="stmt"/>
            <line num="598" count="0" type="stmt"/>
            <line num="599" count="0" type="stmt"/>
            <line num="600" count="0" type="stmt"/>
            <line num="601" count="0" type="stmt"/>
            <line num="602" count="0" type="stmt"/>
            <line num="603" count="0" type="stmt"/>
            <line num="604" count="0" type="stmt"/>
            <line num="605" count="0" type="stmt"/>
            <line num="606" count="0" type="stmt"/>
            <line num="607" count="0" type="stmt"/>
            <line num="608" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="importFromStatement() : void" num="611" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="613" count="0" type="stmt"/>
            <line num="614" count="0" type="stmt"/>
            <line num="615" count="0" type="stmt"/>
            <line num="616" count="0" type="stmt"/>
            <line num="617" count="0" type="stmt"/>
            <line num="618" count="0" type="stmt"/>
            <line num="619" count="0" type="stmt"/>
            <line num="620" count="0" type="stmt"/>
            <line num="621" count="0" type="stmt"/>
            <line num="622" count="0" type="stmt"/>
            <line num="623" count="0" type="stmt"/>
            <line num="624" count="0" type="stmt"/>
            <line num="625" count="0" type="stmt"/>
            <line num="626" count="0" type="stmt"/>
            <line num="627" count="0" type="stmt"/>
            <line num="628" count="0" type="stmt"/>
            <line num="629" count="0" type="stmt"/>
            <line num="630" count="0" type="stmt"/>
            <line num="631" count="0" type="stmt"/>
            <line num="632" count="0" type="stmt"/>
            <line num="635" count="0" type="stmt"/>
            <line num="636" count="0" type="stmt"/>
            <line num="637" count="0" type="stmt"/>
            <line num="638" count="0" type="stmt"/>
            <line num="639" count="0" type="stmt"/>
            <line num="640" count="0" type="stmt"/>
            <line num="641" count="0" type="stmt"/>
            <line num="642" count="0" type="stmt"/>
            <line num="643" count="0" type="stmt"/>
            <line num="646" count="0" type="stmt"/>
            <line num="647" count="0" type="stmt"/>
            <line num="648" count="0" type="stmt"/>
            <line num="649" count="0" type="stmt"/>
            <line num="650" count="0" type="stmt"/>
            <line num="651" count="0" type="stmt"/>
            <line num="652" count="0" type="stmt"/>
            <line num="653" count="0" type="stmt"/>
            <line num="655" count="0" type="stmt"/>
            <line num="656" count="0" type="stmt"/>
            <line num="657" count="0" type="stmt"/>
            <line num="658" count="0" type="stmt"/>
            <line num="659" count="0" type="stmt"/>
            <line num="660" count="0" type="stmt"/>
            <line num="661" count="0" type="stmt"/>
            <line num="663" count="0" type="stmt"/>
            <line num="664" count="0" type="stmt"/>
            <line num="665" count="0" type="stmt"/>
            <line num="666" count="0" type="stmt"/>
            <line num="667" count="0" type="stmt"/>
            <line num="668" count="0" type="stmt"/>
            <line num="669" count="0" type="stmt"/>
            <line num="670" count="0" type="stmt"/>
            <line num="671" count="0" type="stmt"/>
            <line num="673" count="0" type="stmt"/>
            <line num="674" count="0" type="stmt"/>
            <line num="675" count="0" type="stmt"/>
            <line num="676" count="0" type="stmt"/>
            <line num="677" count="0" type="stmt"/>
            <line num="678" count="0" type="stmt"/>
            <line num="679" count="0" type="stmt"/>
            <line num="680" count="0" type="stmt"/>
            <line num="681" count="0" type="stmt"/>
            <line num="682" count="0" type="stmt"/>
            <line num="683" count="0" type="stmt"/>
            <line num="684" count="0" type="stmt"/>
            <line num="686" count="0" type="stmt"/>
            <line num="687" count="0" type="stmt"/>
            <line num="688" count="0" type="stmt"/>
            <line num="689" count="0" type="stmt"/>
            <line num="691" count="0" type="stmt"/>
            <line num="692" count="0" type="stmt"/>
            <line num="693" count="0" type="stmt"/>
            <line num="694" count="0" type="stmt"/>
            <line num="695" count="0" type="stmt"/>
            <line num="696" count="0" type="stmt"/>
            <line num="697" count="0" type="stmt"/>
            <line num="698" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="globalStatement() : void" num="701" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="703" count="0" type="stmt"/>
            <line num="704" count="0" type="stmt"/>
            <line num="705" count="0" type="stmt"/>
            <line num="706" count="0" type="stmt"/>
            <line num="707" count="0" type="stmt"/>
            <line num="708" count="0" type="stmt"/>
            <line num="709" count="0" type="stmt"/>
            <line num="710" count="0" type="stmt"/>
            <line num="712" count="0" type="stmt"/>
            <line num="713" count="0" type="stmt"/>
            <line num="714" count="0" type="stmt"/>
            <line num="715" count="0" type="stmt"/>
            <line num="716" count="0" type="stmt"/>
            <line num="717" count="0" type="stmt"/>
            <line num="718" count="0" type="stmt"/>
            <line num="719" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="nonlocalStatement() : void" num="722" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="724" count="0" type="stmt"/>
            <line num="725" count="0" type="stmt"/>
            <line num="726" count="0" type="stmt"/>
            <line num="727" count="0" type="stmt"/>
            <line num="728" count="0" type="stmt"/>
            <line num="729" count="0" type="stmt"/>
            <line num="730" count="0" type="stmt"/>
            <line num="731" count="0" type="stmt"/>
            <line num="733" count="0" type="stmt"/>
            <line num="734" count="0" type="stmt"/>
            <line num="735" count="0" type="stmt"/>
            <line num="736" count="0" type="stmt"/>
            <line num="737" count="0" type="stmt"/>
            <line num="738" count="0" type="stmt"/>
            <line num="739" count="0" type="stmt"/>
            <line num="740" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="funcdef_statement() : void" num="743" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="745" count="0" type="stmt"/>
            <line num="746" count="0" type="stmt"/>
            <line num="747" count="0" type="stmt"/>
            <line num="748" count="0" type="stmt"/>
            <line num="749" count="0" type="stmt"/>
            <line num="750" count="0" type="stmt"/>
            <line num="751" count="0" type="stmt"/>
            <line num="752" count="0" type="stmt"/>
            <line num="753" count="0" type="stmt"/>
            <line num="754" count="0" type="stmt"/>
            <line num="755" count="0" type="stmt"/>
            <line num="756" count="0" type="stmt"/>
            <line num="757" count="0" type="stmt"/>
            <line num="758" count="0" type="stmt"/>
            <line num="759" count="0" type="stmt"/>
            <line num="760" count="0" type="stmt"/>
            <line num="761" count="0" type="stmt"/>
            <line num="762" count="0" type="stmt"/>
            <line num="764" count="0" type="stmt"/>
            <line num="765" count="0" type="stmt"/>
            <line num="767" count="0" type="stmt"/>
            <line num="768" count="0" type="stmt"/>
            <line num="770" count="0" type="stmt"/>
            <line num="771" count="0" type="stmt"/>
            <line num="772" count="0" type="stmt"/>
            <line num="773" count="0" type="stmt"/>
            <line num="775" count="0" type="stmt"/>
            <line num="776" count="0" type="stmt"/>
            <line num="777" count="0" type="stmt"/>
            <line num="778" count="0" type="stmt"/>
            <line num="779" count="0" type="stmt"/>
            <line num="780" count="0" type="stmt"/>
            <line num="781" count="0" type="stmt"/>
            <line num="782" count="0" type="stmt"/>
            <line num="783" count="0" type="stmt"/>
            <line num="785" count="0" type="stmt"/>
            <line num="786" count="0" type="stmt"/>
            <line num="787" count="0" type="stmt"/>
            <line num="788" count="0" type="stmt"/>
            <line num="789" count="0" type="stmt"/>
            <line num="790" count="0" type="stmt"/>
            <line num="791" count="0" type="stmt"/>
            <line num="792" count="0" type="stmt"/>
            <line num="794" count="0" type="stmt"/>
            <line num="795" count="0" type="stmt"/>
            <line num="797" count="0" type="stmt"/>
            <line num="798" count="0" type="stmt"/>
            <line num="799" count="0" type="stmt"/>
            <line num="800" count="0" type="stmt"/>
            <line num="801" count="0" type="stmt"/>
            <line num="802" count="0" type="stmt"/>
            <line num="803" count="0" type="stmt"/>
            <line num="804" count="0" type="stmt"/>
            <line num="805" count="0" type="stmt"/>
            <line num="806" count="0" type="stmt"/>
            <line num="807" count="0" type="stmt"/>
            <line num="808" count="0" type="stmt"/>
            <line num="809" count="0" type="stmt"/>
            <line num="811" count="0" type="stmt"/>
            <line num="812" count="0" type="stmt"/>
            <line num="813" count="0" type="stmt"/>
            <line num="814" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="814" type="cond"/>
            <line num="815" count="0" type="stmt"/>
            <line num="816" count="0" type="stmt"/>
            <line num="817" count="0" type="stmt"/>
            <line num="818" count="0" type="stmt"/>
            <line num="820" count="0" type="stmt"/>
            <line num="821" count="0" type="stmt"/>
            <line num="822" count="0" type="stmt"/>
            <line num="823" count="0" type="stmt"/>
            <line num="824" count="0" type="stmt"/>
            <line num="825" count="0" type="stmt"/>
            <line num="826" count="0" type="stmt"/>
            <line num="827" count="0" type="stmt"/>
            <line num="829" count="0" type="stmt"/>
            <line num="830" count="0" type="stmt"/>
            <line num="831" count="0" type="stmt"/>
            <line num="832" count="0" type="stmt"/>
            <line num="833" count="0" type="stmt"/>
            <line num="834" count="0" type="stmt"/>
            <line num="835" count="0" type="stmt"/>
            <line num="836" count="0" type="stmt"/>
            <line num="837" count="0" type="stmt"/>
            <line num="839" count="0" type="stmt"/>
            <line num="842" count="0" type="stmt"/>
            <line num="845" count="0" type="stmt"/>
            <line num="847" count="0" type="stmt"/>
            <line num="848" count="0" type="stmt"/>
            <line num="849" count="0" type="stmt"/>
            <line num="850" count="0" type="stmt"/>
            <line num="852" count="0" type="stmt"/>
            <line num="853" count="0" type="stmt"/>
            <line num="854" count="0" type="stmt"/>
            <line num="856" count="0" type="stmt"/>
            <line num="857" count="0" type="stmt"/>
            <line num="858" count="0" type="stmt"/>
            <line num="859" count="0" type="stmt"/>
            <line num="860" count="0" type="stmt"/>
            <line num="861" count="0" type="stmt"/>
            <line num="862" count="0" type="stmt"/>
            <line num="863" count="0" type="stmt"/>
            <line num="864" count="0" type="stmt"/>
            <line num="865" count="0" type="stmt"/>
            <line num="866" count="0" type="stmt"/>
            <line num="867" count="0" type="stmt"/>
            <line num="868" count="0" type="stmt"/>
            <line num="869" count="0" type="stmt"/>
            <line num="870" count="0" type="stmt"/>
            <line num="871" count="0" type="stmt"/>
            <line num="872" count="0" type="stmt"/>
            <line num="873" count="0" type="stmt"/>
            <line num="874" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="funcDef(String) : FunctionDef" num="877" count="0" type="method"/>
            <line num="878" count="0" type="stmt"/>
            <line num="879" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="classdef_statement() : void" num="882" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="884" count="0" type="stmt"/>
            <line num="885" count="0" type="stmt"/>
            <line num="886" count="0" type="stmt"/>
            <line num="887" count="0" type="stmt"/>
            <line num="888" count="0" type="stmt"/>
            <line num="889" count="0" type="stmt"/>
            <line num="890" count="0" type="stmt"/>
            <line num="891" count="0" type="stmt"/>
            <line num="892" count="0" type="stmt"/>
            <line num="893" count="0" type="stmt"/>
            <line num="894" count="0" type="stmt"/>
            <line num="895" count="0" type="stmt"/>
            <line num="896" count="0" type="stmt"/>
            <line num="897" count="0" type="stmt"/>
            <line num="898" count="0" type="stmt"/>
            <line num="899" count="0" type="stmt"/>
            <line num="901" count="0" type="stmt"/>
            <line num="902" count="0" type="stmt"/>
            <line num="903" count="0" type="stmt"/>
            <line num="904" count="0" type="stmt"/>
            <line num="906" count="0" type="stmt"/>
            <line num="907" count="0" type="stmt"/>
            <line num="908" count="0" type="stmt"/>
            <line num="909" count="0" type="stmt"/>
            <line num="911" count="0" type="stmt"/>
            <line num="912" count="0" type="stmt"/>
            <line num="913" count="0" type="stmt"/>
            <line num="914" count="0" type="stmt"/>
            <line num="915" count="0" type="stmt"/>
            <line num="917" count="0" type="stmt"/>
            <line num="918" count="0" type="stmt"/>
            <line num="919" count="0" type="stmt"/>
            <line num="920" count="0" type="stmt"/>
            <line num="922" count="0" type="stmt"/>
            <line num="923" count="0" type="stmt"/>
            <line num="924" count="0" type="stmt"/>
            <line num="925" count="0" type="stmt"/>
            <line num="927" count="0" type="stmt"/>
            <line num="930" count="0" type="stmt"/>
            <line num="931" count="0" type="stmt"/>
            <line num="932" count="0" type="stmt"/>
            <line num="933" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="for_statement() : void" num="936" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="938" count="0" type="stmt"/>
            <line num="939" count="0" type="stmt"/>
            <line num="940" count="0" type="stmt"/>
            <line num="941" count="0" type="stmt"/>
            <line num="942" count="0" type="stmt"/>
            <line num="943" count="0" type="stmt"/>
            <line num="944" count="0" type="stmt"/>
            <line num="945" count="0" type="stmt"/>
            <line num="946" count="0" type="stmt"/>
            <line num="947" count="0" type="stmt"/>
            <line num="948" count="0" type="stmt"/>
            <line num="949" count="0" type="stmt"/>
            <line num="950" count="0" type="stmt"/>
            <line num="951" count="0" type="stmt"/>
            <line num="952" count="0" type="stmt"/>
            <line num="953" count="0" type="stmt"/>
            <line num="954" count="0" type="stmt"/>
            <line num="956" count="0" type="stmt"/>
            <line num="957" count="0" type="stmt"/>
            <line num="958" count="0" type="stmt"/>
            <line num="959" count="0" type="stmt"/>
            <line num="960" count="0" type="stmt"/>
            <line num="961" count="0" type="stmt"/>
            <line num="962" count="0" type="stmt"/>
            <line num="963" count="0" type="stmt"/>
            <line num="964" count="0" type="stmt"/>
            <line num="965" count="0" type="stmt"/>
            <line num="966" count="0" type="stmt"/>
            <line num="967" count="0" type="stmt"/>
            <line num="968" count="0" type="stmt"/>
            <line num="969" count="0" type="stmt"/>
            <line num="971" count="0" type="stmt"/>
            <line num="972" count="0" type="stmt"/>
            <line num="973" count="0" type="stmt"/>
            <line num="974" count="0" type="stmt"/>
            <line num="975" count="0" type="stmt"/>
            <line num="976" count="0" type="stmt"/>
            <line num="977" count="0" type="stmt"/>
            <line num="978" count="0" type="stmt"/>
            <line num="979" count="0" type="stmt"/>
            <line num="980" count="0" type="stmt"/>
            <line num="981" count="0" type="stmt"/>
            <line num="982" count="0" type="stmt"/>
            <line num="983" count="0" type="stmt"/>
            <line num="984" count="0" type="stmt"/>
            <line num="985" count="0" type="stmt"/>
            <line num="987" count="0" type="stmt"/>
            <line num="988" count="0" type="stmt"/>
            <line num="989" count="0" type="stmt"/>
            <line num="990" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="while_statement() : void" num="993" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="995" count="0" type="stmt"/>
            <line num="996" count="0" type="stmt"/>
            <line num="997" count="0" type="stmt"/>
            <line num="998" count="0" type="stmt"/>
            <line num="999" count="0" type="stmt"/>
            <line num="1000" count="0" type="stmt"/>
            <line num="1001" count="0" type="stmt"/>
            <line num="1002" count="0" type="stmt"/>
            <line num="1003" count="0" type="stmt"/>
            <line num="1004" count="0" type="stmt"/>
            <line num="1005" count="0" type="stmt"/>
            <line num="1006" count="0" type="stmt"/>
            <line num="1007" count="0" type="stmt"/>
            <line num="1008" count="0" type="stmt"/>
            <line num="1010" count="0" type="stmt"/>
            <line num="1011" count="0" type="stmt"/>
            <line num="1012" count="0" type="stmt"/>
            <line num="1013" count="0" type="stmt"/>
            <line num="1014" count="0" type="stmt"/>
            <line num="1015" count="0" type="stmt"/>
            <line num="1016" count="0" type="stmt"/>
            <line num="1017" count="0" type="stmt"/>
            <line num="1018" count="0" type="stmt"/>
            <line num="1019" count="0" type="stmt"/>
            <line num="1020" count="0" type="stmt"/>
            <line num="1021" count="0" type="stmt"/>
            <line num="1022" count="0" type="stmt"/>
            <line num="1024" count="0" type="stmt"/>
            <line num="1025" count="0" type="stmt"/>
            <line num="1026" count="0" type="stmt"/>
            <line num="1027" count="0" type="stmt"/>
            <line num="1028" count="0" type="stmt"/>
            <line num="1029" count="0" type="stmt"/>
            <line num="1030" count="0" type="stmt"/>
            <line num="1031" count="0" type="stmt"/>
            <line num="1032" count="0" type="stmt"/>
            <line num="1033" count="0" type="stmt"/>
            <line num="1034" count="0" type="stmt"/>
            <line num="1035" count="0" type="stmt"/>
            <line num="1036" count="0" type="stmt"/>
            <line num="1037" count="0" type="stmt"/>
            <line num="1039" count="0" type="stmt"/>
            <line num="1040" count="0" type="stmt"/>
            <line num="1041" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="expression_statement() : void" num="1044" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="1046" count="1" type="stmt"/>
            <line num="1047" count="1" type="stmt"/>
            <line num="1048" count="1" type="stmt"/>
            <line num="1049" count="1" type="stmt"/>
            <line num="1050" count="1" type="stmt"/>
            <line num="1051" count="1" type="stmt"/>
            <line num="1053" count="1" type="stmt"/>
            <line num="1054" count="1" type="stmt"/>
            <line num="1055" count="1" type="stmt"/>
            <line num="1056" count="1" type="stmt"/>
            <line num="1057" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="assignement_statement() : void" num="1060" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="1062" count="0" type="stmt"/>
            <line num="1063" count="0" type="stmt"/>
            <line num="1064" count="0" type="stmt"/>
            <line num="1065" count="0" type="stmt"/>
            <line num="1066" count="0" type="stmt"/>
            <line num="1067" count="0" type="stmt"/>
            <line num="1068" count="0" type="stmt"/>
            <line num="1069" count="0" type="stmt"/>
            <line num="1070" count="0" type="stmt"/>
            <line num="1071" count="0" type="stmt"/>
            <line num="1072" count="0" type="stmt"/>
            <line num="1074" count="0" type="stmt"/>
            <line num="1075" count="0" type="stmt"/>
            <line num="1076" count="0" type="stmt"/>
            <line num="1077" count="0" type="stmt"/>
            <line num="1078" count="0" type="stmt"/>
            <line num="1079" count="0" type="stmt"/>
            <line num="1080" count="0" type="stmt"/>
            <line num="1081" count="0" type="stmt"/>
            <line num="1082" count="0" type="stmt"/>
            <line num="1083" count="0" type="stmt"/>
            <line num="1084" count="0" type="stmt"/>
            <line num="1086" count="0" type="stmt"/>
            <line num="1087" count="0" type="stmt"/>
            <line num="1088" count="0" type="stmt"/>
            <line num="1089" count="0" type="stmt"/>
            <line num="1090" count="0" type="stmt"/>
            <line num="1091" count="0" type="stmt"/>
            <line num="1092" count="0" type="stmt"/>
            <line num="1093" count="0" type="stmt"/>
            <line num="1094" count="0" type="stmt"/>
            <line num="1095" count="0" type="stmt"/>
            <line num="1096" count="0" type="stmt"/>
            <line num="1097" count="0" type="stmt"/>
            <line num="1099" count="0" type="stmt"/>
            <line num="1100" count="0" type="stmt"/>
            <line num="1101" count="0" type="stmt"/>
            <line num="1102" count="0" type="stmt"/>
            <line num="1103" count="0" type="stmt"/>
            <line num="1104" count="0" type="stmt"/>
            <line num="1105" count="0" type="stmt"/>
            <line num="1106" count="0" type="stmt"/>
            <line num="1107" count="0" type="stmt"/>
            <line num="1108" count="0" type="stmt"/>
            <line num="1109" count="0" type="stmt"/>
            <line num="1110" count="0" type="stmt"/>
            <line num="1111" count="0" type="stmt"/>
            <line num="1113" count="0" type="stmt"/>
            <line num="1114" count="0" type="stmt"/>
            <line num="1115" count="0" type="stmt"/>
            <line num="1116" count="0" type="stmt"/>
            <line num="1117" count="0" type="stmt"/>
            <line num="1118" count="0" type="stmt"/>
            <line num="1119" count="0" type="stmt"/>
            <line num="1121" count="0" type="stmt"/>
            <line num="1122" count="0" type="stmt"/>
            <line num="1123" count="0" type="stmt"/>
            <line num="1124" count="0" type="stmt"/>
            <line num="1125" count="0" type="stmt"/>
            <line num="1126" count="0" type="stmt"/>
            <line num="1127" count="0" type="stmt"/>
            <line num="1130" count="0" type="stmt"/>
            <line num="1131" count="0" type="stmt"/>
            <line num="1132" count="0" type="stmt"/>
            <line num="1133" count="0" type="stmt"/>
            <line num="1134" count="0" type="stmt"/>
            <line num="1135" count="0" type="stmt"/>
            <line num="1136" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="annotated_assignment() : void" num="1139" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="1141" count="0" type="stmt"/>
            <line num="1142" count="0" type="stmt"/>
            <line num="1143" count="0" type="stmt"/>
            <line num="1144" count="0" type="stmt"/>
            <line num="1145" count="0" type="stmt"/>
            <line num="1146" count="0" type="stmt"/>
            <line num="1147" count="0" type="stmt"/>
            <line num="1148" count="0" type="stmt"/>
            <line num="1149" count="0" type="stmt"/>
            <line num="1150" count="0" type="stmt"/>
            <line num="1151" count="0" type="stmt"/>
            <line num="1152" count="0" type="stmt"/>
            <line num="1153" count="0" type="stmt"/>
            <line num="1154" count="0" type="stmt"/>
            <line num="1155" count="0" type="stmt"/>
            <line num="1157" count="0" type="stmt"/>
            <line num="1158" count="0" type="stmt"/>
            <line num="1159" count="0" type="stmt"/>
            <line num="1160" count="0" type="stmt"/>
            <line num="1161" count="0" type="stmt"/>
            <line num="1162" count="0" type="stmt"/>
            <line num="1163" count="0" type="stmt"/>
            <line num="1164" count="0" type="stmt"/>
            <line num="1165" count="0" type="stmt"/>
            <line num="1166" count="0" type="stmt"/>
            <line num="1167" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="assignement_expression() : void" num="1170" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="1172" count="0" type="stmt"/>
            <line num="1173" count="0" type="stmt"/>
            <line num="1174" count="0" type="stmt"/>
            <line num="1175" count="0" type="stmt"/>
            <line num="1176" count="0" type="stmt"/>
            <line num="1177" count="0" type="stmt"/>
            <line num="1178" count="0" type="stmt"/>
            <line num="1179" count="0" type="stmt"/>
            <line num="1180" count="0" type="stmt"/>
            <line num="1181" count="0" type="stmt"/>
            <line num="1182" count="0" type="stmt"/>
            <line num="1183" count="0" type="stmt"/>
            <line num="1185" count="0" type="stmt"/>
            <line num="1187" count="0" type="stmt"/>
            <line num="1188" count="0" type="stmt"/>
            <line num="1190" count="0" type="stmt"/>
            <line num="1191" count="0" type="stmt"/>
            <line num="1192" count="0" type="stmt"/>
            <line num="1194" count="0" type="stmt"/>
            <line num="1196" count="0" type="stmt"/>
            <line num="1197" count="0" type="stmt"/>
            <line num="1198" count="0" type="stmt"/>
            <line num="1200" count="0" type="stmt"/>
            <line num="1201" count="0" type="stmt"/>
            <line num="1202" count="0" type="stmt"/>
            <line num="1203" count="0" type="stmt"/>
            <line num="1204" count="0" type="stmt"/>
            <line num="1205" count="0" type="stmt"/>
            <line num="1207" count="0" type="stmt"/>
            <line num="1209" count="0" type="stmt"/>
            <line num="1210" count="0" type="stmt"/>
            <line num="1211" count="0" type="stmt"/>
            <line num="1212" count="0" type="stmt"/>
            <line num="1213" count="0" type="stmt"/>
            <line num="1214" count="0" type="stmt"/>
            <line num="1215" count="0" type="stmt"/>
            <line num="1216" count="0" type="stmt"/>
            <line num="1217" count="0" type="stmt"/>
            <line num="1220" count="0" type="stmt"/>
            <line num="1221" count="0" type="stmt"/>
            <line num="1222" count="0" type="stmt"/>
            <line num="1223" count="0" type="stmt"/>
            <line num="1224" count="0" type="stmt"/>
            <line num="1226" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compound_assignement_statement() : void" num="1230" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="1232" count="0" type="stmt"/>
            <line num="1233" count="0" type="stmt"/>
            <line num="1234" count="0" type="stmt"/>
            <line num="1235" count="0" type="stmt"/>
            <line num="1236" count="0" type="stmt"/>
            <line num="1237" count="0" type="stmt"/>
            <line num="1238" count="0" type="stmt"/>
            <line num="1239" count="0" type="stmt"/>
            <line num="1240" count="0" type="stmt"/>
            <line num="1242" count="0" type="stmt"/>
            <line num="1243" count="0" type="stmt"/>
            <line num="1244" count="0" type="stmt"/>
            <line num="1245" count="0" type="stmt"/>
            <line num="1246" count="0" type="stmt"/>
            <line num="1247" count="0" type="stmt"/>
            <line num="1248" count="0" type="stmt"/>
            <line num="1249" count="0" type="stmt"/>
            <line num="1250" count="0" type="stmt"/>
            <line num="1251" count="0" type="stmt"/>
            <line num="1252" count="0" type="stmt"/>
            <line num="1254" count="0" type="stmt"/>
            <line num="1255" count="0" type="stmt"/>
            <line num="1256" count="0" type="stmt"/>
            <line num="1257" count="0" type="stmt"/>
            <line num="1258" count="0" type="stmt"/>
            <line num="1259" count="0" type="stmt"/>
            <line num="1260" count="0" type="stmt"/>
            <line num="1261" count="0" type="stmt"/>
            <line num="1262" count="0" type="stmt"/>
            <line num="1264" count="0" type="stmt"/>
            <line num="1265" count="0" type="stmt"/>
            <line num="1266" count="0" type="stmt"/>
            <line num="1267" count="0" type="stmt"/>
            <line num="1268" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="try_statement() : void" num="1271" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="1273" count="0" type="stmt"/>
            <line num="1274" count="0" type="stmt"/>
            <line num="1275" count="0" type="stmt"/>
            <line num="1276" count="0" type="stmt"/>
            <line num="1277" count="0" type="stmt"/>
            <line num="1278" count="0" type="stmt"/>
            <line num="1279" count="0" type="stmt"/>
            <line num="1280" count="0" type="stmt"/>
            <line num="1281" count="0" type="stmt"/>
            <line num="1282" count="0" type="stmt"/>
            <line num="1283" count="0" type="stmt"/>
            <line num="1284" count="0" type="stmt"/>
            <line num="1285" count="0" type="stmt"/>
            <line num="1286" count="0" type="stmt"/>
            <line num="1287" count="0" type="stmt"/>
            <line num="1290" count="0" type="stmt"/>
            <line num="1291" count="0" type="stmt"/>
            <line num="1292" count="0" type="stmt"/>
            <line num="1293" count="0" type="stmt"/>
            <line num="1294" count="0" type="stmt"/>
            <line num="1295" count="0" type="stmt"/>
            <line num="1296" count="0" type="stmt"/>
            <line num="1298" count="0" type="stmt"/>
            <line num="1299" count="0" type="stmt"/>
            <line num="1300" count="0" type="stmt"/>
            <line num="1301" count="0" type="stmt"/>
            <line num="1302" count="0" type="stmt"/>
            <line num="1303" count="0" type="stmt"/>
            <line num="1304" count="0" type="stmt"/>
            <line num="1305" count="0" type="stmt"/>
            <line num="1306" count="0" type="stmt"/>
            <line num="1307" count="0" type="stmt"/>
            <line num="1308" count="0" type="stmt"/>
            <line num="1310" count="0" type="stmt"/>
            <line num="1311" count="0" type="stmt"/>
            <line num="1312" count="0" type="stmt"/>
            <line num="1313" count="0" type="stmt"/>
            <line num="1314" count="0" type="stmt"/>
            <line num="1315" count="0" type="stmt"/>
            <line num="1316" count="0" type="stmt"/>
            <line num="1317" count="0" type="stmt"/>
            <line num="1318" count="0" type="stmt"/>
            <line num="1319" count="0" type="stmt"/>
            <line num="1321" count="0" type="stmt"/>
            <line num="1322" count="0" type="stmt"/>
            <line num="1323" count="0" type="stmt"/>
            <line num="1324" count="0" type="stmt"/>
            <line num="1325" count="0" type="stmt"/>
            <line num="1326" count="0" type="stmt"/>
            <line num="1327" count="0" type="stmt"/>
            <line num="1328" count="0" type="stmt"/>
            <line num="1329" count="0" type="stmt"/>
            <line num="1331" count="0" type="stmt"/>
            <line num="1332" count="0" type="stmt"/>
            <line num="1333" count="0" type="stmt"/>
            <line num="1334" count="0" type="stmt"/>
            <line num="1335" count="0" type="stmt"/>
            <line num="1336" count="0" type="stmt"/>
            <line num="1337" count="0" type="stmt"/>
            <line num="1338" count="0" type="stmt"/>
            <line num="1339" count="0" type="stmt"/>
            <line num="1342" count="0" type="stmt"/>
            <line num="1344" count="0" type="stmt"/>
            <line num="1345" count="0" type="stmt"/>
            <line num="1346" count="0" type="stmt"/>
            <line num="1347" count="0" type="stmt"/>
            <line num="1348" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="async_statement() : void" num="1352" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="1354" count="0" type="stmt"/>
            <line num="1355" count="0" type="stmt"/>
            <line num="1356" count="0" type="stmt"/>
            <line num="1357" count="0" type="stmt"/>
            <line num="1358" count="0" type="stmt"/>
            <line num="1359" count="0" type="stmt"/>
            <line num="1360" count="0" type="stmt"/>
            <line num="1361" count="0" type="stmt"/>
            <line num="1362" count="0" type="stmt"/>
            <line num="1363" count="0" type="stmt"/>
            <line num="1364" count="0" type="stmt"/>
            <line num="1366" count="0" type="stmt"/>
            <line num="1367" count="0" type="stmt"/>
            <line num="1368" count="0" type="stmt"/>
            <line num="1369" count="0" type="stmt"/>
            <line num="1370" count="0" type="stmt"/>
            <line num="1371" count="0" type="stmt"/>
            <line num="1372" count="0" type="stmt"/>
            <line num="1373" count="0" type="stmt"/>
            <line num="1374" count="0" type="stmt"/>
            <line num="1375" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="with_statement() : void" num="1378" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="1380" count="0" type="stmt"/>
            <line num="1381" count="0" type="stmt"/>
            <line num="1382" count="0" type="stmt"/>
            <line num="1383" count="0" type="stmt"/>
            <line num="1384" count="0" type="stmt"/>
            <line num="1385" count="0" type="stmt"/>
            <line num="1386" count="0" type="stmt"/>
            <line num="1387" count="0" type="stmt"/>
            <line num="1388" count="0" type="stmt"/>
            <line num="1389" count="0" type="stmt"/>
            <line num="1390" count="0" type="stmt"/>
            <line num="1391" count="0" type="stmt"/>
            <line num="1392" count="0" type="stmt"/>
            <line num="1393" count="0" type="stmt"/>
            <line num="1396" count="0" type="stmt"/>
            <line num="1397" count="0" type="stmt"/>
            <line num="1398" count="0" type="stmt"/>
            <line num="1399" count="0" type="stmt"/>
            <line num="1400" count="0" type="stmt"/>
            <line num="1401" count="0" type="stmt"/>
            <line num="1402" count="0" type="stmt"/>
            <line num="1403" count="0" type="stmt"/>
            <line num="1404" count="0" type="stmt"/>
            <line num="1405" count="0" type="stmt"/>
            <line num="1406" count="0" type="stmt"/>
            <line num="1407" count="0" type="stmt"/>
            <line num="1408" count="0" type="stmt"/>
            <line num="1409" count="0" type="stmt"/>
            <line num="1410" count="0" type="stmt"/>
            <line num="1411" count="0" type="stmt"/>
            <line num="1412" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="verify_expected_expression() : void" num="1415" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="1417" count="0" type="stmt"/>
            <line num="1418" count="0" type="stmt"/>
            <line num="1419" count="0" type="stmt"/>
            <line num="1420" count="0" type="stmt"/>
            <line num="1421" count="0" type="stmt"/>
            <line num="1423" count="0" type="stmt"/>
            <line num="1424" count="0" type="stmt"/>
            <line num="1425" count="0" type="stmt"/>
            <line num="1426" count="0" type="stmt"/>
            <line num="1427" count="0" type="stmt"/>
            <line num="1428" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="call_expression() : void" num="1432" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="1434" count="0" type="stmt"/>
            <line num="1435" count="0" type="stmt"/>
            <line num="1436" count="0" type="stmt"/>
            <line num="1437" count="0" type="stmt"/>
            <line num="1438" count="0" type="stmt"/>
            <line num="1439" count="0" type="stmt"/>
            <line num="1440" count="0" type="stmt"/>
            <line num="1441" count="0" type="stmt"/>
            <line num="1442" count="0" type="stmt"/>
            <line num="1443" count="0" type="stmt"/>
            <line num="1444" count="0" type="stmt"/>
            <line num="1445" count="0" type="stmt"/>
            <line num="1447" count="0" type="stmt"/>
            <line num="1448" count="0" type="stmt"/>
            <line num="1449" count="0" type="stmt"/>
            <line num="1450" count="0" type="stmt"/>
            <line num="1451" count="0" type="stmt"/>
            <line num="1452" count="0" type="stmt"/>
            <line num="1453" count="0" type="stmt"/>
            <line num="1454" count="0" type="stmt"/>
            <line num="1455" count="0" type="stmt"/>
            <line num="1456" count="0" type="stmt"/>
            <line num="1457" count="0" type="stmt"/>
            <line num="1458" count="0" type="stmt"/>
            <line num="1459" count="0" type="stmt"/>
            <line num="1460" count="0" type="stmt"/>
            <line num="1461" count="0" type="stmt"/>
            <line num="1463" count="0" type="stmt"/>
            <line num="1464" count="0" type="stmt"/>
            <line num="1465" count="0" type="stmt"/>
            <line num="1466" count="0" type="stmt"/>
            <line num="1467" count="0" type="stmt"/>
            <line num="1468" count="0" type="stmt"/>
            <line num="1469" count="0" type="stmt"/>
            <line num="1470" count="0" type="stmt"/>
            <line num="1471" count="0" type="stmt"/>
            <line num="1473" count="0" type="stmt"/>
            <line num="1474" count="0" type="stmt"/>
            <line num="1475" count="0" type="stmt"/>
            <line num="1476" count="0" type="stmt"/>
            <line num="1477" count="0" type="stmt"/>
            <line num="1478" count="0" type="stmt"/>
            <line num="1479" count="0" type="stmt"/>
            <line num="1480" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertCallExpression(String) : void" num="1483" count="0" type="method"/>
            <line num="1484" count="0" type="stmt"/>
            <line num="1485" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="combinations_with_call_expressions() : void" num="1488" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="1490" count="0" type="stmt"/>
            <line num="1492" count="0" type="stmt"/>
            <line num="1493" count="0" type="stmt"/>
            <line num="1494" count="0" type="stmt"/>
            <line num="1495" count="0" type="stmt"/>
            <line num="1496" count="0" type="stmt"/>
            <line num="1497" count="0" type="stmt"/>
            <line num="1498" count="0" type="stmt"/>
            <line num="1500" count="0" type="stmt"/>
            <line num="1501" count="0" type="stmt"/>
            <line num="1503" count="0" type="stmt"/>
            <line num="1504" count="0" type="stmt"/>
            <line num="1505" count="0" type="stmt"/>
            <line num="1506" count="0" type="stmt"/>
            <line num="1507" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="attributeRef_expression() : void" num="1510" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="1512" count="0" type="stmt"/>
            <line num="1513" count="0" type="stmt"/>
            <line num="1514" count="0" type="stmt"/>
            <line num="1515" count="0" type="stmt"/>
            <line num="1516" count="0" type="stmt"/>
            <line num="1517" count="0" type="stmt"/>
            <line num="1518" count="0" type="stmt"/>
            <line num="1519" count="0" type="stmt"/>
            <line num="1520" count="0" type="stmt"/>
            <line num="1521" count="0" type="stmt"/>
            <line num="1523" count="0" type="stmt"/>
            <line num="1524" count="0" type="stmt"/>
            <line num="1525" count="0" type="stmt"/>
            <line num="1526" count="0" type="stmt"/>
            <line num="1527" count="0" type="stmt"/>
            <line num="1528" count="0" type="stmt"/>
            <line num="1529" count="0" type="stmt"/>
            <line num="1530" count="0" type="stmt"/>
            <line num="1531" count="0" type="stmt"/>
            <line num="1532" count="0" type="stmt"/>
            <line num="1533" count="0" type="stmt"/>
            <line num="1534" count="0" type="stmt"/>
            <line num="1535" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="argument() : void" num="1538" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="1540" count="0" type="stmt"/>
            <line num="1541" count="0" type="stmt"/>
            <line num="1542" count="0" type="stmt"/>
            <line num="1543" count="0" type="stmt"/>
            <line num="1544" count="0" type="stmt"/>
            <line num="1545" count="0" type="stmt"/>
            <line num="1546" count="0" type="stmt"/>
            <line num="1548" count="0" type="stmt"/>
            <line num="1549" count="0" type="stmt"/>
            <line num="1550" count="0" type="stmt"/>
            <line num="1551" count="0" type="stmt"/>
            <line num="1553" count="0" type="stmt"/>
            <line num="1554" count="0" type="stmt"/>
            <line num="1555" count="0" type="stmt"/>
            <line num="1556" count="0" type="stmt"/>
            <line num="1557" count="0" type="stmt"/>
            <line num="1559" count="0" type="stmt"/>
            <line num="1560" count="0" type="stmt"/>
            <line num="1561" count="0" type="stmt"/>
            <line num="1562" count="0" type="stmt"/>
            <line num="1563" count="0" type="stmt"/>
            <line num="1564" count="0" type="stmt"/>
            <line num="1565" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="binary_expressions() : void" num="1568" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="1570" count="0" type="stmt"/>
            <line num="1572" count="0" type="stmt"/>
            <line num="1573" count="0" type="stmt"/>
            <line num="1574" count="0" type="stmt"/>
            <line num="1575" count="0" type="stmt"/>
            <line num="1576" count="0" type="stmt"/>
            <line num="1577" count="0" type="stmt"/>
            <line num="1579" count="0" type="stmt"/>
            <line num="1580" count="0" type="stmt"/>
            <line num="1581" count="0" type="stmt"/>
            <line num="1582" count="0" type="stmt"/>
            <line num="1583" count="0" type="stmt"/>
            <line num="1584" count="0" type="stmt"/>
            <line num="1585" count="0" type="stmt"/>
            <line num="1586" count="0" type="stmt"/>
            <line num="1588" count="0" type="stmt"/>
            <line num="1589" count="0" type="stmt"/>
            <line num="1590" count="0" type="stmt"/>
            <line num="1591" count="0" type="stmt"/>
            <line num="1592" count="0" type="stmt"/>
            <line num="1593" count="0" type="stmt"/>
            <line num="1594" count="0" type="stmt"/>
            <line num="1595" count="0" type="stmt"/>
            <line num="1596" count="0" type="stmt"/>
            <line num="1597" count="0" type="stmt"/>
            <line num="1598" count="0" type="stmt"/>
            <line num="1600" count="0" type="stmt"/>
            <line num="1601" count="0" type="stmt"/>
            <line num="1602" count="0" type="stmt"/>
            <line num="1603" count="0" type="stmt"/>
            <line num="1604" count="0" type="stmt"/>
            <line num="1605" count="0" type="stmt"/>
            <line num="1606" count="0" type="stmt"/>
            <line num="1607" count="0" type="stmt"/>
            <line num="1608" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="binaryExpression(String) : BinaryExpression" num="1611" count="0" type="method"/>
            <line num="1612" count="0" type="stmt"/>
            <line num="1613" count="0" type="stmt"/>
            <line num="1614" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="in_expressions() : void" num="1617" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="1619" count="0" type="stmt"/>
            <line num="1621" count="0" type="stmt"/>
            <line num="1622" count="0" type="stmt"/>
            <line num="1623" count="0" type="stmt"/>
            <line num="1624" count="0" type="stmt"/>
            <line num="1625" count="0" type="stmt"/>
            <line num="1626" count="0" type="stmt"/>
            <line num="1628" count="0" type="stmt"/>
            <line num="1629" count="0" type="stmt"/>
            <line num="1630" count="0" type="stmt"/>
            <line num="1631" count="0" type="stmt"/>
            <line num="1632" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="is_expressions() : void" num="1635" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="1637" count="0" type="stmt"/>
            <line num="1639" count="0" type="stmt"/>
            <line num="1640" count="0" type="stmt"/>
            <line num="1641" count="0" type="stmt"/>
            <line num="1642" count="0" type="stmt"/>
            <line num="1643" count="0" type="stmt"/>
            <line num="1644" count="0" type="stmt"/>
            <line num="1646" count="0" type="stmt"/>
            <line num="1647" count="0" type="stmt"/>
            <line num="1648" count="0" type="stmt"/>
            <line num="1649" count="0" type="stmt"/>
            <line num="1650" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="starred_expression() : void" num="1653" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="1655" count="0" type="stmt"/>
            <line num="1656" count="0" type="stmt"/>
            <line num="1657" count="0" type="stmt"/>
            <line num="1658" count="0" type="stmt"/>
            <line num="1659" count="0" type="stmt"/>
            <line num="1660" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="await_expression() : void" num="1663" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="1665" count="0" type="stmt"/>
            <line num="1666" count="0" type="stmt"/>
            <line num="1667" count="0" type="stmt"/>
            <line num="1668" count="0" type="stmt"/>
            <line num="1669" count="0" type="stmt"/>
            <line num="1670" count="0" type="stmt"/>
            <line num="1672" count="0" type="stmt"/>
            <line num="1673" count="0" type="stmt"/>
            <line num="1674" count="0" type="stmt"/>
            <line num="1675" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subscription_expressions() : void" num="1678" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="1680" count="0" type="stmt"/>
            <line num="1682" count="0" type="stmt"/>
            <line num="1683" count="0" type="stmt"/>
            <line num="1684" count="0" type="stmt"/>
            <line num="1685" count="0" type="stmt"/>
            <line num="1686" count="0" type="stmt"/>
            <line num="1687" count="0" type="stmt"/>
            <line num="1688" count="0" type="stmt"/>
            <line num="1690" count="0" type="stmt"/>
            <line num="1691" count="0" type="stmt"/>
            <line num="1692" count="0" type="stmt"/>
            <line num="1693" count="0" type="stmt"/>
            <line num="1694" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="slice_expressions() : void" num="1698" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="1700" count="0" type="stmt"/>
            <line num="1702" count="0" type="stmt"/>
            <line num="1703" count="0" type="stmt"/>
            <line num="1704" count="0" type="stmt"/>
            <line num="1705" count="0" type="stmt"/>
            <line num="1706" count="0" type="stmt"/>
            <line num="1707" count="0" type="stmt"/>
            <line num="1708" count="0" type="stmt"/>
            <line num="1709" count="0" type="stmt"/>
            <line num="1710" count="0" type="stmt"/>
            <line num="1712" count="0" type="stmt"/>
            <line num="1713" count="0" type="stmt"/>
            <line num="1714" count="0" type="stmt"/>
            <line num="1715" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="qualified_with_slice() : void" num="1718" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="1720" count="0" type="stmt"/>
            <line num="1721" count="0" type="stmt"/>
            <line num="1722" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="slice() : void" num="1725" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="1727" count="0" type="stmt"/>
            <line num="1729" count="0" type="stmt"/>
            <line num="1730" count="0" type="stmt"/>
            <line num="1731" count="0" type="stmt"/>
            <line num="1732" count="0" type="stmt"/>
            <line num="1733" count="0" type="stmt"/>
            <line num="1734" count="0" type="stmt"/>
            <line num="1735" count="0" type="stmt"/>
            <line num="1737" count="0" type="stmt"/>
            <line num="1738" count="0" type="stmt"/>
            <line num="1739" count="0" type="stmt"/>
            <line num="1740" count="0" type="stmt"/>
            <line num="1741" count="0" type="stmt"/>
            <line num="1743" count="0" type="stmt"/>
            <line num="1744" count="0" type="stmt"/>
            <line num="1745" count="0" type="stmt"/>
            <line num="1746" count="0" type="stmt"/>
            <line num="1747" count="0" type="stmt"/>
            <line num="1749" count="0" type="stmt"/>
            <line num="1750" count="0" type="stmt"/>
            <line num="1751" count="0" type="stmt"/>
            <line num="1752" count="0" type="stmt"/>
            <line num="1753" count="0" type="stmt"/>
            <line num="1755" count="0" type="stmt"/>
            <line num="1756" count="0" type="stmt"/>
            <line num="1757" count="0" type="stmt"/>
            <line num="1758" count="0" type="stmt"/>
            <line num="1759" count="0" type="stmt"/>
            <line num="1761" count="0" type="stmt"/>
            <line num="1762" count="0" type="stmt"/>
            <line num="1763" count="0" type="stmt"/>
            <line num="1764" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="lambda_expr() : void" num="1767" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="1769" count="0" type="stmt"/>
            <line num="1770" count="0" type="stmt"/>
            <line num="1771" count="0" type="stmt"/>
            <line num="1772" count="0" type="stmt"/>
            <line num="1773" count="0" type="stmt"/>
            <line num="1774" count="0" type="stmt"/>
            <line num="1775" count="0" type="stmt"/>
            <line num="1778" count="0" type="stmt"/>
            <line num="1779" count="0" type="stmt"/>
            <line num="1780" count="0" type="stmt"/>
            <line num="1782" count="0" type="stmt"/>
            <line num="1783" count="0" type="stmt"/>
            <line num="1784" count="0" type="stmt"/>
            <line num="1785" count="0" type="stmt"/>
            <line num="1786" count="0" type="stmt"/>
            <line num="1789" count="0" type="stmt"/>
            <line num="1790" count="0" type="stmt"/>
            <line num="1791" count="0" type="stmt"/>
            <line num="1792" count="0" type="stmt"/>
            <line num="1793" count="0" type="stmt"/>
            <line num="1794" count="0" type="stmt"/>
            <line num="1797" count="0" type="stmt"/>
            <line num="1798" count="0" type="stmt"/>
            <line num="1799" count="0" type="stmt"/>
            <line num="1800" count="0" type="stmt"/>
            <line num="1801" count="0" type="stmt"/>
            <line num="1802" count="0" type="stmt"/>
            <line num="1805" count="0" type="stmt"/>
            <line num="1806" count="0" type="stmt"/>
            <line num="1807" count="0" type="stmt"/>
            <line num="1808" count="0" type="stmt"/>
            <line num="1809" count="0" type="stmt"/>
            <line num="1810" count="0" type="stmt"/>
            <line num="1811" count="0" type="stmt"/>
            <line num="1812" count="0" type="stmt"/>
            <line num="1814" count="0" type="stmt"/>
            <line num="1815" count="0" type="stmt"/>
            <line num="1816" count="0" type="stmt"/>
            <line num="1818" count="0" type="stmt"/>
            <line num="1819" count="0" type="stmt"/>
            <line num="1820" count="0" type="stmt"/>
            <line num="1821" count="0" type="stmt"/>
            <line num="1823" count="0" type="stmt"/>
            <line num="1824" count="0" type="stmt"/>
            <line num="1825" count="0" type="stmt"/>
            <line num="1826" count="0" type="stmt"/>
            <line num="1827" count="0" type="stmt"/>
            <line num="1828" count="0" type="stmt"/>
            <line num="1829" count="0" type="stmt"/>
            <line num="1830" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="lambda(String) : LambdaExpression" num="1833" count="0" type="method"/>
            <line num="1834" count="0" type="stmt"/>
            <line num="1835" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numeric_literal_expression() : void" num="1838" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="1840" count="0" type="stmt"/>
            <line num="1841" count="0" type="stmt"/>
            <line num="1842" count="0" type="stmt"/>
            <line num="1843" count="0" type="stmt"/>
            <line num="1844" count="0" type="stmt"/>
            <line num="1845" count="0" type="stmt"/>
            <line num="1846" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="testNumericLiteral(String,Long) : void" num="1849" count="0" type="method"/>
            <line num="1850" count="0" type="stmt"/>
            <line num="1851" count="0" type="stmt"/>
            <line num="1852" count="0" type="stmt"/>
            <line num="1853" count="0" type="stmt"/>
            <line num="1854" count="0" type="stmt"/>
            <line num="1855" count="0" type="stmt"/>
            <line num="1856" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="string_literal_expression() : void" num="1859" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="1861" count="0" type="stmt"/>
            <line num="1862" count="0" type="stmt"/>
            <line num="1863" count="0" type="stmt"/>
            <line num="1864" count="0" type="stmt"/>
            <line num="1865" count="0" type="stmt"/>
            <line num="1866" count="0" type="stmt"/>
            <line num="1867" count="0" type="stmt"/>
            <line num="1868" count="0" type="stmt"/>
            <line num="1869" count="0" type="stmt"/>
            <line num="1870" count="0" type="stmt"/>
            <line num="1871" count="0" type="stmt"/>
            <line num="1873" count="0" type="stmt"/>
            <line num="1874" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="string_interpolation() : void" num="1877" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="1879" count="0" type="stmt"/>
            <line num="1880" count="0" type="stmt"/>
            <line num="1881" count="0" type="stmt"/>
            <line num="1882" count="0" type="stmt"/>
            <line num="1884" count="0" type="stmt"/>
            <line num="1885" count="0" type="stmt"/>
            <line num="1886" count="0" type="stmt"/>
            <line num="1887" count="0" type="stmt"/>
            <line num="1888" count="0" type="stmt"/>
            <line num="1889" count="0" type="stmt"/>
            <line num="1891" count="0" type="stmt"/>
            <line num="1892" count="0" type="stmt"/>
            <line num="1893" count="0" type="stmt"/>
            <line num="1894" count="0" type="stmt"/>
            <line num="1895" count="0" type="stmt"/>
            <line num="1896" count="0" type="stmt"/>
            <line num="1898" count="0" type="stmt"/>
            <line num="1900" count="0" type="stmt"/>
            <line num="1901" count="0" type="stmt"/>
            <line num="1902" count="0" type="stmt"/>
            <line num="1903" count="0" type="stmt"/>
            <line num="1904" count="0" type="stmt"/>
            <line num="1905" count="0" type="stmt"/>
            <line num="1906" count="0" type="stmt"/>
            <line num="1907" count="0" type="stmt"/>
            <line num="1908" count="0" type="stmt"/>
            <line num="1909" count="0" type="stmt"/>
            <line num="1910" count="0" type="stmt"/>
            <line num="1911" count="0" type="stmt"/>
            <line num="1912" count="0" type="stmt"/>
            <line num="1915" count="0" type="stmt"/>
            <line num="1916" count="0" type="stmt"/>
            <line num="1917" count="0" type="stmt"/>
            <line num="1918" count="0" type="stmt"/>
            <line num="1919" count="0" type="stmt"/>
            <line num="1920" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="string_interpolation_equal_specifier() : void" num="1923" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="1925" count="0" type="stmt"/>
            <line num="1926" count="0" type="stmt"/>
            <line num="1927" count="0" type="stmt"/>
            <line num="1928" count="0" type="stmt"/>
            <line num="1929" count="0" type="stmt"/>
            <line num="1931" count="0" type="stmt"/>
            <line num="1932" count="0" type="stmt"/>
            <line num="1933" count="0" type="stmt"/>
            <line num="1934" count="0" type="stmt"/>
            <line num="1935" count="0" type="stmt"/>
            <line num="1936" count="0" type="stmt"/>
            <line num="1937" count="0" type="stmt"/>
            <line num="1939" count="0" type="stmt"/>
            <line num="1940" count="0" type="stmt"/>
            <line num="1941" count="0" type="stmt"/>
            <line num="1942" count="0" type="stmt"/>
            <line num="1944" count="0" type="stmt"/>
            <line num="1945" count="0" type="stmt"/>
            <line num="1947" count="0" type="stmt"/>
            <line num="1948" count="0" type="stmt"/>
            <line num="1949" count="0" type="stmt"/>
            <line num="1951" count="0" type="stmt"/>
            <line num="1952" count="0" type="stmt"/>
            <line num="1953" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="string_interpolation_nested_expressions_in_format_specifier() : void" num="1956" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="1958" count="0" type="stmt"/>
            <line num="1959" count="0" type="stmt"/>
            <line num="1960" count="0" type="stmt"/>
            <line num="1961" count="0" type="stmt"/>
            <line num="1962" count="0" type="stmt"/>
            <line num="1964" count="0" type="stmt"/>
            <line num="1965" count="0" type="stmt"/>
            <line num="1966" count="0" type="stmt"/>
            <line num="1968" count="0" type="stmt"/>
            <line num="1969" count="0" type="stmt"/>
            <line num="1970" count="0" type="stmt"/>
            <line num="1971" count="0" type="stmt"/>
            <line num="1972" count="0" type="stmt"/>
            <line num="1973" count="0" type="stmt"/>
            <line num="1974" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="parseInterpolated(String) : FormattedExpression" num="1977" count="0" type="method"/>
            <line num="1978" count="0" type="stmt"/>
            <line num="1979" count="0" type="stmt"/>
            <line num="1980" count="0" type="stmt"/>
            <line num="1981" count="0" type="stmt"/>
            <line num="1982" count="0" type="stmt"/>
            <line num="1983" count="0" type="stmt"/>
            <line num="1984" count="0" type="stmt"/>
            <line num="1985" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertStringLiteral(String,String) : void" num="1988" count="0" type="method"/>
            <line num="1989" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertStringLiteral(String,String,String) : void" num="1992" count="0" type="method"/>
            <line num="1993" count="0" type="stmt"/>
            <line num="1994" count="0" type="stmt"/>
            <line num="1995" count="0" type="stmt"/>
            <line num="1996" count="0" type="stmt"/>
            <line num="1997" count="0" type="stmt"/>
            <line num="1998" count="0" type="stmt"/>
            <line num="1999" count="0" type="stmt"/>
            <line num="2000" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="multiline_string_literal_expression() : void" num="2003" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="2005" count="1" type="stmt"/>
            <line num="2006" count="1" type="stmt"/>
            <line num="2007" count="1" type="stmt"/>
            <line num="2008" count="1" type="stmt"/>
            <line num="2009" count="1" type="stmt"/>
            <line num="2010" count="1" type="stmt"/>
            <line num="2011" count="1" type="stmt"/>
            <line num="2012" count="1" type="stmt"/>
            <line num="2013" count="1" type="stmt"/>
            <line num="2014" count="1" type="stmt"/>
            <line num="2015" count="1" type="stmt"/>
            <line num="2016" count="1" type="stmt"/>
            <line num="2017" count="1" type="stmt"/>
            <line num="2018" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="list_literal() : void" num="2021" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="2023" count="0" type="stmt"/>
            <line num="2024" count="0" type="stmt"/>
            <line num="2025" count="0" type="stmt"/>
            <line num="2026" count="0" type="stmt"/>
            <line num="2027" count="0" type="stmt"/>
            <line num="2028" count="0" type="stmt"/>
            <line num="2029" count="0" type="stmt"/>
            <line num="2030" count="0" type="stmt"/>
            <line num="2031" count="0" type="stmt"/>
            <line num="2032" count="0" type="stmt"/>
            <line num="2033" count="0" type="stmt"/>
            <line num="2034" count="0" type="stmt"/>
            <line num="2035" count="0" type="stmt"/>
            <line num="2036" count="0" type="stmt"/>
            <line num="2037" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="list_comprehension() : void" num="2041" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="2043" count="0" type="stmt"/>
            <line num="2044" count="0" type="stmt"/>
            <line num="2046" count="0" type="stmt"/>
            <line num="2047" count="0" type="stmt"/>
            <line num="2048" count="0" type="stmt"/>
            <line num="2049" count="0" type="stmt"/>
            <line num="2050" count="0" type="stmt"/>
            <line num="2051" count="0" type="stmt"/>
            <line num="2052" count="0" type="stmt"/>
            <line num="2053" count="0" type="stmt"/>
            <line num="2054" count="0" type="stmt"/>
            <line num="2055" count="0" type="stmt"/>
            <line num="2056" count="0" type="stmt"/>
            <line num="2057" count="0" type="stmt"/>
            <line num="2058" count="0" type="stmt"/>
            <line num="2059" count="0" type="stmt"/>
            <line num="2060" count="0" type="stmt"/>
            <line num="2061" count="0" type="stmt"/>
            <line num="2062" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="async_list_comprehension() : void" num="2065" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="2067" count="0" type="stmt"/>
            <line num="2068" count="0" type="stmt"/>
            <line num="2070" count="0" type="stmt"/>
            <line num="2071" count="0" type="stmt"/>
            <line num="2072" count="0" type="stmt"/>
            <line num="2073" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="list_comprehension_with_if() : void" num="2076" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="2078" count="0" type="stmt"/>
            <line num="2079" count="0" type="stmt"/>
            <line num="2081" count="0" type="stmt"/>
            <line num="2082" count="0" type="stmt"/>
            <line num="2083" count="0" type="stmt"/>
            <line num="2084" count="0" type="stmt"/>
            <line num="2085" count="0" type="stmt"/>
            <line num="2086" count="0" type="stmt"/>
            <line num="2087" count="0" type="stmt"/>
            <line num="2088" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="list_comprehension_with_nested_for() : void" num="2091" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="2093" count="0" type="stmt"/>
            <line num="2094" count="0" type="stmt"/>
            <line num="2096" count="0" type="stmt"/>
            <line num="2097" count="0" type="stmt"/>
            <line num="2098" count="0" type="stmt"/>
            <line num="2099" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parenthesized_expression() : void" num="2102" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="2104" count="0" type="stmt"/>
            <line num="2105" count="0" type="stmt"/>
            <line num="2106" count="0" type="stmt"/>
            <line num="2107" count="0" type="stmt"/>
            <line num="2108" count="0" type="stmt"/>
            <line num="2109" count="0" type="stmt"/>
            <line num="2110" count="0" type="stmt"/>
            <line num="2112" count="0" type="stmt"/>
            <line num="2113" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="generator_expression() : void" num="2117" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="2119" count="0" type="stmt"/>
            <line num="2120" count="0" type="stmt"/>
            <line num="2121" count="0" type="stmt"/>
            <line num="2122" count="0" type="stmt"/>
            <line num="2123" count="0" type="stmt"/>
            <line num="2124" count="0" type="stmt"/>
            <line num="2125" count="0" type="stmt"/>
            <line num="2126" count="0" type="stmt"/>
            <line num="2127" count="0" type="stmt"/>
            <line num="2128" count="0" type="stmt"/>
            <line num="2130" count="0" type="stmt"/>
            <line num="2131" count="0" type="stmt"/>
            <line num="2132" count="0" type="stmt"/>
            <line num="2133" count="0" type="stmt"/>
            <line num="2135" count="0" type="stmt"/>
            <line num="2136" count="0" type="stmt"/>
            <line num="2137" count="0" type="stmt"/>
            <line num="2138" count="0" type="stmt"/>
            <line num="2140" count="0" type="stmt"/>
            <line num="2141" count="0" type="stmt"/>
            <line num="2142" count="0" type="stmt"/>
            <line num="2144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="tuples() : void" num="2148" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="2150" count="0" type="stmt"/>
            <line num="2151" count="0" type="stmt"/>
            <line num="2152" count="0" type="stmt"/>
            <line num="2153" count="0" type="stmt"/>
            <line num="2154" count="0" type="stmt"/>
            <line num="2155" count="0" type="stmt"/>
            <line num="2156" count="0" type="stmt"/>
            <line num="2157" count="0" type="stmt"/>
            <line num="2158" count="0" type="stmt"/>
            <line num="2160" count="0" type="stmt"/>
            <line num="2161" count="0" type="stmt"/>
            <line num="2162" count="0" type="stmt"/>
            <line num="2163" count="0" type="stmt"/>
            <line num="2164" count="0" type="stmt"/>
            <line num="2165" count="0" type="stmt"/>
            <line num="2167" count="0" type="stmt"/>
            <line num="2168" count="0" type="stmt"/>
            <line num="2169" count="0" type="stmt"/>
            <line num="2170" count="0" type="stmt"/>
            <line num="2171" count="0" type="stmt"/>
            <line num="2172" count="0" type="stmt"/>
            <line num="2174" count="0" type="stmt"/>
            <line num="2175" count="0" type="stmt"/>
            <line num="2176" count="0" type="stmt"/>
            <line num="2177" count="0" type="stmt"/>
            <line num="2178" count="0" type="stmt"/>
            <line num="2179" count="0" type="stmt"/>
            <line num="2180" count="0" type="stmt"/>
            <line num="2181" count="0" type="stmt"/>
            <line num="2182" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="parseTuple(String) : Tuple" num="2185" count="0" type="method"/>
            <line num="2186" count="0" type="stmt"/>
            <line num="2187" count="0" type="stmt"/>
            <line num="2188" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unary_expression() : void" num="2191" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="2193" count="0" type="stmt"/>
            <line num="2194" count="0" type="stmt"/>
            <line num="2195" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="not() : void" num="2198" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="2200" count="0" type="stmt"/>
            <line num="2201" count="0" type="stmt"/>
            <line num="2202" count="0" type="stmt"/>
            <line num="2203" count="0" type="stmt"/>
            <line num="2204" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="conditional_expression() : void" num="2207" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="2209" count="0" type="stmt"/>
            <line num="2210" count="0" type="stmt"/>
            <line num="2211" count="0" type="stmt"/>
            <line num="2212" count="0" type="stmt"/>
            <line num="2213" count="0" type="stmt"/>
            <line num="2214" count="0" type="stmt"/>
            <line num="2215" count="0" type="stmt"/>
            <line num="2216" count="0" type="stmt"/>
            <line num="2217" count="0" type="stmt"/>
            <line num="2218" count="0" type="stmt"/>
            <line num="2220" count="0" type="stmt"/>
            <line num="2222" count="0" type="stmt"/>
            <line num="2223" count="0" type="stmt"/>
            <line num="2224" count="0" type="stmt"/>
            <line num="2225" count="0" type="stmt"/>
            <line num="2226" count="0" type="stmt"/>
            <line num="2227" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dictionary_literal() : void" num="2230" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="2232" count="0" type="stmt"/>
            <line num="2233" count="0" type="stmt"/>
            <line num="2234" count="0" type="stmt"/>
            <line num="2235" count="0" type="stmt"/>
            <line num="2236" count="0" type="stmt"/>
            <line num="2237" count="0" type="stmt"/>
            <line num="2238" count="0" type="stmt"/>
            <line num="2239" count="0" type="stmt"/>
            <line num="2240" count="0" type="stmt"/>
            <line num="2241" count="0" type="stmt"/>
            <line num="2242" count="0" type="stmt"/>
            <line num="2243" count="0" type="stmt"/>
            <line num="2245" count="0" type="stmt"/>
            <line num="2246" count="0" type="stmt"/>
            <line num="2247" count="0" type="stmt"/>
            <line num="2249" count="0" type="stmt"/>
            <line num="2250" count="0" type="stmt"/>
            <line num="2251" count="0" type="stmt"/>
            <line num="2252" count="0" type="stmt"/>
            <line num="2253" count="0" type="stmt"/>
            <line num="2255" count="0" type="stmt"/>
            <line num="2256" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dict_comprehension() : void" num="2259" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="2261" count="0" type="stmt"/>
            <line num="2262" count="0" type="stmt"/>
            <line num="2264" count="0" type="stmt"/>
            <line num="2265" count="0" type="stmt"/>
            <line num="2266" count="0" type="stmt"/>
            <line num="2267" count="0" type="stmt"/>
            <line num="2268" count="0" type="stmt"/>
            <line num="2269" count="0" type="stmt"/>
            <line num="2270" count="0" type="stmt"/>
            <line num="2271" count="0" type="stmt"/>
            <line num="2272" count="0" type="stmt"/>
            <line num="2273" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set_literal() : void" num="2276" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="2278" count="0" type="stmt"/>
            <line num="2279" count="0" type="stmt"/>
            <line num="2280" count="0" type="stmt"/>
            <line num="2281" count="0" type="stmt"/>
            <line num="2282" count="0" type="stmt"/>
            <line num="2283" count="0" type="stmt"/>
            <line num="2284" count="0" type="stmt"/>
            <line num="2285" count="0" type="stmt"/>
            <line num="2286" count="0" type="stmt"/>
            <line num="2287" count="0" type="stmt"/>
            <line num="2288" count="0" type="stmt"/>
            <line num="2289" count="0" type="stmt"/>
            <line num="2291" count="0" type="stmt"/>
            <line num="2292" count="0" type="stmt"/>
            <line num="2293" count="0" type="stmt"/>
            <line num="2296" count="0" type="stmt"/>
            <line num="2297" count="0" type="stmt"/>
            <line num="2298" count="0" type="stmt"/>
            <line num="2299" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set_comprehension() : void" num="2302" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="2304" count="0" type="stmt"/>
            <line num="2305" count="0" type="stmt"/>
            <line num="2307" count="0" type="stmt"/>
            <line num="2308" count="0" type="stmt"/>
            <line num="2309" count="0" type="stmt"/>
            <line num="2310" count="0" type="stmt"/>
            <line num="2311" count="0" type="stmt"/>
            <line num="2312" count="0" type="stmt"/>
            <line num="2313" count="0" type="stmt"/>
            <line num="2314" count="0" type="stmt"/>
            <line num="2315" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="repr_expression() : void" num="2318" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="2320" count="0" type="stmt"/>
            <line num="2321" count="0" type="stmt"/>
            <line num="2322" count="0" type="stmt"/>
            <line num="2323" count="0" type="stmt"/>
            <line num="2324" count="0" type="stmt"/>
            <line num="2325" count="0" type="stmt"/>
            <line num="2326" count="0" type="stmt"/>
            <line num="2327" count="0" type="stmt"/>
            <line num="2328" count="0" type="stmt"/>
            <line num="2329" count="0" type="stmt"/>
            <line num="2331" count="0" type="stmt"/>
            <line num="2332" count="0" type="stmt"/>
            <line num="2333" count="0" type="stmt"/>
            <line num="2334" count="0" type="stmt"/>
            <line num="2335" count="0" type="stmt"/>
            <line num="2336" count="0" type="stmt"/>
            <line num="2337" count="0" type="stmt"/>
            <line num="2338" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="should_not_require_exponential_time() : void" num="2342" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="2344" count="1" type="stmt"/>
            <line num="2345" count="1" type="stmt"/>
            <line num="2346" count="0" type="stmt"/>
            <line num="2348" count="1" type="stmt"/>
            <line num="2350" count="1" type="stmt"/>
            <line num="2351" count="1" type="stmt"/>
            <line num="2352" count="0" type="stmt"/>
            <line num="2354" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ellipsis_expression() : void" num="2358" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="2360" count="1" type="stmt"/>
            <line num="2361" count="1" type="stmt"/>
            <line num="2362" count="1" type="stmt"/>
            <line num="2363" count="1" type="stmt"/>
            <line num="2364" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="none_expression() : void" num="2367" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="2369" count="1" type="stmt"/>
            <line num="2370" count="1" type="stmt"/>
            <line num="2371" count="1" type="stmt"/>
            <line num="2372" count="1" type="stmt"/>
            <line num="2373" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="variables() : void" num="2376" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="2378" count="0" type="stmt"/>
            <line num="2379" count="0" type="stmt"/>
            <line num="2380" count="0" type="stmt"/>
            <line num="2382" count="0" type="stmt"/>
            <line num="2383" count="0" type="stmt"/>
            <line num="2385" count="0" type="stmt"/>
            <line num="2386" count="0" type="stmt"/>
            <line num="2387" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_trivia() : void" num="2391" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="2393" count="0" type="stmt"/>
            <line num="2395" count="0" type="stmt"/>
            <line num="2396" count="0" type="stmt"/>
            <line num="2397" count="0" type="stmt"/>
            <line num="2398" count="0" type="stmt"/>
            <line num="2399" count="0" type="stmt"/>
            <line num="2400" count="0" type="stmt"/>
            <line num="2402" count="0" type="stmt"/>
            <line num="2403" count="0" type="stmt"/>
            <line num="2404" count="0" type="stmt"/>
            <line num="2405" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="statements_separators() : void" num="2408" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="2410" count="0" type="stmt"/>
            <line num="2411" count="0" type="stmt"/>
            <line num="2413" count="0" type="stmt"/>
            <line num="2414" count="0" type="stmt"/>
            <line num="2415" count="0" type="stmt"/>
            <line num="2416" count="0" type="stmt"/>
            <line num="2418" count="0" type="stmt"/>
            <line num="2419" count="0" type="stmt"/>
            <line num="2420" count="0" type="stmt"/>
            <line num="2421" count="0" type="stmt"/>
            <line num="2423" count="0" type="stmt"/>
            <line num="2424" count="0" type="stmt"/>
            <line num="2425" count="0" type="stmt"/>
            <line num="2426" count="0" type="stmt"/>
            <line num="2427" count="0" type="stmt"/>
            <line num="2428" count="0" type="stmt"/>
            <line num="2431" count="0" type="stmt"/>
            <line num="2432" count="0" type="stmt"/>
            <line num="2433" count="0" type="stmt"/>
            <line num="2434" count="0" type="stmt"/>
            <line num="2435" count="0" type="stmt"/>
            <line num="2436" count="0" type="stmt"/>
            <line num="2437" count="0" type="stmt"/>
            <line num="2439" count="0" type="stmt"/>
            <line num="2440" count="0" type="stmt"/>
            <line num="2441" count="0" type="stmt"/>
            <line num="2442" count="0" type="stmt"/>
            <line num="2443" count="0" type="stmt"/>
            <line num="2444" count="0" type="stmt"/>
            <line num="2445" count="0" type="stmt"/>
            <line num="2446" count="0" type="stmt"/>
            <line num="2448" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="separators() : void" num="2451" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="2453" count="0" type="stmt"/>
            <line num="2455" count="0" type="stmt"/>
            <line num="2456" count="0" type="stmt"/>
            <line num="2457" count="0" type="stmt"/>
            <line num="2458" count="0" type="stmt"/>
            <line num="2459" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="2459" type="cond"/>
            <line num="2460" count="0" type="stmt"/>
            <line num="2462" count="0" type="stmt"/>
            <line num="2463" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertUnaryExpression(String,Tree.Kind) : void" num="2468" count="0" type="method"/>
            <line num="2469" count="0" type="stmt"/>
            <line num="2470" count="0" type="stmt"/>
            <line num="2471" count="0" type="stmt"/>
            <line num="2472" count="0" type="stmt"/>
            <line num="2473" count="0" type="stmt"/>
            <line num="2474" count="0" type="stmt"/>
            <line num="2475" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="parse(String,Function&lt;AstNode, T&gt;) : T" num="2478" count="62" type="method"/>
            <line num="2479" count="62" type="stmt"/>
            <line num="2481" count="16" type="stmt"/>
            <line num="2482" count="16" type="stmt"/>
            <line num="2483" count="16" type="stmt"/>
            <line num="2484" count="16" type="stmt"/>
            <line num="2486" count="16" type="stmt"/>
            <line num="2487" count="33" type="stmt"/>
            <line falsecount="17" truecount="16" num="2487" type="cond"/>
            <line num="2488" count="16" type="stmt"/>
            <line num="2490" count="17" type="stmt"/>
            <line num="2492" count="16" type="stmt"/>
            <line num="2493" count="16" type="stmt"/>
            <line num="2494" count="16" type="stmt"/>
            <line complexity="2" visibility="public" signature="fileContent(File) : String" num="2497" count="0" type="method"/>
            <line num="2498" count="0" type="stmt"/>
            <line num="2499" count="0" type="stmt"/>
            <line num="2501" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/tree/SliceExpressionImplTest.java" name="SliceExpressionImplTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="44" coveredmethods="0" methods="2" elements="7" classes="1" ncloc="20" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="SliceExpressionImplTest">
               <metrics coveredelements="0" complexity="2" methods="2" testruns="2" statements="5" coveredconditionals="0" coveredmethods="0" elements="7" testfailures="2" testduration="0.003" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="type() : void" num="32" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="type_dependencies() : void" num="39" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/tree/StringElementImplTest.java" name="StringElementImplTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="43" coveredmethods="0" methods="2" elements="8" classes="1" ncloc="19" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="StringElementImplTest">
               <metrics coveredelements="0" complexity="2" methods="2" testruns="1" statements="6" coveredconditionals="0" coveredmethods="0" elements="8" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="isInterpolated() : void" num="31" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="stringElement(String) : StringElement" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/tree/TreeUtilsTest.java" name="TreeUtilsTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="21" loc="339" coveredmethods="0" methods="20" elements="152" classes="1" ncloc="270" statements="130" conditionals="2" coveredstatements="0"/>
            <class name="TreeUtilsTest">
               <metrics coveredelements="0" complexity="21" methods="20" testruns="18" statements="130" coveredconditionals="0" coveredmethods="0" elements="152" testfailures="18" testduration="0.017000000000000008" conditionals="2" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="first_ancestor_of_kind() : void" num="56" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="first_ancestor() : void" num="79" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="tokens() : void" num="92" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="non_whitespace_tokens() : void" num="105" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasDescendants() : void" num="115" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSymbolFromTree() : void" num="124" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getClassSymbolFromDef() : void" num="137" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getClassSymbolFromDef_illegalSymbol() : void" num="155" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFunctionSymbolFromDef() : void" num="163" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFunctionSymbolFromDef_illegalSymbol() : void" num="181" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="nonTupleParameters() : void" num="189" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="positionalParameters() : void" num="200" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="topLevelFunctionDefs() : void" num="230" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="232" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_nthArgumentOrKeyword() : void" num="262" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="264" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_nthArgumentOrKeyword_unpacking() : void" num="278" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="280" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_nthArgumentOrKeyword_no_positional() : void" num="291" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="293" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_argumentByKeyword() : void" num="303" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="305" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_isBooleanLiteral() : void" num="322" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="324" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isOuterFunction(Tree) : boolean" num="330" count="0" type="method"/>
            <line num="331" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="parse(String) : FileInput" num="334" count="0" type="method"/>
            <line num="335" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/tree/UnaryExpressionImplTest.java" name="UnaryExpressionImplTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="38" coveredmethods="0" methods="1" elements="5" classes="1" ncloc="15" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="UnaryExpressionImplTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="4" coveredconditionals="0" coveredmethods="0" elements="5" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="type() : void" num="31" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.plugins.python.api">
         <metrics coveredelements="3" complexity="5" loc="134" methods="5" classes="2" statements="33" coveredconditionals="0" coveredmethods="1" elements="38" ncloc="77" files="2" conditionals="0" coveredstatements="2"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/plugins/python/api/ParserTest.java" name="ParserTest.java">
            <metrics coveredelements="3" coveredconditionals="0" complexity="2" loc="46" coveredmethods="1" methods="2" elements="9" classes="1" ncloc="20" statements="7" conditionals="0" coveredstatements="2"/>
            <class name="ParserTest">
               <metrics coveredelements="3" complexity="2" methods="2" testruns="2" statements="7" coveredconditionals="0" coveredmethods="1" elements="9" testfailures="1" testduration="0.004" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="30" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parsing_error() : void" num="41" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/plugins/python/api/PythonVisitorContextTest.java" name="PythonVisitorContextTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="88" coveredmethods="0" methods="3" elements="29" classes="1" ncloc="57" statements="26" conditionals="0" coveredstatements="0"/>
            <class name="PythonVisitorContextTest">
               <metrics coveredelements="0" complexity="3" methods="3" testruns="3" statements="26" coveredconditionals="0" coveredmethods="0" elements="29" testfailures="3" testduration="0.004" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="fullyQualifiedModuleName() : void" num="44" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="initModuleFullyQualifiedName() : void" num="64" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="globalSymbols() : void" num="77" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.python.api">
         <metrics coveredelements="15" complexity="3" loc="116" methods="3" classes="3" statements="12" coveredconditionals="0" coveredmethods="3" elements="15" ncloc="42" files="3" conditionals="0" coveredstatements="12"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/api/PythonKeywordTest.java" name="PythonKeywordTest.java">
            <metrics coveredelements="3" coveredconditionals="0" complexity="1" loc="34" coveredmethods="1" methods="1" elements="3" classes="1" ncloc="10" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="PythonKeywordTest">
               <metrics coveredelements="3" complexity="1" methods="1" testruns="1" statements="2" coveredconditionals="0" coveredmethods="1" elements="3" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/api/PythonPunctuatorTest.java" name="PythonPunctuatorTest.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="1" loc="40" coveredmethods="1" methods="1" elements="5" classes="1" ncloc="15" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="PythonPunctuatorTest">
               <metrics coveredelements="5" complexity="1" methods="1" testruns="1" statements="4" coveredconditionals="0" coveredmethods="1" elements="5" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="4" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="30" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="47" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/api/PythonTokenTypeTest.java" name="PythonTokenTypeTest.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="1" loc="42" coveredmethods="1" methods="1" elements="7" classes="1" ncloc="17" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="PythonTokenTypeTest">
               <metrics coveredelements="7" complexity="1" methods="1" testruns="1" statements="6" coveredconditionals="0" coveredmethods="1" elements="7" testfailures="0" testduration="0.139" conditionals="0" coveredstatements="6" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="30" testsuccess="true" count="1" testduration="0.139" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="5" type="stmt"/>
            <line num="37" count="5" type="stmt"/>
            <line num="38" count="5" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.python.lexer">
         <metrics coveredelements="124" complexity="19" loc="312" methods="19" classes="2" statements="105" coveredconditionals="0" coveredmethods="19" elements="124" ncloc="206" files="1" conditionals="0" coveredstatements="105"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/lexer/PythonLexerTest.java" name="PythonLexerTest.java">
            <metrics coveredelements="124" coveredconditionals="0" complexity="19" loc="312" coveredmethods="19" methods="19" elements="124" classes="2" ncloc="206" statements="105" conditionals="0" coveredstatements="105"/>
            <class name="PythonLexerTest">
               <metrics coveredelements="121" complexity="18" methods="18" testruns="17" statements="103" coveredconditionals="0" coveredmethods="18" elements="121" testfailures="0" testduration="0.016000000000000004" conditionals="0" coveredstatements="103" testpasses="17"/>
            </class>
            <class name="PythonLexerTest.TestLexer">
               <metrics coveredelements="3" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="init() : void" num="45" count="1" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="lex(String) : List&lt;Token&gt;" num="54" count="112" type="method"/>
            <line num="55" count="112" type="stmt"/>
            <line num="56" count="112" type="stmt"/>
            <line complexity="1" visibility="public" signature="comments() : void" num="63" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shortstring_literals() : void" num="71" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="longstring_literals() : void" num="96" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="bytes_literal() : void" num="122" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="longbytes_literal() : void" num="133" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="formatted_string_literal() : void" num="147" testsuccess="true" count="1" testduration="0.012" type="method"/>
            <line num="149" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="integer_literals() : void" num="174" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="floating_point_literals() : void" num="198" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="200" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="imaginary_literals() : void" num="215" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="217" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line num="222" count="1" type="stmt"/>
            <line num="223" count="1" type="stmt"/>
            <line num="224" count="1" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="identifiers_and_keywords() : void" num="231" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="233" count="1" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="operators_and_delimiters() : void" num="241" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="243" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="blank_lines() : void" num="251" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="253" count="1" type="stmt"/>
            <line num="254" count="1" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line num="256" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="indent_dedent() : void" num="262" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="264" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="implicit_line_joining() : void" num="270" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="272" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="explicit_line_joining() : void" num="278" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="280" count="1" type="stmt"/>
            <line num="281" count="1" type="stmt"/>
            <line num="282" count="1" type="stmt"/>
            <line num="284" count="1" type="stmt"/>
            <line num="285" count="1" type="stmt"/>
            <line num="286" count="1" type="stmt"/>
            <line num="287" count="1" type="stmt"/>
            <line num="289" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="mixed_tabs_spaces() : void" num="292" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="294" count="1" type="stmt"/>
            <line num="297" count="1" type="stmt"/>
            <line num="299" count="1" type="stmt"/>
            <line num="302" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="non_ascii_characters() : void" num="306" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="308" count="1" type="stmt"/>
            <line num="309" count="1" type="stmt"/>
            <line num="310" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.python.cfg.fixpoint">
         <metrics coveredelements="0" complexity="28" loc="497" methods="28" classes="3" statements="74" coveredconditionals="0" coveredmethods="0" elements="102" ncloc="342" files="3" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/cfg/fixpoint/DefinedVariablesAnalysisTest.java" name="DefinedVariablesAnalysisTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="113" coveredmethods="0" methods="6" elements="16" classes="1" ncloc="66" statements="10" conditionals="0" coveredstatements="0"/>
            <class name="DefinedVariablesAnalysisTest">
               <metrics coveredelements="0" complexity="6" methods="6" testruns="5" statements="10" coveredconditionals="0" coveredmethods="0" elements="16" testfailures="5" testduration="0.011000000000000001" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test_simple_def() : void" num="56" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_fn() : void" num="65" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_not_def() : void" num="73" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_write_before_read() : void" num="81" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_while() : void" num="92" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="verifyDefVariableAnalysis(String) : void" num="105" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/cfg/fixpoint/LiveVariablesAnalysisTest.java" name="LiveVariablesAnalysisTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="228" coveredmethods="0" methods="10" elements="44" classes="1" ncloc="156" statements="34" conditionals="0" coveredstatements="0"/>
            <class name="LiveVariablesAnalysisTest">
               <metrics coveredelements="0" complexity="10" methods="10" testruns="8" statements="34" coveredconditionals="0" coveredmethods="0" elements="44" testfailures="8" testduration="0.018000000000000002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test_simple_kill() : void" num="61" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_simple_gen() : void" num="70" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_complex_reads_and_writes() : void" num="78" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_write_before_read() : void" num="144" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_while() : void" num="156" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_foreach() : void" num="170" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="read_symbols() : void" num="184" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="is_symbol_used_in_block() : void" num="201" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="verifyLiveVariableAnalysis(String) : void" num="216" count="0" type="method"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="verifyLiveVariableAnalysisWithArgs(String,String) : void" num="220" count="0" type="method"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/cfg/fixpoint/ReachingDefinitionsAnalysisTest.java" name="ReachingDefinitionsAnalysisTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="12" loc="156" coveredmethods="0" methods="12" elements="42" classes="1" ncloc="120" statements="30" conditionals="0" coveredstatements="0"/>
            <class name="ReachingDefinitionsAnalysisTest">
               <metrics coveredelements="0" complexity="12" methods="12" testruns="11" statements="30" coveredconditionals="0" coveredmethods="0" elements="42" testfailures="11" testduration="0.014000000000000002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="valuesAtLocation_single_assignment() : void" num="43" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="valuesAtLocation_multiple_assignments() : void" num="49" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="valuesAtLocation_branches() : void" num="55" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="valuesAtLocation_outside_function() : void" num="67" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="valuesAtLocation_invalid_cfg() : void" num="73" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="valuesAtLocation_no_name_assignment() : void" num="79" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="valuesAtLocation_assignment_lhs() : void" num="85" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="loop_with_conditions() : void" num="91" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ignore_outer_scope() : void" num="122" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compound_assignments() : void" num="134" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="try_stmt() : void" num="140" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getValueAsString(Expression) : String" num="153" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.python.metrics">
         <metrics coveredelements="4" complexity="22" loc="242" methods="20" classes="4" statements="41" coveredconditionals="0" coveredmethods="2" elements="63" ncloc="147" files="3" conditionals="2" coveredstatements="2"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/metrics/CognitiveComplexityVisitorTest.java" name="CognitiveComplexityVisitorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="92" coveredmethods="0" methods="4" elements="26" classes="2" ncloc="61" statements="20" conditionals="2" coveredstatements="0"/>
            <class name="CognitiveComplexityVisitorTest">
               <metrics coveredelements="0" complexity="2" methods="2" testruns="1" statements="14" coveredconditionals="0" coveredmethods="0" elements="16" testfailures="1" testduration="0.015" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="CognitiveComplexityVisitorTest.CommentVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="2" elements="10" statements="6" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="file() : void" num="41" testsuccess="false" count="0" testduration="0.015" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFunctionDef(FunctionDef) : void" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="scanFile(PythonVisitorContext) : void" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="initialize(Context) : void" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/metrics/ComplexityVisitorTest.java" name="ComplexityVisitorTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="9" loc="83" coveredmethods="2" methods="9" elements="20" classes="1" ncloc="49" statements="11" conditionals="0" coveredstatements="2"/>
            <class name="ComplexityVisitorTest">
               <metrics coveredelements="4" complexity="9" methods="9" testruns="8" statements="11" coveredconditionals="0" coveredmethods="2" elements="20" testfailures="7" testduration="0.009000000000000001" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="file() : void" num="37" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="pass_keyword() : void" num="44" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="if_keyword() : void" num="49" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="and_keyword() : void" num="54" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="or_keyword() : void" num="59" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="funcdef() : void" num="64" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="while_statement() : void" num="69" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="for_statement() : void" num="74" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="complexity(String) : int" num="79" count="7" type="method"/>
            <line num="80" count="7" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/metrics/FileMetricsTest.java" name="FileMetricsTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="67" coveredmethods="0" methods="7" elements="17" classes="1" ncloc="37" statements="10" conditionals="0" coveredstatements="0"/>
            <class name="FileMetricsTest">
               <metrics coveredelements="0" complexity="7" methods="7" testruns="6" statements="10" coveredconditionals="0" coveredmethods="0" elements="17" testfailures="6" testduration="0.009000000000000001" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="statements() : void" num="30" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="functions() : void" num="35" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="classes() : void" num="40" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="complexity() : void" num="45" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cognitive_complexity() : void" num="50" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="function_complexities() : void" num="56" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="metrics(String) : FileMetrics" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.python.parser">
         <metrics coveredelements="94" complexity="29" loc="333" methods="26" classes="6" statements="72" coveredconditionals="0" coveredmethods="26" elements="98" ncloc="200" files="4" conditionals="0" coveredstatements="68"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/parser/FStringParserTest.java" name="FStringParserTest.java">
            <metrics coveredelements="48" coveredconditionals="0" complexity="14" loc="128" coveredmethods="13" methods="13" elements="49" classes="1" ncloc="92" statements="36" conditionals="0" coveredstatements="35"/>
            <class name="FStringParserTest">
               <metrics coveredelements="48" complexity="14" methods="13" testruns="10" statements="36" coveredconditionals="0" coveredmethods="13" elements="49" testfailures="0" testduration="0.017" conditionals="0" coveredstatements="35" testpasses="10"/>
            </class>
            <line complexity="1" visibility="public" signature="empty_f_string() : void" num="36" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="no_formatted_expression() : void" num="43" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="name_expression() : void" num="50" testsuccess="true" count="1" testduration="0.01" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="triple_quoted() : void" num="57" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="escaped_curly_brace() : void" num="64" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="expressions_should_not_be_merged() : void" num="70" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="token_line_and_column() : void" num="75" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="token_line_and_column_in_multiline_f_string() : void" num="83" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="conversions() : void" num="91" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="format_specifiers() : void" num="98" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="parse(String) : List&lt;AstNode&gt;" num="106" count="18" type="method"/>
            <line num="107" count="18" type="stmt"/>
            <line complexity="1" visibility="private" signature="parse(String,int,int) : List&lt;AstNode&gt;" num="110" count="20" type="method"/>
            <line num="111" count="20" type="stmt"/>
            <line num="118" count="20" type="stmt"/>
            <line complexity="2" visibility="private" signature="fakeUri() : URI" num="121" count="20" type="method"/>
            <line num="122" count="20" type="stmt"/>
            <line num="123" count="20" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/parser/PythonParserAssert.java" name="PythonParserAssert.java">
            <metrics coveredelements="36" coveredconditionals="0" complexity="12" loc="126" coveredmethods="10" methods="10" elements="39" classes="3" ncloc="78" statements="29" conditionals="0" coveredstatements="26"/>
            <class name="PythonParserAssert">
               <metrics coveredelements="30" coveredconditionals="0" complexity="9" coveredmethods="7" methods="7" elements="33" statements="26" conditionals="0" coveredstatements="23"/>
            </class>
            <class name="PythonParserAssert.EndOfInput">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="PythonParserAssert.WithEndOfInput">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="assertThat(PythonParser) : PythonParserAssert" num="39" count="111" type="method"/>
            <line num="40" count="111" type="stmt"/>
            <line complexity="1" visibility="public" signature="PythonParserAssert(PythonParser)" num="43" count="111" type="method"/>
            <line num="44" count="111" type="stmt"/>
            <line complexity="1" visibility="private" signature="createParserWithEofMatcher() : PythonParser" num="47" count="223" type="method"/>
            <line num="48" count="223" type="stmt"/>
            <line num="49" count="223" type="stmt"/>
            <line num="51" count="223" type="stmt"/>
            <line num="54" count="223" type="stmt"/>
            <line num="55" count="223" type="stmt"/>
            <line num="57" count="223" type="stmt"/>
            <line complexity="2" visibility="public" signature="matches(String) : PythonParserAssert" num="64" count="213" type="method"/>
            <line num="65" count="213" type="stmt"/>
            <line num="66" count="213" type="stmt"/>
            <line num="67" count="213" type="stmt"/>
            <line num="68" count="213" type="stmt"/>
            <line num="69" count="213" type="stmt"/>
            <line num="70" count="213" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="213" type="stmt"/>
            <line complexity="2" visibility="public" signature="notMatches(String) : PythonParserAssert" num="82" count="10" type="method"/>
            <line num="83" count="10" type="stmt"/>
            <line num="84" count="10" type="stmt"/>
            <line num="85" count="10" type="stmt"/>
            <line num="86" count="10" type="stmt"/>
            <line num="87" count="10" type="stmt"/>
            <line num="90" count="10" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="hasRootRule() : void" num="95" count="223" type="method"/>
            <line num="96" count="223" type="stmt"/>
            <line complexity="1" visibility="private" signature="getRuleName() : String" num="101" count="213" type="method"/>
            <line num="102" count="213" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="106" count="446" type="method"/>
            <line num="108" count="446" type="stmt"/>
            <line complexity="1" visibility="public" signature="WithEndOfInput(GrammarRuleKey)" num="115" count="223" type="method"/>
            <line num="116" count="223" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="119" count="446" type="method"/>
            <line num="121" count="446" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/parser/PythonParserTest.java" name="PythonParserTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="2" loc="48" coveredmethods="2" methods="2" elements="8" classes="1" ncloc="22" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="PythonParserTest">
               <metrics coveredelements="8" complexity="2" methods="2" testruns="1" statements="6" coveredconditionals="0" coveredmethods="2" elements="8" testfailures="0" testduration="0.093" conditionals="0" coveredstatements="6" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="34" testsuccess="true" count="1" testduration="0.093" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="67" type="stmt"/>
            <line num="39" count="67" type="stmt"/>
            <line complexity="1" visibility="private" signature="listFiles() : Collection&lt;File&gt;" num="43" count="1" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/parser/RuleTest.java" name="RuleTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="31" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="8" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="RuleTest">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="protected" signature="setRootRule(GrammarRuleKey) : void" num="28" count="143" type="method"/>
            <line num="29" count="143" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.python.parser.compound.statements">
         <metrics coveredelements="48" complexity="22" loc="451" methods="22" classes="10" statements="26" coveredconditionals="0" coveredmethods="22" elements="48" ncloc="195" files="10" conditionals="0" coveredstatements="26"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/parser/compound/statements/ClassDefTest.java" name="ClassDefTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="2" loc="46" coveredmethods="2" methods="2" elements="8" classes="1" ncloc="21" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="ClassDefTest">
               <metrics coveredelements="8" complexity="2" methods="2" testruns="1" statements="6" coveredconditionals="0" coveredmethods="2" elements="8" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="6" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="init() : void" num="32" count="1" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="realLife() : void" num="37" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/parser/compound/statements/DecoratorTest.java" name="DecoratorTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="43" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="17" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="DecoratorTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="1" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="init() : void" num="33" count="1" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="realLife() : void" num="38" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="40" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/parser/compound/statements/ExceptClauseTest.java" name="ExceptClauseTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="44" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="19" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="ExceptClauseTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="1" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="init() : void" num="31" count="1" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ok() : void" num="36" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="38" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/parser/compound/statements/ForStatementTest.java" name="ForStatementTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="45" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="20" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="ForStatementTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="1" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="init() : void" num="32" count="1" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ok() : void" num="37" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="39" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/parser/compound/statements/FuncDefTest.java" name="FuncDefTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="4" loc="52" coveredmethods="4" methods="4" elements="8" classes="1" ncloc="25" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="FuncDefTest">
               <metrics coveredelements="8" complexity="4" methods="4" testruns="3" statements="4" coveredconditionals="0" coveredmethods="4" elements="8" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="4" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="init() : void" num="32" count="3" type="method"/>
            <line num="34" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="realLife() : void" num="37" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="trueAsParameter() : void" num="42" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="trailingComa() : void" num="47" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="49" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/parser/compound/statements/IfStatementTest.java" name="IfStatementTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="44" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="18" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="IfStatementTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="1" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="init() : void" num="31" count="1" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ok() : void" num="36" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="39" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/parser/compound/statements/SuiteTest.java" name="SuiteTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="44" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="19" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="SuiteTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="1" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="init() : void" num="32" count="1" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="realLife() : void" num="37" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="39" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/parser/compound/statements/TryStatementTest.java" name="TryStatementTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="47" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="21" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="TryStatementTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="1" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.013" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="init() : void" num="31" count="1" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ok() : void" num="36" testsuccess="true" count="1" testduration="0.013" type="method"/>
            <line num="39" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/parser/compound/statements/WhileStatementTest.java" name="WhileStatementTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="42" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="17" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="WhileStatementTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="1" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="init() : void" num="31" count="1" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ok() : void" num="36" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="38" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/parser/compound/statements/WithStatementTest.java" name="WithStatementTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="44" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="18" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="WithStatementTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="1" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="init() : void" num="32" count="1" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="realLife() : void" num="38" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="40" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.python.parser.expressions">
         <metrics coveredelements="29" complexity="5" loc="117" methods="5" classes="2" statements="24" coveredconditionals="0" coveredmethods="5" elements="29" ncloc="58" files="2" conditionals="0" coveredstatements="24"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/parser/expressions/ArgumentListTest.java" name="ArgumentListTest.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="2" loc="43" coveredmethods="2" methods="2" elements="6" classes="1" ncloc="18" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="ArgumentListTest">
               <metrics coveredelements="6" complexity="2" methods="2" testruns="1" statements="4" coveredconditionals="0" coveredmethods="2" elements="6" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="4" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="init() : void" num="31" count="1" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="arg_list() : void" num="36" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/parser/expressions/ExpressionTest.java" name="ExpressionTest.java">
            <metrics coveredelements="23" coveredconditionals="0" complexity="3" loc="74" coveredmethods="3" methods="3" elements="23" classes="1" ncloc="40" statements="20" conditionals="0" coveredstatements="20"/>
            <class name="ExpressionTest">
               <metrics coveredelements="23" complexity="3" methods="3" testruns="2" statements="20" coveredconditionals="0" coveredmethods="3" elements="23" testfailures="0" testduration="0.012" conditionals="0" coveredstatements="20" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="init() : void" num="33" count="2" type="method"/>
            <line num="35" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="realLife() : void" num="38" testsuccess="true" count="1" testduration="0.011" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="call_expression() : void" num="68" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.python.parser.simple.statements">
         <metrics coveredelements="101" complexity="35" loc="707" methods="35" classes="15" statements="66" coveredconditionals="0" coveredmethods="35" elements="101" ncloc="320" files="15" conditionals="0" coveredstatements="66"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/parser/simple/statements/AssertStatementTest.java" name="AssertStatementTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="3" loc="48" coveredmethods="3" methods="3" elements="8" classes="1" ncloc="22" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="AssertStatementTest">
               <metrics coveredelements="8" complexity="3" methods="3" testruns="2" statements="5" coveredconditionals="0" coveredmethods="3" elements="8" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="5" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="init() : void" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="ok() : void" num="36" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="realLife() : void" num="42" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/parser/simple/statements/BreakStatementTest.java" name="BreakStatementTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="41" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="16" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="BreakStatementTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="1" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="init() : void" num="31" count="1" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="realLife() : void" num="36" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="38" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/parser/simple/statements/ContinueStatementTest.java" name="ContinueStatementTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="41" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="16" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="ContinueStatementTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="1" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="init() : void" num="31" count="1" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="realLife() : void" num="36" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="38" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/parser/simple/statements/DelStatementTest.java" name="DelStatementTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="41" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="16" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="DelStatementTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="1" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="init() : void" num="31" count="1" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ok() : void" num="36" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="38" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/parser/simple/statements/ExecStatementTest.java" name="ExecStatementTest.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="3" loc="49" coveredmethods="3" methods="3" elements="9" classes="1" ncloc="23" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="ExecStatementTest">
               <metrics coveredelements="9" complexity="3" methods="3" testruns="2" statements="6" coveredconditionals="0" coveredmethods="3" elements="9" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="6" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="init() : void" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="ok() : void" num="36" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="realLife() : void" num="43" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/parser/simple/statements/ExpressionStatementTest.java" name="ExpressionStatementTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="57" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="31" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="ExpressionStatementTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="1" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.012" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="init() : void" num="31" count="1" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="realLife() : void" num="36" testsuccess="true" count="1" testduration="0.012" type="method"/>
            <line num="38" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/parser/simple/statements/GlobalStatementTest.java" name="GlobalStatementTest.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="2" loc="42" coveredmethods="2" methods="2" elements="5" classes="1" ncloc="17" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="GlobalStatementTest">
               <metrics coveredelements="5" complexity="2" methods="2" testruns="1" statements="3" coveredconditionals="0" coveredmethods="2" elements="5" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="init() : void" num="31" count="1" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ok() : void" num="36" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/parser/simple/statements/ImportStatementTest.java" name="ImportStatementTest.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="2" loc="42" coveredmethods="2" methods="2" elements="5" classes="1" ncloc="17" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="ImportStatementTest">
               <metrics coveredelements="5" complexity="2" methods="2" testruns="1" statements="3" coveredconditionals="0" coveredmethods="2" elements="5" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="init() : void" num="31" count="1" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="realLife() : void" num="36" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/parser/simple/statements/NonlocalStatementTest.java" name="NonlocalStatementTest.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="2" loc="42" coveredmethods="2" methods="2" elements="5" classes="1" ncloc="17" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="NonlocalStatementTest">
               <metrics coveredelements="5" complexity="2" methods="2" testruns="1" statements="3" coveredconditionals="0" coveredmethods="2" elements="5" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="init() : void" num="31" count="1" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ok() : void" num="36" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/parser/simple/statements/PassStatementTest.java" name="PassStatementTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="41" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="16" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="PassStatementTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="1" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="init() : void" num="31" count="1" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="realLife() : void" num="36" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="38" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/parser/simple/statements/PrintStatementTest.java" name="PrintStatementTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="59" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="30" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="PrintStatementTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="1" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.01" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="init() : void" num="31" count="1" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ok() : void" num="36" testsuccess="true" count="1" testduration="0.01" type="method"/>
            <line num="38" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/parser/simple/statements/RaiseStatementTest.java" name="RaiseStatementTest.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="3" loc="53" coveredmethods="3" methods="3" elements="11" classes="1" ncloc="25" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="RaiseStatementTest">
               <metrics coveredelements="11" complexity="3" methods="3" testruns="2" statements="8" coveredconditionals="0" coveredmethods="3" elements="11" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="8" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="init() : void" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="ok() : void" num="36" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="realLife() : void" num="47" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/parser/simple/statements/ReturnStatementTest.java" name="ReturnStatementTest.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="3" loc="47" coveredmethods="3" methods="3" elements="7" classes="1" ncloc="21" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="ReturnStatementTest">
               <metrics coveredelements="7" complexity="3" methods="3" testruns="2" statements="4" coveredconditionals="0" coveredmethods="3" elements="7" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="4" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="init() : void" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="ok() : void" num="36" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="realLife() : void" num="42" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="44" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/parser/simple/statements/SimpleStatementTest.java" name="SimpleStatementTest.java">
            <metrics coveredelements="23" coveredconditionals="0" complexity="3" loc="63" coveredmethods="3" methods="3" elements="23" classes="1" ncloc="37" statements="20" conditionals="0" coveredstatements="20"/>
            <class name="SimpleStatementTest">
               <metrics coveredelements="23" complexity="3" methods="3" testruns="2" statements="20" coveredconditionals="0" coveredmethods="3" elements="23" testfailures="0" testduration="0.018" conditionals="0" coveredstatements="20" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="init() : void" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="ok() : void" num="36" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="realLife() : void" num="54" testsuccess="true" count="1" testduration="0.011" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/parser/simple/statements/YieldStatementTest.java" name="YieldStatementTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="41" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="16" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="YieldStatementTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="1" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.009" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="init() : void" num="31" count="1" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ok() : void" num="36" testsuccess="true" count="1" testduration="0.009" type="method"/>
            <line num="38" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.python.parser.python.v3">
         <metrics coveredelements="43" complexity="7" loc="185" methods="7" classes="1" statements="36" coveredconditionals="0" coveredmethods="7" elements="43" ncloc="137" files="1" conditionals="0" coveredstatements="36"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/parser/python/v3/PythonV3Test.java" name="PythonV3Test.java">
            <metrics coveredelements="43" coveredconditionals="0" complexity="7" loc="185" coveredmethods="7" methods="7" elements="43" classes="1" ncloc="137" statements="36" conditionals="0" coveredstatements="36"/>
            <class name="PythonV3Test">
               <metrics coveredelements="43" complexity="7" methods="7" testruns="7" statements="36" coveredconditionals="0" coveredmethods="7" elements="43" testfailures="0" testduration="0.05399999999999999" conditionals="0" coveredstatements="36" testpasses="7"/>
            </class>
            <line complexity="1" visibility="public" signature="ellipsis() : void" num="30" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="matrix_multiplication() : void" num="37" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="function_declaration() : void" num="47" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="asyncAndAwait() : void" num="58" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="yield_from() : void" num="80" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="function_star_parameters() : void" num="89" testsuccess="true" count="1" testduration="0.043" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="unpacking_operations() : void" num="157" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="159" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.python.parser.toplevel">
         <metrics coveredelements="4" complexity="2" loc="45" methods="2" classes="1" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" ncloc="20" files="1" conditionals="0" coveredstatements="2"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/python-frontend/src/test/java/org/sonar/python/parser/toplevel/FileInputTest.java" name="FileInputTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="45" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="20" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="FileInputTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="1" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="init() : void" num="31" count="1" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ok() : void" num="36" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="38" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.samples.python">
         <metrics coveredelements="0" complexity="4" loc="141" methods="4" classes="4" statements="13" coveredconditionals="0" coveredmethods="0" elements="17" ncloc="53" files="4" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/its/plugin/python-custom-rules-plugin/src/test/java/org/sonar/samples/python/CustomPythonRuleRepositoryTest.java" name="CustomPythonRuleRepositoryTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="39" coveredmethods="0" methods="1" elements="8" classes="1" ncloc="16" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="CustomPythonRuleRepositoryTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="8" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test_rule_repository() : void" num="29" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/its/plugin/python-custom-rules-plugin/src/test/java/org/sonar/samples/python/CustomPythonRulesPluginTest.java" name="CustomPythonRulesPluginTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="41" coveredmethods="0" methods="1" elements="5" classes="1" ncloc="19" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="CustomPythonRulesPluginTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="5" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/its/plugin/python-custom-rules-plugin/src/test/java/org/sonar/samples/python/CustomPythonSubscriptionCheckTest.java" name="CustomPythonSubscriptionCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="30" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="CustomPythonSubscriptionCheckTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="26" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/its/plugin/python-custom-rules-plugin/src/test/java/org/sonar/samples/python/CustomPythonVisitorCheckTest.java" name="CustomPythonVisitorCheckTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="31" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="CustomPythonVisitorCheckTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.sonar.python.it.plugin">
         <metrics coveredelements="0" complexity="81" loc="1242" methods="74" classes="11" statements="265" coveredconditionals="0" coveredmethods="0" elements="351" ncloc="843" files="11" conditionals="12" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/its/plugin/it-python-plugin-test/src/test/java/com/sonar/python/it/plugin/BanditReportTest.java" name="BanditReportTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="72" coveredmethods="0" methods="2" elements="21" classes="1" ncloc="44" statements="17" conditionals="2" coveredstatements="0"/>
            <class name="BanditReportTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="21" statements="17" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="import_report() : void" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="issues() : List&lt;Issues.Issue&gt;" num="68" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/its/plugin/it-python-plugin-test/src/test/java/com/sonar/python/it/plugin/CPDTest.java" name="CPDTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="88" coveredmethods="0" methods="2" elements="23" classes="1" ncloc="55" statements="21" conditionals="0" coveredstatements="0"/>
            <class name="CPDTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="23" statements="21" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="startServer() : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_cpd() : void" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/its/plugin/it-python-plugin-test/src/test/java/com/sonar/python/it/plugin/CoverageTest.java" name="CoverageTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="128" coveredmethods="0" methods="6" elements="35" classes="1" ncloc="91" statements="27" conditionals="2" coveredstatements="0"/>
            <class name="CoverageTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="6" elements="35" statements="27" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="basic_coverage_reports_with_unix_paths() : void" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="basic_coverage_reports_with_windows_paths() : void" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="basicCoverageReports(String) : void" num="60" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="default_values() : void" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="empty_property() : void" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="empty_coverage_report() : void" num="110" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/its/plugin/it-python-plugin-test/src/test/java/com/sonar/python/it/plugin/CustomRulesTest.java" name="CustomRulesTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="79" coveredmethods="0" methods="5" elements="19" classes="1" ncloc="51" statements="14" conditionals="0" coveredstatements="0"/>
            <class name="CustomRulesTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="19" statements="14" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="prepare() : void" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="base_tree_visitor_check() : void" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subscription_base_visitor_check() : void" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertSingleIssue(List&lt;Issues.Issue&gt;,int,String,String) : void" num="68" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="issues(String) : List&lt;Issues.Issue&gt;" num="76" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/its/plugin/it-python-plugin-test/src/test/java/com/sonar/python/it/plugin/Flake8ReportTest.java" name="Flake8ReportTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="75" coveredmethods="0" methods="2" elements="23" classes="1" ncloc="46" statements="21" conditionals="0" coveredstatements="0"/>
            <class name="Flake8ReportTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="23" statements="21" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="import_report() : void" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="issues() : List&lt;Issues.Issue&gt;" num="72" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/its/plugin/it-python-plugin-test/src/test/java/com/sonar/python/it/plugin/MetricsTest.java" name="MetricsTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="16" loc="228" coveredmethods="0" methods="16" elements="86" classes="1" ncloc="161" statements="70" conditionals="0" coveredstatements="0"/>
            <class name="MetricsTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="16" coveredmethods="0" methods="16" elements="86" statements="70" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="startServer() : void" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_files_highlighted() : void" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="project_level() : void" num="91" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="directory_level() : void" num="120" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="file_level() : void" num="146" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_be_compatible_with_DevCockpit() : void" num="175" count="0" type="method"/>
            <line num="178" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getProjectMeasure(String) : Measure" num="188" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getProjectMeasureAsInt(String) : Integer" num="192" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getProjectMeasureAsDouble(String) : Double" num="196" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getDirectoryMeasure(String) : Measure" num="200" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getDirectoryMeasureAsInt(String) : Integer" num="204" count="0" type="method"/>
            <line num="205" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getDirectoryMeasureAsDouble(String) : Double" num="208" count="0" type="method"/>
            <line num="209" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getFileMeasure(String) : Measure" num="212" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getFileMeasureAsInt(String) : Integer" num="216" count="0" type="method"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getFileMeasureAsDouble(String) : Double" num="220" count="0" type="method"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="keyFor(String) : String" num="224" count="0" type="method"/>
            <line num="225" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/its/plugin/it-python-plugin-test/src/test/java/com/sonar/python/it/plugin/NoSonarTest.java" name="NoSonarTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="63" coveredmethods="0" methods="3" elements="9" classes="1" ncloc="34" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="NoSonarTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="9" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="startServer() : void" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_nosonar() : void" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getProjectMeasureAsInt(String) : Integer" num="60" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/its/plugin/it-python-plugin-test/src/test/java/com/sonar/python/it/plugin/PylintReportTest.java" name="PylintReportTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="86" coveredmethods="0" methods="6" elements="23" classes="1" ncloc="55" statements="17" conditionals="0" coveredstatements="0"/>
            <class name="PylintReportTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="23" statements="17" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="import_report() : void" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="missing_report() : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invalid_report() : void" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unknown_rule() : void" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="issues() : List&lt;Issue&gt;" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="analyseProjectWithReport(String) : BuildResult" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/its/plugin/it-python-plugin-test/src/test/java/com/sonar/python/it/plugin/SonarLintTest.java" name="SonarLintTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="157" coveredmethods="0" methods="13" elements="40" classes="1" ncloc="114" statements="27" conditionals="0" coveredstatements="0"/>
            <class name="SonarLintTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="13" elements="40" statements="27" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="prepare() : void" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="stop() : void" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_raise_issues() : void" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="prepareInputFile(String,String,boolean) : ClientInputFile" num="106" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="createInputFile(Path,String,boolean) : ClientInputFile" num="112" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPath() : String" num="115" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isTest() : boolean" num="120" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCharset() : Charset" num="125" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getClientObject() : G" num="130" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inputStream() : InputStream" num="135" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="contents() : String" num="140" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="relativePath() : String" num="145" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="uri() : URI" num="150" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/its/plugin/it-python-plugin-test/src/test/java/com/sonar/python/it/plugin/TestReportTest.java" name="TestReportTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="130" coveredmethods="0" methods="9" elements="33" classes="1" ncloc="94" statements="24" conditionals="0" coveredstatements="0"/>
            <class name="TestReportTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="9" elements="33" statements="24" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="before() : void" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="createBuild(String) : SonarScanner" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="import_report() : void" num="63" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="import_pytest_report() : void" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="simple_mode() : void" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="missing_test_report() : void" num="104" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="missing_test_report_with_simple_mode() : void" num="110" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invalid_test_report() : void" num="116" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="nullMeasures() : Map&lt;String, Integer&gt;" num="125" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/its/plugin/it-python-plugin-test/src/test/java/com/sonar/python/it/plugin/Tests.java" name="Tests.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="136" coveredmethods="0" methods="10" elements="39" classes="1" ncloc="98" statements="21" conditionals="8" coveredstatements="0"/>
            <class name="Tests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="10" elements="39" statements="21" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="Tests()" num="77" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getProjectMeasure(String,String) : Integer" num="81" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="assertProjectMeasures(String,Map&lt;String, Integer&gt;) : void" num="85" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="3" visibility="package" signature="getMeasure(String,String) : Measure" num="99" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line complexity="1" visibility="private" signature="getMeasures(String,List&lt;String&gt;) : List&lt;Measure&gt;" num="104" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="getMeasureAsInt(String,String) : Integer" num="111" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line complexity="2" visibility="package" signature="getMeasureAsDouble(String,String) : Double" num="116" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line complexity="1" visibility="package" signature="newWsClient() : WsClient" num="121" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="newAdminWsClient() : WsClient" num="125" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="newWsClient(String,String) : WsClient" num="129" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.plugins.python.coverage">
         <metrics coveredelements="140" complexity="19" loc="333" methods="18" classes="1" statements="120" coveredconditionals="2" coveredmethods="18" elements="140" ncloc="248" files="1" conditionals="2" coveredstatements="120"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/test/java/org/sonar/plugins/python/coverage/PythonCoverageSensorTest.java" name="PythonCoverageSensorTest.java">
            <metrics coveredelements="140" coveredconditionals="2" complexity="19" loc="333" coveredmethods="18" methods="18" elements="140" classes="1" ncloc="248" statements="120" conditionals="2" coveredstatements="120"/>
            <class name="PythonCoverageSensorTest">
               <metrics coveredelements="140" complexity="19" methods="18" testruns="15" statements="120" coveredconditionals="2" coveredmethods="18" elements="140" testfailures="0" testduration="0.125" conditionals="2" coveredstatements="120" testpasses="15"/>
            </class>
            <line complexity="1" visibility="public" signature="init() : void" num="73" count="15" type="method"/>
            <line num="75" count="15" type="stmt"/>
            <line num="76" count="15" type="stmt"/>
            <line num="77" count="15" type="stmt"/>
            <line num="78" count="15" type="stmt"/>
            <line num="79" count="15" type="stmt"/>
            <line num="80" count="15" type="stmt"/>
            <line num="82" count="15" type="stmt"/>
            <line num="83" count="15" type="stmt"/>
            <line num="84" count="15" type="stmt"/>
            <line num="85" count="15" type="stmt"/>
            <line num="86" count="15" type="stmt"/>
            <line num="87" count="15" type="stmt"/>
            <line num="88" count="15" type="stmt"/>
            <line complexity="1" visibility="private" signature="inputFile(String,Type) : InputFile" num="91" count="105" type="method"/>
            <line num="92" count="105" type="stmt"/>
            <line num="99" count="105" type="stmt"/>
            <line num="101" count="105" type="stmt"/>
            <line complexity="1" visibility="public" signature="report_not_found() : void" num="104" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="106" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="absolute_path() : void" num="114" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="116" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="test_coverage() : void" num="123" testsuccess="true" count="1" testduration="0.065" type="method"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line falsecount="1" truecount="6" num="129" type="cond"/>
            <line num="130" count="6" type="stmt"/>
            <line num="131" count="6" type="stmt"/>
            <line num="132" count="6" type="stmt"/>
            <line num="133" count="6" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_coverage_4_4_2() : void" num="141" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_coverage_4_4_2_multi_source() : void" num="182" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_unique_report() : void" num="193" testsuccess="true" count="1" testduration="0.01" type="method"/>
            <line num="195" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_report_with_absolute_path() : void" num="204" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="206" count="1" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line num="213" count="1" type="stmt"/>
            <line num="214" count="1" type="stmt"/>
            <line num="215" count="1" type="stmt"/>
            <line num="216" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_unresolved_path() : void" num="219" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="221" count="1" type="stmt"/>
            <line num="222" count="1" type="stmt"/>
            <line num="223" count="1" type="stmt"/>
            <line num="224" count="1" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line num="230" count="1" type="stmt"/>
            <line num="232" count="1" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line num="239" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_comma_separated_paths() : void" num="249" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="251" count="1" type="stmt"/>
            <line num="252" count="1" type="stmt"/>
            <line num="254" count="1" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line num="256" count="1" type="stmt"/>
            <line num="258" count="1" type="stmt"/>
            <line num="259" count="1" type="stmt"/>
            <line num="260" count="1" type="stmt"/>
            <line num="261" count="1" type="stmt"/>
            <line num="262" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_comma_separated_paths_with_deprecated_property() : void" num="265" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="267" count="1" type="stmt"/>
            <line num="268" count="1" type="stmt"/>
            <line num="269" count="1" type="stmt"/>
            <line num="272" count="1" type="stmt"/>
            <line num="273" count="1" type="stmt"/>
            <line num="274" count="1" type="stmt"/>
            <line num="276" count="1" type="stmt"/>
            <line num="277" count="1" type="stmt"/>
            <line num="278" count="1" type="stmt"/>
            <line num="279" count="1" type="stmt"/>
            <line num="280" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_fail_on_invalid_report() : void" num="283" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="285" count="1" type="stmt"/>
            <line num="286" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_fail_on_unexpected_eof() : void" num="289" testsuccess="true" count="1" testduration="0.028" type="method"/>
            <line num="291" count="1" type="stmt"/>
            <line num="292" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_do_nothing_on_empty_report() : void" num="295" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="297" count="1" type="stmt"/>
            <line num="298" count="1" type="stmt"/>
            <line num="300" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="no_default_report_log() : void" num="303" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="305" count="1" type="stmt"/>
            <line num="306" count="1" type="stmt"/>
            <line num="307" count="1" type="stmt"/>
            <line num="308" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="sensor_descriptor() : void" num="311" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="313" count="1" type="stmt"/>
            <line num="314" count="1" type="stmt"/>
            <line num="315" count="1" type="stmt"/>
            <line num="316" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="createReportWithAbsolutePaths() : String" num="319" count="1" type="method"/>
            <line num="320" count="1" type="stmt"/>
            <line num="322" count="1" type="stmt"/>
            <line num="323" count="1" type="stmt"/>
            <line num="324" count="1" type="stmt"/>
            <line num="325" count="1" type="stmt"/>
            <line num="327" count="1" type="stmt"/>
            <line num="328" count="1" type="stmt"/>
            <line num="330" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.plugins.python">
         <metrics coveredelements="189" complexity="65" loc="1218" methods="55" classes="11" statements="355" coveredconditionals="2" coveredmethods="34" elements="422" ncloc="801" files="10" conditionals="12" coveredstatements="153"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/test/java/org/sonar/plugins/python/DirectoryScannerTest.java" name="DirectoryScannerTest.java">
            <metrics coveredelements="23" coveredconditionals="0" complexity="7" loc="83" coveredmethods="7" methods="7" elements="23" classes="1" ncloc="52" statements="16" conditionals="0" coveredstatements="16"/>
            <class name="DirectoryScannerTest">
               <metrics coveredelements="23" complexity="7" methods="7" testruns="4" statements="16" coveredconditionals="0" coveredmethods="7" elements="23" testfailures="0" testduration="0.533" conditionals="0" coveredstatements="16" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="noMatchedFile() : void" num="41" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="simpleFile() : void" num="46" testsuccess="true" count="1" testduration="0.066" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="wildCard() : void" num="51" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldNotFailWhenChildPathIsUnexpectedlyShorterThanBaseDirPath() : void" num="57" testsuccess="true" count="1" testduration="0.466" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="answer(InvocationOnMock) : File[]" num="64" count="1" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="scan(String) : List&lt;File&gt;" num="74" count="4" type="method"/>
            <line num="75" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="scan(String,File) : List&lt;File&gt;" num="78" count="5" type="method"/>
            <line num="79" count="5" type="stmt"/>
            <line num="80" count="5" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/test/java/org/sonar/plugins/python/PythonHighlighterTest.java" name="PythonHighlighterTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="12" loc="224" coveredmethods="1" methods="8" elements="95" classes="1" ncloc="122" statements="79" conditionals="8" coveredstatements="7"/>
            <class name="PythonHighlighterTest">
               <metrics coveredelements="8" coveredconditionals="0" complexity="12" coveredmethods="1" methods="8" elements="95" statements="79" conditionals="8" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="scanFile() : void" num="42" count="4" type="method"/>
            <line num="44" count="4" type="stmt"/>
            <line num="46" count="4" type="stmt"/>
            <line num="47" count="4" type="stmt"/>
            <line num="51" count="4" type="stmt"/>
            <line num="52" count="4" type="stmt"/>
            <line num="54" count="4" type="stmt"/>
            <line num="55" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="keyword() : void" num="58" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="stringLiteral() : void" num="85" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="comment() : void" num="144" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="number() : void" num="150" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="checkOnRange(int,int,int,TypeOfText) : void" num="189" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="191" type="cond"/>
            <line num="192" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="196" type="cond"/>
            <line num="197" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="check(int,int,TypeOfText) : void" num="207" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="checkInternal(int,int,String,TypeOfText) : void" num="211" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="215" type="cond"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="218" type="cond"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/test/java/org/sonar/plugins/python/PythonPluginTest.java" name="PythonPluginTest.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="2" loc="51" coveredmethods="2" methods="2" elements="10" classes="1" ncloc="26" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="PythonPluginTest">
               <metrics coveredelements="10" complexity="2" methods="2" testruns="1" statements="8" coveredconditionals="0" coveredmethods="2" elements="10" testfailures="0" testduration="0.007" conditionals="0" coveredstatements="8" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testGetExtensions() : void" num="36" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="extensions(SonarRuntime) : List" num="45" count="3" type="method"/>
            <line num="46" count="3" type="stmt"/>
            <line num="47" count="3" type="stmt"/>
            <line num="48" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/test/java/org/sonar/plugins/python/PythonProfileTest.java" name="PythonProfileTest.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="3" loc="74" coveredmethods="3" methods="3" elements="19" classes="1" ncloc="40" statements="16" conditionals="0" coveredstatements="16"/>
            <class name="PythonProfileTest">
               <metrics coveredelements="19" complexity="3" methods="3" testruns="2" statements="16" coveredconditionals="0" coveredmethods="3" elements="19" testfailures="0" testduration="0.023" conditionals="0" coveredstatements="16" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="getProfile() : BuiltInQualityProfilesDefinition.BuiltInQualityProfile" num="37" count="1" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="profile() : void" num="43" testsuccess="true" count="1" testduration="0.021" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="should_contains_security_rules_if_available() : void" num="51" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/test/java/org/sonar/plugins/python/PythonRuleRepositoryTest.java" name="PythonRuleRepositoryTest.java">
            <metrics coveredelements="41" coveredconditionals="0" complexity="5" loc="107" coveredmethods="5" methods="5" elements="41" classes="1" ncloc="71" statements="36" conditionals="0" coveredstatements="36"/>
            <class name="PythonRuleRepositoryTest">
               <metrics coveredelements="41" complexity="5" methods="5" testruns="3" statements="36" coveredconditionals="0" coveredmethods="5" elements="41" testfailures="0" testduration="0.259" conditionals="0" coveredstatements="36" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="createRulesTest() : void" num="36" testsuccess="true" count="1" testduration="0.041" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="157" type="stmt"/>
            <line num="57" count="157" type="stmt"/>
            <line complexity="1" visibility="private" signature="nonAbstractCheckFiles() : List&lt;String&gt;" num="61" count="1" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ruleTemplates() : void" num="70" testsuccess="true" count="1" testduration="0.181" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hotspotRules() : void" num="93" testsuccess="true" count="1" testduration="0.037" type="method"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="buildRepository() : RulesDefinition.Repository" num="100" count="3" type="method"/>
            <line num="101" count="3" type="stmt"/>
            <line num="102" count="3" type="stmt"/>
            <line num="103" count="3" type="stmt"/>
            <line num="104" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/test/java/org/sonar/plugins/python/PythonSensorTest.java" name="PythonSensorTest.java">
            <metrics coveredelements="61" coveredconditionals="2" complexity="25" loc="436" coveredmethods="11" methods="20" elements="175" classes="2" ncloc="354" statements="151" conditionals="4" coveredstatements="48"/>
            <class name="PythonSensorTest">
               <metrics coveredelements="61" complexity="24" methods="19" testruns="10" statements="151" coveredconditionals="2" coveredmethods="11" elements="174" testfailures="6" testduration="0.17400000000000002" conditionals="4" coveredstatements="48" testpasses="4"/>
            </class>
            <class name="PythonSensorTest.MyCustomRule">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="repositoryKey() : String" num="89" count="9" type="method"/>
            <line num="91" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="checkClasses() : List&lt;Class&gt;" num="94" count="9" type="method"/>
            <line num="96" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="scanFile(PythonVisitorContext) : void" num="113" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="init() : void" num="128" count="10" type="method"/>
            <line num="130" count="10" type="stmt"/>
            <line num="131" count="10" type="stmt"/>
            <line num="132" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="sensor_descriptor() : void" num="135" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_execute_on_sonarlint() : void" num="146" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_symbol_visitor() : void" num="180" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="test_issues() : void" num="202" testsuccess="false" count="0" testduration="0.035" type="method"/>
            <line num="204" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="225" type="cond"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cross_files_secondary_locations() : void" num="265" testsuccess="false" count="0" testduration="0.005" type="method"/>
            <line num="267" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_test_file_highlighting() : void" num="286" testsuccess="false" count="0" testduration="0.099" type="method"/>
            <line num="288" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_exception_does_not_fail_analysis() : void" num="322" testsuccess="false" count="0" testduration="0.005" type="method"/>
            <line num="324" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_exception_should_fail_analysis_if_configured_so() : void" num="351" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="353" count="1" type="stmt"/>
            <line num="354" count="1" type="stmt"/>
            <line num="355" count="1" type="stmt"/>
            <line num="357" count="1" type="stmt"/>
            <line num="358" count="1" type="stmt"/>
            <line num="360" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="parse_error() : void" num="365" testsuccess="true" count="1" testduration="0.011" type="method"/>
            <line num="367" count="1" type="stmt"/>
            <line num="368" count="1" type="stmt"/>
            <line num="374" count="1" type="stmt"/>
            <line num="375" count="1" type="stmt"/>
            <line num="376" count="1" type="stmt"/>
            <line num="377" count="1" type="stmt"/>
            <line num="378" count="1" type="stmt"/>
            <line num="379" count="1" type="stmt"/>
            <line num="380" count="1" type="stmt"/>
            <line num="381" count="1" type="stmt"/>
            <line num="382" count="1" type="stmt"/>
            <line num="383" count="1" type="stmt"/>
            <line num="384" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="cancelled_analysis() : void" num="387" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="389" count="1" type="stmt"/>
            <line num="390" count="1" type="stmt"/>
            <line num="391" count="1" type="stmt"/>
            <line num="392" count="1" type="stmt"/>
            <line num="393" count="1" type="stmt"/>
            <line num="394" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="sensor() : PythonSensor" num="397" count="9" type="method"/>
            <line num="398" count="9" type="stmt"/>
            <line complexity="2" visibility="private" signature="sensor(PythonCustomRuleRepository[]) : PythonSensor" num="401" count="10" type="method"/>
            <line num="402" count="10" type="stmt"/>
            <line num="403" count="10" type="stmt"/>
            <line num="404" count="10" type="stmt"/>
            <line num="405" count="10" type="stmt"/>
            <line num="406" count="10" type="stmt"/>
            <line falsecount="9" truecount="1" num="406" type="cond"/>
            <line num="407" count="1" type="stmt"/>
            <line num="409" count="9" type="stmt"/>
            <line complexity="1" visibility="private" signature="inputFile(String) : InputFile" num="412" count="9" type="method"/>
            <line num="413" count="9" type="stmt"/>
            <line num="414" count="9" type="stmt"/>
            <line num="415" count="9" type="stmt"/>
            <line complexity="1" visibility="private" signature="createInputFile(String) : DefaultInputFile" num="418" count="10" type="method"/>
            <line num="419" count="10" type="stmt"/>
            <line complexity="1" visibility="private" signature="verifyUsages(String,int,int,TextRange) : void" num="428" count="0" type="method"/>
            <line num="429" count="0" type="stmt"/>
            <line num="430" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="reference(int,int,int,int) : TextRange" num="433" count="0" type="method"/>
            <line num="434" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/test/java/org/sonar/plugins/python/PythonTest.java" name="PythonTest.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="2" loc="46" coveredmethods="2" methods="2" elements="10" classes="1" ncloc="21" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="PythonTest">
               <metrics coveredelements="10" complexity="2" methods="2" testruns="2" statements="8" coveredconditionals="0" coveredmethods="2" elements="10" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="8" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="30" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="custom_file_suffixes() : void" num="38" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/test/java/org/sonar/plugins/python/SonarQubePythonFileTest.java" name="SonarQubePythonFileTest.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="2" loc="57" coveredmethods="1" methods="2" elements="11" classes="1" ncloc="30" statements="9" conditionals="0" coveredstatements="5"/>
            <class name="SonarQubePythonFileTest">
               <metrics coveredelements="6" complexity="2" methods="2" testruns="2" statements="9" coveredconditionals="0" coveredmethods="1" elements="11" testfailures="1" testduration="0.004" conditionals="0" coveredstatements="5" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="known_file() : void" num="40" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="unknown_file() : void" num="49" testsuccess="false" count="0" testduration="0.003" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/test/java/org/sonar/plugins/python/SymbolVisitorTest.java" name="SymbolVisitorTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="4" loc="92" coveredmethods="1" methods="4" elements="33" classes="1" ncloc="63" statements="29" conditionals="0" coveredstatements="7"/>
            <class name="SymbolVisitorTest">
               <metrics coveredelements="8" coveredconditionals="0" complexity="4" coveredmethods="1" methods="4" elements="33" statements="29" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="scanFile() : void" num="44" count="1" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="symbol_visitor() : void" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="verifyUsages(int,int,TextRange) : void" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="reference(int,int,int,int) : TextRange" num="89" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/test/java/org/sonar/plugins/python/TestUtils.java" name="TestUtils.java">
            <metrics coveredelements="3" coveredconditionals="0" complexity="3" loc="48" coveredmethods="1" methods="2" elements="5" classes="1" ncloc="22" statements="3" conditionals="0" coveredstatements="2"/>
            <class name="TestUtils">
               <metrics coveredelements="3" coveredconditionals="0" complexity="3" coveredmethods="1" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="private" signature="TestUtils()" num="36" count="0" type="method"/>
            <line complexity="2" visibility="public" signature="fileContent(File,Charset) : String" num="40" count="129" type="method"/>
            <line num="41" count="129" type="stmt"/>
            <line num="42" count="129" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.plugins.python.cpd">
         <metrics coveredelements="0" complexity="5" loc="133" methods="3" classes="1" statements="30" coveredconditionals="0" coveredmethods="0" elements="37" ncloc="99" files="1" conditionals="4" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/test/java/org/sonar/plugins/python/cpd/PythonCpdAnalyzerTest.java" name="PythonCpdAnalyzerTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="133" coveredmethods="0" methods="3" elements="37" classes="1" ncloc="99" statements="30" conditionals="4" coveredstatements="0"/>
            <class name="PythonCpdAnalyzerTest">
               <metrics coveredelements="0" complexity="5" methods="3" testruns="2" statements="30" coveredconditionals="0" coveredmethods="0" elements="37" testfailures="2" testduration="0.014" conditionals="4" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="code_chunks_2() : void" num="47" testsuccess="false" count="0" testduration="0.01" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="dedent_with_cpd() : void" num="96" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="inputFile(String) : DefaultInputFile" num="118" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.plugins.python.bandit">
         <metrics coveredelements="130" complexity="18" loc="296" methods="14" classes="2" statements="115" coveredconditionals="2" coveredmethods="14" elements="131" ncloc="221" files="2" conditionals="2" coveredstatements="114"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/test/java/org/sonar/plugins/python/bandit/BanditRulesDefinitionTest.java" name="BanditRulesDefinitionTest.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="1" loc="51" coveredmethods="1" methods="1" elements="16" classes="1" ncloc="25" statements="15" conditionals="0" coveredstatements="15"/>
            <class name="BanditRulesDefinitionTest">
               <metrics coveredelements="16" complexity="1" methods="1" testruns="1" statements="15" coveredconditionals="0" coveredmethods="1" elements="16" testfailures="0" testduration="0.011" conditionals="0" coveredstatements="15" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="bandit_lint_external_repository() : void" num="29" testsuccess="true" count="1" testduration="0.011" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/test/java/org/sonar/plugins/python/bandit/BanditSensorTest.java" name="BanditSensorTest.java">
            <metrics coveredelements="114" coveredconditionals="2" complexity="17" loc="245" coveredmethods="13" methods="13" elements="115" classes="1" ncloc="196" statements="100" conditionals="2" coveredstatements="99"/>
            <class name="BanditSensorTest">
               <metrics coveredelements="114" complexity="17" methods="13" testruns="8" statements="100" coveredconditionals="2" coveredmethods="13" elements="115" testfailures="0" testduration="0.03" conditionals="2" coveredstatements="99" testpasses="8"/>
            </class>
            <line complexity="1" visibility="public" signature="test_descriptor() : void" num="64" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="issues_with_sonarqube_72() : void" num="75" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="no_issues_without_report_paths_property() : void" num="129" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="no_issues_with_invalid_report_path() : void" num="136" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="no_issues_with_invalid_bandit_file() : void" num="145" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="no_issues_with_empty_bandit_file() : void" num="154" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="issues_when_bandit_file_has_errors() : void" num="161" testsuccess="true" count="1" testduration="0.008" type="method"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="issues_when_bandit_file_and_line_errors() : void" num="189" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="191" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line complexity="4" visibility="private" signature="executeSensorImporting(int,int,String) : List&lt;ExternalIssue&gt;" num="201" count="7" type="method"/>
            <line num="202" count="7" type="stmt"/>
            <line num="203" count="7" type="stmt"/>
            <line num="204" count="7" type="stmt"/>
            <line num="204" count="7" type="stmt"/>
            <line num="205" count="7" type="stmt"/>
            <line num="206" count="7" type="stmt"/>
            <line num="207" count="7" type="stmt"/>
            <line falsecount="1" truecount="6" num="207" type="cond"/>
            <line num="208" count="6" type="stmt"/>
            <line num="209" count="6" type="stmt"/>
            <line num="211" count="7" type="stmt"/>
            <line num="212" count="7" type="stmt"/>
            <line complexity="2" visibility="private" signature="addFileToContext(SensorContextTester,Path,Path) : void" num="216" count="49" type="method"/>
            <line num="217" count="49" type="stmt"/>
            <line num="218" count="49" type="stmt"/>
            <line num="219" count="49" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="language(Path) : String" num="230" count="49" type="method"/>
            <line num="231" count="49" type="stmt"/>
            <line num="232" count="49" type="stmt"/>
            <line complexity="1" visibility="public" signature="onlyOneLogElement(List&lt;String&gt;) : String" num="235" count="5" type="method"/>
            <line num="236" count="5" type="stmt"/>
            <line num="237" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertNoErrorWarnDebugLogs(LogTester) : void" num="240" count="4" type="method"/>
            <line num="241" count="4" type="stmt"/>
            <line num="242" count="4" type="stmt"/>
            <line num="243" count="4" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.plugins.python.flake8">
         <metrics coveredelements="135" complexity="17" loc="286" methods="13" classes="2" statements="121" coveredconditionals="2" coveredmethods="13" elements="136" ncloc="213" files="2" conditionals="2" coveredstatements="120"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/test/java/org/sonar/plugins/python/flake8/Flake8RulesDefinitionTest.java" name="Flake8RulesDefinitionTest.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="1" loc="50" coveredmethods="1" methods="1" elements="16" classes="1" ncloc="25" statements="15" conditionals="0" coveredstatements="15"/>
            <class name="Flake8RulesDefinitionTest">
               <metrics coveredelements="16" complexity="1" methods="1" testruns="1" statements="15" coveredconditionals="0" coveredmethods="1" elements="16" testfailures="0" testduration="0.052" conditionals="0" coveredstatements="15" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="flake8_external_repository() : void" num="29" testsuccess="true" count="1" testduration="0.052" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/test/java/org/sonar/plugins/python/flake8/Flake8SensorTest.java" name="Flake8SensorTest.java">
            <metrics coveredelements="119" coveredconditionals="2" complexity="16" loc="236" coveredmethods="12" methods="12" elements="120" classes="1" ncloc="188" statements="106" conditionals="2" coveredstatements="105"/>
            <class name="Flake8SensorTest">
               <metrics coveredelements="119" complexity="16" methods="12" testruns="7" statements="106" coveredconditionals="2" coveredmethods="12" elements="120" testfailures="0" testduration="0.12200000000000001" conditionals="2" coveredstatements="105" testpasses="7"/>
            </class>
            <line complexity="1" visibility="public" signature="test_descriptor() : void" num="65" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="issues_with_sonarqube_79() : void" num="75" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="issues_with_sonarqube_79_unknown_files() : void" num="120" testsuccess="true" count="1" testduration="0.008" type="method"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="no_issues_without_report_paths_property() : void" num="129" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="no_issues_with_invalid_report_path() : void" num="136" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="no_issues_with_empty_or_invalid_flake8_file() : void" num="145" testsuccess="true" count="1" testduration="0.013" type="method"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="issues_with_pylint_format() : void" num="156" testsuccess="true" count="1" testduration="0.083" type="method"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line complexity="4" visibility="private" signature="executeSensorImporting(int,int,String) : List&lt;ExternalIssue&gt;" num="191" count="7" type="method"/>
            <line num="192" count="7" type="stmt"/>
            <line num="193" count="7" type="stmt"/>
            <line num="194" count="7" type="stmt"/>
            <line num="194" count="7" type="stmt"/>
            <line num="195" count="7" type="stmt"/>
            <line num="196" count="7" type="stmt"/>
            <line num="197" count="7" type="stmt"/>
            <line falsecount="1" truecount="6" num="197" type="cond"/>
            <line num="198" count="6" type="stmt"/>
            <line num="199" count="6" type="stmt"/>
            <line num="201" count="7" type="stmt"/>
            <line num="202" count="7" type="stmt"/>
            <line complexity="2" visibility="private" signature="addFileToContext(SensorContextTester,Path,Path) : void" num="206" count="42" type="method"/>
            <line num="207" count="42" type="stmt"/>
            <line num="208" count="42" type="stmt"/>
            <line num="209" count="42" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="language(Path) : String" num="220" count="42" type="method"/>
            <line num="221" count="42" type="stmt"/>
            <line num="222" count="42" type="stmt"/>
            <line complexity="1" visibility="public" signature="onlyOneLogElement(List&lt;String&gt;) : String" num="225" count="3" type="method"/>
            <line num="226" count="3" type="stmt"/>
            <line num="227" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertNoErrorWarnDebugLogs(LogTester) : void" num="230" count="5" type="method"/>
            <line num="231" count="5" type="stmt"/>
            <line num="232" count="5" type="stmt"/>
            <line num="233" count="5" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.plugins.python.warnings">
         <metrics coveredelements="6" complexity="1" loc="41" methods="1" classes="1" statements="5" coveredconditionals="0" coveredmethods="1" elements="6" ncloc="17" files="1" conditionals="0" coveredstatements="5"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/test/java/org/sonar/plugins/python/warnings/AnalysisWarningsWrapperTest.java" name="AnalysisWarningsWrapperTest.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="1" loc="41" coveredmethods="1" methods="1" elements="6" classes="1" ncloc="17" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="AnalysisWarningsWrapperTest">
               <metrics coveredelements="6" complexity="1" methods="1" testruns="1" statements="5" coveredconditionals="0" coveredmethods="1" elements="6" testfailures="0" testduration="0.011" conditionals="0" coveredstatements="5" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="32" testsuccess="true" count="1" testduration="0.011" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.plugins.python.pylint">
         <metrics coveredelements="262" complexity="47" loc="815" methods="39" classes="8" statements="226" coveredconditionals="8" coveredmethods="38" elements="275" ncloc="547" files="8" conditionals="10" coveredstatements="216"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/test/java/org/sonar/plugins/python/pylint/PylintArgumentsTest.java" name="PylintArgumentsTest.java">
            <metrics coveredelements="15" coveredconditionals="1" complexity="6" loc="60" coveredmethods="5" methods="5" elements="17" classes="1" ncloc="32" statements="10" conditionals="2" coveredstatements="9"/>
            <class name="PylintArgumentsTest">
               <metrics coveredelements="15" complexity="6" methods="5" testruns="4" statements="10" coveredconditionals="1" coveredmethods="5" elements="17" testfailures="0" testduration="0.036" conditionals="2" coveredstatements="9" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="pylint_0_x() : void" num="30" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="pylint_bat_0_x() : void" num="36" testsuccess="true" count="1" testduration="0.014" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="pylint_1_x() : void" num="42" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="unknown() : void" num="48" testsuccess="true" count="1" testduration="0.014" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="command(String) : Command" num="53" count="4" type="method"/>
            <line num="54" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="54" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="4" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/test/java/org/sonar/plugins/python/pylint/PylintConfigurationTest.java" name="PylintConfigurationTest.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="3" loc="66" coveredmethods="3" methods="3" elements="17" classes="1" ncloc="35" statements="14" conditionals="0" coveredstatements="14"/>
            <class name="PylintConfigurationTest">
               <metrics coveredelements="17" complexity="3" methods="3" testruns="2" statements="14" coveredconditionals="0" coveredmethods="3" elements="17" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="14" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="36" count="2" type="method"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldGetCorrectPylintPath() : void" num="42" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPylintPath() : void" num="59" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/test/java/org/sonar/plugins/python/pylint/PylintImportSensorTest.java" name="PylintImportSensorTest.java">
            <metrics coveredelements="40" coveredconditionals="0" complexity="5" loc="144" coveredmethods="5" methods="5" elements="40" classes="1" ncloc="108" statements="35" conditionals="0" coveredstatements="35"/>
            <class name="PylintImportSensorTest">
               <metrics coveredelements="40" complexity="5" methods="5" testruns="4" statements="35" coveredconditionals="0" coveredmethods="5" elements="40" testfailures="0" testduration="0.018000000000000002" conditionals="0" coveredstatements="35" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="parse_report() : void" num="61" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="logsOnlyUnknownRules() : void" num="91" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="93" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="sensor_descriptor() : void" num="119" testsuccess="true" count="1" testduration="0.014" type="method"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="no_default_report_log() : void" num="132" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="configuration(Map&lt;String, String&gt;) : Configuration" num="140" count="2" type="method"/>
            <line num="141" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/test/java/org/sonar/plugins/python/pylint/PylintIssuesAnalyzerIT.java" name="PylintIssuesAnalyzerIT.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="50" coveredmethods="0" methods="1" elements="8" classes="1" ncloc="23" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="PylintIssuesAnalyzerIT">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="8" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="issuesTest() : void" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/test/java/org/sonar/plugins/python/pylint/PylintIssuesAnalyzerTest.java" name="PylintIssuesAnalyzerTest.java">
            <metrics coveredelements="76" coveredconditionals="4" complexity="16" loc="170" coveredmethods="11" methods="11" elements="78" classes="1" ncloc="132" statements="63" conditionals="4" coveredstatements="61"/>
            <class name="PylintIssuesAnalyzerTest">
               <metrics coveredelements="76" complexity="16" methods="11" testruns="8" statements="63" coveredconditionals="4" coveredmethods="11" elements="78" testfailures="0" testduration="0.016" conditionals="4" coveredstatements="61" testpasses="8"/>
            </class>
            <line complexity="1" visibility="public" signature="shouldParseCorrectly() : void" num="41" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldParseCorrectlyNewFormat() : void" num="51" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldParseCorrectlyOutputWithWindowsPaths() : void" num="62" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldMapIssuesIdsCorrectly() : void" num="72" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldWorkWithValidCustomConfig() : void" num="85" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldFailIfGivenInvalidConfig() : void" num="93" testsuccess="true" count="1" testduration="0.009" type="method"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="shouldInstantiateWhenGivenValidParams() : void" num="100" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line falsecount="1" truecount="4" num="115" type="cond"/>
            <line num="116" count="4" type="stmt"/>
            <line num="117" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="shouldFailIfGivenInvalidParams() : void" num="125" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="137" type="cond"/>
            <line num="138" count="3" type="stmt"/>
            <line num="139" count="3" type="stmt"/>
            <line num="142" count="3" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="readFile(String) : List&lt;String&gt;" num="148" count="5" type="method"/>
            <line num="149" count="5" type="stmt"/>
            <line num="150" count="5" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getIds(List&lt;Issue&gt;) : List&lt;String&gt;" num="157" count="2" type="method"/>
            <line num="158" count="2" type="stmt"/>
            <line num="159" count="2" type="stmt"/>
            <line num="160" count="20" type="stmt"/>
            <line num="162" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="analyzer(String,String) : PylintIssuesAnalyzer" num="165" count="14" type="method"/>
            <line num="166" count="14" type="stmt"/>
            <line num="167" count="14" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/test/java/org/sonar/plugins/python/pylint/PylintRuleParserTest.java" name="PylintRuleParserTest.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="4" loc="60" coveredmethods="4" methods="4" elements="13" classes="1" ncloc="31" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="PylintRuleParserTest">
               <metrics coveredelements="13" complexity="4" methods="4" testruns="4" statements="9" coveredconditionals="0" coveredmethods="4" elements="13" testfailures="0" testduration="0.012" conditionals="0" coveredstatements="9" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="hasExpectedRules() : void" num="35" testsuccess="true" count="1" testduration="0.011" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="logsWhenEmpty() : void" num="42" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="logsWhenFileNotFound() : void" num="48" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="logsWhenException() : void" num="54" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/test/java/org/sonar/plugins/python/pylint/PylintRuleRepositoryTest.java" name="PylintRuleRepositoryTest.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="1" loc="53" coveredmethods="1" methods="1" elements="13" classes="1" ncloc="25" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="PylintRuleRepositoryTest">
               <metrics coveredelements="13" complexity="1" methods="1" testruns="1" statements="12" coveredconditionals="0" coveredmethods="1" elements="13" testfailures="0" testduration="0.066" conditionals="0" coveredstatements="12" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="createRulesTest() : void" num="31" testsuccess="true" count="1" testduration="0.066" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/test/java/org/sonar/plugins/python/pylint/PylintSensorTest.java" name="PylintSensorTest.java">
            <metrics coveredelements="88" coveredconditionals="3" complexity="11" loc="212" coveredmethods="9" methods="9" elements="89" classes="1" ncloc="161" statements="76" conditionals="4" coveredstatements="76"/>
            <class name="PylintSensorTest">
               <metrics coveredelements="88" complexity="11" methods="9" testruns="5" statements="76" coveredconditionals="3" coveredmethods="9" elements="89" testfailures="0" testduration="0.09" conditionals="4" coveredstatements="76" testpasses="5"/>
            </class>
            <line complexity="2" visibility="public" signature="setup() : void" num="74" count="5" type="method"/>
            <line num="76" count="5" type="stmt"/>
            <line num="77" count="5" type="stmt"/>
            <line falsecount="0" truecount="5" num="77" type="cond"/>
            <line num="78" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="sensor_descriptor() : void" num="82" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldExecuteOnlyWhenNecessary() : void" num="94" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWhenNoPylint() : void" num="100" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWithFakePylint() : void" num="113" testsuccess="true" count="1" testduration="0.078" type="method"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testErrorOnFileContinueAnalysis() : void" num="161" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="createInputFile(File,SensorContextTester,String) : void" num="182" count="3" type="method"/>
            <line num="183" count="3" type="stmt"/>
            <line num="184" count="3" type="stmt"/>
            <line num="188" count="3" type="stmt"/>
            <line complexity="2" visibility="private" signature="shouldExecute(String) : boolean" num="191" count="2" type="method"/>
            <line num="192" count="2" type="stmt"/>
            <line num="193" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="193" type="cond"/>
            <line num="194" count="1" type="stmt"/>
            <line num="196" count="2" type="stmt"/>
            <line num="197" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="setupWorkDir() : void" num="200" count="5" type="method"/>
            <line num="201" count="5" type="stmt"/>
            <line num="203" count="5" type="stmt"/>
            <line num="204" count="5" type="stmt"/>
            <line num="205" count="5" type="stmt"/>
            <line num="206" count="5" type="stmt"/>
            <line num="208" count="5" type="stmt"/>
            <line num="209" count="5" type="stmt"/>
         </file>
      </package>
      <package name="org.sonar.plugins.python.parser">
         <metrics coveredelements="15" complexity="6" loc="58" methods="5" classes="1" statements="9" coveredconditionals="1" coveredmethods="5" elements="16" ncloc="31" files="1" conditionals="2" coveredstatements="9"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/test/java/org/sonar/plugins/python/parser/StaxParserTest.java" name="StaxParserTest.java">
            <metrics coveredelements="15" coveredconditionals="1" complexity="6" loc="58" coveredmethods="5" methods="5" elements="16" classes="1" ncloc="31" statements="9" conditionals="2" coveredstatements="9"/>
            <class name="StaxParserTest">
               <metrics coveredelements="15" complexity="6" methods="5" testruns="3" statements="9" coveredconditionals="1" coveredmethods="5" elements="16" testfailures="0" testduration="0.002" conditionals="2" coveredstatements="9" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="test_XML_with_DTD() : void" num="29" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_XML_with_XSD() : void" num="35" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_XML_with_XSD_and_ampersand() : void" num="41" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="getTestHandler() : XmlStreamHandler" num="47" count="3" type="method"/>
            <line num="48" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="stream(SMHierarchicCursor) : void" num="49" count="3" type="method"/>
            <line num="50" count="3" type="stmt"/>
            <line num="51" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="51" type="cond"/>
         </file>
      </package>
      <package name="org.sonar.plugins.python.xunit">
         <metrics coveredelements="151" complexity="22" loc="396" methods="22" classes="4" statements="129" coveredconditionals="0" coveredmethods="22" elements="151" ncloc="253" files="4" conditionals="0" coveredstatements="129"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/test/java/org/sonar/plugins/python/xunit/PythonXUnitSensorTest.java" name="PythonXUnitSensorTest.java">
            <metrics coveredelements="87" coveredconditionals="0" complexity="12" loc="198" coveredmethods="12" methods="12" elements="87" classes="1" ncloc="145" statements="75" conditionals="0" coveredstatements="75"/>
            <class name="PythonXUnitSensorTest">
               <metrics coveredelements="87" complexity="12" methods="12" testruns="9" statements="75" coveredconditionals="0" coveredmethods="12" elements="87" testfailures="0" testduration="0.032" conditionals="0" coveredstatements="75" testpasses="9"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="60" count="9" type="method"/>
            <line num="62" count="9" type="stmt"/>
            <line num="63" count="9" type="stmt"/>
            <line num="64" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldSaveCorrectMeasures() : void" num="67" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldSaveCorrectMeasuresSimpleMode() : void" num="88" testsuccess="true" count="1" testduration="0.014" type="method"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldReportNothingWhenNoReportFound() : void" num="102" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldLogWarningWhenGivenInvalidTime() : void" num="114" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldSaveCorrectMeasuresWithPyTestFormat() : void" num="125" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNoTestReport() : void" num="147" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="fallbackToTestsuiteName() : void" num="158" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="160" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="malformedReport() : void" num="171" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="missingAttributes() : void" num="184" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="moduleMeasure(Metric&lt;Integer&gt;) : Integer" num="190" count="4" type="method"/>
            <line num="191" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="measure(InputComponent,Metric&lt;Integer&gt;) : Integer" num="194" count="28" type="method"/>
            <line num="195" count="28" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/test/java/org/sonar/plugins/python/xunit/TestCaseTest.java" name="TestCaseTest.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="1" loc="44" coveredmethods="1" methods="1" elements="7" classes="1" ncloc="20" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="TestCaseTest">
               <metrics coveredelements="7" complexity="1" methods="1" testruns="1" statements="6" coveredconditionals="0" coveredmethods="1" elements="7" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="6" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="rendersRightDetails() : void" num="29" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/test/java/org/sonar/plugins/python/xunit/TestResultTest.java" name="TestResultTest.java">
            <metrics coveredelements="48" coveredconditionals="0" complexity="8" loc="113" coveredmethods="8" methods="8" elements="48" classes="1" ncloc="72" statements="40" conditionals="0" coveredstatements="40"/>
            <class name="TestResultTest">
               <metrics coveredelements="48" complexity="8" methods="8" testruns="6" statements="40" coveredconditionals="0" coveredmethods="8" elements="48" testfailures="0" testduration="0.024" conditionals="0" coveredstatements="40" testpasses="6"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="33" count="6" type="method"/>
            <line num="35" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="newBornSuiteShouldHaveVirginStatistics() : void" num="38" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="addingTestCaseShouldIncrementStatistics() : void" num="48" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="executedTestsValue() : void" num="60" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="createTestCase(int,String) : TestCase" num="76" count="6" type="method"/>
            <line num="77" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="addingAnErroneousTestCaseShouldIncrementErrorStatistic() : void" num="80" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="addingAFailedestCaseShouldIncrementFailedStatistic() : void" num="91" testsuccess="true" count="1" testduration="0.022" type="method"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="addingASkippedTestCaseShouldIncrementSkippedStatistic() : void" num="102" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/test/java/org/sonar/plugins/python/xunit/TestSuiteTest.java" name="TestSuiteTest.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="1" loc="41" coveredmethods="1" methods="1" elements="9" classes="1" ncloc="16" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="TestSuiteTest">
               <metrics coveredelements="9" complexity="1" methods="1" testruns="1" statements="8" coveredconditionals="0" coveredmethods="1" elements="9" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="8" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="28" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
         </file>
      </package>
      <package name="com.sonar.plugins.security.api">
         <metrics coveredelements="8" complexity="4" loc="47" methods="3" classes="1" statements="4" coveredconditionals="2" coveredmethods="2" elements="9" ncloc="19" files="1" conditionals="2" coveredstatements="4"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/sonar-python-plugin/src/test/java/com/sonar/plugins/security/api/PythonRules.java" name="PythonRules.java">
            <metrics coveredelements="8" coveredconditionals="2" complexity="4" loc="47" coveredmethods="2" methods="3" elements="9" classes="1" ncloc="19" statements="4" conditionals="2" coveredstatements="4"/>
            <class name="PythonRules">
               <metrics coveredelements="8" coveredconditionals="2" complexity="4" coveredmethods="2" methods="3" elements="9" statements="4" conditionals="2" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="private" signature="PythonRules()" num="33" count="0" type="method"/>
            <line complexity="2" visibility="public" signature="getRuleKeys() : Set&lt;String&gt;" num="36" count="6" type="method"/>
            <line num="37" count="6" type="stmt"/>
            <line falsecount="5" truecount="1" num="37" type="cond"/>
            <line num="38" count="1" type="stmt"/>
            <line num="40" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRepositoryKey() : String" num="43" count="3" type="method"/>
            <line num="44" count="3" type="stmt"/>
         </file>
      </package>
   </testproject>
</coverage>