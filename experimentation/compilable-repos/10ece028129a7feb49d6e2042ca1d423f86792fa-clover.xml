<?xml version="1.0" encoding="UTF-8"?>
<coverage generated="1594337634918" clover="4.4.1">
   <project name="thomasjungblut-common 2.0.1-SNAPSHOT" timestamp="1594337630160">
      <metrics coveredelements="4874" complexity="2641" loc="24058" methods="1390" classes="253" statements="7375" packages="26" coveredconditionals="793" coveredmethods="631" elements="10915" ncloc="15798" files="218" conditionals="2150" coveredstatements="3450"/>
      <package name="de.jungblut.math.minimize">
         <metrics coveredelements="116" complexity="202" loc="1916" methods="76" classes="21" statements="606" coveredconditionals="18" coveredmethods="17" elements="902" ncloc="1192" files="18" conditionals="220" coveredstatements="81"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/math/minimize/AbstractMiniBatchCostFunction.java" name="AbstractMiniBatchCostFunction.java">
            <metrics coveredelements="40" coveredconditionals="6" complexity="18" loc="205" coveredmethods="4" methods="5" elements="86" classes="2" ncloc="129" statements="59" conditionals="22" coveredstatements="30"/>
            <class name="AbstractMiniBatchCostFunction">
               <metrics coveredelements="34" coveredconditionals="6" complexity="16" coveredmethods="2" methods="3" elements="80" statements="55" conditionals="22" coveredstatements="26"/>
            </class>
            <class name="AbstractMiniBatchCostFunction.CallableMiniBatch">
               <metrics coveredelements="6" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="CallableMiniBatch(Tuple&lt;DoubleMatrix, DoubleMatrix&gt;,DoubleVector)" num="46" count="1" type="method"/>
            <line num="48" count="2" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="call() : CostGradientTuple" num="53" count="2" type="method"/>
            <line num="55" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractMiniBatchCostFunction(DoubleVector[],DoubleVector[],int,int)" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="AbstractMiniBatchCostFunction(DoubleVector[],DoubleVector[],int,int,boolean)" num="91" count="3" type="method"/>
            <line num="94" count="3" type="stmt"/>
            <line num="97" count="3" type="stmt"/>
            <line num="99" count="3" type="stmt"/>
            <line num="101" count="3" type="stmt"/>
            <line num="105" count="3" type="stmt"/>
            <line num="106" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="106" type="cond"/>
            <line num="107" count="3" type="stmt"/>
            <line num="108" count="3" type="stmt"/>
            <line num="109" count="3" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="118" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="118" type="cond"/>
            <line num="120" count="3" type="stmt"/>
            <line num="121" count="3" type="stmt"/>
            <line num="122" count="3" type="stmt"/>
            <line num="123" count="3" type="stmt"/>
            <line num="124" count="2" type="stmt"/>
            <line num="126" count="3" type="stmt"/>
            <line num="127" count="3" type="stmt"/>
            <line num="128" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="128" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="3" type="stmt"/>
            <line num="134" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="134" type="cond"/>
            <line num="136" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="136" type="cond"/>
            <line num="138" count="2" type="stmt"/>
            <line complexity="8" visibility="public" signature="evaluateCost(DoubleVector) : CostGradientTuple" num="142" count="2" type="method"/>
            <line num="145" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="145" type="cond"/>
            <line num="146" count="2" type="stmt"/>
            <line num="147" count="2" type="stmt"/>
            <line num="148" count="2" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="161" type="cond"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
            <line num="166" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="168" type="cond"/>
            <line num="169" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="178" type="cond"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/math/minimize/AbstractMinimizer.java" name="AbstractMinimizer.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="44" coveredmethods="0" methods="2" elements="5" classes="1" ncloc="16" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="AbstractMinimizer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="addIterationCompletionCallback(IterationCompletionListener) : void" num="25" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="onIterationFinished(int,double,DoubleVector) : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/math/minimize/CostFunction.java" name="CostFunction.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="22" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="CostFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/math/minimize/CostGradientTuple.java" name="CostGradientTuple.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="3" loc="29" coveredmethods="3" methods="3" elements="8" classes="1" ncloc="17" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="CostGradientTuple">
               <metrics coveredelements="8" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="CostGradientTuple(double,DoubleVector)" num="15" count="12" type="method"/>
            <line num="16" count="12" type="stmt"/>
            <line num="17" count="12" type="stmt"/>
            <line num="18" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCost() : double" num="21" count="10" type="method"/>
            <line num="22" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="getGradient() : DoubleVector" num="25" count="4" type="method"/>
            <line num="26" count="4" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/math/minimize/DenseMatrixFolder.java" name="DenseMatrixFolder.java">
            <metrics coveredelements="35" coveredconditionals="12" complexity="14" loc="98" coveredmethods="2" methods="4" elements="57" classes="1" ncloc="63" statements="33" conditionals="20" coveredstatements="21"/>
            <class name="DenseMatrixFolder">
               <metrics coveredelements="35" coveredconditionals="12" complexity="14" coveredmethods="2" methods="4" elements="57" statements="33" conditionals="20" coveredstatements="21"/>
            </class>
            <line complexity="3" visibility="public" signature="foldMatrices(DoubleMatrix) : DoubleVector" num="13" count="6" type="method"/>
            <line num="14" count="6" type="stmt"/>
            <line num="15" count="6" type="stmt"/>
            <line num="16" count="7" type="stmt"/>
            <line num="19" count="6" type="stmt"/>
            <line num="20" count="6" type="stmt"/>
            <line num="21" count="6" type="stmt"/>
            <line num="22" count="7" type="stmt"/>
            <line falsecount="7" truecount="45" num="22" type="cond"/>
            <line num="23" count="45" type="stmt"/>
            <line falsecount="45" truecount="131" num="23" type="cond"/>
            <line num="24" count="131" type="stmt"/>
            <line num="29" count="6" type="stmt"/>
            <line complexity="5" visibility="public" signature="unfoldMatrices(DoubleVector,int[][]) : DoubleMatrix[]" num="39" count="3" type="method"/>
            <line num="41" count="2" type="stmt"/>
            <line num="42" count="3" type="stmt"/>
            <line falsecount="3" truecount="4" num="42" type="cond"/>
            <line num="43" count="4" type="stmt"/>
            <line num="46" count="3" type="stmt"/>
            <line num="47" count="3" type="stmt"/>
            <line falsecount="3" truecount="4" num="47" type="cond"/>
            <line num="48" count="4" type="stmt"/>
            <line num="49" count="4" type="stmt"/>
            <line num="50" count="4" type="stmt"/>
            <line falsecount="4" truecount="22" num="50" type="cond"/>
            <line num="51" count="22" type="stmt"/>
            <line falsecount="22" truecount="57" num="51" type="cond"/>
            <line num="52" count="58" type="stmt"/>
            <line num="57" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="unfoldMatrix(DoubleVector,int,int) : DoubleMatrix" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="foldMatrix(DoubleMatrix) : DoubleVector" num="85" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/math/minimize/Fmincg.java" name="Fmincg.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="34" loc="274" coveredmethods="0" methods="2" elements="167" classes="1" ncloc="156" statements="119" conditionals="46" coveredstatements="0"/>
            <class name="Fmincg">
               <metrics coveredelements="0" coveredconditionals="0" complexity="34" coveredmethods="0" methods="2" elements="167" statements="119" conditionals="46" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="minimizeFunction(CostFunction,DoubleVector,int,boolean) : DoubleVector" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="33" visibility="public" signature="minimize(CostFunction,DoubleVector,int,boolean) : DoubleVector" num="96" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="116" type="cond"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="127" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="143" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="149" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="159" type="cond"/>
            <line num="161" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="172" type="cond"/>
            <line num="173" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="177" type="cond"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="179" type="cond"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="182" type="cond"/>
            <line num="183" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="192" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="192" type="cond"/>
            <line num="194" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="199" type="cond"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="202" type="cond"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="205" type="cond"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="207" type="cond"/>
            <line num="209" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="222" type="cond"/>
            <line num="223" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="228" type="cond"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="230" type="cond"/>
            <line num="231" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="243" type="cond"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="257" type="cond"/>
            <line num="258" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/math/minimize/GradientDescent.java" name="GradientDescent.java">
            <metrics coveredelements="22" coveredconditionals="0" complexity="31" loc="290" coveredmethods="7" methods="17" elements="120" classes="2" ncloc="168" statements="79" conditionals="24" coveredstatements="15"/>
            <class name="GradientDescent">
               <metrics coveredelements="0" coveredconditionals="0" complexity="22" coveredmethods="0" methods="8" elements="91" statements="59" conditionals="24" coveredstatements="0"/>
            </class>
            <class name="GradientDescent.GradientDescentBuilder">
               <metrics coveredelements="22" coveredconditionals="0" complexity="9" coveredmethods="7" methods="9" elements="29" statements="20" conditionals="0" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="private" signature="GradientDescentBuilder(double)" num="35" count="3" type="method"/>
            <line num="36" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : GradientDescent" num="39" count="3" type="method"/>
            <line num="40" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="momentum(double) : GradientDescentBuilder" num="49" count="1" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="boldDriver() : GradientDescentBuilder" num="63" count="1" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="boldDriver(double,double) : GradientDescentBuilder" num="79" count="1" type="method"/>
            <line num="81" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="breakOnDivergence() : GradientDescentBuilder" num="99" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="breakOnDifference(double) : GradientDescentBuilder" num="111" count="2" type="method"/>
            <line num="112" count="2" type="stmt"/>
            <line num="113" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="annealingAfter(int) : GradientDescentBuilder" num="124" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(double) : GradientDescentBuilder" num="138" count="3" type="method"/>
            <line num="139" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="GradientDescent(GradientDescentBuilder)" num="153" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="GradientDescent(double,double)" num="168" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="13" visibility="public" signature="minimize(CostFunction,DoubleVector,int,boolean) : DoubleVector" num="172" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="183" type="cond"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="185" type="cond"/>
            <line num="186" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="192" type="cond"/>
            <line num="193" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="196" type="cond"/>
            <line num="197" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="202" type="cond"/>
            <line num="203" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="203" type="cond"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="205" type="cond"/>
            <line num="207" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="215" type="cond"/>
            <line num="216" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="222" type="cond"/>
            <line num="224" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="230" type="cond"/>
            <line num="233" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="minimizeFunction(CostFunction,DoubleVector,double,double,int,boolean) : DoubleVector" num="256" count="0" type="method"/>
            <line num="259" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="shiftLeft(double[]) : void" num="263" count="0" type="method"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="265" type="cond"/>
            <line num="266" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="converged(double[],double) : boolean" num="272" count="0" type="method"/>
            <line num="273" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="ascending(double[]) : boolean" num="276" count="0" type="method"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="279" type="cond"/>
            <line num="280" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getCostDifference(double[]) : double" num="286" count="0" type="method"/>
            <line num="287" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/math/minimize/IterationCompletionListener.java" name="IterationCompletionListener.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="23" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="IterationCompletionListener">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/math/minimize/Minimizer.java" name="Minimizer.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="24" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Minimizer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/math/minimize/NegatedCostFunction.java" name="NegatedCostFunction.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="27" coveredmethods="0" methods="2" elements="5" classes="1" ncloc="14" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="NegatedCostFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="NegatedCostFunction(CostFunction)" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluateCost(DoubleVector) : CostGradientTuple" num="20" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/math/minimize/OWLQN.java" name="OWLQN.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="64" loc="409" coveredmethods="0" methods="20" elements="276" classes="1" ncloc="281" statements="172" conditionals="84" coveredstatements="0"/>
            <class name="OWLQN">
               <metrics coveredelements="0" coveredconditionals="0" complexity="64" coveredmethods="0" methods="20" elements="276" statements="172" conditionals="84" coveredstatements="0"/>
            </class>
            <line complexity="7" visibility="public" signature="minimize(CostFunction,DoubleVector,int,boolean) : DoubleVector" num="65" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="100" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="updateDir(CostFunction,boolean) : void" num="131" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="testDirectionDerivation(CostFunction) : void" num="141" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="145" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="fixDirectionSigns() : void" num="156" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="157" type="cond"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="159" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="mapDirectionByInverseHessian() : void" num="166" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="169" type="cond"/>
            <line num="170" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="170" type="cond"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="180" type="cond"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="7" visibility="private" signature="makeSteepestDescDir() : void" num="187" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="188" type="cond"/>
            <line num="189" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="192" type="cond"/>
            <line num="193" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="193" type="cond"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="195" type="cond"/>
            <line num="196" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="198" type="cond"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="200" type="cond"/>
            <line num="201" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line complexity="7" visibility="private" signature="backTrackingLineSearch(int,CostFunction) : boolean" num="212" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="218" type="cond"/>
            <line num="219" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="221" type="cond"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="228" type="cond"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="241" type="cond"/>
            <line num="242" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="getNextPoint(double) : void" num="251" count="0" type="method"/>
            <line num="252" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="254" type="cond"/>
            <line num="255" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="255" type="cond"/>
            <line num="256" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="256" type="cond"/>
            <line num="257" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="addMultInto(DoubleVector,DoubleVector,DoubleVector,double) : void" num="263" count="0" type="method"/>
            <line num="265" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="265" type="cond"/>
            <line num="266" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="addMult(DoubleVector,DoubleVector,double) : void" num="270" count="0" type="method"/>
            <line num="271" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="271" type="cond"/>
            <line num="272" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="scale(DoubleVector,double) : void" num="276" count="0" type="method"/>
            <line num="277" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="277" type="cond"/>
            <line num="278" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="scaleInto(DoubleVector,DoubleVector,double) : void" num="282" count="0" type="method"/>
            <line num="283" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="283" type="cond"/>
            <line num="284" count="0" type="stmt"/>
            <line complexity="8" visibility="private" signature="directionDerivation() : double" num="288" count="0" type="method"/>
            <line num="289" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="289" type="cond"/>
            <line num="290" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="293" type="cond"/>
            <line num="294" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="294" type="cond"/>
            <line num="295" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="295" type="cond"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="297" type="cond"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="299" type="cond"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="301" type="cond"/>
            <line num="302" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="evaluateL1(CostFunction) : double" num="311" count="0" type="method"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="315" type="cond"/>
            <line num="316" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="316" type="cond"/>
            <line num="317" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="shift() : void" num="324" count="0" type="method"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="330" type="cond"/>
            <line num="331" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="335" type="cond"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line num="355" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="doGradChecks() : OWLQN" num="364" count="0" type="method"/>
            <line num="365" count="0" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setM(int) : OWLQN" num="373" count="0" type="method"/>
            <line num="374" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setL1Weight(double) : OWLQN" num="382" count="0" type="method"/>
            <line num="383" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setTolerance(double) : OWLQN" num="391" count="0" type="method"/>
            <line num="392" count="0" type="stmt"/>
            <line num="393" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="minimizeFunction(CostFunction,DoubleVector,int,boolean) : DoubleVector" num="405" count="0" type="method"/>
            <line num="407" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/math/minimize/ParticleSwarmOptimization.java" name="ParticleSwarmOptimization.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="18" loc="201" coveredmethods="0" methods="5" elements="92" classes="2" ncloc="144" statements="63" conditionals="24" coveredstatements="0"/>
            <class name="ParticleSwarmOptimization">
               <metrics coveredelements="0" coveredconditionals="0" complexity="12" coveredmethods="0" methods="3" elements="58" statements="39" conditionals="16" coveredstatements="0"/>
            </class>
            <class name="ParticleSwarmOptimization.CallableOptimization">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="2" elements="34" statements="24" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ParticleSwarmOptimization(int,double,double,double,int)" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="10" visibility="public" signature="minimize(CostFunction,DoubleVector,int,boolean) : DoubleVector" num="47" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CallableOptimization(CostFunction,int,double,Range,DoubleVector[],double[],DoubleVector[],DoubleVector)" num="129" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="call() : Tuple&lt;Double, DoubleVector&gt;" num="144" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="147" type="cond"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="151" type="cond"/>
            <line num="152" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="162" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="166" type="cond"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="minimizeFunction(CostFunction,DoubleVector,int,double,double,double,int,int,boolean) : DoubleVector" num="193" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/math/minimize/DenseMatrixFolderTest.java" name="DenseMatrixFolderTest.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="10" classes="1" ncloc="25" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="DenseMatrixFolderTest">
               <metrics coveredelements="10" complexity="1" methods="1" testruns="1" statements="9" coveredconditionals="0" coveredmethods="1" elements="10" testfailures="0" testduration="0.007" conditionals="0" coveredstatements="9" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testFoldAndUnfold() : void" num="13" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="15" count="1" type="stmt"/>
            <line num="17" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/math/minimize/FmincgTest.java" name="FmincgTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="36" coveredmethods="0" methods="2" elements="10" classes="1" ncloc="24" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="FmincgTest">
               <metrics coveredelements="0" complexity="2" methods="2" testruns="1" statements="8" coveredconditionals="0" coveredmethods="0" elements="10" testfailures="1" testduration="0.064" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testSimpleParable() : void" num="11" testsuccess="false" count="0" testduration="0.064" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line num="15" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluateCost(DoubleVector) : CostGradientTuple" num="20" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/math/minimize/GradientDescentTest.java" name="GradientDescentTest.java">
            <metrics coveredelements="1" coveredconditionals="0" complexity="5" loc="72" coveredmethods="0" methods="5" elements="27" classes="1" ncloc="51" statements="22" conditionals="0" coveredstatements="1"/>
            <class name="GradientDescentTest">
               <metrics coveredelements="1" complexity="5" methods="5" testruns="1" statements="22" coveredconditionals="0" coveredmethods="0" elements="27" testfailures="1" testduration="0.069" conditionals="0" coveredstatements="1" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testGradientDescent() : void" num="12" testsuccess="false" count="0" testduration="0.069" type="method"/>
            <line num="15" count="0" type="stmt"/>
            <line num="17" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBoldDriver() : void" num="26" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMomentumGradientDescent() : void" num="40" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getCostFunction() : CostFunction" num="55" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluateCost(DoubleVector) : CostGradientTuple" num="59" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/math/minimize/NegatedCostFunctionTest.java" name="NegatedCostFunctionTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="34" coveredmethods="0" methods="2" elements="9" classes="1" ncloc="24" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="NegatedCostFunctionTest">
               <metrics coveredelements="0" complexity="2" methods="2" testruns="1" statements="7" coveredconditionals="0" coveredmethods="0" elements="9" testfailures="1" testduration="0.054" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testMaximize() : void" num="11" testsuccess="false" count="0" testduration="0.054" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluateCost(DoubleVector) : CostGradientTuple" num="19" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/math/minimize/OWLQNTest.java" name="OWLQNTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="37" coveredmethods="0" methods="2" elements="10" classes="1" ncloc="24" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="OWLQNTest">
               <metrics coveredelements="0" complexity="2" methods="2" testruns="1" statements="8" coveredconditionals="0" coveredmethods="0" elements="10" testfailures="1" testduration="0.065" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testSimpleParable() : void" num="11" testsuccess="false" count="0" testduration="0.065" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line num="15" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluateCost(DoubleVector) : CostGradientTuple" num="20" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/math/minimize/ParticleSwarmOptimizationTest.java" name="ParticleSwarmOptimizationTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="58" coveredmethods="0" methods="4" elements="20" classes="1" ncloc="39" statements="16" conditionals="0" coveredstatements="0"/>
            <class name="ParticleSwarmOptimizationTest">
               <metrics coveredelements="0" complexity="4" methods="4" testruns="1" statements="16" coveredconditionals="0" coveredmethods="0" elements="20" testfailures="1" testduration="0.054" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testParticleSwarmOptimization() : void" num="11" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluateCost(DoubleVector) : CostGradientTuple" num="18" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testParticleSwarmOptimizationNonConvex() : void" num="34" testsuccess="false" count="0" testduration="0.054" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluateCost(DoubleVector) : CostGradientTuple" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
         </file>
      </package>
      <package name="de.jungblut.classification.nn">
         <metrics coveredelements="130" complexity="188" loc="1872" methods="117" classes="13" statements="501" coveredconditionals="20" coveredmethods="24" elements="752" ncloc="1246" files="10" conditionals="134" coveredstatements="86"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/classification/nn/MLPWeightMapper.java" name="MLPWeightMapper.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="30" coveredmethods="0" methods="2" elements="10" classes="1" ncloc="24" statements="6" conditionals="2" coveredstatements="0"/>
            <class name="MLPWeightMapper">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="10" statements="6" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="MLPWeightMapper(ClassifierFactory&lt;MultilayerPerceptron&gt;)" num="14" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="mapWeights(DoubleVector) : MultilayerPerceptron" num="20" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="24" type="cond"/>
            <line num="25" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/classification/nn/MultilayerPerceptron.java" name="MultilayerPerceptron.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="52" loc="485" coveredmethods="0" methods="36" elements="189" classes="2" ncloc="300" statements="125" conditionals="28" coveredstatements="0"/>
            <class name="MultilayerPerceptron">
               <metrics coveredelements="0" coveredconditionals="0" complexity="38" coveredmethods="0" methods="22" elements="148" statements="98" conditionals="28" coveredstatements="0"/>
            </class>
            <class name="MultilayerPerceptron.MultilayerPerceptronBuilder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="14" elements="41" statements="27" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="MultilayerPerceptronBuilder(int[],ActivationFunction[],Minimizer,int,LossFunction)" num="56" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="trainingType(TrainingType) : MultilayerPerceptronBuilder" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="lambda(double) : MultilayerPerceptronBuilder" num="78" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="verbose() : MultilayerPerceptronBuilder" num="86" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="verbose(boolean) : MultilayerPerceptronBuilder" num="93" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hiddenLayerDropout(double) : MultilayerPerceptronBuilder" num="101" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inputLayerDropout(double) : MultilayerPerceptronBuilder" num="109" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="withWeights(WeightMatrix[]) : MultilayerPerceptronBuilder" num="118" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="miniBatchSize(int) : MultilayerPerceptronBuilder" num="128" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="batchParallelism(int) : MultilayerPerceptronBuilder" num="137" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="stochastic() : MultilayerPerceptronBuilder" num="145" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="stochastic(boolean) : MultilayerPerceptronBuilder" num="152" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : MultilayerPerceptron" num="160" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(int[],ActivationFunction[],LossFunction,Minimizer,int) : MultilayerPerceptronBuilder" num="178" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="MultilayerPerceptron(MultilayerPerceptronBuilder)" num="203" count="0" type="method"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="220" type="cond"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="223" type="cond"/>
            <line num="224" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="232" type="cond"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="234" type="cond"/>
            <line num="235" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="239" type="cond"/>
            <line num="240" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="MultilayerPerceptron(int[],WeightMatrix[],ActivationFunction[],LossFunction)" num="258" count="0" type="method"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="predict(DoubleVector) : DoubleVector" num="271" count="0" type="method"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="275" type="cond"/>
            <line num="276" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="279" type="cond"/>
            <line num="280" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="predict(DoubleVector,double) : DoubleVector" num="291" count="0" type="method"/>
            <line num="292" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="293" type="cond"/>
            <line num="294" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="294" type="cond"/>
            <line num="297" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="addBias(DoubleVector) : DoubleVector" num="301" count="0" type="method"/>
            <line num="302" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="train(DoubleVector[],DoubleVector[]) : void" num="305" count="0" type="method"/>
            <line num="307" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="train(DoubleVector[],DoubleVector[],Minimizer,int,double,boolean) : double" num="328" count="0" type="method"/>
            <line num="330" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="trainInternal(Minimizer,int,boolean,CostFunction,DoubleVector) : double" num="348" count="0" type="method"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="359" type="cond"/>
            <line num="360" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFoldedThetaVector() : DoubleVector" num="369" count="0" type="method"/>
            <line num="371" count="0" type="stmt"/>
            <line num="372" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="372" type="cond"/>
            <line num="373" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getWeights() : WeightMatrix[]" num="378" count="0" type="method"/>
            <line num="379" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLayers() : int[]" num="382" count="0" type="method"/>
            <line num="383" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getActivations() : ActivationFunction[]" num="386" count="0" type="method"/>
            <line num="387" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getHiddenDropoutProbability() : double" num="390" count="0" type="method"/>
            <line num="391" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getVisibleDropoutProbability() : double" num="394" count="0" type="method"/>
            <line num="395" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getErrorFunction() : LossFunction" num="398" count="0" type="method"/>
            <line num="399" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getTrainingType() : TrainingType" num="402" count="0" type="method"/>
            <line num="403" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getLambda() : double" num="406" count="0" type="method"/>
            <line num="407" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getBatchParallelism() : int" num="410" count="0" type="method"/>
            <line num="411" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getMiniBatchSize() : int" num="414" count="0" type="method"/>
            <line num="415" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="isStochastic() : boolean" num="418" count="0" type="method"/>
            <line num="419" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="deserialize(DataInput) : MultilayerPerceptron" num="426" count="0" type="method"/>
            <line num="428" count="0" type="stmt"/>
            <line num="429" count="0" type="stmt"/>
            <line num="430" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="430" type="cond"/>
            <line num="431" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line num="435" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="435" type="cond"/>
            <line num="436" count="0" type="stmt"/>
            <line num="437" count="0" type="stmt"/>
            <line num="438" count="0" type="stmt"/>
            <line num="441" count="0" type="stmt"/>
            <line num="442" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="442" type="cond"/>
            <line num="443" count="0" type="stmt"/>
            <line num="444" count="0" type="stmt"/>
            <line num="448" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line num="453" count="0" type="stmt"/>
            <line num="456" count="0" type="stmt"/>
            <line num="459" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(MultilayerPerceptron,DataOutput) : void" num="466" count="0" type="method"/>
            <line num="468" count="0" type="stmt"/>
            <line num="470" count="0" type="stmt"/>
            <line num="471" count="0" type="stmt"/>
            <line num="474" count="0" type="stmt"/>
            <line num="475" count="0" type="stmt"/>
            <line num="476" count="0" type="stmt"/>
            <line num="479" count="0" type="stmt"/>
            <line num="480" count="0" type="stmt"/>
            <line num="482" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/classification/nn/MultilayerPerceptronCostFunction.java" name="MultilayerPerceptronCostFunction.java">
            <metrics coveredelements="7" coveredconditionals="2" complexity="28" loc="253" coveredmethods="1" methods="12" elements="115" classes="2" ncloc="170" statements="71" conditionals="32" coveredstatements="4"/>
            <class name="MultilayerPerceptronCostFunction">
               <metrics coveredelements="7" coveredconditionals="2" complexity="28" coveredmethods="1" methods="12" elements="115" statements="71" conditionals="32" coveredstatements="4"/>
            </class>
            <class name="MultilayerPerceptronCostFunction.NetworkConfiguration">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="MultilayerPerceptronCostFunction(MultilayerPerceptron,DoubleVector[],DoubleVector[])" num="26" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="evaluateBatch(DoubleVector,DoubleMatrix,DoubleMatrix) : CostGradientTuple" num="43" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="computeNextStep(DoubleVector,DoubleMatrix,DoubleMatrix,NetworkConfiguration) : CostGradientTuple" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="forwardPropagate(DoubleMatrix[],DoubleMatrix[],DoubleMatrix[],NetworkConfiguration) : void" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="98" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="backwardPropagate(DoubleMatrix,DoubleMatrix[],DoubleMatrix[],DoubleMatrix[],NetworkConfiguration) : DoubleMatrix[]" num="112" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="calculateGradients(DoubleMatrix[],DoubleMatrix[],DoubleMatrix[],DoubleMatrix[],int,NetworkConfiguration) : void" num="133" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="137" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="144" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="calculateRegularization(DoubleMatrix[],int,NetworkConfiguration) : double" num="156" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="160" type="cond"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="dropoutVisibleLayer(DoubleMatrix,DoubleMatrix[],NetworkConfiguration) : void" num="170" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="multiply(DoubleMatrix,DoubleMatrix,boolean,boolean,NetworkConfiguration) : DoubleMatrix" num="183" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="185" type="cond"/>
            <line num="186" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="multiplyCPU(DoubleMatrix,DoubleMatrix,boolean,boolean) : DoubleMatrix" num="192" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="194" type="cond"/>
            <line num="195" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="195" type="cond"/>
            <line num="196" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="computeUnfoldParameters(int[]) : int[][]" num="207" count="3" type="method"/>
            <line num="210" count="3" type="stmt"/>
            <line num="211" count="3" type="stmt"/>
            <line falsecount="3" truecount="3" num="211" type="cond"/>
            <line num="215" count="3" type="stmt"/>
            <line num="217" count="3" type="stmt"/>
            <line complexity="4" visibility="public" signature="dropout(Random,DoubleMatrix,double) : void" num="231" count="0" type="method"/>
            <line num="232" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="232" type="cond"/>
            <line num="233" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="233" type="cond"/>
            <line num="234" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="234" type="cond"/>
            <line num="235" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/classification/nn/RBM.java" name="RBM.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="42" loc="428" coveredmethods="0" methods="29" elements="144" classes="2" ncloc="227" statements="93" conditionals="22" coveredstatements="0"/>
            <class name="RBM">
               <metrics coveredelements="0" coveredconditionals="0" complexity="31" coveredmethods="0" methods="18" elements="115" statements="75" conditionals="22" coveredstatements="0"/>
            </class>
            <class name="RBM.RBMBuilder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="11" elements="29" statements="18" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="RBMBuilder(int[],ActivationFunction)" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="trainingType(TrainingType) : RBMBuilder" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="lambda(double) : RBMBuilder" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="miniBatchSize(int) : RBMBuilder" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="batchParallelism(int) : RBMBuilder" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="verbose() : RBMBuilder" num="92" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="stochastic() : RBMBuilder" num="99" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="stochastic(boolean) : RBMBuilder" num="106" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="verbose(boolean) : RBMBuilder" num="114" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(ActivationFunction,int) : RBMBuilder" num="127" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : RBM" num="134" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="RBM(int[],ActivationFunction,TrainingType)" num="157" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="RBM(RBMBuilder)" num="166" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="train(DoubleVector[],double,int) : void" num="183" count="0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="train(DoubleVector[],Minimizer,int) : void" num="197" count="0" type="method"/>
            <line num="199" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="202" type="cond"/>
            <line num="203" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="203" type="cond"/>
            <line num="204" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="223" type="cond"/>
            <line num="224" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="224" type="cond"/>
            <line num="225" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="230" type="cond"/>
            <line num="231" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="predict(DoubleVector) : DoubleVector" num="246" count="0" type="method"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="248" type="cond"/>
            <line num="249" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="reconstructInput(DoubleVector) : DoubleVector" num="262" count="0" type="method"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="264" type="cond"/>
            <line num="265" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getWeights() : DoubleMatrix[]" num="274" count="0" type="method"/>
            <line num="275" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getNeuralNetworkWeights(int) : WeightMatrix[]" num="286" count="0" type="method"/>
            <line num="287" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="290" type="cond"/>
            <line num="291" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setSeed(long) : void" num="304" count="0" type="method"/>
            <line num="305" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="computeHiddenActivations(DoubleVector,DoubleMatrix) : DoubleVector" num="308" count="0" type="method"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(RBM,DataOutput) : void" num="318" count="0" type="method"/>
            <line num="319" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="deserialize(DataInputStream) : RBM" num="335" count="0" type="method"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="338" type="cond"/>
            <line num="339" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="343" type="cond"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line num="355" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="356" type="cond"/>
            <line num="357" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="single(int,ActivationFunction) : RBM" num="370" count="0" type="method"/>
            <line num="371" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="stacked(ActivationFunction,int) : RBM" num="382" count="0" type="method"/>
            <line num="383" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="single(int) : RBM" num="390" count="0" type="method"/>
            <line num="391" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="stacked(int) : RBM" num="403" count="0" type="method"/>
            <line num="404" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="singleGPU(int,ActivationFunction) : RBM" num="412" count="0" type="method"/>
            <line num="413" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="stackedGPU(ActivationFunction,int) : RBM" num="424" count="0" type="method"/>
            <line num="425" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/classification/nn/RBMCostFunction.java" name="RBMCostFunction.java">
            <metrics coveredelements="50" coveredconditionals="13" complexity="18" loc="152" coveredmethods="5" methods="8" elements="68" classes="1" ncloc="101" statements="40" conditionals="20" coveredstatements="32"/>
            <class name="RBMCostFunction">
               <metrics coveredelements="50" coveredconditionals="13" complexity="18" coveredmethods="5" methods="8" elements="68" statements="40" conditionals="20" coveredstatements="32"/>
            </class>
            <line complexity="1" visibility="public" signature="RBMCostFunction(DoubleVector[],int,int,int,ActivationFunction,TrainingType,double,long,boolean)" num="34" count="3" type="method"/>
            <line num="38" count="3" type="stmt"/>
            <line num="39" count="3" type="stmt"/>
            <line num="40" count="3" type="stmt"/>
            <line num="41" count="3" type="stmt"/>
            <line num="42" count="3" type="stmt"/>
            <line num="43" count="3" type="stmt"/>
            <line complexity="2" visibility="protected" signature="evaluateBatch(DoubleVector,DoubleMatrix,DoubleMatrix) : CostGradientTuple" num="48" count="2" type="method"/>
            <line num="52" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="94" type="cond"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="103" count="2" type="stmt"/>
            <line complexity="2" visibility="private" signature="multiply(DoubleMatrix,DoubleMatrix,boolean,boolean) : DoubleMatrix" num="108" count="10" type="method"/>
            <line num="110" count="10" type="stmt"/>
            <line falsecount="0" truecount="10" num="110" type="cond"/>
            <line num="111" count="10" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="multiplyCPU(DoubleMatrix,DoubleMatrix,boolean,boolean) : DoubleMatrix" num="117" count="10" type="method"/>
            <line num="119" count="10" type="stmt"/>
            <line falsecount="8" truecount="2" num="119" type="cond"/>
            <line num="120" count="10" type="stmt"/>
            <line falsecount="6" truecount="4" num="120" type="cond"/>
            <line num="121" count="10" type="stmt"/>
            <line complexity="1" visibility="package" signature="getUnfoldParameters() : int[][]" num="124" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="binarize(Random,DoubleVector[]) : DoubleVector[]" num="128" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="129" type="cond"/>
            <line num="130" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="4" visibility="package" signature="binarize(Random,DoubleMatrix) : DoubleMatrix" num="135" count="2" type="method"/>
            <line num="136" count="2" type="stmt"/>
            <line falsecount="2" truecount="11" num="136" type="cond"/>
            <line num="137" count="11" type="stmt"/>
            <line falsecount="12" truecount="35" num="137" type="cond"/>
            <line num="138" count="35" type="stmt"/>
            <line falsecount="14" truecount="21" num="139" type="cond"/>
            <line num="142" count="2" type="stmt"/>
            <line complexity="3" visibility="package" signature="binarize(Random,DoubleVector) : DoubleVector" num="145" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="147" type="cond"/>
            <line num="149" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/classification/nn/TrainingType.java" name="TrainingType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="8" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TrainingType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/classification/nn/WeightMatrix.java" name="WeightMatrix.java">
            <metrics coveredelements="19" coveredconditionals="4" complexity="9" loc="63" coveredmethods="4" methods="7" elements="25" classes="1" ncloc="38" statements="14" conditionals="4" coveredstatements="11"/>
            <class name="WeightMatrix">
               <metrics coveredelements="19" coveredconditionals="4" complexity="9" coveredmethods="4" methods="7" elements="25" statements="14" conditionals="4" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="WeightMatrix(int,int)" num="22" count="4" type="method"/>
            <line num="23" count="4" type="stmt"/>
            <line num="24" count="4" type="stmt"/>
            <line num="25" count="4" type="stmt"/>
            <line complexity="3" visibility="private" signature="setWeightsUniformly(RandomDataImpl,double) : void" num="32" count="4" type="method"/>
            <line num="33" count="4" type="stmt"/>
            <line falsecount="4" truecount="27" num="33" type="cond"/>
            <line num="34" count="27" type="stmt"/>
            <line falsecount="27" truecount="81" num="34" type="cond"/>
            <line num="35" count="81" type="stmt"/>
            <line complexity="1" visibility="private" signature="seedRandomGenerator() : RandomDataImpl" num="40" count="4" type="method"/>
            <line num="41" count="4" type="stmt"/>
            <line num="42" count="4" type="stmt"/>
            <line num="43" count="4" type="stmt"/>
            <line num="44" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="WeightMatrix(DoubleMatrix)" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getWeights() : DoubleMatrix" num="51" count="4" type="method"/>
            <line num="52" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="setWeights(DoubleMatrix) : void" num="55" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/classification/nn/MultiLayerPerceptronTest.java" name="MultiLayerPerceptronTest.java">
            <metrics coveredelements="20" coveredconditionals="1" complexity="31" loc="309" coveredmethods="9" methods="18" elements="163" classes="1" ncloc="267" statements="119" conditionals="26" coveredstatements="10"/>
            <class name="MultiLayerPerceptronTest">
               <metrics coveredelements="20" complexity="31" methods="18" testruns="1" statements="119" coveredconditionals="1" coveredmethods="9" elements="163" testfailures="1" testduration="0.062" conditionals="26" coveredstatements="10" testpasses="0"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 25()" num="25" count="1" type="method"/>
            <line num="26" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRegression() : void" num="29" count="1" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testXORSoftMaxFminCG() : void" num="47" count="1" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSoftMaxFminCG() : void" num="67" count="1" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testXORElliotFminCG() : void" num="85" testsuccess="false" count="0" testduration="0.062" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testXORFminCG() : void" num="107" count="1" type="method"/>
            <line num="109" count="1" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testXORPSO() : void" num="126" count="1" type="method"/>
            <line num="128" count="1" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="138" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSerialization() : void" num="146" count="1" type="method"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStochasticLearning() : void" num="158" count="1" type="method"/>
            <line num="160" count="1" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="validateXorSigmoidNetwork(MultilayerPerceptron) : MultilayerPerceptron" num="173" count="1" type="method"/>
            <line num="175" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="175" type="cond"/>
            <line num="176" count="1" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="186" type="cond"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="validatePredictions(Tuple&lt;DoubleVector[], DoubleVector[]&gt;,MultilayerPerceptron) : void" num="195" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="201" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="validateRegressionPredictions(Tuple&lt;DoubleVector[], DoubleVector[]&gt;,MultilayerPerceptron) : double" num="207" count="0" type="method"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="214" type="cond"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="sampleLinear() : Tuple&lt;DoubleVector[], DoubleVector[]&gt;" num="221" count="0" type="method"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="226" type="cond"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="sampleParable() : Tuple&lt;DoubleVector[], DoubleVector[]&gt;" num="234" count="0" type="method"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="240" type="cond"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sampleXOR() : Tuple&lt;DoubleVector[], DoubleVector[]&gt;" num="248" count="0" type="method"/>
            <line num="249" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sampleXORSoftMax() : Tuple&lt;DoubleVector[], DoubleVector[]&gt;" num="262" count="0" type="method"/>
            <line num="263" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="sampleSoftMax() : Tuple&lt;DoubleVector[], DoubleVector[]&gt;" num="276" count="0" type="method"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="284" type="cond"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testPredictionsSoftMax(Tuple&lt;DoubleVector[], DoubleVector[]&gt;,MultilayerPerceptron) : void" num="297" count="0" type="method"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="303" type="cond"/>
            <line num="304" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/classification/nn/RBMCostFunctionTest.java" name="RBMCostFunctionTest.java">
            <metrics coveredelements="22" coveredconditionals="0" complexity="4" loc="116" coveredmethods="4" methods="4" elements="26" classes="1" ncloc="95" statements="22" conditionals="0" coveredstatements="18"/>
            <class name="RBMCostFunctionTest">
               <metrics coveredelements="22" complexity="4" methods="4" testruns="1" statements="22" coveredconditionals="0" coveredmethods="4" elements="26" testfailures="0" testduration="0.086" conditionals="0" coveredstatements="18" testpasses="1"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 19()" num="19" count="1" type="method"/>
            <line num="20" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGradient() : void" num="33" testsuccess="true" count="1" testduration="0.086" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRegularizedGradient() : void" num="60" count="1" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCostFunction() : void" num="84" count="1" type="method"/>
            <line num="86" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/classification/nn/WeightMatrixTest.java" name="WeightMatrixTest.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="1" loc="28" coveredmethods="1" methods="1" elements="12" classes="1" ncloc="20" statements="11" conditionals="0" coveredstatements="11"/>
            <class name="WeightMatrixTest">
               <metrics coveredelements="12" complexity="1" methods="1" testruns="1" statements="11" coveredconditionals="0" coveredmethods="1" elements="12" testfailures="0" testduration="0.025" conditionals="0" coveredstatements="11" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testInit() : void" num="10" testsuccess="true" count="1" testduration="0.025" type="method"/>
            <line num="12" count="1" type="stmt"/>
            <line num="13" count="1" type="stmt"/>
            <line num="15" count="1" type="stmt"/>
            <line num="16" count="1" type="stmt"/>
            <line num="17" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
         </file>
      </package>
      <package name="de.jungblut.nlp.model">
         <metrics coveredelements="0" complexity="30" loc="131" methods="12" classes="2" statements="51" coveredconditionals="0" coveredmethods="0" elements="99" ncloc="100" files="2" conditionals="36" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/nlp/model/Pair.java" name="Pair.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="16" loc="62" coveredmethods="0" methods="5" elements="55" classes="1" ncloc="49" statements="28" conditionals="22" coveredstatements="0"/>
            <class name="Pair">
               <metrics coveredelements="0" coveredconditionals="0" complexity="16" coveredmethods="0" methods="5" elements="55" statements="28" conditionals="22" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Pair(S,T)" num="14" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
            <line num="16" count="0" type="stmt"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFirst() : S" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSecond() : T" num="24" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="hashCode() : int" num="28" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="33" type="cond"/>
            <line num="34" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="35" type="cond"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="10" visibility="public" signature="equals(Object) : boolean" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="41" type="cond"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/nlp/model/ReferencedContext.java" name="ReferencedContext.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="69" coveredmethods="0" methods="7" elements="44" classes="1" ncloc="51" statements="23" conditionals="14" coveredstatements="0"/>
            <class name="ReferencedContext">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="7" elements="44" statements="23" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ReferencedContext(REF_TYPE,CONTEXT_TYPE)" num="18" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ReferencedContext(REF_TYPE,Collection&lt;CONTEXT_TYPE&gt;)" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReference() : REF_TYPE" num="28" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getContext() : Collection&lt;CONTEXT_TYPE&gt;" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="hashCode() : int" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="41" type="cond"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="equals(Object) : boolean" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="47" type="cond"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="58" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
         </file>
      </package>
      <package name="de.jungblut.classification.tree">
         <metrics coveredelements="188" complexity="161" loc="1601" methods="93" classes="13" statements="499" coveredconditionals="13" coveredmethods="24" elements="704" ncloc="1056" files="11" conditionals="112" coveredstatements="151"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/classification/tree/AbstractTreeNode.java" name="AbstractTreeNode.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="66" coveredmethods="0" methods="2" elements="20" classes="1" ncloc="39" statements="18" conditionals="0" coveredstatements="0"/>
            <class name="AbstractTreeNode">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="2" elements="20" statements="18" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="write(DataOutput) : void" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="read(DataInput) : AbstractTreeNode" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/classification/tree/DecisionTree.java" name="DecisionTree.java">
            <metrics coveredelements="41" coveredconditionals="7" complexity="80" loc="682" coveredmethods="8" methods="29" elements="363" classes="1" ncloc="447" statements="248" conditionals="86" coveredstatements="26"/>
            <class name="DecisionTree">
               <metrics coveredelements="41" coveredconditionals="7" complexity="80" coveredmethods="8" methods="29" elements="363" statements="248" conditionals="86" coveredstatements="26"/>
            </class>
            <line complexity="1" visibility="private" signature="DecisionTree()" num="56" count="1" type="method"/>
            <line complexity="1" visibility="private" signature="DecisionTree(AbstractTreeNode,FeatureType[],boolean,int,int)" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="train(DoubleVector[],DoubleVector[]) : void" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="predict(DoubleVector) : DoubleVector" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="compileTree() : void" num="127" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="5" visibility="package" signature="chooseRandomFeatures(TIntHashSet) : TIntHashSet" num="138" count="2" type="method"/>
            <line num="139" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="139" type="cond"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="146" type="cond"/>
            <line num="147" count="3" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line complexity="15" visibility="private" signature="build(List&lt;DoubleVector&gt;,List&lt;DoubleVector&gt;,TIntHashSet,int) : AbstractTreeNode" num="157" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="165" type="cond"/>
            <line num="166" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="166" type="cond"/>
            <line num="167" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="179" type="cond"/>
            <line num="180" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="194" type="cond"/>
            <line num="196" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="196" type="cond"/>
            <line num="197" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="197" type="cond"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="204" type="cond"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="233" type="cond"/>
            <line num="235" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="238" type="cond"/>
            <line num="239" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="239" type="cond"/>
            <line num="240" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="filterNominal(List&lt;DoubleVector&gt;,List&lt;DoubleVector&gt;,int,int) : Tuple&lt;List&lt;DoubleVector&gt;, List&lt;DoubleVector&gt;&gt;" num="266" count="0" type="method"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="275" type="cond"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="278" type="cond"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="filterNumeric(List&lt;DoubleVector&gt;,List&lt;DoubleVector&gt;,int,double,boolean) : Tuple&lt;List&lt;DoubleVector&gt;, List&lt;DoubleVector&gt;&gt;" num="299" count="0" type="method"/>
            <line num="303" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="308" type="cond"/>
            <line num="309" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="311" type="cond"/>
            <line num="312" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="312" type="cond"/>
            <line num="313" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="317" type="cond"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line complexity="8" visibility="private" signature="computeSplit(double,int,int[],List&lt;DoubleVector&gt;,List&lt;DoubleVector&gt;) : Split" num="339" count="0" type="method"/>
            <line num="343" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="343" type="cond"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="349" type="cond"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line num="354" count="0" type="stmt"/>
            <line num="355" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="355" type="cond"/>
            <line num="356" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="366" type="cond"/>
            <line num="367" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line num="373" count="0" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="378" type="cond"/>
            <line num="379" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line num="385" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="385" type="cond"/>
            <line num="386" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="389" type="cond"/>
            <line num="390" count="0" type="stmt"/>
            <line num="391" count="0" type="stmt"/>
            <line num="394" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="computeNumericalInfogain(List&lt;DoubleVector&gt;,List&lt;DoubleVector&gt;,double,int,double) : double" num="414" count="0" type="method"/>
            <line num="417" count="0" type="stmt"/>
            <line num="419" count="0" type="stmt"/>
            <line num="420" count="0" type="stmt"/>
            <line num="421" count="0" type="stmt"/>
            <line num="422" count="0" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line num="424" count="0" type="stmt"/>
            <line num="425" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="425" type="cond"/>
            <line num="426" count="0" type="stmt"/>
            <line num="427" count="0" type="stmt"/>
            <line num="428" count="0" type="stmt"/>
            <line num="429" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="429" type="cond"/>
            <line num="430" count="0" type="stmt"/>
            <line num="431" count="0" type="stmt"/>
            <line num="433" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line num="441" count="0" type="stmt"/>
            <line num="442" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getOutcomeClassIndex(DoubleVector) : int" num="449" count="0" type="method"/>
            <line num="450" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="451" type="cond"/>
            <line num="452" count="0" type="stmt"/>
            <line num="454" count="0" type="stmt"/>
            <line num="456" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getNominalValues(int,List&lt;DoubleVector&gt;) : TIntHashSet" num="463" count="0" type="method"/>
            <line num="465" count="0" type="stmt"/>
            <line num="466" count="0" type="stmt"/>
            <line num="467" count="0" type="stmt"/>
            <line num="468" count="0" type="stmt"/>
            <line num="470" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getPossibleClasses(List&lt;DoubleVector&gt;) : int[]" num="477" count="0" type="method"/>
            <line num="478" count="0" type="stmt"/>
            <line num="479" count="0" type="stmt"/>
            <line num="480" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="480" type="cond"/>
            <line num="481" count="0" type="stmt"/>
            <line num="483" count="0" type="stmt"/>
            <line num="487" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setFeatureTypes(FeatureType[]) : DecisionTree" num="497" count="0" type="method"/>
            <line num="498" count="0" type="stmt"/>
            <line num="499" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setNumRandomFeaturesToChoose(int) : DecisionTree" num="509" count="2" type="method"/>
            <line num="510" count="2" type="stmt"/>
            <line num="511" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="setCompiled(boolean) : DecisionTree" num="520" count="0" type="method"/>
            <line num="521" count="0" type="stmt"/>
            <line num="522" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setMaxHeight(int) : DecisionTree" num="530" count="0" type="method"/>
            <line num="531" count="0" type="stmt"/>
            <line num="532" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setSeed(long) : DecisionTree" num="538" count="0" type="method"/>
            <line num="539" count="0" type="stmt"/>
            <line num="540" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="setNumFeatures(int) : void" num="546" count="3" type="method"/>
            <line num="547" count="3" type="stmt"/>
            <line complexity="2" visibility="package" signature="getPossibleFeatures() : TIntHashSet" num="553" count="3" type="method"/>
            <line num="555" count="3" type="stmt"/>
            <line num="556" count="3" type="stmt"/>
            <line falsecount="3" truecount="22" num="556" type="cond"/>
            <line num="557" count="22" type="stmt"/>
            <line num="559" count="3" type="stmt"/>
            <line complexity="4" visibility="public" signature="serialize(DecisionTree,DataOutput) : void" num="566" count="0" type="method"/>
            <line num="568" count="0" type="stmt"/>
            <line num="569" count="0" type="stmt"/>
            <line num="570" count="0" type="stmt"/>
            <line num="571" count="0" type="stmt"/>
            <line num="572" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="572" type="cond"/>
            <line num="573" count="0" type="stmt"/>
            <line num="576" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="576" type="cond"/>
            <line num="577" count="0" type="stmt"/>
            <line num="578" count="0" type="stmt"/>
            <line num="580" count="0" type="stmt"/>
            <line num="581" count="0" type="stmt"/>
            <line num="582" count="0" type="stmt"/>
            <line num="585" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="deserialize(DataInput) : DecisionTree" num="593" count="0" type="method"/>
            <line num="594" count="0" type="stmt"/>
            <line num="595" count="0" type="stmt"/>
            <line num="596" count="0" type="stmt"/>
            <line num="597" count="0" type="stmt"/>
            <line num="598" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="598" type="cond"/>
            <line num="599" count="0" type="stmt"/>
            <line num="601" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="601" type="cond"/>
            <line num="602" count="0" type="stmt"/>
            <line num="603" count="0" type="stmt"/>
            <line num="604" count="0" type="stmt"/>
            <line num="605" count="0" type="stmt"/>
            <line num="606" count="0" type="stmt"/>
            <line num="609" count="0" type="stmt"/>
            <line num="612" count="0" type="stmt"/>
            <line num="613" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create() : DecisionTree" num="620" count="1" type="method"/>
            <line num="621" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(FeatureType[]) : DecisionTree" num="632" count="0" type="method"/>
            <line num="633" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createCompiledTree() : DecisionTree" num="639" count="0" type="method"/>
            <line num="640" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createCompiledTree(FeatureType[]) : DecisionTree" num="651" count="0" type="method"/>
            <line num="652" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="getEntropy(int[]) : double" num="658" count="1" type="method"/>
            <line num="659" count="1" type="stmt"/>
            <line num="660" count="1" type="stmt"/>
            <line num="661" count="1" type="stmt"/>
            <line num="662" count="2" type="stmt"/>
            <line num="664" count="1" type="stmt"/>
            <line num="665" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="665" type="cond"/>
            <line num="666" count="0" type="stmt"/>
            <line num="668" count="2" type="stmt"/>
            <line num="669" count="2" type="stmt"/>
            <line num="672" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="log2(double) : double" num="678" count="2" type="method"/>
            <line num="679" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/classification/tree/FeatureType.java" name="FeatureType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="58" coveredmethods="0" methods="4" elements="12" classes="1" ncloc="21" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="FeatureType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="12" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="isNumerical() : boolean" num="21" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNominal() : boolean" num="28" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="allNominal(int) : FeatureType[]" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="allNumerical(int) : FeatureType[]" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/classification/tree/LeafNode.java" name="LeafNode.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="7" loc="52" coveredmethods="2" methods="7" elements="14" classes="1" ncloc="38" statements="7" conditionals="0" coveredstatements="3"/>
            <class name="LeafNode">
               <metrics coveredelements="5" coveredconditionals="0" complexity="7" coveredmethods="2" methods="7" elements="14" statements="7" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="LeafNode()" num="17" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="LeafNode(int)" num="20" count="10" type="method"/>
            <line num="21" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="predict(DoubleVector) : int" num="24" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="transformToByteCode(MethodVisitor,Label) : void" num="29" count="10" type="method"/>
            <line num="32" count="10" type="stmt"/>
            <line num="34" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="readFields(DataInput) : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="writeInternal(DataOutput) : void" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getType() : byte" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/classification/tree/NominalNode.java" name="NominalNode.java">
            <metrics coveredelements="26" coveredconditionals="4" complexity="17" loc="136" coveredmethods="2" methods="10" elements="73" classes="2" ncloc="108" statements="49" conditionals="14" coveredstatements="20"/>
            <class name="NominalNode">
               <metrics coveredelements="26" coveredconditionals="4" complexity="15" coveredmethods="2" methods="8" elements="67" statements="45" conditionals="14" coveredstatements="20"/>
            </class>
            <class name="NominalNode.SortItem">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SortItem(int,AbstractTreeNode)" num="26" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compareTo(SortItem) : int" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="NominalNode()" num="38" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="NominalNode(int,int)" num="41" count="2" type="method"/>
            <line num="42" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="sortInternal() : void" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="predict(DoubleVector) : int" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="transformToByteCode(MethodVisitor,Label) : void" num="70" count="2" type="method"/>
            <line num="73" count="2" type="stmt"/>
            <line num="76" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="88" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line falsecount="2" truecount="6" num="90" type="cond"/>
            <line num="91" count="6" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line falsecount="2" truecount="6" num="95" type="cond"/>
            <line num="96" count="6" type="stmt"/>
            <line num="97" count="6" type="stmt"/>
            <line num="98" count="6" type="stmt"/>
            <line num="101" count="2" type="stmt"/>
            <line num="103" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="readFields(DataInput) : void" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="2" visibility="protected" signature="writeInternal(DataOutput) : void" num="121" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getType() : byte" num="131" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/classification/tree/NumericalNode.java" name="NumericalNode.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="8" loc="96" coveredmethods="2" methods="7" elements="39" classes="1" ncloc="74" statements="30" conditionals="2" coveredstatements="18"/>
            <class name="NumericalNode">
               <metrics coveredelements="20" coveredconditionals="0" complexity="8" coveredmethods="2" methods="7" elements="39" statements="30" conditionals="2" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="public" signature="NumericalNode()" num="22" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="NumericalNode(int,double,AbstractTreeNode,AbstractTreeNode)" num="25" count="4" type="method"/>
            <line num="27" count="4" type="stmt"/>
            <line num="28" count="4" type="stmt"/>
            <line num="29" count="4" type="stmt"/>
            <line num="30" count="4" type="stmt"/>
            <line num="31" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="predict(DoubleVector) : int" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="36" type="cond"/>
            <line num="37" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="transformToByteCode(MethodVisitor,Label) : void" num="43" count="4" type="method"/>
            <line num="46" count="4" type="stmt"/>
            <line num="49" count="4" type="stmt"/>
            <line num="50" count="4" type="stmt"/>
            <line num="58" count="4" type="stmt"/>
            <line num="60" count="4" type="stmt"/>
            <line num="61" count="4" type="stmt"/>
            <line num="62" count="4" type="stmt"/>
            <line num="65" count="4" type="stmt"/>
            <line num="67" count="4" type="stmt"/>
            <line num="69" count="4" type="stmt"/>
            <line num="70" count="4" type="stmt"/>
            <line num="72" count="4" type="stmt"/>
            <line num="73" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="readFields(DataInput) : void" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="writeInternal(DataOutput) : void" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getType() : byte" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/classification/tree/RandomForest.java" name="RandomForest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="22" loc="211" coveredmethods="0" methods="18" elements="72" classes="2" ncloc="135" statements="46" conditionals="8" coveredstatements="0"/>
            <class name="RandomForest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="20" coveredmethods="0" methods="17" elements="66" statements="43" conditionals="6" coveredstatements="0"/>
            </class>
            <class name="RandomForest.DecisionTreeFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="1" elements="6" statements="3" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="RandomForest(int)" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="RandomForest(int,Voter&lt;DecisionTree&gt;)" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="train(DoubleVector[],DoubleVector[]) : void" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="predict(DoubleVector) : DoubleVector" num="75" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="predictProbability(DoubleVector) : DoubleVector" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compile() : RandomForest" num="91" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="verbose() : RandomForest" num="99" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="verbose(boolean) : RandomForest" num="106" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setMaxHeight(int) : RandomForest" num="116" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numThreads(int) : RandomForest" num="124" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setNumRandomFeaturesToChoose(int) : RandomForest" num="133" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setFeatureTypes(FeatureType[]) : RandomForest" num="141" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(int) : RandomForest" num="151" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(int,FeatureType[]) : RandomForest" num="159" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(RandomForest,DataOutput) : void" num="167" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="deserialize(DataInput) : RandomForest" num="179" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newInstance() : DecisionTree" num="183" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="188" type="cond"/>
            <line num="189" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="newInstance() : DecisionTree" num="197" count="0" type="method"/>
            <line num="199" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="199" type="cond"/>
            <line num="200" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/classification/tree/Split.java" name="Split.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="44" coveredmethods="0" methods="6" elements="14" classes="1" ncloc="30" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="Split">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="14" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Split(int,double,double)" num="14" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line num="17" count="0" type="stmt"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Split(int,double)" num="21" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSplitAttributeIndex() : int" num="25" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInformationGain() : double" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumericalSplitValue() : double" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/classification/tree/TreeCompiler.java" name="TreeCompiler.java">
            <metrics coveredelements="44" coveredconditionals="0" complexity="6" loc="155" coveredmethods="5" methods="5" elements="45" classes="1" ncloc="86" statements="40" conditionals="0" coveredstatements="39"/>
            <class name="TreeCompiler">
               <metrics coveredelements="44" coveredconditionals="0" complexity="6" coveredmethods="5" methods="5" elements="45" statements="40" conditionals="0" coveredstatements="39"/>
            </class>
            <line complexity="1" visibility="public" signature="compileAndLoad(String,AbstractTreeNode) : AbstractTreeNode" num="41" count="2" type="method"/>
            <line num="43" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="load(String,byte[]) : AbstractTreeNode" num="53" count="2" type="method"/>
            <line num="55" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="compileNode(String,AbstractTreeNode) : byte[]" num="66" count="2" type="method"/>
            <line num="68" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="71" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line num="111" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line num="114" count="2" type="stmt"/>
            <line num="116" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="generateClassName() : String" num="124" count="2" type="method"/>
            <line num="125" count="2" type="stmt"/>
            <line complexity="2" visibility="private" signature="loadClass(byte[],String) : Class&lt;CLAZZ&gt;" num="129" count="2" type="method"/>
            <line num="133" count="2" type="stmt"/>
            <line num="134" count="2" type="stmt"/>
            <line num="135" count="2" type="stmt"/>
            <line num="138" count="2" type="stmt"/>
            <line num="139" count="2" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="146" count="2" type="stmt"/>
            <line num="147" count="2" type="stmt"/>
            <line num="148" count="2" type="stmt"/>
            <line num="150" count="2" type="stmt"/>
            <line num="152" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/classification/tree/DecisionTreeTest.java" name="DecisionTreeTest.java">
            <metrics coveredelements="22" coveredconditionals="2" complexity="3" loc="40" coveredmethods="2" methods="2" elements="22" classes="1" ncloc="31" statements="18" conditionals="2" coveredstatements="18"/>
            <class name="DecisionTreeTest">
               <metrics coveredelements="22" complexity="3" methods="2" testruns="1" statements="18" coveredconditionals="2" coveredmethods="2" elements="22" testfailures="0" testduration="0.025" conditionals="2" coveredstatements="18" testpasses="1"/>
            </class>
            <line complexity="2" visibility="public" signature="testPossibleFeatures() : void" num="10" count="1" type="method"/>
            <line num="12" count="1" type="stmt"/>
            <line num="13" count="1" type="stmt"/>
            <line num="15" count="1" type="stmt"/>
            <line num="16" count="1" type="stmt"/>
            <line num="17" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="17" type="cond"/>
            <line num="18" count="10" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEntropy() : void" num="33" testsuccess="true" count="1" testduration="0.025" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/classification/tree/TreeCompilerTest.java" name="TreeCompilerTest.java">
            <metrics coveredelements="30" coveredconditionals="0" complexity="3" loc="61" coveredmethods="3" methods="3" elements="30" classes="1" ncloc="47" statements="27" conditionals="0" coveredstatements="27"/>
            <class name="TreeCompilerTest">
               <metrics coveredelements="30" complexity="3" methods="3" testruns="1" statements="27" coveredconditionals="0" coveredmethods="3" elements="30" testfailures="0" testduration="0.009" conditionals="0" coveredstatements="27" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="setup() : void" num="13" count="2" type="method"/>
            <line num="15" count="2" type="stmt"/>
            <line num="16" count="2" type="stmt"/>
            <line num="17" count="2" type="stmt"/>
            <line num="18" count="2" type="stmt"/>
            <line num="19" count="2" type="stmt"/>
            <line num="20" count="2" type="stmt"/>
            <line num="21" count="2" type="stmt"/>
            <line num="23" count="2" type="stmt"/>
            <line num="25" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNominalSwitches() : void" num="29" testsuccess="true" count="1" testduration="0.009" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOtherResults() : void" num="48" count="1" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
         </file>
      </package>
      <package name="de.jungblut.ner">
         <metrics coveredelements="0" complexity="126" loc="1051" methods="76" classes="8" statements="275" coveredconditionals="0" coveredmethods="0" elements="443" ncloc="700" files="8" conditionals="92" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/ner/BasicFeatureExtractor.java" name="BasicFeatureExtractor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="34" coveredmethods="0" methods="1" elements="10" classes="1" ncloc="21" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="BasicFeatureExtractor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="10" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="computeFeatures(List&lt;String&gt;,int,int) : List&lt;String&gt;" num="17" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line num="21" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/ner/ConditionalLikelihoodCostFunction.java" name="ConditionalLikelihoodCostFunction.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="21" loc="131" coveredmethods="0" methods="5" elements="86" classes="1" ncloc="98" statements="51" conditionals="30" coveredstatements="0"/>
            <class name="ConditionalLikelihoodCostFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="21" coveredmethods="0" methods="5" elements="86" statements="51" conditionals="30" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="ConditionalLikelihoodCostFunction(DoubleMatrix,DoubleMatrix)" num="28" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="33" type="cond"/>
            <line complexity="8" visibility="public" signature="evaluateCost(DoubleVector) : CostGradientTuple" num="36" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="correctPrediction(int,DoubleVector) : boolean" num="88" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line complexity="2" visibility="package" signature="computeLogPrior(DoubleVector,DoubleVector) : double" num="95" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="7" visibility="package" signature="logSum(double[]) : double" num="105" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="119" type="cond"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/ner/IterativeSimilarityAggregation.java" name="IterativeSimilarityAggregation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="28" loc="256" coveredmethods="0" methods="8" elements="122" classes="1" ncloc="153" statements="80" conditionals="34" coveredstatements="0"/>
            <class name="IterativeSimilarityAggregation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="28" coveredmethods="0" methods="8" elements="122" statements="80" conditionals="34" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="IterativeSimilarityAggregation(String[],Tuple&lt;String[], DoubleMatrix&gt;)" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="IterativeSimilarityAggregation(String[],Tuple&lt;String[], DoubleMatrix&gt;,double,DistanceMeasurer)" num="63" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="init() : void" num="78" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="startStaticThresholding(double,int,boolean) : String[]" num="101" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="119" type="cond"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="121" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="137" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="7" visibility="package" signature="getTopRankedItems(DoubleVector,double) : int[]" num="157" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="161" type="cond"/>
            <line num="162" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="165" type="cond"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="167" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="168" type="cond"/>
            <line num="169" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="172" type="cond"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="184" type="cond"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="computeRelevanceScore(int[]) : DenseDoubleVector" num="204" count="0" type="method"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="210" type="cond"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="216" type="cond"/>
            <line num="217" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="rankScores(double,DenseDoubleVector,DenseDoubleVector) : DoubleVector" num="234" count="0" type="method"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line complexity="3" visibility="package" signature="filterRelevantItems(DenseDoubleVector,double) : int[]" num="243" count="0" type="method"/>
            <line num="245" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="247" type="cond"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="249" type="cond"/>
            <line num="250" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/ner/MaxEntMarkovModel.java" name="MaxEntMarkovModel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="94" coveredmethods="0" methods="7" elements="33" classes="1" ncloc="72" statements="22" conditionals="4" coveredstatements="0"/>
            <class name="MaxEntMarkovModel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="7" elements="33" statements="22" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="MaxEntMarkovModel(Minimizer,int,boolean)" num="30" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MaxEntMarkovModel(DenseDoubleMatrix,int)" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="train(DoubleVector[],DoubleVector[]) : void" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="49" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="predict(DoubleVector) : DoubleVector" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTheta() : DoubleMatrix" num="77" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="predict(DoubleVector,DoubleVector[]) : DoubleVector" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="predict(DoubleMatrix,DoubleMatrix) : DoubleMatrix" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/ner/SequenceFeatureExtractor.java" name="SequenceFeatureExtractor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="26" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SequenceFeatureExtractor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/ner/SparseFeatureExtractorHelper.java" name="SparseFeatureExtractorHelper.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="22" loc="209" coveredmethods="0" methods="10" elements="91" classes="1" ncloc="118" statements="57" conditionals="24" coveredstatements="0"/>
            <class name="SparseFeatureExtractorHelper">
               <metrics coveredelements="0" coveredconditionals="0" complexity="22" coveredmethods="0" methods="10" elements="91" statements="57" conditionals="24" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SparseFeatureExtractorHelper(List&lt;K&gt;,List&lt;Integer&gt;,SequenceFeatureExtractor&lt;K&gt;)" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SparseFeatureExtractorHelper(List&lt;K&gt;,List&lt;Integer&gt;,SequenceFeatureExtractor&lt;K&gt;,String[])" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="vectorize() : Tuple&lt;DoubleVector[], DoubleVector[]&gt;" num="69" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="vectorize(K) : DoubleVector" num="78" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="vectorize(K,Integer) : DoubleVector" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="vectorize(List&lt;K&gt;,List&lt;Integer&gt;) : Tuple&lt;DoubleVector[], DoubleVector[]&gt;" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="vectorizeAdditionals(List&lt;K&gt;,List&lt;Integer&gt;) : Tuple&lt;DoubleVector[], DoubleVector[]&gt;" num="119" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="vectorizeEachLabel(List&lt;K&gt;) : DoubleVector[]" num="128" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="130" type="cond"/>
            <line num="131" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="131" type="cond"/>
            <line num="132" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="143" type="cond"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="147" type="cond"/>
            <line num="148" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDictionary() : String[]" num="158" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="7" visibility="private" signature="extractInternal(List&lt;K&gt;,List&lt;Integer&gt;) : Tuple&lt;DoubleVector[], DoubleVector[]&gt;" num="165" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="168" type="cond"/>
            <line num="169" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="170" type="cond"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="176" type="cond"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="189" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="193" type="cond"/>
            <line num="194" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="198" type="cond"/>
            <line num="199" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/ner/UnrollableDoubleVector.java" name="UnrollableDoubleVector.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="42" loc="230" coveredmethods="0" methods="42" elements="86" classes="1" ncloc="177" statements="44" conditionals="0" coveredstatements="0"/>
            <class name="UnrollableDoubleVector">
               <metrics coveredelements="0" coveredconditionals="0" complexity="42" coveredmethods="0" methods="42" elements="86" statements="44" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="UnrollableDoubleVector(DoubleVector,DoubleVector[])" num="20" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMainVector() : DoubleVector" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSideVectors() : DoubleVector[]" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : double" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLength() : int" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDimension() : int" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(int,double) : void" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleVectorFunction) : DoubleVector" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleVector,DoubleDoubleVectorFunction) : DoubleVector" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(DoubleVector) : DoubleVector" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(double) : DoubleVector" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subtract(DoubleVector) : DoubleVector" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subtract(double) : DoubleVector" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subtractFrom(double) : DoubleVector" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="multiply(double) : DoubleVector" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="multiply(DoubleVector) : DoubleVector" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="divide(double) : DoubleVector" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="divideFrom(double) : DoubleVector" num="105" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="divideFrom(DoubleVector) : DoubleVector" num="110" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="divide(DoubleVector) : DoubleVector" num="115" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="pow(double) : DoubleVector" num="120" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="abs() : DoubleVector" num="125" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sqrt() : DoubleVector" num="130" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sum() : double" num="135" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dot(DoubleVector) : double" num="140" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="slice(int) : DoubleVector" num="145" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="slice(int,int) : DoubleVector" num="150" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sliceByLength(int,int) : DoubleVector" num="155" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="max() : double" num="160" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="min() : double" num="165" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="maxIndex() : int" num="170" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="minIndex() : int" num="175" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toArray() : double[]" num="180" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="deepCopy() : DoubleVector" num="185" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterateNonZero() : Iterator&lt;DoubleVectorElement&gt;" num="190" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterate() : Iterator&lt;DoubleVectorElement&gt;" num="195" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isSparse() : boolean" num="200" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isSingle() : boolean" num="205" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNamed() : boolean" num="210" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="215" count="0" type="method"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="log() : DoubleVector" num="220" count="0" type="method"/>
            <line num="222" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="exp() : DoubleVector" num="225" count="0" type="method"/>
            <line num="227" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/ner/IterativeSimilarityAggregationTest.java" name="IterativeSimilarityAggregationTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="71" coveredmethods="0" methods="3" elements="15" classes="1" ncloc="56" statements="12" conditionals="0" coveredstatements="0"/>
            <class name="IterativeSimilarityAggregationTest">
               <metrics coveredelements="0" complexity="3" methods="3" testruns="1" statements="12" coveredconditionals="0" coveredmethods="0" elements="15" testfailures="1" testduration="0.062" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testThresholding() : void" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetTopRankedItems() : void" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStaticThresholding() : void" num="50" testsuccess="false" count="0" testduration="0.062" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
         </file>
      </package>
      <package name="de.jungblut.online.ml">
         <metrics coveredelements="0" complexity="4" loc="28" methods="4" classes="1" statements="5" coveredconditionals="0" coveredmethods="0" elements="9" ncloc="20" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/online/ml/FeatureOutcomePair.java" name="FeatureOutcomePair.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="28" coveredmethods="0" methods="4" elements="9" classes="1" ncloc="20" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="FeatureOutcomePair">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="FeatureOutcomePair(DoubleVector,DoubleVector)" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFeature() : DoubleVector" num="15" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOutcome() : DoubleVector" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="23" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
         </file>
      </package>
      <package name="de.jungblut.classification.knn">
         <metrics coveredelements="109" complexity="18" loc="313" methods="12" classes="5" statements="86" coveredconditionals="11" coveredmethods="12" elements="110" ncloc="199" files="5" conditionals="12" coveredstatements="86"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/classification/knn/AbstractKNearestNeighbours.java" name="AbstractKNearestNeighbours.java">
            <metrics coveredelements="25" coveredconditionals="5" complexity="6" loc="81" coveredmethods="3" methods="3" elements="26" classes="1" ncloc="45" statements="17" conditionals="6" coveredstatements="17"/>
            <class name="AbstractKNearestNeighbours">
               <metrics coveredelements="25" coveredconditionals="5" complexity="6" coveredmethods="3" methods="3" elements="26" statements="17" conditionals="6" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractKNearestNeighbours(int,int)" num="28" count="2" type="method"/>
            <line num="29" count="2" type="stmt"/>
            <line num="30" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="predict(DoubleVector) : DoubleVector" num="38" count="7" type="method"/>
            <line num="40" count="7" type="stmt"/>
            <line num="43" count="7" type="stmt"/>
            <line num="44" count="7" type="stmt"/>
            <line num="45" count="14" type="stmt"/>
            <line num="46" count="14" type="stmt"/>
            <line falsecount="4" truecount="10" num="46" type="cond"/>
            <line num="47" count="10" type="stmt"/>
            <line num="49" count="4" type="stmt"/>
            <line num="52" count="14" type="stmt"/>
            <line num="54" count="7" type="stmt"/>
            <line falsecount="2" truecount="5" num="54" type="cond"/>
            <line num="55" count="5" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="predictProbability(DoubleVector) : DoubleVector" num="61" count="1" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="64" type="cond"/>
            <line num="65" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/classification/knn/KNearestNeighbours.java" name="KNearestNeighbours.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="3" loc="54" coveredmethods="3" methods="3" elements="8" classes="1" ncloc="30" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="KNearestNeighbours">
               <metrics coveredelements="8" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="KNearestNeighbours(int,int)" num="31" count="1" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="train(Iterable&lt;DoubleVector&gt;,Iterable&lt;DoubleVector&gt;) : void" num="36" count="1" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getNearestNeighbours(DoubleVector,int) : List&lt;VectorDistanceTuple&lt;DoubleVector&gt;&gt;" num="49" count="2" type="method"/>
            <line num="52" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/classification/knn/SparseKNearestNeighbours.java" name="SparseKNearestNeighbours.java">
            <metrics coveredelements="22" coveredconditionals="2" complexity="4" loc="72" coveredmethods="3" methods="3" elements="22" classes="1" ncloc="47" statements="17" conditionals="2" coveredstatements="17"/>
            <class name="SparseKNearestNeighbours">
               <metrics coveredelements="22" coveredconditionals="2" complexity="4" coveredmethods="3" methods="3" elements="22" statements="17" conditionals="2" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="SparseKNearestNeighbours(int,int,DistanceMeasurer)" num="35" count="1" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="train(Iterable&lt;DoubleVector&gt;,Iterable&lt;DoubleVector&gt;) : void" num="41" count="1" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line falsecount="1" truecount="4" num="50" type="cond"/>
            <line num="51" count="4" type="stmt"/>
            <line num="52" count="4" type="stmt"/>
            <line num="53" count="4" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getNearestNeighbours(DoubleVector,int) : List&lt;VectorDistanceTuple&lt;DoubleVector&gt;&gt;" num="58" count="5" type="method"/>
            <line num="61" count="5" type="stmt"/>
            <line num="62" count="5" type="stmt"/>
            <line num="65" count="5" type="stmt"/>
            <line num="66" count="10" type="stmt"/>
            <line num="67" count="10" type="stmt"/>
            <line num="70" count="5" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/classification/knn/KNearestNeighboursTest.java" name="KNearestNeighboursTest.java">
            <metrics coveredelements="22" coveredconditionals="4" complexity="4" loc="42" coveredmethods="2" methods="2" elements="22" classes="1" ncloc="33" statements="16" conditionals="4" coveredstatements="16"/>
            <class name="KNearestNeighboursTest">
               <metrics coveredelements="22" complexity="4" methods="2" testruns="1" statements="16" coveredconditionals="4" coveredmethods="2" elements="22" testfailures="0" testduration="0.024" conditionals="4" coveredstatements="16" testpasses="1"/>
            </class>
            <line complexity="2" visibility="public" signature="testMultiPrediction() : void" num="15" testsuccess="true" count="1" testduration="0.024" type="method"/>
            <line num="18" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="21" type="cond"/>
            <line num="22" count="10" type="stmt"/>
            <line num="23" count="10" type="stmt"/>
            <line num="24" count="10" type="stmt"/>
            <line num="25" count="10" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="2" visibility="package" signature="assertArrayEquals(double[],double[]) : void" num="35" count="2" type="method"/>
            <line num="36" count="2" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line falsecount="2" truecount="10" num="37" type="cond"/>
            <line num="38" count="10" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/classification/knn/SparseKNearestNeighboursTest.java" name="SparseKNearestNeighboursTest.java">
            <metrics coveredelements="32" coveredconditionals="0" complexity="1" loc="64" coveredmethods="1" methods="1" elements="32" classes="1" ncloc="44" statements="31" conditionals="0" coveredstatements="31"/>
            <class name="SparseKNearestNeighboursTest">
               <metrics coveredelements="32" complexity="1" methods="1" testruns="1" statements="31" coveredconditionals="0" coveredmethods="1" elements="32" testfailures="0" testduration="0.059" conditionals="0" coveredstatements="31" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testSparseKNN() : void" num="13" testsuccess="true" count="1" testduration="0.059" type="method"/>
            <line num="16" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
         </file>
      </package>
      <package name="de.jungblut.math.activation">
         <metrics coveredelements="38" complexity="64" loc="520" methods="43" classes="13" statements="99" coveredconditionals="6" coveredmethods="9" elements="184" ncloc="323" files="13" conditionals="42" coveredstatements="23"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/math/activation/AbstractActivationFunction.java" name="AbstractActivationFunction.java">
            <metrics coveredelements="16" coveredconditionals="6" complexity="22" loc="124" coveredmethods="2" methods="7" elements="83" classes="1" ncloc="99" statements="46" conditionals="30" coveredstatements="8"/>
            <class name="AbstractActivationFunction">
               <metrics coveredelements="16" coveredconditionals="6" complexity="22" coveredmethods="2" methods="7" elements="83" statements="46" conditionals="30" coveredstatements="8"/>
            </class>
            <line complexity="4" visibility="public" signature="apply(DoubleVector) : DoubleVector" num="23" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="26" type="cond"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="28" type="cond"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="33" type="cond"/>
            <line num="34" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="apply(DoubleMatrix) : DoubleMatrix" num="40" count="6" type="method"/>
            <line num="42" count="6" type="stmt"/>
            <line num="43" count="5" type="stmt"/>
            <line falsecount="6" truecount="0" num="43" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="56" count="6" type="stmt"/>
            <line falsecount="6" truecount="35" num="56" type="cond"/>
            <line num="57" count="35" type="stmt"/>
            <line falsecount="35" truecount="166" num="57" type="cond"/>
            <line num="58" count="166" type="stmt"/>
            <line num="62" count="6" type="stmt"/>
            <line complexity="4" visibility="public" signature="gradient(DoubleVector) : DoubleVector" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="gradient(DoubleMatrix) : DoubleMatrix" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="2" visibility="protected" signature="newInstance(DoubleMatrix) : DoubleMatrix" num="103" count="6" type="method"/>
            <line num="104" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="107" count="6" type="stmt"/>
            <line complexity="2" visibility="protected" signature="newInstance(DoubleVector) : DoubleVector" num="111" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="119" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/math/activation/ActivationFunction.java" name="ActivationFunction.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="60" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ActivationFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/math/activation/ActivationFunctionSelector.java" name="ActivationFunctionSelector.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="22" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="ActivationFunctionSelector">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="get() : ActivationFunction" num="18" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/math/activation/ElliotActivationFunction.java" name="ElliotActivationFunction.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="29" coveredmethods="0" methods="4" elements="9" classes="1" ncloc="18" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="ElliotActivationFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="apply(double) : double" num="10" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="gradient(double) : double" num="15" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="elliot(double) : double" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="elliotGradient(double) : double" num="24" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/math/activation/LinearActivationFunction.java" name="LinearActivationFunction.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="45" coveredmethods="0" methods="6" elements="12" classes="1" ncloc="29" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="LinearActivationFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="12" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="apply(double) : double" num="15" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="gradient(double) : double" num="20" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleVector) : DoubleVector" num="25" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleMatrix) : DoubleMatrix" num="30" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="gradient(DoubleVector) : DoubleVector" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="gradient(DoubleMatrix) : DoubleMatrix" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/math/activation/LogActivationFunction.java" name="LogActivationFunction.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="20" coveredmethods="0" methods="2" elements="8" classes="1" ncloc="11" statements="2" conditionals="4" coveredstatements="0"/>
            <class name="LogActivationFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="2" elements="8" statements="2" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="apply(double) : double" num="10" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="12" type="cond"/>
            <line complexity="2" visibility="public" signature="gradient(double) : double" num="15" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="17" type="cond"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/math/activation/ReluActivationFunction.java" name="ReluActivationFunction.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="22" coveredmethods="0" methods="2" elements="6" classes="1" ncloc="12" statements="2" conditionals="2" coveredstatements="0"/>
            <class name="ReluActivationFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="6" statements="2" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="apply(double) : double" num="12" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="gradient(double) : double" num="17" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="19" type="cond"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/math/activation/SigmoidActivationFunction.java" name="SigmoidActivationFunction.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="4" loc="34" coveredmethods="3" methods="4" elements="10" classes="1" ncloc="21" statements="6" conditionals="0" coveredstatements="5"/>
            <class name="SigmoidActivationFunction">
               <metrics coveredelements="8" coveredconditionals="0" complexity="4" coveredmethods="3" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="apply(double) : double" num="14" count="165" type="method"/>
            <line num="16" count="165" type="stmt"/>
            <line complexity="1" visibility="public" signature="gradient(double) : double" num="19" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="sigmoid(double) : double" num="24" count="178" type="method"/>
            <line num="25" count="178" type="stmt"/>
            <line num="26" count="178" type="stmt"/>
            <line complexity="1" visibility="package" signature="sigmoidGradient(double) : double" num="29" count="3" type="method"/>
            <line num="30" count="3" type="stmt"/>
            <line num="31" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/math/activation/SoftMaxActivationFunction.java" name="SoftMaxActivationFunction.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="53" coveredmethods="0" methods="6" elements="23" classes="1" ncloc="38" statements="13" conditionals="4" coveredstatements="0"/>
            <class name="SoftMaxActivationFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="6" elements="23" statements="13" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="apply(double) : double" num="14" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(DoubleVector) : DoubleVector" num="19" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="apply(DoubleMatrix) : DoubleMatrix" num="26" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="29" type="cond"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="31" type="cond"/>
            <line num="32" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="gradient(double) : double" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="gradient(DoubleVector) : DoubleVector" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="gradient(DoubleMatrix) : DoubleMatrix" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/math/activation/SoftplusReluActivationFunction.java" name="SoftplusReluActivationFunction.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="24" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="14" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="SoftplusReluActivationFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="apply(double) : double" num="14" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="gradient(double) : double" num="19" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/math/activation/StepActivationFunction.java" name="StepActivationFunction.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="27" coveredmethods="0" methods="3" elements="8" classes="1" ncloc="15" statements="3" conditionals="2" coveredstatements="0"/>
            <class name="StepActivationFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="3" elements="8" statements="3" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="StepActivationFunction(double)" num="13" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="apply(double) : double" num="17" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="19" type="cond"/>
            <line complexity="1" visibility="public" signature="gradient(double) : double" num="22" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/math/activation/TanhActivationFunction.java" name="TanhActivationFunction.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="23" coveredmethods="0" methods="2" elements="5" classes="1" ncloc="13" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="TanhActivationFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="apply(double) : double" num="12" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="gradient(double) : double" num="17" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line num="20" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/math/activation/SigmoidActivationFunctionTest.java" name="SigmoidActivationFunctionTest.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="4" loc="37" coveredmethods="4" methods="4" elements="14" classes="1" ncloc="30" statements="10" conditionals="0" coveredstatements="10"/>
            <class name="SigmoidActivationFunctionTest">
               <metrics coveredelements="14" complexity="4" methods="4" testruns="1" statements="10" coveredconditionals="0" coveredmethods="4" elements="14" testfailures="0" testduration="0.025" conditionals="0" coveredstatements="10" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testSigmoidClippingPositive() : void" num="8" testsuccess="true" count="1" testduration="0.025" type="method"/>
            <line num="10" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSigmoidClippingNegative() : void" num="13" count="1" type="method"/>
            <line num="15" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSigmoidHappyPath() : void" num="18" count="1" type="method"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSigmoidGradientHappyPath() : void" num="27" count="1" type="method"/>
            <line num="29" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
         </file>
      </package>
      <package name="de.jungblut.classification.regression">
         <metrics coveredelements="0" complexity="14" loc="179" methods="8" classes="2" statements="52" coveredconditionals="0" coveredmethods="0" elements="72" ncloc="129" files="2" conditionals="12" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/classification/regression/LogisticRegression.java" name="LogisticRegression.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="119" coveredmethods="0" methods="6" elements="51" classes="1" ncloc="86" statements="35" conditionals="10" coveredstatements="0"/>
            <class name="LogisticRegression">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="6" elements="51" statements="35" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LogisticRegression(double,Minimizer,int,boolean)" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LogisticRegression(DoubleVector)" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="train(DoubleVector[],DoubleVector[]) : void" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="predict(DoubleVector) : DoubleVector" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTheta() : DoubleVector" num="112" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="setRandom(Random) : void" num="116" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/classification/regression/LogisticRegressionCostFunction.java" name="LogisticRegressionCostFunction.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="60" coveredmethods="0" methods="2" elements="21" classes="1" ncloc="43" statements="17" conditionals="2" coveredstatements="0"/>
            <class name="LogisticRegressionCostFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="21" statements="17" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LogisticRegressionCostFunction(DoubleMatrix,DoubleMatrix,double)" num="31" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="evaluateCost(DoubleVector) : CostGradientTuple" num="40" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
         </file>
      </package>
      <package name="de.jungblut.datastructure">
         <metrics coveredelements="2212" complexity="679" loc="5639" methods="386" classes="51" statements="1874" coveredconditionals="361" coveredmethods="311" elements="2726" ncloc="3696" files="39" conditionals="466" coveredstatements="1540"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/datastructure/ArrayIterator.java" name="ArrayIterator.java">
            <metrics coveredelements="12" coveredconditionals="1" complexity="7" loc="58" coveredmethods="5" methods="5" elements="13" classes="1" ncloc="26" statements="6" conditionals="2" coveredstatements="6"/>
            <class name="ArrayIterator">
               <metrics coveredelements="12" coveredconditionals="1" complexity="7" coveredmethods="5" methods="5" elements="13" statements="6" conditionals="2" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="ArrayIterator(E[])" num="18" count="1" type="method"/>
            <line num="19" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="28" count="7" type="method"/>
            <line num="30" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : E" num="36" count="6" type="method"/>
            <line num="38" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIndex() : int" num="44" count="12" type="method"/>
            <line num="45" count="12" type="stmt"/>
            <line complexity="3" visibility="public" signature="remove() : void" num="51" count="6" type="method"/>
            <line num="53" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="53" type="cond"/>
            <line num="54" count="6" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/datastructure/ArrayJoiner.java" name="ArrayJoiner.java">
            <metrics coveredelements="100" coveredconditionals="22" complexity="24" loc="189" coveredmethods="10" methods="10" elements="112" classes="1" ncloc="114" statements="74" conditionals="28" coveredstatements="68"/>
            <class name="ArrayJoiner">
               <metrics coveredelements="100" coveredconditionals="22" complexity="24" coveredmethods="10" methods="10" elements="112" statements="74" conditionals="28" coveredstatements="68"/>
            </class>
            <line complexity="1" visibility="private" signature="ArrayJoiner(String)" num="16" count="13" type="method"/>
            <line num="17" count="13" type="stmt"/>
            <line num="18" count="12" type="stmt"/>
            <line complexity="3" visibility="public" signature="join(byte[]) : String" num="28" count="2" type="method"/>
            <line num="29" count="2" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="30" type="cond"/>
            <line num="31" count="0" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="35" type="cond"/>
            <line num="36" count="3" type="stmt"/>
            <line num="37" count="3" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="join(short[]) : String" num="50" count="1" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="57" type="cond"/>
            <line num="58" count="3" type="stmt"/>
            <line num="59" count="3" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="join(int[]) : String" num="72" count="5" type="method"/>
            <line num="73" count="5" type="stmt"/>
            <line num="74" count="5" type="stmt"/>
            <line falsecount="4" truecount="1" num="74" type="cond"/>
            <line num="75" count="1" type="stmt"/>
            <line num="77" count="4" type="stmt"/>
            <line num="78" count="4" type="stmt"/>
            <line num="79" count="3" type="stmt"/>
            <line falsecount="4" truecount="7" num="79" type="cond"/>
            <line num="80" count="7" type="stmt"/>
            <line num="81" count="7" type="stmt"/>
            <line num="83" count="4" type="stmt"/>
            <line num="84" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="join(long[]) : String" num="94" count="1" type="method"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="101" type="cond"/>
            <line num="102" count="3" type="stmt"/>
            <line num="103" count="3" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="join(float[]) : String" num="116" count="1" type="method"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="118" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="123" type="cond"/>
            <line num="124" count="3" type="stmt"/>
            <line num="125" count="3" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="join(double[]) : String" num="138" count="1" type="method"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="140" type="cond"/>
            <line num="141" count="0" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="145" type="cond"/>
            <line num="146" count="3" type="stmt"/>
            <line num="147" count="3" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="join(char[]) : String" num="160" count="1" type="method"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="162" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="167" type="cond"/>
            <line num="168" count="3" type="stmt"/>
            <line num="169" count="3" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="on(char) : ArrayJoiner" num="178" count="6" type="method"/>
            <line num="179" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="on(String) : ArrayJoiner" num="185" count="6" type="method"/>
            <line num="186" count="6" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/datastructure/ArrayUtils.java" name="ArrayUtils.java">
            <metrics coveredelements="589" coveredconditionals="136" complexity="201" loc="1497" coveredmethods="70" methods="100" elements="792" classes="1" ncloc="847" statements="508" conditionals="184" coveredstatements="383"/>
            <class name="ArrayUtils">
               <metrics coveredelements="589" coveredconditionals="136" complexity="201" coveredmethods="70" methods="100" elements="792" statements="508" conditionals="184" coveredstatements="383"/>
            </class>
            <line complexity="1" visibility="private" signature="ArrayUtils()" num="17" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="find(T[],T) : int" num="30" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
            <line num="32" count="2" type="stmt"/>
            <line num="33" count="2" type="stmt"/>
            <line falsecount="1" truecount="9" num="33" type="cond"/>
            <line num="34" count="9" type="stmt"/>
            <line falsecount="8" truecount="1" num="34" type="cond"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="find(int[],int) : int" num="51" count="2" type="method"/>
            <line num="52" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line falsecount="1" truecount="9" num="54" type="cond"/>
            <line num="55" count="9" type="stmt"/>
            <line falsecount="8" truecount="1" num="55" type="cond"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="find(long[],long) : int" num="72" count="2" type="method"/>
            <line num="73" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line num="75" count="2" type="stmt"/>
            <line falsecount="1" truecount="9" num="75" type="cond"/>
            <line num="76" count="9" type="stmt"/>
            <line falsecount="8" truecount="1" num="76" type="cond"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="concat(int[]) : int[]" num="90" count="4" type="method"/>
            <line num="91" count="4" type="stmt"/>
            <line num="92" count="4" type="stmt"/>
            <line num="93" count="8" type="stmt"/>
            <line num="94" count="4" type="stmt"/>
            <line num="95" count="4" type="stmt"/>
            <line num="96" count="4" type="stmt"/>
            <line num="97" count="8" type="stmt"/>
            <line num="98" count="8" type="stmt"/>
            <line num="101" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="concat(long[]) : long[]" num="110" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="concat(double[]) : double[]" num="130" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="concat(T[]) : T[]" num="150" count="2" type="method"/>
            <line num="152" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="152" type="cond"/>
            <line num="153" count="2" type="stmt"/>
            <line num="154" count="2" type="stmt"/>
            <line num="155" count="4" type="stmt"/>
            <line num="157" count="2" type="stmt"/>
            <line num="159" count="2" type="stmt"/>
            <line num="160" count="2" type="stmt"/>
            <line num="161" count="4" type="stmt"/>
            <line num="162" count="4" type="stmt"/>
            <line num="165" count="2" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy(int[]) : int[]" num="174" count="6" type="method"/>
            <line num="175" count="6" type="stmt"/>
            <line num="176" count="6" type="stmt"/>
            <line num="177" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy(double[]) : double[]" num="183" count="1" type="method"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy(long[]) : long[]" num="192" count="1" type="method"/>
            <line num="193" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy(T[]) : T[]" num="201" count="1" type="method"/>
            <line num="202" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="swap(int[],int,int) : void" num="208" count="503" type="method"/>
            <line num="209" count="503" type="stmt"/>
            <line num="210" count="503" type="stmt"/>
            <line num="211" count="503" type="stmt"/>
            <line complexity="1" visibility="public" signature="swap(long[],int,int) : void" num="217" count="417" type="method"/>
            <line num="218" count="417" type="stmt"/>
            <line num="219" count="417" type="stmt"/>
            <line num="220" count="417" type="stmt"/>
            <line complexity="1" visibility="public" signature="swap(double[],int,int) : void" num="226" count="342" type="method"/>
            <line num="227" count="342" type="stmt"/>
            <line num="228" count="342" type="stmt"/>
            <line num="229" count="342" type="stmt"/>
            <line complexity="1" visibility="public" signature="swap(boolean[],int,int) : void" num="235" count="1" type="method"/>
            <line num="236" count="1" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="swap(T[],int,int) : void" num="244" count="36" type="method"/>
            <line num="245" count="36" type="stmt"/>
            <line num="246" count="36" type="stmt"/>
            <line num="247" count="36" type="stmt"/>
            <line complexity="1" visibility="public" signature="toPrimitiveArray(List&lt;Integer&gt;) : int[]" num="253" count="100" type="method"/>
            <line num="254" count="100" type="stmt"/>
            <line num="255" count="100" type="stmt"/>
            <line num="256" count="100" type="stmt"/>
            <line num="257" count="9900" type="stmt"/>
            <line num="258" count="9900" type="stmt"/>
            <line num="260" count="100" type="stmt"/>
            <line complexity="2" visibility="public" signature="toPrimitiveArray(Integer[]) : int[]" num="266" count="14" type="method"/>
            <line num="267" count="14" type="stmt"/>
            <line num="268" count="14" type="stmt"/>
            <line falsecount="14" truecount="19" num="268" type="cond"/>
            <line num="269" count="19" type="stmt"/>
            <line num="270" count="19" type="stmt"/>
            <line num="272" count="14" type="stmt"/>
            <line complexity="2" visibility="public" signature="toPrimitiveArray(Long[]) : long[]" num="278" count="0" type="method"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="280" type="cond"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toPrimitiveArray(Double[]) : double[]" num="290" count="0" type="method"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="292" type="cond"/>
            <line num="293" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toObjectList(int[]) : List&lt;Integer&gt;" num="302" count="0" type="method"/>
            <line num="303" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toObjectList(long[]) : List&lt;Long&gt;" num="312" count="0" type="method"/>
            <line num="313" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toObjectList(double[]) : List&lt;Double&gt;" num="322" count="0" type="method"/>
            <line num="323" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="partition(T[]) : int" num="335" count="0" type="method"/>
            <line num="336" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="partition(T[],int,int) : int" num="345" count="9" type="method"/>
            <line num="347" count="9" type="stmt"/>
            <line num="348" count="9" type="stmt"/>
            <line num="349" count="9" type="stmt"/>
            <line num="350" count="9" type="stmt"/>
            <line falsecount="9" truecount="23" num="350" type="cond"/>
            <line num="351" count="23" type="stmt"/>
            <line falsecount="15" truecount="8" num="351" type="cond"/>
            <line num="352" count="8" type="stmt"/>
            <line num="353" count="8" type="stmt"/>
            <line num="356" count="9" type="stmt"/>
            <line num="357" count="9" type="stmt"/>
            <line num="358" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="partition(int[]) : int" num="367" count="1" type="method"/>
            <line num="368" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="partition(int[],int,int) : int" num="377" count="125" type="method"/>
            <line num="378" count="125" type="stmt"/>
            <line num="379" count="125" type="stmt"/>
            <line num="380" count="125" type="stmt"/>
            <line num="381" count="125" type="stmt"/>
            <line falsecount="125" truecount="782" num="381" type="cond"/>
            <line num="382" count="782" type="stmt"/>
            <line falsecount="415" truecount="367" num="382" type="cond"/>
            <line num="383" count="367" type="stmt"/>
            <line num="384" count="367" type="stmt"/>
            <line num="387" count="125" type="stmt"/>
            <line num="388" count="125" type="stmt"/>
            <line num="389" count="125" type="stmt"/>
            <line complexity="1" visibility="public" signature="partition(long[]) : int" num="398" count="0" type="method"/>
            <line num="399" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="partition(long[],int,int) : int" num="408" count="100" type="method"/>
            <line num="409" count="100" type="stmt"/>
            <line num="410" count="100" type="stmt"/>
            <line num="411" count="100" type="stmt"/>
            <line num="412" count="100" type="stmt"/>
            <line falsecount="100" truecount="628" num="412" type="cond"/>
            <line num="413" count="628" type="stmt"/>
            <line falsecount="312" truecount="316" num="413" type="cond"/>
            <line num="414" count="316" type="stmt"/>
            <line num="415" count="316" type="stmt"/>
            <line num="418" count="100" type="stmt"/>
            <line num="419" count="100" type="stmt"/>
            <line num="420" count="100" type="stmt"/>
            <line complexity="1" visibility="public" signature="partition(double[]) : int" num="429" count="0" type="method"/>
            <line num="430" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="partition(double[],int,int) : int" num="439" count="100" type="method"/>
            <line num="440" count="100" type="stmt"/>
            <line num="441" count="100" type="stmt"/>
            <line num="442" count="100" type="stmt"/>
            <line num="443" count="100" type="stmt"/>
            <line falsecount="100" truecount="689" num="443" type="cond"/>
            <line num="444" count="689" type="stmt"/>
            <line falsecount="448" truecount="241" num="444" type="cond"/>
            <line num="445" count="241" type="stmt"/>
            <line num="446" count="241" type="stmt"/>
            <line num="449" count="100" type="stmt"/>
            <line num="450" count="100" type="stmt"/>
            <line num="451" count="100" type="stmt"/>
            <line complexity="2" visibility="public" signature="quickSelect(int[],int) : int" num="462" count="8" type="method"/>
            <line num="463" count="8" type="stmt"/>
            <line num="464" count="6" type="stmt"/>
            <line num="465" count="6" type="stmt"/>
            <line falsecount="1" truecount="5" num="465" type="cond"/>
            <line num="466" count="5" type="stmt"/>
            <line num="467" count="5" type="stmt"/>
            <line num="469" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="quickSelect(int[],int,int,int) : int" num="479" count="4" type="method"/>
            <line num="480" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="480" type="cond"/>
            <line num="481" count="0" type="stmt"/>
            <line num="484" count="4" type="stmt"/>
            <line num="485" count="4" type="stmt"/>
            <line num="487" count="4" type="stmt"/>
            <line falsecount="3" truecount="1" num="487" type="cond"/>
            <line num="488" count="1" type="stmt"/>
            <line num="489" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="489" type="cond"/>
            <line num="490" count="1" type="stmt"/>
            <line num="492" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="quickSelect(double[],int) : int" num="502" count="0" type="method"/>
            <line num="503" count="0" type="stmt"/>
            <line num="504" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="quickSelect(double[],int,int,int) : int" num="514" count="0" type="method"/>
            <line num="515" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="515" type="cond"/>
            <line num="516" count="0" type="stmt"/>
            <line num="519" count="0" type="stmt"/>
            <line num="520" count="0" type="stmt"/>
            <line num="522" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="522" type="cond"/>
            <line num="523" count="0" type="stmt"/>
            <line num="524" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="524" type="cond"/>
            <line num="525" count="0" type="stmt"/>
            <line num="527" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="quickSelect(long[],int) : int" num="537" count="0" type="method"/>
            <line num="538" count="0" type="stmt"/>
            <line num="539" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="quickSelect(long[],int,int,int) : int" num="549" count="0" type="method"/>
            <line num="550" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="550" type="cond"/>
            <line num="551" count="0" type="stmt"/>
            <line num="554" count="0" type="stmt"/>
            <line num="555" count="0" type="stmt"/>
            <line num="557" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="557" type="cond"/>
            <line num="558" count="0" type="stmt"/>
            <line num="559" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="559" type="cond"/>
            <line num="560" count="0" type="stmt"/>
            <line num="562" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="quickSelect(T[],int) : int" num="572" count="0" type="method"/>
            <line num="573" count="0" type="stmt"/>
            <line num="574" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="quickSelect(T[],int,int,int) : int" num="584" count="0" type="method"/>
            <line num="586" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="586" type="cond"/>
            <line num="587" count="0" type="stmt"/>
            <line num="590" count="0" type="stmt"/>
            <line num="591" count="0" type="stmt"/>
            <line num="593" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="593" type="cond"/>
            <line num="594" count="0" type="stmt"/>
            <line num="595" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="595" type="cond"/>
            <line num="596" count="0" type="stmt"/>
            <line num="598" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="medianOfMedians(int[]) : int" num="607" count="3" type="method"/>
            <line num="608" count="3" type="stmt"/>
            <line num="610" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="610" type="cond"/>
            <line num="611" count="2" type="stmt"/>
            <line num="612" count="2" type="stmt"/>
            <line num="615" count="1" type="stmt"/>
            <line num="616" count="1" type="stmt"/>
            <line falsecount="1" truecount="20" num="616" type="cond"/>
            <line num="617" count="20" type="stmt"/>
            <line num="618" count="20" type="stmt"/>
            <line num="619" count="20" type="stmt"/>
            <line num="622" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="fromUpTo(int,int,int) : int[]" num="634" count="5" type="method"/>
            <line num="635" count="5" type="stmt"/>
            <line num="637" count="5" type="stmt"/>
            <line falsecount="5" truecount="274" num="637" type="cond"/>
            <line num="638" count="274" type="stmt"/>
            <line num="640" count="5" type="stmt"/>
            <line complexity="2" visibility="public" signature="fromUpTo(long,long,long) : long[]" num="652" count="2" type="method"/>
            <line num="653" count="2" type="stmt"/>
            <line num="655" count="2" type="stmt"/>
            <line falsecount="2" truecount="150" num="655" type="cond"/>
            <line num="656" count="150" type="stmt"/>
            <line num="658" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="fromUpTo(double,double,double) : double[]" num="670" count="2" type="method"/>
            <line num="671" count="2" type="stmt"/>
            <line num="673" count="2" type="stmt"/>
            <line falsecount="2" truecount="152" num="673" type="cond"/>
            <line num="674" count="152" type="stmt"/>
            <line num="676" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="radixSort(int[]) : void" num="685" count="8" type="method"/>
            <line num="686" count="8" type="stmt"/>
            <line num="687" count="8" type="stmt"/>
            <line num="688" count="8" type="stmt"/>
            <line falsecount="8" truecount="256" num="688" type="cond"/>
            <line num="689" count="256" type="stmt"/>
            <line num="690" count="256" type="stmt"/>
            <line num="691" count="256" type="stmt"/>
            <line num="692" count="4453" type="stmt"/>
            <line num="693" count="4457" type="stmt"/>
            <line num="695" count="256" type="stmt"/>
            <line num="696" count="256" type="stmt"/>
            <line complexity="2" visibility="public" signature="countingSort(int[],int,int) : void" num="708" count="1" type="method"/>
            <line num="709" count="1" type="stmt"/>
            <line num="710" count="1" type="stmt"/>
            <line num="711" count="100" type="stmt"/>
            <line num="714" count="1" type="stmt"/>
            <line num="715" count="1" type="stmt"/>
            <line falsecount="1" truecount="1001" num="715" type="cond"/>
            <line num="716" count="1001" type="stmt"/>
            <line num="717" count="1001" type="stmt"/>
            <line complexity="1" visibility="public" signature="quickSort(int[]) : void" num="724" count="1" type="method"/>
            <line num="725" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="quickSort(int[],int,int) : void" num="732" count="201" type="method"/>
            <line num="733" count="201" type="stmt"/>
            <line falsecount="101" truecount="100" num="733" type="cond"/>
            <line num="734" count="100" type="stmt"/>
            <line num="735" count="100" type="stmt"/>
            <line num="736" count="100" type="stmt"/>
            <line complexity="1" visibility="public" signature="quickSort(long[]) : void" num="743" count="1" type="method"/>
            <line num="744" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="quickSort(long[],int,int) : void" num="751" count="201" type="method"/>
            <line num="752" count="201" type="stmt"/>
            <line falsecount="101" truecount="100" num="752" type="cond"/>
            <line num="753" count="100" type="stmt"/>
            <line num="754" count="100" type="stmt"/>
            <line num="755" count="100" type="stmt"/>
            <line complexity="1" visibility="public" signature="quickSort(double[]) : void" num="762" count="1" type="method"/>
            <line num="763" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="quickSort(double[],int,int) : void" num="770" count="201" type="method"/>
            <line num="771" count="201" type="stmt"/>
            <line falsecount="101" truecount="100" num="771" type="cond"/>
            <line num="772" count="100" type="stmt"/>
            <line num="773" count="100" type="stmt"/>
            <line num="774" count="100" type="stmt"/>
            <line complexity="1" visibility="public" signature="quickSort(T[]) : void" num="781" count="1" type="method"/>
            <line num="782" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="quickSort(T[],int,int) : void" num="789" count="19" type="method"/>
            <line num="791" count="19" type="stmt"/>
            <line falsecount="10" truecount="9" num="791" type="cond"/>
            <line num="792" count="9" type="stmt"/>
            <line num="793" count="9" type="stmt"/>
            <line num="794" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="multiQuickSort(int[]) : void" num="804" count="4" type="method"/>
            <line num="805" count="4" type="stmt"/>
            <line complexity="9" visibility="public" signature="multiQuickSort(int,int[]) : void" num="815" count="5" type="method"/>
            <line num="817" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="817" type="cond"/>
            <line num="818" count="0" type="stmt"/>
            <line num="821" count="5" type="stmt"/>
            <line falsecount="3" truecount="2" num="821" type="cond"/>
            <line num="822" count="2" type="stmt"/>
            <line num="823" count="2" type="stmt"/>
            <line num="826" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="826" type="cond"/>
            <line num="827" count="1" type="stmt"/>
            <line num="830" count="2" type="stmt"/>
            <line num="831" count="2" type="stmt"/>
            <line falsecount="1" truecount="2" num="831" type="cond"/>
            <line num="832" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="832" type="cond"/>
            <line num="833" count="1" type="stmt"/>
            <line num="836" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="multiQuickSort(int[][],int,int,int) : void" num="842" count="9" type="method"/>
            <line num="844" count="9" type="stmt"/>
            <line falsecount="5" truecount="4" num="844" type="cond"/>
            <line num="845" count="4" type="stmt"/>
            <line num="846" count="4" type="stmt"/>
            <line num="847" count="4" type="stmt"/>
            <line complexity="3" visibility="private" signature="multiPartition(int[][],int,int,int) : int" num="860" count="4" type="method"/>
            <line num="862" count="4" type="stmt"/>
            <line num="863" count="4" type="stmt"/>
            <line num="864" count="4" type="stmt"/>
            <line num="865" count="4" type="stmt"/>
            <line falsecount="4" truecount="6" num="865" type="cond"/>
            <line num="866" count="6" type="stmt"/>
            <line falsecount="5" truecount="1" num="866" type="cond"/>
            <line num="867" count="1" type="stmt"/>
            <line num="868" count="1" type="stmt"/>
            <line num="869" count="2" type="stmt"/>
            <line num="873" count="4" type="stmt"/>
            <line num="874" count="4" type="stmt"/>
            <line num="875" count="8" type="stmt"/>
            <line num="878" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="multiQuickSort(T[]) : void" num="887" count="0" type="method"/>
            <line num="889" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="multiQuickSort(int,T[]) : void" num="899" count="0" type="method"/>
            <line num="903" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="903" type="cond"/>
            <line num="904" count="0" type="stmt"/>
            <line num="907" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="907" type="cond"/>
            <line num="908" count="0" type="stmt"/>
            <line num="909" count="0" type="stmt"/>
            <line num="912" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="912" type="cond"/>
            <line num="913" count="0" type="stmt"/>
            <line num="916" count="0" type="stmt"/>
            <line num="917" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="917" type="cond"/>
            <line num="918" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="918" type="cond"/>
            <line num="919" count="0" type="stmt"/>
            <line num="922" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="multiQuickSort(T[][],int,int,int) : void" num="928" count="0" type="method"/>
            <line num="930" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="930" type="cond"/>
            <line num="931" count="0" type="stmt"/>
            <line num="932" count="0" type="stmt"/>
            <line num="933" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="multiPartition(T[][],int,int,int) : int" num="946" count="0" type="method"/>
            <line num="948" count="0" type="stmt"/>
            <line num="949" count="0" type="stmt"/>
            <line num="950" count="0" type="stmt"/>
            <line num="951" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="951" type="cond"/>
            <line num="952" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="952" type="cond"/>
            <line num="953" count="0" type="stmt"/>
            <line num="954" count="0" type="stmt"/>
            <line num="955" count="0" type="stmt"/>
            <line num="959" count="0" type="stmt"/>
            <line num="960" count="0" type="stmt"/>
            <line num="961" count="0" type="stmt"/>
            <line num="964" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="deduplicate(int[]) : int[]" num="971" count="1" type="method"/>
            <line num="972" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="972" type="cond"/>
            <line num="973" count="0" type="stmt"/>
            <line num="974" count="1" type="stmt"/>
            <line num="975" count="1" type="stmt"/>
            <line num="977" count="1" type="stmt"/>
            <line num="978" count="7" type="stmt"/>
            <line falsecount="2" truecount="5" num="978" type="cond"/>
            <line num="979" count="5" type="stmt"/>
            <line num="983" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="deduplicate(T[]) : ArrayList&lt;T&gt;" num="991" count="28" type="method"/>
            <line num="992" count="28" type="stmt"/>
            <line num="993" count="28" type="stmt"/>
            <line num="995" count="28" type="stmt"/>
            <line num="996" count="132" type="stmt"/>
            <line falsecount="0" truecount="132" num="996" type="cond"/>
            <line num="997" count="132" type="stmt"/>
            <line num="1000" count="28" type="stmt"/>
            <line complexity="1" visibility="public" signature="union(int[],int[]) : int[]" num="1006" count="4" type="method"/>
            <line num="1007" count="4" type="stmt"/>
            <line num="1008" count="4" type="stmt"/>
            <line num="1009" count="4" type="stmt"/>
            <line num="1010" count="4" type="stmt"/>
            <line complexity="7" visibility="public" signature="intersection(int[],int[]) : int[]" num="1017" count="1" type="method"/>
            <line num="1018" count="1" type="stmt"/>
            <line num="1019" count="1" type="stmt"/>
            <line num="1020" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="1020" type="cond"/>
            <line num="1021" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="1021" type="cond"/>
            <line num="1023" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="1023" type="cond"/>
            <line num="1024" count="2" type="stmt"/>
            <line num="1025" count="2" type="stmt"/>
            <line num="1026" count="2" type="stmt"/>
            <line num="1027" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="1027" type="cond"/>
            <line num="1028" count="0" type="stmt"/>
            <line num="1030" count="1" type="stmt"/>
            <line num="1034" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="intersectionUnsorted(int[],int[]) : int[]" num="1041" count="4" type="method"/>
            <line num="1042" count="4" type="stmt"/>
            <line num="1043" count="4" type="stmt"/>
            <line num="1044" count="4" type="stmt"/>
            <line num="1045" count="20" type="stmt"/>
            <line num="1048" count="4" type="stmt"/>
            <line num="1049" count="16" type="stmt"/>
            <line falsecount="2" truecount="14" num="1049" type="cond"/>
            <line num="1050" count="14" type="stmt"/>
            <line num="1054" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="missingNumber(int[]) : int" num="1065" count="1" type="method"/>
            <line num="1066" count="1" type="stmt"/>
            <line num="1067" count="1" type="stmt"/>
            <line num="1068" count="5" type="stmt"/>
            <line num="1071" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="min(int[]) : int" num="1077" count="1" type="method"/>
            <line num="1078" count="1" type="stmt"/>
            <line num="1079" count="1" type="stmt"/>
            <line num="1080" count="1" type="stmt"/>
            <line num="1081" count="1" type="stmt"/>
            <line num="1082" count="5" type="stmt"/>
            <line falsecount="4" truecount="1" num="1082" type="cond"/>
            <line num="1083" count="1" type="stmt"/>
            <line num="1086" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="minIndex(int[]) : int" num="1092" count="1" type="method"/>
            <line num="1093" count="1" type="stmt"/>
            <line num="1094" count="1" type="stmt"/>
            <line num="1095" count="1" type="stmt"/>
            <line num="1096" count="1" type="stmt"/>
            <line falsecount="1" truecount="5" num="1096" type="cond"/>
            <line num="1097" count="5" type="stmt"/>
            <line falsecount="4" truecount="1" num="1097" type="cond"/>
            <line num="1098" count="1" type="stmt"/>
            <line num="1101" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="min(long[]) : long" num="1107" count="1" type="method"/>
            <line num="1108" count="1" type="stmt"/>
            <line num="1109" count="1" type="stmt"/>
            <line num="1110" count="1" type="stmt"/>
            <line num="1111" count="1" type="stmt"/>
            <line num="1112" count="5" type="stmt"/>
            <line falsecount="4" truecount="1" num="1112" type="cond"/>
            <line num="1113" count="1" type="stmt"/>
            <line num="1116" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="minIndex(long[]) : int" num="1122" count="1" type="method"/>
            <line num="1123" count="1" type="stmt"/>
            <line num="1124" count="1" type="stmt"/>
            <line num="1125" count="1" type="stmt"/>
            <line num="1126" count="1" type="stmt"/>
            <line falsecount="1" truecount="5" num="1126" type="cond"/>
            <line num="1127" count="5" type="stmt"/>
            <line falsecount="4" truecount="1" num="1127" type="cond"/>
            <line num="1128" count="1" type="stmt"/>
            <line num="1131" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="min(double[]) : double" num="1137" count="1" type="method"/>
            <line num="1138" count="1" type="stmt"/>
            <line num="1139" count="1" type="stmt"/>
            <line num="1140" count="1" type="stmt"/>
            <line num="1141" count="1" type="stmt"/>
            <line num="1142" count="5" type="stmt"/>
            <line falsecount="4" truecount="1" num="1142" type="cond"/>
            <line num="1143" count="1" type="stmt"/>
            <line num="1146" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="minIndex(double[]) : int" num="1152" count="1" type="method"/>
            <line num="1153" count="1" type="stmt"/>
            <line num="1154" count="1" type="stmt"/>
            <line num="1155" count="1" type="stmt"/>
            <line num="1156" count="1" type="stmt"/>
            <line falsecount="1" truecount="5" num="1156" type="cond"/>
            <line num="1157" count="5" type="stmt"/>
            <line falsecount="4" truecount="1" num="1157" type="cond"/>
            <line num="1158" count="1" type="stmt"/>
            <line num="1161" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="max(int[]) : int" num="1167" count="1" type="method"/>
            <line num="1168" count="1" type="stmt"/>
            <line num="1169" count="1" type="stmt"/>
            <line num="1170" count="1" type="stmt"/>
            <line num="1171" count="1" type="stmt"/>
            <line num="1172" count="5" type="stmt"/>
            <line falsecount="1" truecount="4" num="1172" type="cond"/>
            <line num="1173" count="4" type="stmt"/>
            <line num="1176" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="maxIndex(int[]) : int" num="1182" count="1" type="method"/>
            <line num="1183" count="1" type="stmt"/>
            <line num="1184" count="1" type="stmt"/>
            <line num="1185" count="1" type="stmt"/>
            <line num="1186" count="1" type="stmt"/>
            <line falsecount="1" truecount="5" num="1186" type="cond"/>
            <line num="1187" count="5" type="stmt"/>
            <line falsecount="1" truecount="4" num="1187" type="cond"/>
            <line num="1188" count="4" type="stmt"/>
            <line num="1191" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="max(long[]) : long" num="1197" count="1" type="method"/>
            <line num="1198" count="1" type="stmt"/>
            <line num="1199" count="1" type="stmt"/>
            <line num="1200" count="1" type="stmt"/>
            <line num="1201" count="1" type="stmt"/>
            <line num="1202" count="5" type="stmt"/>
            <line falsecount="1" truecount="4" num="1202" type="cond"/>
            <line num="1203" count="4" type="stmt"/>
            <line num="1206" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="maxIndex(long[]) : int" num="1212" count="1" type="method"/>
            <line num="1213" count="1" type="stmt"/>
            <line num="1214" count="1" type="stmt"/>
            <line num="1215" count="1" type="stmt"/>
            <line num="1216" count="1" type="stmt"/>
            <line falsecount="1" truecount="5" num="1216" type="cond"/>
            <line num="1217" count="5" type="stmt"/>
            <line falsecount="1" truecount="4" num="1217" type="cond"/>
            <line num="1218" count="4" type="stmt"/>
            <line num="1221" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="max(double[]) : double" num="1227" count="1" type="method"/>
            <line num="1228" count="1" type="stmt"/>
            <line num="1229" count="1" type="stmt"/>
            <line num="1230" count="1" type="stmt"/>
            <line num="1231" count="1" type="stmt"/>
            <line num="1232" count="5" type="stmt"/>
            <line falsecount="1" truecount="4" num="1232" type="cond"/>
            <line num="1233" count="4" type="stmt"/>
            <line num="1236" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="maxIndex(double[]) : int" num="1242" count="1" type="method"/>
            <line num="1243" count="1" type="stmt"/>
            <line num="1244" count="1" type="stmt"/>
            <line num="1245" count="1" type="stmt"/>
            <line num="1246" count="1" type="stmt"/>
            <line falsecount="1" truecount="5" num="1246" type="cond"/>
            <line num="1247" count="5" type="stmt"/>
            <line falsecount="1" truecount="4" num="1247" type="cond"/>
            <line num="1248" count="4" type="stmt"/>
            <line num="1251" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="subArray(T[],int) : T[]" num="1259" count="0" type="method"/>
            <line num="1260" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subArray(T[],int,int) : T[]" num="1269" count="4" type="method"/>
            <line num="1270" count="4" type="stmt"/>
            <line num="1274" count="4" type="stmt"/>
            <line num="1276" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="shuffle(T[]) : T[]" num="1284" count="0" type="method"/>
            <line num="1285" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="shuffle(T[],Random) : T[]" num="1293" count="1" type="method"/>
            <line num="1294" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="1294" type="cond"/>
            <line num="1295" count="3" type="stmt"/>
            <line num="1296" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="multiShuffle(T[],T[]) : T[]" num="1304" count="0" type="method"/>
            <line num="1306" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="multiShuffle(T[],Random,T[]) : T[]" num="1314" count="0" type="method"/>
            <line num="1316" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1316" type="cond"/>
            <line num="1317" count="0" type="stmt"/>
            <line num="1318" count="0" type="stmt"/>
            <line num="1319" count="0" type="stmt"/>
            <line num="1320" count="0" type="stmt"/>
            <line num="1323" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(int) : int[]" num="1332" count="0" type="method"/>
            <line num="1333" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(long) : long[]" num="1342" count="0" type="method"/>
            <line num="1343" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(double) : double[]" num="1352" count="0" type="method"/>
            <line num="1353" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(byte) : byte[]" num="1362" count="0" type="method"/>
            <line num="1363" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(T) : T[]" num="1372" count="0" type="method"/>
            <line num="1374" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="merge(int[],int[]) : int[]" num="1384" count="1" type="method"/>
            <line num="1385" count="1" type="stmt"/>
            <line num="1386" count="1" type="stmt"/>
            <line num="1387" count="1" type="stmt"/>
            <line falsecount="1" truecount="5" num="1387" type="cond"/>
            <line num="1388" count="5" type="stmt"/>
            <line falsecount="2" truecount="3" num="1388" type="cond"/>
            <line num="1389" count="3" type="stmt"/>
            <line num="1390" count="3" type="stmt"/>
            <line num="1392" count="2" type="stmt"/>
            <line num="1393" count="2" type="stmt"/>
            <line num="1395" count="5" type="stmt"/>
            <line num="1398" count="1" type="stmt"/>
            <line num="1399" count="1" type="stmt"/>
            <line num="1401" count="1" type="stmt"/>
            <line complexity="5" visibility="public" signature="merge(int[],int,int,int) : void" num="1415" count="3" type="method"/>
            <line num="1417" count="3" type="stmt"/>
            <line num="1418" count="3" type="stmt"/>
            <line num="1419" count="3" type="stmt"/>
            <line falsecount="0" truecount="16" num="1419" type="cond"/>
            <line num="1420" count="16" type="stmt"/>
            <line falsecount="9" truecount="7" num="1420" type="cond"/>
            <line num="1421" count="7" type="stmt"/>
            <line num="1422" count="7" type="stmt"/>
            <line num="1424" count="9" type="stmt"/>
            <line num="1425" count="9" type="stmt"/>
            <line num="1427" count="16" type="stmt"/>
            <line num="1429" count="16" type="stmt"/>
            <line falsecount="14" truecount="2" num="1429" type="cond"/>
            <line num="1430" count="2" type="stmt"/>
            <line num="1431" count="2" type="stmt"/>
            <line num="1433" count="14" type="stmt"/>
            <line falsecount="13" truecount="1" num="1433" type="cond"/>
            <line num="1434" count="1" type="stmt"/>
            <line num="1435" count="1" type="stmt"/>
            <line num="1438" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="isValidIndex(int[],int) : boolean" num="1445" count="5" type="method"/>
            <line num="1446" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="isValidIndex(double[],int) : boolean" num="1453" count="5" type="method"/>
            <line num="1454" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="isValidIndex(float[],int) : boolean" num="1461" count="5" type="method"/>
            <line num="1462" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="isValidIndex(long[],int) : boolean" num="1469" count="5" type="method"/>
            <line num="1470" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="isValidIndex(boolean[],int) : boolean" num="1477" count="5" type="method"/>
            <line num="1478" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="isValidIndex(byte[],int) : boolean" num="1485" count="5" type="method"/>
            <line num="1486" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="isValidIndex(T[],int) : boolean" num="1493" count="5" type="method"/>
            <line num="1494" count="5" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/datastructure/AsyncBufferedOutputStream.java" name="AsyncBufferedOutputStream.java">
            <metrics coveredelements="64" coveredconditionals="10" complexity="24" loc="198" coveredmethods="11" methods="12" elements="76" classes="2" ncloc="117" statements="52" conditionals="12" coveredstatements="43"/>
            <class name="AsyncBufferedOutputStream">
               <metrics coveredelements="54" coveredconditionals="8" complexity="19" coveredmethods="10" methods="11" elements="61" statements="40" conditionals="10" coveredstatements="36"/>
            </class>
            <class name="AsyncBufferedOutputStream.FlushThread">
               <metrics coveredelements="10" coveredconditionals="2" complexity="5" coveredmethods="1" methods="1" elements="15" statements="12" conditionals="2" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="AsyncBufferedOutputStream(OutputStream)" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AsyncBufferedOutputStream(OutputStream,int)" num="42" count="6" type="method"/>
            <line num="43" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="AsyncBufferedOutputStream(OutputStream,int,int)" num="53" count="6" type="method"/>
            <line num="54" count="6" type="stmt"/>
            <line num="55" count="6" type="stmt"/>
            <line num="56" count="6" type="stmt"/>
            <line num="57" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(int) : void" num="66" count="28164288" type="method"/>
            <line num="68" count="29323525" type="stmt"/>
            <line num="69" count="29679030" type="stmt"/>
            <line num="70" count="29830860" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(byte[]) : void" num="73" count="25214" type="method"/>
            <line num="75" count="25251" type="stmt"/>
            <line complexity="3" visibility="public" signature="write(byte[],int,int) : void" num="87" count="25246" type="method"/>
            <line num="89" count="25233" type="stmt"/>
            <line falsecount="25208" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="93" count="25206" type="stmt"/>
            <line num="94" count="25192" type="stmt"/>
            <line falsecount="25161" truecount="25740" num="94" type="cond"/>
            <line num="95" count="25734" type="stmt"/>
            <line num="96" count="25692" type="stmt"/>
            <line num="98" count="25719" type="stmt"/>
            <line num="99" count="25706" type="stmt"/>
            <line num="100" count="25705" type="stmt"/>
            <line num="101" count="25703" type="stmt"/>
            <line complexity="1" visibility="public" signature="flush() : void" num="111" count="2" type="method"/>
            <line num="113" count="2" type="stmt"/>
            <line complexity="2" visibility="private" signature="flushBufferIfSizeLimitReached() : void" num="116" count="29814016" type="method"/>
            <line num="117" count="30549179" type="stmt"/>
            <line falsecount="30611915" truecount="6069" num="117" type="cond"/>
            <line num="118" count="6070" type="stmt"/>
            <line complexity="3" visibility="private" signature="forceFlush() : void" num="122" count="6078" type="method"/>
            <line num="123" count="6078" type="stmt"/>
            <line falsecount="2" truecount="6076" num="123" type="cond"/>
            <line num="124" count="6076" type="stmt"/>
            <line num="125" count="6075" type="stmt"/>
            <line num="128" count="6076" type="stmt"/>
            <line num="129" count="6076" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="6076" type="stmt"/>
            <line complexity="2" visibility="public" signature="close() : void" num="137" count="6" type="method"/>
            <line num="139" count="6" type="stmt"/>
            <line num="141" count="6" type="stmt"/>
            <line num="142" count="6" type="stmt"/>
            <line num="144" count="6" type="stmt"/>
            <line num="145" count="6" type="stmt"/>
            <line num="146" count="6" type="stmt"/>
            <line num="148" count="6" type="stmt"/>
            <line num="152" count="6" type="stmt"/>
            <line complexity="3" visibility="private" signature="throwOnFlusherError() : void" num="156" count="29534828" type="method"/>
            <line num="157" count="29963471" type="stmt"/>
            <line falsecount="30106483" truecount="0" num="157" type="cond"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="run() : void" num="169" count="6" type="method"/>
            <line num="172" count="6" type="stmt"/>
            <line num="173" count="6" type="stmt"/>
            <line falsecount="5" truecount="6070" num="173" type="cond"/>
            <line num="174" count="6070" type="stmt"/>
            <line num="175" count="6069" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="186" count="6" type="stmt"/>
            <line num="188" count="6" type="stmt"/>
            <line num="189" count="7" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/datastructure/ByteBufferInputStream.java" name="ByteBufferInputStream.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="33" coveredmethods="0" methods="3" elements="16" classes="1" ncloc="26" statements="9" conditionals="4" coveredstatements="0"/>
            <class name="ByteBufferInputStream">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="3" elements="16" statements="9" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ByteBufferInputStream(ByteBuffer)" num="11" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="read() : int" num="15" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="17" type="cond"/>
            <line num="18" count="0" type="stmt"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="read(byte[],int,int) : int" num="23" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="25" type="cond"/>
            <line num="26" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/datastructure/CollectionInputProvider.java" name="CollectionInputProvider.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="23" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="12" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="CollectionInputProvider">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="CollectionInputProvider(Collection&lt;T&gt;)" num="14" count="1" type="method"/>
            <line num="15" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterate() : Iterable&lt;T&gt;" num="18" count="1" type="method"/>
            <line num="20" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/datastructure/DiskList.java" name="DiskList.java">
            <metrics coveredelements="53" coveredconditionals="6" complexity="25" loc="217" coveredmethods="13" methods="17" elements="74" classes="3" ncloc="130" statements="47" conditionals="10" coveredstatements="34"/>
            <class name="DiskList">
               <metrics coveredelements="53" coveredconditionals="6" complexity="23" coveredmethods="13" methods="15" elements="70" statements="45" conditionals="10" coveredstatements="34"/>
            </class>
            <class name="DiskList.State">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="DiskList.IORuntimeException">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DiskList(String)" num="39" count="2" type="method"/>
            <line num="40" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="DiskList(String,int)" num="48" count="2" type="method"/>
            <line num="49" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="DiskList(String,E)" num="60" count="1" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="DiskList(String,int,E)" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="add(E) : boolean" num="81" count="9557273" type="method"/>
            <line num="83" count="9695373" type="stmt"/>
            <line num="84" count="9745976" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="9524761" type="stmt"/>
            <line num="89" count="9649415" type="stmt"/>
            <line complexity="1" visibility="public" signature="openRead() : void" num="95" count="2" type="method"/>
            <line num="96" count="2" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="poll(E) : E" num="109" count="9158848" type="method"/>
            <line num="110" count="9510670" type="stmt"/>
            <line num="111" count="9544801" type="stmt"/>
            <line complexity="2" visibility="private" signature="closeWrite() : void" num="117" count="4" type="method"/>
            <line num="118" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="118" type="cond"/>
            <line num="119" count="2" type="stmt"/>
            <line num="120" count="2" type="stmt"/>
            <line complexity="2" visibility="private" signature="closeRead() : void" num="127" count="2" type="method"/>
            <line num="128" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="128" type="cond"/>
            <line num="129" count="2" type="stmt"/>
            <line num="130" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="close() : void" num="137" count="2" type="method"/>
            <line num="139" count="2" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line num="141" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrentState() : State" num="147" count="5" type="method"/>
            <line num="148" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="154" count="5242882" type="method"/>
            <line num="156" count="5242883" type="stmt"/>
            <line complexity="4" visibility="public" signature="iterator() : Iterator&lt;E&gt;" num="159" count="2" type="method"/>
            <line num="161" count="2" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="165" type="cond"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="167" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line complexity="3" visibility="protected" signature="computeNext() : E" num="182" count="5242881" type="method"/>
            <line num="184" count="5242881" type="stmt"/>
            <line num="185" count="5242881" type="stmt"/>
            <line falsecount="1" truecount="5242880" num="185" type="cond"/>
            <line num="186" count="5242880" type="stmt"/>
            <line num="187" count="5242880" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : E" num="198" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="IORuntimeException()" num="207" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="IORuntimeException(Throwable)" num="211" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/datastructure/DistanceResult.java" name="DistanceResult.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="4" loc="45" coveredmethods="4" methods="4" elements="9" classes="1" ncloc="19" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="DistanceResult">
               <metrics coveredelements="9" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="DistanceResult(double,TYPE)" num="21" count="24" type="method"/>
            <line num="22" count="24" type="stmt"/>
            <line num="23" count="24" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDistance() : double" num="29" count="11" type="method"/>
            <line num="30" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : TYPE" num="36" count="30" type="method"/>
            <line num="37" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="40" count="1" type="method"/>
            <line num="42" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/datastructure/HuffmanTree.java" name="HuffmanTree.java">
            <metrics coveredelements="98" coveredconditionals="20" complexity="25" loc="232" coveredmethods="11" methods="14" elements="107" classes="3" ncloc="145" statements="71" conditionals="22" coveredstatements="67"/>
            <class name="HuffmanTree">
               <metrics coveredelements="84" coveredconditionals="20" complexity="17" coveredmethods="6" methods="6" elements="87" statements="59" conditionals="22" coveredstatements="58"/>
            </class>
            <class name="HuffmanTree.HuffmanTreeNode">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="HuffmanTree.HuffmanTreeNodeEntry">
               <metrics coveredelements="12" coveredconditionals="0" complexity="7" coveredmethods="4" methods="7" elements="18" statements="11" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="isLeaf() : boolean" num="32" count="29" type="method"/>
            <line num="33" count="29" type="stmt"/>
            <line complexity="1" visibility="package" signature="HuffmanTreeNodeEntry(HuffmanTreeNode,int)" num="44" count="5" type="method"/>
            <line num="45" count="5" type="stmt"/>
            <line num="46" count="5" type="stmt"/>
            <line num="47" count="5" type="stmt"/>
            <line complexity="1" visibility="package" signature="HuffmanTreeNodeEntry(VALUE,int)" num="50" count="6" type="method"/>
            <line num="51" count="6" type="stmt"/>
            <line num="52" count="6" type="stmt"/>
            <line num="53" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getElement() : VALUE" num="56" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNode() : HuffmanTreeNode" num="60" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCount() : int" num="64" count="10" type="method"/>
            <line num="65" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="compareTo(HuffmanTreeNodeEntry) : int" num="68" count="26" type="method"/>
            <line num="70" count="26" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="HuffmanTree()" num="89" count="1" type="method"/>
            <line num="90" count="1" type="stmt"/>
            <line complexity="4" visibility="public" signature="addAll(Multiset&lt;VALUE&gt;) : void" num="98" count="1" type="method"/>
            <line num="99" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="6" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="113" count="5" type="stmt"/>
            <line num="114" count="5" type="stmt"/>
            <line num="115" count="5" type="stmt"/>
            <line falsecount="1" truecount="4" num="115" type="cond"/>
            <line num="116" count="4" type="stmt"/>
            <line num="117" count="4" type="stmt"/>
            <line num="120" count="5" type="stmt"/>
            <line num="121" count="5" type="stmt"/>
            <line num="122" count="5" type="stmt"/>
            <line falsecount="3" truecount="2" num="122" type="cond"/>
            <line num="123" count="2" type="stmt"/>
            <line num="124" count="2" type="stmt"/>
            <line num="127" count="5" type="stmt"/>
            <line num="128" count="5" type="stmt"/>
            <line num="129" count="5" type="stmt"/>
            <line num="130" count="5" type="stmt"/>
            <line num="131" count="5" type="stmt"/>
            <line num="132" count="5" type="stmt"/>
            <line num="134" count="5" type="stmt"/>
            <line num="136" count="5" type="stmt"/>
            <line num="139" count="5" type="stmt"/>
            <line falsecount="4" truecount="1" num="139" type="cond"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHuffmanCodes() : Map&lt;VALUE, SparseBitVector&gt;" num="158" count="1" type="method"/>
            <line num="159" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line complexity="5" visibility="public" signature="decode(SparseBitVector) : VALUE" num="172" count="6" type="method"/>
            <line num="173" count="6" type="stmt"/>
            <line num="174" count="6" type="stmt"/>
            <line falsecount="0" truecount="18" num="174" type="cond"/>
            <line num="175" count="18" type="stmt"/>
            <line falsecount="11" truecount="7" num="175" type="cond"/>
            <line num="176" count="7" type="stmt"/>
            <line num="178" count="11" type="stmt"/>
            <line num="180" count="18" type="stmt"/>
            <line falsecount="18" truecount="0" num="180" type="cond"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="18" type="stmt"/>
            <line falsecount="12" truecount="6" num="182" type="cond"/>
            <line num="183" count="6" type="stmt"/>
            <line num="187" count="6" type="stmt"/>
            <line complexity="5" visibility="private" signature="traverse(HuffmanTreeNode,BitSet,int,Map&lt;VALUE, SparseBitVector&gt;) : void" num="198" count="11" type="method"/>
            <line num="201" count="11" type="stmt"/>
            <line falsecount="5" truecount="6" num="201" type="cond"/>
            <line num="203" count="6" type="stmt"/>
            <line num="204" count="6" type="stmt"/>
            <line falsecount="6" truecount="7" num="204" type="cond"/>
            <line num="206" count="7" type="stmt"/>
            <line num="208" count="6" type="stmt"/>
            <line num="211" count="11" type="stmt"/>
            <line falsecount="6" truecount="5" num="211" type="cond"/>
            <line num="212" count="5" type="stmt"/>
            <line num="213" count="5" type="stmt"/>
            <line num="216" count="11" type="stmt"/>
            <line falsecount="6" truecount="5" num="216" type="cond"/>
            <line num="217" count="5" type="stmt"/>
            <line num="218" count="5" type="stmt"/>
            <line num="219" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCardinality() : int" num="228" count="8" type="method"/>
            <line num="229" count="8" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/datastructure/InputProvider.java" name="InputProvider.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="17" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="InputProvider">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/datastructure/InvertedIndex.java" name="InvertedIndex.java">
            <metrics coveredelements="53" coveredconditionals="6" complexity="12" loc="223" coveredmethods="7" methods="7" elements="55" classes="3" ncloc="100" statements="40" conditionals="8" coveredstatements="40"/>
            <class name="InvertedIndex">
               <metrics coveredelements="53" coveredconditionals="6" complexity="12" coveredmethods="7" methods="7" elements="55" statements="40" conditionals="8" coveredstatements="40"/>
            </class>
            <class name="InvertedIndex.DocumentDistanceMeasurer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="InvertedIndex.DocumentMapper">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="InvertedIndex(DocumentMapper&lt;DOCUMENT_TYPE, KEY_TYPE&gt;,DocumentDistanceMeasurer&lt;DOCUMENT_TYPE, KEY_TYPE&gt;)" num="37" count="3" type="method"/>
            <line num="39" count="3" type="stmt"/>
            <line num="40" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="build(List&lt;DOCUMENT_TYPE&gt;) : void" num="48" count="3" type="method"/>
            <line num="49" count="3" type="stmt"/>
            <line num="50" count="3" type="stmt"/>
            <line num="54" count="3" type="stmt"/>
            <line num="55" count="3" type="stmt"/>
            <line num="56" count="3" type="stmt"/>
            <line falsecount="3" truecount="9" num="56" type="cond"/>
            <line num="57" count="9" type="stmt"/>
            <line num="58" count="9" type="stmt"/>
            <line num="59" count="9" type="stmt"/>
            <line num="61" count="9" type="stmt"/>
            <line num="62" count="28" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(DOCUMENT_TYPE) : List&lt;DistanceResult&lt;DOCUMENT_TYPE&gt;&gt;" num="75" count="2" type="method"/>
            <line num="76" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="query(DOCUMENT_TYPE,double) : List&lt;DistanceResult&lt;DOCUMENT_TYPE&gt;&gt;" num="89" count="1" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="5" visibility="public" signature="query(DOCUMENT_TYPE,int,double) : List&lt;DistanceResult&lt;DOCUMENT_TYPE&gt;&gt;" num="104" count="11" type="method"/>
            <line num="107" count="11" type="stmt"/>
            <line num="108" count="11" type="stmt"/>
            <line num="111" count="11" type="stmt"/>
            <line num="117" count="11" type="stmt"/>
            <line num="118" count="11" type="stmt"/>
            <line num="120" count="11" type="stmt"/>
            <line num="121" count="42" type="stmt"/>
            <line num="122" count="42" type="stmt"/>
            <line falsecount="11" truecount="31" num="122" type="cond"/>
            <line num="123" count="30" type="stmt"/>
            <line num="126" count="11" type="stmt"/>
            <line num="129" count="11" type="stmt"/>
            <line num="130" count="29" type="stmt"/>
            <line num="131" count="29" type="stmt"/>
            <line num="132" count="29" type="stmt"/>
            <line num="134" count="29" type="stmt"/>
            <line falsecount="6" truecount="23" num="134" type="cond"/>
            <line num="135" count="23" type="stmt"/>
            <line num="139" count="11" type="stmt"/>
            <line num="141" count="11" type="stmt"/>
            <line num="142" count="11" type="stmt"/>
            <line falsecount="0" truecount="0" num="142" type="cond"/>
            <line num="143" count="19" type="stmt"/>
            <line num="146" count="11" type="stmt"/>
            <line num="148" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(DocumentMapper&lt;DOCUMENT_TYPE, KEY_TYPE&gt;,DocumentDistanceMeasurer&lt;DOCUMENT_TYPE, KEY_TYPE&gt;) : InvertedIndex&lt;DOCUMENT_TYPE, KEY_TYPE&gt;" num="202" count="1" type="method"/>
            <line num="205" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="createVectorIndex(DistanceMeasurer) : InvertedIndex&lt;DoubleVector, Integer&gt;" num="215" count="2" type="method"/>
            <line num="217" count="2" type="stmt"/>
            <line num="218" count="2" type="stmt"/>
            <line num="220" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/datastructure/Iterables.java" name="Iterables.java">
            <metrics coveredelements="20" coveredconditionals="6" complexity="8" loc="56" coveredmethods="3" methods="4" elements="22" classes="1" ncloc="32" statements="12" conditionals="6" coveredstatements="11"/>
            <class name="Iterables">
               <metrics coveredelements="20" coveredconditionals="6" complexity="8" coveredmethods="3" methods="4" elements="22" statements="12" conditionals="6" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="private" signature="Iterables()" num="14" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="from(Iterator&lt;T&gt;) : Iterable&lt;T&gt;" num="21" count="2" type="method"/>
            <line num="22" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;T&gt;" num="23" count="2" type="method"/>
            <line num="25" count="2" type="stmt"/>
            <line complexity="5" visibility="public" signature="consumeNext(Iterator&lt;K&gt;,Iterator&lt;V&gt;) : Tuple&lt;K, V&gt;" num="39" count="12" type="method"/>
            <line num="41" count="12" type="stmt"/>
            <line num="42" count="12" type="stmt"/>
            <line num="43" count="12" type="stmt"/>
            <line falsecount="2" truecount="10" num="43" type="cond"/>
            <line num="44" count="10" type="stmt"/>
            <line num="46" count="12" type="stmt"/>
            <line falsecount="2" truecount="10" num="46" type="cond"/>
            <line num="47" count="10" type="stmt"/>
            <line num="49" count="12" type="stmt"/>
            <line falsecount="9" truecount="2" num="49" type="cond"/>
            <line num="50" count="2" type="stmt"/>
            <line num="52" count="10" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/datastructure/LRUCache.java" name="LRUCache.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="4" loc="34" coveredmethods="4" methods="4" elements="9" classes="1" ncloc="23" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="LRUCache">
               <metrics coveredelements="9" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="LRUCache(int)" num="16" count="1" type="method"/>
            <line num="18" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="removeEldestEntry(Map.Entry&lt;K, V&gt;) : boolean" num="20" count="4" type="method"/>
            <line num="22" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(K) : V" num="27" count="4" type="method"/>
            <line num="28" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="put(K,V) : void" num="31" count="4" type="method"/>
            <line num="32" count="4" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/datastructure/ListUtils.java" name="ListUtils.java">
            <metrics coveredelements="46" coveredconditionals="10" complexity="11" loc="87" coveredmethods="4" methods="5" elements="48" classes="1" ncloc="59" statements="33" conditionals="10" coveredstatements="32"/>
            <class name="ListUtils">
               <metrics coveredelements="46" coveredconditionals="10" complexity="11" coveredmethods="4" methods="5" elements="48" statements="33" conditionals="10" coveredstatements="32"/>
            </class>
            <line complexity="1" visibility="private" signature="ListUtils()" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="merge(List&lt;K&gt;,List&lt;K&gt;) : List&lt;K&gt;" num="23" count="53" type="method"/>
            <line num="25" count="53" type="stmt"/>
            <line num="26" count="51" type="stmt"/>
            <line num="28" count="50" type="stmt"/>
            <line num="30" count="50" type="stmt"/>
            <line num="31" count="50" type="stmt"/>
            <line num="33" count="50" type="stmt"/>
            <line falsecount="47" truecount="145" num="33" type="cond"/>
            <line num="34" count="144" type="stmt"/>
            <line num="35" count="145" type="stmt"/>
            <line num="37" count="145" type="stmt"/>
            <line num="38" count="145" type="stmt"/>
            <line falsecount="68" truecount="77" num="38" type="cond"/>
            <line num="39" count="77" type="stmt"/>
            <line num="40" count="77" type="stmt"/>
            <line num="42" count="68" type="stmt"/>
            <line num="43" count="68" type="stmt"/>
            <line num="47" count="144" type="stmt"/>
            <line num="48" count="142" type="stmt"/>
            <line num="51" count="47" type="stmt"/>
            <line num="52" count="46" type="stmt"/>
            <line num="54" count="45" type="stmt"/>
            <line complexity="2" visibility="private" signature="fillRemainder(List&lt;K&gt;,List&lt;K&gt;,int) : void" num="57" count="93" type="method"/>
            <line num="58" count="93" type="stmt"/>
            <line falsecount="91" truecount="84" num="58" type="cond"/>
            <line num="59" count="84" type="stmt"/>
            <line num="60" count="84" type="stmt"/>
            <line num="61" count="82" type="stmt"/>
            <line complexity="2" visibility="private" signature="checkConsistency(List&lt;K&gt;,K) : void" num="65" count="227" type="method"/>
            <line num="66" count="227" type="stmt"/>
            <line falsecount="49" truecount="180" num="66" type="cond"/>
            <line num="67" count="179" type="stmt"/>
            <line num="68" count="180" type="stmt"/>
            <line complexity="2" visibility="public" signature="mergeSort(List&lt;K&gt;) : List&lt;K&gt;" num="76" count="72" type="method"/>
            <line num="77" count="72" type="stmt"/>
            <line falsecount="33" truecount="39" num="77" type="cond"/>
            <line num="78" count="39" type="stmt"/>
            <line num="80" count="33" type="stmt"/>
            <line num="81" count="33" type="stmt"/>
            <line num="82" count="33" type="stmt"/>
            <line num="83" count="33" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/datastructure/Merger.java" name="Merger.java">
            <metrics coveredelements="74" coveredconditionals="10" complexity="33" loc="248" coveredmethods="15" methods="23" elements="102" classes="3" ncloc="176" statements="65" conditionals="14" coveredstatements="49"/>
            <class name="Merger">
               <metrics coveredelements="46" coveredconditionals="10" complexity="22" coveredmethods="4" methods="12" elements="74" statements="48" conditionals="14" coveredstatements="32"/>
            </class>
            <class name="Merger.SegmentedPriorityQueue">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="Merger.Segment">
               <metrics coveredelements="24" coveredconditionals="0" complexity="9" coveredmethods="9" methods="9" elements="24" statements="15" conditionals="0" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="private" signature="Merger(Class&lt;M&gt;,boolean,File,List&lt;File&gt;)" num="34" count="1" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="11" visibility="private" signature="mergeFiles() : void" num="47" count="1" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line falsecount="1" truecount="2" num="70" type="cond"/>
            <line num="71" count="2" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line num="73" count="2" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line falsecount="1" truecount="16" num="80" type="cond"/>
            <line num="82" count="16" type="stmt"/>
            <line num="83" count="16" type="stmt"/>
            <line falsecount="16" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="16" type="stmt"/>
            <line falsecount="16" truecount="0" num="86" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="16" type="stmt"/>
            <line num="92" count="16" type="stmt"/>
            <line falsecount="2" truecount="14" num="92" type="cond"/>
            <line num="93" count="14" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line num="102" count="16" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="105" type="cond"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="SegmentedPriorityQueue(int)" num="115" count="1" type="method"/>
            <line num="116" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="lessThan(Object,Object) : boolean" num="119" count="15" type="method"/>
            <line num="122" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="Segment(File)" num="133" count="2" type="method"/>
            <line num="134" count="2" type="stmt"/>
            <line num="136" count="2" type="stmt"/>
            <line num="138" count="2" type="stmt"/>
            <line num="140" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBytes() : byte[]" num="143" count="46" type="method"/>
            <line num="144" count="46" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOffset() : int" num="149" count="46" type="method"/>
            <line num="150" count="46" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLength() : int" num="153" count="46" type="method"/>
            <line num="154" count="46" type="stmt"/>
            <line complexity="1" visibility="public" signature="getItems() : int" num="157" count="2" type="method"/>
            <line num="158" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="161" count="16" type="method"/>
            <line num="164" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : void" num="168" count="14" type="method"/>
            <line num="169" count="14" type="stmt"/>
            <line num="170" count="14" type="stmt"/>
            <line num="171" count="14" type="stmt"/>
            <line num="172" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="compareTo(Segment) : int" num="175" count="15" type="method"/>
            <line num="177" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="close() : void" num="181" count="2" type="method"/>
            <line num="183" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="mergeIntermediate(Class&lt;M&gt;,String,String) : void" num="192" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mergeIntermediate(Class&lt;M&gt;,File,File) : void" num="197" count="0" type="method"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mergeIntermediate(Class&lt;M&gt;,File,List&lt;File&gt;) : void" num="202" count="0" type="method"/>
            <line num="204" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mergeIntermediate(Class&lt;M&gt;,String,List&lt;String&gt;) : void" num="207" count="0" type="method"/>
            <line num="210" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="merge(Class&lt;M&gt;,String,String) : void" num="213" count="0" type="method"/>
            <line num="215" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="merge(Class&lt;M&gt;,String,List&lt;String&gt;) : void" num="218" count="0" type="method"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="merge(Class&lt;M&gt;,File,File) : void" num="224" count="1" type="method"/>
            <line num="226" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="merge(Class&lt;M&gt;,File,List&lt;File&gt;) : void" num="229" count="0" type="method"/>
            <line num="231" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="merge(Class&lt;M&gt;,boolean,File,List&lt;File&gt;) : void" num="234" count="1" type="method"/>
            <line num="237" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="toFiles(List&lt;String&gt;) : List&lt;File&gt;" num="240" count="0" type="method"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/datastructure/Permutations.java" name="Permutations.java">
            <metrics coveredelements="41" coveredconditionals="14" complexity="11" loc="60" coveredmethods="4" methods="4" elements="41" classes="1" ncloc="45" statements="23" conditionals="14" coveredstatements="23"/>
            <class name="Permutations">
               <metrics coveredelements="41" coveredconditionals="14" complexity="11" coveredmethods="4" methods="4" elements="41" statements="23" conditionals="14" coveredstatements="23"/>
            </class>
            <line complexity="1" visibility="public" signature="Permutations(T[])" num="12" count="4" type="method"/>
            <line num="13" count="4" type="stmt"/>
            <line num="14" count="4" type="stmt"/>
            <line complexity="7" visibility="public" signature="nextPermutation() : T[]" num="17" count="23" type="method"/>
            <line num="18" count="23" type="stmt"/>
            <line falsecount="19" truecount="4" num="18" type="cond"/>
            <line num="19" count="4" type="stmt"/>
            <line num="20" count="4" type="stmt"/>
            <line num="23" count="19" type="stmt"/>
            <line num="24" count="19" type="stmt"/>
            <line falsecount="18" truecount="31" num="24" type="cond"/>
            <line num="25" count="31" type="stmt"/>
            <line falsecount="17" truecount="13" num="25" type="cond"/>
            <line num="26" count="13" type="stmt"/>
            <line num="30" count="18" type="stmt"/>
            <line falsecount="7" truecount="11" num="30" type="cond"/>
            <line num="31" count="11" type="stmt"/>
            <line num="32" count="11" type="stmt"/>
            <line falsecount="11" truecount="32" num="32" type="cond"/>
            <line num="33" count="32" type="stmt"/>
            <line falsecount="15" truecount="17" num="33" type="cond"/>
            <line num="34" count="17" type="stmt"/>
            <line num="38" count="11" type="stmt"/>
            <line num="40" count="11" type="stmt"/>
            <line num="42" count="11" type="stmt"/>
            <line num="45" count="8" type="stmt"/>
            <line complexity="2" visibility="private" signature="reverse(int) : void" num="48" count="11" type="method"/>
            <line num="49" count="11" type="stmt"/>
            <line num="50" count="11" type="stmt"/>
            <line num="51" count="11" type="stmt"/>
            <line falsecount="11" truecount="4" num="51" type="cond"/>
            <line num="52" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="end() : T[]" num="56" count="8" type="method"/>
            <line num="57" count="8" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/datastructure/SingleLinkedList.java" name="SingleLinkedList.java">
            <metrics coveredelements="84" coveredconditionals="18" complexity="23" loc="162" coveredmethods="12" methods="13" elements="92" classes="3" ncloc="124" statements="59" conditionals="20" coveredstatements="54"/>
            <class name="SingleLinkedList">
               <metrics coveredelements="66" coveredconditionals="14" complexity="18" coveredmethods="9" methods="10" elements="74" statements="48" conditionals="16" coveredstatements="43"/>
            </class>
            <class name="SingleLinkedList.DefaultIterator">
               <metrics coveredelements="11" coveredconditionals="4" complexity="3" coveredmethods="1" methods="1" elements="11" statements="6" conditionals="4" coveredstatements="6"/>
            </class>
            <class name="SingleLinkedList.Entry">
               <metrics coveredelements="7" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="7" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="SingleLinkedList()" num="22" count="3" type="method"/>
            <line complexity="1" visibility="public" signature="SingleLinkedList(Collection&lt;? extends T&gt;)" num="25" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="add(T) : boolean" num="29" count="40" type="method"/>
            <line num="31" count="40" type="stmt"/>
            <line num="32" count="39" type="stmt"/>
            <line num="33" count="40" type="stmt"/>
            <line num="34" count="40" type="stmt"/>
            <line falsecount="37" truecount="3" num="34" type="cond"/>
            <line num="35" count="3" type="stmt"/>
            <line num="37" count="37" type="stmt"/>
            <line num="38" count="40" type="stmt"/>
            <line num="39" count="40" type="stmt"/>
            <line complexity="4" visibility="public" signature="add(int,T) : void" num="42" count="3" type="method"/>
            <line num="44" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="44" type="cond"/>
            <line num="46" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="46" type="cond"/>
            <line num="47" count="0" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="66" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(int,T) : T" num="69" count="1" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="remove(int) : T" num="77" count="3" type="method"/>
            <line num="80" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="80" type="cond"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="86" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="89" type="cond"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;T&gt;" num="101" count="4" type="method"/>
            <line num="103" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : T" num="106" count="11" type="method"/>
            <line num="108" count="11" type="stmt"/>
            <line complexity="3" visibility="public" signature="seek(int) : Entry" num="111" count="16" type="method"/>
            <line num="112" count="16" type="stmt"/>
            <line falsecount="14" truecount="2" num="112" type="cond"/>
            <line num="113" count="2" type="stmt"/>
            <line num="114" count="14" type="stmt"/>
            <line num="115" count="14" type="stmt"/>
            <line falsecount="14" truecount="70" num="115" type="cond"/>
            <line num="116" count="70" type="stmt"/>
            <line num="118" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="121" count="3" type="method"/>
            <line num="123" count="3" type="stmt"/>
            <line complexity="3" visibility="protected" signature="computeNext() : T" num="130" count="51" type="method"/>
            <line num="132" count="51" type="stmt"/>
            <line falsecount="47" truecount="4" num="132" type="cond"/>
            <line num="133" count="4" type="stmt"/>
            <line num="135" count="47" type="stmt"/>
            <line num="137" count="51" type="stmt"/>
            <line falsecount="46" truecount="4" num="137" type="cond"/>
            <line num="138" count="4" type="stmt"/>
            <line num="140" count="45" type="stmt"/>
            <line complexity="1" visibility="public" signature="Entry(T)" num="149" count="40" type="method"/>
            <line num="150" count="39" type="stmt"/>
            <line num="151" count="39" type="stmt"/>
            <line complexity="1" visibility="public" signature="Entry(T,Entry)" num="154" count="3" type="method"/>
            <line num="155" count="3" type="stmt"/>
            <line num="156" count="3" type="stmt"/>
            <line num="157" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/datastructure/SortedFile.java" name="SortedFile.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="18" loc="253" coveredmethods="0" methods="10" elements="87" classes="1" ncloc="147" statements="65" conditionals="12" coveredstatements="0"/>
            <class name="SortedFile">
               <metrics coveredelements="0" coveredconditionals="0" complexity="18" coveredmethods="0" methods="10" elements="87" statements="65" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SortedFile(String,String,int,Class&lt;M&gt;)" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SortedFile(String,String,int,Class&lt;M&gt;,boolean)" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="SortedFile(String,String,int,Class&lt;M&gt;,boolean,boolean)" num="117" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="collect(M) : void" num="146" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="151" type="cond"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="sortAndSpill(int) : void" num="166" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="177" type="cond"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compare(int,int) : int" num="192" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="swap(int,int) : void" num="209" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="close() : void" num="217" count="0" type="method"/>
            <line num="220" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="220" type="cond"/>
            <line num="221" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="223" type="cond"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="225" type="cond"/>
            <line num="227" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitFile(Path,BasicFileAttributes) : FileVisitResult" num="232" count="0" type="method"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="postVisitDirectory(Path,IOException) : FileVisitResult" num="239" count="0" type="method"/>
            <line num="242" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="242" type="cond"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/datastructure/StackMap.java" name="StackMap.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="91" coveredmethods="0" methods="8" elements="27" classes="2" ncloc="52" statements="17" conditionals="2" coveredstatements="0"/>
            <class name="StackMap">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="4" elements="17" statements="11" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="StackMap.StackMapEntry">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="StackMapEntry(KEY,VALUE)" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKey() : KEY" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : VALUE" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(VALUE) : VALUE" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(K) : V" num="56" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="put(K,V) : V" num="64" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="peek() : Entry&lt;K, V&gt;" num="76" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="pop() : Entry&lt;K, V&gt;" num="85" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/datastructure/StringPool.java" name="StringPool.java">
            <metrics coveredelements="12" coveredconditionals="1" complexity="6" loc="55" coveredmethods="3" methods="4" elements="18" classes="1" ncloc="27" statements="10" conditionals="4" coveredstatements="8"/>
            <class name="StringPool">
               <metrics coveredelements="12" coveredconditionals="1" complexity="6" coveredmethods="3" methods="4" elements="18" statements="10" conditionals="4" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="private" signature="StringPool(Map&lt;String, String&gt;)" num="17" count="1" type="method"/>
            <line num="18" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="pool(String) : String" num="28" count="2" type="method"/>
            <line num="29" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="29" type="cond"/>
            <line num="30" count="0" type="stmt"/>
            <line num="33" count="2" type="stmt"/>
            <line num="34" count="2" type="stmt"/>
            <line falsecount="0" truecount="0" num="34" type="cond"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPool() : StringPool" num="44" count="1" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSynchronizedPool() : StringPool" num="51" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/datastructure/TextLineInputProvider.java" name="TextLineInputProvider.java">
            <metrics coveredelements="15" coveredconditionals="2" complexity="8" loc="60" coveredmethods="3" methods="5" elements="22" classes="1" ncloc="46" statements="15" conditionals="2" coveredstatements="10"/>
            <class name="TextLineInputProvider">
               <metrics coveredelements="15" coveredconditionals="2" complexity="8" coveredmethods="3" methods="5" elements="22" statements="15" conditionals="2" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="TextLineInputProvider(String)" num="21" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="TextLineInputProvider(URI)" num="25" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="TextLineInputProvider(Path)" num="29" count="1" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="iterate() : Iterable&lt;String&gt;" num="33" count="1" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="3" visibility="protected" signature="computeNext() : String" num="40" count="3" type="method"/>
            <line num="42" count="3" type="stmt"/>
            <line num="43" count="3" type="stmt"/>
            <line num="44" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="44" type="cond"/>
            <line num="45" count="2" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/datastructure/ArrayIteratorTest.java" name="ArrayIteratorTest.java">
            <metrics coveredelements="10" coveredconditionals="2" complexity="2" loc="26" coveredmethods="1" methods="1" elements="10" classes="1" ncloc="17" statements="7" conditionals="2" coveredstatements="7"/>
            <class name="ArrayIteratorTest">
               <metrics coveredelements="10" complexity="2" methods="1" testruns="1" statements="7" coveredconditionals="2" coveredmethods="1" elements="10" testfailures="0" testduration="0.006" conditionals="2" coveredstatements="7" testpasses="1"/>
            </class>
            <line complexity="2" visibility="public" signature="testArrayIterator() : void" num="10" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="13" count="1" type="stmt"/>
            <line num="15" count="1" type="stmt"/>
            <line num="17" count="1" type="stmt"/>
            <line falsecount="1" truecount="6" num="17" type="cond"/>
            <line num="18" count="6" type="stmt"/>
            <line num="19" count="6" type="stmt"/>
            <line num="20" count="6" type="stmt"/>
            <line num="21" count="6" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/datastructure/ArrayJoinerTest.java" name="ArrayJoinerTest.java">
            <metrics coveredelements="39" coveredconditionals="0" complexity="13" loc="95" coveredmethods="13" methods="13" elements="39" classes="1" ncloc="77" statements="26" conditionals="0" coveredstatements="26"/>
            <class name="ArrayJoinerTest">
               <metrics coveredelements="39" complexity="13" methods="13" testruns="1" statements="26" coveredconditionals="0" coveredmethods="13" elements="39" testfailures="0" testduration="0.012" conditionals="0" coveredstatements="26" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testIntJoin() : void" num="17" count="1" type="method"/>
            <line num="19" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCharJoin() : void" num="23" count="1" type="method"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testByteJoin() : void" num="29" count="1" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testShortJoin() : void" num="35" count="1" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLongJoin() : void" num="41" count="1" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFloatJoin() : void" num="47" count="1" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDoubleJoin() : void" num="53" count="1" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringJoin() : void" num="59" count="1" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNullJoin() : void" num="65" count="1" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNullElements() : void" num="71" count="1" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testZeroElements() : void" num="77" count="1" type="method"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSingleElement() : void" num="83" count="1" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTwoElement() : void" num="89" testsuccess="true" count="1" testduration="0.012" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/datastructure/ArrayUtilsTest.java" name="ArrayUtilsTest.java">
            <metrics coveredelements="396" coveredconditionals="50" complexity="81" loc="602" coveredmethods="54" methods="54" elements="398" classes="1" ncloc="490" statements="294" conditionals="50" coveredstatements="292"/>
            <class name="ArrayUtilsTest">
               <metrics coveredelements="396" complexity="81" methods="54" testruns="16" statements="294" coveredconditionals="50" coveredmethods="54" elements="398" testfailures="0" testduration="0.07800000000000001" conditionals="50" coveredstatements="292" testpasses="16"/>
            </class>
            <line complexity="1" visibility="public" signature="testAccessError() : void" num="12" count="1" type="method"/>
            <line num="14" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFind() : void" num="17" count="1" type="method"/>
            <line num="19" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFindInt() : void" num="26" count="1" type="method"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFindLong() : void" num="35" count="1" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testConcat() : void" num="44" count="1" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line falsecount="1" truecount="11" num="49" type="cond"/>
            <line num="50" count="11" type="stmt"/>
            <line complexity="2" visibility="public" signature="testConcatString() : void" num="54" count="1" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line falsecount="1" truecount="11" num="59" type="cond"/>
            <line num="60" count="11" type="stmt"/>
            <line num="61" count="11" type="stmt"/>
            <line complexity="2" visibility="public" signature="testCopyInt() : void" num="65" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="69" type="cond"/>
            <line num="70" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="testCopyLong() : void" num="74" count="1" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="78" type="cond"/>
            <line num="79" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="testCopyDouble() : void" num="83" testsuccess="true" count="1" testduration="0.021" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="87" type="cond"/>
            <line num="88" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="testCopyString() : void" num="92" count="1" type="method"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="96" type="cond"/>
            <line num="97" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSwapInt() : void" num="101" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSwapLong() : void" num="109" count="1" type="method"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSwapDouble() : void" num="117" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSwapBoolean() : void" num="125" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSwapString() : void" num="133" count="1" type="method"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPartition() : void" num="141" testsuccess="true" count="1" testduration="0.019" type="method"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testQuickSelect() : void" num="150" count="1" type="method"/>
            <line num="153" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMedianOfMedians() : void" num="191" count="1" type="method"/>
            <line num="193" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="testFromUpToInt() : void" num="206" count="1" type="method"/>
            <line num="208" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line falsecount="1" truecount="100" num="209" type="cond"/>
            <line num="210" count="100" type="stmt"/>
            <line num="213" count="1" type="stmt"/>
            <line num="214" count="1" type="stmt"/>
            <line num="215" count="1" type="stmt"/>
            <line falsecount="1" truecount="50" num="215" type="cond"/>
            <line num="216" count="50" type="stmt"/>
            <line complexity="3" visibility="public" signature="testFromUpToLong() : void" num="220" count="1" type="method"/>
            <line num="222" count="1" type="stmt"/>
            <line num="223" count="1" type="stmt"/>
            <line falsecount="1" truecount="100" num="223" type="cond"/>
            <line num="224" count="100" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line num="228" count="1" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line falsecount="1" truecount="50" num="229" type="cond"/>
            <line num="230" count="50" type="stmt"/>
            <line complexity="3" visibility="public" signature="testFromUpToDouble() : void" num="234" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="236" count="1" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line falsecount="1" truecount="100" num="237" type="cond"/>
            <line num="238" count="100" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line num="242" count="1" type="stmt"/>
            <line num="243" count="1" type="stmt"/>
            <line falsecount="1" truecount="50" num="243" type="cond"/>
            <line num="244" count="50" type="stmt"/>
            <line complexity="2" visibility="public" signature="testRadixSort() : void" num="248" count="1" type="method"/>
            <line num="250" count="1" type="stmt"/>
            <line num="251" count="1" type="stmt"/>
            <line num="253" count="1" type="stmt"/>
            <line falsecount="1" truecount="99" num="253" type="cond"/>
            <line num="254" count="99" type="stmt"/>
            <line complexity="2" visibility="public" signature="testCountingSort() : void" num="259" count="1" type="method"/>
            <line num="261" count="1" type="stmt"/>
            <line num="262" count="1" type="stmt"/>
            <line num="264" count="1" type="stmt"/>
            <line falsecount="1" truecount="99" num="264" type="cond"/>
            <line num="265" count="99" type="stmt"/>
            <line complexity="2" visibility="public" signature="testQuickSort() : void" num="269" count="1" type="method"/>
            <line num="271" count="1" type="stmt"/>
            <line num="272" count="1" type="stmt"/>
            <line num="274" count="1" type="stmt"/>
            <line falsecount="1" truecount="99" num="274" type="cond"/>
            <line num="275" count="99" type="stmt"/>
            <line complexity="2" visibility="public" signature="testQuickSortLong() : void" num="279" count="1" type="method"/>
            <line num="281" count="1" type="stmt"/>
            <line num="282" count="1" type="stmt"/>
            <line num="284" count="1" type="stmt"/>
            <line falsecount="1" truecount="99" num="284" type="cond"/>
            <line num="285" count="99" type="stmt"/>
            <line complexity="2" visibility="public" signature="testQuickSortDouble() : void" num="289" count="1" type="method"/>
            <line num="291" count="1" type="stmt"/>
            <line num="292" count="1" type="stmt"/>
            <line num="294" count="1" type="stmt"/>
            <line falsecount="1" truecount="99" num="294" type="cond"/>
            <line num="295" count="99" type="stmt"/>
            <line complexity="2" visibility="public" signature="testQuickSortStrings() : void" num="299" testsuccess="true" count="1" testduration="0.009" type="method"/>
            <line num="301" count="1" type="stmt"/>
            <line num="303" count="1" type="stmt"/>
            <line num="304" count="1" type="stmt"/>
            <line falsecount="1" truecount="8" num="304" type="cond"/>
            <line num="305" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMultiQuickSort() : void" num="309" count="1" type="method"/>
            <line num="311" count="1" type="stmt"/>
            <line num="312" count="1" type="stmt"/>
            <line num="313" count="1" type="stmt"/>
            <line num="314" count="1" type="stmt"/>
            <line num="316" count="1" type="stmt"/>
            <line num="318" count="1" type="stmt"/>
            <line falsecount="1" truecount="4" num="318" type="cond"/>
            <line num="319" count="4" type="stmt"/>
            <line num="320" count="4" type="stmt"/>
            <line num="327" count="1" type="stmt"/>
            <line num="330" count="1" type="stmt"/>
            <line num="333" count="1" type="stmt"/>
            <line num="336" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDeduplicate() : void" num="339" count="1" type="method"/>
            <line num="341" count="1" type="stmt"/>
            <line num="342" count="1" type="stmt"/>
            <line num="344" count="1" type="stmt"/>
            <line num="345" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnion() : void" num="348" count="1" type="method"/>
            <line num="350" count="1" type="stmt"/>
            <line num="351" count="1" type="stmt"/>
            <line num="353" count="1" type="stmt"/>
            <line num="355" count="1" type="stmt"/>
            <line num="356" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIntersection() : void" num="359" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="361" count="1" type="stmt"/>
            <line num="362" count="1" type="stmt"/>
            <line num="364" count="1" type="stmt"/>
            <line num="365" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIntersectionUnsorted() : void" num="368" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="370" count="1" type="stmt"/>
            <line num="371" count="1" type="stmt"/>
            <line num="373" count="1" type="stmt"/>
            <line num="374" count="1" type="stmt"/>
            <line num="375" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMissingNumber() : void" num="378" count="1" type="method"/>
            <line num="380" count="1" type="stmt"/>
            <line num="382" count="1" type="stmt"/>
            <line num="383" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMinInt() : void" num="386" count="1" type="method"/>
            <line num="388" count="1" type="stmt"/>
            <line num="389" count="1" type="stmt"/>
            <line num="390" count="1" type="stmt"/>
            <line num="391" count="1" type="stmt"/>
            <line num="392" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMinLong() : void" num="395" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="397" count="1" type="stmt"/>
            <line num="398" count="1" type="stmt"/>
            <line num="399" count="1" type="stmt"/>
            <line num="400" count="1" type="stmt"/>
            <line num="401" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMinDouble() : void" num="404" count="1" type="method"/>
            <line num="406" count="1" type="stmt"/>
            <line num="407" count="1" type="stmt"/>
            <line num="408" count="1" type="stmt"/>
            <line num="409" count="1" type="stmt"/>
            <line num="410" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMaxInt() : void" num="413" count="1" type="method"/>
            <line num="415" count="1" type="stmt"/>
            <line num="416" count="1" type="stmt"/>
            <line num="417" count="1" type="stmt"/>
            <line num="418" count="1" type="stmt"/>
            <line num="419" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMaxLong() : void" num="422" count="1" type="method"/>
            <line num="424" count="1" type="stmt"/>
            <line num="425" count="1" type="stmt"/>
            <line num="426" count="1" type="stmt"/>
            <line num="427" count="1" type="stmt"/>
            <line num="428" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMaxDouble() : void" num="431" count="1" type="method"/>
            <line num="433" count="1" type="stmt"/>
            <line num="434" count="1" type="stmt"/>
            <line num="435" count="1" type="stmt"/>
            <line num="436" count="1" type="stmt"/>
            <line num="437" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSubArray() : void" num="440" testsuccess="true" count="1" testduration="0.02" type="method"/>
            <line num="442" count="1" type="stmt"/>
            <line num="444" count="1" type="stmt"/>
            <line num="445" count="1" type="stmt"/>
            <line num="447" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="447" type="cond"/>
            <line num="448" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="testShuffle() : void" num="453" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="455" count="1" type="stmt"/>
            <line num="456" count="1" type="stmt"/>
            <line num="459" count="1" type="stmt"/>
            <line num="460" count="1" type="stmt"/>
            <line num="462" count="1" type="stmt"/>
            <line falsecount="1" truecount="4" num="462" type="cond"/>
            <line num="463" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMerge() : void" num="468" count="1" type="method"/>
            <line num="470" count="1" type="stmt"/>
            <line num="471" count="1" type="stmt"/>
            <line num="472" count="1" type="stmt"/>
            <line num="473" count="1" type="stmt"/>
            <line num="474" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInplaceMerge() : void" num="477" count="1" type="method"/>
            <line num="479" count="1" type="stmt"/>
            <line num="480" count="1" type="stmt"/>
            <line num="481" count="1" type="stmt"/>
            <line num="482" count="1" type="stmt"/>
            <line num="483" count="1" type="stmt"/>
            <line num="484" count="1" type="stmt"/>
            <line num="486" count="1" type="stmt"/>
            <line num="487" count="1" type="stmt"/>
            <line num="488" count="1" type="stmt"/>
            <line num="489" count="1" type="stmt"/>
            <line num="491" count="1" type="stmt"/>
            <line num="492" count="1" type="stmt"/>
            <line num="493" count="1" type="stmt"/>
            <line num="494" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIsValidIndexInt() : void" num="498" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="500" count="1" type="stmt"/>
            <line num="501" count="1" type="stmt"/>
            <line num="502" count="1" type="stmt"/>
            <line num="503" count="1" type="stmt"/>
            <line num="504" count="1" type="stmt"/>
            <line num="505" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIsValidIndexLong() : void" num="508" count="1" type="method"/>
            <line num="510" count="1" type="stmt"/>
            <line num="511" count="1" type="stmt"/>
            <line num="512" count="1" type="stmt"/>
            <line num="513" count="1" type="stmt"/>
            <line num="514" count="1" type="stmt"/>
            <line num="515" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIsValidIndexFloat() : void" num="518" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="520" count="1" type="stmt"/>
            <line num="521" count="1" type="stmt"/>
            <line num="522" count="1" type="stmt"/>
            <line num="523" count="1" type="stmt"/>
            <line num="524" count="1" type="stmt"/>
            <line num="525" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIsValidIndexDouble() : void" num="528" count="1" type="method"/>
            <line num="530" count="1" type="stmt"/>
            <line num="531" count="1" type="stmt"/>
            <line num="532" count="1" type="stmt"/>
            <line num="533" count="1" type="stmt"/>
            <line num="534" count="1" type="stmt"/>
            <line num="535" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIsValidIndexByte() : void" num="538" count="1" type="method"/>
            <line num="540" count="1" type="stmt"/>
            <line num="541" count="1" type="stmt"/>
            <line num="542" count="1" type="stmt"/>
            <line num="543" count="1" type="stmt"/>
            <line num="544" count="1" type="stmt"/>
            <line num="545" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIsValidIndexBoolean() : void" num="548" count="1" type="method"/>
            <line num="550" count="1" type="stmt"/>
            <line num="551" count="1" type="stmt"/>
            <line num="552" count="1" type="stmt"/>
            <line num="553" count="1" type="stmt"/>
            <line num="554" count="1" type="stmt"/>
            <line num="555" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIsValidIndexString() : void" num="558" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="560" count="1" type="stmt"/>
            <line num="561" count="1" type="stmt"/>
            <line num="562" count="1" type="stmt"/>
            <line num="563" count="1" type="stmt"/>
            <line num="564" count="1" type="stmt"/>
            <line num="565" count="1" type="stmt"/>
            <line complexity="2" visibility="package" signature="getRandomInputLongs(int) : long[]" num="568" count="1" type="method"/>
            <line num="569" count="1" type="stmt"/>
            <line num="570" count="1" type="stmt"/>
            <line num="571" count="1" type="stmt"/>
            <line falsecount="1" truecount="100" num="571" type="cond"/>
            <line num="572" count="100" type="stmt"/>
            <line num="574" count="1" type="stmt"/>
            <line complexity="2" visibility="package" signature="getRandomInputDoubles(int) : double[]" num="577" count="1" type="method"/>
            <line num="578" count="1" type="stmt"/>
            <line num="579" count="1" type="stmt"/>
            <line num="580" count="1" type="stmt"/>
            <line falsecount="1" truecount="100" num="580" type="cond"/>
            <line num="581" count="100" type="stmt"/>
            <line num="583" count="1" type="stmt"/>
            <line complexity="2" visibility="package" signature="getRandomInput(int,int) : int[]" num="586" count="3" type="method"/>
            <line num="587" count="3" type="stmt"/>
            <line num="588" count="3" type="stmt"/>
            <line num="589" count="3" type="stmt"/>
            <line falsecount="3" truecount="300" num="589" type="cond"/>
            <line num="590" count="300" type="stmt"/>
            <line num="592" count="3" type="stmt"/>
            <line complexity="2" visibility="package" signature="assertArrayEquals(int[],int[]) : void" num="595" count="9" type="method"/>
            <line num="596" count="9" type="stmt"/>
            <line num="597" count="9" type="stmt"/>
            <line falsecount="9" truecount="47" num="597" type="cond"/>
            <line num="598" count="47" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/datastructure/AsyncBufferedOutputStreamTest.java" name="AsyncBufferedOutputStreamTest.java">
            <metrics coveredelements="117" coveredconditionals="26" complexity="31" loc="162" coveredmethods="4" methods="4" elements="117" classes="1" ncloc="133" statements="87" conditionals="26" coveredstatements="87"/>
            <class name="AsyncBufferedOutputStreamTest">
               <metrics coveredelements="117" complexity="31" methods="4" testruns="1" statements="87" coveredconditionals="26" coveredmethods="4" elements="117" testfailures="0" testduration="0.06" conditionals="26" coveredstatements="87" testpasses="1"/>
            </class>
            <line complexity="6" visibility="public" signature="testHugeWrites() : void" num="17" count="1" type="method"/>
            <line num="19" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line falsecount="1" truecount="525312" num="41" type="cond"/>
            <line num="42" count="525312" type="stmt"/>
            <line complexity="9" visibility="public" signature="testOverflowWrites() : void" num="48" testsuccess="true" count="1" testduration="0.06" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line falsecount="1" truecount="200" num="62" type="cond"/>
            <line num="63" count="200" type="stmt"/>
            <line num="64" count="200" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line falsecount="1" truecount="200" num="71" type="cond"/>
            <line num="72" count="200" type="stmt"/>
            <line num="73" count="200" type="stmt"/>
            <line num="74" count="200" type="stmt"/>
            <line falsecount="200" truecount="6400" num="74" type="cond"/>
            <line num="75" count="6400" type="stmt"/>
            <line num="77" count="200" type="stmt"/>
            <line num="78" count="200" type="stmt"/>
            <line num="79" count="200" type="stmt"/>
            <line falsecount="200" truecount="6400" num="79" type="cond"/>
            <line num="80" count="6400" type="stmt"/>
            <line complexity="9" visibility="public" signature="testWrites() : void" num="87" count="1" type="method"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line falsecount="1" truecount="10000" num="99" type="cond"/>
            <line num="100" count="10000" type="stmt"/>
            <line num="101" count="10000" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line falsecount="1" truecount="10000" num="108" type="cond"/>
            <line num="109" count="10000" type="stmt"/>
            <line num="110" count="10000" type="stmt"/>
            <line num="111" count="10000" type="stmt"/>
            <line falsecount="10000" truecount="320000" num="111" type="cond"/>
            <line num="112" count="320000" type="stmt"/>
            <line num="114" count="10000" type="stmt"/>
            <line num="115" count="10000" type="stmt"/>
            <line num="116" count="10000" type="stmt"/>
            <line falsecount="10000" truecount="320000" num="116" type="cond"/>
            <line num="117" count="320000" type="stmt"/>
            <line complexity="7" visibility="public" signature="testRaceWrites() : void" num="124" count="1" type="method"/>
            <line num="126" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line falsecount="1" truecount="2500" num="136" type="cond"/>
            <line num="137" count="2500" type="stmt"/>
            <line num="138" count="2500" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line falsecount="1" truecount="2500" num="148" type="cond"/>
            <line num="149" count="2500" type="stmt"/>
            <line num="150" count="2500" type="stmt"/>
            <line num="151" count="2500" type="stmt"/>
            <line falsecount="2500" truecount="80000" num="151" type="cond"/>
            <line num="152" count="80000" type="stmt"/>
            <line num="153" count="2500" type="stmt"/>
            <line num="154" count="2500" type="stmt"/>
            <line num="155" count="2500" type="stmt"/>
            <line falsecount="2500" truecount="80000" num="155" type="cond"/>
            <line num="156" count="80000" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/datastructure/CollectionInputProviderTest.java" name="CollectionInputProviderTest.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="1" loc="24" coveredmethods="1" methods="1" elements="9" classes="1" ncloc="18" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="CollectionInputProviderTest">
               <metrics coveredelements="9" complexity="1" methods="1" testruns="1" statements="8" coveredconditionals="0" coveredmethods="1" elements="9" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="8" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testCollectionInputProvider() : void" num="11" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="13" count="1" type="stmt"/>
            <line num="14" count="1" type="stmt"/>
            <line num="15" count="1" type="stmt"/>
            <line num="16" count="1" type="stmt"/>
            <line num="17" count="1" type="stmt"/>
            <line num="18" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
            <line num="20" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/datastructure/DiskListTest.java" name="DiskListTest.java">
            <metrics coveredelements="44" coveredconditionals="4" complexity="8" loc="85" coveredmethods="3" methods="3" elements="47" classes="1" ncloc="69" statements="40" conditionals="4" coveredstatements="37"/>
            <class name="DiskListTest">
               <metrics coveredelements="44" complexity="8" methods="3" testruns="1" statements="40" coveredconditionals="4" coveredmethods="3" elements="47" testfailures="0" testduration="8.529" conditionals="4" coveredstatements="37" testpasses="1"/>
            </class>
            <line complexity="4" visibility="public" signature="testReadWrite() : void" num="15" testsuccess="true" count="1" testduration="8.529" type="method"/>
            <line num="17" count="1" type="stmt"/>
            <line num="18" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line falsecount="1" truecount="5242880" num="24" type="cond"/>
            <line num="25" count="5242880" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testReadWriteIterator() : void" num="46" count="1" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="5242880" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="fill(DiskList&lt;IntWritable&gt;,long) : IntWritable" num="71" count="2" type="method"/>
            <line num="73" count="2" type="stmt"/>
            <line num="74" count="2" type="stmt"/>
            <line falsecount="2" truecount="9460025" num="74" type="cond"/>
            <line num="75" count="9466236" type="stmt"/>
            <line num="76" count="9484997" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="79" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/datastructure/DistanceResultTest.java" name="DistanceResultTest.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="1" loc="17" coveredmethods="1" methods="1" elements="5" classes="1" ncloc="12" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="DistanceResultTest">
               <metrics coveredelements="5" complexity="1" methods="1" testruns="1" statements="4" coveredconditionals="0" coveredmethods="1" elements="5" testfailures="0" testduration="0.026" conditionals="0" coveredstatements="4" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="9" testsuccess="true" count="1" testduration="0.026" type="method"/>
            <line num="11" count="1" type="stmt"/>
            <line num="12" count="1" type="stmt"/>
            <line num="13" count="1" type="stmt"/>
            <line num="14" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/datastructure/HuffmanTreeTest.java" name="HuffmanTreeTest.java">
            <metrics coveredelements="45" coveredconditionals="7" complexity="8" loc="88" coveredmethods="4" methods="4" elements="47" classes="1" ncloc="68" statements="35" conditionals="8" coveredstatements="34"/>
            <class name="HuffmanTreeTest">
               <metrics coveredelements="45" complexity="8" methods="4" testruns="1" statements="35" coveredconditionals="7" coveredmethods="4" elements="47" testfailures="0" testduration="0.015" conditionals="8" coveredstatements="34" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testInserts() : void" num="18" testsuccess="true" count="1" testduration="0.015" type="method"/>
            <line num="20" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="generateVector(int[]) : SparseBitVector" num="54" count="6" type="method"/>
            <line num="55" count="6" type="stmt"/>
            <line num="57" count="6" type="stmt"/>
            <line falsecount="6" truecount="24" num="57" type="cond"/>
            <line num="58" count="24" type="stmt"/>
            <line falsecount="17" truecount="7" num="58" type="cond"/>
            <line num="59" count="7" type="stmt"/>
            <line num="63" count="6" type="stmt"/>
            <line complexity="3" visibility="public" signature="assertCodeEquals(int[],SparseBitVector) : void" num="66" count="6" type="method"/>
            <line num="67" count="6" type="stmt"/>
            <line num="68" count="6" type="stmt"/>
            <line falsecount="6" truecount="24" num="68" type="cond"/>
            <line num="69" count="24" type="stmt"/>
            <line falsecount="24" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTestSet() : HashMultiset&lt;Integer&gt;" num="77" count="1" type="method"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/datastructure/InvertedIndexTest.java" name="InvertedIndexTest.java">
            <metrics coveredelements="45" coveredconditionals="0" complexity="5" loc="100" coveredmethods="5" methods="5" elements="45" classes="1" ncloc="79" statements="40" conditionals="0" coveredstatements="40"/>
            <class name="InvertedIndexTest">
               <metrics coveredelements="45" complexity="5" methods="5" testruns="1" statements="40" coveredconditionals="0" coveredmethods="5" elements="45" testfailures="0" testduration="0.068" conditionals="0" coveredstatements="40" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testInvertedIndex() : void" num="24" count="1" type="method"/>
            <line num="27" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testVectorInvertedIndex() : void" num="53" testsuccess="true" count="1" testduration="0.068" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBuiltIndex() : InvertedIndex&lt;String, String&gt;" num="77" count="1" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="mapDocument(String) : Set&lt;String&gt;" num="82" count="8" type="method"/>
            <line num="84" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="measure(String,Set&lt;String&gt;,String,Set&lt;String&gt;) : double" num="87" count="15" type="method"/>
            <line num="90" count="15" type="stmt"/>
            <line num="91" count="15" type="stmt"/>
            <line num="93" count="15" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/datastructure/IterablesTest.java" name="IterablesTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="1" loc="23" coveredmethods="1" methods="1" elements="8" classes="1" ncloc="17" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="IterablesTest">
               <metrics coveredelements="8" complexity="1" methods="1" testruns="1" statements="7" coveredconditionals="0" coveredmethods="1" elements="8" testfailures="0" testduration="0.008" conditionals="0" coveredstatements="7" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testFrom() : void" num="11" testsuccess="true" count="1" testduration="0.008" type="method"/>
            <line num="13" count="1" type="stmt"/>
            <line num="14" count="1" type="stmt"/>
            <line num="15" count="1" type="stmt"/>
            <line num="16" count="1" type="stmt"/>
            <line num="18" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
            <line num="20" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/datastructure/LRUCacheTest.java" name="LRUCacheTest.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="1" loc="27" coveredmethods="1" methods="1" elements="10" classes="1" ncloc="18" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="LRUCacheTest">
               <metrics coveredelements="10" complexity="1" methods="1" testruns="1" statements="9" coveredconditionals="0" coveredmethods="1" elements="10" testfailures="0" testduration="0.006" conditionals="0" coveredstatements="9" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testCaching() : void" num="10" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="13" count="1" type="stmt"/>
            <line num="15" count="1" type="stmt"/>
            <line num="16" count="1" type="stmt"/>
            <line num="17" count="1" type="stmt"/>
            <line num="18" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/datastructure/ListUtilsTest.java" name="ListUtilsTest.java">
            <metrics coveredelements="63" coveredconditionals="0" complexity="28" loc="166" coveredmethods="28" methods="28" elements="63" classes="1" ncloc="130" statements="35" conditionals="0" coveredstatements="35"/>
            <class name="ListUtilsTest">
               <metrics coveredelements="63" complexity="28" methods="28" testruns="3" statements="35" coveredconditionals="0" coveredmethods="28" elements="63" testfailures="0" testduration="0.056999999999999995" conditionals="0" coveredstatements="35" testpasses="3"/>
            </class>
            <line complexity="1" visibility="private" signature="assertMergedCorrectly(List&lt;Integer&gt;,List&lt;Integer&gt;) : void" num="18" count="12" type="method"/>
            <line num="20" count="12" type="stmt"/>
            <line num="21" count="12" type="stmt"/>
            <line num="22" count="12" type="stmt"/>
            <line num="24" count="12" type="stmt"/>
            <line num="25" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMergeHappyPath() : void" num="28" count="1" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMergeHappyPathDuplicates() : void" num="33" count="1" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMergeHappyPathDuplicatesSameElement() : void" num="38" count="1" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMergeInterleaved() : void" num="43" count="1" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMergeNegatives() : void" num="48" count="1" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMergeLeftLonger() : void" num="53" count="1" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMergeRightLonger() : void" num="58" count="1" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMergeSingleElements() : void" num="63" testsuccess="true" count="1" testduration="0.022" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMergeSingleElementsReversed() : void" num="68" testsuccess="true" count="1" testduration="0.02" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMergeLeftEmpty() : void" num="73" count="1" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMergeRightEmpty() : void" num="78" count="1" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMergeBothEmpty() : void" num="83" count="1" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMergeConsistency() : void" num="88" count="1" type="method"/>
            <line num="90" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMergeConsistencySingleSwapped() : void" num="93" count="1" type="method"/>
            <line num="95" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMergeConsistencySingleSwappedHungOverRight() : void" num="98" count="1" type="method"/>
            <line num="100" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMergeConsistencySingleSwappedHungOverLeft() : void" num="103" count="1" type="method"/>
            <line num="105" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMergeConsistencySingleSwappedReverse() : void" num="108" count="1" type="method"/>
            <line num="110" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMergeNullLeft() : void" num="113" testsuccess="true" count="1" testduration="0.015" type="method"/>
            <line num="115" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMergeNullRight() : void" num="118" count="1" type="method"/>
            <line num="120" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMergeNullBoth() : void" num="123" count="1" type="method"/>
            <line num="125" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMergeSortHappyPath() : void" num="130" count="1" type="method"/>
            <line num="132" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMergeSortOddAmount() : void" num="135" count="1" type="method"/>
            <line num="137" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMergeSortEvenAmount() : void" num="140" count="1" type="method"/>
            <line num="142" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMergeSortInverse() : void" num="145" count="1" type="method"/>
            <line num="147" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMergeSortNegatives() : void" num="150" count="1" type="method"/>
            <line num="152" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMergeSortSorted() : void" num="155" count="1" type="method"/>
            <line num="157" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertSorted(List&lt;Integer&gt;) : void" num="160" count="6" type="method"/>
            <line num="161" count="6" type="stmt"/>
            <line num="162" count="6" type="stmt"/>
            <line num="163" count="6" type="stmt"/>
            <line num="164" count="6" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/datastructure/MergerTest.java" name="MergerTest.java">
            <metrics coveredelements="32" coveredconditionals="4" complexity="8" loc="68" coveredmethods="2" methods="2" elements="32" classes="1" ncloc="50" statements="26" conditionals="4" coveredstatements="26"/>
            <class name="MergerTest">
               <metrics coveredelements="32" complexity="8" methods="2" testruns="1" statements="26" coveredconditionals="4" coveredmethods="2" elements="32" testfailures="0" testduration="0.332" conditionals="4" coveredstatements="26" testpasses="1"/>
            </class>
            <line complexity="4" visibility="public" signature="testMerging() : void" num="21" testsuccess="true" count="1" testduration="0.332" type="method"/>
            <line num="23" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line falsecount="1" truecount="16" num="42" type="cond"/>
            <line num="43" count="16" type="stmt"/>
            <line num="44" count="16" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="4" visibility="package" signature="write(int[]) : File" num="53" count="2" type="method"/>
            <line num="54" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line falsecount="2" truecount="16" num="58" type="cond"/>
            <line num="60" count="16" type="stmt"/>
            <line num="61" count="16" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/datastructure/PermutationsTest.java" name="PermutationsTest.java">
            <metrics coveredelements="36" coveredconditionals="2" complexity="8" loc="69" coveredmethods="6" methods="6" elements="38" classes="1" ncloc="58" statements="28" conditionals="4" coveredstatements="28"/>
            <class name="PermutationsTest">
               <metrics coveredelements="36" complexity="8" methods="6" testruns="1" statements="28" coveredconditionals="2" coveredmethods="6" elements="38" testfailures="0" testduration="0.023" conditionals="4" coveredstatements="28" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testOneElementPermutation() : void" num="13" count="1" type="method"/>
            <line num="15" count="1" type="stmt"/>
            <line num="16" count="1" type="stmt"/>
            <line num="17" count="1" type="stmt"/>
            <line num="18" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTwoElementPermutation() : void" num="21" count="1" type="method"/>
            <line num="23" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testThreeElementPermutation() : void" num="29" testsuccess="true" count="1" testduration="0.023" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testThreeElementPermutationUnsortedInput() : void" num="38" count="1" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="allPermutations(Permutations&lt;Integer&gt;,int) : List&lt;Integer[]&gt;" num="47" count="4" type="method"/>
            <line num="49" count="4" type="stmt"/>
            <line num="50" count="4" type="stmt"/>
            <line num="51" count="4" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="52" count="15" type="stmt"/>
            <line num="55" count="4" type="stmt"/>
            <line num="56" count="4" type="stmt"/>
            <line num="57" count="4" type="stmt"/>
            <line complexity="2" visibility="private" signature="assertEquals(List&lt;Integer[]&gt;,Integer[]) : void" num="60" count="4" type="method"/>
            <line num="61" count="4" type="stmt"/>
            <line num="62" count="4" type="stmt"/>
            <line falsecount="4" truecount="15" num="62" type="cond"/>
            <line num="63" count="15" type="stmt"/>
            <line num="64" count="15" type="stmt"/>
            <line num="65" count="15" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/datastructure/SingleLinkedListTest.java" name="SingleLinkedListTest.java">
            <metrics coveredelements="49" coveredconditionals="4" complexity="6" loc="85" coveredmethods="4" methods="4" elements="49" classes="1" ncloc="61" statements="41" conditionals="4" coveredstatements="41"/>
            <class name="SingleLinkedListTest">
               <metrics coveredelements="49" complexity="6" methods="4" testruns="1" statements="41" coveredconditionals="4" coveredmethods="4" elements="49" testfailures="0" testduration="0.007" conditionals="4" coveredstatements="41" testpasses="1"/>
            </class>
            <line complexity="2" visibility="public" signature="testInserts() : void" num="9" count="1" type="method"/>
            <line num="11" count="1" type="stmt"/>
            <line num="12" count="1" type="stmt"/>
            <line num="14" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="14" type="cond"/>
            <line num="15" count="10" type="stmt"/>
            <line num="17" count="1" type="stmt"/>
            <line num="18" count="1" type="stmt"/>
            <line num="19" count="10" type="stmt"/>
            <line num="20" count="10" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemoval() : void" num="36" count="1" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="7" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="17" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSet() : void" num="68" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="fill(SingleLinkedList&lt;Integer&gt;) : void" num="80" count="4" type="method"/>
            <line num="81" count="4" type="stmt"/>
            <line falsecount="4" truecount="40" num="81" type="cond"/>
            <line num="82" count="40" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/datastructure/SortedFileTest.java" name="SortedFileTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="103" coveredmethods="0" methods="2" elements="62" classes="1" ncloc="86" statements="50" conditionals="10" coveredstatements="0"/>
            <class name="SortedFileTest">
               <metrics coveredelements="0" complexity="15" methods="2" testruns="1" statements="50" coveredconditionals="0" coveredmethods="0" elements="62" testfailures="1" testduration="0.444" conditionals="10" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="7" visibility="public" signature="testMergedFile() : void" num="23" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="32" type="cond"/>
            <line num="33" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="42" type="cond"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="testSortedFile() : void" num="54" testsuccess="false" count="0" testduration="0.444" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/datastructure/StringPoolTest.java" name="StringPoolTest.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="1" loc="28" coveredmethods="1" methods="1" elements="9" classes="1" ncloc="16" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="StringPoolTest">
               <metrics coveredelements="9" complexity="1" methods="1" testruns="1" statements="8" coveredconditionals="0" coveredmethods="1" elements="9" testfailures="0" testduration="0.029" conditionals="0" coveredstatements="8" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testStringPooling() : void" num="9" testsuccess="true" count="1" testduration="0.029" type="method"/>
            <line num="11" count="1" type="stmt"/>
            <line num="13" count="1" type="stmt"/>
            <line num="14" count="1" type="stmt"/>
            <line num="15" count="1" type="stmt"/>
            <line num="17" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/datastructure/TextLineInputProviderTest.java" name="TextLineInputProviderTest.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="1" loc="33" coveredmethods="1" methods="1" elements="12" classes="1" ncloc="26" statements="11" conditionals="0" coveredstatements="11"/>
            <class name="TextLineInputProviderTest">
               <metrics coveredelements="12" complexity="1" methods="1" testruns="1" statements="11" coveredconditionals="0" coveredmethods="1" elements="12" testfailures="0" testduration="0.021" conditionals="0" coveredstatements="11" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testTextLineInputProvider() : void" num="15" testsuccess="true" count="1" testduration="0.021" type="method"/>
            <line num="17" count="1" type="stmt"/>
            <line num="18" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="2" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
         </file>
      </package>
      <package name="de.jungblut.partition">
         <metrics coveredelements="8" complexity="31" loc="231" methods="20" classes="5" statements="71" coveredconditionals="0" coveredmethods="2" elements="111" ncloc="166" files="4" conditionals="20" coveredstatements="6"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/partition/BlockPartitioner.java" name="BlockPartitioner.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="35" coveredmethods="0" methods="1" elements="19" classes="1" ncloc="24" statements="14" conditionals="4" coveredstatements="0"/>
            <class name="BlockPartitioner">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="1" elements="19" statements="14" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="partition(int,int) : Boundaries" num="13" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
            <line num="17" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
            <line num="20" count="0" type="stmt"/>
            <line num="21" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="23" type="cond"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="28" type="cond"/>
            <line num="29" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/partition/Boundaries.java" name="Boundaries.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="26" loc="141" coveredmethods="1" methods="17" elements="78" classes="2" ncloc="104" statements="45" conditionals="16" coveredstatements="5"/>
            <class name="Boundaries">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="7" elements="33" statements="20" conditionals="6" coveredstatements="0"/>
            </class>
            <class name="Boundaries.Range">
               <metrics coveredelements="6" coveredconditionals="0" complexity="15" coveredmethods="1" methods="10" elements="45" statements="25" conditionals="10" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="package" signature="Boundaries()" num="15" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="addRange(int,int) : void" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="splitRange(int,int,int) : void" num="28" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="removeRow(int) : void" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="39" type="cond"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="42" type="cond"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="searchContainingBound(int) : Range" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Range()" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Range(int,int)" num="67" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStart() : int" num="76" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getEnd() : int" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="88" count="3" type="method"/>
            <line num="90" count="3" type="stmt"/>
            <line num="91" count="3" type="stmt"/>
            <line num="92" count="3" type="stmt"/>
            <line num="93" count="3" type="stmt"/>
            <line num="94" count="3" type="stmt"/>
            <line complexity="4" visibility="public" signature="equals(Object) : boolean" num="97" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(DataOutput) : void" num="109" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="readFields(DataInput) : void" num="115" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="121" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="compareTo(Range) : int" num="126" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line complexity="1" visibility="public" signature="getBoundaries() : Set&lt;Range&gt;" num="132" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="136" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/partition/Partitioner.java" name="Partitioner.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="13" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Partitioner">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/partition/BlockPartitionerTest.java" name="BlockPartitionerTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="2" loc="42" coveredmethods="1" methods="2" elements="14" classes="1" ncloc="34" statements="12" conditionals="0" coveredstatements="1"/>
            <class name="BlockPartitionerTest">
               <metrics coveredelements="2" complexity="2" methods="2" testruns="1" statements="12" coveredconditionals="0" coveredmethods="1" elements="14" testfailures="1" testduration="0.031" conditionals="0" coveredstatements="1" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testPartitioner() : void" num="22" count="1" type="method"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPartitionerException() : void" num="37" testsuccess="false" count="0" testduration="0.031" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
         </file>
      </package>
      <package name="de.jungblut.reader">
         <metrics coveredelements="0" complexity="78" loc="720" methods="31" classes="8" statements="255" coveredconditionals="0" coveredmethods="0" elements="350" ncloc="485" files="8" conditionals="64" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/reader/CsvDatasetReader.java" name="CsvDatasetReader.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="12" loc="95" coveredmethods="0" methods="2" elements="49" classes="1" ncloc="62" statements="33" conditionals="14" coveredstatements="0"/>
            <class name="CsvDatasetReader">
               <metrics coveredelements="0" coveredconditionals="0" complexity="12" coveredmethods="0" methods="2" elements="49" statements="33" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="CsvDatasetReader()" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="11" visibility="public" signature="readCsv(String,char,Character,int,boolean,boolean) : Dataset" num="38" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/reader/Dataset.java" name="Dataset.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="69" coveredmethods="0" methods="10" elements="24" classes="1" ncloc="46" statements="14" conditionals="0" coveredstatements="0"/>
            <class name="Dataset">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="10" elements="24" statements="14" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Dataset(DoubleVector[],DoubleVector[])" num="25" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasFeatureNames() : boolean" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasClassNames() : boolean" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setClassNames(String[]) : void" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setFeatureNames(String[]) : void" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getClassNames() : String[]" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFeatureNames() : String[]" num="51" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFeatures() : DoubleVector[]" num="55" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOutcomes() : DoubleVector[]" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="asStream() : Stream&lt;FeatureOutcomePair&gt;" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/reader/ImageReader.java" name="ImageReader.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="136" coveredmethods="0" methods="5" elements="63" classes="1" ncloc="74" statements="46" conditionals="12" coveredstatements="0"/>
            <class name="ImageReader">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="5" elements="63" statements="46" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="ImageReader()" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getSlidingWindowPatches(BufferedImage,int,int,int,int) : List&lt;BufferedImage&gt;" num="34" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="39" type="cond"/>
            <line num="40" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="40" type="cond"/>
            <line num="41" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="readImageAsGreyScale(BufferedImage) : DoubleVector" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="readImageAsRGB(BufferedImage) : DoubleVector[]" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="readImageAsLUV(BufferedImage) : DoubleVector[]" num="111" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="121" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/reader/IrisReader.java" name="IrisReader.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="92" coveredmethods="0" methods="3" elements="50" classes="1" ncloc="65" statements="37" conditionals="10" coveredstatements="0"/>
            <class name="IrisReader">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="3" elements="50" statements="37" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="IrisReader()" num="18" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="readIrisDataset(String) : Dataset" num="26" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="33" type="cond"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="38" type="cond"/>
            <line num="39" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="41" type="cond"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getEvaluationSplit(Dataset) : EvaluationSplit" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/reader/LUVColorSpace.java" name="LUVColorSpace.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="107" coveredmethods="0" methods="5" elements="49" classes="1" ncloc="74" statements="36" conditionals="8" coveredstatements="0"/>
            <class name="LUVColorSpace">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="5" elements="49" statements="36" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LUVColorSpace()" num="15" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="fromCIEXYZ(float[]) : float[]" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="44" type="cond"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fromRGB(float[]) : float[]" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="toCIEXYZ(float[]) : float[]" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toRGB(float[]) : float[]" num="101" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/reader/MNISTReader.java" name="MNISTReader.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="63" coveredmethods="0" methods="2" elements="35" classes="1" ncloc="46" statements="25" conditionals="8" coveredstatements="0"/>
            <class name="MNISTReader">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="2" elements="35" statements="25" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="MNISTReader()" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="readMNISTTrainImages(String) : Dataset" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="28" type="cond"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="37" type="cond"/>
            <line num="38" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="38" type="cond"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="46" type="cond"/>
            <line num="47" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/reader/MushroomReader.java" name="MushroomReader.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="93" coveredmethods="0" methods="2" elements="54" classes="1" ncloc="72" statements="42" conditionals="10" coveredstatements="0"/>
            <class name="MushroomReader">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="2" elements="54" statements="42" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="MushroomReader()" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="readMushroomDataset(String) : Dataset" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="38" type="cond"/>
            <line num="40" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="40" type="cond"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="47" type="cond"/>
            <line num="48" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/reader/TwentyNewsgroupReader.java" name="TwentyNewsgroupReader.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="65" coveredmethods="0" methods="2" elements="26" classes="1" ncloc="46" statements="22" conditionals="2" coveredstatements="0"/>
            <class name="TwentyNewsgroupReader">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="2" elements="26" statements="22" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="TwentyNewsgroupReader()" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="readTwentyNewsgroups(File) : Tuple3&lt;List&lt;String&gt;, DenseDoubleVector, String[]&gt;" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
         </file>
      </package>
      <package name="de.jungblut.writable">
         <metrics coveredelements="215" complexity="69" loc="545" methods="37" classes="6" statements="192" coveredconditionals="36" coveredmethods="24" elements="281" ncloc="397" files="6" conditionals="52" coveredstatements="155"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/writable/BitSetWritable.java" name="BitSetWritable.java">
            <metrics coveredelements="19" coveredconditionals="4" complexity="7" loc="45" coveredmethods="5" methods="5" elements="19" classes="1" ncloc="33" statements="10" conditionals="4" coveredstatements="10"/>
            <class name="BitSetWritable">
               <metrics coveredelements="19" coveredconditionals="4" complexity="7" coveredmethods="5" methods="5" elements="19" statements="10" conditionals="4" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="BitSetWritable()" num="14" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="BitSetWritable(BitSet)" num="18" count="1" type="method"/>
            <line num="19" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="write(DataOutput) : void" num="22" count="1" type="method"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line falsecount="1" truecount="1" num="26" type="cond"/>
            <line num="27" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="readFields(DataInput) : void" num="31" count="1" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line falsecount="1" truecount="1" num="34" type="cond"/>
            <line num="35" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBitSet() : BitSet" num="41" count="6" type="method"/>
            <line num="42" count="6" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/writable/MatrixWritable.java" name="MatrixWritable.java">
            <metrics coveredelements="68" coveredconditionals="15" complexity="19" loc="160" coveredmethods="9" methods="9" elements="74" classes="1" ncloc="103" statements="49" conditionals="16" coveredstatements="44"/>
            <class name="MatrixWritable">
               <metrics coveredelements="68" coveredconditionals="15" complexity="19" coveredmethods="9" methods="9" elements="74" statements="49" conditionals="16" coveredstatements="44"/>
            </class>
            <line complexity="1" visibility="public" signature="MatrixWritable()" num="27" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="MatrixWritable(DoubleMatrix)" num="30" count="1" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="readFields(DataInput) : void" num="35" count="1" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="write(DataOutput) : void" num="48" count="1" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="50" type="cond"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMatrix() : DoubleMatrix" num="59" count="1" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="writeSparseMatrix(SparseDoubleRowMatrix,DataOutput) : void" num="76" count="2" type="method"/>
            <line num="78" count="2" type="stmt"/>
            <line num="79" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line num="83" count="5" type="stmt"/>
            <line num="84" count="5" type="stmt"/>
            <line num="85" count="5" type="stmt"/>
            <line num="86" count="5" type="stmt"/>
            <line num="87" count="5" type="stmt"/>
            <line falsecount="5" truecount="8" num="87" type="cond"/>
            <line num="88" count="8" type="stmt"/>
            <line num="89" count="8" type="stmt"/>
            <line num="90" count="8" type="stmt"/>
            <line complexity="3" visibility="public" signature="readSparseMatrix(DataInput) : SparseDoubleRowMatrix" num="102" count="2" type="method"/>
            <line num="104" count="2" type="stmt"/>
            <line num="107" count="2" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line falsecount="2" truecount="5" num="108" type="cond"/>
            <line num="109" count="5" type="stmt"/>
            <line num="110" count="5" type="stmt"/>
            <line num="111" count="5" type="stmt"/>
            <line num="112" count="5" type="stmt"/>
            <line falsecount="5" truecount="8" num="112" type="cond"/>
            <line num="113" count="8" type="stmt"/>
            <line num="115" count="5" type="stmt"/>
            <line num="118" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="writeDenseMatrix(DenseDoubleMatrix,DataOutput) : void" num="131" count="1" type="method"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line falsecount="1" truecount="2" num="135" type="cond"/>
            <line num="136" count="2" type="stmt"/>
            <line falsecount="2" truecount="6" num="136" type="cond"/>
            <line num="137" count="6" type="stmt"/>
            <line complexity="3" visibility="public" signature="readDenseMatrix(DataInput) : DenseDoubleMatrix" num="149" count="1" type="method"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line falsecount="1" truecount="2" num="152" type="cond"/>
            <line num="153" count="2" type="stmt"/>
            <line falsecount="2" truecount="6" num="153" type="cond"/>
            <line num="154" count="6" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/writable/VectorWritable.java" name="VectorWritable.java">
            <metrics coveredelements="64" coveredconditionals="17" complexity="35" loc="183" coveredmethods="2" methods="15" elements="124" classes="1" ncloc="144" statements="77" conditionals="32" coveredstatements="45"/>
            <class name="VectorWritable">
               <metrics coveredelements="64" coveredconditionals="17" complexity="35" coveredmethods="2" methods="15" elements="124" statements="77" conditionals="32" coveredstatements="45"/>
            </class>
            <line complexity="1" visibility="public" signature="VectorWritable()" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VectorWritable(VectorWritable)" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VectorWritable(DoubleVector)" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(DataOutput) : void" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="readFields(DataInput) : void" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compareTo(VectorWritable) : int" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="hashCode() : int" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="equals(Object) : boolean" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVector() : DoubleVector" num="89" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="writeVector(DoubleVector,DataOutput) : void" num="98" count="5" type="method"/>
            <line num="101" count="5" type="stmt"/>
            <line falsecount="4" truecount="1" num="101" type="cond"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="106" type="cond"/>
            <line num="107" count="3" type="stmt"/>
            <line num="108" count="3" type="stmt"/>
            <line num="109" count="3" type="stmt"/>
            <line num="111" count="4" type="stmt"/>
            <line falsecount="3" truecount="1" num="111" type="cond"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="116" type="cond"/>
            <line num="117" count="3" type="stmt"/>
            <line num="118" count="3" type="stmt"/>
            <line num="119" count="3" type="stmt"/>
            <line falsecount="3" truecount="8" num="119" type="cond"/>
            <line num="120" count="8" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="127" count="5" type="stmt"/>
            <line falsecount="4" truecount="1" num="127" type="cond"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="131" count="4" type="stmt"/>
            <line complexity="7" visibility="public" signature="readVector(DataInput) : DoubleVector" num="135" count="5" type="method"/>
            <line num="137" count="5" type="stmt"/>
            <line num="138" count="5" type="stmt"/>
            <line num="139" count="5" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="144" type="cond"/>
            <line num="145" count="3" type="stmt"/>
            <line num="146" count="3" type="stmt"/>
            <line num="147" count="3" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="3" type="stmt"/>
            <line num="151" count="3" type="stmt"/>
            <line num="152" count="3" type="stmt"/>
            <line num="153" count="3" type="stmt"/>
            <line falsecount="3" truecount="8" num="153" type="cond"/>
            <line num="154" count="8" type="stmt"/>
            <line num="156" count="3" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="165" count="5" type="stmt"/>
            <line falsecount="4" truecount="1" num="165" type="cond"/>
            <line num="166" count="1" type="stmt"/>
            <line num="168" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="compareVector(VectorWritable,VectorWritable) : int" num="171" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compareVector(DoubleVector,DoubleVector) : int" num="175" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="wrap(DoubleVector) : VectorWritable" num="180" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/writable/BitSetWritableTest.java" name="BitSetWritableTest.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="1" loc="42" coveredmethods="1" methods="1" elements="19" classes="1" ncloc="31" statements="18" conditionals="0" coveredstatements="18"/>
            <class name="BitSetWritableTest">
               <metrics coveredelements="19" complexity="1" methods="1" testruns="1" statements="18" coveredconditionals="0" coveredmethods="1" elements="19" testfailures="0" testduration="0.006" conditionals="0" coveredstatements="18" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testBitSetSerde() : void" num="15" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="18" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/writable/MatrixWritableTest.java" name="MatrixWritableTest.java">
            <metrics coveredelements="18" coveredconditionals="0" complexity="2" loc="54" coveredmethods="2" methods="2" elements="18" classes="1" ncloc="37" statements="16" conditionals="0" coveredstatements="16"/>
            <class name="MatrixWritableTest">
               <metrics coveredelements="18" complexity="2" methods="2" testruns="1" statements="16" coveredconditionals="0" coveredmethods="2" elements="18" testfailures="0" testduration="0.01" conditionals="0" coveredstatements="16" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testDenseSerDe() : void" num="17" testsuccess="true" count="1" testduration="0.01" type="method"/>
            <line num="19" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSparseSerDe() : void" num="35" count="1" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/writable/VectorWritableTest.java" name="VectorWritableTest.java">
            <metrics coveredelements="27" coveredconditionals="0" complexity="5" loc="61" coveredmethods="5" methods="5" elements="27" classes="1" ncloc="49" statements="22" conditionals="0" coveredstatements="22"/>
            <class name="VectorWritableTest">
               <metrics coveredelements="27" complexity="5" methods="5" testruns="1" statements="22" coveredconditionals="0" coveredmethods="5" elements="27" testfailures="0" testduration="0.018" conditionals="0" coveredstatements="22" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testDenseSerDe() : void" num="17" count="1" type="method"/>
            <line num="19" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSparseSerDe() : void" num="24" count="1" type="method"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSingleSerDe() : void" num="31" testsuccess="true" count="1" testduration="0.018" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNamedSerDe() : void" num="38" count="1" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="check(DoubleVector) : DoubleVector" num="48" count="4" type="method"/>
            <line num="49" count="4" type="stmt"/>
            <line num="50" count="4" type="stmt"/>
            <line num="51" count="4" type="stmt"/>
            <line num="52" count="4" type="stmt"/>
            <line num="53" count="4" type="stmt"/>
            <line num="55" count="4" type="stmt"/>
            <line num="57" count="4" type="stmt"/>
            <line num="58" count="4" type="stmt"/>
         </file>
      </package>
      <package name="de.jungblut.classification.eval">
         <metrics coveredelements="14" complexity="135" loc="1223" methods="66" classes="8" statements="359" coveredconditionals="5" coveredmethods="3" elements="553" ncloc="797" files="6" conditionals="128" coveredstatements="6"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/classification/eval/EvaluationListener.java" name="EvaluationListener.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="97" coveredmethods="0" methods="5" elements="18" classes="1" ncloc="47" statements="11" conditionals="2" coveredstatements="0"/>
            <class name="EvaluationListener">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="5" elements="18" statements="11" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="EvaluationListener(WeightMapper&lt;A&gt;,EvaluationSplit)" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="EvaluationListener(WeightMapper&lt;A&gt;,EvaluationSplit,int)" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="onIterationFinished(int,double,DoubleVector) : void" num="60" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setRunInterval(int) : void" num="77" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="onResult(int,double,EvaluationResult,EvaluationResult) : void" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/classification/eval/EvaluationSplit.java" name="EvaluationSplit.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="19" loc="209" coveredmethods="0" methods="7" elements="98" classes="1" ncloc="138" statements="67" conditionals="24" coveredstatements="0"/>
            <class name="EvaluationSplit">
               <metrics coveredelements="0" coveredconditionals="0" complexity="19" coveredmethods="0" methods="7" elements="98" statements="67" conditionals="24" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="EvaluationSplit(DoubleVector[],DoubleVector[],DoubleVector[],DoubleVector[])" num="32" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTrainFeatures() : DoubleVector[]" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTrainOutcome() : DoubleVector[]" num="45" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTestFeatures() : DoubleVector[]" num="49" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTestOutcome() : DoubleVector[]" num="53" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="create(DoubleVector[],DoubleVector[],float,boolean) : EvaluationSplit" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="12" visibility="public" signature="createStratified(DoubleVector[],DoubleVector[],float,boolean) : EvaluationSplit" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="121" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="158" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="170" type="cond"/>
            <line num="171" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="171" type="cond"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="187" type="cond"/>
            <line num="188" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="188" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="200" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/classification/eval/Evaluator.java" name="Evaluator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="75" loc="608" coveredmethods="0" methods="38" elements="282" classes="3" ncloc="394" statements="180" conditionals="64" coveredstatements="0"/>
            <class name="Evaluator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="29" coveredmethods="0" methods="13" elements="122" statements="81" conditionals="28" coveredstatements="0"/>
            </class>
            <class name="Evaluator.EvaluationResult">
               <metrics coveredelements="0" coveredconditionals="0" complexity="41" coveredmethods="0" methods="23" elements="136" statements="81" conditionals="32" coveredstatements="0"/>
            </class>
            <class name="Evaluator.CallableEvaluation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="2" elements="24" statements="18" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="Evaluator()" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAUC() : double" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLogLoss() : double" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPrecision() : double" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRecall() : double" num="56" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFalsePositiveRate() : double" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAccuracy() : double" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getF1Score() : double" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMatthewsCorrelationCoefficient() : double" num="79" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCorrect() : int" num="86" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumLabels() : int" num="94" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTestSize() : int" num="98" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConfusionMatrix() : int[][]" num="102" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isBinary() : boolean" num="106" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="add(EvaluationResult) : void" num="110" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="119" type="cond"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="121" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="average(int) : void" num="130" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="140" type="cond"/>
            <line num="141" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="141" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTruePositive() : int" num="148" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFalsePositive() : int" num="152" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTrueNegative() : int" num="156" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFalseNegative() : int" num="160" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="print() : void" num="164" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="print(Logger) : void" num="168" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="174" type="cond"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="printConfusionMatrix() : void" num="189" count="0" type="method"/>
            <line num="190" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="printConfusionMatrix(String[]) : void" num="193" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="196" type="cond"/>
            <line num="197" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="204" type="cond"/>
            <line num="205" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="209" type="cond"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="211" type="cond"/>
            <line num="212" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="212" type="cond"/>
            <line num="213" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="218" type="cond"/>
            <line num="220" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluateClassifier(Classifier,DoubleVector[],DoubleVector[],float,boolean) : EvaluationResult" num="238" count="0" type="method"/>
            <line num="241" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluateClassifier(Classifier,DoubleVector[],DoubleVector[],float,boolean,Double) : EvaluationResult" num="262" count="0" type="method"/>
            <line num="265" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluateSplit(Classifier,EvaluationSplit) : EvaluationResult" num="278" count="0" type="method"/>
            <line num="280" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluateSplit(Classifier,EvaluationSplit,Double) : EvaluationResult" num="295" count="0" type="method"/>
            <line num="297" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluateSplit(Classifier,DoubleVector[],DoubleVector[],DoubleVector[],DoubleVector[],Double) : EvaluationResult" num="314" count="0" type="method"/>
            <line num="318" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testClassifier(Predictor,DoubleVector[],DoubleVector[]) : EvaluationResult" num="331" count="0" type="method"/>
            <line num="333" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="testClassifier(Predictor,DoubleVector[],DoubleVector[],Double) : EvaluationResult" num="346" count="0" type="method"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="352" type="cond"/>
            <line num="353" count="0" type="stmt"/>
            <line num="354" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="354" type="cond"/>
            <line num="355" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="369" type="cond"/>
            <line num="370" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line num="372" count="0" type="stmt"/>
            <line num="374" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="377" type="cond"/>
            <line num="378" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="observeBinaryClassificationElement(Predictor,Double,EvaluationResult,DoubleVector,DoubleVector) : int" num="386" count="0" type="method"/>
            <line num="390" count="0" type="stmt"/>
            <line num="391" count="0" type="stmt"/>
            <line num="393" count="0" type="stmt"/>
            <line num="394" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="394" type="cond"/>
            <line num="395" count="0" type="stmt"/>
            <line num="397" count="0" type="stmt"/>
            <line num="399" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="399" type="cond"/>
            <line num="400" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="400" type="cond"/>
            <line num="401" count="0" type="stmt"/>
            <line num="403" count="0" type="stmt"/>
            <line num="405" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="405" type="cond"/>
            <line num="406" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="406" type="cond"/>
            <line num="407" count="0" type="stmt"/>
            <line num="409" count="0" type="stmt"/>
            <line num="412" count="0" type="stmt"/>
            <line num="416" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="crossValidateClassifier(ClassifierFactory&lt;A&gt;,DoubleVector[],DoubleVector[],int,int,Double,boolean) : EvaluationResult" num="434" count="0" type="method"/>
            <line num="438" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="crossValidateClassifier(ClassifierFactory&lt;A&gt;,DoubleVector[],DoubleVector[],int,int,Double,int,boolean) : EvaluationResult" num="458" count="0" type="method"/>
            <line num="463" count="0" type="stmt"/>
            <line num="465" count="0" type="stmt"/>
            <line num="467" count="0" type="stmt"/>
            <line num="468" count="0" type="stmt"/>
            <line num="469" count="0" type="stmt"/>
            <line num="472" count="0" type="stmt"/>
            <line num="474" count="0" type="stmt"/>
            <line num="475" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="475" type="cond"/>
            <line num="476" count="0" type="stmt"/>
            <line num="480" count="0" type="stmt"/>
            <line num="482" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="482" type="cond"/>
            <line num="483" count="0" type="stmt"/>
            <line num="485" count="0" type="stmt"/>
            <line num="487" count="0" type="stmt"/>
            <line num="491" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="491" type="cond"/>
            <line num="492" count="0" type="stmt"/>
            <line num="497" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="497" type="cond"/>
            <line num="498" count="0" type="stmt"/>
            <line num="499" count="0" type="stmt"/>
            <line num="500" count="0" type="stmt"/>
            <line num="501" count="0" type="stmt"/>
            <line num="502" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="502" type="cond"/>
            <line num="503" count="0" type="stmt"/>
            <line num="504" count="0" type="stmt"/>
            <line num="505" count="0" type="stmt"/>
            <line num="507" count="0" type="stmt"/>
            <line num="509" count="0" type="stmt"/>
            <line num="511" count="0" type="stmt"/>
            <line num="516" count="0" type="stmt"/>
            <line num="517" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="tenFoldCrossValidation(ClassifierFactory&lt;A&gt;,DoubleVector[],DoubleVector[],int,Double,boolean) : EvaluationResult" num="534" count="0" type="method"/>
            <line num="537" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="tenFoldCrossValidation(ClassifierFactory&lt;A&gt;,DoubleVector[],DoubleVector[],int,Double,int,boolean) : EvaluationResult" num="554" count="0" type="method"/>
            <line num="558" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CallableEvaluation(int,int[],int,ClassifierFactory&lt;A&gt;,DoubleVector[],DoubleVector[],int,Double)" num="573" count="0" type="method"/>
            <line num="576" count="0" type="stmt"/>
            <line num="577" count="0" type="stmt"/>
            <line num="578" count="0" type="stmt"/>
            <line num="579" count="0" type="stmt"/>
            <line num="580" count="0" type="stmt"/>
            <line num="581" count="0" type="stmt"/>
            <line num="582" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="call() : EvaluationResult" num="585" count="0" type="method"/>
            <line num="587" count="0" type="stmt"/>
            <line num="589" count="0" type="stmt"/>
            <line num="591" count="0" type="stmt"/>
            <line num="592" count="0" type="stmt"/>
            <line num="593" count="0" type="stmt"/>
            <line num="594" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="594" type="cond"/>
            <line num="595" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="595" type="cond"/>
            <line num="596" count="0" type="stmt"/>
            <line num="597" count="0" type="stmt"/>
            <line num="598" count="0" type="stmt"/>
            <line num="602" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/classification/eval/TestSetIterationCallback.java" name="TestSetIterationCallback.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="96" coveredmethods="0" methods="5" elements="29" classes="1" ncloc="59" statements="18" conditionals="6" coveredstatements="0"/>
            <class name="TestSetIterationCallback">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="5" elements="29" statements="18" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="TestSetIterationCallback(EvaluationSplit,WeightMapper&lt;T&gt;,Comparator&lt;EvaluationResult&gt;,int)" num="42" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="TestSetIterationCallback(EvaluationSplit,WeightMapper&lt;T&gt;,Comparator&lt;EvaluationResult&gt;)" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="onIterationFinished(int,double,DoubleVector) : void" num="66" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestResult() : EvaluationResult" num="89" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBestWeights() : DoubleVector" num="93" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/classification/eval/WeightMapper.java" name="WeightMapper.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="23" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="WeightMapper">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/classification/eval/EvaluationSplitTest.java" name="EvaluationSplitTest.java">
            <metrics coveredelements="14" coveredconditionals="5" complexity="27" loc="190" coveredmethods="3" methods="11" elements="126" classes="1" ncloc="152" statements="83" conditionals="32" coveredstatements="6"/>
            <class name="EvaluationSplitTest">
               <metrics coveredelements="14" complexity="27" methods="11" testruns="1" statements="83" coveredconditionals="5" coveredmethods="3" elements="126" testfailures="1" testduration="0.095" conditionals="32" coveredstatements="6" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testNegativeSplitPercentage() : void" num="25" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTooLargeSplitPercentage() : void" num="31" count="1" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSplitting() : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testStratifiedSplits_50_50() : void" num="47" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testStratifiedSplits_25_75() : void" num="66" testsuccess="false" count="0" testduration="0.095" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testStratifiedSplits_1_99() : void" num="86" count="1" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="1" num="90" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testStratifiedSplits_2_98() : void" num="96" count="1" type="method"/>
            <line num="98" count="1" type="stmt"/>
            <line falsecount="1" truecount="100" num="98" type="cond"/>
            <line num="99" count="100" type="stmt"/>
            <line num="100" count="100" type="stmt"/>
            <line falsecount="98" truecount="2" num="100" type="cond"/>
            <line num="102" count="1" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testMultiClassStratifiedSplits_5_20() : void" num="115" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testMultiClassStratifiedSplits_5_19997() : void" num="141" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="161" type="cond"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="countClass(DoubleVector[],int) : int" num="170" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="172" type="cond"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="countPositives(DoubleVector[]) : int" num="180" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="182" type="cond"/>
            <line num="183" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="183" type="cond"/>
            <line num="184" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
         </file>
      </package>
      <package name="de.jungblut.nlp">
         <metrics coveredelements="728" complexity="260" loc="2598" methods="133" classes="20" statements="802" coveredconditionals="126" coveredmethods="81" elements="1177" ncloc="1617" files="15" conditionals="242" coveredstatements="521"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/nlp/BigramTokenizer.java" name="BigramTokenizer.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="21" coveredmethods="0" methods="1" elements="6" classes="1" ncloc="12" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="BigramTokenizer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="6" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="tokenize(String) : String[]" num="11" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line num="15" count="0" type="stmt"/>
            <line num="16" count="0" type="stmt"/>
            <line num="17" count="0" type="stmt"/>
            <line num="18" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/nlp/DocumentSimilarity.java" name="DocumentSimilarity.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="38" coveredmethods="0" methods="3" elements="8" classes="1" ncloc="21" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="DocumentSimilarity">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="DocumentSimilarity(DistanceMeasurer)" num="18" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="measureDocumentSimilarity(String[],String[]) : double" num="26" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="with(DistanceMeasurer) : DocumentSimilarity" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/nlp/HMM.java" name="HMM.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="60" loc="534" coveredmethods="0" methods="24" elements="255" classes="1" ncloc="343" statements="159" conditionals="72" coveredstatements="0"/>
            <class name="HMM">
               <metrics coveredelements="0" coveredconditionals="0" complexity="60" coveredmethods="0" methods="24" elements="255" statements="159" conditionals="72" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="HMM()" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="HMM(int,int)" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="HMM(int,int,long)" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="normalizeProbabilities() : void" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="logNormalizeProbabilities() : void" num="92" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="estimateLikelihood(DoubleVector[]) : double" num="108" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="estimateLikelihood(DoubleMatrix) : double" num="115" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decode(DoubleVector[],DoubleVector[]) : DoubleMatrix" num="131" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="14" visibility="public" signature="trainUnsupervised(DoubleVector[],double,int,boolean) : void" num="153" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="162" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="170" type="cond"/>
            <line num="172" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="192" type="cond"/>
            <line num="193" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="193" type="cond"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="195" type="cond"/>
            <line num="196" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="198" type="cond"/>
            <line num="199" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="209" type="cond"/>
            <line num="210" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="210" type="cond"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="212" type="cond"/>
            <line num="213" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="215" type="cond"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="217" type="cond"/>
            <line num="218" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="237" type="cond"/>
            <line num="238" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="245" type="cond"/>
            <line num="246" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="backward(DoubleMatrix,DoubleMatrix,DoubleMatrix,DoubleVector,DoubleVector[]) : DoubleMatrix" num="262" count="0" type="method"/>
            <line num="266" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="271" type="cond"/>
            <line num="272" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="272" type="cond"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="274" type="cond"/>
            <line num="275" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="277" type="cond"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line complexity="7" visibility="private" signature="forward(DoubleMatrix,DoubleMatrix,DoubleMatrix,DoubleVector,DoubleVector[]) : DoubleMatrix" num="296" count="0" type="method"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="301" type="cond"/>
            <line num="303" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="306" type="cond"/>
            <line num="307" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="314" type="cond"/>
            <line num="315" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="315" type="cond"/>
            <line num="316" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="317" type="cond"/>
            <line num="318" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="323" type="cond"/>
            <line num="326" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="normalize(DoubleVector,DoubleMatrix,DoubleMatrix,boolean) : void" num="335" count="0" type="method"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="339" type="cond"/>
            <line num="340" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="340" type="cond"/>
            <line num="341" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="345" type="cond"/>
            <line num="349" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="351" type="cond"/>
            <line num="352" count="0" type="stmt"/>
            <line num="354" count="0" type="stmt"/>
            <line num="355" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="357" type="cond"/>
            <line num="358" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="trainSupervised(DoubleVector[],DoubleVector[]) : void" num="380" count="0" type="method"/>
            <line num="383" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line num="391" count="0" type="stmt"/>
            <line num="395" count="0" type="stmt"/>
            <line num="398" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="398" type="cond"/>
            <line num="399" count="0" type="stmt"/>
            <line num="404" count="0" type="stmt"/>
            <line num="405" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="405" type="cond"/>
            <line num="406" count="0" type="stmt"/>
            <line num="408" count="0" type="stmt"/>
            <line num="412" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="412" type="cond"/>
            <line num="413" count="0" type="stmt"/>
            <line num="414" count="0" type="stmt"/>
            <line num="416" count="0" type="stmt"/>
            <line num="417" count="0" type="stmt"/>
            <line num="420" count="0" type="stmt"/>
            <line num="421" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="421" type="cond"/>
            <line num="422" count="0" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line num="428" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="428" type="cond"/>
            <line num="429" count="0" type="stmt"/>
            <line num="430" count="0" type="stmt"/>
            <line num="431" count="0" type="stmt"/>
            <line num="438" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="train(DoubleVector[],DoubleVector[]) : void" num="441" count="0" type="method"/>
            <line num="443" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="predict(DoubleVector) : DoubleVector" num="446" count="0" type="method"/>
            <line num="450" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line num="453" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="453" type="cond"/>
            <line num="454" count="0" type="stmt"/>
            <line num="458" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="predict(DoubleVector,DoubleVector) : DoubleVector" num="461" count="0" type="method"/>
            <line num="465" count="0" type="stmt"/>
            <line num="468" count="0" type="stmt"/>
            <line num="470" count="0" type="stmt"/>
            <line num="471" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="471" type="cond"/>
            <line num="472" count="0" type="stmt"/>
            <line num="476" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumHiddenStates() : int" num="479" count="0" type="method"/>
            <line num="480" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumVisibleStates() : int" num="483" count="0" type="method"/>
            <line num="484" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getEmissionProbabilitiyMatrix() : DoubleMatrix" num="487" count="0" type="method"/>
            <line num="488" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHiddenPriorProbability() : DoubleVector" num="491" count="0" type="method"/>
            <line num="492" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTransitionProbabilityMatrix() : DoubleMatrix" num="495" count="0" type="method"/>
            <line num="496" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getOutcomeState(DoubleVector) : int" num="502" count="0" type="method"/>
            <line num="503" count="0" type="stmt"/>
            <line num="504" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="504" type="cond"/>
            <line num="505" count="0" type="stmt"/>
            <line num="509" count="0" type="stmt"/>
            <line num="511" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(DataOutput) : void" num="514" count="0" type="method"/>
            <line num="516" count="0" type="stmt"/>
            <line num="517" count="0" type="stmt"/>
            <line num="518" count="0" type="stmt"/>
            <line num="519" count="0" type="stmt"/>
            <line num="521" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="readFields(DataInput) : void" num="525" count="0" type="method"/>
            <line num="527" count="0" type="stmt"/>
            <line num="528" count="0" type="stmt"/>
            <line num="529" count="0" type="stmt"/>
            <line num="530" count="0" type="stmt"/>
            <line num="531" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/nlp/MarkovChain.java" name="MarkovChain.java">
            <metrics coveredelements="62" coveredconditionals="14" complexity="22" loc="214" coveredmethods="7" methods="12" elements="88" classes="1" ncloc="127" statements="56" conditionals="20" coveredstatements="41"/>
            <class name="MarkovChain">
               <metrics coveredelements="62" coveredconditionals="14" complexity="22" coveredmethods="7" methods="12" elements="88" statements="56" conditionals="20" coveredstatements="41"/>
            </class>
            <line complexity="1" visibility="private" signature="MarkovChain(int)" num="33" count="2" type="method"/>
            <line num="34" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="MarkovChain(int,DoubleMatrix)" num="37" count="2" type="method"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="train(Stream&lt;int[]&gt;) : void" num="52" count="2" type="method"/>
            <line num="53" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line num="58" count="8" type="stmt"/>
            <line falsecount="8" truecount="18" num="58" type="cond"/>
            <line num="59" count="18" type="stmt"/>
            <line num="60" count="17" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line num="66" count="7" type="stmt"/>
            <line num="67" count="8" type="stmt"/>
            <line num="68" count="8" type="stmt"/>
            <line num="70" count="7" type="stmt"/>
            <line falsecount="8" truecount="12" num="70" type="cond"/>
            <line num="71" count="12" type="stmt"/>
            <line num="72" count="12" type="stmt"/>
            <line num="73" count="12" type="stmt"/>
            <line num="75" count="12" type="stmt"/>
            <line complexity="2" visibility="public" signature="getProbabilityForSequence(int[]) : double" num="87" count="5" type="method"/>
            <line num="88" count="5" type="stmt"/>
            <line num="90" count="5" type="stmt"/>
            <line num="91" count="5" type="stmt"/>
            <line num="92" count="5" type="stmt"/>
            <line falsecount="5" truecount="7" num="92" type="cond"/>
            <line num="93" count="7" type="stmt"/>
            <line num="94" count="7" type="stmt"/>
            <line num="96" count="7" type="stmt"/>
            <line num="99" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="averageTransitionProbability(int[]) : double" num="105" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getTransitionProbabilities(int[]) : DoubleVector" num="114" count="5" type="method"/>
            <line num="115" count="5" type="stmt"/>
            <line num="117" count="5" type="stmt"/>
            <line falsecount="5" truecount="7" num="117" type="cond"/>
            <line num="118" count="7" type="stmt"/>
            <line num="121" count="5" type="stmt"/>
            <line complexity="5" visibility="public" signature="completeStateSequence(Optional&lt;Random&gt;,int[],int) : int[]" num="131" count="4" type="method"/>
            <line num="134" count="4" type="stmt"/>
            <line num="135" count="4" type="stmt"/>
            <line num="136" count="5" type="stmt"/>
            <line falsecount="3" truecount="2" num="136" type="cond"/>
            <line num="138" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="138" type="cond"/>
            <line num="139" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="152" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="152" type="cond"/>
            <line num="153" count="0" type="stmt"/>
            <line num="156" count="3" type="stmt"/>
            <line num="161" count="3" type="stmt"/>
            <line complexity="3" visibility="private" signature="chooseState(Random,DoubleVector) : int" num="170" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="175" type="cond"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="177" type="cond"/>
            <line num="178" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTransitionProbabilities() : DoubleMatrix" num="188" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumStates() : int" num="195" count="0" type="method"/>
            <line num="196" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(int) : MarkovChain" num="202" count="2" type="method"/>
            <line num="203" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(int,DoubleMatrix) : MarkovChain" num="210" count="0" type="method"/>
            <line num="211" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/nlp/MinHash.java" name="MinHash.java">
            <metrics coveredelements="72" coveredconditionals="9" complexity="27" loc="243" coveredmethods="12" methods="17" elements="98" classes="6" ncloc="144" statements="67" conditionals="14" coveredstatements="51"/>
            <class name="MinHash">
               <metrics coveredelements="51" coveredconditionals="9" complexity="20" coveredmethods="5" methods="10" elements="77" statements="53" conditionals="14" coveredstatements="37"/>
            </class>
            <class name="MinHash.HashType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="MinHash.HashFunction">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="MinHash.LinearHashFunction">
               <metrics coveredelements="9" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="9" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <class name="MinHash.Murmur128HashFunction">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="MinHash.MD5HashFunction">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="HashFunction(int)" num="31" count="12" type="method"/>
            <line num="32" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="LinearHashFunction(int,int)" num="43" count="4" type="method"/>
            <line num="44" count="4" type="stmt"/>
            <line num="45" count="4" type="stmt"/>
            <line complexity="1" visibility="package" signature="hash(byte[]) : int" num="48" count="28" type="method"/>
            <line num="50" count="28" type="stmt"/>
            <line num="51" count="28" type="stmt"/>
            <line num="52" count="112" type="stmt"/>
            <line num="53" count="112" type="stmt"/>
            <line num="55" count="28" type="stmt"/>
            <line complexity="1" visibility="public" signature="Murmur128HashFunction(int)" num="64" count="4" type="method"/>
            <line num="65" count="4" type="stmt"/>
            <line num="66" count="4" type="stmt"/>
            <line complexity="1" visibility="package" signature="hash(byte[]) : int" num="69" count="28" type="method"/>
            <line num="71" count="28" type="stmt"/>
            <line complexity="1" visibility="public" signature="MD5HashFunction(int)" num="80" count="4" type="method"/>
            <line num="81" count="4" type="stmt"/>
            <line num="82" count="4" type="stmt"/>
            <line complexity="1" visibility="package" signature="hash(byte[]) : int" num="85" count="28" type="method"/>
            <line num="87" count="28" type="stmt"/>
            <line complexity="1" visibility="private" signature="MinHash(int)" num="100" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="MinHash(int,HashType)" num="104" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="MinHash(int,HashType,long)" num="108" count="3" type="method"/>
            <line num="109" count="3" type="stmt"/>
            <line num="110" count="3" type="stmt"/>
            <line num="111" count="3" type="stmt"/>
            <line num="112" count="3" type="stmt"/>
            <line falsecount="3" truecount="12" num="112" type="cond"/>
            <line num="113" count="12" type="stmt"/>
            <line num="114" count="4" type="stmt"/>
            <line num="115" count="4" type="stmt"/>
            <line num="116" count="4" type="stmt"/>
            <line num="117" count="4" type="stmt"/>
            <line num="118" count="4" type="stmt"/>
            <line num="119" count="4" type="stmt"/>
            <line num="120" count="4" type="stmt"/>
            <line num="121" count="4" type="stmt"/>
            <line num="122" count="4" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="minHashVector(DoubleVector) : int[]" num="138" count="6" type="method"/>
            <line num="139" count="6" type="stmt"/>
            <line num="140" count="6" type="stmt"/>
            <line num="141" count="6" type="stmt"/>
            <line num="143" count="6" type="stmt"/>
            <line falsecount="6" truecount="24" num="143" type="cond"/>
            <line num="144" count="24" type="stmt"/>
            <line num="145" count="24" type="stmt"/>
            <line falsecount="24" truecount="84" num="145" type="cond"/>
            <line num="146" count="84" type="stmt"/>
            <line num="147" count="84" type="stmt"/>
            <line num="148" count="84" type="stmt"/>
            <line num="149" count="84" type="stmt"/>
            <line num="150" count="84" type="stmt"/>
            <line num="151" count="84" type="stmt"/>
            <line num="152" count="84" type="stmt"/>
            <line num="153" count="84" type="stmt"/>
            <line falsecount="25" truecount="59" num="153" type="cond"/>
            <line num="154" count="59" type="stmt"/>
            <line num="159" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="measureSimilarity(int[],int[]) : double" num="168" count="3" type="method"/>
            <line num="170" count="3" type="stmt"/>
            <line num="174" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="174" type="cond"/>
            <line num="175" count="0" type="stmt"/>
            <line num="177" count="3" type="stmt"/>
            <line num="178" count="3" type="stmt"/>
            <line num="180" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="createClusterKeys(int[],int) : Set&lt;String&gt;" num="194" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="197" type="cond"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="199" type="cond"/>
            <line num="200" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(int) : MinHash" num="215" count="0" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(int,long) : MinHash" num="224" count="1" type="method"/>
            <line num="225" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(int,HashType) : MinHash" num="231" count="0" type="method"/>
            <line num="232" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(int,HashType,long) : MinHash" num="239" count="2" type="method"/>
            <line num="240" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/nlp/SparseVectorDocumentMapper.java" name="SparseVectorDocumentMapper.java">
            <metrics coveredelements="9" coveredconditionals="2" complexity="2" loc="32" coveredmethods="1" methods="1" elements="9" classes="1" ncloc="21" statements="6" conditionals="2" coveredstatements="6"/>
            <class name="SparseVectorDocumentMapper">
               <metrics coveredelements="9" coveredconditionals="2" complexity="2" coveredmethods="1" methods="1" elements="9" statements="6" conditionals="2" coveredstatements="6"/>
            </class>
            <line complexity="2" visibility="public" signature="mapDocument(DoubleVector) : Set&lt;Integer&gt;" num="21" count="12" type="method"/>
            <line num="23" count="12" type="stmt"/>
            <line num="24" count="12" type="stmt"/>
            <line num="25" count="12" type="stmt"/>
            <line falsecount="12" truecount="24" num="25" type="cond"/>
            <line num="26" count="24" type="stmt"/>
            <line num="27" count="24" type="stmt"/>
            <line num="29" count="12" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/nlp/StandardTokenizer.java" name="StandardTokenizer.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="16" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="8" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="StandardTokenizer">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="tokenize(String) : String[]" num="10" count="32" type="method"/>
            <line num="12" count="32" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/nlp/Tokenizer.java" name="Tokenizer.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="18" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Tokenizer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/nlp/TokenizerUtils.java" name="TokenizerUtils.java">
            <metrics coveredelements="160" coveredconditionals="43" complexity="49" loc="341" coveredmethods="17" methods="22" elements="186" classes="1" ncloc="202" statements="112" conditionals="52" coveredstatements="100"/>
            <class name="TokenizerUtils">
               <metrics coveredelements="160" coveredconditionals="43" complexity="49" coveredmethods="17" methods="22" elements="186" statements="112" conditionals="52" coveredstatements="100"/>
            </class>
            <line complexity="4" visibility="package" signature="&lt;clinit&gt;, line 27()" num="27" count="3" type="method"/>
            <line num="28" count="3" type="stmt"/>
            <line num="30" count="3" type="stmt"/>
            <line falsecount="3" truecount="78" num="30" type="cond"/>
            <line num="31" count="78" type="stmt"/>
            <line num="34" count="3" type="stmt"/>
            <line num="35" count="3" type="stmt"/>
            <line num="36" count="3" type="stmt"/>
            <line num="37" count="3" type="stmt"/>
            <line num="38" count="3" type="stmt"/>
            <line num="39" count="3" type="stmt"/>
            <line num="40" count="3" type="stmt"/>
            <line num="41" count="3" type="stmt"/>
            <line num="43" count="3" type="stmt"/>
            <line falsecount="3" truecount="30" num="43" type="cond"/>
            <line num="44" count="30" type="stmt"/>
            <line num="47" count="3" type="stmt"/>
            <line falsecount="3" truecount="78" num="47" type="cond"/>
            <line num="48" count="78" type="stmt"/>
            <line complexity="1" visibility="private" signature="TokenizerUtils()" num="55" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="removeMatchingRegex(String,String,String[],boolean) : String[]" num="63" count="2" type="method"/>
            <line num="65" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line falsecount="2" truecount="6" num="66" type="cond"/>
            <line num="67" count="6" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="69" type="cond"/>
            <line num="70" count="1" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="qGramTokenize(String,int) : String[]" num="86" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="nShinglesTokenize(String,int) : String[]" num="96" count="1" type="method"/>
            <line num="97" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line falsecount="1" truecount="43" num="102" type="cond"/>
            <line num="103" count="43" type="stmt"/>
            <line num="104" count="43" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="whiteSpaceTokenize(String) : String[]" num="112" count="14" type="method"/>
            <line num="113" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="deduplicateTokens(String[]) : String[]" num="119" count="1" type="method"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="wordTokenize(String) : String[]" num="129" count="33" type="method"/>
            <line num="130" count="33" type="stmt"/>
            <line complexity="4" visibility="public" signature="wordTokenize(String,boolean) : String[]" num="137" count="34" type="method"/>
            <line num="138" count="34" type="stmt"/>
            <line falsecount="33" truecount="1" num="138" type="cond"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line falsecount="1" truecount="17" num="143" type="cond"/>
            <line num="144" count="17" type="stmt"/>
            <line num="145" count="17" type="stmt"/>
            <line falsecount="5" truecount="12" num="145" type="cond"/>
            <line num="146" count="12" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="151" count="33" type="stmt"/>
            <line complexity="1" visibility="public" signature="wordTokenize(String,String) : String[]" num="159" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="normalizeTokens(String[],boolean) : String[]" num="169" count="32" type="method"/>
            <line num="170" count="32" type="stmt"/>
            <line falsecount="32" truecount="151" num="170" type="cond"/>
            <line num="171" count="150" type="stmt"/>
            <line num="174" count="32" type="stmt"/>
            <line falsecount="0" truecount="32" num="174" type="cond"/>
            <line num="175" count="32" type="stmt"/>
            <line num="177" count="32" type="stmt"/>
            <line complexity="4" visibility="public" signature="normalizeString(String) : String" num="186" count="150" type="method"/>
            <line num="187" count="149" type="stmt"/>
            <line num="188" count="151" type="stmt"/>
            <line num="189" count="152" type="stmt"/>
            <line num="191" count="152" type="stmt"/>
            <line falsecount="151" truecount="538" num="191" type="cond"/>
            <line num="192" count="537" type="stmt"/>
            <line num="193" count="539" type="stmt"/>
            <line falsecount="0" truecount="539" num="193" type="cond"/>
            <line num="194" count="538" type="stmt"/>
            <line falsecount="0" truecount="539" num="194" type="cond"/>
            <line num="195" count="538" type="stmt"/>
            <line num="200" count="151" type="stmt"/>
            <line complexity="3" visibility="public" signature="removeEmpty(String[]) : String[]" num="207" count="34" type="method"/>
            <line num="208" count="34" type="stmt"/>
            <line num="209" count="34" type="stmt"/>
            <line num="210" count="158" type="stmt"/>
            <line falsecount="2" truecount="156" num="210" type="cond"/>
            <line num="211" count="156" type="stmt"/>
            <line num="213" count="34" type="stmt"/>
            <line complexity="1" visibility="public" signature="whiteSpaceTokenizeNGrams(String,int) : String[]" num="220" count="3" type="method"/>
            <line num="221" count="3" type="stmt"/>
            <line num="222" count="3" type="stmt"/>
            <line complexity="4" visibility="public" signature="buildNGrams(String[],int) : String[]" num="229" count="6" type="method"/>
            <line num="230" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="230" type="cond"/>
            <line num="231" count="0" type="stmt"/>
            <line num="233" count="6" type="stmt"/>
            <line num="234" count="6" type="stmt"/>
            <line num="235" count="6" type="stmt"/>
            <line falsecount="6" truecount="49" num="235" type="cond"/>
            <line num="236" count="49" type="stmt"/>
            <line num="237" count="49" type="stmt"/>
            <line num="238" count="49" type="stmt"/>
            <line falsecount="49" truecount="38" num="238" type="cond"/>
            <line num="239" count="38" type="stmt"/>
            <line num="240" count="38" type="stmt"/>
            <line num="242" count="49" type="stmt"/>
            <line num="244" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="buildNGramsRange(String[],int,int) : String[]" num="252" count="1" type="method"/>
            <line num="255" count="1" type="stmt"/>
            <line num="256" count="1" type="stmt"/>
            <line falsecount="1" truecount="1" num="256" type="cond"/>
            <line num="257" count="1" type="stmt"/>
            <line num="260" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="internStrings(String[]) : String[]" num="269" count="0" type="method"/>
            <line num="270" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="270" type="cond"/>
            <line num="271" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="internStrings(String[],StringPool) : String[]" num="283" count="0" type="method"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="285" type="cond"/>
            <line num="286" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addStartAndEndTags(String[]) : String[]" num="294" count="1" type="method"/>
            <line num="295" count="1" type="stmt"/>
            <line num="296" count="1" type="stmt"/>
            <line num="297" count="1" type="stmt"/>
            <line num="298" count="1" type="stmt"/>
            <line num="299" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="concat(String[],String) : String" num="305" count="1" type="method"/>
            <line num="306" count="1" type="stmt"/>
            <line num="307" count="1" type="stmt"/>
            <line num="308" count="1" type="stmt"/>
            <line falsecount="1" truecount="9" num="308" type="cond"/>
            <line num="309" count="9" type="stmt"/>
            <line num="310" count="9" type="stmt"/>
            <line falsecount="1" truecount="8" num="310" type="cond"/>
            <line num="311" count="8" type="stmt"/>
            <line num="314" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="numericsToHash(String[]) : String[]" num="320" count="1" type="method"/>
            <line num="321" count="1" type="stmt"/>
            <line num="322" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="322" type="cond"/>
            <line num="323" count="3" type="stmt"/>
            <line num="325" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="trim(String[]) : String[]" num="332" count="1" type="method"/>
            <line num="333" count="1" type="stmt"/>
            <line num="334" count="1" type="stmt"/>
            <line falsecount="1" truecount="4" num="334" type="cond"/>
            <line num="336" count="4" type="stmt"/>
            <line num="338" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/nlp/VectorizerUtils.java" name="VectorizerUtils.java">
            <metrics coveredelements="93" coveredconditionals="14" complexity="38" loc="474" coveredmethods="11" methods="18" elements="164" classes="1" ncloc="222" statements="108" conditionals="38" coveredstatements="68"/>
            <class name="VectorizerUtils">
               <metrics coveredelements="93" coveredconditionals="14" complexity="38" coveredmethods="11" methods="18" elements="164" statements="108" conditionals="38" coveredstatements="68"/>
            </class>
            <line complexity="1" visibility="public" signature="buildDictionary(Stream&lt;String[]&gt;) : String[]" num="40" count="5" type="method"/>
            <line num="41" count="5" type="stmt"/>
            <line complexity="3" visibility="public" signature="buildDictionary(Stream&lt;String[]&gt;,float,int) : String[]" num="60" count="6" type="method"/>
            <line num="62" count="7" type="stmt"/>
            <line num="67" count="7" type="stmt"/>
            <line num="69" count="7" type="stmt"/>
            <line num="70" count="7" type="stmt"/>
            <line num="71" count="28" type="stmt"/>
            <line num="74" count="28" type="stmt"/>
            <line num="77" count="7" type="stmt"/>
            <line num="78" count="7" type="stmt"/>
            <line num="80" count="7" type="stmt"/>
            <line num="81" count="87" type="stmt"/>
            <line falsecount="76" truecount="15" num="81" type="cond"/>
            <line num="82" count="15" type="stmt"/>
            <line num="87" count="7" type="stmt"/>
            <line num="88" count="7" type="stmt"/>
            <line num="90" count="7" type="stmt"/>
            <line num="94" count="7" type="stmt"/>
            <line num="95" count="15" type="stmt"/>
            <line num="98" count="7" type="stmt"/>
            <line num="100" count="7" type="stmt"/>
            <line num="101" count="7" type="stmt"/>
            <line num="102" count="7" type="stmt"/>
            <line num="103" count="7" type="stmt"/>
            <line complexity="4" visibility="public" signature="buildTransitionVector(String[],String[]) : int[]" num="116" count="1" type="method"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line falsecount="1" truecount="4" num="118" type="cond"/>
            <line num="119" count="4" type="stmt"/>
            <line num="120" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="120" type="cond"/>
            <line num="121" count="4" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="buildInvertedIndexMap(List&lt;String[]&gt;,String[]) : HashMultimap&lt;String, Integer&gt;" num="142" count="3" type="method"/>
            <line num="144" count="3" type="stmt"/>
            <line num="145" count="3" type="stmt"/>
            <line falsecount="3" truecount="12" num="145" type="cond"/>
            <line num="146" count="12" type="stmt"/>
            <line num="147" count="12" type="stmt"/>
            <line num="149" count="57" type="stmt"/>
            <line falsecount="0" truecount="57" num="149" type="cond"/>
            <line num="150" count="57" type="stmt"/>
            <line num="154" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="buildInvertedIndexArray(List&lt;String[]&gt;,String[]) : int[][]" num="168" count="1" type="method"/>
            <line num="170" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line falsecount="1" truecount="14" num="174" type="cond"/>
            <line num="175" count="14" type="stmt"/>
            <line num="176" count="14" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="buildInvertedIndexDocumentCount(List&lt;String[]&gt;,String[]) : int[]" num="194" count="1" type="method"/>
            <line num="196" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line falsecount="1" truecount="14" num="200" type="cond"/>
            <line num="201" count="14" type="stmt"/>
            <line num="202" count="14" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="wordFrequencyVectorize(String[]) : Stream&lt;DoubleVector&gt;" num="219" count="0" type="method"/>
            <line num="220" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="wordFrequencyVectorize(Stream&lt;String[]&gt;) : Stream&lt;DoubleVector&gt;" num="234" count="0" type="method"/>
            <line num="236" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="wordFrequencyVectorize(Stream&lt;String[]&gt;,String[]) : Stream&lt;DoubleVector&gt;" num="252" count="0" type="method"/>
            <line num="255" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="263" type="cond"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="266" type="cond"/>
            <line num="267" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="tfIdfVectorize(List&lt;String[]&gt;,String[],int[]) : List&lt;DoubleVector&gt;" num="284" count="1" type="method"/>
            <line num="288" count="1" type="stmt"/>
            <line num="289" count="1" type="stmt"/>
            <line num="291" count="1" type="stmt"/>
            <line num="292" count="4" type="stmt"/>
            <line num="296" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="tfIdfVectorize(int,String[],String[],int[]) : DoubleVector" num="308" count="4" type="method"/>
            <line num="311" count="4" type="stmt"/>
            <line num="312" count="4" type="stmt"/>
            <line num="313" count="4" type="stmt"/>
            <line num="316" count="4" type="stmt"/>
            <line num="317" count="4" type="stmt"/>
            <line num="319" count="4" type="stmt"/>
            <line num="320" count="19" type="stmt"/>
            <line num="321" count="19" type="stmt"/>
            <line falsecount="0" truecount="19" num="321" type="cond"/>
            <line num="322" count="19" type="stmt"/>
            <line num="324" count="19" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="326" type="cond"/>
            <line num="327" count="0" type="stmt"/>
            <line num="331" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMostFrequentItems(Multiset&lt;E&gt;) : ArrayList&lt;Entry&lt;E&gt;&gt;" num="341" count="2" type="method"/>
            <line num="342" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMostFrequentItems(Multiset&lt;E&gt;,Predicate&lt;Entry&lt;E&gt;&gt;) : ArrayList&lt;Entry&lt;E&gt;&gt;" num="354" count="2" type="method"/>
            <line num="357" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="357" type="cond"/>
            <line num="359" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="compare(Entry&lt;E&gt;,Entry&lt;E&gt;) : int" num="360" count="194" type="method"/>
            <line num="362" count="194" type="stmt"/>
            <line num="366" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="hashVectorize(DoubleVector,int,com.google.common.hash.HashFunction) : DoubleVector" num="382" count="0" type="method"/>
            <line num="384" count="0" type="stmt"/>
            <line num="385" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="387" type="cond"/>
            <line num="388" count="0" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line num="392" count="0" type="stmt"/>
            <line num="395" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="395" type="cond"/>
            <line num="397" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="hashVectorize(DoubleVector[],int,com.google.common.hash.HashFunction) : DoubleVector[]" num="413" count="0" type="method"/>
            <line num="415" count="0" type="stmt"/>
            <line num="416" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="416" type="cond"/>
            <line num="417" count="0" type="stmt"/>
            <line num="419" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="sparseHashVectorize(Stream&lt;String[]&gt;,com.google.common.hash.HashFunction,Supplier&lt;DoubleVector&gt;) : Stream&lt;DoubleVector&gt;" num="436" count="0" type="method"/>
            <line num="440" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="441" type="cond"/>
            <line complexity="3" visibility="public" signature="sparseHashVectorize(String[],com.google.common.hash.HashFunction,Supplier&lt;DoubleVector&gt;) : DoubleVector" num="457" count="0" type="method"/>
            <line num="460" count="0" type="stmt"/>
            <line num="461" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="461" type="cond"/>
            <line num="462" count="0" type="stmt"/>
            <line num="463" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="463" type="cond"/>
            <line num="464" count="0" type="stmt"/>
            <line num="466" count="0" type="stmt"/>
            <line num="469" count="0" type="stmt"/>
            <line num="470" count="0" type="stmt"/>
            <line num="472" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/nlp/HMMTest.java" name="HMMTest.java">
            <metrics coveredelements="18" coveredconditionals="6" complexity="7" loc="115" coveredmethods="2" methods="4" elements="48" classes="1" ncloc="67" statements="38" conditionals="6" coveredstatements="10"/>
            <class name="HMMTest">
               <metrics coveredelements="18" complexity="7" methods="4" testruns="1" statements="38" coveredconditionals="6" coveredmethods="2" elements="48" testfailures="1" testduration="0.113" conditionals="6" coveredstatements="10" testpasses="0"/>
            </class>
            <line complexity="4" visibility="public" signature="setUp() : void" num="17" count="1" type="method"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line falsecount="1" truecount="1000" num="21" type="cond"/>
            <line num="22" count="1000" type="stmt"/>
            <line falsecount="692" truecount="308" num="22" type="cond"/>
            <line num="24" count="308" type="stmt"/>
            <line num="26" count="308" type="stmt"/>
            <line falsecount="284" truecount="24" num="26" type="cond"/>
            <line num="27" count="24" type="stmt"/>
            <line num="29" count="284" type="stmt"/>
            <line num="33" count="692" type="stmt"/>
            <line num="34" count="692" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnsupervisedUmbrellaWorld() : void" num="40" count="1" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSupervisedUmbrellaWorld() : void" num="70" testsuccess="false" count="0" testduration="0.113" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertLogEquals(double,double,double) : void" num="111" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/nlp/MarkovChainTest.java" name="MarkovChainTest.java">
            <metrics coveredelements="31" coveredconditionals="0" complexity="4" loc="75" coveredmethods="3" methods="3" elements="32" classes="1" ncloc="53" statements="29" conditionals="0" coveredstatements="28"/>
            <class name="MarkovChainTest">
               <metrics coveredelements="31" complexity="4" methods="3" testruns="1" statements="29" coveredconditionals="0" coveredmethods="3" elements="32" testfailures="0" testduration="0.056" conditionals="0" coveredstatements="28" testpasses="1"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 16()" num="16" count="1" type="method"/>
            <line num="17" count="1" type="stmt"/>
            <line num="18" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSequenceProbability() : void" num="23" testsuccess="true" count="1" testduration="0.056" type="method"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSequenceCompletion() : void" num="43" count="1" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/nlp/MinHashTest.java" name="MinHashTest.java">
            <metrics coveredelements="45" coveredconditionals="0" complexity="3" loc="81" coveredmethods="3" methods="3" elements="45" classes="1" ncloc="61" statements="42" conditionals="0" coveredstatements="42"/>
            <class name="MinHashTest">
               <metrics coveredelements="45" complexity="3" methods="3" testruns="1" statements="42" coveredconditionals="0" coveredmethods="3" elements="45" testfailures="0" testduration="0.103" conditionals="0" coveredstatements="42" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testMinHashing() : void" num="11" count="1" type="method"/>
            <line num="14" count="1" type="stmt"/>
            <line num="15" count="1" type="stmt"/>
            <line num="16" count="1" type="stmt"/>
            <line num="17" count="1" type="stmt"/>
            <line num="18" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMinHashingMurmur() : void" num="34" count="1" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMinHashingMd5() : void" num="57" testsuccess="true" count="1" testduration="0.103" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/nlp/TokenizerUtilsTest.java" name="TokenizerUtilsTest.java">
            <metrics coveredelements="131" coveredconditionals="28" complexity="27" loc="195" coveredmethods="13" methods="13" elements="131" classes="1" ncloc="170" statements="90" conditionals="28" coveredstatements="90"/>
            <class name="TokenizerUtilsTest">
               <metrics coveredelements="131" complexity="27" methods="13" testruns="1" statements="90" coveredconditionals="28" coveredmethods="13" elements="131" testfailures="0" testduration="0.011" conditionals="28" coveredstatements="90" testpasses="1"/>
            </class>
            <line complexity="3" visibility="public" signature="testRemoveMatchingRegex() : void" num="10" count="1" type="method"/>
            <line num="12" count="1" type="stmt"/>
            <line num="13" count="1" type="stmt"/>
            <line num="14" count="1" type="stmt"/>
            <line num="17" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="17" type="cond"/>
            <line num="18" count="3" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line falsecount="1" truecount="2" num="24" type="cond"/>
            <line num="25" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="testCharNGrammTokenize() : void" num="29" count="1" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line falsecount="1" truecount="43" num="39" type="cond"/>
            <line num="40" count="43" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBiGrammTokenize() : void" num="44" count="1" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line falsecount="1" truecount="8" num="52" type="cond"/>
            <line num="53" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="testUniPlusBiGrammTokenize() : void" num="57" count="1" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line falsecount="1" truecount="17" num="66" type="cond"/>
            <line num="67" count="17" type="stmt"/>
            <line complexity="2" visibility="public" signature="testWhiteSpaceTokenize() : void" num="71" testsuccess="true" count="1" testduration="0.011" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line falsecount="1" truecount="9" num="78" type="cond"/>
            <line num="79" count="9" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDeduplicateTokens() : void" num="83" count="1" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line falsecount="1" truecount="9" num="91" type="cond"/>
            <line num="92" count="9" type="stmt"/>
            <line complexity="3" visibility="public" signature="testWordTokenize() : void" num="96" count="1" type="method"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line falsecount="1" truecount="9" num="103" type="cond"/>
            <line num="104" count="9" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line falsecount="1" truecount="12" num="111" type="cond"/>
            <line num="112" count="12" type="stmt"/>
            <line complexity="2" visibility="public" signature="testRemoveEmpty() : void" num="116" count="1" type="method"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line falsecount="1" truecount="2" num="122" type="cond"/>
            <line num="123" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="testWhiteSpaceTokenizeNGramms() : void" num="127" count="1" type="method"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line falsecount="1" truecount="9" num="140" type="cond"/>
            <line num="141" count="9" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line falsecount="1" truecount="8" num="146" type="cond"/>
            <line num="147" count="8" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line falsecount="1" truecount="7" num="152" type="cond"/>
            <line num="153" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConcat() : void" num="157" count="1" type="method"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testAddStartAndEndTags() : void" num="166" count="1" type="method"/>
            <line num="168" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line falsecount="1" truecount="11" num="174" type="cond"/>
            <line num="175" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReplaceNumerics() : void" num="179" count="1" type="method"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTrimming() : void" num="186" count="1" type="method"/>
            <line num="188" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/nlp/VectorizerUtilsTest.java" name="VectorizerUtilsTest.java">
            <metrics coveredelements="105" coveredconditionals="10" complexity="16" loc="201" coveredmethods="11" methods="11" elements="105" classes="1" ncloc="162" statements="84" conditionals="10" coveredstatements="84"/>
            <class name="VectorizerUtilsTest">
               <metrics coveredelements="105" complexity="16" methods="11" testruns="1" statements="84" coveredconditionals="10" coveredmethods="11" elements="105" testfailures="0" testduration="0.056" conditionals="10" coveredstatements="84" testpasses="1"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 23()" num="23" count="8" type="method"/>
            <line num="24" count="8" type="stmt"/>
            <line num="25" count="8" type="stmt"/>
            <line num="26" count="32" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBuildDictionary() : void" num="29" count="1" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBuildDictionaryWithCutOffThreshold() : void" num="39" count="1" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBuildDictionaryOovTokenremains() : void" num="50" count="1" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBuildInvertedIndexMap() : void" num="58" count="1" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line falsecount="1" truecount="13" num="68" type="cond"/>
            <line num="69" count="13" type="stmt"/>
            <line num="70" count="13" type="stmt"/>
            <line num="71" count="19" type="stmt"/>
            <line num="73" count="13" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBuildInvertedIndexArray() : void" num="78" count="1" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line falsecount="1" truecount="13" num="89" type="cond"/>
            <line num="90" count="13" type="stmt"/>
            <line num="91" count="13" type="stmt"/>
            <line num="92" count="13" type="stmt"/>
            <line num="93" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTfIdfVectorize() : void" num="98" count="1" type="method"/>
            <line num="101" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testGetMostFrequentItems() : void" num="152" testsuccess="true" count="1" testduration="0.056" type="method"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line falsecount="1" truecount="13" num="159" type="cond"/>
            <line num="160" count="13" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="4" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="13" type="stmt"/>
            <line num="172" count="13" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBuildTransitionVector() : void" num="177" count="1" type="method"/>
            <line num="179" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line complexity="2" visibility="package" signature="assertArrayEquals(int[],int[]) : void" num="187" count="14" type="method"/>
            <line num="188" count="14" type="stmt"/>
            <line num="189" count="14" type="stmt"/>
            <line falsecount="14" truecount="23" num="189" type="cond"/>
            <line num="190" count="23" type="stmt"/>
            <line complexity="2" visibility="package" signature="assertArrayEquals(String[],String[]) : void" num="194" count="3" type="method"/>
            <line num="195" count="3" type="stmt"/>
            <line num="196" count="3" type="stmt"/>
            <line falsecount="3" truecount="27" num="196" type="cond"/>
            <line num="197" count="27" type="stmt"/>
         </file>
      </package>
      <package name="de.jungblut.distance">
         <metrics coveredelements="29" complexity="30" loc="284" methods="21" classes="9" statements="68" coveredconditionals="5" coveredmethods="6" elements="105" ncloc="186" files="9" conditionals="16" coveredstatements="18"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/distance/CosineDistance.java" name="CosineDistance.java">
            <metrics coveredelements="10" coveredconditionals="2" complexity="6" loc="49" coveredmethods="1" methods="2" elements="30" classes="1" ncloc="35" statements="20" conditionals="8" coveredstatements="7"/>
            <class name="CosineDistance">
               <metrics coveredelements="10" coveredconditionals="2" complexity="6" coveredmethods="1" methods="2" elements="30" statements="20" conditionals="8" coveredstatements="7"/>
            </class>
            <line complexity="4" visibility="public" signature="measureDistance(double[],double[]) : double" num="8" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
            <line num="11" count="0" type="stmt"/>
            <line num="12" count="0" type="stmt"/>
            <line num="13" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="13" type="cond"/>
            <line num="14" count="0" type="stmt"/>
            <line num="15" count="0" type="stmt"/>
            <line num="16" count="0" type="stmt"/>
            <line num="18" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="22" type="cond"/>
            <line num="23" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="26" type="cond"/>
            <line num="27" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="measureDistance(DoubleVector,DoubleVector) : double" num="32" count="14" type="method"/>
            <line num="34" count="14" type="stmt"/>
            <line num="35" count="14" type="stmt"/>
            <line num="37" count="14" type="stmt"/>
            <line num="38" count="14" type="stmt"/>
            <line num="42" count="14" type="stmt"/>
            <line falsecount="13" truecount="1" num="42" type="cond"/>
            <line num="43" count="1" type="stmt"/>
            <line num="46" count="14" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/distance/DistanceMeasurer.java" name="DistanceMeasurer.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="11" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="DistanceMeasurer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/distance/EuclidianDistance.java" name="EuclidianDistance.java">
            <metrics coveredelements="13" coveredconditionals="3" complexity="6" loc="41" coveredmethods="2" methods="3" elements="17" classes="1" ncloc="27" statements="10" conditionals="4" coveredstatements="8"/>
            <class name="EuclidianDistance">
               <metrics coveredelements="13" coveredconditionals="3" complexity="6" coveredmethods="2" methods="3" elements="17" statements="10" conditionals="4" coveredstatements="8"/>
            </class>
            <line complexity="2" visibility="public" signature="measureDistance(double[],double[]) : double" num="10" count="22957129" type="method"/>
            <line num="12" count="22957129" type="stmt"/>
            <line num="13" count="22957129" type="stmt"/>
            <line num="14" count="22957129" type="stmt"/>
            <line falsecount="22957129" truecount="45914257" num="14" type="cond"/>
            <line num="15" count="45914257" type="stmt"/>
            <line num="17" count="45914257" type="stmt"/>
            <line num="20" count="22957129" type="stmt"/>
            <line complexity="3" visibility="public" signature="measureDistance(DoubleVector,DoubleVector) : double" num="23" count="22957128" type="method"/>
            <line num="25" count="22957128" type="stmt"/>
            <line falsecount="22957128" truecount="0" num="25" type="cond"/>
            <line num="26" count="0" type="stmt"/>
            <line num="30" count="22957128" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : EuclidianDistance" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/distance/HaversineDistance.java" name="HaversineDistance.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="40" coveredmethods="0" methods="2" elements="10" classes="1" ncloc="23" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="HaversineDistance">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="10" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="measureDistance(double[],double[]) : double" num="19" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="measureDistance(DoubleVector,DoubleVector) : double" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/distance/JaccardDistance.java" name="JaccardDistance.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="38" coveredmethods="0" methods="4" elements="22" classes="1" ncloc="32" statements="16" conditionals="2" coveredstatements="0"/>
            <class name="JaccardDistance">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="4" elements="22" statements="16" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="measureDistance(double[],double[]) : double" num="7" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line num="10" count="0" type="stmt"/>
            <line num="11" count="0" type="stmt"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="dot(double[],double[]) : double" num="15" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line num="17" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="17" type="cond"/>
            <line num="18" count="0" type="stmt"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="sumOfSquares(double[]) : double" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="measureDistance(DoubleVector,DoubleVector) : double" num="31" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/distance/ManhattanDistance.java" name="ManhattanDistance.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="22" coveredmethods="0" methods="2" elements="10" classes="1" ncloc="17" statements="6" conditionals="2" coveredstatements="0"/>
            <class name="ManhattanDistance">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="10" statements="6" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="measureDistance(double[],double[]) : double" num="7" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line num="10" count="0" type="stmt"/>
            <line num="11" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="11" type="cond"/>
            <line num="12" count="0" type="stmt"/>
            <line num="14" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="measureDistance(DoubleVector,DoubleVector) : double" num="17" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/distance/SimilarityMeasurer.java" name="SimilarityMeasurer.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="27" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="14" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="SimilarityMeasurer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SimilarityMeasurer(DistanceMeasurer)" num="15" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="measureSimilarity(double[],double[]) : double" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="measureSimilarity(DoubleVector,DoubleVector) : double" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/distance/VectorDocumentDistanceMeasurer.java" name="VectorDocumentDistanceMeasurer.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="3" loc="39" coveredmethods="3" methods="3" elements="6" classes="1" ncloc="20" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="VectorDocumentDistanceMeasurer">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="private" signature="VectorDocumentDistanceMeasurer(DistanceMeasurer)" num="21" count="2" type="method"/>
            <line num="22" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="measure(DoubleVector,Set&lt;T&gt;,DoubleVector,Set&lt;T&gt;) : double" num="25" count="14" type="method"/>
            <line num="28" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="with(DistanceMeasurer) : VectorDocumentDistanceMeasurer&lt;T&gt;" num="34" count="2" type="method"/>
            <line num="36" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/distance/ZeroDistance.java" name="ZeroDistance.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="17" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="12" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="ZeroDistance">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="measureDistance(double[],double[]) : double" num="7" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="measureDistance(DoubleVector,DoubleVector) : double" num="12" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
         </file>
      </package>
      <package name="de.jungblut.classification">
         <metrics coveredelements="4" complexity="20" loc="249" methods="17" classes="6" statements="28" coveredconditionals="0" coveredmethods="1" elements="51" ncloc="128" files="6" conditionals="6" coveredstatements="3"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/classification/AbstractClassifier.java" name="AbstractClassifier.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="32" coveredmethods="1" methods="2" elements="6" classes="1" ncloc="22" statements="4" conditionals="0" coveredstatements="3"/>
            <class name="AbstractClassifier">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="train(DoubleVector[],DoubleVector[]) : void" num="17" count="3" type="method"/>
            <line num="19" count="3" type="stmt"/>
            <line num="21" count="3" type="stmt"/>
            <line num="23" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="train(Iterable&lt;DoubleVector&gt;,Iterable&lt;DoubleVector&gt;) : void" num="26" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/classification/AbstractPredictor.java" name="AbstractPredictor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="48" coveredmethods="0" methods="5" elements="25" classes="1" ncloc="40" statements="14" conditionals="6" coveredstatements="0"/>
            <class name="AbstractPredictor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="5" elements="25" statements="14" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="predictedClass(DoubleVector,double) : int" num="8" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="predictedClass(DoubleVector) : int" num="14" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="predictProbability(DoubleVector) : DoubleVector" num="20" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="extractPredictedClass(DoubleVector) : int" num="26" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="28" type="cond"/>
            <line num="29" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="extractPredictedClass(DoubleVector,double) : int" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="37" type="cond"/>
            <line num="38" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="38" type="cond"/>
            <line num="39" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/classification/Classifier.java" name="Classifier.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="34" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Classifier">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/classification/ClassifierFactory.java" name="ClassifierFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="16" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ClassifierFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/classification/Predictor.java" name="Predictor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="64" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="Predictor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="asClassifier() : Classifier" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/classification/UntrainableClassifier.java" name="UntrainableClassifier.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="55" coveredmethods="0" methods="9" elements="18" classes="1" ncloc="42" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="UntrainableClassifier">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="9" elements="18" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="UntrainableClassifier(Predictor)" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="predict(DoubleVector) : DoubleVector" num="14" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="predictProbability(DoubleVector) : DoubleVector" num="19" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="predictedClass(DoubleVector,double) : int" num="24" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="predictedClass(DoubleVector) : int" num="29" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="extractPredictedClass(DoubleVector) : int" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="extractPredictedClass(DoubleVector,double) : int" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="train(Iterable&lt;DoubleVector&gt;,Iterable&lt;DoubleVector&gt;) : void" num="44" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="train(DoubleVector[],DoubleVector[]) : void" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
         </file>
      </package>
      <package name="de.jungblut.sketching">
         <metrics coveredelements="49" complexity="11" loc="123" methods="4" classes="2" statements="33" coveredconditionals="12" coveredmethods="4" elements="51" ncloc="76" files="2" conditionals="14" coveredstatements="33"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/sketching/CountMinSketch.java" name="CountMinSketch.java">
            <metrics coveredelements="30" coveredconditionals="8" complexity="8" loc="69" coveredmethods="3" methods="3" elements="32" classes="1" ncloc="41" statements="19" conditionals="10" coveredstatements="19"/>
            <class name="CountMinSketch">
               <metrics coveredelements="30" coveredconditionals="8" complexity="8" coveredmethods="3" methods="3" elements="32" statements="19" conditionals="10" coveredstatements="19"/>
            </class>
            <line complexity="2" visibility="public" signature="CountMinSketch(int,int,Funnel&lt;T&gt;)" num="25" count="1" type="method"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="33" type="cond"/>
            <line num="34" count="10" type="stmt"/>
            <line complexity="2" visibility="public" signature="add(T) : void" num="41" count="100000" type="method"/>
            <line num="42" count="100000" type="stmt"/>
            <line num="43" count="100000" type="stmt"/>
            <line falsecount="100000" truecount="1000000" num="43" type="cond"/>
            <line num="44" count="1000000" type="stmt"/>
            <line num="45" count="1000000" type="stmt"/>
            <line complexity="4" visibility="public" signature="approximateCount(T) : int" num="55" count="10" type="method"/>
            <line num="56" count="10" type="stmt"/>
            <line num="57" count="10" type="stmt"/>
            <line num="58" count="10" type="stmt"/>
            <line falsecount="10" truecount="100" num="58" type="cond"/>
            <line num="59" count="100" type="stmt"/>
            <line num="60" count="100" type="stmt"/>
            <line num="61" count="100" type="stmt"/>
            <line falsecount="0" truecount="100" num="61" type="cond"/>
            <line num="62" count="100" type="stmt"/>
            <line num="66" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="66" type="cond"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/sketching/CountMinSketchTest.java" name="CountMinSketchTest.java">
            <metrics coveredelements="19" coveredconditionals="4" complexity="3" loc="54" coveredmethods="1" methods="1" elements="19" classes="1" ncloc="35" statements="14" conditionals="4" coveredstatements="14"/>
            <class name="CountMinSketchTest">
               <metrics coveredelements="19" complexity="3" methods="1" testruns="1" statements="14" coveredconditionals="4" coveredmethods="1" elements="19" testfailures="0" testduration="0.261" conditionals="4" coveredstatements="14" testpasses="1"/>
            </class>
            <line complexity="3" visibility="public" signature="testMinSketching() : void" num="15" testsuccess="true" count="1" testduration="0.261" type="method"/>
            <line num="17" count="1" type="stmt"/>
            <line num="18" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line falsecount="1" truecount="100000" num="24" type="cond"/>
            <line num="25" count="100000" type="stmt"/>
            <line num="26" count="100000" type="stmt"/>
            <line num="27" count="100000" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line falsecount="1" truecount="10" num="34" type="cond"/>
            <line num="35" count="10" type="stmt"/>
            <line num="36" count="10" type="stmt"/>
            <line num="38" count="10" type="stmt"/>
            <line num="44" count="10" type="stmt"/>
         </file>
      </package>
      <package name="de.jungblut.clustering">
         <metrics coveredelements="294" complexity="148" loc="1504" methods="55" classes="16" statements="486" coveredconditionals="71" coveredmethods="21" elements="715" ncloc="974" files="15" conditionals="174" coveredstatements="202"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/clustering/AgglomerativeClustering.java" name="AgglomerativeClustering.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="19" loc="217" coveredmethods="0" methods="10" elements="76" classes="2" ncloc="107" statements="50" conditionals="16" coveredstatements="0"/>
            <class name="AgglomerativeClustering">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="2" elements="54" statements="36" conditionals="16" coveredstatements="0"/>
            </class>
            <class name="AgglomerativeClustering.ClusterNode">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="8" elements="22" statements="14" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="cluster(List&lt;DoubleVector&gt;,DistanceMeasurer,boolean) : List&lt;List&lt;ClusterNode&gt;&gt;" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="10" visibility="package" signature="cluster(List&lt;DoubleVector&gt;,DistanceMeasurer,double,boolean) : List&lt;List&lt;ClusterNode&gt;&gt;" num="75" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="ClusterNode(DoubleVector)" num="156" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="ClusterNode(ClusterNode,ClusterNode,double)" num="164" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMean() : DoubleVector" num="177" count="0" type="method"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSplitDistance() : double" num="185" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParent() : ClusterNode" num="192" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLeft() : ClusterNode" num="199" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRight() : ClusterNode" num="206" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="210" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/clustering/CanopyClustering.java" name="CanopyClustering.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="87" coveredmethods="0" methods="2" elements="40" classes="1" ncloc="54" statements="26" conditionals="12" coveredstatements="0"/>
            <class name="CanopyClustering">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="2" elements="40" statements="26" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="CanopyClustering()" num="24" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="createCanopies(List&lt;DoubleVector&gt;,DistanceMeasurer,double,double,boolean) : List&lt;DoubleVector&gt;" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/clustering/Cluster.java" name="Cluster.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="25" coveredmethods="0" methods="3" elements="7" classes="1" ncloc="17" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="Cluster">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Cluster(DoubleVector,List&lt;DoubleVector&gt;)" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line num="14" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCenter() : DoubleVector" num="17" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAssignments() : List&lt;DoubleVector&gt;" num="21" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/clustering/DBSCAN.java" name="DBSCAN.java">
            <metrics coveredelements="103" coveredconditionals="30" complexity="22" loc="191" coveredmethods="7" methods="7" elements="103" classes="1" ncloc="122" statements="66" conditionals="30" coveredstatements="66"/>
            <class name="DBSCAN">
               <metrics coveredelements="103" coveredconditionals="30" complexity="22" coveredmethods="7" methods="7" elements="103" statements="66" conditionals="30" coveredstatements="66"/>
            </class>
            <line complexity="1" visibility="public" signature="cluster(List&lt;DoubleVector&gt;,DistanceMeasurer,int,double) : ArrayList&lt;DoubleVector&gt;[]" num="37" count="1" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNoise() : List&lt;DoubleVector&gt;" num="52" count="1" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="3" visibility="private" signature="generateDistanceMatrix(DistanceMeasurer,List&lt;DoubleVector&gt;) : DoubleMatrix" num="59" count="1" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line falsecount="1" truecount="101" num="65" type="cond"/>
            <line num="66" count="101" type="stmt"/>
            <line falsecount="101" truecount="10201" num="66" type="cond"/>
            <line num="67" count="10201" type="stmt"/>
            <line num="69" count="10201" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="6" visibility="private" signature="generateAdjacencyMatrix(DoubleMatrix,List&lt;DoubleVector&gt;,int,double) : TIntObjectHashMap&lt;int[]&gt;" num="81" count="1" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line falsecount="1" truecount="101" num="86" type="cond"/>
            <line num="87" count="101" type="stmt"/>
            <line num="88" count="101" type="stmt"/>
            <line falsecount="101" truecount="10201" num="88" type="cond"/>
            <line num="90" count="10201" type="stmt"/>
            <line falsecount="101" truecount="10100" num="90" type="cond"/>
            <line num="91" count="10100" type="stmt"/>
            <line num="92" count="10100" type="stmt"/>
            <line falsecount="200" truecount="9900" num="92" type="cond"/>
            <line num="93" count="9900" type="stmt"/>
            <line num="99" count="101" type="stmt"/>
            <line falsecount="1" truecount="100" num="99" type="cond"/>
            <line num="100" count="100" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line complexity="5" visibility="private" signature="findConnectedComponents(List&lt;DoubleVector&gt;,TIntObjectHashMap&lt;int[]&gt;) : ArrayList&lt;DoubleVector&gt;[]" num="110" count="1" type="method"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line falsecount="1" truecount="101" num="117" type="cond"/>
            <line num="118" count="101" type="stmt"/>
            <line falsecount="99" truecount="2" num="118" type="cond"/>
            <line num="119" count="2" type="stmt"/>
            <line num="120" count="2" type="stmt"/>
            <line num="121" count="2" type="stmt"/>
            <line num="122" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="122" type="cond"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line falsecount="1" truecount="1" num="133" type="cond"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="100" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="findNoise(List&lt;DoubleVector&gt;) : List&lt;DoubleVector&gt;" num="152" count="1" type="method"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="101" type="stmt"/>
            <line falsecount="100" truecount="1" num="160" type="cond"/>
            <line num="161" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line complexity="4" visibility="private" signature="bfs(TIntHashSet,int,TIntObjectHashMap&lt;int[]&gt;) : TIntHashSet" num="170" count="2" type="method"/>
            <line num="172" count="2" type="stmt"/>
            <line num="173" count="2" type="stmt"/>
            <line num="174" count="2" type="stmt"/>
            <line falsecount="2" truecount="101" num="174" type="cond"/>
            <line num="175" count="101" type="stmt"/>
            <line num="176" count="101" type="stmt"/>
            <line num="178" count="101" type="stmt"/>
            <line falsecount="1" truecount="100" num="178" type="cond"/>
            <line num="179" count="100" type="stmt"/>
            <line num="180" count="100" type="stmt"/>
            <line num="181" count="9900" type="stmt"/>
            <line falsecount="9801" truecount="99" num="181" type="cond"/>
            <line num="182" count="99" type="stmt"/>
            <line num="183" count="99" type="stmt"/>
            <line num="188" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/clustering/DBSCANClustering.java" name="DBSCANClustering.java">
            <metrics coveredelements="66" coveredconditionals="20" complexity="15" loc="119" coveredmethods="4" methods="4" elements="66" classes="1" ncloc="81" statements="42" conditionals="20" coveredstatements="42"/>
            <class name="DBSCANClustering">
               <metrics coveredelements="66" coveredconditionals="20" complexity="15" coveredmethods="4" methods="4" elements="66" statements="42" conditionals="20" coveredstatements="42"/>
            </class>
            <line complexity="4" visibility="public" signature="cluster(List&lt;DoubleVector&gt;,DistanceMeasurer,int,double) : List&lt;List&lt;DoubleVector&gt;&gt;" num="29" count="1" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line falsecount="1" truecount="10001" num="36" type="cond"/>
            <line num="37" count="10001" type="stmt"/>
            <line falsecount="9999" truecount="2" num="37" type="cond"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="42" type="cond"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="6" visibility="private" signature="getNearestNeighbours(TIntHashSet,TIntHashSet,List&lt;DoubleVector&gt;,int,DistanceMeasurer,double) : TIntArrayList" num="55" count="10001" type="method"/>
            <line num="58" count="10001" type="stmt"/>
            <line num="59" count="10001" type="stmt"/>
            <line num="60" count="10001" type="stmt"/>
            <line falsecount="10001" truecount="100020001" num="60" type="cond"/>
            <line num="62" count="100020001" type="stmt"/>
            <line falsecount="50015001" truecount="50005000" num="62" type="cond"/>
            <line num="63" count="50005000" type="stmt"/>
            <line falsecount="73618" truecount="49931382" num="63" type="cond"/>
            <line num="64" count="49931382" type="stmt"/>
            <line num="66" count="73618" type="stmt"/>
            <line num="67" count="73618" type="stmt"/>
            <line falsecount="55672" truecount="17946" num="67" type="cond"/>
            <line num="68" count="17946" type="stmt"/>
            <line num="73" count="10001" type="stmt"/>
            <line complexity="3" visibility="private" signature="expand(List&lt;DoubleVector&gt;,DistanceMeasurer,TIntHashSet,TIntArrayList,List&lt;DoubleVector&gt;,double,int) : void" num="76" count="1" type="method"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line falsecount="1" truecount="17946" num="82" type="cond"/>
            <line num="83" count="17946" type="stmt"/>
            <line num="84" count="17946" type="stmt"/>
            <line falsecount="7947" truecount="9999" num="84" type="cond"/>
            <line num="85" count="9999" type="stmt"/>
            <line num="86" count="9999" type="stmt"/>
            <line num="89" count="9999" type="stmt"/>
            <line num="90" count="9999" type="stmt"/>
            <line num="92" count="9999" type="stmt"/>
            <line complexity="2" visibility="public" signature="findNoise(List&lt;DoubleVector&gt;,List&lt;List&lt;DoubleVector&gt;&gt;) : List&lt;DoubleVector&gt;" num="103" count="1" type="method"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="10001" type="stmt"/>
            <line falsecount="10000" truecount="1" num="112" type="cond"/>
            <line num="113" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/clustering/KMeansClustering.java" name="KMeansClustering.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="21" loc="182" coveredmethods="0" methods="9" elements="88" classes="1" ncloc="108" statements="55" conditionals="24" coveredstatements="0"/>
            <class name="KMeansClustering">
               <metrics coveredelements="0" coveredconditionals="0" complexity="21" coveredmethods="0" methods="9" elements="88" statements="55" conditionals="24" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="KMeansClustering(int,DoubleVector[],boolean)" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="KMeansClustering(int,List&lt;DoubleVector&gt;,boolean)" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="KMeansClustering(List&lt;DoubleVector&gt;,List&lt;DoubleVector&gt;)" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="cluster(int,DistanceMeasurer,double,boolean) : List&lt;Cluster&gt;" num="85" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="109" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getClusteringCost() : double" num="130" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="computeCenters(Deque&lt;DoubleVector&gt;[]) : void" num="134" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="137" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="setupAssignments() : Deque&lt;DoubleVector&gt;[]" num="147" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="assign(DistanceMeasurer,Deque&lt;DoubleVector&gt;[],int) : double" num="156" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="161" type="cond"/>
            <line num="162" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="166" type="cond"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCenters() : DoubleVector[]" num="178" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/clustering/MeanShiftClustering.java" name="MeanShiftClustering.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="22" loc="183" coveredmethods="0" methods="5" elements="96" classes="1" ncloc="118" statements="61" conditionals="30" coveredstatements="0"/>
            <class name="MeanShiftClustering">
               <metrics coveredelements="0" coveredconditionals="0" complexity="22" coveredmethods="0" methods="5" elements="96" statements="61" conditionals="30" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="cluster(List&lt;DoubleVector&gt;,double,double,int,boolean) : List&lt;DoubleVector&gt;" num="49" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="merge(List&lt;DoubleVector&gt;,double) : void" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="meanShift(KDTree&lt;Integer&gt;,List&lt;DoubleVector&gt;,double) : int" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="127" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="8" visibility="private" signature="observeCenters(KDTree&lt;Integer&gt;,List&lt;DoubleVector&gt;,double,boolean) : List&lt;DoubleVector&gt;" num="140" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="147" type="cond"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="154" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="162" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="165" type="cond"/>
            <line num="166" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="gaussianGradient(double) : double" num="179" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/clustering/OnePassExclusiveClustering.java" name="OnePassExclusiveClustering.java">
            <metrics coveredelements="40" coveredconditionals="9" complexity="14" loc="131" coveredmethods="2" methods="3" elements="63" classes="1" ncloc="83" statements="42" conditionals="18" coveredstatements="29"/>
            <class name="OnePassExclusiveClustering">
               <metrics coveredelements="40" coveredconditionals="9" complexity="14" coveredmethods="2" methods="3" elements="63" statements="42" conditionals="18" coveredstatements="29"/>
            </class>
            <line complexity="1" visibility="public" signature="OnePassExclusiveClustering(double)" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="OnePassExclusiveClustering(double,int,int,boolean)" num="55" count="1" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="12" visibility="public" signature="cluster(List&lt;DoubleVector&gt;,boolean) : List&lt;DoubleVector&gt;" num="69" count="1" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line falsecount="1" truecount="10000" num="81" type="cond"/>
            <line num="82" count="10000" type="stmt"/>
            <line falsecount="3623" truecount="6377" num="82" type="cond"/>
            <line num="83" count="6377" type="stmt"/>
            <line num="84" count="6377" type="stmt"/>
            <line num="85" count="6377" type="stmt"/>
            <line num="87" count="6377" type="stmt"/>
            <line num="88" count="6377" type="stmt"/>
            <line num="89" count="208464" type="stmt"/>
            <line falsecount="204741" truecount="3723" num="89" type="cond"/>
            <line num="90" count="3723" type="stmt"/>
            <line num="91" count="3723" type="stmt"/>
            <line num="92" count="3723" type="stmt"/>
            <line num="96" count="6377" type="stmt"/>
            <line falsecount="0" truecount="6377" num="96" type="cond"/>
            <line num="97" count="6377" type="stmt"/>
            <line num="98" count="6377" type="stmt"/>
            <line falsecount="6377" truecount="0" num="98" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="116" count="6377" type="stmt"/>
            <line num="119" count="6377" type="stmt"/>
            <line num="121" count="10000" type="stmt"/>
            <line num="122" count="10000" type="stmt"/>
            <line falsecount="10000" truecount="0" num="122" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/clustering/AgglomerativeClusteringTest.java" name="AgglomerativeClusteringTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="73" coveredmethods="0" methods="2" elements="49" classes="1" ncloc="62" statements="39" conditionals="8" coveredstatements="0"/>
            <class name="AgglomerativeClusteringTest">
               <metrics coveredelements="0" complexity="6" methods="2" testruns="1" statements="39" coveredconditionals="0" coveredmethods="0" elements="49" testfailures="1" testduration="0.068" conditionals="8" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testClustering() : void" num="17" testsuccess="false" count="0" testduration="0.068" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line num="20" count="0" type="stmt"/>
            <line num="21" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="traverse(ClusterNode,int,HashMultimap&lt;Integer, double[]&gt;) : void" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/clustering/CanopyClusteringTest.java" name="CanopyClusteringTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="41" coveredmethods="0" methods="1" elements="18" classes="1" ncloc="30" statements="13" conditionals="4" coveredstatements="0"/>
            <class name="CanopyClusteringTest">
               <metrics coveredelements="0" complexity="3" methods="1" testruns="1" statements="13" coveredconditionals="0" coveredmethods="0" elements="18" testfailures="1" testduration="0.077" conditionals="4" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="3" visibility="public" signature="testCanopyClustering() : void" num="15" testsuccess="false" count="0" testduration="0.077" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
            <line num="20" count="0" type="stmt"/>
            <line num="21" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="30" type="cond"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="32" type="cond"/>
            <line num="33" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/clustering/DBSCANClusteringTest.java" name="DBSCANClusteringTest.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="1" loc="35" coveredmethods="1" methods="1" elements="10" classes="1" ncloc="22" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="DBSCANClusteringTest">
               <metrics coveredelements="10" complexity="1" methods="1" testruns="1" statements="9" coveredconditionals="0" coveredmethods="1" elements="10" testfailures="0" testduration="2.701" conditionals="0" coveredstatements="9" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testDBSCAN() : void" num="14" testsuccess="true" count="1" testduration="2.701" type="method"/>
            <line num="16" count="1" type="stmt"/>
            <line num="18" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/clustering/DBSCANTest.java" name="DBSCANTest.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="1" loc="37" coveredmethods="1" methods="1" elements="11" classes="1" ncloc="24" statements="10" conditionals="0" coveredstatements="10"/>
            <class name="DBSCANTest">
               <metrics coveredelements="11" complexity="1" methods="1" testruns="1" statements="10" coveredconditionals="0" coveredmethods="1" elements="11" testfailures="0" testduration="0.041" conditionals="0" coveredstatements="10" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testDBSCAN() : void" num="15" testsuccess="true" count="1" testduration="0.041" type="method"/>
            <line num="17" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/clustering/KMeansClusteringTest.java" name="KMeansClusteringTest.java">
            <metrics coveredelements="12" coveredconditionals="4" complexity="5" loc="62" coveredmethods="2" methods="3" elements="33" classes="1" ncloc="48" statements="26" conditionals="4" coveredstatements="6"/>
            <class name="KMeansClusteringTest">
               <metrics coveredelements="12" complexity="5" methods="3" testruns="1" statements="26" coveredconditionals="4" coveredmethods="2" elements="33" testfailures="1" testduration="0.069" conditionals="4" coveredstatements="6" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testKMeansClustering() : void" num="16" testsuccess="false" count="0" testduration="0.069" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line num="20" count="0" type="stmt"/>
            <line num="21" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getClusteringInput() : ArrayList&lt;DoubleVector&gt;" num="46" count="4" type="method"/>
            <line num="49" count="4" type="stmt"/>
            <line complexity="3" visibility="public" signature="getClusteringInput(int,int) : ArrayList&lt;DoubleVector&gt;" num="52" count="5" type="method"/>
            <line num="53" count="5" type="stmt"/>
            <line num="54" count="5" type="stmt"/>
            <line falsecount="5" truecount="410" num="54" type="cond"/>
            <line num="55" count="410" type="stmt"/>
            <line falsecount="410" truecount="40100" num="55" type="cond"/>
            <line num="56" count="40100" type="stmt"/>
            <line num="59" count="5" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/clustering/MeanShiftClusteringTest.java" name="MeanShiftClusteringTest.java">
            <metrics coveredelements="34" coveredconditionals="4" complexity="5" loc="80" coveredmethods="3" methods="3" elements="37" classes="1" ncloc="68" statements="30" conditionals="4" coveredstatements="27"/>
            <class name="MeanShiftClusteringTest">
               <metrics coveredelements="34" complexity="5" methods="3" testruns="1" statements="30" coveredconditionals="4" coveredmethods="3" elements="37" testfailures="0" testduration="0.039" conditionals="4" coveredstatements="27" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testKDLookup() : void" num="24" testsuccess="true" count="1" testduration="0.039" type="method"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="50" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMeanShiftClustering() : void" num="47" count="1" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="drawTwoDistinctDistributions(HashSet&lt;DoubleVector&gt;,long) : List&lt;DoubleVector&gt;" num="57" count="2" type="method"/>
            <line num="59" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line num="63" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line falsecount="2" truecount="100" num="64" type="cond"/>
            <line num="65" count="100" type="stmt"/>
            <line num="66" count="100" type="stmt"/>
            <line num="67" count="100" type="stmt"/>
            <line num="68" count="100" type="stmt"/>
            <line num="69" count="100" type="stmt"/>
            <line num="71" count="100" type="stmt"/>
            <line num="72" count="100" type="stmt"/>
            <line falsecount="50" truecount="50" num="72" type="cond"/>
            <line num="73" count="50" type="stmt"/>
            <line num="75" count="100" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/clustering/OnePassExclusiveClusteringTest.java" name="OnePassExclusiveClusteringTest.java">
            <metrics coveredelements="18" coveredconditionals="4" complexity="3" loc="41" coveredmethods="1" methods="1" elements="18" classes="1" ncloc="30" statements="13" conditionals="4" coveredstatements="13"/>
            <class name="OnePassExclusiveClusteringTest">
               <metrics coveredelements="18" complexity="3" methods="1" testruns="1" statements="13" coveredconditionals="4" coveredmethods="1" elements="18" testfailures="0" testduration="3.483" conditionals="4" coveredstatements="13" testpasses="1"/>
            </class>
            <line complexity="3" visibility="public" signature="testClustering() : void" num="15" testsuccess="true" count="1" testduration="3.483" type="method"/>
            <line num="18" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="29" count="6377" type="stmt"/>
            <line num="30" count="6377" type="stmt"/>
            <line falsecount="6377" truecount="22873309" num="30" type="cond"/>
            <line num="31" count="22873309" type="stmt"/>
            <line num="32" count="22873309" type="stmt"/>
            <line falsecount="22863309" truecount="10000" num="32" type="cond"/>
            <line num="33" count="10000" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
         </file>
      </package>
      <package name="de.jungblut.classification.bayes">
         <metrics coveredelements="147" complexity="34" loc="322" methods="16" classes="2" statements="111" coveredconditionals="23" coveredmethods="15" elements="155" ncloc="227" files="2" conditionals="28" coveredstatements="109"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/classification/bayes/MultinomialNaiveBayes.java" name="MultinomialNaiveBayes.java">
            <metrics coveredelements="103" coveredconditionals="19" complexity="24" loc="228" coveredmethods="11" methods="12" elements="111" classes="1" ncloc="151" statements="75" conditionals="24" coveredstatements="73"/>
            <class name="MultinomialNaiveBayes">
               <metrics coveredelements="103" coveredconditionals="19" complexity="24" coveredmethods="11" methods="12" elements="111" statements="75" conditionals="24" coveredstatements="73"/>
            </class>
            <line complexity="1" visibility="public" signature="MultinomialNaiveBayes()" num="41" count="2" type="method"/>
            <line complexity="1" visibility="public" signature="MultinomialNaiveBayes(boolean)" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="MultinomialNaiveBayes(DoubleMatrix,DoubleVector)" num="59" count="1" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="7" visibility="public" signature="train(Iterable&lt;DoubleVector&gt;,Iterable&lt;DoubleVector&gt;) : void" num="66" count="2" type="method"/>
            <line num="70" count="2" type="stmt"/>
            <line num="71" count="2" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="77" type="cond"/>
            <line num="80" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="8" type="stmt"/>
            <line num="94" count="8" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line falsecount="2" truecount="4" num="99" type="cond"/>
            <line num="101" count="4" type="stmt"/>
            <line num="104" count="4" type="stmt"/>
            <line num="105" count="4" type="stmt"/>
            <line num="107" count="4" type="stmt"/>
            <line falsecount="4" truecount="10" num="107" type="cond"/>
            <line num="108" count="10" type="stmt"/>
            <line num="109" count="10" type="stmt"/>
            <line num="110" count="10" type="stmt"/>
            <line num="111" count="10" type="stmt"/>
            <line num="113" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="113" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="119" count="2" type="stmt"/>
            <line num="120" count="2" type="stmt"/>
            <line falsecount="2" truecount="4" num="120" type="cond"/>
            <line num="121" count="4" type="stmt"/>
            <line num="123" count="4" type="stmt"/>
            <line complexity="3" visibility="private" signature="observe(DoubleVector,DoubleVector,int,int[],int[]) : void" num="127" count="10" type="method"/>
            <line num="129" count="10" type="stmt"/>
            <line num="130" count="10" type="stmt"/>
            <line falsecount="0" truecount="10" num="130" type="cond"/>
            <line num="131" count="10" type="stmt"/>
            <line num="133" count="10" type="stmt"/>
            <line num="134" count="10" type="stmt"/>
            <line num="136" count="10" type="stmt"/>
            <line num="137" count="10" type="stmt"/>
            <line falsecount="10" truecount="18" num="137" type="cond"/>
            <line num="138" count="18" type="stmt"/>
            <line num="139" count="18" type="stmt"/>
            <line num="141" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="predict(DoubleVector) : DoubleVector" num="146" count="4" type="method"/>
            <line num="148" count="4" type="stmt"/>
            <line complexity="3" visibility="private" signature="getProbabilityForClass(DoubleVector,int) : double" num="151" count="8" type="method"/>
            <line num="152" count="8" type="stmt"/>
            <line num="153" count="8" type="stmt"/>
            <line num="154" count="8" type="stmt"/>
            <line falsecount="8" truecount="12" num="154" type="cond"/>
            <line num="155" count="12" type="stmt"/>
            <line num="156" count="12" type="stmt"/>
            <line num="157" count="12" type="stmt"/>
            <line num="159" count="12" type="stmt"/>
            <line falsecount="6" truecount="6" num="159" type="cond"/>
            <line num="160" count="6" type="stmt"/>
            <line num="162" count="12" type="stmt"/>
            <line num="164" count="7" type="stmt"/>
            <line complexity="3" visibility="private" signature="getProbabilityDistribution(DoubleVector) : DenseDoubleVector" num="167" count="4" type="method"/>
            <line num="169" count="4" type="stmt"/>
            <line num="170" count="4" type="stmt"/>
            <line num="172" count="4" type="stmt"/>
            <line falsecount="4" truecount="8" num="172" type="cond"/>
            <line num="173" count="8" type="stmt"/>
            <line num="174" count="8" type="stmt"/>
            <line num="177" count="4" type="stmt"/>
            <line num="178" count="4" type="stmt"/>
            <line num="180" count="4" type="stmt"/>
            <line falsecount="4" truecount="7" num="180" type="cond"/>
            <line num="181" count="8" type="stmt"/>
            <line num="182" count="7" type="stmt"/>
            <line num="184" count="8" type="stmt"/>
            <line num="185" count="8" type="stmt"/>
            <line num="189" count="4" type="stmt"/>
            <line num="191" count="4" type="stmt"/>
            <line complexity="1" visibility="package" signature="getClassProbability() : DoubleVector" num="197" count="2" type="method"/>
            <line num="198" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="getProbabilityMatrix() : DoubleMatrix" num="204" count="2" type="method"/>
            <line num="205" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(DataInput) : MultinomialNaiveBayes" num="212" count="1" type="method"/>
            <line num="214" count="1" type="stmt"/>
            <line num="215" count="1" type="stmt"/>
            <line num="216" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(MultinomialNaiveBayes,DataOutput) : void" num="222" count="1" type="method"/>
            <line num="224" count="1" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/classification/bayes/MultinomialNaiveBayesTest.java" name="MultinomialNaiveBayesTest.java">
            <metrics coveredelements="44" coveredconditionals="4" complexity="10" loc="94" coveredmethods="4" methods="4" elements="44" classes="1" ncloc="76" statements="36" conditionals="4" coveredstatements="36"/>
            <class name="MultinomialNaiveBayesTest">
               <metrics coveredelements="44" complexity="10" methods="4" testruns="1" statements="36" coveredconditionals="4" coveredmethods="4" elements="44" testfailures="0" testduration="0.058" conditionals="4" coveredstatements="36" testpasses="1"/>
            </class>
            <line complexity="5" visibility="public" signature="testSerDe() : void" num="17" count="1" type="method"/>
            <line num="19" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNaiveBayes() : void" num="31" testsuccess="true" count="1" testduration="0.058" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="internalChecks(MultinomialNaiveBayes) : void" num="39" count="2" type="method"/>
            <line num="40" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line num="42" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line num="45" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line falsecount="2" truecount="10" num="52" type="cond"/>
            <line num="53" count="10" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line falsecount="2" truecount="10" num="59" type="cond"/>
            <line num="60" count="10" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line num="67" count="2" type="stmt"/>
            <line num="69" count="2" type="stmt"/>
            <line num="71" count="2" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTrainedClassifier() : MultinomialNaiveBayes" num="75" count="2" type="method"/>
            <line num="76" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line num="90" count="2" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
         </file>
      </package>
      <package name="de.jungblut.math.loss">
         <metrics coveredelements="51" complexity="32" loc="371" methods="22" classes="10" statements="80" coveredconditionals="4" coveredmethods="8" elements="122" ncloc="247" files="10" conditionals="20" coveredstatements="39"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/math/loss/CrossEntropyLoss.java" name="CrossEntropyLoss.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="3" loc="33" coveredmethods="1" methods="3" elements="6" classes="1" ncloc="21" statements="3" conditionals="0" coveredstatements="1"/>
            <class name="CrossEntropyLoss">
               <metrics coveredelements="2" coveredconditionals="0" complexity="3" coveredmethods="1" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="calculateLoss(DoubleMatrix,DoubleMatrix) : double" num="16" count="1" type="method"/>
            <line num="18" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="calculateLoss(DoubleVector,DoubleVector) : double" num="22" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="calculateGradient(DoubleVector,DoubleVector,DoubleVector) : DoubleVector" num="27" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/math/loss/HingeLoss.java" name="HingeLoss.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="42" coveredmethods="0" methods="3" elements="18" classes="1" ncloc="30" statements="11" conditionals="4" coveredstatements="0"/>
            <class name="HingeLoss">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="3" elements="18" statements="11" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="calculateLoss(DoubleMatrix,DoubleMatrix) : double" num="15" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line num="18" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="19" type="cond"/>
            <line num="20" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="calculateLoss(DoubleVector,DoubleVector) : double" num="25" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="calculateGradient(DoubleVector,DoubleVector,DoubleVector) : DoubleVector" num="31" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="36" type="cond"/>
            <line num="37" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/math/loss/LogLoss.java" name="LogLoss.java">
            <metrics coveredelements="18" coveredconditionals="0" complexity="3" loc="49" coveredmethods="2" methods="3" elements="20" classes="1" ncloc="35" statements="17" conditionals="0" coveredstatements="16"/>
            <class name="LogLoss">
               <metrics coveredelements="18" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="20" statements="17" conditionals="0" coveredstatements="16"/>
            </class>
            <line complexity="1" visibility="public" signature="calculateLoss(DoubleMatrix,DoubleMatrix) : double" num="14" count="1" type="method"/>
            <line num="17" count="1" type="stmt"/>
            <line num="18" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="calculateLoss(DoubleVector,DoubleVector) : double" num="30" count="1" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="calculateGradient(DoubleVector,DoubleVector,DoubleVector) : DoubleVector" num="44" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/math/loss/LossFunction.java" name="LossFunction.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="44" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="LossFunction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/math/loss/MeanAbsoluteLoss.java" name="MeanAbsoluteLoss.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="40" coveredmethods="0" methods="3" elements="19" classes="1" ncloc="29" statements="10" conditionals="6" coveredstatements="0"/>
            <class name="MeanAbsoluteLoss">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="3" elements="19" statements="10" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="calculateLoss(DoubleMatrix,DoubleMatrix) : double" num="14" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line num="17" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="17" type="cond"/>
            <line num="18" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="18" type="cond"/>
            <line num="19" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="calculateLoss(DoubleVector,DoubleVector) : double" num="25" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="28" type="cond"/>
            <line num="29" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="calculateGradient(DoubleVector,DoubleVector,DoubleVector) : DoubleVector" num="34" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/math/loss/SquaredLoss.java" name="SquaredLoss.java">
            <metrics coveredelements="11" coveredconditionals="4" complexity="6" loc="43" coveredmethods="1" methods="3" elements="21" classes="1" ncloc="31" statements="12" conditionals="6" coveredstatements="6"/>
            <class name="SquaredLoss">
               <metrics coveredelements="11" coveredconditionals="4" complexity="6" coveredmethods="1" methods="3" elements="21" statements="12" conditionals="6" coveredstatements="6"/>
            </class>
            <line complexity="3" visibility="public" signature="calculateLoss(DoubleMatrix,DoubleMatrix) : double" num="15" count="1" type="method"/>
            <line num="17" count="1" type="stmt"/>
            <line num="18" count="1" type="stmt"/>
            <line falsecount="1" truecount="5" num="18" type="cond"/>
            <line num="19" count="5" type="stmt"/>
            <line falsecount="5" truecount="5" num="19" type="cond"/>
            <line num="20" count="5" type="stmt"/>
            <line num="21" count="5" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="calculateLoss(DoubleVector,DoubleVector) : double" num="27" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="30" type="cond"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="calculateGradient(DoubleVector,DoubleVector,DoubleVector) : DoubleVector" num="37" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/math/loss/StepLoss.java" name="StepLoss.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="47" coveredmethods="0" methods="3" elements="18" classes="1" ncloc="34" statements="11" conditionals="4" coveredstatements="0"/>
            <class name="StepLoss">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="3" elements="18" statements="11" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="calculateLoss(DoubleMatrix,DoubleMatrix) : double" num="20" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="calculateLoss(DoubleVector,DoubleVector) : double" num="25" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="calculateGradient(DoubleVector,DoubleVector,DoubleVector) : DoubleVector" num="30" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="35" type="cond"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="38" type="cond"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/math/loss/CrossEntropyLossTest.java" name="CrossEntropyLossTest.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="1" loc="20" coveredmethods="1" methods="1" elements="5" classes="1" ncloc="16" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="CrossEntropyLossTest">
               <metrics coveredelements="5" complexity="1" methods="1" testruns="1" statements="4" coveredconditionals="0" coveredmethods="1" elements="5" testfailures="0" testduration="0.013" conditionals="0" coveredstatements="4" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testSoftmaxError() : void" num="10" testsuccess="true" count="1" testduration="0.013" type="method"/>
            <line num="12" count="1" type="stmt"/>
            <line num="14" count="1" type="stmt"/>
            <line num="16" count="1" type="stmt"/>
            <line num="17" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/math/loss/LogisticLossTest.java" name="LogisticLossTest.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="2" loc="32" coveredmethods="2" methods="2" elements="10" classes="1" ncloc="26" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="LogisticLossTest">
               <metrics coveredelements="10" complexity="2" methods="2" testruns="1" statements="8" coveredconditionals="0" coveredmethods="2" elements="10" testfailures="0" testduration="0.014" conditionals="0" coveredstatements="8" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testSigmoidErrorMatrix() : void" num="13" count="1" type="method"/>
            <line num="15" count="1" type="stmt"/>
            <line num="17" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSigmoidErrorVector() : void" num="23" testsuccess="true" count="1" testduration="0.014" type="method"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/math/loss/SquaredLossTest.java" name="SquaredLossTest.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="1" loc="21" coveredmethods="1" methods="1" elements="5" classes="1" ncloc="16" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="SquaredLossTest">
               <metrics coveredelements="5" complexity="1" methods="1" testruns="1" statements="4" coveredconditionals="0" coveredmethods="1" elements="5" testfailures="0" testduration="0.008" conditionals="0" coveredstatements="4" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testSmeError() : void" num="11" testsuccess="true" count="1" testduration="0.008" type="method"/>
            <line num="13" count="1" type="stmt"/>
            <line num="15" count="1" type="stmt"/>
            <line num="17" count="1" type="stmt"/>
            <line num="18" count="1" type="stmt"/>
         </file>
      </package>
      <package name="de.jungblut.classification.meta">
         <metrics coveredelements="0" complexity="45" loc="330" methods="20" classes="5" statements="108" coveredconditionals="0" coveredmethods="0" elements="166" ncloc="235" files="2" conditionals="38" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/classification/meta/TrainingSplit.java" name="TrainingSplit.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="26" coveredmethods="0" methods="3" elements="7" classes="1" ncloc="16" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="TrainingSplit">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="TrainingSplit(DoubleVector[],DoubleVector[])" num="13" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
            <line num="15" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTrainFeatures() : DoubleVector[]" num="18" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTrainOutcome() : DoubleVector[]" num="22" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/classification/meta/Voter.java" name="Voter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="42" loc="304" coveredmethods="0" methods="17" elements="159" classes="4" ncloc="219" statements="104" conditionals="38" coveredstatements="0"/>
            <class name="Voter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="40" coveredmethods="0" methods="15" elements="153" statements="100" conditionals="38" coveredstatements="0"/>
            </class>
            <class name="Voter.CombiningType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Voter.SelectionType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Voter.TrainingWorker">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="private" signature="Voter(CombiningType,int,ClassifierFactory&lt;A&gt;)" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="Voter(List&lt;A&gt;)" num="58" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="train(DoubleVector[],DoubleVector[]) : void" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="10" visibility="public" signature="predict(DoubleVector) : DoubleVector" num="112" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="116" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="119" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="142" type="cond"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getClassifier() : Classifier[]" num="154" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="verbose() : Voter&lt;A&gt;" num="161" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="verbose(boolean) : Voter&lt;A&gt;" num="168" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="selectionType(SelectionType) : Voter&lt;A&gt;" num="176" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numThreads(int) : Voter&lt;A&gt;" num="184" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setCombiningType(CombiningType) : Voter&lt;A&gt;" num="192" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="createPredictionHistogram(DoubleVector[],int) : double[]" num="197" count="0" type="method"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="200" type="cond"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="bag(DoubleVector[],DoubleVector[]) : List&lt;TrainingSplit&gt;" num="207" count="0" type="method"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="211" type="cond"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="216" type="cond"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="partition(DoubleVector[],DoubleVector[],boolean) : List&lt;TrainingSplit&gt;" num="227" count="0" type="method"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="231" type="cond"/>
            <line num="232" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="239" type="cond"/>
            <line num="240" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="244" type="cond"/>
            <line num="245" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="249" type="cond"/>
            <line num="250" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(int,CombiningType,ClassifierFactory&lt;K&gt;) : Voter&lt;K&gt;" num="269" count="0" type="method"/>
            <line num="271" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fromTrainedModels(List&lt;K&gt;) : Voter&lt;K&gt;" num="280" count="0" type="method"/>
            <line num="282" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="TrainingWorker(Classifier,TrainingSplit)" num="290" count="0" type="method"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="call() : Boolean" num="295" count="0" type="method"/>
            <line num="298" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
         </file>
      </package>
      <package name="de.jungblut.crawl">
         <metrics coveredelements="0" complexity="69" loc="640" methods="30" classes="10" statements="160" coveredconditionals="0" coveredmethods="0" elements="246" ncloc="408" files="10" conditionals="56" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/crawl/ConsoleResultWriter.java" name="ConsoleResultWriter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="23" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="ConsoleResultWriter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="write(T) : void" num="19" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/crawl/Crawler.java" name="Crawler.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="35" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Crawler">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/crawl/FetchResult.java" name="FetchResult.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="61" coveredmethods="0" methods="6" elements="43" classes="1" ncloc="44" statements="23" conditionals="14" coveredstatements="0"/>
            <class name="FetchResult">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="6" elements="43" statements="23" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="FetchResult(String,HashSet&lt;String&gt;)" num="17" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="hashCode() : int" num="23" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="27" type="cond"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="equals(Object) : boolean" num="31" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="33" type="cond"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="35" type="cond"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="37" type="cond"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="40" type="cond"/>
            <line num="41" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="41" type="cond"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUrl() : String" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOutlinks() : HashSet&lt;String&gt;" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/crawl/FetchResultPersister.java" name="FetchResultPersister.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="18" loc="123" coveredmethods="0" methods="5" elements="60" classes="1" ncloc="86" statements="39" conditionals="16" coveredstatements="0"/>
            <class name="FetchResultPersister">
               <metrics coveredelements="0" coveredconditionals="0" complexity="18" coveredmethods="0" methods="5" elements="60" statements="39" conditionals="16" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="FetchResultPersister(ResultWriter&lt;T&gt;)" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="FetchResultPersister(ResultWriter&lt;T&gt;,Configuration)" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="add(T) : void" num="45" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="46" type="cond"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="stop() : void" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="13" visibility="public" signature="run() : void" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/crawl/FetchThread.java" name="FetchThread.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="40" coveredmethods="0" methods="2" elements="13" classes="1" ncloc="26" statements="9" conditionals="2" coveredstatements="0"/>
            <class name="FetchThread">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="13" statements="9" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="FetchThread(List&lt;String&gt;,Extractor&lt;T&gt;)" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="call() : Set&lt;T&gt;" num="29" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="34" type="cond"/>
            <line num="35" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/crawl/MultithreadedCrawler.java" name="MultithreadedCrawler.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="19" loc="172" coveredmethods="0" methods="5" elements="76" classes="1" ncloc="114" statements="53" conditionals="18" coveredstatements="0"/>
            <class name="MultithreadedCrawler">
               <metrics coveredelements="0" coveredconditionals="0" complexity="19" coveredmethods="0" methods="5" elements="76" statements="53" conditionals="18" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="MultithreadedCrawler(int,int,int,Extractor&lt;T&gt;,ResultWriter&lt;T&gt;)" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MultithreadedCrawler(int,Extractor&lt;T&gt;,ResultWriter&lt;T&gt;)" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setup(int,Extractor&lt;T&gt;,ResultWriter&lt;T&gt;) : void" num="72" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="15" visibility="public" signature="process(String) : void" num="84" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="131" type="cond"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="137" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="153" type="cond"/>
            <line num="154" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="165" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/crawl/ResultWriter.java" name="ResultWriter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="27" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ResultWriter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/crawl/ResultWriterAdapter.java" name="ResultWriterAdapter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="28" coveredmethods="0" methods="3" elements="3" classes="1" ncloc="15" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ResultWriterAdapter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="3" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="open(Configuration) : void" num="13" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="write(T) : void" num="18" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="close() : void" num="23" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/crawl/SequenceFileResultWriter.java" name="SequenceFileResultWriter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="60" coveredmethods="0" methods="5" elements="19" classes="1" ncloc="43" statements="14" conditionals="0" coveredstatements="0"/>
            <class name="SequenceFileResultWriter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="19" statements="14" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="open(Configuration) : void" num="23" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(FetchResult) : void" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOutputPath() : Path" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="asText(Set&lt;String&gt;) : Text" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="close() : void" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/crawl/SequentialCrawler.java" name="SequentialCrawler.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="71" coveredmethods="0" methods="3" elements="30" classes="1" ncloc="50" statements="21" conditionals="6" coveredstatements="0"/>
            <class name="SequentialCrawler">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="3" elements="30" statements="21" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SequentialCrawler(int,Extractor&lt;T&gt;,ResultWriter&lt;T&gt;)" num="26" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setup(int,Extractor&lt;T&gt;,ResultWriter&lt;T&gt;) : void" num="31" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="process(String) : void" num="42" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
         </file>
      </package>
      <package name="de.jungblut.math">
         <metrics coveredelements="269" complexity="89" loc="691" methods="34" classes="4" statements="252" coveredconditionals="58" coveredmethods="28" elements="388" ncloc="476" files="3" conditionals="102" coveredstatements="183"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/math/MathUtils.java" name="MathUtils.java">
            <metrics coveredelements="167" coveredconditionals="44" complexity="54" loc="389" coveredmethods="16" methods="19" elements="215" classes="2" ncloc="250" statements="132" conditionals="64" coveredstatements="107"/>
            <class name="MathUtils">
               <metrics coveredelements="155" coveredconditionals="44" complexity="49" coveredmethods="11" methods="14" elements="203" statements="125" conditionals="64" coveredstatements="100"/>
            </class>
            <class name="MathUtils.PredictionOutcomePair">
               <metrics coveredelements="12" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="12" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="private" signature="MathUtils()" num="26" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="meanNormalizeRows(DoubleMatrix) : Tuple&lt;DoubleMatrix, DoubleVector&gt;" num="34" count="1" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="39" type="cond"/>
            <line num="40" count="3" type="stmt"/>
            <line num="41" count="3" type="stmt"/>
            <line num="42" count="3" type="stmt"/>
            <line falsecount="3" truecount="6" num="42" type="cond"/>
            <line num="43" count="6" type="stmt"/>
            <line num="44" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="44" type="cond"/>
            <line num="45" count="6" type="stmt"/>
            <line num="46" count="6" type="stmt"/>
            <line num="50" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="50" type="cond"/>
            <line num="51" count="3" type="stmt"/>
            <line num="53" count="3" type="stmt"/>
            <line num="54" count="3" type="stmt"/>
            <line falsecount="3" truecount="6" num="54" type="cond"/>
            <line num="55" count="6" type="stmt"/>
            <line num="56" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="56" type="cond"/>
            <line num="57" count="6" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="meanNormalizeColumns(DoubleMatrix) : Tuple3&lt;DoubleMatrix, DoubleVector, DoubleVector&gt;" num="69" count="1" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line falsecount="1" truecount="2" num="76" type="cond"/>
            <line num="77" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line num="79" count="2" type="stmt"/>
            <line num="80" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line falsecount="1" truecount="2" num="84" type="cond"/>
            <line num="85" count="2" type="stmt"/>
            <line num="87" count="2" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="meanNormalizeColumns(Dataset) : Tuple&lt;DoubleVector, DoubleVector&gt;" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="meanNormalizeColumns(Dataset,Predicate&lt;FeatureOutcomePair&gt;) : Tuple&lt;DoubleVector, DoubleVector&gt;" num="113" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="119" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="121" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="131" type="cond"/>
            <line num="132" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="132" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="134" type="cond"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="147" type="cond"/>
            <line num="148" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="148" type="cond"/>
            <line num="150" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="createPolynomials(DenseDoubleMatrix,int) : DenseDoubleMatrix" num="168" count="2" type="method"/>
            <line num="170" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="170" type="cond"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line falsecount="1" truecount="2" num="175" type="cond"/>
            <line num="176" count="2" type="stmt"/>
            <line num="177" count="2" type="stmt"/>
            <line num="178" count="2" type="stmt"/>
            <line falsecount="2" truecount="2" num="178" type="cond"/>
            <line num="179" count="2" type="stmt"/>
            <line num="180" count="2" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="numericalGradient(DoubleVector,CostFunction) : DoubleVector" num="194" count="2" type="method"/>
            <line num="196" count="2" type="stmt"/>
            <line num="197" count="2" type="stmt"/>
            <line num="198" count="2" type="stmt"/>
            <line falsecount="2" truecount="4" num="198" type="cond"/>
            <line num="199" count="4" type="stmt"/>
            <line num="200" count="4" type="stmt"/>
            <line num="201" count="4" type="stmt"/>
            <line num="202" count="4" type="stmt"/>
            <line num="203" count="4" type="stmt"/>
            <line num="204" count="4" type="stmt"/>
            <line num="206" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="logMatrix(DoubleMatrix) : DoubleMatrix" num="213" count="4" type="method"/>
            <line num="214" count="4" type="stmt"/>
            <line num="216" count="4" type="stmt"/>
            <line falsecount="4" truecount="5" num="216" type="cond"/>
            <line num="217" count="5" type="stmt"/>
            <line falsecount="5" truecount="27" num="217" type="cond"/>
            <line num="218" count="27" type="stmt"/>
            <line num="219" count="27" type="stmt"/>
            <line num="222" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="logVector(DoubleVector) : DoubleVector" num="229" count="2" type="method"/>
            <line num="230" count="2" type="stmt"/>
            <line num="231" count="2" type="stmt"/>
            <line falsecount="2" truecount="10" num="231" type="cond"/>
            <line num="232" count="10" type="stmt"/>
            <line num="234" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="minMaxScale(DoubleMatrix,double,double,double,double) : DoubleMatrix" num="247" count="1" type="method"/>
            <line num="249" count="1" type="stmt"/>
            <line num="251" count="1" type="stmt"/>
            <line num="252" count="1" type="stmt"/>
            <line falsecount="1" truecount="2" num="252" type="cond"/>
            <line num="253" count="2" type="stmt"/>
            <line falsecount="2" truecount="4" num="253" type="cond"/>
            <line num="254" count="4" type="stmt"/>
            <line num="258" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="minMaxScale(DoubleVector,double,double,double,double) : DoubleVector" num="271" count="1" type="method"/>
            <line num="273" count="1" type="stmt"/>
            <line num="274" count="1" type="stmt"/>
            <line num="275" count="1" type="stmt"/>
            <line falsecount="1" truecount="2" num="275" type="cond"/>
            <line num="276" count="2" type="stmt"/>
            <line num="278" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="minMaxScale(double,double,double,double,double) : double" num="291" count="7" type="method"/>
            <line num="293" count="7" type="stmt"/>
            <line complexity="5" visibility="public" signature="guardedLogarithm(double) : double" num="299" count="37" type="method"/>
            <line num="300" count="37" type="stmt"/>
            <line falsecount="34" truecount="3" num="300" type="cond"/>
            <line num="301" count="3" type="stmt"/>
            <line num="302" count="34" type="stmt"/>
            <line falsecount="17" truecount="17" num="302" type="cond"/>
            <line num="304" count="17" type="stmt"/>
            <line num="306" count="17" type="stmt"/>
            <line complexity="6" visibility="public" signature="computeAUC(List&lt;PredictionOutcomePair&gt;) : double" num="319" count="2" type="method"/>
            <line num="323" count="2" type="stmt"/>
            <line num="325" count="2" type="stmt"/>
            <line num="326" count="2" type="stmt"/>
            <line num="327" count="2" type="stmt"/>
            <line num="328" count="2000" type="stmt"/>
            <line falsecount="1099" truecount="901" num="328" type="cond"/>
            <line num="329" count="901" type="stmt"/>
            <line num="333" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="333" type="cond"/>
            <line num="334" count="1" type="stmt"/>
            <line num="337" count="1" type="stmt"/>
            <line num="338" count="1" type="stmt"/>
            <line num="339" count="1" type="stmt"/>
            <line num="340" count="1" type="stmt"/>
            <line num="341" count="1" type="stmt"/>
            <line falsecount="1" truecount="1000" num="341" type="cond"/>
            <line num="342" count="1000" type="stmt"/>
            <line num="343" count="1000" type="stmt"/>
            <line num="344" count="1000" type="stmt"/>
            <line falsecount="1000" truecount="0" num="344" type="cond"/>
            <line num="345" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line num="350" count="1000" type="stmt"/>
            <line num="351" count="1000" type="stmt"/>
            <line num="353" count="1" type="stmt"/>
            <line num="354" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="PredictionOutcomePair(int,double)" num="363" count="1999" type="method"/>
            <line num="364" count="1999" type="stmt"/>
            <line num="365" count="1998" type="stmt"/>
            <line complexity="1" visibility="public" signature="from(int,double) : PredictionOutcomePair" num="368" count="1996" type="method"/>
            <line num="369" count="1996" type="stmt"/>
            <line num="371" count="1999" type="stmt"/>
            <line complexity="1" visibility="public" signature="compareTo(PredictionOutcomePair) : int" num="374" count="1998" type="method"/>
            <line num="376" count="1998" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOutcomeClass() : int" num="379" count="3000" type="method"/>
            <line num="380" count="3000" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPrediction() : double" num="383" count="1001" type="method"/>
            <line num="384" count="1001" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/math/ViterbiUtils.java" name="ViterbiUtils.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="16" loc="121" coveredmethods="0" methods="3" elements="71" classes="1" ncloc="75" statements="44" conditionals="24" coveredstatements="0"/>
            <class name="ViterbiUtils">
               <metrics coveredelements="0" coveredconditionals="0" complexity="16" coveredmethods="0" methods="3" elements="71" statements="44" conditionals="24" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="ViterbiUtils()" num="17" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="12" visibility="public" signature="decode(DoubleMatrix,DoubleMatrix,DoubleMatrix,int) : DoubleMatrix" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="3" visibility="package" signature="computeScores(int,DoubleVector,DoubleMatrix) : double[]" num="105" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/math/MathUtilsTest.java" name="MathUtilsTest.java">
            <metrics coveredelements="102" coveredconditionals="14" complexity="19" loc="181" coveredmethods="12" methods="12" elements="102" classes="1" ncloc="151" statements="76" conditionals="14" coveredstatements="76"/>
            <class name="MathUtilsTest">
               <metrics coveredelements="102" complexity="19" methods="12" testruns="1" statements="76" coveredconditionals="14" coveredmethods="12" elements="102" testfailures="0" testduration="0.025" conditionals="14" coveredstatements="76" testpasses="1"/>
            </class>
            <line complexity="2" visibility="public" signature="testMeanNormalizeRows() : void" num="20" testsuccess="true" count="1" testduration="0.025" type="method"/>
            <line num="22" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="30" type="cond"/>
            <line num="31" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMinMaxScale() : void" num="36" count="1" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLogMatrix() : void" num="59" count="1" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testFeatureNormalize() : void" num="74" count="1" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line falsecount="1" truecount="3" num="90" type="cond"/>
            <line num="91" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPolynomials() : void" num="96" count="1" type="method"/>
            <line num="98" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNumericalGradient() : void" num="107" count="1" type="method"/>
            <line num="111" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluateCost(DoubleVector) : CostGradientTuple" num="112" count="10" type="method"/>
            <line num="115" count="10" type="stmt"/>
            <line num="116" count="10" type="stmt"/>
            <line num="119" count="10" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAucComputationAllZeros() : void" num="135" count="1" type="method"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAucComputationAllOnes() : void" num="142" count="1" type="method"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="generateData(int,double) : List&lt;PredictionOutcomePair&gt;" num="149" count="2" type="method"/>
            <line num="152" count="2" type="stmt"/>
            <line num="153" count="2" type="stmt"/>
            <line num="156" count="2" type="stmt"/>
            <line falsecount="2" truecount="1993" num="156" type="cond"/>
            <line num="157" count="1995" type="stmt"/>
            <line falsecount="1097" truecount="901" num="158" type="cond"/>
            <line num="160" count="2" type="stmt"/>
            <line complexity="2" visibility="private" signature="assertSmallDiff(DoubleVector,DoubleVector) : void" num="163" count="12" type="method"/>
            <line num="164" count="12" type="stmt"/>
            <line num="165" count="12" type="stmt"/>
            <line falsecount="12" truecount="25" num="165" type="cond"/>
            <line num="166" count="25" type="stmt"/>
            <line num="167" count="25" type="stmt"/>
            <line complexity="3" visibility="private" signature="assertSmallDiff(DoubleMatrix,DoubleMatrix) : void" num="171" count="1" type="method"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line falsecount="1" truecount="2" num="174" type="cond"/>
            <line num="175" count="2" type="stmt"/>
            <line falsecount="2" truecount="4" num="175" type="cond"/>
            <line num="176" count="4" type="stmt"/>
            <line num="177" count="4" type="stmt"/>
         </file>
      </package>
      <package name="de.jungblut.crawl.extraction">
         <metrics coveredelements="94" complexity="69" loc="580" methods="28" classes="7" statements="180" coveredconditionals="13" coveredmethods="13" elements="260" ncloc="413" files="5" conditionals="52" coveredstatements="68"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/crawl/extraction/ArticleContentExtrator.java" name="ArticleContentExtrator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="132" coveredmethods="0" methods="8" elements="45" classes="2" ncloc="93" statements="33" conditionals="4" coveredstatements="0"/>
            <class name="ArticleContentExtrator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="3" elements="31" statements="24" conditionals="4" coveredstatements="0"/>
            </class>
            <class name="ArticleContentExtrator.ContentFetchResult">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="14" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="7" visibility="public" signature="extract(String) : ContentFetchResult" num="40" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="extractTitle(String) : String" num="73" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ContentFetchResult(String,HashSet&lt;String&gt;)" num="93" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ContentFetchResult(String,HashSet&lt;String&gt;,String,String)" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTitle() : String" num="106" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getText() : String" num="110" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="121" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/crawl/extraction/Extractor.java" name="Extractor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="18" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Extractor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/crawl/extraction/HtmlExtrator.java" name="HtmlExtrator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="72" coveredmethods="0" methods="5" elements="26" classes="2" ncloc="47" statements="17" conditionals="4" coveredstatements="0"/>
            <class name="HtmlExtrator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="1" elements="16" statements="11" conditionals="4" coveredstatements="0"/>
            </class>
            <class name="HtmlExtrator.HtmlFetchResult">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="7" visibility="public" signature="extract(String) : HtmlFetchResult" num="20" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="23" type="cond"/>
            <line num="24" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="35" type="cond"/>
            <line num="37" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="HtmlFetchResult(String,HashSet&lt;String&gt;)" num="51" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="HtmlFetchResult(String,HashSet&lt;String&gt;,String)" num="56" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getHtml() : String" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/crawl/extraction/OutlinkExtractor.java" name="OutlinkExtractor.java">
            <metrics coveredelements="41" coveredconditionals="9" complexity="34" loc="226" coveredmethods="6" methods="8" elements="126" classes="1" ncloc="159" statements="78" conditionals="40" coveredstatements="26"/>
            <class name="OutlinkExtractor">
               <metrics coveredelements="41" coveredconditionals="9" complexity="34" coveredmethods="6" methods="8" elements="126" statements="78" conditionals="40" coveredstatements="26"/>
            </class>
            <line complexity="7" visibility="public" signature="extract(String) : FetchResult" num="46" count="1" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="48" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConnection(String) : InputStream" num="73" count="2" type="method"/>
            <line num="74" count="2" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line num="83" count="2" type="stmt"/>
            <line num="84" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="filter(HashSet&lt;String&gt;,Pattern) : HashSet&lt;String&gt;" num="90" count="1" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="91" type="cond"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line falsecount="1" truecount="4" num="93" type="cond"/>
            <line num="94" count="4" type="stmt"/>
            <line falsecount="3" truecount="1" num="94" type="cond"/>
            <line num="95" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line complexity="13" visibility="public" signature="extractOutlinks(String,String) : HashSet&lt;String&gt;" num="109" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="127" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="141" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="143" type="cond"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="consumeStream(InputStream) : String" num="168" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="174" type="cond"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="182" type="cond"/>
            <line num="184" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="184" type="cond"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="resizeBuffer(ByteBuffer) : ByteBuffer" num="190" count="2" type="method"/>
            <line num="191" count="2" type="stmt"/>
            <line num="193" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="193" type="cond"/>
            <line num="194" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line num="198" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="extractBaseUrl(String) : String" num="207" count="4" type="method"/>
            <line num="208" count="4" type="stmt"/>
            <line num="209" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="209" type="cond"/>
            <line num="210" count="4" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isValid(String) : boolean" num="219" count="12" type="method"/>
            <line num="220" count="12" type="stmt"/>
            <line num="221" count="12" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/crawl/extraction/OutlinkExtractorTest.java" name="OutlinkExtractorTest.java">
            <metrics coveredelements="53" coveredconditionals="4" complexity="9" loc="132" coveredmethods="7" methods="7" elements="63" classes="1" ncloc="109" statements="52" conditionals="4" coveredstatements="42"/>
            <class name="OutlinkExtractorTest">
               <metrics coveredelements="53" complexity="9" methods="7" testruns="1" statements="52" coveredconditionals="4" coveredmethods="7" elements="63" testfailures="0" testduration="0.029" conditionals="4" coveredstatements="42" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testConsumeStream() : void" num="24" count="1" type="method"/>
            <line num="26" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetConnection() : void" num="34" count="1" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExtractBaseUrl() : void" num="41" count="1" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIsValid() : void" num="59" count="1" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFilter() : void" num="82" count="1" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExtraction() : void" num="90" count="1" type="method"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testStreamResize() : void" num="109" testsuccess="true" count="1" testduration="0.029" type="method"/>
            <line num="112" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line falsecount="1" truecount="80" num="116" type="cond"/>
            <line num="117" count="80" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line falsecount="1" truecount="11" num="124" type="cond"/>
            <line num="125" count="11" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
         </file>
      </package>
      <package name="de.jungblut.utils">
         <metrics coveredelements="179" complexity="35" loc="397" methods="29" classes="6" statements="142" coveredconditionals="11" coveredmethods="28" elements="183" ncloc="305" files="6" conditionals="12" coveredstatements="140"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/utils/IntegerFunnel.java" name="IntegerFunnel.java">
            <metrics coveredelements="3" coveredconditionals="0" complexity="1" loc="17" coveredmethods="1" methods="1" elements="3" classes="1" ncloc="12" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="IntegerFunnel">
               <metrics coveredelements="3" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="funnel(Integer,PrimitiveSink) : void" num="11" count="1000100" type="method"/>
            <line num="13" count="1000100" type="stmt"/>
            <line num="14" count="1000100" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/utils/LongFunnel.java" name="LongFunnel.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="17" coveredmethods="0" methods="1" elements="3" classes="1" ncloc="12" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="LongFunnel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="funnel(Long,PrimitiveSink) : void" num="11" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line num="14" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/utils/Statistics.java" name="Statistics.java">
            <metrics coveredelements="93" coveredconditionals="5" complexity="19" loc="181" coveredmethods="16" methods="16" elements="94" classes="1" ncloc="140" statements="72" conditionals="6" coveredstatements="72"/>
            <class name="Statistics">
               <metrics coveredelements="93" coveredconditionals="5" complexity="19" coveredmethods="16" methods="16" elements="94" statements="72" conditionals="6" coveredstatements="72"/>
            </class>
            <line complexity="1" visibility="public" signature="add(double) : void" num="42" count="30" type="method"/>
            <line num="43" count="30" type="stmt"/>
            <line num="44" count="29" type="stmt"/>
            <line num="45" count="29" type="stmt"/>
            <line num="46" count="29" type="stmt"/>
            <line num="47" count="29" type="stmt"/>
            <line num="48" count="29" type="stmt"/>
            <line complexity="4" visibility="public" signature="finalizeComputation() : void" num="54" count="5" type="method"/>
            <line num="55" count="5" type="stmt"/>
            <line falsecount="0" truecount="5" num="55" type="cond"/>
            <line num="56" count="5" type="stmt"/>
            <line num="57" count="5" type="stmt"/>
            <line falsecount="5" truecount="29" num="57" type="cond"/>
            <line num="58" count="29" type="stmt"/>
            <line num="59" count="29" type="stmt"/>
            <line num="60" count="29" type="stmt"/>
            <line num="62" count="5" type="stmt"/>
            <line num="63" count="5" type="stmt"/>
            <line num="65" count="5" type="stmt"/>
            <line num="67" count="5" type="stmt"/>
            <line num="69" count="5" type="stmt"/>
            <line num="70" count="5" type="stmt"/>
            <line num="71" count="5" type="stmt"/>
            <line num="72" count="5" type="stmt"/>
            <line falsecount="4" truecount="1" num="72" type="cond"/>
            <line num="73" count="1" type="stmt"/>
            <line num="75" count="4" type="stmt"/>
            <line num="76" count="4" type="stmt"/>
            <line num="79" count="5" type="stmt"/>
            <line num="80" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(DataOutput) : void" num="83" count="1" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="readFields(DataInput) : void" num="99" count="1" type="method"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMin() : double" num="115" count="8" type="method"/>
            <line num="116" count="8" type="stmt"/>
            <line num="117" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMax() : double" num="120" count="8" type="method"/>
            <line num="121" count="7" type="stmt"/>
            <line num="122" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMedian() : double" num="125" count="10" type="method"/>
            <line num="126" count="10" type="stmt"/>
            <line num="127" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMean() : double" num="130" count="8" type="method"/>
            <line num="131" count="8" type="stmt"/>
            <line num="132" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStandardDeviation() : double" num="135" count="7" type="method"/>
            <line num="136" count="8" type="stmt"/>
            <line num="137" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVariance() : double" num="140" count="8" type="method"/>
            <line num="141" count="8" type="stmt"/>
            <line num="142" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSignalToNoise() : double" num="145" count="8" type="method"/>
            <line num="146" count="8" type="stmt"/>
            <line num="147" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDispersionIndex() : double" num="150" count="8" type="method"/>
            <line num="151" count="8" type="stmt"/>
            <line num="152" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCoefficientOfVariation() : double" num="155" count="8" type="method"/>
            <line num="156" count="8" type="stmt"/>
            <line num="157" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSum() : double" num="160" count="8" type="method"/>
            <line num="161" count="8" type="stmt"/>
            <line num="162" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCount() : int" num="165" count="7" type="method"/>
            <line num="166" count="8" type="stmt"/>
            <line num="167" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="170" count="4" type="method"/>
            <line num="172" count="4" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/de/jungblut/utils/VectorFunnel.java" name="VectorFunnel.java">
            <metrics coveredelements="17" coveredconditionals="6" complexity="4" loc="41" coveredmethods="1" methods="1" elements="17" classes="1" ncloc="26" statements="10" conditionals="6" coveredstatements="10"/>
            <class name="VectorFunnel">
               <metrics coveredelements="17" coveredconditionals="6" complexity="4" coveredmethods="1" methods="1" elements="17" statements="10" conditionals="6" coveredstatements="10"/>
            </class>
            <line complexity="4" visibility="public" signature="funnel(DoubleVector,PrimitiveSink) : void" num="21" count="3" type="method"/>
            <line num="23" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="23" type="cond"/>
            <line num="24" count="2" type="stmt"/>
            <line num="25" count="2" type="stmt"/>
            <line falsecount="2" truecount="8" num="25" type="cond"/>
            <line num="26" count="7" type="stmt"/>
            <line num="27" count="8" type="stmt"/>
            <line num="28" count="8" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line falsecount="1" truecount="2" num="34" type="cond"/>
            <line num="35" count="2" type="stmt"/>
            <line num="36" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/utils/StatisticsTest.java" name="StatisticsTest.java">
            <metrics coveredelements="51" coveredconditionals="0" complexity="7" loc="100" coveredmethods="7" methods="7" elements="51" classes="1" ncloc="82" statements="44" conditionals="0" coveredstatements="44"/>
            <class name="StatisticsTest">
               <metrics coveredelements="51" complexity="7" methods="7" testruns="1" statements="44" coveredconditionals="0" coveredmethods="7" elements="51" testfailures="0" testduration="0.012" conditionals="0" coveredstatements="44" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testStatistics() : void" num="19" count="1" type="method"/>
            <line num="21" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSerDe() : void" num="25" count="1" type="method"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEdgeCases() : void" num="38" count="1" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMedianEven() : void" num="49" count="1" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMedianOdd() : void" num="61" testsuccess="true" count="1" testduration="0.012" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="3" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="createStatistics(double[]) : Statistics" num="73" count="3" type="method"/>
            <line num="74" count="3" type="stmt"/>
            <line num="75" count="3" type="stmt"/>
            <line num="76" count="24" type="stmt"/>
            <line num="78" count="3" type="stmt"/>
            <line num="79" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertStatsCorrect(Statistics) : void" num="82" count="4" type="method"/>
            <line num="83" count="4" type="stmt"/>
            <line num="84" count="4" type="stmt"/>
            <line num="85" count="4" type="stmt"/>
            <line num="86" count="4" type="stmt"/>
            <line num="87" count="4" type="stmt"/>
            <line num="88" count="4" type="stmt"/>
            <line num="89" count="4" type="stmt"/>
            <line num="90" count="4" type="stmt"/>
            <line num="91" count="4" type="stmt"/>
            <line num="92" count="4" type="stmt"/>
            <line num="93" count="4" type="stmt"/>
            <line num="94" count="4" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/de/jungblut/utils/VectorFunnelTest.java" name="VectorFunnelTest.java">
            <metrics coveredelements="15" coveredconditionals="0" complexity="3" loc="41" coveredmethods="3" methods="3" elements="15" classes="1" ncloc="33" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="VectorFunnelTest">
               <metrics coveredelements="15" complexity="3" methods="3" testruns="1" statements="12" coveredconditionals="0" coveredmethods="3" elements="15" testfailures="0" testduration="0.02" conditionals="0" coveredstatements="12" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testDenseFunneling() : void" num="12" testsuccess="true" count="1" testduration="0.02" type="method"/>
            <line num="14" count="1" type="stmt"/>
            <line num="15" count="1" type="stmt"/>
            <line num="16" count="1" type="stmt"/>
            <line num="18" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSparseFunnelingWithDenseData() : void" num="21" count="1" type="method"/>
            <line num="23" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSparseFunneling() : void" num="31" count="1" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
         </file>
      </package>
   </project>
   <testproject name="thomasjungblut-common 2.0.1-SNAPSHOT" timestamp="1594337630160">
      <metrics coveredelements="0" complexity="0" loc="0" methods="0" classes="0" statements="0" packages="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="0" files="0" conditionals="0" coveredstatements="0"/>
   </testproject>
</coverage>