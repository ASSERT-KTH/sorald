<?xml version="1.0" encoding="UTF-8"?>
<coverage generated="1594226319513" clover="4.4.1">
   <project name="ImgLib2 Core Library 5.9.3-SNAPSHOT" timestamp="0">
      <metrics coveredelements="0" complexity="9192" loc="103084" methods="6015" classes="759" statements="19702" packages="57" coveredconditionals="0" coveredmethods="0" elements="31595" ncloc="53851" files="644" conditionals="5878" coveredstatements="0"/>
      <package name="net.imglib2.view.iteration">
         <metrics coveredelements="0" complexity="73" loc="649" methods="36" classes="5" statements="97" coveredconditionals="0" coveredmethods="0" elements="197" ncloc="310" files="3" conditionals="64" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/view/iteration/IterableTransformBuilder.java" name="IterableTransformBuilder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="39" loc="289" coveredmethods="0" methods="17" elements="109" classes="3" ncloc="165" statements="58" conditionals="34" coveredstatements="0"/>
            <class name="IterableTransformBuilder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="24" coveredmethods="0" methods="3" elements="72" statements="37" conditionals="32" coveredstatements="0"/>
            </class>
            <class name="IterableTransformBuilder.SubInterval">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="IterableTransformBuilder.Slice">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="7" elements="21" statements="12" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="getEfficientIterableInterval(Interval,RandomAccessible&lt; S &gt;) : IterableInterval&lt; S &gt;" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="IterableTransformBuilder(Interval,RandomAccessible&lt; T &gt;)" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SubInterval(SubIntervalIterable&lt; T &gt;)" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : long" num="125" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="firstElement() : T" num="131" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterationOrder() : Object" num="137" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt; T &gt;" num="143" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cursor() : Cursor&lt; T &gt;" num="149" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localizingCursor() : Cursor&lt; T &gt;" num="155" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Slice(SubIntervalIterable&lt; T &gt;,Interval,SlicingTransform,boolean)" num="177" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : long" num="187" count="0" type="method"/>
            <line num="190" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="firstElement() : T" num="193" count="0" type="method"/>
            <line num="196" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="iterationOrder() : Object" num="199" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="202" type="cond"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt; T &gt;" num="205" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cursor() : Cursor&lt; T &gt;" num="211" count="0" type="method"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localizingCursor() : Cursor&lt; T &gt;" num="217" count="0" type="method"/>
            <line num="220" count="0" type="stmt"/>
            <line complexity="22" visibility="public" signature="buildIterableInterval() : IterableInterval&lt; T &gt;" num="229" count="0" type="method"/>
            <line num="231" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="231" type="cond"/>
            <line num="233" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="235" type="cond"/>
            <line num="237" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="237" type="cond"/>
            <line num="238" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="240" type="cond"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="252" type="cond"/>
            <line num="253" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="253" type="cond"/>
            <line num="254" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="254" type="cond"/>
            <line num="255" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="259" type="cond"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="262" type="cond"/>
            <line num="263" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="263" type="cond"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="265" type="cond"/>
            <line num="266" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="266" type="cond"/>
            <line num="267" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="270" type="cond"/>
            <line num="273" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="275" type="cond"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="279" type="cond"/>
            <line num="280" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="280" type="cond"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/view/iteration/SlicingCursor.java" name="SlicingCursor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="34" loc="271" coveredmethods="0" methods="19" elements="88" classes="1" ncloc="134" statements="39" conditionals="30" coveredstatements="0"/>
            <class name="SlicingCursor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="34" coveredmethods="0" methods="19" elements="88" statements="39" conditionals="30" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="package" signature="SlicingCursor(Cursor&lt; T &gt;,Slicing)" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="SlicingCursor(SlicingCursor&lt; T &gt;)" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="localize(int[]) : void" num="110" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="localize(long[]) : void" num="121" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getIntPosition(int) : int" num="132" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getLongPosition(int) : long" num="142" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="145" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="localize(float[]) : void" num="152" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="localize(double[]) : void" num="163" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="166" type="cond"/>
            <line num="167" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="167" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFloatPosition(int) : float" num="174" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="177" type="cond"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDoublePosition(int) : double" num="184" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="187" type="cond"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="194" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : SlicingCursor&lt; T &gt;" num="203" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyCursor() : SlicingCursor&lt; T &gt;" num="212" count="0" type="method"/>
            <line num="215" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="jumpFwd(long) : void" num="221" count="0" type="method"/>
            <line num="224" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fwd() : void" num="230" count="0" type="method"/>
            <line num="233" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reset() : void" num="239" count="0" type="method"/>
            <line num="242" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="248" count="0" type="method"/>
            <line num="251" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : T" num="257" count="0" type="method"/>
            <line num="260" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="266" count="0" type="method"/>
            <line num="269" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/view/iteration/SubIntervalIterable.java" name="SubIntervalIterable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="89" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SubIntervalIterable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.imglib2.outofbounds">
         <metrics coveredelements="0" complexity="399" loc="4342" methods="207" classes="26" statements="1239" coveredconditionals="0" coveredmethods="0" elements="1818" ncloc="2587" files="25" conditionals="372" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/outofbounds/AbstractOutOfBoundsMirror.java" name="AbstractOutOfBoundsMirror.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="38" loc="294" coveredmethods="0" methods="24" elements="115" classes="1" ncloc="182" statements="63" conditionals="28" coveredstatements="0"/>
            <class name="AbstractOutOfBoundsMirror">
               <metrics coveredelements="0" coveredconditionals="0" complexity="38" coveredmethods="0" methods="24" elements="115" statements="63" conditionals="28" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="protected" signature="AbstractOutOfBoundsMirror(AbstractOutOfBoundsMirror&lt; T &gt;)" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="98" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="AbstractOutOfBoundsMirror(F)" num="111" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="3" visibility="protected" signature="checkOutOfBounds() : void" num="128" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="130" type="cond"/>
            <line num="132" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="132" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="143" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isOutOfBounds() : boolean" num="151" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="159" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(float[]) : void" num="170" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(double[]) : void" num="177" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="180" type="cond"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(int[]) : void" num="184" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="187" type="cond"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(long[]) : void" num="191" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="194" type="cond"/>
            <line num="195" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatPosition(int) : float" num="198" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDoublePosition(int) : double" num="204" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntPosition(int) : int" num="210" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLongPosition(int) : long" num="216" count="0" type="method"/>
            <line num="219" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(long,int) : void" num="227" count="0" type="method"/>
            <line num="230" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(int,int) : void" num="233" count="0" type="method"/>
            <line num="236" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(Localizable) : void" num="239" count="0" type="method"/>
            <line num="242" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="242" type="cond"/>
            <line num="243" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(int[]) : void" num="246" count="0" type="method"/>
            <line num="249" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="249" type="cond"/>
            <line num="250" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(long[]) : void" num="253" count="0" type="method"/>
            <line num="256" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="256" type="cond"/>
            <line num="257" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(int,int) : void" num="260" count="0" type="method"/>
            <line num="263" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(Localizable) : void" num="266" count="0" type="method"/>
            <line num="269" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="269" type="cond"/>
            <line num="270" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(int[]) : void" num="273" count="0" type="method"/>
            <line num="276" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="276" type="cond"/>
            <line num="277" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(long[]) : void" num="280" count="0" type="method"/>
            <line num="283" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="283" type="cond"/>
            <line num="284" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="289" count="0" type="method"/>
            <line num="292" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/outofbounds/AbstractOutOfBoundsValue.java" name="AbstractOutOfBoundsValue.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="37" loc="238" coveredmethods="0" methods="16" elements="133" classes="1" ncloc="168" statements="77" conditionals="40" coveredstatements="0"/>
            <class name="AbstractOutOfBoundsValue">
               <metrics coveredelements="0" coveredconditionals="0" complexity="37" coveredmethods="0" methods="16" elements="133" statements="77" conditionals="40" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="protected" signature="AbstractOutOfBoundsValue(AbstractOutOfBoundsValue&lt; T &gt;)" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractOutOfBoundsValue(F)" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="checkOutOfBounds() : void" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isOutOfBounds() : boolean" num="108" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="fwd(int) : void" num="117" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="127" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="bck(int) : void" num="141" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="148" type="cond"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="154" type="cond"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(long,int) : void" num="162" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(int,int) : void" num="168" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(Localizable) : void" num="174" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="177" type="cond"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(int[]) : void" num="181" count="0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="184" type="cond"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(long[]) : void" num="188" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="191" type="cond"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="setPosition(long,int) : void" num="195" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="199" type="cond"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="201" type="cond"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="205" type="cond"/>
            <line num="206" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(int,int) : void" num="212" count="0" type="method"/>
            <line num="215" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(Localizable) : void" num="218" count="0" type="method"/>
            <line num="221" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="221" type="cond"/>
            <line num="222" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(int[]) : void" num="225" count="0" type="method"/>
            <line num="228" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="228" type="cond"/>
            <line num="229" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(long[]) : void" num="232" count="0" type="method"/>
            <line num="235" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="235" type="cond"/>
            <line num="236" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/outofbounds/Bounded.java" name="Bounded.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="54" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Bounded">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/outofbounds/OutOfBounds.java" name="OutOfBounds.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="48" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="OutOfBounds">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/outofbounds/OutOfBoundsBorder.java" name="OutOfBoundsBorder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="39" loc="280" coveredmethods="0" methods="20" elements="138" classes="1" ncloc="195" statements="80" conditionals="38" coveredstatements="0"/>
            <class name="OutOfBoundsBorder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="39" coveredmethods="0" methods="20" elements="138" statements="80" conditionals="38" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="OutOfBoundsBorder(OutOfBoundsBorder&lt; T &gt;)" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="OutOfBoundsBorder(F)" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="3" visibility="protected" signature="checkOutOfBounds() : void" num="111" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isOutOfBounds() : boolean" num="126" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="134" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : OutOfBoundsBorder&lt; T &gt;" num="140" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRandomAccess() : OutOfBoundsBorder&lt; T &gt;" num="148" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="fwd(int) : void" num="156" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="160" type="cond"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="165" type="cond"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="167" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="bck(int) : void" num="171" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="175" type="cond"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="177" type="cond"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="182" type="cond"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="setPosition(long,int) : void" num="186" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="192" type="cond"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="197" type="cond"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="205" type="cond"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(long,int) : void" num="213" count="0" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(int,int) : void" num="219" count="0" type="method"/>
            <line num="222" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(Localizable) : void" num="225" count="0" type="method"/>
            <line num="228" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="228" type="cond"/>
            <line num="229" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(int[]) : void" num="232" count="0" type="method"/>
            <line num="235" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="235" type="cond"/>
            <line num="236" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(long[]) : void" num="239" count="0" type="method"/>
            <line num="242" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="242" type="cond"/>
            <line num="243" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(int,int) : void" num="246" count="0" type="method"/>
            <line num="249" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(Localizable) : void" num="252" count="0" type="method"/>
            <line num="255" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="255" type="cond"/>
            <line num="256" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(int[]) : void" num="259" count="0" type="method"/>
            <line num="262" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="262" type="cond"/>
            <line num="263" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(long[]) : void" num="266" count="0" type="method"/>
            <line num="269" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="269" type="cond"/>
            <line num="270" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="275" count="0" type="method"/>
            <line num="278" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/outofbounds/OutOfBoundsBorderFactory.java" name="OutOfBoundsBorderFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="51" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="OutOfBoundsBorderFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="create(F) : OutOfBoundsBorder&lt; T &gt;" num="46" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/outofbounds/OutOfBoundsConstantValue.java" name="OutOfBoundsConstantValue.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="102" coveredmethods="0" methods="6" elements="24" classes="1" ncloc="46" statements="14" conditionals="4" coveredstatements="0"/>
            <class name="OutOfBoundsConstantValue">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="6" elements="24" statements="14" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="OutOfBoundsConstantValue(OutOfBoundsConstantValue&lt; T &gt;)" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="OutOfBoundsConstantValue(F,T)" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="get() : T" num="68" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : OutOfBoundsConstantValue&lt; T &gt;" num="77" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRandomAccess() : OutOfBoundsConstantValue&lt; T &gt;" num="85" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="copyIfType(T) : T" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/outofbounds/OutOfBoundsConstantValueFactory.java" name="OutOfBoundsConstantValueFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="73" coveredmethods="0" methods="4" elements="8" classes="1" ncloc="25" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="OutOfBoundsConstantValueFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="OutOfBoundsConstantValueFactory(T)" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(T) : void" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : T" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(F) : OutOfBoundsConstantValue&lt; T &gt;" num="68" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/outofbounds/OutOfBoundsFactory.java" name="OutOfBoundsFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="47" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="OutOfBoundsFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/outofbounds/OutOfBoundsMirrorDoubleBoundary.java" name="OutOfBoundsMirrorDoubleBoundary.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="26" loc="203" coveredmethods="0" methods="7" elements="107" classes="1" ncloc="130" statements="62" conditionals="38" coveredstatements="0"/>
            <class name="OutOfBoundsMirrorDoubleBoundary">
               <metrics coveredelements="0" coveredconditionals="0" complexity="26" coveredmethods="0" methods="7" elements="107" statements="62" conditionals="38" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="OutOfBoundsMirrorDoubleBoundary(OutOfBoundsMirrorDoubleBoundary&lt; T &gt;)" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="OutOfBoundsMirrorDoubleBoundary(F)" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : OutOfBoundsMirrorDoubleBoundary&lt; T &gt;" num="77" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRandomAccess() : OutOfBoundsMirrorDoubleBoundary&lt; T &gt;" num="85" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="fwd(int) : void" num="93" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="100" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="116" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="bck(int) : void" num="123" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="127" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="129" type="cond"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="132" type="cond"/>
            <line num="133" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="137" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="setPosition(long,int) : void" num="153" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="161" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="170" type="cond"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="181" type="cond"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="192" type="cond"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="195" type="cond"/>
            <line num="196" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/outofbounds/OutOfBoundsMirrorExpWindowing.java" name="OutOfBoundsMirrorExpWindowing.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="17" loc="176" coveredmethods="0" methods="7" elements="73" classes="1" ncloc="99" statements="46" conditionals="20" coveredstatements="0"/>
            <class name="OutOfBoundsMirrorExpWindowing">
               <metrics coveredelements="0" coveredconditionals="0" complexity="17" coveredmethods="0" methods="7" elements="73" statements="46" conditionals="20" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="OutOfBoundsMirrorExpWindowing(OutOfBoundsMirrorExpWindowing&lt; T &gt;)" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="OutOfBoundsMirrorExpWindowing(F,int[],float)" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="6" visibility="protected" signature="preComputeWeights(int,int[],float) : float[][]" num="94" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="102" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="get() : T" num="128" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="131" type="cond"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="5" visibility="protected" signature="getWeight(long[]) : float" num="140" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="144" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="149" type="cond"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="151" type="cond"/>
            <line num="152" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : OutOfBoundsMirrorExpWindowing&lt; T &gt;" num="165" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRandomAccess() : OutOfBoundsMirrorExpWindowing&lt; T &gt;" num="171" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/outofbounds/OutOfBoundsMirrorExpWindowingFactory.java" name="OutOfBoundsMirrorExpWindowingFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="21" loc="163" coveredmethods="0" methods="15" elements="54" classes="1" ncloc="96" statements="27" conditionals="12" coveredstatements="0"/>
            <class name="OutOfBoundsMirrorExpWindowingFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="21" coveredmethods="0" methods="15" elements="54" statements="27" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="OutOfBoundsMirrorExpWindowingFactory()" num="61" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="OutOfBoundsMirrorExpWindowingFactory(float)" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="OutOfBoundsMirrorExpWindowingFactory(int)" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="OutOfBoundsMirrorExpWindowingFactory(int[])" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setExponent(float) : void" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExponent() : float" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setMinFadeOutDistance(int) : void" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMinFadeOutDistance() : long" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setCommonFadeOutDistance(int) : void" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCommonFadeOutDistance() : long" num="104" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setCommonRelativeFadeOutDistance(float) : void" num="109" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCommonRelativeFadeOutDistance() : float" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setFadeOutDistance(int[]) : void" num="119" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFadeOutDistance() : int[]" num="124" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="create(F) : OutOfBoundsMirrorExpWindowing&lt; T &gt;" num="129" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="134" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="140" type="cond"/>
            <line num="141" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="145" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="151" type="cond"/>
            <line num="152" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/outofbounds/OutOfBoundsMirrorFactory.java" name="OutOfBoundsMirrorFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="72" coveredmethods="0" methods="2" elements="8" classes="2" ncloc="22" statements="4" conditionals="2" coveredstatements="0"/>
            <class name="OutOfBoundsMirrorFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="8" statements="4" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="OutOfBoundsMirrorFactory.Boundary">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="OutOfBoundsMirrorFactory(Boundary)" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="create(F) : AbstractOutOfBoundsMirror&lt; T &gt;" num="65" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/outofbounds/OutOfBoundsMirrorSingleBoundary.java" name="OutOfBoundsMirrorSingleBoundary.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="27" loc="226" coveredmethods="0" methods="7" elements="113" classes="1" ncloc="149" statements="68" conditionals="38" coveredstatements="0"/>
            <class name="OutOfBoundsMirrorSingleBoundary">
               <metrics coveredelements="0" coveredconditionals="0" complexity="27" coveredmethods="0" methods="7" elements="113" statements="68" conditionals="38" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="OutOfBoundsMirrorSingleBoundary(OutOfBoundsMirrorSingleBoundary&lt; T &gt;)" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="OutOfBoundsMirrorSingleBoundary(F)" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : OutOfBoundsMirrorSingleBoundary&lt; T &gt;" num="78" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRandomAccess() : OutOfBoundsMirrorSingleBoundary&lt; T &gt;" num="86" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="fwd(int) : void" num="94" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="98" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="bck(int) : void" num="130" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="134" type="cond"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="144" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="setPosition(long,int) : void" num="166" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="182" type="cond"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="187" type="cond"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="198" type="cond"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="214" type="cond"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="217" type="cond"/>
            <line num="218" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/outofbounds/OutOfBoundsPeriodic.java" name="OutOfBoundsPeriodic.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="39" loc="311" coveredmethods="0" methods="20" elements="146" classes="1" ncloc="206" statements="88" conditionals="38" coveredstatements="0"/>
            <class name="OutOfBoundsPeriodic">
               <metrics coveredelements="0" coveredconditionals="0" complexity="39" coveredmethods="0" methods="20" elements="146" statements="88" conditionals="38" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="OutOfBoundsPeriodic(OutOfBoundsPeriodic&lt; T &gt;)" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="OutOfBoundsPeriodic(F)" num="113" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="3" visibility="protected" signature="checkOutOfBounds() : void" num="134" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="138" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isOutOfBounds() : boolean" num="149" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="157" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : OutOfBoundsPeriodic&lt; T &gt;" num="163" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRandomAccess() : OutOfBoundsPeriodic&lt; T &gt;" num="171" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="fwd(int) : void" num="179" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="183" type="cond"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="188" type="cond"/>
            <line num="189" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="192" type="cond"/>
            <line num="193" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="bck(int) : void" num="198" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="202" type="cond"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="204" type="cond"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="211" type="cond"/>
            <line num="212" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="setPosition(long,int) : void" num="217" count="0" type="method"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="223" type="cond"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="228" type="cond"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="236" type="cond"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(long,int) : void" num="244" count="0" type="method"/>
            <line num="247" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(int,int) : void" num="250" count="0" type="method"/>
            <line num="253" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(Localizable) : void" num="256" count="0" type="method"/>
            <line num="259" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="259" type="cond"/>
            <line num="260" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(int[]) : void" num="263" count="0" type="method"/>
            <line num="266" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="266" type="cond"/>
            <line num="267" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(long[]) : void" num="270" count="0" type="method"/>
            <line num="273" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="273" type="cond"/>
            <line num="274" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(int,int) : void" num="277" count="0" type="method"/>
            <line num="280" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(Localizable) : void" num="283" count="0" type="method"/>
            <line num="286" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="286" type="cond"/>
            <line num="287" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(int[]) : void" num="290" count="0" type="method"/>
            <line num="293" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="293" type="cond"/>
            <line num="294" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(long[]) : void" num="297" count="0" type="method"/>
            <line num="300" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="300" type="cond"/>
            <line num="301" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="306" count="0" type="method"/>
            <line num="309" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/outofbounds/OutOfBoundsPeriodicFactory.java" name="OutOfBoundsPeriodicFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="55" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="12" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="OutOfBoundsPeriodicFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="create(F) : OutOfBoundsPeriodic&lt; T &gt;" num="50" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/outofbounds/OutOfBoundsRandomValue.java" name="OutOfBoundsRandomValue.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="105" coveredmethods="0" methods="5" elements="25" classes="1" ncloc="49" statements="18" conditionals="2" coveredstatements="0"/>
            <class name="OutOfBoundsRandomValue">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="5" elements="25" statements="18" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="OutOfBoundsRandomValue(OutOfBoundsRandomValue&lt; T &gt;)" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="OutOfBoundsRandomValue(F,T,Random,double,double)" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="get() : T" num="81" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : OutOfBoundsRandomValue&lt; T &gt;" num="92" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRandomAccess() : OutOfBoundsRandomValue&lt; T &gt;" num="100" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/outofbounds/OutOfBoundsRandomValueFactory.java" name="OutOfBoundsRandomValueFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="83" coveredmethods="0" methods="4" elements="12" classes="1" ncloc="33" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="OutOfBoundsRandomValueFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="12" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="OutOfBoundsRandomValueFactory(T,double,double)" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setMinMax(double,double) : void" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setRandom(Random) : void" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(F) : OutOfBoundsRandomValue&lt; T &gt;" num="78" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/outofbounds/RealOutOfBounds.java" name="RealOutOfBounds.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="49" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="RealOutOfBounds">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/outofbounds/RealOutOfBoundsFactory.java" name="RealOutOfBoundsFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="47" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="RealOutOfBoundsFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/outofbounds/RealOutOfBoundsRealRandomAccess.java" name="RealOutOfBoundsRealRandomAccess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="32" loc="269" coveredmethods="0" methods="32" elements="66" classes="1" ncloc="170" statements="34" conditionals="0" coveredstatements="0"/>
            <class name="RealOutOfBoundsRealRandomAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="32" coveredmethods="0" methods="32" elements="66" statements="34" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RealOutOfBoundsRealRandomAccess(RealOutOfBoundsRealRandomAccess&lt; T &gt;)" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RealOutOfBoundsRealRandomAccess(int,RealOutOfBounds&lt; T &gt;)" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isOutOfBounds() : boolean" num="80" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="88" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : RealOutOfBoundsRealRandomAccess&lt; T &gt;" num="94" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRealRandomAccess() : RealOutOfBoundsRealRandomAccess&lt; T &gt;" num="102" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(float[]) : void" num="110" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(double[]) : void" num="116" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDoublePosition(int) : double" num="122" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatPosition(int) : float" num="128" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(float,int) : void" num="136" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(double,int) : void" num="142" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(RealLocalizable) : void" num="148" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(float[]) : void" num="154" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(double[]) : void" num="160" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(RealLocalizable) : void" num="166" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(float[]) : void" num="172" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(double[]) : void" num="178" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(float,int) : void" num="184" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(double,int) : void" num="190" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fwd(int) : void" num="198" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bck(int) : void" num="204" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(int,int) : void" num="210" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(long,int) : void" num="216" count="0" type="method"/>
            <line num="219" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(Localizable) : void" num="222" count="0" type="method"/>
            <line num="225" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(int[]) : void" num="228" count="0" type="method"/>
            <line num="231" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(long[]) : void" num="234" count="0" type="method"/>
            <line num="237" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(Localizable) : void" num="240" count="0" type="method"/>
            <line num="243" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(int[]) : void" num="246" count="0" type="method"/>
            <line num="249" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(long[]) : void" num="252" count="0" type="method"/>
            <line num="255" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(int,int) : void" num="258" count="0" type="method"/>
            <line num="261" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(long,int) : void" num="264" count="0" type="method"/>
            <line num="267" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/outofbounds/OutOfBoundsBorderTest.java" name="OutOfBoundsBorderTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="24" loc="349" coveredmethods="0" methods="9" elements="198" classes="1" ncloc="240" statements="161" conditionals="28" coveredstatements="0"/>
            <class name="OutOfBoundsBorderTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="24" coveredmethods="0" methods="9" elements="198" statements="161" conditionals="28" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUpBeforeClass() : void" num="81" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="tearDownAfterClass() : void" num="88" count="0" type="method"/>
            <line complexity="5" visibility="public" signature="setUp() : void" num="95" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="119" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="143" count="0" type="method"/>
            <line complexity="4" visibility="private" signature="isOutOfBounds(Localizable) : boolean" num="147" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="149" type="cond"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="fwd() : void" num="155" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="165" type="cond"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="187" type="cond"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="209" type="cond"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="bck() : void" num="225" count="0" type="method"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="235" type="cond"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="257" type="cond"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="279" type="cond"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move() : void" num="295" count="0" type="method"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="308" type="cond"/>
            <line num="310" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition() : void" num="324" count="0" type="method"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="332" type="cond"/>
            <line num="334" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/outofbounds/OutOfBoundsMirrorDoubleBoundaryTest.java" name="OutOfBoundsMirrorDoubleBoundaryTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="24" loc="350" coveredmethods="0" methods="9" elements="198" classes="1" ncloc="241" statements="161" conditionals="28" coveredstatements="0"/>
            <class name="OutOfBoundsMirrorDoubleBoundaryTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="24" coveredmethods="0" methods="9" elements="198" statements="161" conditionals="28" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUpBeforeClass() : void" num="81" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="tearDownAfterClass() : void" num="88" count="0" type="method"/>
            <line complexity="5" visibility="public" signature="setUp() : void" num="95" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="119" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="144" count="0" type="method"/>
            <line complexity="4" visibility="private" signature="isOutOfBounds(Localizable) : boolean" num="148" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="151" type="cond"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="fwd() : void" num="156" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="166" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="188" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="210" type="cond"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="bck() : void" num="226" count="0" type="method"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="236" type="cond"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="258" type="cond"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="280" type="cond"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move() : void" num="296" count="0" type="method"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="309" type="cond"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition() : void" num="325" count="0" type="method"/>
            <line num="328" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="333" type="cond"/>
            <line num="335" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/outofbounds/OutOfBoundsMirrorSingleBoundaryTest.java" name="OutOfBoundsMirrorSingleBoundaryTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="24" loc="349" coveredmethods="0" methods="9" elements="198" classes="1" ncloc="241" statements="161" conditionals="28" coveredstatements="0"/>
            <class name="OutOfBoundsMirrorSingleBoundaryTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="24" coveredmethods="0" methods="9" elements="198" statements="161" conditionals="28" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUpBeforeClass() : void" num="81" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="tearDownAfterClass() : void" num="88" count="0" type="method"/>
            <line complexity="5" visibility="public" signature="setUp() : void" num="95" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="119" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="143" count="0" type="method"/>
            <line complexity="4" visibility="private" signature="isOutOfBounds(Localizable) : boolean" num="147" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="149" type="cond"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="fwd() : void" num="155" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="165" type="cond"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="187" type="cond"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="209" type="cond"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="bck() : void" num="225" count="0" type="method"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="235" type="cond"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="257" type="cond"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="279" type="cond"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move() : void" num="295" count="0" type="method"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="308" type="cond"/>
            <line num="310" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition() : void" num="324" count="0" type="method"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="332" type="cond"/>
            <line num="334" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/outofbounds/OutOfBoundsPeriodicTest.java" name="OutOfBoundsPeriodicTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="24" loc="348" coveredmethods="0" methods="9" elements="198" classes="1" ncloc="240" statements="161" conditionals="28" coveredstatements="0"/>
            <class name="OutOfBoundsPeriodicTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="24" coveredmethods="0" methods="9" elements="198" statements="161" conditionals="28" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUpBeforeClass() : void" num="80" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="tearDownAfterClass() : void" num="87" count="0" type="method"/>
            <line complexity="5" visibility="public" signature="setUp() : void" num="94" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="142" count="0" type="method"/>
            <line complexity="4" visibility="private" signature="isOutOfBounds(Localizable) : boolean" num="146" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="148" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="149" type="cond"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="fwd() : void" num="154" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="186" type="cond"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="208" type="cond"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="bck() : void" num="224" count="0" type="method"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="234" type="cond"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="256" type="cond"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="278" type="cond"/>
            <line num="280" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move() : void" num="294" count="0" type="method"/>
            <line num="297" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="307" type="cond"/>
            <line num="309" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition() : void" num="323" count="0" type="method"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="331" type="cond"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.transform.integer">
         <metrics coveredelements="0" complexity="335" loc="2293" methods="131" classes="13" statements="400" coveredconditionals="0" coveredmethods="0" elements="939" ncloc="1219" files="12" conditionals="408" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/transform/integer/AbstractMixedTransform.java" name="AbstractMixedTransform.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="22" loc="144" coveredmethods="0" methods="12" elements="58" classes="1" ncloc="85" statements="26" conditionals="20" coveredstatements="0"/>
            <class name="AbstractMixedTransform">
               <metrics coveredelements="0" coveredconditionals="0" complexity="22" coveredmethods="0" methods="12" elements="58" statements="26" conditionals="20" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="AbstractMixedTransform(int)" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numSourceDimensions() : int" num="53" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numTargetDimensions() : int" num="59" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getTranslation(long[]) : void" num="65" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTranslation(int) : long" num="74" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getComponentZero(boolean[]) : void" num="80" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getComponentZero(int) : boolean" num="89" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getComponentMapping(int[]) : void" num="95" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="98" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="100" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getComponentMapping(int) : int" num="104" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getComponentInversion(boolean[]) : void" num="110" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getComponentInversion(int) : boolean" num="119" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="transform(BoundingBox) : BoundingBox" num="125" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="130" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="130" type="cond"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/transform/integer/BoundingBox.java" name="BoundingBox.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="121" coveredmethods="0" methods="8" elements="45" classes="1" ncloc="63" statements="23" conditionals="14" coveredstatements="0"/>
            <class name="BoundingBox">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="8" elements="45" statements="23" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="BoundingBox(int)" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="BoundingBox(long[],long[])" num="59" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BoundingBox(Interval)" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="corner1(long[]) : void" num="82" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="corner2(long[]) : void" num="89" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="orderMinMax() : void" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="102" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInterval() : Interval" num="116" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/transform/integer/BoundingBoxTransform.java" name="BoundingBoxTransform.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="54" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="BoundingBoxTransform">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/transform/integer/ComponentMapping.java" name="ComponentMapping.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="53" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ComponentMapping">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/transform/integer/ComponentMappingTransform.java" name="ComponentMappingTransform.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="33" loc="200" coveredmethods="0" methods="13" elements="85" classes="1" ncloc="103" statements="32" conditionals="40" coveredstatements="0"/>
            <class name="ComponentMappingTransform">
               <metrics coveredelements="0" coveredconditionals="0" complexity="33" coveredmethods="0" methods="13" elements="85" statements="32" conditionals="40" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="ComponentMappingTransform(int)" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ComponentMappingTransform(int[])" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getComponentMapping(int[]) : void" num="84" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getComponentMapping(int) : int" num="92" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="setComponentMapping(int[]) : void" num="111" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMatrix() : double[][]" num="118" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="apply(long[],long[]) : void" num="133" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line falsecount="0" truecount="0" num="137" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="apply(int[],int[]) : void" num="143" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line falsecount="0" truecount="0" num="147" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="149" type="cond"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="apply(Localizable,Positionable) : void" num="153" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line falsecount="0" truecount="0" num="157" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="159" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="concatenate(ComponentMapping) : ComponentMappingTransform" num="163" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="166" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="170" type="cond"/>
            <line num="171" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConcatenableClass() : Class&lt; ComponentMapping &gt;" num="176" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="preConcatenate(ComponentMapping) : ComponentMappingTransform" num="182" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="185" type="cond"/>
            <line num="187" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="189" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPreConcatenableClass() : Class&lt; ComponentMapping &gt;" num="195" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/transform/integer/Mixed.java" name="Mixed.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="155" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="14" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Mixed">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/transform/integer/MixedTransform.java" name="MixedTransform.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="84" loc="509" coveredmethods="0" methods="25" elements="261" classes="1" ncloc="317" statements="118" conditionals="118" coveredstatements="0"/>
            <class name="MixedTransform">
               <metrics coveredelements="0" coveredconditionals="0" complexity="84" coveredmethods="0" methods="25" elements="261" statements="118" conditionals="118" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="MixedTransform(int,int)" num="103" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numSourceDimensions() : int" num="125" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getTranslation(long[]) : void" num="131" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="134" type="cond"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getTranslation(int) : long" num="139" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="142" type="cond"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="setTranslation(long[]) : void" num="146" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="148" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="149" type="cond"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="setInverseTranslation(long[]) : void" num="153" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getComponentZero(boolean[]) : void" num="160" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="164" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getComponentZero(int) : boolean" num="170" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="setComponentZero(boolean[]) : void" num="191" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="193" type="cond"/>
            <line num="194" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="194" type="cond"/>
            <line num="196" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getComponentMapping(int[]) : void" num="200" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="203" type="cond"/>
            <line num="204" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="204" type="cond"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getComponentMapping(int) : int" num="210" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="213" type="cond"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="setComponentMapping(int[]) : void" num="238" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="240" type="cond"/>
            <line num="241" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="241" type="cond"/>
            <line num="243" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getComponentInversion(boolean[]) : void" num="247" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="250" type="cond"/>
            <line num="251" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="251" type="cond"/>
            <line num="253" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getComponentInversion(int) : boolean" num="257" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="260" type="cond"/>
            <line num="261" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="setComponentInversion(boolean[]) : void" num="278" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="280" type="cond"/>
            <line num="281" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="281" type="cond"/>
            <line num="283" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="apply(long[],long[]) : void" num="287" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="290" type="cond"/>
            <line falsecount="0" truecount="0" num="291" type="cond"/>
            <line num="293" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="293" type="cond"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="296" type="cond"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="299" type="cond"/>
            <line num="300" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="apply(int[],int[]) : void" num="307" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="310" type="cond"/>
            <line falsecount="0" truecount="0" num="311" type="cond"/>
            <line num="313" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="313" type="cond"/>
            <line num="315" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="316" type="cond"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="319" type="cond"/>
            <line num="320" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="apply(Localizable,Positionable) : void" num="327" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="330" type="cond"/>
            <line falsecount="0" truecount="0" num="331" type="cond"/>
            <line num="333" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="333" type="cond"/>
            <line num="335" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="336" type="cond"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="339" type="cond"/>
            <line num="340" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="concatenate(Mixed) : MixedTransform" num="348" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="351" type="cond"/>
            <line num="353" count="0" type="stmt"/>
            <line num="355" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="355" type="cond"/>
            <line num="357" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="358" type="cond"/>
            <line num="360" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="368" type="cond"/>
            <line num="369" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line num="373" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="373" type="cond"/>
            <line num="375" count="0" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConcatenableClass() : Class&lt; Mixed &gt;" num="390" count="0" type="method"/>
            <line num="393" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="preConcatenate(Mixed) : MixedTransform" num="396" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="399" type="cond"/>
            <line num="401" count="0" type="stmt"/>
            <line num="403" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="403" type="cond"/>
            <line num="405" count="0" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="406" type="cond"/>
            <line num="408" count="0" type="stmt"/>
            <line num="409" count="0" type="stmt"/>
            <line num="410" count="0" type="stmt"/>
            <line num="414" count="0" type="stmt"/>
            <line num="415" count="0" type="stmt"/>
            <line num="416" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="416" type="cond"/>
            <line num="417" count="0" type="stmt"/>
            <line num="419" count="0" type="stmt"/>
            <line num="421" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="421" type="cond"/>
            <line num="423" count="0" type="stmt"/>
            <line num="424" count="0" type="stmt"/>
            <line num="425" count="0" type="stmt"/>
            <line num="429" count="0" type="stmt"/>
            <line num="430" count="0" type="stmt"/>
            <line num="431" count="0" type="stmt"/>
            <line num="435" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPreConcatenableClass() : Class&lt; Mixed &gt;" num="438" count="0" type="method"/>
            <line num="441" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="set(Mixed) : void" num="449" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="451" type="cond"/>
            <line falsecount="0" truecount="0" num="452" type="cond"/>
            <line num="454" count="0" type="stmt"/>
            <line num="455" count="0" type="stmt"/>
            <line num="456" count="0" type="stmt"/>
            <line num="457" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getMatrix() : double[][]" num="464" count="0" type="method"/>
            <line num="467" count="0" type="stmt"/>
            <line num="469" count="0" type="stmt"/>
            <line num="471" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="471" type="cond"/>
            <line num="473" count="0" type="stmt"/>
            <line num="476" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="476" type="cond"/>
            <line num="478" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="478" type="cond"/>
            <line num="480" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="480" type="cond"/>
            <line num="484" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="hasFullSourceMapping() : boolean" num="493" count="0" type="method"/>
            <line num="495" count="0" type="stmt"/>
            <line num="496" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="496" type="cond"/>
            <line num="498" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="498" type="cond"/>
            <line num="500" count="0" type="stmt"/>
            <line num="503" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="503" type="cond"/>
            <line num="505" count="0" type="stmt"/>
            <line num="505" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="505" type="cond"/>
            <line num="507" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/transform/integer/SequentializeTransform.java" name="SequentializeTransform.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="45" loc="253" coveredmethods="0" methods="19" elements="133" classes="1" ncloc="173" statements="62" conditionals="52" coveredstatements="0"/>
            <class name="SequentializeTransform">
               <metrics coveredelements="0" coveredconditionals="0" complexity="45" coveredmethods="0" methods="19" elements="133" statements="62" conditionals="52" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="SequentializeTransform(long[],int)" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numSourceDimensions() : int" num="84" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numTargetDimensions() : int" num="90" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(long[],long[]) : void" num="96" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(int[],int[]) : void" num="102" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Localizable,Positionable) : void" num="108" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyInverse(long[],long[]) : void" num="114" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyInverse(int[],int[]) : void" num="120" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyInverse(Positionable,Localizable) : void" num="126" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inverse() : InvertibleTransform" num="132" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numSourceDimensions() : int" num="140" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numTargetDimensions() : int" num="146" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="apply(long[],long[]) : void" num="152" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="161" type="cond"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="apply(int[],int[]) : void" num="166" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="169" type="cond"/>
            <line falsecount="0" truecount="0" num="170" type="cond"/>
            <line num="172" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="172" type="cond"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="175" type="cond"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="apply(Localizable,Positionable) : void" num="180" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="183" type="cond"/>
            <line falsecount="0" truecount="0" num="184" type="cond"/>
            <line num="186" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="186" type="cond"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="189" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="applyInverse(long[],long[]) : void" num="194" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="197" type="cond"/>
            <line falsecount="0" truecount="0" num="198" type="cond"/>
            <line num="200" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="200" type="cond"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="203" type="cond"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="applyInverse(int[],int[]) : void" num="212" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="215" type="cond"/>
            <line falsecount="0" truecount="0" num="216" type="cond"/>
            <line num="218" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="218" type="cond"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="221" type="cond"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="applyInverse(Positionable,Localizable) : void" num="230" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="233" type="cond"/>
            <line falsecount="0" truecount="0" num="234" type="cond"/>
            <line num="236" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="236" type="cond"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="239" type="cond"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inverse() : InvertibleTransform" num="248" count="0" type="method"/>
            <line num="251" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/transform/integer/Slicing.java" name="Slicing.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="42" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Slicing">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/transform/integer/SlicingTransform.java" name="SlicingTransform.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="70" loc="392" coveredmethods="0" methods="21" elements="196" classes="1" ncloc="223" statements="77" conditionals="98" coveredstatements="0"/>
            <class name="SlicingTransform">
               <metrics coveredelements="0" coveredconditionals="0" complexity="70" coveredmethods="0" methods="21" elements="196" statements="77" conditionals="98" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="SlicingTransform(int,int)" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numSourceDimensions() : int" num="121" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getTranslation(long[]) : void" num="127" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="130" type="cond"/>
            <line num="131" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="131" type="cond"/>
            <line num="132" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="132" type="cond"/>
            <line complexity="3" visibility="public" signature="getTranslation(int) : long" num="135" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="138" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line complexity="3" visibility="public" signature="setTranslation(long[]) : void" num="142" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="144" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="145" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getComponentZero(boolean[]) : void" num="149" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="152" type="cond"/>
            <line num="153" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="153" type="cond"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getComponentZero(int) : boolean" num="157" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="160" type="cond"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="setComponentZero(boolean[]) : void" num="178" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="180" type="cond"/>
            <line num="181" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="181" type="cond"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getComponentMapping(int[]) : void" num="185" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="188" type="cond"/>
            <line num="189" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="189" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getComponentMapping(int) : int" num="193" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="196" type="cond"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="setComponentMapping(int[]) : void" num="221" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="223" type="cond"/>
            <line num="224" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="224" type="cond"/>
            <line num="225" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="apply(long[],long[]) : void" num="228" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="231" type="cond"/>
            <line falsecount="0" truecount="0" num="232" type="cond"/>
            <line num="234" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="234" type="cond"/>
            <line num="235" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="235" type="cond"/>
            <line complexity="5" visibility="public" signature="apply(int[],int[]) : void" num="238" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="241" type="cond"/>
            <line falsecount="0" truecount="0" num="242" type="cond"/>
            <line num="244" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="244" type="cond"/>
            <line num="245" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="245" type="cond"/>
            <line complexity="5" visibility="public" signature="apply(Localizable,Positionable) : void" num="248" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="251" type="cond"/>
            <line falsecount="0" truecount="0" num="252" type="cond"/>
            <line num="254" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="254" type="cond"/>
            <line num="255" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="255" type="cond"/>
            <line complexity="5" visibility="public" signature="concatenate(Slicing) : SlicingTransform" num="258" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="261" type="cond"/>
            <line num="263" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="265" type="cond"/>
            <line num="267" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="267" type="cond"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="275" type="cond"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConcatenableClass() : Class&lt; Slicing &gt;" num="290" count="0" type="method"/>
            <line num="293" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="preConcatenate(Slicing) : SlicingTransform" num="296" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="299" type="cond"/>
            <line num="301" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="303" type="cond"/>
            <line num="305" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="305" type="cond"/>
            <line num="307" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="313" type="cond"/>
            <line num="315" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPreConcatenableClass() : Class&lt; Slicing &gt;" num="328" count="0" type="method"/>
            <line num="331" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="set(Slicing) : void" num="339" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="341" type="cond"/>
            <line falsecount="0" truecount="0" num="342" type="cond"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getMatrix() : double[][]" num="353" count="0" type="method"/>
            <line num="356" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="360" type="cond"/>
            <line num="361" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="363" type="cond"/>
            <line num="364" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="364" type="cond"/>
            <line num="365" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="hasFullSourceMapping() : boolean" num="376" count="0" type="method"/>
            <line num="378" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="379" type="cond"/>
            <line num="381" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="381" type="cond"/>
            <line num="383" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="386" type="cond"/>
            <line num="388" count="0" type="stmt"/>
            <line num="388" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="388" type="cond"/>
            <line num="390" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/transform/integer/Translation.java" name="Translation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="44" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Translation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/transform/integer/TranslationTransform.java" name="TranslationTransform.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="66" loc="326" coveredmethods="0" methods="33" elements="161" classes="2" ncloc="226" statements="62" conditionals="66" coveredstatements="0"/>
            <class name="TranslationTransform">
               <metrics coveredelements="0" coveredconditionals="0" complexity="45" coveredmethods="0" methods="18" elements="110" statements="38" conditionals="54" coveredstatements="0"/>
            </class>
            <class name="TranslationTransform.InverseTranslationTransform">
               <metrics coveredelements="0" coveredconditionals="0" complexity="21" coveredmethods="0" methods="15" elements="51" statements="24" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="TranslationTransform(int)" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="TranslationTransform(long[])" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getTranslation(long[]) : void" num="69" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getTranslation(int) : long" num="77" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="setTranslation(long[]) : void" num="84" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="apply(long[],long[]) : void" num="91" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="apply(int[],int[]) : void" num="101" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="apply(Localizable,Positionable) : void" num="111" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="concatenate(Translation) : TranslationTransform" num="121" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="127" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConcatenableClass() : Class&lt; Translation &gt;" num="132" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="preConcatenate(Translation) : TranslationTransform" num="138" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPreConcatenableClass() : Class&lt; Translation &gt;" num="144" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="set(Translation) : void" num="155" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="157" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMatrix() : double[][]" num="166" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="applyInverse(long[],long[]) : void" num="182" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="185" type="cond"/>
            <line falsecount="0" truecount="0" num="186" type="cond"/>
            <line num="188" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="188" type="cond"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="applyInverse(int[],int[]) : void" num="192" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="195" type="cond"/>
            <line falsecount="0" truecount="0" num="196" type="cond"/>
            <line num="198" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="198" type="cond"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="applyInverse(Positionable,Localizable) : void" num="202" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="205" type="cond"/>
            <line falsecount="0" truecount="0" num="206" type="cond"/>
            <line num="208" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="208" type="cond"/>
            <line num="209" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="InverseTranslationTransform(int)" num="214" count="0" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(long[],long[]) : void" num="219" count="0" type="method"/>
            <line num="222" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(int[],int[]) : void" num="225" count="0" type="method"/>
            <line num="228" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Localizable,Positionable) : void" num="231" count="0" type="method"/>
            <line num="234" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyInverse(long[],long[]) : void" num="237" count="0" type="method"/>
            <line num="240" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyInverse(int[],int[]) : void" num="243" count="0" type="method"/>
            <line num="246" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyInverse(Positionable,Localizable) : void" num="249" count="0" type="method"/>
            <line num="252" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMatrix() : double[][]" num="255" count="0" type="method"/>
            <line num="258" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="262" type="cond"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inverse() : TranslationTransform" num="271" count="0" type="method"/>
            <line num="274" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getTranslation(long[]) : void" num="277" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="280" type="cond"/>
            <line num="281" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="281" type="cond"/>
            <line num="282" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getTranslation(int) : long" num="285" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="288" type="cond"/>
            <line num="289" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="concatenate(Translation) : TranslationTransform" num="292" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="295" type="cond"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="297" type="cond"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConcatenableClass() : Class&lt; Translation &gt;" num="302" count="0" type="method"/>
            <line num="305" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="preConcatenate(Translation) : TranslationTransform" num="308" count="0" type="method"/>
            <line num="311" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPreConcatenableClass() : Class&lt; Translation &gt;" num="314" count="0" type="method"/>
            <line num="317" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inverse() : InverseTranslationTransform" num="321" count="0" type="method"/>
            <line num="324" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.transform">
         <metrics coveredelements="0" complexity="10" loc="368" methods="10" classes="4" statements="10" coveredconditionals="0" coveredmethods="0" elements="20" ncloc="82" files="4" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/transform/InverseTransform.java" name="InverseTransform.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="110" coveredmethods="0" methods="10" elements="20" classes="1" ncloc="56" statements="10" conditionals="0" coveredstatements="0"/>
            <class name="InverseTransform">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="10" elements="20" statements="10" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="InverseTransform(InvertibleTransform)" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numSourceDimensions() : int" num="57" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numTargetDimensions() : int" num="63" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(long[],long[]) : void" num="69" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(int[],int[]) : void" num="75" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Localizable,Positionable) : void" num="81" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyInverse(long[],long[]) : void" num="87" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyInverse(int[],int[]) : void" num="93" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyInverse(Positionable,Localizable) : void" num="99" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inverse() : InvertibleTransform" num="105" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/transform/InvertibleTransform.java" name="InvertibleTransform.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="99" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="InvertibleTransform">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/transform/Transform.java" name="Transform.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="98" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Transform">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/transform/Transformable.java" name="Transformable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="61" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Transformable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.imglib2.type">
         <metrics coveredelements="0" complexity="42" loc="993" methods="34" classes="9" statements="74" coveredconditionals="0" coveredmethods="0" elements="122" ncloc="314" files="9" conditionals="14" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/AbstractBit64Type.java" name="AbstractBit64Type.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="171" coveredmethods="0" methods="6" elements="64" classes="1" ncloc="80" statements="44" conditionals="14" coveredstatements="0"/>
            <class name="AbstractBit64Type">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="6" elements="64" statements="44" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="AbstractBit64Type(NativeImg&lt; ?, ? extends LongAccess &gt;,int)" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractBit64Type(long,int)" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractBit64Type(LongAccess,int)" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractBit64Type(int)" num="96" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="3" visibility="protected" signature="getBits() : long" num="106" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="116" type="cond"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="4" visibility="protected" signature="setBits(long) : void" num="136" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="142" type="cond"/>
            <line num="144" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="148" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="160" type="cond"/>
            <line num="162" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/AbstractBitType.java" name="AbstractBitType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="121" coveredmethods="0" methods="9" elements="19" classes="1" ncloc="60" statements="10" conditionals="0" coveredstatements="0"/>
            <class name="AbstractBitType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="9" elements="19" statements="10" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractBitType(NativeImg&lt; ?, ? extends LongAccess &gt;,int)" num="63" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="updateContainer(Object) : void" num="71" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIndex() : int" num="80" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="updateIndex(int) : void" num="86" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="incIndex() : void" num="92" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="incIndex(int) : void" num="98" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decIndex() : void" num="104" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decIndex(int) : void" num="110" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getEntitiesPerPixel() : Fraction" num="116" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/AbstractNativeType.java" name="AbstractNativeType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="85" coveredmethods="0" methods="6" elements="12" classes="1" ncloc="37" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="AbstractNativeType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="12" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="updateIndex(int) : void" num="47" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIndex() : int" num="53" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="incIndex() : void" num="59" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="incIndex(int) : void" num="65" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decIndex() : void" num="71" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decIndex(int) : void" num="77" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/BasePairType.java" name="BasePairType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="54" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="BasePairType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/BooleanType.java" name="BooleanType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="59" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="BooleanType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/NativeType.java" name="NativeType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="197" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="21" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="NativeType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/NativeTypeFactory.java" name="NativeTypeFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="154" coveredmethods="0" methods="11" elements="23" classes="1" ncloc="63" statements="12" conditionals="0" coveredstatements="0"/>
            <class name="NativeTypeFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="11" elements="23" statements="12" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="NativeTypeFactory(PrimitiveType,Function&lt; NativeImg&lt; T, ? extends A &gt;, T &gt;)" num="83" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPrimitiveType() : PrimitiveType" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createLinkedType(NativeImg&lt; T, ? extends A &gt;) : T" num="110" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BOOLEAN(Function&lt; NativeImg&lt; T, ? extends A &gt;, T &gt;) : NativeTypeFactory&lt; T, A &gt;" num="115" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BYTE(Function&lt; NativeImg&lt; T, ? extends A &gt;, T &gt;) : NativeTypeFactory&lt; T, A &gt;" num="120" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CHAR(Function&lt; NativeImg&lt; T, ? extends A &gt;, T &gt;) : NativeTypeFactory&lt; T, A &gt;" num="125" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SHORT(Function&lt; NativeImg&lt; T, ? extends A &gt;, T &gt;) : NativeTypeFactory&lt; T, A &gt;" num="130" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="INT(Function&lt; NativeImg&lt; T, ? extends A &gt;, T &gt;) : NativeTypeFactory&lt; T, A &gt;" num="135" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LONG(Function&lt; NativeImg&lt; T, ? extends A &gt;, T &gt;) : NativeTypeFactory&lt; T, A &gt;" num="140" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="FLOAT(Function&lt; NativeImg&lt; T, ? extends A &gt;, T &gt;) : NativeTypeFactory&lt; T, A &gt;" num="145" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DOUBLE(Function&lt; NativeImg&lt; T, ? extends A &gt;, T &gt;) : NativeTypeFactory&lt; T, A &gt;" num="150" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/PrimitiveType.java" name="PrimitiveType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="76" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="25" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="PrimitiveType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="PrimitiveType(int)" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getByteCount() : int" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/Type.java" name="Type.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="76" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Type">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.imglib2.converter.read">
         <metrics coveredelements="0" complexity="34" loc="649" methods="34" classes="8" statements="53" coveredconditionals="0" coveredmethods="0" elements="87" ncloc="257" files="8" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/read/ConvertedCursor.java" name="ConvertedCursor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="79" coveredmethods="0" methods="3" elements="9" classes="1" ncloc="27" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="ConvertedCursor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="9" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ConvertedCursor(Cursor&lt; A &gt;,Converter&lt; ? super A, ? super B &gt;,B)" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : B" num="67" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : ConvertedCursor&lt; A, B &gt;" num="74" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/read/ConvertedIterableInterval.java" name="ConvertedIterableInterval.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="90" coveredmethods="0" methods="5" elements="12" classes="1" ncloc="34" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="ConvertedIterableInterval">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="12" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ConvertedIterableInterval(IterableInterval&lt; A &gt;,Converter&lt; ? super A, ? super B &gt;,B)" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cursor() : ConvertedCursor&lt; A, B &gt;" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localizingCursor() : ConvertedCursor&lt; A, B &gt;" num="72" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDestinationType() : B" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConverter() : Converter&lt; ? super A, ? super B &gt;" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/read/ConvertedRandomAccess.java" name="ConvertedRandomAccess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="71" coveredmethods="0" methods="3" elements="9" classes="1" ncloc="27" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="ConvertedRandomAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="9" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ConvertedRandomAccess(RandomAccess&lt; A &gt;,Converter&lt; ? super A, ? super B &gt;,B)" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : B" num="59" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : ConvertedRandomAccess&lt; A, B &gt;" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/read/ConvertedRandomAccessible.java" name="ConvertedRandomAccessible.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="84" coveredmethods="0" methods="5" elements="12" classes="1" ncloc="35" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="ConvertedRandomAccessible">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="12" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ConvertedRandomAccessible(RandomAccessible&lt; A &gt;,Converter&lt; ? super A, ? super B &gt;,B)" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess() : ConvertedRandomAccess&lt; A, B &gt;" num="60" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess(Interval) : ConvertedRandomAccess&lt; A, B &gt;" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDestinationType() : B" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConverter() : Converter&lt; ? super A, ? super B &gt;" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/read/ConvertedRandomAccessibleInterval.java" name="ConvertedRandomAccessibleInterval.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="85" coveredmethods="0" methods="5" elements="12" classes="1" ncloc="36" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="ConvertedRandomAccessibleInterval">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="12" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ConvertedRandomAccessibleInterval(RandomAccessibleInterval&lt; A &gt;,Converter&lt; ? super A, ? super B &gt;,B)" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess() : ConvertedRandomAccess&lt; A, B &gt;" num="61" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess(Interval) : ConvertedRandomAccess&lt; A, B &gt;" num="67" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDestinationType() : B" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConverter() : Converter&lt; ? super A, ? super B &gt;" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/read/ConvertedRealRandomAccess.java" name="ConvertedRealRandomAccess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="71" coveredmethods="0" methods="3" elements="9" classes="1" ncloc="27" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="ConvertedRealRandomAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="9" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ConvertedRealRandomAccess(RealRandomAccess&lt; A &gt;,Converter&lt; ? super A, ? super B &gt;,B)" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : B" num="59" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : ConvertedRealRandomAccess&lt; A, B &gt;" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/read/ConvertedRealRandomAccessible.java" name="ConvertedRealRandomAccessible.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="84" coveredmethods="0" methods="5" elements="12" classes="1" ncloc="35" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="ConvertedRealRandomAccessible">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="12" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ConvertedRealRandomAccessible(RealRandomAccessible&lt; A &gt;,Converter&lt; ? super A, ? super B &gt;,B)" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realRandomAccess() : ConvertedRealRandomAccess&lt; A, B &gt;" num="60" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realRandomAccess(RealInterval) : ConvertedRealRandomAccess&lt; A, B &gt;" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDestinationType() : B" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConverter() : Converter&lt; ? super A, ? super B &gt;" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/read/ConvertedRealRandomAccessibleRealInterval.java" name="ConvertedRealRandomAccessibleRealInterval.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="85" coveredmethods="0" methods="5" elements="12" classes="1" ncloc="36" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="ConvertedRealRandomAccessibleRealInterval">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="12" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ConvertedRealRandomAccessibleRealInterval(RealRandomAccessibleRealInterval&lt; A &gt;,Converter&lt; ? super A, ? super B &gt;,B)" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realRandomAccess() : ConvertedRealRandomAccess&lt; A, B &gt;" num="61" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realRandomAccess(RealInterval) : ConvertedRealRandomAccess&lt; A, B &gt;" num="67" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDestinationType() : B" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConverter() : Converter&lt; ? super A, ? super B &gt;" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.interpolation.neighborsearch">
         <metrics coveredelements="0" complexity="19" loc="386" methods="15" classes="4" statements="37" coveredconditionals="0" coveredmethods="0" elements="58" ncloc="136" files="4" conditionals="6" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/interpolation/neighborsearch/InverseDistanceWeightingInterpolator.java" name="InverseDistanceWeightingInterpolator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="140" coveredmethods="0" methods="5" elements="36" classes="1" ncloc="63" statements="25" conditionals="6" coveredstatements="0"/>
            <class name="InverseDistanceWeightingInterpolator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="5" elements="36" statements="25" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="InverseDistanceWeightingInterpolator(KNearestNeighborSearch&lt; T &gt;,double)" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="get() : T" num="91" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="computeWeight(double) : double" num="124" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : InverseDistanceWeightingInterpolator&lt; T &gt;" num="129" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRealRandomAccess() : InverseDistanceWeightingInterpolator&lt; T &gt;" num="135" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/interpolation/neighborsearch/InverseDistanceWeightingInterpolatorFactory.java" name="InverseDistanceWeightingInterpolatorFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="91" coveredmethods="0" methods="4" elements="8" classes="1" ncloc="27" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="InverseDistanceWeightingInterpolatorFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="InverseDistanceWeightingInterpolatorFactory()" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="InverseDistanceWeightingInterpolatorFactory(double)" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(KNearestNeighborSearch&lt; T &gt;) : InverseDistanceWeightingInterpolator&lt; T &gt;" num="69" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(KNearestNeighborSearch&lt; T &gt;,RealInterval) : InverseDistanceWeightingInterpolator&lt; T &gt;" num="86" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/interpolation/neighborsearch/NearestNeighborSearchInterpolator.java" name="NearestNeighborSearchInterpolator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="76" coveredmethods="0" methods="4" elements="10" classes="1" ncloc="29" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="NearestNeighborSearchInterpolator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="NearestNeighborSearchInterpolator(NearestNeighborSearch&lt; T &gt;)" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="58" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : NearestNeighborSearchInterpolator&lt; T &gt;" num="65" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRealRandomAccess() : NearestNeighborSearchInterpolator&lt; T &gt;" num="71" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/interpolation/neighborsearch/NearestNeighborSearchInterpolatorFactory.java" name="NearestNeighborSearchInterpolatorFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="79" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="17" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="NearestNeighborSearchInterpolatorFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="create(NearestNeighborSearch&lt; T &gt;) : NearestNeighborSearchInterpolator&lt; T &gt;" num="57" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(NearestNeighborSearch&lt; T &gt;,RealInterval) : NearestNeighborSearchInterpolator&lt; T &gt;" num="74" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.type.logic">
         <metrics coveredelements="0" complexity="155" loc="1604" methods="137" classes="6" statements="218" coveredconditionals="0" coveredmethods="0" elements="391" ncloc="825" files="6" conditionals="36" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/logic/BitType.java" name="BitType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="57" loc="384" coveredmethods="0" methods="47" elements="133" classes="1" ncloc="277" statements="66" conditionals="20" coveredstatements="0"/>
            <class name="BitType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="57" coveredmethods="0" methods="47" elements="133" statements="66" conditionals="20" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="BitType(NativeImg&lt; ?, ? extends LongAccess &gt;)" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BitType(boolean)" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BitType(LongAccess)" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BitType()" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="updateContainer(Object) : void" num="93" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="duplicateTypeOnSameNativeImg() : BitType" num="99" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNativeTypeFactory() : NativeTypeFactory&lt; BitType, LongAccess &gt;" num="107" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : boolean" num="113" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="set(boolean) : void" num="120" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getInteger() : int" num="140" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="143" type="cond"/>
            <line complexity="2" visibility="public" signature="getIntegerLong() : long" num="146" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="149" type="cond"/>
            <line complexity="2" visibility="public" signature="getBigInteger() : BigInteger" num="152" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line complexity="2" visibility="public" signature="setInteger(int) : void" num="158" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="161" type="cond"/>
            <line num="162" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setInteger(long) : void" num="167" count="0" type="method"/>
            <line num="170" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="170" type="cond"/>
            <line num="171" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setBigInteger(BigInteger) : void" num="176" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="179" type="cond"/>
            <line num="180" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxValue() : double" num="185" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMinValue() : double" num="191" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(BitType) : void" num="197" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="and(BitType) : void" num="203" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="or(BitType) : void" num="209" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="xor(BitType) : void" num="215" count="0" type="method"/>
            <line num="218" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="not() : void" num="221" count="0" type="method"/>
            <line num="224" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(BitType) : void" num="227" count="0" type="method"/>
            <line num="230" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(BitType) : void" num="233" count="0" type="method"/>
            <line num="236" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(BitType) : void" num="239" count="0" type="method"/>
            <line num="242" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(BitType) : void" num="245" count="0" type="method"/>
            <line num="248" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="mul(float) : void" num="251" count="0" type="method"/>
            <line num="254" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="254" type="cond"/>
            <line num="255" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="mul(double) : void" num="260" count="0" type="method"/>
            <line num="263" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="263" type="cond"/>
            <line num="264" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setOne() : void" num="269" count="0" type="method"/>
            <line num="272" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setZero() : void" num="275" count="0" type="method"/>
            <line num="278" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inc() : void" num="281" count="0" type="method"/>
            <line num="284" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dec() : void" num="287" count="0" type="method"/>
            <line num="290" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createVariable() : BitType" num="293" count="0" type="method"/>
            <line num="296" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : BitType" num="299" count="0" type="method"/>
            <line num="302" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="305" count="0" type="method"/>
            <line num="308" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="310" type="cond"/>
            <line complexity="1" visibility="public" signature="getEntitiesPerPixel() : Fraction" num="313" count="0" type="method"/>
            <line num="316" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="updateIndex(int) : void" num="319" count="0" type="method"/>
            <line num="322" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIndex() : int" num="325" count="0" type="method"/>
            <line num="328" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="incIndex() : void" num="331" count="0" type="method"/>
            <line num="334" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="incIndex(int) : void" num="337" count="0" type="method"/>
            <line num="340" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decIndex() : void" num="343" count="0" type="method"/>
            <line num="346" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decIndex(int) : void" num="349" count="0" type="method"/>
            <line num="352" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBitsPerPixel() : int" num="355" count="0" type="method"/>
            <line num="358" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compareTo(BitType) : int" num="361" count="0" type="method"/>
            <line num="364" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="valueEquals(BitType) : boolean" num="367" count="0" type="method"/>
            <line num="370" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="373" count="0" type="method"/>
            <line num="376" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="379" count="0" type="method"/>
            <line num="382" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/logic/BoolType.java" name="BoolType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="31" loc="212" coveredmethods="0" methods="28" elements="62" classes="1" ncloc="143" statements="28" conditionals="6" coveredstatements="0"/>
            <class name="BoolType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="31" coveredmethods="0" methods="28" elements="62" statements="28" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="BoolType()" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BoolType(boolean)" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BoolType(T)" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createVariable() : BoolType" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : BoolType" num="72" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(BoolType) : void" num="78" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : boolean" num="84" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(boolean) : void" num="90" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="and(boolean) : void" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="or(boolean) : void" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="xor(boolean) : void" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="and(BoolType) : void" num="111" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="or(BoolType) : void" num="117" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="xor(BoolType) : void" num="123" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="not() : void" num="129" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxValue() : double" num="135" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMinValue() : double" num="141" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBitsPerPixel() : int" num="147" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getInteger() : int" num="153" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line complexity="2" visibility="public" signature="getIntegerLong() : long" num="159" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="162" type="cond"/>
            <line complexity="2" visibility="public" signature="getBigInteger() : BigInteger" num="165" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="168" type="cond"/>
            <line complexity="1" visibility="public" signature="setInteger(int) : void" num="171" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInteger(long) : void" num="177" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setBigInteger(BigInteger) : void" num="183" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compareTo(BoolType) : int" num="189" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="valueEquals(BoolType) : boolean" num="195" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="201" count="0" type="method"/>
            <line num="204" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="207" count="0" type="method"/>
            <line num="210" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/logic/NativeBoolType.java" name="NativeBoolType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="52" loc="348" coveredmethods="0" methods="47" elements="111" classes="1" ncloc="231" statements="54" conditionals="10" coveredstatements="0"/>
            <class name="NativeBoolType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="52" coveredmethods="0" methods="47" elements="111" statements="54" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="NativeBoolType(NativeImg&lt; ?, ? extends BooleanAccess &gt;)" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="NativeBoolType(boolean)" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="NativeBoolType(BooleanAccess)" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="NativeBoolType()" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNativeTypeFactory() : NativeTypeFactory&lt; NativeBoolType, BooleanAccess &gt;" num="92" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="duplicateTypeOnSameNativeImg() : NativeBoolType" num="98" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getEntitiesPerPixel() : Fraction" num="104" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="updateContainer(Object) : void" num="110" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : boolean" num="121" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(boolean) : void" num="130" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(NativeBoolType) : void" num="136" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="and(NativeBoolType) : void" num="139" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="or(NativeBoolType) : void" num="142" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="xor(NativeBoolType) : void" num="145" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="not() : void" num="148" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(NativeBoolType) : void" num="151" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(NativeBoolType) : void" num="157" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(NativeBoolType) : void" num="163" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(NativeBoolType) : void" num="169" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="mul(float) : void" num="175" count="0" type="method"/>
            <line num="178" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="178" type="cond"/>
            <line num="179" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="mul(double) : void" num="184" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="187" type="cond"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setOne() : void" num="193" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setZero() : void" num="196" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inc() : void" num="199" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dec() : void" num="202" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="206" count="0" type="method"/>
            <line num="209" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="updateIndex(int) : void" num="212" count="0" type="method"/>
            <line num="215" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIndex() : int" num="218" count="0" type="method"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="incIndex() : void" num="224" count="0" type="method"/>
            <line num="227" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="incIndex(int) : void" num="230" count="0" type="method"/>
            <line num="233" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decIndex() : void" num="236" count="0" type="method"/>
            <line num="239" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decIndex(int) : void" num="242" count="0" type="method"/>
            <line num="245" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBitsPerPixel() : int" num="248" count="0" type="method"/>
            <line num="262" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="valueEquals(NativeBoolType) : boolean" num="265" count="0" type="method"/>
            <line num="268" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="271" count="0" type="method"/>
            <line num="274" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="277" count="0" type="method"/>
            <line num="280" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compareTo(NativeBoolType) : int" num="283" count="0" type="method"/>
            <line num="286" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createVariable() : NativeBoolType" num="289" count="0" type="method"/>
            <line num="292" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : NativeBoolType" num="295" count="0" type="method"/>
            <line num="298" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxValue() : double" num="301" count="0" type="method"/>
            <line num="304" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMinValue() : double" num="307" count="0" type="method"/>
            <line num="310" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getInteger() : int" num="313" count="0" type="method"/>
            <line num="316" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="316" type="cond"/>
            <line complexity="2" visibility="public" signature="getIntegerLong() : long" num="319" count="0" type="method"/>
            <line num="322" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="322" type="cond"/>
            <line complexity="2" visibility="public" signature="getBigInteger() : BigInteger" num="325" count="0" type="method"/>
            <line num="328" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="328" type="cond"/>
            <line complexity="1" visibility="public" signature="setInteger(int) : void" num="331" count="0" type="method"/>
            <line num="334" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInteger(long) : void" num="337" count="0" type="method"/>
            <line num="340" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setBigInteger(BigInteger) : void" num="343" count="0" type="method"/>
            <line num="346" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/type/logic/BitTypeArrayImgSizeTest.java" name="BitTypeArrayImgSizeTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="78" coveredmethods="0" methods="3" elements="31" classes="1" ncloc="55" statements="28" conditionals="0" coveredstatements="0"/>
            <class name="BitTypeArrayImgSizeTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="31" statements="28" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testOverSizedBitImageExplicitStorageArray() : void" num="23" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOverSizedBitImageImgFactory() : void" num="40" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOverSizedBitImageArrayImgs() : void" num="61" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/type/logic/BitTypeTest.java" name="BitTypeTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="444" coveredmethods="0" methods="6" elements="27" classes="1" ncloc="59" statements="21" conditionals="0" coveredstatements="0"/>
            <class name="BitTypeTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="27" statements="21" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUpBeforeClass() : void" num="65" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetOne() : void" num="74" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetZero() : void" num="86" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetOneAndZero() : void" num="98" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetBigInteger() : void" num="115" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetBigInteger() : void" num="127" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/type/logic/NativeBoolTypeTest.java" name="NativeBoolTypeTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="138" coveredmethods="0" methods="6" elements="27" classes="1" ncloc="60" statements="21" conditionals="0" coveredstatements="0"/>
            <class name="NativeBoolTypeTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="27" statements="21" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUpBeforeClass() : void" num="64" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetOne() : void" num="73" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetZero() : void" num="85" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetOneAndZero() : void" num="97" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetBigInteger() : void" num="114" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetBigInteger() : void" num="126" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.iterator">
         <metrics coveredelements="0" complexity="88" loc="967" methods="68" classes="6" statements="149" coveredconditionals="0" coveredmethods="0" elements="257" ncloc="462" files="6" conditionals="40" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/iterator/IntervalIterator.java" name="IntervalIterator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="28" loc="305" coveredmethods="0" methods="22" elements="99" classes="1" ncloc="168" statements="65" conditionals="12" coveredstatements="0"/>
            <class name="IntervalIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="28" coveredmethods="0" methods="22" elements="99" statements="65" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="IntervalIterator(long[])" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="IntervalIterator(int[])" num="117" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="IntervalIterator(long[],long[])" num="128" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="137" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="IntervalIterator(int[],int[])" num="155" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="IntervalIterator(Interval)" num="165" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="174" type="cond"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="create(Interval) : IntervalIterator" num="186" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="189" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="jumpFwd(long) : void" num="197" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fwd() : void" num="203" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reset() : void" num="209" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="215" count="0" type="method"/>
            <line num="218" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIndex() : long" num="224" count="0" type="method"/>
            <line num="226" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLongPosition(int) : long" num="231" count="0" type="method"/>
            <line num="234" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(long[]) : void" num="237" count="0" type="method"/>
            <line num="240" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntPosition(int) : int" num="243" count="0" type="method"/>
            <line num="246" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(int[]) : void" num="249" count="0" type="method"/>
            <line num="252" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDoublePosition(int) : double" num="255" count="0" type="method"/>
            <line num="258" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatPosition(int) : float" num="263" count="0" type="method"/>
            <line num="266" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(float[]) : void" num="269" count="0" type="method"/>
            <line num="272" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(double[]) : void" num="275" count="0" type="method"/>
            <line num="278" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="283" count="0" type="method"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dimension(int) : long" num="293" count="0" type="method"/>
            <line num="296" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="dimensions(long[]) : void" num="299" count="0" type="method"/>
            <line num="302" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="302" type="cond"/>
            <line num="303" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/iterator/LocalizingIntervalIterator.java" name="LocalizingIntervalIterator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="23" loc="193" coveredmethods="0" methods="16" elements="64" classes="1" ncloc="106" statements="34" conditionals="14" coveredstatements="0"/>
            <class name="LocalizingIntervalIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="23" coveredmethods="0" methods="16" elements="64" statements="34" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LocalizingIntervalIterator(long[])" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LocalizingIntervalIterator(int[])" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LocalizingIntervalIterator(long[],long[])" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LocalizingIntervalIterator(int[],int[])" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LocalizingIntervalIterator(Interval)" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="fwd() : void" num="109" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="116" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="jumpFwd(long) : void" num="123" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="reset() : void" num="130" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(float[]) : void" num="142" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="145" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(double[]) : void" num="149" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="152" type="cond"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(int[]) : void" num="156" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="159" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(long[]) : void" num="163" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="166" type="cond"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatPosition(int) : float" num="170" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDoublePosition(int) : double" num="176" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntPosition(int) : int" num="182" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLongPosition(int) : long" num="188" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/iterator/LocalizingZeroMinIntervalIterator.java" name="LocalizingZeroMinIntervalIterator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="123" coveredmethods="0" methods="6" elements="26" classes="1" ncloc="46" statements="14" conditionals="6" coveredstatements="0"/>
            <class name="LocalizingZeroMinIntervalIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="6" elements="26" statements="14" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LocalizingZeroMinIntervalIterator(long[])" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LocalizingZeroMinIntervalIterator(int[])" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LocalizingZeroMinIntervalIterator(Interval)" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="fwd() : void" num="92" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="jumpFwd(long) : void" num="106" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="reset() : void" num="113" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="119" type="cond"/>
            <line num="120" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/iterator/OffsetableIntervalIterator.java" name="OffsetableIntervalIterator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="105" coveredmethods="0" methods="7" elements="24" classes="1" ncloc="43" statements="13" conditionals="4" coveredstatements="0"/>
            <class name="OffsetableIntervalIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="7" elements="24" statements="13" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="OffsetableIntervalIterator(long[])" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="OffsetableIntervalIterator(int[])" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="OffsetableIntervalIterator(long[],long[])" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="OffsetableIntervalIterator(int[],int[])" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="OffsetableIntervalIterator(Interval)" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setMin(int[]) : void" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setMin(long[]) : void" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/iterator/OffsetableLocalizingIntervalIterator.java" name="OffsetableLocalizingIntervalIterator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="105" coveredmethods="0" methods="7" elements="24" classes="1" ncloc="43" statements="13" conditionals="4" coveredstatements="0"/>
            <class name="OffsetableLocalizingIntervalIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="7" elements="24" statements="13" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="OffsetableLocalizingIntervalIterator(long[])" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="OffsetableLocalizingIntervalIterator(int[])" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="OffsetableLocalizingIntervalIterator(long[],long[])" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="OffsetableLocalizingIntervalIterator(int[],int[])" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="OffsetableLocalizingIntervalIterator(Interval)" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setMin(int[]) : void" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setMin(long[]) : void" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/iterator/ZeroMinIntervalIterator.java" name="ZeroMinIntervalIterator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="136" coveredmethods="0" methods="10" elements="20" classes="1" ncloc="56" statements="10" conditionals="0" coveredstatements="0"/>
            <class name="ZeroMinIntervalIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="10" elements="20" statements="10" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ZeroMinIntervalIterator(long[])" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ZeroMinIntervalIterator(Interval)" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLongPosition(int) : long" num="87" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(long[]) : void" num="93" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntPosition(int) : int" num="99" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(int[]) : void" num="105" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDoublePosition(int) : double" num="113" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(double[]) : void" num="119" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatPosition(int) : float" num="125" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(float[]) : void" num="131" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.type.numeric">
         <metrics coveredelements="0" complexity="125" loc="1421" methods="112" classes="9" statements="232" coveredconditionals="0" coveredmethods="0" elements="368" ncloc="867" files="9" conditionals="24" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/numeric/ARGBDoubleType.java" name="ARGBDoubleType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="126" coveredmethods="0" methods="14" elements="30" classes="1" ncloc="73" statements="16" conditionals="0" coveredstatements="0"/>
            <class name="ARGBDoubleType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="14" elements="30" statements="16" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ARGBDoubleType()" num="45" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="ARGBDoubleType(double,double,double,double)" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createVariable() : ARGBDoubleType" num="53" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : ARGBDoubleType" num="59" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(double,double,double,double) : void" num="65" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(NativeARGBDoubleType) : void" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getA() : double" num="79" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getR() : double" num="85" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getG() : double" num="91" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getB() : double" num="97" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setA(double) : void" num="103" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setR(double) : void" num="109" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setG(double) : void" num="115" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setB(double) : void" num="121" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/numeric/ARGBType.java" name="ARGBType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="32" loc="265" coveredmethods="0" methods="32" elements="78" classes="1" ncloc="176" statements="46" conditionals="0" coveredstatements="0"/>
            <class name="ARGBType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="32" coveredmethods="0" methods="32" elements="78" statements="46" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ARGBType(NativeImg&lt; ?, ? extends IntAccess &gt;)" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ARGBType(int)" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ARGBType(IntAccess)" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ARGBType()" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="updateContainer(Object) : void" num="90" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="duplicateTypeOnSameNativeImg() : ARGBType" num="96" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNativeTypeFactory() : NativeTypeFactory&lt; ARGBType, IntAccess &gt;" num="104" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rgba(int,int,int,int) : int" num="110" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rgba(float,float,float,float) : int" num="115" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rgba(double,double,double,double) : int" num="120" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="red(int) : int" num="125" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="green(int) : int" num="130" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="blue(int) : int" num="135" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="alpha(int) : int" num="140" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : int" num="145" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(int) : void" num="150" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(float) : void" num="155" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(double) : void" num="162" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(ARGBType) : void" num="169" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(ARGBType) : void" num="178" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(ARGBType) : void" num="187" count="0" type="method"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(ARGBType) : void" num="196" count="0" type="method"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(ARGBType) : void" num="205" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setOne() : void" num="211" count="0" type="method"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setZero() : void" num="217" count="0" type="method"/>
            <line num="220" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createVariable() : ARGBType" num="223" count="0" type="method"/>
            <line num="226" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : ARGBType" num="229" count="0" type="method"/>
            <line num="232" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="235" count="0" type="method"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getEntitiesPerPixel() : Fraction" num="242" count="0" type="method"/>
            <line num="245" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="valueEquals(ARGBType) : boolean" num="248" count="0" type="method"/>
            <line num="251" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="254" count="0" type="method"/>
            <line num="257" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="260" count="0" type="method"/>
            <line num="263" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/numeric/AbstractARGBDoubleType.java" name="AbstractARGBDoubleType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="190" coveredmethods="0" methods="14" elements="44" classes="1" ncloc="124" statements="28" conditionals="2" coveredstatements="0"/>
            <class name="AbstractARGBDoubleType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="14" elements="44" statements="28" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="set(double,double,double,double) : void" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(T) : void" num="69" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(T) : void" num="75" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(T) : void" num="85" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(T) : void" num="95" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(T) : void" num="105" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setZero() : void" num="115" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setOne() : void" num="121" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(float) : void" num="127" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(double) : void" num="137" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toARGBInt() : int" num="150" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="valueEquals(T) : boolean" num="160" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="equals(Object) : boolean" num="170" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="180" count="0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/numeric/ComplexType.java" name="ComplexType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="72" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="19" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ComplexType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/numeric/IntegerType.java" name="IntegerType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="56" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="IntegerType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/numeric/NativeARGBDoubleType.java" name="NativeARGBDoubleType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="26" loc="240" coveredmethods="0" methods="26" elements="80" classes="1" ncloc="168" statements="54" conditionals="0" coveredstatements="0"/>
            <class name="NativeARGBDoubleType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="26" coveredmethods="0" methods="26" elements="80" statements="54" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="NativeARGBDoubleType(NativeImg&lt; ?, ? extends DoubleAccess &gt;)" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="NativeARGBDoubleType(double,double,double,double)" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="NativeARGBDoubleType(DoubleAccess)" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="NativeARGBDoubleType()" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="updateContainer(Object) : void" num="81" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="duplicateTypeOnSameNativeImg() : NativeARGBDoubleType" num="87" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNativeTypeFactory() : NativeTypeFactory&lt; NativeARGBDoubleType, DoubleAccess &gt;" num="95" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getA() : double" num="101" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getR() : double" num="107" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getG() : double" num="113" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getB() : double" num="119" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setA(double) : void" num="125" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setR(double) : void" num="131" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setG(double) : void" num="137" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setB(double) : void" num="143" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(double,double,double,double) : void" num="149" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(ARGBDoubleType) : void" num="158" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createVariable() : NativeARGBDoubleType" num="163" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : NativeARGBDoubleType" num="169" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getEntitiesPerPixel() : Fraction" num="175" count="0" type="method"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="updateIndex(int) : void" num="181" count="0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="incIndex() : void" num="191" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="incIndex(int) : void" num="201" count="0" type="method"/>
            <line num="204" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decIndex() : void" num="213" count="0" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decIndex(int) : void" num="223" count="0" type="method"/>
            <line num="226" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIndex() : int" num="235" count="0" type="method"/>
            <line num="238" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/numeric/NumericType.java" name="NumericType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="52" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="NumericType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/numeric/RealType.java" name="RealType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="56" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="RealType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/type/numeric/NumericTypeTest.java" name="NumericTypeTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="38" loc="364" coveredmethods="0" methods="26" elements="136" classes="1" ncloc="274" statements="88" conditionals="22" coveredstatements="0"/>
            <class name="NumericTypeTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="38" coveredmethods="0" methods="26" elements="136" statements="88" conditionals="22" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="data() : Collection&lt; Object &gt;" num="140" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="NumericTypeTest(String,T)" num="148" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testValueEquals() : void" num="153" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNotValueEquals() : void" num="160" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="167" count="0" type="method"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNotEqual() : void" num="174" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSet() : void" num="181" count="0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOneMinusOne() : void" num="190" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testAdd() : void" num="198" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="201" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSub() : void" num="209" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="212" type="cond"/>
            <line num="213" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMulNumerivType() : void" num="220" count="0" type="method"/>
            <line num="223" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="223" type="cond"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMulDouble() : void" num="230" count="0" type="method"/>
            <line num="233" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="233" type="cond"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMulFloat() : void" num="240" count="0" type="method"/>
            <line num="243" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="243" type="cond"/>
            <line num="244" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDiv() : void" num="251" count="0" type="method"/>
            <line num="254" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="254" type="cond"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHashCodeEquals() : void" num="261" count="0" type="method"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHashCodeChanges() : void" num="275" count="0" type="method"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testCompareTo() : void" num="285" count="0" type="method"/>
            <line num="288" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="289" type="cond"/>
            <line num="290" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="testCompareTo(T,T,T) : void" num="293" count="0" type="method"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testCompareMinMax() : void" num="300" count="0" type="method"/>
            <line num="303" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="303" type="cond"/>
            <line num="304" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="testCompareMinMax(T) : void" num="307" count="0" type="method"/>
            <line num="310" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="maxValue(T) : T" num="315" count="0" type="method"/>
            <line num="317" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="317" type="cond"/>
            <line num="319" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="minValue(T) : T" num="325" count="0" type="method"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="newZero() : T" num="334" count="0" type="method"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="newOne() : T" num="341" count="0" type="method"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isMaxValueLessThanSix() : boolean" num="348" count="0" type="method"/>
            <line num="350" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="newNumber(int) : T" num="354" count="0" type="method"/>
            <line num="356" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="356" type="cond"/>
            <line num="357" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="360" type="cond"/>
            <line num="361" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.type.numeric.complex">
         <metrics coveredelements="0" complexity="84" loc="909" methods="83" classes="5" statements="185" coveredconditionals="0" coveredmethods="0" elements="270" ncloc="564" files="5" conditionals="2" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/numeric/complex/AbstractComplexType.java" name="AbstractComplexType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="21" loc="203" coveredmethods="0" methods="20" elements="70" classes="1" ncloc="137" statements="48" conditionals="2" coveredstatements="0"/>
            <class name="AbstractComplexType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="21" coveredmethods="0" methods="20" elements="70" statements="48" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="set(T) : void" num="47" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(float) : void" num="54" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(double) : void" num="61" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(T) : void" num="68" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(T) : void" num="75" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(T) : void" num="87" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(T) : void" num="102" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="complexConjugate() : void" num="109" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPowerFloat() : float" num="115" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPowerDouble() : double" num="124" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPhaseFloat() : float" num="133" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPhaseDouble() : double" num="139" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setOne() : void" num="145" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setZero() : void" num="152" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setComplexNumber(float,float) : void" num="159" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setComplexNumber(double,double) : void" num="166" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="valueEquals(T) : boolean" num="173" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="equals(Object) : boolean" num="180" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="183" type="cond"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="190" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="198" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/numeric/complex/ComplexDoubleType.java" name="ComplexDoubleType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="26" loc="236" coveredmethods="0" methods="26" elements="69" classes="1" ncloc="157" statements="43" conditionals="0" coveredstatements="0"/>
            <class name="ComplexDoubleType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="26" coveredmethods="0" methods="26" elements="69" statements="43" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ComplexDoubleType(NativeImg&lt; ?, ? extends DoubleAccess &gt;)" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ComplexDoubleType(double,double)" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ComplexDoubleType(DoubleAccess)" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ComplexDoubleType()" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="updateContainer(Object) : void" num="89" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="duplicateTypeOnSameNativeImg() : ComplexDoubleType" num="95" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNativeTypeFactory() : NativeTypeFactory&lt; ComplexDoubleType, DoubleAccess &gt;" num="103" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealFloat() : float" num="109" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealDouble() : double" num="115" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getImaginaryFloat() : float" num="121" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getImaginaryDouble() : double" num="127" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setReal(float) : void" num="133" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setReal(double) : void" num="139" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setImaginary(float) : void" num="145" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setImaginary(double) : void" num="151" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(double,double) : void" num="157" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(ComplexDoubleType) : void" num="163" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createVariable() : ComplexDoubleType" num="170" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : ComplexDoubleType" num="176" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getEntitiesPerPixel() : Fraction" num="182" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="updateIndex(int) : void" num="188" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="incIndex() : void" num="196" count="0" type="method"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="incIndex(int) : void" num="204" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decIndex() : void" num="214" count="0" type="method"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decIndex(int) : void" num="222" count="0" type="method"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIndex() : int" num="231" count="0" type="method"/>
            <line num="234" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/numeric/complex/ComplexFloatType.java" name="ComplexFloatType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="35" loc="313" coveredmethods="0" methods="35" elements="103" classes="1" ncloc="220" statements="68" conditionals="0" coveredstatements="0"/>
            <class name="ComplexFloatType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="35" coveredmethods="0" methods="35" elements="103" statements="68" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ComplexFloatType(NativeImg&lt; ?, ? extends FloatAccess &gt;)" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ComplexFloatType(float,float)" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ComplexFloatType(FloatAccess)" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ComplexFloatType()" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="updateContainer(Object) : void" num="91" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="duplicateTypeOnSameNativeImg() : ComplexFloatType" num="97" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNativeTypeFactory() : NativeTypeFactory&lt; ComplexFloatType, FloatAccess &gt;" num="105" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealFloat() : float" num="111" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealDouble() : double" num="117" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getImaginaryFloat() : float" num="123" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getImaginaryDouble() : double" num="129" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setReal(float) : void" num="135" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setReal(double) : void" num="141" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setImaginary(float) : void" num="147" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setImaginary(double) : void" num="153" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(float,float) : void" num="159" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(ComplexFloatType) : void" num="165" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(ComplexFloatType) : void" num="172" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(ComplexFloatType) : void" num="184" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(ComplexFloatType) : void" num="199" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="complexConjugate() : void" num="206" count="0" type="method"/>
            <line num="209" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="switchRealComplex() : void" num="212" count="0" type="method"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(ComplexFloatType) : void" num="219" count="0" type="method"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createVariable() : ComplexFloatType" num="226" count="0" type="method"/>
            <line num="229" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : ComplexFloatType" num="232" count="0" type="method"/>
            <line num="235" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getEntitiesPerPixel() : Fraction" num="238" count="0" type="method"/>
            <line num="241" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="updateIndex(int) : void" num="244" count="0" type="method"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="incIndex() : void" num="252" count="0" type="method"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="incIndex(int) : void" num="260" count="0" type="method"/>
            <line num="263" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decIndex() : void" num="270" count="0" type="method"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decIndex(int) : void" num="278" count="0" type="method"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIndex() : int" num="287" count="0" type="method"/>
            <line num="290" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="valueEquals(ComplexFloatType) : boolean" num="293" count="0" type="method"/>
            <line num="296" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="300" count="0" type="method"/>
            <line num="303" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="306" count="0" type="method"/>
            <line num="309" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/type/numeric/complex/ComplexDoubleTypeTest.java" name="ComplexDoubleTypeTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="79" coveredmethods="0" methods="1" elements="14" classes="1" ncloc="25" statements="13" conditionals="0" coveredstatements="0"/>
            <class name="ComplexDoubleTypeTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="14" statements="13" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="53" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/type/numeric/complex/ComplexFloatTypeTest.java" name="ComplexFloatTypeTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="78" coveredmethods="0" methods="1" elements="14" classes="1" ncloc="25" statements="13" conditionals="0" coveredstatements="0"/>
            <class name="ComplexFloatTypeTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="14" statements="13" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="53" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.img.basictypeaccess.volatiles.array">
         <metrics coveredelements="0" complexity="104" loc="1742" methods="104" classes="24" statements="128" coveredconditionals="0" coveredmethods="0" elements="232" ncloc="680" files="24" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/volatiles/array/AbstractVolatileBooleanArray.java" name="AbstractVolatileBooleanArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="71" coveredmethods="0" methods="4" elements="10" classes="1" ncloc="29" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="AbstractVolatileBooleanArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractVolatileBooleanArray(int,boolean)" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractVolatileBooleanArray(boolean[],boolean)" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isValid() : boolean" num="60" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createArray(int) : A" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/volatiles/array/AbstractVolatileByteArray.java" name="AbstractVolatileByteArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="71" coveredmethods="0" methods="4" elements="10" classes="1" ncloc="29" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="AbstractVolatileByteArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractVolatileByteArray(int,boolean)" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractVolatileByteArray(byte[],boolean)" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isValid() : boolean" num="60" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createArray(int) : A" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/volatiles/array/AbstractVolatileCharArray.java" name="AbstractVolatileCharArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="71" coveredmethods="0" methods="4" elements="10" classes="1" ncloc="29" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="AbstractVolatileCharArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractVolatileCharArray(int,boolean)" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractVolatileCharArray(char[],boolean)" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isValid() : boolean" num="60" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createArray(int) : A" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/volatiles/array/AbstractVolatileDoubleArray.java" name="AbstractVolatileDoubleArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="71" coveredmethods="0" methods="4" elements="10" classes="1" ncloc="29" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="AbstractVolatileDoubleArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractVolatileDoubleArray(int,boolean)" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractVolatileDoubleArray(double[],boolean)" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isValid() : boolean" num="60" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createArray(int) : A" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/volatiles/array/AbstractVolatileFloatArray.java" name="AbstractVolatileFloatArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="71" coveredmethods="0" methods="4" elements="10" classes="1" ncloc="29" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="AbstractVolatileFloatArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractVolatileFloatArray(int,boolean)" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractVolatileFloatArray(float[],boolean)" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isValid() : boolean" num="60" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createArray(int) : A" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/volatiles/array/AbstractVolatileIntArray.java" name="AbstractVolatileIntArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="71" coveredmethods="0" methods="4" elements="10" classes="1" ncloc="29" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="AbstractVolatileIntArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractVolatileIntArray(int,boolean)" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractVolatileIntArray(int[],boolean)" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isValid() : boolean" num="60" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createArray(int) : A" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/volatiles/array/AbstractVolatileLongArray.java" name="AbstractVolatileLongArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="71" coveredmethods="0" methods="4" elements="10" classes="1" ncloc="29" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="AbstractVolatileLongArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractVolatileLongArray(int,boolean)" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractVolatileLongArray(long[],boolean)" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isValid() : boolean" num="60" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createArray(int) : A" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/volatiles/array/AbstractVolatileShortArray.java" name="AbstractVolatileShortArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="71" coveredmethods="0" methods="4" elements="10" classes="1" ncloc="29" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="AbstractVolatileShortArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractVolatileShortArray(int,boolean)" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractVolatileShortArray(short[],boolean)" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isValid() : boolean" num="60" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createArray(int) : A" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/volatiles/array/DirtyVolatileBooleanArray.java" name="DirtyVolatileBooleanArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="84" coveredmethods="0" methods="6" elements="13" classes="1" ncloc="37" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="DirtyVolatileBooleanArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DirtyVolatileBooleanArray(int,boolean)" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DirtyVolatileBooleanArray(boolean[],boolean)" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(int,boolean) : void" num="60" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createArray(int,boolean) : DirtyVolatileBooleanArray" num="67" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDirty() : boolean" num="73" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDirty() : void" num="79" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/volatiles/array/DirtyVolatileByteArray.java" name="DirtyVolatileByteArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="85" coveredmethods="0" methods="6" elements="13" classes="1" ncloc="37" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="DirtyVolatileByteArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DirtyVolatileByteArray(int,boolean)" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DirtyVolatileByteArray(byte[],boolean)" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(int,byte) : void" num="61" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createArray(int,boolean) : DirtyVolatileByteArray" num="68" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDirty() : boolean" num="74" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDirty() : void" num="80" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/volatiles/array/DirtyVolatileCharArray.java" name="DirtyVolatileCharArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="85" coveredmethods="0" methods="6" elements="13" classes="1" ncloc="37" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="DirtyVolatileCharArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DirtyVolatileCharArray(int,boolean)" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DirtyVolatileCharArray(char[],boolean)" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(int,char) : void" num="61" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createArray(int,boolean) : DirtyVolatileCharArray" num="68" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDirty() : boolean" num="74" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDirty() : void" num="80" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/volatiles/array/DirtyVolatileDoubleArray.java" name="DirtyVolatileDoubleArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="85" coveredmethods="0" methods="6" elements="13" classes="1" ncloc="37" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="DirtyVolatileDoubleArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DirtyVolatileDoubleArray(int,boolean)" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DirtyVolatileDoubleArray(double[],boolean)" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(int,double) : void" num="61" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createArray(int,boolean) : DirtyVolatileDoubleArray" num="68" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDirty() : boolean" num="74" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDirty() : void" num="80" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/volatiles/array/DirtyVolatileFloatArray.java" name="DirtyVolatileFloatArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="85" coveredmethods="0" methods="6" elements="13" classes="1" ncloc="37" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="DirtyVolatileFloatArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DirtyVolatileFloatArray(int,boolean)" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DirtyVolatileFloatArray(float[],boolean)" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(int,float) : void" num="61" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createArray(int,boolean) : DirtyVolatileFloatArray" num="68" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDirty() : boolean" num="74" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDirty() : void" num="80" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/volatiles/array/DirtyVolatileIntArray.java" name="DirtyVolatileIntArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="85" coveredmethods="0" methods="6" elements="13" classes="1" ncloc="37" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="DirtyVolatileIntArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DirtyVolatileIntArray(int,boolean)" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DirtyVolatileIntArray(int[],boolean)" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(int,int) : void" num="61" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createArray(int,boolean) : DirtyVolatileIntArray" num="68" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDirty() : boolean" num="74" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDirty() : void" num="80" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/volatiles/array/DirtyVolatileLongArray.java" name="DirtyVolatileLongArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="85" coveredmethods="0" methods="6" elements="13" classes="1" ncloc="37" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="DirtyVolatileLongArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DirtyVolatileLongArray(int,boolean)" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DirtyVolatileLongArray(long[],boolean)" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(int,long) : void" num="61" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createArray(int,boolean) : DirtyVolatileLongArray" num="68" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDirty() : boolean" num="74" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDirty() : void" num="80" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/volatiles/array/DirtyVolatileShortArray.java" name="DirtyVolatileShortArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="85" coveredmethods="0" methods="6" elements="13" classes="1" ncloc="37" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="DirtyVolatileShortArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DirtyVolatileShortArray(int,boolean)" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DirtyVolatileShortArray(short[],boolean)" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(int,short) : void" num="61" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createArray(int,boolean) : DirtyVolatileShortArray" num="68" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDirty() : boolean" num="74" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDirty() : void" num="80" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/volatiles/array/VolatileBooleanArray.java" name="VolatileBooleanArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="61" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="19" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="VolatileBooleanArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="VolatileBooleanArray(int,boolean)" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileBooleanArray(boolean[],boolean)" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createArray(int,boolean) : VolatileBooleanArray" num="56" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/volatiles/array/VolatileByteArray.java" name="VolatileByteArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="62" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="19" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="VolatileByteArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="VolatileByteArray(int,boolean)" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileByteArray(byte[],boolean)" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createArray(int,boolean) : VolatileByteArray" num="57" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/volatiles/array/VolatileCharArray.java" name="VolatileCharArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="62" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="19" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="VolatileCharArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="VolatileCharArray(int,boolean)" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileCharArray(char[],boolean)" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createArray(int,boolean) : VolatileCharArray" num="57" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/volatiles/array/VolatileDoubleArray.java" name="VolatileDoubleArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="62" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="19" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="VolatileDoubleArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="VolatileDoubleArray(int,boolean)" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileDoubleArray(double[],boolean)" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createArray(int,boolean) : VolatileDoubleArray" num="57" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/volatiles/array/VolatileFloatArray.java" name="VolatileFloatArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="62" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="19" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="VolatileFloatArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="VolatileFloatArray(int,boolean)" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileFloatArray(float[],boolean)" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createArray(int,boolean) : VolatileFloatArray" num="57" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/volatiles/array/VolatileIntArray.java" name="VolatileIntArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="62" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="19" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="VolatileIntArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="VolatileIntArray(int,boolean)" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileIntArray(int[],boolean)" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createArray(int,boolean) : VolatileIntArray" num="57" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/volatiles/array/VolatileLongArray.java" name="VolatileLongArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="62" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="19" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="VolatileLongArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="VolatileLongArray(int,boolean)" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileLongArray(long[],boolean)" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createArray(int,boolean) : VolatileLongArray" num="57" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/volatiles/array/VolatileShortArray.java" name="VolatileShortArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="62" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="19" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="VolatileShortArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="VolatileShortArray(int,boolean)" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileShortArray(short[],boolean)" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createArray(int,boolean) : VolatileShortArray" num="57" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.interpolation">
         <metrics coveredelements="0" complexity="6" loc="145" methods="6" classes="2" statements="7" coveredconditionals="0" coveredmethods="0" elements="13" ncloc="47" files="2" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/interpolation/Interpolant.java" name="Interpolant.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="91" coveredmethods="0" methods="6" elements="13" classes="1" ncloc="39" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="Interpolant">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Interpolant(F,InterpolatorFactory&lt; T, F &gt;)" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="61" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realRandomAccess() : RealRandomAccess&lt; T &gt;" num="67" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realRandomAccess(RealInterval) : RealRandomAccess&lt; T &gt;" num="73" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSource() : F" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInterpolatorFactory() : InterpolatorFactory&lt; T, F &gt;" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/interpolation/InterpolatorFactory.java" name="InterpolatorFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="54" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="InterpolatorFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.imglib2.test">
         <metrics coveredelements="0" complexity="64" loc="638" methods="46" classes="4" statements="117" coveredconditionals="0" coveredmethods="0" elements="183" ncloc="390" files="4" conditionals="20" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/test/ImgLib2Assert.java" name="ImgLib2Assert.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="16" loc="156" coveredmethods="0" methods="11" elements="42" classes="1" ncloc="82" statements="21" conditionals="10" coveredstatements="0"/>
            <class name="ImgLib2Assert">
               <metrics coveredelements="0" coveredconditionals="0" complexity="16" coveredmethods="0" methods="11" elements="42" statements="21" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="ImgLib2Assert()" num="56" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="assertImageEquals(RandomAccessibleInterval&lt; ? extends A &gt;,RandomAccessibleInterval&lt; ? extends B &gt;) : void" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertImageEqualsRealType(RandomAccessibleInterval&lt; ? extends RealType&lt; ? &gt; &gt;,RandomAccessibleInterval&lt; ? extends RealType&lt; ? &gt; &gt;,double) : void" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertImageEqualsIntegerType(RandomAccessibleInterval&lt; ? extends IntegerType&lt; ? &gt; &gt;,RandomAccessibleInterval&lt; ? extends IntegerType&lt; ? &gt; &gt;) : void" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="assertImageEquals(RandomAccessibleInterval&lt; ? extends A &gt;,RandomAccessibleInterval&lt; ? extends B &gt;,BiPredicate&lt; A, B &gt;) : void" num="98" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="assertIntervalEquals(Interval,Interval) : void" num="117" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="119" type="cond"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="assertIntervalEquals(RealInterval,RealInterval,double) : void" num="123" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="positionToString(Localizable) : String" num="132" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="intervalToString(Interval) : String" num="140" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="intervalToString(RealInterval) : String" num="146" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="fail(String) : void" num="152" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/test/RandomImgs.java" name="RandomImgs.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="19" loc="135" coveredmethods="0" methods="6" elements="37" classes="1" ncloc="77" statements="21" conditionals="10" coveredstatements="0"/>
            <class name="RandomImgs">
               <metrics coveredelements="0" coveredconditionals="0" complexity="19" coveredmethods="0" methods="6" elements="37" statements="21" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="seed(int) : RandomImgs" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="RandomImgs(int)" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="nextImage(T,Interval) : RandomAccessibleInterval&lt; T &gt;" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="nextImage(T,long) : Img&lt; T &gt;" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomize(I) : I" num="105" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="14" visibility="private" signature="randomSetter(T) : Consumer&lt; T &gt;" num="113" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="121" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="127" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="129" type="cond"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="131" type="cond"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/test/ImgLib2AssertTest.java" name="ImgLib2AssertTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="153" coveredmethods="0" methods="15" elements="36" classes="1" ncloc="91" statements="21" conditionals="0" coveredstatements="0"/>
            <class name="ImgLib2AssertTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="15" elements="36" statements="21" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testIntervalToString() : void" num="50" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAssertIntervalsEquals() : void" num="58" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAssertIntervalsEquals_Fail() : void" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAssertImageEqualsWithPredicate() : void" num="76" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAssertImageEqualsWithPredicate_Fail() : void" num="82" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAssertImageEqualsWithPredicate_FailForInterval() : void" num="88" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAssertImageEquals() : void" num="96" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAssertImageEquals_Fail() : void" num="102" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAssertImageEqualsIntegerType() : void" num="110" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAssertImageEqualsIntegerType_Fail() : void" num="116" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAssertImageEqualsRealType() : void" num="124" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAssertImageEqualsRealType_Fail() : void" num="130" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="img(int) : Img&lt; IntType &gt;" num="138" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="img(long) : Img&lt; LongType &gt;" num="143" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="img(double) : Img&lt; DoubleType &gt;" num="148" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/test/RandomImgsTest.java" name="RandomImgsTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="194" coveredmethods="0" methods="14" elements="68" classes="1" ncloc="140" statements="54" conditionals="0" coveredstatements="0"/>
            <class name="RandomImgsTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="14" elements="68" statements="54" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testRandomImage() : void" num="75" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRandomImageDimensions() : void" num="83" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRandomImageInterval() : void" num="91" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRandomize() : void" num="99" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRandomImageIntergerTypes() : void" num="107" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testARGBType() : void" num="124" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="createAndTestIntegerTypeImage(T) : void" num="134" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="testIsRandomImageIntegerType(RandomAccessibleInterval&lt; T &gt;) : void" num="140" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRandomImageRealTypes() : void" num="155" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="createAndTestRealTypeImage(T) : void" num="162" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="testUniformDistribution(Img&lt; ? extends RealType&lt; ? &gt; &gt;) : void" num="168" count="0" type="method"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="mean(Img&lt; ? extends RealType&lt; ? &gt; &gt;) : double" num="174" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="variance(Img&lt; ? extends RealType&lt; ? &gt; &gt;) : double" num="180" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="fold(double,DoubleBinaryOperator,Iterable&lt; ? extends RealType&lt; ? &gt; &gt;) : double" num="187" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.display.screenimage">
         <metrics coveredelements="0" complexity="0" loc="49" methods="0" classes="1" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="5" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/display/screenimage/ScreenImage.java" name="ScreenImage.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="49" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ScreenImage">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.imglib2.img.array">
         <metrics coveredelements="0" complexity="206" loc="2838" methods="155" classes="13" statements="628" coveredconditionals="0" coveredmethods="0" elements="885" ncloc="1529" files="13" conditionals="102" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/array/AbstractArrayCursor.java" name="AbstractArrayCursor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="168" coveredmethods="0" methods="10" elements="34" classes="1" ncloc="75" statements="24" conditionals="0" coveredstatements="0"/>
            <class name="AbstractArrayCursor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="10" elements="34" statements="24" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="AbstractArrayCursor(AbstractArrayCursor&lt; T &gt;)" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractArrayCursor(ArrayImg&lt; T, ? &gt;,int,int)" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="120" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="126" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="jumpFwd(long) : void" num="132" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fwd() : void" num="138" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reset() : void" num="144" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="151" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntPosition(int) : int" num="157" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(int[]) : void" num="163" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/array/AbstractArrayLocalizingCursor.java" name="AbstractArrayLocalizingCursor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="12" loc="222" coveredmethods="0" methods="7" elements="56" classes="1" ncloc="89" statements="39" conditionals="10" coveredstatements="0"/>
            <class name="AbstractArrayLocalizingCursor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="12" coveredmethods="0" methods="7" elements="56" statements="39" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="protected" signature="AbstractArrayLocalizingCursor(AbstractArrayLocalizingCursor&lt; T &gt;)" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="AbstractArrayLocalizingCursor(ArrayImg&lt; T, ? &gt;,int,int)" num="122" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="134" type="cond"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="143" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="152" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="fwd() : void" num="161" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="179" type="cond"/>
            <line num="181" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="187" type="cond"/>
            <line num="189" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="189" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="jumpFwd(long) : void" num="202" count="0" type="method"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reset() : void" num="212" count="0" type="method"/>
            <line num="215" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/array/ArrayCursor.java" name="ArrayCursor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="72" coveredmethods="0" methods="4" elements="8" classes="1" ncloc="24" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="ArrayCursor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="ArrayCursor(ArrayCursor&lt; T &gt;)" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ArrayCursor(ArrayImg&lt; T, ? &gt;)" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : ArrayCursor&lt; T &gt;" num="61" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyCursor() : ArrayCursor&lt; T &gt;" num="67" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/array/ArrayImg.java" name="ArrayImg.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="28" loc="234" coveredmethods="0" methods="16" elements="88" classes="1" ncloc="130" statements="48" conditionals="24" coveredstatements="0"/>
            <class name="ArrayImg">
               <metrics coveredelements="0" coveredconditionals="0" complexity="28" coveredmethods="0" methods="16" elements="88" statements="48" conditionals="24" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="ArrayImg(A,long[],Fraction)" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="update(Object) : A" num="82" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cursor() : ArrayCursor&lt; T &gt;" num="88" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localizingCursor() : ArrayLocalizingCursor&lt; T &gt;" num="94" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess() : ArrayRandomAccess&lt; T &gt;" num="100" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess(Interval) : ArrayRandomAccess&lt; T &gt;" num="106" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterationOrder() : FlatIterationOrder" num="112" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="factory() : ArrayImgFactory&lt; T &gt;" num="118" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="copy() : ArrayImg&lt; T, ? &gt;" num="124" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="132" type="cond"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="cursor(Interval) : Cursor&lt; T &gt;" num="141" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="size(Interval,int) : long" num="151" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="154" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="offset(Interval) : long" num="162" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="166" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="7" visibility="private" signature="fastCursorAvailable(Interval) : int" num="178" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="181" type="cond"/>
            <line num="182" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="186" type="cond"/>
            <line num="187" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="187" type="cond"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="191" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="197" type="cond"/>
            <line num="198" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="198" type="cond"/>
            <line num="199" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localizingCursor(Interval) : Cursor&lt; T &gt;" num="207" count="0" type="method"/>
            <line num="210" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="212" type="cond"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="supportsOptimizedCursor(Interval) : boolean" num="220" count="0" type="method"/>
            <line num="223" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subIntervalIterationOrder(Interval) : Object" num="229" count="0" type="method"/>
            <line num="232" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/array/ArrayImgFactory.java" name="ArrayImgFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="145" coveredmethods="0" methods="9" elements="36" classes="1" ncloc="79" statements="23" conditionals="4" coveredstatements="0"/>
            <class name="ArrayImgFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="9" elements="36" statements="23" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ArrayImgFactory(T)" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(long) : ArrayImg&lt; T, ? &gt;" num="65" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(Dimensions) : ArrayImg&lt; T, ? &gt;" num="73" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(int[]) : ArrayImg&lt; T, ? &gt;" num="79" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="create(long[],T,NativeTypeFactory&lt; T, A &gt;) : ArrayImg&lt; T, A &gt;" num="85" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="numEntitiesRangeCheck(long[],Fraction) : int" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="imgFactory(S) : ImgFactory&lt; S &gt;" num="109" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ArrayImgFactory()" num="130" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(long[],T) : ArrayImg&lt; T, ? &gt;" num="136" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/array/ArrayImgs.java" name="ArrayImgs.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="57" loc="670" coveredmethods="0" methods="57" elements="173" classes="1" ncloc="348" statements="116" conditionals="0" coveredstatements="0"/>
            <class name="ArrayImgs">
               <metrics coveredelements="0" coveredconditionals="0" complexity="57" coveredmethods="0" methods="57" elements="173" statements="116" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="ArrayImgs()" num="98" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="unsignedBytes(long) : ArrayImg&lt; UnsignedByteType, ByteArray &gt;" num="104" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unsignedBytes(byte[],long) : ArrayImg&lt; UnsignedByteType, ByteArray &gt;" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unsignedBytes(A,long) : ArrayImg&lt; UnsignedByteType, A &gt;" num="123" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bytes(long) : ArrayImg&lt; ByteType, ByteArray &gt;" num="134" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bytes(byte[],long) : ArrayImg&lt; ByteType, ByteArray &gt;" num="144" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bytes(A,long) : ArrayImg&lt; ByteType, A &gt;" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unsignedShorts(long) : ArrayImg&lt; UnsignedShortType, ShortArray &gt;" num="165" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unsignedShorts(short[],long) : ArrayImg&lt; UnsignedShortType, ShortArray &gt;" num="175" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unsignedShorts(A,long) : ArrayImg&lt; UnsignedShortType, A &gt;" num="184" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="shorts(long) : ArrayImg&lt; ShortType, ShortArray &gt;" num="195" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="shorts(short[],long) : ArrayImg&lt; ShortType, ShortArray &gt;" num="205" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="shorts(A,long) : ArrayImg&lt; ShortType, A &gt;" num="214" count="0" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unsignedInts(long) : ArrayImg&lt; UnsignedIntType, IntArray &gt;" num="225" count="0" type="method"/>
            <line num="228" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unsignedInts(int[],long) : ArrayImg&lt; UnsignedIntType, IntArray &gt;" num="235" count="0" type="method"/>
            <line num="237" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unsignedInts(A,long) : ArrayImg&lt; UnsignedIntType, A &gt;" num="244" count="0" type="method"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ints(long) : ArrayImg&lt; IntType, IntArray &gt;" num="255" count="0" type="method"/>
            <line num="258" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ints(int[],long) : ArrayImg&lt; IntType, IntArray &gt;" num="265" count="0" type="method"/>
            <line num="267" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ints(A,long) : ArrayImg&lt; IntType, A &gt;" num="274" count="0" type="method"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unsignedLongs(long) : ArrayImg&lt; UnsignedLongType, LongArray &gt;" num="285" count="0" type="method"/>
            <line num="288" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unsignedLongss(long[],long) : ArrayImg&lt; UnsignedLongType, LongArray &gt;" num="297" count="0" type="method"/>
            <line num="300" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unsignedLongs(long[],long) : ArrayImg&lt; UnsignedLongType, LongArray &gt;" num="307" count="0" type="method"/>
            <line num="309" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unsignedLongs(A,long) : ArrayImg&lt; UnsignedLongType, A &gt;" num="316" count="0" type="method"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="longs(long) : ArrayImg&lt; LongType, LongArray &gt;" num="327" count="0" type="method"/>
            <line num="330" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="longs(long[],long) : ArrayImg&lt; LongType, LongArray &gt;" num="337" count="0" type="method"/>
            <line num="339" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="longs(A,long) : ArrayImg&lt; LongType, A &gt;" num="346" count="0" type="method"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="booleans(long) : ArrayImg&lt; NativeBoolType, BooleanArray &gt;" num="357" count="0" type="method"/>
            <line num="360" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="booleans(boolean[],long) : ArrayImg&lt; NativeBoolType, BooleanArray &gt;" num="367" count="0" type="method"/>
            <line num="369" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="booleans(A,long) : ArrayImg&lt; NativeBoolType, A &gt;" num="376" count="0" type="method"/>
            <line num="378" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bits(long) : ArrayImg&lt; BitType, LongArray &gt;" num="387" count="0" type="method"/>
            <line num="390" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bits(A,long) : ArrayImg&lt; NativeBoolType, A &gt;" num="396" count="0" type="method"/>
            <line num="399" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bits(A,long) : ArrayImg&lt; BitType, A &gt;" num="406" count="0" type="method"/>
            <line num="408" count="0" type="stmt"/>
            <line num="409" count="0" type="stmt"/>
            <line num="410" count="0" type="stmt"/>
            <line num="411" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unsigned2Bits(long) : ArrayImg&lt; Unsigned2BitType, LongArray &gt;" num="417" count="0" type="method"/>
            <line num="420" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unsigned2Bits(A,long) : ArrayImg&lt; Unsigned2BitType, A &gt;" num="427" count="0" type="method"/>
            <line num="429" count="0" type="stmt"/>
            <line num="430" count="0" type="stmt"/>
            <line num="431" count="0" type="stmt"/>
            <line num="432" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unsigned4Bits(long) : ArrayImg&lt; Unsigned4BitType, LongArray &gt;" num="438" count="0" type="method"/>
            <line num="441" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unsigned4Bits(A,long) : ArrayImg&lt; Unsigned4BitType, A &gt;" num="448" count="0" type="method"/>
            <line num="450" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line num="453" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unsigned12Bits(long) : ArrayImg&lt; Unsigned12BitType, LongArray &gt;" num="459" count="0" type="method"/>
            <line num="462" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unsigned12Bits(A,long) : ArrayImg&lt; Unsigned12BitType, A &gt;" num="469" count="0" type="method"/>
            <line num="471" count="0" type="stmt"/>
            <line num="472" count="0" type="stmt"/>
            <line num="473" count="0" type="stmt"/>
            <line num="474" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unsigned128Bits(long) : ArrayImg&lt; Unsigned128BitType, LongArray &gt;" num="480" count="0" type="method"/>
            <line num="483" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unsigned128Bits(A,long) : ArrayImg&lt; Unsigned128BitType, A &gt;" num="490" count="0" type="method"/>
            <line num="492" count="0" type="stmt"/>
            <line num="493" count="0" type="stmt"/>
            <line num="494" count="0" type="stmt"/>
            <line num="495" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unsignedVariableBitLengths(int,long) : ArrayImg&lt; UnsignedVariableBitLengthType, LongArray &gt;" num="501" count="0" type="method"/>
            <line num="504" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unsignedVariableBitLengths(A,int,long) : ArrayImg&lt; UnsignedVariableBitLengthType, A &gt;" num="511" count="0" type="method"/>
            <line num="513" count="0" type="stmt"/>
            <line num="514" count="0" type="stmt"/>
            <line num="515" count="0" type="stmt"/>
            <line num="516" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="floats(long) : ArrayImg&lt; FloatType, FloatArray &gt;" num="522" count="0" type="method"/>
            <line num="525" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="floats(float[],long) : ArrayImg&lt; FloatType, FloatArray &gt;" num="532" count="0" type="method"/>
            <line num="534" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="floats(A,long) : ArrayImg&lt; FloatType, A &gt;" num="541" count="0" type="method"/>
            <line num="543" count="0" type="stmt"/>
            <line num="544" count="0" type="stmt"/>
            <line num="545" count="0" type="stmt"/>
            <line num="546" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubles(long) : ArrayImg&lt; DoubleType, DoubleArray &gt;" num="552" count="0" type="method"/>
            <line num="555" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubles(double[],long) : ArrayImg&lt; DoubleType, DoubleArray &gt;" num="562" count="0" type="method"/>
            <line num="564" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubles(A,long) : ArrayImg&lt; DoubleType, A &gt;" num="571" count="0" type="method"/>
            <line num="573" count="0" type="stmt"/>
            <line num="574" count="0" type="stmt"/>
            <line num="575" count="0" type="stmt"/>
            <line num="576" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="argbs(long) : ArrayImg&lt; ARGBType, IntArray &gt;" num="582" count="0" type="method"/>
            <line num="585" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="argbs(int[],long) : ArrayImg&lt; ARGBType, IntArray &gt;" num="592" count="0" type="method"/>
            <line num="594" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="argbs(A,long) : ArrayImg&lt; ARGBType, A &gt;" num="601" count="0" type="method"/>
            <line num="603" count="0" type="stmt"/>
            <line num="604" count="0" type="stmt"/>
            <line num="605" count="0" type="stmt"/>
            <line num="606" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="complexFloats(long) : ArrayImg&lt; ComplexFloatType, FloatArray &gt;" num="612" count="0" type="method"/>
            <line num="615" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="complexFloats(float[],long) : ArrayImg&lt; ComplexFloatType, FloatArray &gt;" num="622" count="0" type="method"/>
            <line num="624" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="complexFloats(A,long) : ArrayImg&lt; ComplexFloatType, A &gt;" num="631" count="0" type="method"/>
            <line num="633" count="0" type="stmt"/>
            <line num="634" count="0" type="stmt"/>
            <line num="635" count="0" type="stmt"/>
            <line num="636" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="complexDoubles(long) : ArrayImg&lt; ComplexDoubleType, DoubleArray &gt;" num="643" count="0" type="method"/>
            <line num="646" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="complexDoubles(double[],long) : ArrayImg&lt; ComplexDoubleType, DoubleArray &gt;" num="653" count="0" type="method"/>
            <line num="655" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="complexDoubles(A,long) : ArrayImg&lt; ComplexDoubleType, A &gt;" num="662" count="0" type="method"/>
            <line num="664" count="0" type="stmt"/>
            <line num="665" count="0" type="stmt"/>
            <line num="666" count="0" type="stmt"/>
            <line num="667" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/array/ArrayLocalizingCursor.java" name="ArrayLocalizingCursor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="85" coveredmethods="0" methods="4" elements="8" classes="1" ncloc="24" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="ArrayLocalizingCursor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="ArrayLocalizingCursor(ArrayLocalizingCursor&lt; T &gt;)" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ArrayLocalizingCursor(ArrayImg&lt; T, ? &gt;)" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : ArrayLocalizingCursor&lt; T &gt;" num="74" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyCursor() : ArrayLocalizingCursor&lt; T &gt;" num="80" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/array/ArrayLocalizingSubIntervalCursor.java" name="ArrayLocalizingSubIntervalCursor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="87" coveredmethods="0" methods="4" elements="8" classes="1" ncloc="23" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="ArrayLocalizingSubIntervalCursor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="ArrayLocalizingSubIntervalCursor(ArrayImg&lt; T, ? &gt;,int,int)" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="ArrayLocalizingSubIntervalCursor(ArrayLocalizingSubIntervalCursor&lt; T &gt;)" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : ArrayLocalizingSubIntervalCursor&lt; T &gt;" num="75" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyCursor() : ArrayLocalizingSubIntervalCursor&lt; T &gt;" num="81" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/array/ArrayRandomAccess.java" name="ArrayRandomAccess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="31" loc="296" coveredmethods="0" methods="23" elements="114" classes="1" ncloc="183" statements="75" conditionals="16" coveredstatements="0"/>
            <class name="ArrayRandomAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="31" coveredmethods="0" methods="23" elements="114" statements="75" conditionals="16" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="protected" signature="ArrayRandomAccess(ArrayRandomAccess&lt; T &gt;)" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="ArrayRandomAccess(ArrayImg&lt; T, ? &gt;)" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="89" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fwd(int) : void" num="95" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bck(int) : void" num="102" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(int,int) : void" num="109" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(long,int) : void" num="116" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(Localizable) : void" num="123" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="127" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(int[]) : void" num="136" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="140" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(long[]) : void" num="148" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="152" type="cond"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(Localizable) : void" num="160" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(int[]) : void" num="172" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="176" type="cond"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(long[]) : void" num="184" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="188" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(int,int) : void" num="197" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(long,int) : void" num="204" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : ArrayRandomAccess&lt; T &gt;" num="211" count="0" type="method"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRandomAccess() : ArrayRandomAccess&lt; T &gt;" num="217" count="0" type="method"/>
            <line num="220" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fwdDim0() : void" num="228" count="0" type="method"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bckDim0() : void" num="237" count="0" type="method"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="moveDim0(int) : void" num="249" count="0" type="method"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(long) : void" num="261" count="0" type="method"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPositionDim0(int) : void" num="276" count="0" type="method"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPositionDim0(long) : void" num="291" count="0" type="method"/>
            <line num="293" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/array/ArraySubIntervalCursor.java" name="ArraySubIntervalCursor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="87" coveredmethods="0" methods="4" elements="8" classes="1" ncloc="24" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="ArraySubIntervalCursor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="ArraySubIntervalCursor(ArraySubIntervalCursor&lt; T &gt;)" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ArraySubIntervalCursor(ArrayImg&lt; T, ? &gt;,int,int)" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : ArraySubIntervalCursor&lt; T &gt;" num="76" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyCursor() : ArraySubIntervalCursor&lt; T &gt;" num="82" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/img/array/ArrayImgTest.java" name="ArrayImgTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="100" coveredmethods="0" methods="3" elements="19" classes="1" ncloc="45" statements="14" conditionals="2" coveredstatements="0"/>
            <class name="ArrayImgTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="3" elements="19" statements="14" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="testArrayImg() : void" num="62" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSizeLimit() : void" num="73" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArrayImgInvalidDimensions() : void" num="95" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/img/array/ArrayImgsTest.java" name="ArrayImgsTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="32" loc="543" coveredmethods="0" methods="12" elements="299" classes="1" ncloc="428" statements="247" conditionals="40" coveredstatements="0"/>
            <class name="ArrayImgsTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="32" coveredmethods="0" methods="12" elements="299" statements="247" conditionals="40" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="testUnsigned2Bits() : void" num="93" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="98" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnsigned4Bits() : void" num="124" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnsigned12Bits() : void" num="149" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnsigned128Bits() : void" num="176" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnsignedVariableBits7() : void" num="210" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUnsignedVariableBits33() : void" num="235" count="0" type="method"/>
            <line num="238" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line complexity="16" visibility="public" signature="testHelperMethods() : void" num="270" count="0" type="method"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="276" type="cond"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="292" type="cond"/>
            <line num="293" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="308" type="cond"/>
            <line num="309" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="328" type="cond"/>
            <line num="329" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="334" type="cond"/>
            <line num="335" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="346" type="cond"/>
            <line num="347" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line num="354" count="0" type="stmt"/>
            <line num="355" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="357" type="cond"/>
            <line num="359" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line num="364" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line num="372" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="372" type="cond"/>
            <line num="373" count="0" type="stmt"/>
            <line num="374" count="0" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="383" type="cond"/>
            <line num="385" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line num="388" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line num="392" count="0" type="stmt"/>
            <line num="397" count="0" type="stmt"/>
            <line num="398" count="0" type="stmt"/>
            <line num="399" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="399" type="cond"/>
            <line num="400" count="0" type="stmt"/>
            <line num="401" count="0" type="stmt"/>
            <line num="402" count="0" type="stmt"/>
            <line num="403" count="0" type="stmt"/>
            <line num="404" count="0" type="stmt"/>
            <line num="405" count="0" type="stmt"/>
            <line num="407" count="0" type="stmt"/>
            <line num="408" count="0" type="stmt"/>
            <line num="409" count="0" type="stmt"/>
            <line num="410" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="410" type="cond"/>
            <line num="412" count="0" type="stmt"/>
            <line num="413" count="0" type="stmt"/>
            <line num="414" count="0" type="stmt"/>
            <line num="416" count="0" type="stmt"/>
            <line num="417" count="0" type="stmt"/>
            <line num="422" count="0" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line num="424" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="424" type="cond"/>
            <line num="425" count="0" type="stmt"/>
            <line num="426" count="0" type="stmt"/>
            <line num="428" count="0" type="stmt"/>
            <line num="429" count="0" type="stmt"/>
            <line num="430" count="0" type="stmt"/>
            <line num="432" count="0" type="stmt"/>
            <line num="433" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line num="435" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="435" type="cond"/>
            <line num="437" count="0" type="stmt"/>
            <line num="438" count="0" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line num="440" count="0" type="stmt"/>
            <line num="441" count="0" type="stmt"/>
            <line num="442" count="0" type="stmt"/>
            <line num="444" count="0" type="stmt"/>
            <line num="449" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="451" type="cond"/>
            <line num="452" count="0" type="stmt"/>
            <line num="453" count="0" type="stmt"/>
            <line num="454" count="0" type="stmt"/>
            <line num="455" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="455" type="cond"/>
            <line num="456" count="0" type="stmt"/>
            <line num="461" count="0" type="stmt"/>
            <line num="462" count="0" type="stmt"/>
            <line num="463" count="0" type="stmt"/>
            <line num="464" count="0" type="stmt"/>
            <line num="465" count="0" type="stmt"/>
            <line num="466" count="0" type="stmt"/>
            <line num="467" count="0" type="stmt"/>
            <line num="468" count="0" type="stmt"/>
            <line num="469" count="0" type="stmt"/>
            <line num="470" count="0" type="stmt"/>
            <line num="471" count="0" type="stmt"/>
            <line num="472" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testRange(ArrayImg&lt; T, ? &gt;,ArrayImg&lt; T, ? &gt;,int,int) : void" num="477" count="0" type="method"/>
            <line num="479" count="0" type="stmt"/>
            <line num="480" count="0" type="stmt"/>
            <line num="481" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="481" type="cond"/>
            <line num="483" count="0" type="stmt"/>
            <line num="484" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEquality(ArrayImg&lt; T, ? &gt;,ArrayImg&lt; T, ? &gt;) : void" num="488" count="0" type="method"/>
            <line num="490" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="490" type="cond"/>
            <line num="491" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEquality(ArrayImg&lt; ? extends RealType&lt; ? &gt;, ? &gt;,float[]) : void" num="494" count="0" type="method"/>
            <line num="496" count="0" type="stmt"/>
            <line num="498" count="0" type="stmt"/>
            <line num="499" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="499" type="cond"/>
            <line num="501" count="0" type="stmt"/>
            <line num="502" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testEquality(ArrayImg&lt; ? extends RealType&lt; ? &gt;, ? &gt;,double[]) : void" num="506" count="0" type="method"/>
            <line num="508" count="0" type="stmt"/>
            <line num="510" count="0" type="stmt"/>
            <line num="511" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="511" type="cond"/>
            <line num="513" count="0" type="stmt"/>
            <line num="514" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInvalidDimensions() : void" num="518" count="0" type="method"/>
            <line num="521" count="0" type="stmt"/>
            <line num="522" count="0" type="stmt"/>
            <line num="523" count="0" type="stmt"/>
            <line num="524" count="0" type="stmt"/>
            <line num="525" count="0" type="stmt"/>
            <line num="526" count="0" type="stmt"/>
            <line num="527" count="0" type="stmt"/>
            <line num="528" count="0" type="stmt"/>
            <line num="529" count="0" type="stmt"/>
            <line num="530" count="0" type="stmt"/>
            <line num="531" count="0" type="stmt"/>
            <line num="532" count="0" type="stmt"/>
            <line num="533" count="0" type="stmt"/>
            <line num="534" count="0" type="stmt"/>
            <line num="535" count="0" type="stmt"/>
            <line num="536" count="0" type="stmt"/>
            <line num="537" count="0" type="stmt"/>
            <line num="538" count="0" type="stmt"/>
            <line num="539" count="0" type="stmt"/>
            <line num="540" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/img/array/ArrayIterableSubIntervalCursorTest.java" name="ArrayIterableSubIntervalCursorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="129" coveredmethods="0" methods="2" elements="34" classes="1" ncloc="57" statements="26" conditionals="6" coveredstatements="0"/>
            <class name="ArrayIterableSubIntervalCursorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="2" elements="34" statements="26" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="createSourceData() : void" num="69" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="98" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOptimizable() : void" num="106" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.img.list">
         <metrics coveredelements="0" complexity="147" loc="1459" methods="112" classes="11" statements="287" coveredconditionals="0" coveredmethods="0" elements="469" ncloc="863" files="8" conditionals="70" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/list/AbstractListImg.java" name="AbstractListImg.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="118" coveredmethods="0" methods="6" elements="19" classes="1" ncloc="48" statements="11" conditionals="2" coveredstatements="0"/>
            <class name="AbstractListImg">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="6" elements="19" statements="11" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="protected" signature="AbstractListImg(long[])" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cursor() : ListCursor&lt; T &gt;" num="89" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localizingCursor() : ListLocalizingCursor&lt; T &gt;" num="95" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess() : ListRandomAccess&lt; T &gt;" num="101" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="factory() : ListImgFactory&lt; T &gt;" num="107" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterationOrder() : FlatIterationOrder" num="113" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/list/AbstractLongListImg.java" name="AbstractLongListImg.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="56" loc="431" coveredmethods="0" methods="45" elements="161" classes="4" ncloc="305" statements="94" conditionals="22" coveredstatements="0"/>
            <class name="AbstractLongListImg">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="12" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="AbstractLongListImg.LongListCursor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="12" coveredmethods="0" methods="12" elements="28" statements="16" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="AbstractLongListImg.LongListLocalizingCursor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="10" elements="46" statements="28" conditionals="8" coveredstatements="0"/>
            </class>
            <class name="AbstractLongListImg.LongListRandomAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="25" coveredmethods="0" methods="18" elements="75" statements="43" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="LongListCursor(LongListCursor)" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LongListCursor()" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="95" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(T) : void" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : LongListCursor" num="106" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyCursor() : LongListCursor" num="112" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="118" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="jumpFwd(long) : void" num="124" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fwd() : void" num="130" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reset() : void" num="136" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(long[]) : void" num="142" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLongPosition(int) : long" num="148" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="LongListLocalizingCursor(LongListLocalizingCursor)" num="163" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="170" type="cond"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LongListLocalizingCursor()" num="179" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="fwd() : void" num="191" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="195" type="cond"/>
            <line num="196" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="196" type="cond"/>
            <line num="197" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="jumpFwd(long) : void" num="202" count="0" type="method"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="209" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="reset() : void" num="215" count="0" type="method"/>
            <line num="218" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="222" type="cond"/>
            <line num="223" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="226" count="0" type="method"/>
            <line num="229" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(T) : void" num="232" count="0" type="method"/>
            <line num="234" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : LongListLocalizingCursor" num="237" count="0" type="method"/>
            <line num="240" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyCursor() : LongListLocalizingCursor" num="243" count="0" type="method"/>
            <line num="246" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="LongListRandomAccess(LongListRandomAccess)" num="254" count="0" type="method"/>
            <line num="256" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="258" type="cond"/>
            <line num="259" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LongListRandomAccess()" num="264" count="0" type="method"/>
            <line num="266" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="271" count="0" type="method"/>
            <line num="274" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(T) : void" num="277" count="0" type="method"/>
            <line num="279" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fwd(int) : void" num="282" count="0" type="method"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bck(int) : void" num="289" count="0" type="method"/>
            <line num="292" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(int,int) : void" num="296" count="0" type="method"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(long,int) : void" num="303" count="0" type="method"/>
            <line num="306" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(Localizable) : void" num="309" count="0" type="method"/>
            <line num="312" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="312" type="cond"/>
            <line num="313" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(int[]) : void" num="316" count="0" type="method"/>
            <line num="319" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="319" type="cond"/>
            <line num="320" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(long[]) : void" num="323" count="0" type="method"/>
            <line num="326" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="326" type="cond"/>
            <line num="327" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(Localizable) : void" num="330" count="0" type="method"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="334" type="cond"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(int[]) : void" num="341" count="0" type="method"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="346" type="cond"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(long[]) : void" num="354" count="0" type="method"/>
            <line num="357" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="359" type="cond"/>
            <line num="361" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(int,int) : void" num="367" count="0" type="method"/>
            <line num="370" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(long,int) : void" num="374" count="0" type="method"/>
            <line num="377" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : LongListRandomAccess" num="381" count="0" type="method"/>
            <line num="384" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRandomAccess() : LongListRandomAccess" num="387" count="0" type="method"/>
            <line num="390" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="AbstractLongListImg(long[])" num="396" count="0" type="method"/>
            <line num="398" count="0" type="stmt"/>
            <line num="400" count="0" type="stmt"/>
            <line num="401" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cursor() : LongListCursor" num="408" count="0" type="method"/>
            <line num="411" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localizingCursor() : LongListLocalizingCursor" num="414" count="0" type="method"/>
            <line num="417" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess() : LongListRandomAccess" num="420" count="0" type="method"/>
            <line num="423" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterationOrder() : FlatIterationOrder" num="426" count="0" type="method"/>
            <line num="429" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/list/ListCursor.java" name="ListCursor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="12" loc="137" coveredmethods="0" methods="12" elements="30" classes="1" ncloc="73" statements="18" conditionals="0" coveredstatements="0"/>
            <class name="ListCursor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="12" coveredmethods="0" methods="12" elements="30" statements="18" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="ListCursor(ListCursor&lt; T &gt;)" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ListCursor(AbstractListImg&lt; T &gt;)" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="79" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(T) : void" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : ListCursor&lt; T &gt;" num="90" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyCursor() : ListCursor&lt; T &gt;" num="96" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="102" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="jumpFwd(long) : void" num="108" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fwd() : void" num="114" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reset() : void" num="120" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(int[]) : void" num="126" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntPosition(int) : int" num="132" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/list/ListImg.java" name="ListImg.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="12" loc="133" coveredmethods="0" methods="6" elements="43" classes="1" ncloc="65" statements="25" conditionals="12" coveredstatements="0"/>
            <class name="ListImg">
               <metrics coveredelements="0" coveredconditionals="0" complexity="12" coveredmethods="0" methods="6" elements="43" statements="25" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="ListImg(long[],T)" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="ListImg(Collection&lt; T &gt;,long)" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="get(int) : T" num="96" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="set(int,T) : void" num="102" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="copyWithType(ListImg&lt; A &gt;) : ListImg&lt; A &gt;" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="copy() : ListImg&lt; T &gt;" num="121" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/list/ListImgFactory.java" name="ListImgFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="118" coveredmethods="0" methods="7" elements="15" classes="1" ncloc="47" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="ListImgFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="15" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ListImgFactory(T)" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(long) : ListImg&lt; T &gt;" num="68" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(Dimensions) : ListImg&lt; T &gt;" num="74" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(int[]) : ListImg&lt; T &gt;" num="80" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="imgFactory(S) : ImgFactory&lt; S &gt;" num="86" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ListImgFactory()" num="104" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(long[],T) : ListImg&lt; T &gt;" num="110" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/list/ListLocalizingCursor.java" name="ListLocalizingCursor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="148" coveredmethods="0" methods="10" elements="48" classes="1" ncloc="81" statements="30" conditionals="8" coveredstatements="0"/>
            <class name="ListLocalizingCursor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="10" elements="48" statements="30" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="ListLocalizingCursor(ListLocalizingCursor&lt; T &gt;)" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ListLocalizingCursor(AbstractListImg&lt; T &gt;)" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="fwd() : void" num="91" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="jumpFwd(long) : void" num="102" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="109" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="reset() : void" num="115" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="126" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(T) : void" num="132" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : ListLocalizingCursor&lt; T &gt;" num="137" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyCursor() : ListLocalizingCursor&lt; T &gt;" num="143" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/list/ListRandomAccess.java" name="ListRandomAccess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="25" loc="199" coveredmethods="0" methods="18" elements="77" classes="1" ncloc="129" statements="45" conditionals="14" coveredstatements="0"/>
            <class name="ListRandomAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="25" coveredmethods="0" methods="18" elements="77" statements="45" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="ListRandomAccess(ListRandomAccess&lt; T &gt;)" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ListRandomAccess(AbstractListImg&lt; T &gt;)" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="78" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(T) : void" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fwd(int) : void" num="89" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bck(int) : void" num="96" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(int,int) : void" num="103" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(long,int) : void" num="110" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(Localizable) : void" num="116" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="119" type="cond"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(int[]) : void" num="123" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(long[]) : void" num="130" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(Localizable) : void" num="137" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="141" type="cond"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(int[]) : void" num="148" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="153" type="cond"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(long[]) : void" num="161" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="166" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(int,int) : void" num="174" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(long,int) : void" num="181" count="0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : ListRandomAccess&lt; T &gt;" num="188" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRandomAccess() : ListRandomAccess&lt; T &gt;" num="194" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/img/list/CopyTest.java" name="CopyTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="175" coveredmethods="0" methods="8" elements="76" classes="1" ncloc="115" statements="56" conditionals="12" coveredstatements="0"/>
            <class name="CopyTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="8" elements="76" statements="56" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="createSourceData() : void" num="68" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="copyWithSourceIteration(Img&lt; IntType &gt;,Img&lt; IntType &gt;) : void" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="copyWithDestIteration(Img&lt; IntType &gt;,Img&lt; IntType &gt;) : void" num="113" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="getImgAsInts(Img&lt; IntType &gt;) : int[]" num="127" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCopyToArrayImgWithSourceIteration() : void" num="144" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCopyToArrayImgWithDestIteration() : void" num="152" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCopyToListImgWithSourceIteration() : void" num="160" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCopyToPlanarImgWithDestIteration() : void" num="168" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.img.basictypeaccess.volatiles">
         <metrics coveredelements="0" complexity="0" loc="435" methods="0" classes="10" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="43" files="10" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/volatiles/VolatileAccess.java" name="VolatileAccess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="44" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="VolatileAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/volatiles/VolatileArrayDataAccess.java" name="VolatileArrayDataAccess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="46" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="VolatileArrayDataAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/volatiles/VolatileBooleanAccess.java" name="VolatileBooleanAccess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="43" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="VolatileBooleanAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/volatiles/VolatileByteAccess.java" name="VolatileByteAccess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="44" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="VolatileByteAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/volatiles/VolatileCharAccess.java" name="VolatileCharAccess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="44" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="VolatileCharAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/volatiles/VolatileDoubleAccess.java" name="VolatileDoubleAccess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="44" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="VolatileDoubleAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/volatiles/VolatileFloatAccess.java" name="VolatileFloatAccess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="42" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="VolatileFloatAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/volatiles/VolatileIntAccess.java" name="VolatileIntAccess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="43" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="VolatileIntAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/volatiles/VolatileLongAccess.java" name="VolatileLongAccess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="43" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="VolatileLongAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/volatiles/VolatileShortAccess.java" name="VolatileShortAccess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="42" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="VolatileShortAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.imglib2.position.transform">
         <metrics coveredelements="0" complexity="176" loc="1544" methods="100" classes="5" statements="478" coveredconditionals="0" coveredmethods="0" elements="730" ncloc="1043" files="5" conditionals="152" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/position/transform/AbstractPositionableTransform.java" name="AbstractPositionableTransform.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="27" loc="212" coveredmethods="0" methods="18" elements="82" classes="1" ncloc="129" statements="46" conditionals="18" coveredstatements="0"/>
            <class name="AbstractPositionableTransform">
               <metrics coveredelements="0" coveredconditionals="0" complexity="27" coveredmethods="0" methods="18" elements="82" statements="46" conditionals="18" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractPositionableTransform(LocalizablePositionable)" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDoublePosition(int) : double" num="74" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatPosition(int) : float" num="80" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(float[]) : void" num="86" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(double[]) : void" num="93" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bck(int) : void" num="102" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fwd(int) : void" num="109" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(int,int) : void" num="116" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(long,int) : void" num="123" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(Localizable) : void" num="130" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(int[]) : void" num="139" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="142" type="cond"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(long[]) : void" num="148" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="151" type="cond"/>
            <line num="152" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(Localizable) : void" num="157" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="160" type="cond"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(int[]) : void" num="165" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="168" type="cond"/>
            <line num="169" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(long[]) : void" num="174" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="177" type="cond"/>
            <line num="178" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(int,int) : void" num="183" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(long,int) : void" num="190" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="199" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="205" type="cond"/>
            <line num="206" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/position/transform/Floor.java" name="Floor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="31" loc="207" coveredmethods="0" methods="17" elements="107" classes="1" ncloc="143" statements="62" conditionals="28" coveredstatements="0"/>
            <class name="Floor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="31" coveredmethods="0" methods="17" elements="107" statements="62" conditionals="28" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Floor(LocalizablePositionable)" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="Floor(RealLocalizable,LocalizablePositionable)" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="floor(double) : long" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line complexity="2" visibility="public" signature="floor(float) : long" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line complexity="2" visibility="public" signature="floor(double[],long[]) : void" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="floor(float[],long[]) : void" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="floor(RealLocalizable,long[]) : void" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(float,int) : void" num="97" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(double,int) : void" num="109" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="116" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(RealLocalizable) : void" num="121" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(float[]) : void" num="134" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="137" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(double[]) : void" num="147" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(RealLocalizable) : void" num="160" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(float[]) : void" num="171" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="174" type="cond"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(double[]) : void" num="183" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="186" type="cond"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(float,int) : void" num="194" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(double,int) : void" num="201" count="0" type="method"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/position/transform/FloorOffset.java" name="FloorOffset.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="36" loc="246" coveredmethods="0" methods="19" elements="133" classes="1" ncloc="176" statements="80" conditionals="34" coveredstatements="0"/>
            <class name="FloorOffset">
               <metrics coveredelements="0" coveredconditionals="0" complexity="36" coveredmethods="0" methods="19" elements="133" statements="80" conditionals="34" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="FloorOffset(LocalizablePositionable,long[])" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="FloorOffset(LocalizablePositionable,Localizable)" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="FloorOffset(RealLocalizable,LocalizablePositionable,long[])" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="FloorOffset(RealLocalizable,LocalizablePositionable,Localizable)" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="2" visibility="protected" signature="f(double,long) : long" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line complexity="2" visibility="protected" signature="f(float,long) : long" num="111" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line complexity="2" visibility="protected" signature="f(double[],long[]) : void" num="116" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="2" visibility="protected" signature="f(float[],long[]) : void" num="122" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="2" visibility="protected" signature="f(RealLocalizable,long[]) : void" num="128" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="130" type="cond"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(float,int) : void" num="136" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="143" type="cond"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(double,int) : void" num="148" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(RealLocalizable) : void" num="160" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(float[]) : void" num="173" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="176" type="cond"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(double[]) : void" num="186" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="189" type="cond"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(RealLocalizable) : void" num="199" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="202" type="cond"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(float[]) : void" num="210" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="213" type="cond"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(double[]) : void" num="222" count="0" type="method"/>
            <line num="225" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="225" type="cond"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(float,int) : void" num="233" count="0" type="method"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(double,int) : void" num="240" count="0" type="method"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/position/transform/Round.java" name="Round.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="31" loc="208" coveredmethods="0" methods="17" elements="109" classes="1" ncloc="145" statements="64" conditionals="28" coveredstatements="0"/>
            <class name="Round">
               <metrics coveredelements="0" coveredconditionals="0" complexity="31" coveredmethods="0" methods="17" elements="109" statements="64" conditionals="28" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Round(LocalizablePositionable)" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="Round(RealLocalizable,LocalizablePositionable)" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="round(double) : long" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line complexity="2" visibility="public" signature="round(float) : long" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line complexity="2" visibility="public" signature="round(double[],long[]) : void" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="round(float[],long[]) : void" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="round(RealLocalizable,long[]) : void" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(float,int) : void" num="97" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(double,int) : void" num="109" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="116" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(RealLocalizable) : void" num="121" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(float[]) : void" num="134" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="137" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(double[]) : void" num="147" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(RealLocalizable) : void" num="160" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(float[]) : void" num="171" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="174" type="cond"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(double[]) : void" num="183" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="186" type="cond"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(float,int) : void" num="195" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(double,int) : void" num="202" count="0" type="method"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/position/transform/FloorOffsetTest.java" name="FloorOffsetTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="51" loc="671" coveredmethods="0" methods="29" elements="299" classes="1" ncloc="450" statements="226" conditionals="44" coveredstatements="0"/>
            <class name="FloorOffsetTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="51" coveredmethods="0" methods="29" elements="299" statements="226" conditionals="44" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="init() : void" num="88" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFloorOffsetLocalizablePositionableLongArray() : void" num="108" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFloorOffsetLocalizablePositionableLocalizable() : void" num="121" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFloorOffsetRealLocalizableLocalizablePositionableLongArray() : void" num="134" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFloorOffsetRealLocalizableLocalizablePositionableLocalizable() : void" num="147" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFDoubleLong() : void" num="159" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFFloatLong() : void" num="172" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMoveFloatInt() : void" num="185" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="188" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMoveDoubleInt() : void" num="208" count="0" type="method"/>
            <line num="211" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="211" type="cond"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMoveRealLocalizable() : void" num="231" count="0" type="method"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="238" type="cond"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMoveFloatArray() : void" num="255" count="0" type="method"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="263" type="cond"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMoveDoubleArray() : void" num="281" count="0" type="method"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="288" type="cond"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSetPositionRealLocalizable() : void" num="306" count="0" type="method"/>
            <line num="309" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="312" type="cond"/>
            <line num="313" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSetPositionFloatArray() : void" num="327" count="0" type="method"/>
            <line num="330" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="334" type="cond"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSetPositionDoubleArray() : void" num="351" count="0" type="method"/>
            <line num="354" count="0" type="stmt"/>
            <line num="355" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="357" type="cond"/>
            <line num="358" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line num="364" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSetPositionFloatInt() : void" num="373" count="0" type="method"/>
            <line num="376" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="376" type="cond"/>
            <line num="378" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSetPositionDoubleInt() : void" num="393" count="0" type="method"/>
            <line num="396" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="396" type="cond"/>
            <line num="398" count="0" type="stmt"/>
            <line num="400" count="0" type="stmt"/>
            <line num="401" count="0" type="stmt"/>
            <line num="402" count="0" type="stmt"/>
            <line num="403" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testBck() : void" num="413" count="0" type="method"/>
            <line num="416" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="416" type="cond"/>
            <line num="418" count="0" type="stmt"/>
            <line num="419" count="0" type="stmt"/>
            <line num="420" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testFwd() : void" num="429" count="0" type="method"/>
            <line num="432" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="432" type="cond"/>
            <line num="434" count="0" type="stmt"/>
            <line num="435" count="0" type="stmt"/>
            <line num="436" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMoveIntInt() : void" num="445" count="0" type="method"/>
            <line num="448" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="448" type="cond"/>
            <line num="450" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line num="454" count="0" type="stmt"/>
            <line num="455" count="0" type="stmt"/>
            <line num="456" count="0" type="stmt"/>
            <line num="457" count="0" type="stmt"/>
            <line num="458" count="0" type="stmt"/>
            <line num="459" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMoveLongInt() : void" num="469" count="0" type="method"/>
            <line num="472" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="472" type="cond"/>
            <line num="474" count="0" type="stmt"/>
            <line num="475" count="0" type="stmt"/>
            <line num="476" count="0" type="stmt"/>
            <line num="478" count="0" type="stmt"/>
            <line num="479" count="0" type="stmt"/>
            <line num="480" count="0" type="stmt"/>
            <line num="481" count="0" type="stmt"/>
            <line num="482" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMoveLocalizable() : void" num="492" count="0" type="method"/>
            <line num="495" count="0" type="stmt"/>
            <line num="496" count="0" type="stmt"/>
            <line num="497" count="0" type="stmt"/>
            <line num="499" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="499" type="cond"/>
            <line num="501" count="0" type="stmt"/>
            <line num="502" count="0" type="stmt"/>
            <line num="504" count="0" type="stmt"/>
            <line num="505" count="0" type="stmt"/>
            <line num="506" count="0" type="stmt"/>
            <line num="507" count="0" type="stmt"/>
            <line num="508" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMoveIntArray() : void" num="517" count="0" type="method"/>
            <line num="520" count="0" type="stmt"/>
            <line num="521" count="0" type="stmt"/>
            <line num="522" count="0" type="stmt"/>
            <line num="524" count="0" type="stmt"/>
            <line num="525" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="525" type="cond"/>
            <line num="527" count="0" type="stmt"/>
            <line num="528" count="0" type="stmt"/>
            <line num="529" count="0" type="stmt"/>
            <line num="531" count="0" type="stmt"/>
            <line num="532" count="0" type="stmt"/>
            <line num="533" count="0" type="stmt"/>
            <line num="534" count="0" type="stmt"/>
            <line num="535" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMoveLongArray() : void" num="544" count="0" type="method"/>
            <line num="547" count="0" type="stmt"/>
            <line num="548" count="0" type="stmt"/>
            <line num="549" count="0" type="stmt"/>
            <line num="551" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="551" type="cond"/>
            <line num="553" count="0" type="stmt"/>
            <line num="554" count="0" type="stmt"/>
            <line num="556" count="0" type="stmt"/>
            <line num="557" count="0" type="stmt"/>
            <line num="558" count="0" type="stmt"/>
            <line num="559" count="0" type="stmt"/>
            <line num="560" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSetPositionLocalizable() : void" num="569" count="0" type="method"/>
            <line num="572" count="0" type="stmt"/>
            <line num="573" count="0" type="stmt"/>
            <line num="575" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="575" type="cond"/>
            <line num="576" count="0" type="stmt"/>
            <line num="578" count="0" type="stmt"/>
            <line num="579" count="0" type="stmt"/>
            <line num="580" count="0" type="stmt"/>
            <line num="581" count="0" type="stmt"/>
            <line num="582" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSetPositionIntArray() : void" num="591" count="0" type="method"/>
            <line num="594" count="0" type="stmt"/>
            <line num="595" count="0" type="stmt"/>
            <line num="597" count="0" type="stmt"/>
            <line num="598" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="598" type="cond"/>
            <line num="600" count="0" type="stmt"/>
            <line num="601" count="0" type="stmt"/>
            <line num="604" count="0" type="stmt"/>
            <line num="605" count="0" type="stmt"/>
            <line num="606" count="0" type="stmt"/>
            <line num="607" count="0" type="stmt"/>
            <line num="608" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSetPositionLongArray() : void" num="617" count="0" type="method"/>
            <line num="620" count="0" type="stmt"/>
            <line num="621" count="0" type="stmt"/>
            <line num="623" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="623" type="cond"/>
            <line num="624" count="0" type="stmt"/>
            <line num="626" count="0" type="stmt"/>
            <line num="627" count="0" type="stmt"/>
            <line num="628" count="0" type="stmt"/>
            <line num="629" count="0" type="stmt"/>
            <line num="630" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSetPositionIntInt() : void" num="639" count="0" type="method"/>
            <line num="642" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="642" type="cond"/>
            <line num="644" count="0" type="stmt"/>
            <line num="646" count="0" type="stmt"/>
            <line num="647" count="0" type="stmt"/>
            <line num="648" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSetPositionLongInt() : void" num="658" count="0" type="method"/>
            <line num="661" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="661" type="cond"/>
            <line num="663" count="0" type="stmt"/>
            <line num="665" count="0" type="stmt"/>
            <line num="666" count="0" type="stmt"/>
            <line num="667" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.display.projector.composite">
         <metrics coveredelements="0" complexity="66" loc="569" methods="16" classes="2" statements="201" coveredconditionals="0" coveredmethods="0" elements="317" ncloc="325" files="2" conditionals="100" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/display/projector/composite/CompositeXYProjector.java" name="CompositeXYProjector.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="32" loc="277" coveredmethods="0" methods="8" elements="150" classes="1" ncloc="155" statements="94" conditionals="48" coveredstatements="0"/>
            <class name="CompositeXYProjector">
               <metrics coveredelements="0" coveredconditionals="0" complexity="32" coveredmethods="0" methods="8" elements="150" statements="94" conditionals="48" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="CompositeXYProjector(RandomAccessibleInterval&lt; A &gt;,IterableInterval&lt; ARGBType &gt;,ArrayList&lt; Converter&lt; A, ARGBType &gt;&gt;,int)" num="84" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setComposite(int,boolean) : void" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isComposite(int) : boolean" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setComposite(boolean) : void" num="125" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="127" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="isComposite() : boolean" num="132" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="134" type="cond"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="13" visibility="public" signature="map() : void" num="144" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="148" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="169" type="cond"/>
            <line num="170" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="170" type="cond"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="172" type="cond"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="177" type="cond"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="188" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="194" type="cond"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="210" type="cond"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="212" type="cond"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="214" type="cond"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="216" type="cond"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line complexity="6" visibility="protected" signature="updateCurrentArrays() : int" num="237" count="0" type="method"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="240" type="cond"/>
            <line num="241" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="241" type="cond"/>
            <line num="242" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="244" type="cond"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="256" type="cond"/>
            <line num="257" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="257" type="cond"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line complexity="2" visibility="protected" signature="mapSingle(RandomAccess&lt; A &gt;,Converter&lt; A, ARGBType &gt;) : void" num="266" count="0" type="method"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="269" type="cond"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/display/projector/composite/CompositeXYRandomAccessibleProjector.java" name="CompositeXYRandomAccessibleProjector.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="34" loc="292" coveredmethods="0" methods="8" elements="167" classes="1" ncloc="170" statements="107" conditionals="52" coveredstatements="0"/>
            <class name="CompositeXYRandomAccessibleProjector">
               <metrics coveredelements="0" coveredconditionals="0" complexity="34" coveredmethods="0" methods="8" elements="167" statements="107" conditionals="52" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="CompositeXYRandomAccessibleProjector(RandomAccessibleInterval&lt; A &gt;,RandomAccessibleInterval&lt; ARGBType &gt;,ArrayList&lt; Converter&lt; A, ARGBType &gt;&gt;,int)" num="83" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="96" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setComposite(int,boolean) : void" num="110" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isComposite(int) : boolean" num="116" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setComposite(boolean) : void" num="127" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="129" type="cond"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="isComposite() : boolean" num="134" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="137" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="14" visibility="public" signature="map() : void" num="144" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="147" type="cond"/>
            <line num="148" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="168" type="cond"/>
            <line num="169" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="169" type="cond"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="171" type="cond"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="176" type="cond"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="194" type="cond"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="197" type="cond"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="213" type="cond"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="215" type="cond"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="217" type="cond"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="219" type="cond"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line complexity="6" visibility="protected" signature="updateCurrentArrays() : int" num="245" count="0" type="method"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="248" type="cond"/>
            <line num="249" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="249" type="cond"/>
            <line num="250" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="252" type="cond"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="264" type="cond"/>
            <line num="265" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="265" type="cond"/>
            <line num="267" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line complexity="3" visibility="protected" signature="mapSingle(RandomAccess&lt; A &gt;,Converter&lt; A, ARGBType &gt;) : void" num="274" count="0" type="method"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="278" type="cond"/>
            <line num="280" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="282" type="cond"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.type.numeric.real">
         <metrics coveredelements="0" complexity="94" loc="725" methods="93" classes="3" statements="102" coveredconditionals="0" coveredmethods="0" elements="197" ncloc="493" files="3" conditionals="2" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/numeric/real/AbstractRealType.java" name="AbstractRealType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="25" loc="189" coveredmethods="0" methods="24" elements="51" classes="1" ncloc="126" statements="25" conditionals="2" coveredstatements="0"/>
            <class name="AbstractRealType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="25" coveredmethods="0" methods="24" elements="51" statements="25" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="getImaginaryFloat() : float" num="46" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getImaginaryDouble() : double" num="52" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setImaginary(float) : void" num="58" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="setImaginary(double) : void" num="62" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="inc() : void" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dec() : void" num="72" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(T) : void" num="78" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(float) : void" num="84" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(double) : void" num="90" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(T) : void" num="96" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(T) : void" num="102" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(T) : void" num="108" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(T) : void" num="114" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setZero() : void" num="120" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setOne() : void" num="126" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compareTo(T) : int" num="132" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="valueEquals(T) : boolean" num="138" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="equals(Object) : boolean" num="144" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="147" type="cond"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="154" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPowerFloat() : float" num="160" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPowerDouble() : double" num="166" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPhaseFloat() : float" num="172" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPhaseDouble() : double" num="178" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="184" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/numeric/real/DoubleType.java" name="DoubleType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="27" loc="221" coveredmethods="0" methods="27" elements="57" classes="1" ncloc="144" statements="30" conditionals="0" coveredstatements="0"/>
            <class name="DoubleType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="27" coveredmethods="0" methods="27" elements="57" statements="30" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DoubleType(NativeImg&lt; ?, ? extends DoubleAccess &gt;)" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DoubleType(double)" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DoubleType(DoubleAccess)" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DoubleType()" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="updateContainer(Object) : void" num="86" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="duplicateTypeOnSameNativeImg() : DoubleType" num="92" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNativeTypeFactory() : NativeTypeFactory&lt; DoubleType, DoubleAccess &gt;" num="100" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : double" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(double) : void" num="111" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealFloat() : float" num="116" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealDouble() : double" num="122" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setReal(float) : void" num="128" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setReal(double) : void" num="134" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxValue() : double" num="140" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMinValue() : double" num="146" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMinIncrement() : double" num="152" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createVariable() : DoubleType" num="158" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : DoubleType" num="164" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getEntitiesPerPixel() : Fraction" num="170" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="updateIndex(int) : void" num="176" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIndex() : int" num="182" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="incIndex() : void" num="188" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="incIndex(int) : void" num="194" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decIndex() : void" num="200" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decIndex(int) : void" num="206" count="0" type="method"/>
            <line num="209" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBitsPerPixel() : int" num="212" count="0" type="method"/>
            <line num="215" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(double,double) : boolean" num="218" count="0" type="method"/>
            <line num="219" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/numeric/real/FloatType.java" name="FloatType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="42" loc="315" coveredmethods="0" methods="42" elements="89" classes="1" ncloc="223" statements="47" conditionals="0" coveredstatements="0"/>
            <class name="FloatType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="42" coveredmethods="0" methods="42" elements="89" statements="47" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="FloatType(NativeImg&lt; ?, ? extends FloatAccess &gt;)" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="FloatType(float)" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="FloatType(FloatAccess)" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="FloatType()" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="updateContainer(Object) : void" num="87" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="duplicateTypeOnSameNativeImg() : FloatType" num="93" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNativeTypeFactory() : NativeTypeFactory&lt; FloatType, FloatAccess &gt;" num="101" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : float" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(float) : void" num="112" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealFloat() : float" num="117" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealDouble() : double" num="123" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setReal(float) : void" num="129" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setReal(double) : void" num="135" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxValue() : double" num="141" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMinValue() : double" num="147" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMinIncrement() : double" num="153" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(float) : void" num="159" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(double) : void" num="165" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(FloatType) : void" num="171" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(FloatType) : void" num="177" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(FloatType) : void" num="183" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(FloatType) : void" num="189" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(FloatType) : void" num="195" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setOne() : void" num="201" count="0" type="method"/>
            <line num="204" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setZero() : void" num="207" count="0" type="method"/>
            <line num="210" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inc() : void" num="213" count="0" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dec() : void" num="220" count="0" type="method"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createVariable() : FloatType" num="227" count="0" type="method"/>
            <line num="230" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : FloatType" num="233" count="0" type="method"/>
            <line num="236" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getEntitiesPerPixel() : Fraction" num="239" count="0" type="method"/>
            <line num="242" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="updateIndex(int) : void" num="245" count="0" type="method"/>
            <line num="248" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIndex() : int" num="251" count="0" type="method"/>
            <line num="254" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="incIndex() : void" num="257" count="0" type="method"/>
            <line num="260" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="incIndex(int) : void" num="263" count="0" type="method"/>
            <line num="266" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decIndex() : void" num="269" count="0" type="method"/>
            <line num="272" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decIndex(int) : void" num="275" count="0" type="method"/>
            <line num="278" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBitsPerPixel() : int" num="281" count="0" type="method"/>
            <line num="284" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compareTo(FloatType) : int" num="287" count="0" type="method"/>
            <line num="290" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="valueEquals(FloatType) : boolean" num="293" count="0" type="method"/>
            <line num="296" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="299" count="0" type="method"/>
            <line num="302" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="305" count="0" type="method"/>
            <line num="308" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(float,float) : boolean" num="311" count="0" type="method"/>
            <line num="313" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.interpolation.randomaccess">
         <metrics coveredelements="0" complexity="149" loc="2274" methods="112" classes="17" statements="460" coveredconditionals="0" coveredmethods="0" elements="642" ncloc="1091" files="17" conditionals="70" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/interpolation/randomaccess/ClampingNLinearInterpolatorFactory.java" name="ClampingNLinearInterpolatorFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="89" coveredmethods="0" methods="2" elements="21" classes="1" ncloc="41" statements="11" conditionals="8" coveredstatements="0"/>
            <class name="ClampingNLinearInterpolatorFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="2" elements="21" statements="11" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="5" visibility="public" signature="create(RandomAccessible&lt; T &gt;) : RealRandomAccess&lt; T &gt;" num="55" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(RandomAccessible&lt; T &gt;,RealInterval) : RealRandomAccess&lt; T &gt;" num="84" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/interpolation/randomaccess/ClampingNLinearInterpolatorRealType.java" name="ClampingNLinearInterpolatorRealType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="151" coveredmethods="0" methods="9" elements="48" classes="1" ncloc="84" statements="35" conditionals="4" coveredstatements="0"/>
            <class name="ClampingNLinearInterpolatorRealType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="9" elements="48" statements="35" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="ClampingNLinearInterpolatorRealType(ClampingNLinearInterpolatorRealType&lt; T &gt;)" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="ClampingNLinearInterpolatorRealType(RandomAccessible&lt; T &gt;,T)" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="ClampingNLinearInterpolatorRealType(RandomAccessible&lt; T &gt;)" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="84" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : ClampingNLinearInterpolatorRealType&lt; T &gt;" num="96" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRealRandomAccess() : ClampingNLinearInterpolatorRealType&lt; T &gt;" num="102" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="graycodeFwdRecursive(int) : void" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="graycodeBckRecursive(int) : void" num="126" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="accumulate() : void" num="147" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/interpolation/randomaccess/ClampingNLinearInterpolatorVolatileARGB.java" name="ClampingNLinearInterpolatorVolatileARGB.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="170" coveredmethods="0" methods="9" elements="61" classes="1" ncloc="98" statements="48" conditionals="4" coveredstatements="0"/>
            <class name="ClampingNLinearInterpolatorVolatileARGB">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="9" elements="61" statements="48" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="ClampingNLinearInterpolatorVolatileARGB(ClampingNLinearInterpolatorVolatileARGB&lt; T &gt;)" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="ClampingNLinearInterpolatorVolatileARGB(RandomAccessible&lt; T &gt;,T)" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="ClampingNLinearInterpolatorVolatileARGB(RandomAccessible&lt; T &gt;)" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="81" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : ClampingNLinearInterpolatorVolatileARGB&lt; T &gt;" num="109" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRealRandomAccess() : ClampingNLinearInterpolatorVolatileARGB&lt; T &gt;" num="115" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="graycodeFwdRecursive(int) : void" num="121" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="graycodeBckRecursive(int) : void" num="139" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="141" type="cond"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="accumulate() : void" num="160" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/interpolation/randomaccess/ClampingNLinearInterpolatorVolatileRealType.java" name="ClampingNLinearInterpolatorVolatileRealType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="158" coveredmethods="0" methods="9" elements="53" classes="1" ncloc="91" statements="40" conditionals="4" coveredstatements="0"/>
            <class name="ClampingNLinearInterpolatorVolatileRealType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="9" elements="53" statements="40" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="ClampingNLinearInterpolatorVolatileRealType(ClampingNLinearInterpolatorVolatileRealType&lt; R, T &gt;)" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="ClampingNLinearInterpolatorVolatileRealType(RandomAccessible&lt; T &gt;,T)" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="ClampingNLinearInterpolatorVolatileRealType(RandomAccessible&lt; T &gt;)" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="86" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : ClampingNLinearInterpolatorVolatileRealType&lt; R, T &gt;" num="101" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRealRandomAccess() : ClampingNLinearInterpolatorVolatileRealType&lt; R, T &gt;" num="107" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="graycodeFwdRecursive(int) : void" num="113" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="graycodeBckRecursive(int) : void" num="131" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="accumulate() : void" num="152" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/interpolation/randomaccess/FloorInterpolator.java" name="FloorInterpolator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="93" coveredmethods="0" methods="5" elements="10" classes="1" ncloc="31" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="FloorInterpolator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="FloorInterpolator(FloorInterpolator&lt; T &gt;)" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="FloorInterpolator(RandomAccessible&lt; T &gt;)" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="76" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : FloorInterpolator&lt; T &gt;" num="82" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRealRandomAccess() : FloorInterpolator&lt; T &gt;" num="88" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/interpolation/randomaccess/FloorInterpolatorFactory.java" name="FloorInterpolatorFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="64" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="17" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="FloorInterpolatorFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="create(RandomAccessible&lt; T &gt;) : FloorInterpolator&lt; T &gt;" num="49" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(RandomAccessible&lt; T &gt;,RealInterval) : FloorInterpolator&lt; T &gt;" num="59" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/interpolation/randomaccess/LanczosInterpolator.java" name="LanczosInterpolator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="25" loc="238" coveredmethods="0" methods="11" elements="110" classes="1" ncloc="142" statements="71" conditionals="28" coveredstatements="0"/>
            <class name="LanczosInterpolator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="25" coveredmethods="0" methods="11" elements="110" statements="71" conditionals="28" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="private" signature="createOffset(int,int) : long[]" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="LanczosInterpolator(RandomAccessible&lt; T &gt;,int,boolean,double,double)" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LanczosInterpolator(LanczosInterpolator&lt; T &gt;)" num="123" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="createLanczosLUT(int,int) : double[]" num="142" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="145" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="2" visibility="protected" signature="resetKernel() : void" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="2" visibility="protected" signature="accumulate(int) : void" num="163" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="165" type="cond"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="get() : T" num="169" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="178" type="cond"/>
            <line num="180" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="182" type="cond"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="186" type="cond"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="199" type="cond"/>
            <line num="201" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="201" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="203" type="cond"/>
            <line num="204" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="lanczos(double,double) : double" num="212" count="0" type="method"/>
            <line num="214" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="214" type="cond"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="lookUpLanczos(double) : double" num="219" count="0" type="method"/>
            <line num="221" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="221" type="cond"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : Sampler&lt; T &gt;" num="227" count="0" type="method"/>
            <line num="230" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRealRandomAccess() : RealRandomAccess&lt; T &gt;" num="233" count="0" type="method"/>
            <line num="236" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/interpolation/randomaccess/LanczosInterpolatorFactory.java" name="LanczosInterpolatorFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="185" coveredmethods="0" methods="10" elements="28" classes="1" ncloc="62" statements="18" conditionals="0" coveredstatements="0"/>
            <class name="LanczosInterpolatorFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="10" elements="28" statements="18" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LanczosInterpolatorFactory(int,boolean)" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LanczosInterpolatorFactory(int,double,double)" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LanczosInterpolatorFactory(double,double)" num="111" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LanczosInterpolatorFactory()" num="123" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(RandomAccessible&lt; T &gt;) : LanczosInterpolator&lt; T &gt;" num="128" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(RandomAccessible&lt; T &gt;,RealInterval) : LanczosInterpolator&lt; T &gt;" num="138" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setAlpha(int) : void" num="151" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setClipping(boolean) : void" num="164" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAlpha() : int" num="173" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getClipping() : boolean" num="181" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/interpolation/randomaccess/NLinearInterpolator.java" name="NLinearInterpolator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="19" loc="289" coveredmethods="0" methods="12" elements="89" classes="1" ncloc="134" statements="63" conditionals="14" coveredstatements="0"/>
            <class name="NLinearInterpolator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="19" coveredmethods="0" methods="12" elements="89" statements="63" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="protected" signature="NLinearInterpolator(NLinearInterpolator&lt; T &gt;)" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="102" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="NLinearInterpolator(RandomAccessible&lt; T &gt;,T)" num="109" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="NLinearInterpolator(RandomAccessible&lt; T &gt;)" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="3" visibility="protected" signature="fillWeights() : void" num="159" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="171" type="cond"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="196" count="0" type="method"/>
            <line num="199" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : NLinearInterpolator&lt; T &gt;" num="211" count="0" type="method"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRealRandomAccess() : NLinearInterpolator&lt; T &gt;" num="217" count="0" type="method"/>
            <line num="220" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="graycodeFwdRecursive(int) : void" num="223" count="0" type="method"/>
            <line num="225" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="225" type="cond"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="graycodeBckRecursive(int) : void" num="241" count="0" type="method"/>
            <line num="243" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="243" type="cond"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="accumulate() : void" num="262" count="0" type="method"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="printWeights() : void" num="273" count="0" type="method"/>
            <line num="276" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="276" type="cond"/>
            <line num="277" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="printCode() : void" num="280" count="0" type="method"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="285" type="cond"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/interpolation/randomaccess/NLinearInterpolator1D.java" name="NLinearInterpolator1D.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="101" coveredmethods="0" methods="7" elements="24" classes="1" ncloc="48" statements="17" conditionals="0" coveredstatements="0"/>
            <class name="NLinearInterpolator1D">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="24" statements="17" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="NLinearInterpolator1D(NLinearInterpolator1D&lt; T &gt;)" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="NLinearInterpolator1D(RandomAccessible&lt; T &gt;,T)" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="NLinearInterpolator1D(RandomAccessible&lt; T &gt;)" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="65" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="fillWeights() : void" num="71" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="79" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : NLinearInterpolator1D&lt; T &gt;" num="96" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/interpolation/randomaccess/NLinearInterpolator2D.java" name="NLinearInterpolator2D.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="114" coveredmethods="0" methods="7" elements="37" classes="1" ncloc="61" statements="30" conditionals="0" coveredstatements="0"/>
            <class name="NLinearInterpolator2D">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="37" statements="30" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="NLinearInterpolator2D(NLinearInterpolator2D&lt; T &gt;)" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="NLinearInterpolator2D(RandomAccessible&lt; T &gt;,T)" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="NLinearInterpolator2D(RandomAccessible&lt; T &gt;)" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="65" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="fillWeights() : void" num="71" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="85" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : NLinearInterpolator2D&lt; T &gt;" num="109" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/interpolation/randomaccess/NLinearInterpolator3D.java" name="NLinearInterpolator3D.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="136" coveredmethods="0" methods="7" elements="59" classes="1" ncloc="83" statements="52" conditionals="0" coveredstatements="0"/>
            <class name="NLinearInterpolator3D">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="59" statements="52" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="NLinearInterpolator3D(NLinearInterpolator3D&lt; T &gt;)" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="NLinearInterpolator3D(RandomAccessible&lt; T &gt;,T)" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="NLinearInterpolator3D(RandomAccessible&lt; T &gt;)" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="65" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="fillWeights() : void" num="71" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="91" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : NLinearInterpolator3D&lt; T &gt;" num="131" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/interpolation/randomaccess/NLinearInterpolatorARGB.java" name="NLinearInterpolatorARGB.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="183" coveredmethods="0" methods="11" elements="69" classes="1" ncloc="106" statements="50" conditionals="8" coveredstatements="0"/>
            <class name="NLinearInterpolatorARGB">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="11" elements="69" statements="50" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="NLinearInterpolatorARGB(NLinearInterpolatorARGB)" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="NLinearInterpolatorARGB(RandomAccessible&lt; ARGBType &gt;,ARGBType)" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="NLinearInterpolatorARGB(RandomAccessible&lt; ARGBType &gt;)" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : ARGBType" num="77" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : NLinearInterpolatorARGB" num="102" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRealRandomAccess() : NLinearInterpolatorARGB" num="108" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="graycodeFwdRecursive(int) : void" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="116" type="cond"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="graycodeBckRecursive(int) : void" num="132" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="134" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="accumulate() : void" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="printWeights() : void" num="167" count="0" type="method"/>
            <line num="170" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="170" type="cond"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="printCode() : void" num="174" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="179" type="cond"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/interpolation/randomaccess/NLinearInterpolatorARGBFactory.java" name="NLinearInterpolatorARGBFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="65" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="18" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="NLinearInterpolatorARGBFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="create(RandomAccessible&lt; ARGBType &gt;) : NLinearInterpolatorARGB" num="50" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(RandomAccessible&lt; ARGBType &gt;,RealInterval) : NLinearInterpolatorARGB" num="60" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/interpolation/randomaccess/NLinearInterpolatorFactory.java" name="NLinearInterpolatorFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="76" coveredmethods="0" methods="2" elements="10" classes="1" ncloc="26" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="NLinearInterpolatorFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="2" elements="10" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="create(RandomAccessible&lt; T &gt;) : NLinearInterpolator&lt; T &gt;" num="51" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(RandomAccessible&lt; T &gt;,RealInterval) : NLinearInterpolator&lt; T &gt;" num="71" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/interpolation/randomaccess/NearestNeighborInterpolator.java" name="NearestNeighborInterpolator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="96" coveredmethods="0" methods="5" elements="11" classes="1" ncloc="32" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="NearestNeighborInterpolator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="11" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="NearestNeighborInterpolator(NearestNeighborInterpolator&lt; T &gt;)" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="NearestNeighborInterpolator(RandomAccessible&lt; T &gt;)" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="79" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : NearestNeighborInterpolator&lt; T &gt;" num="85" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRealRandomAccess() : NearestNeighborInterpolator&lt; T &gt;" num="91" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/interpolation/randomaccess/NearestNeighborInterpolatorFactory.java" name="NearestNeighborInterpolatorFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="66" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="17" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="NearestNeighborInterpolatorFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="create(RandomAccessible&lt; T &gt;) : NearestNeighborInterpolator&lt; T &gt;" num="51" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(RandomAccessible&lt; T &gt;,RealInterval) : NearestNeighborInterpolator&lt; T &gt;" num="61" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.display.screenimage.awt">
         <metrics coveredelements="0" complexity="47" loc="995" methods="38" classes="12" statements="103" coveredconditionals="0" coveredmethods="0" elements="159" ncloc="375" files="12" conditionals="18" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/display/screenimage/awt/ARGBScreenImage.java" name="ARGBScreenImage.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="112" coveredmethods="0" methods="5" elements="16" classes="1" ncloc="48" statements="11" conditionals="0" coveredstatements="0"/>
            <class name="ARGBScreenImage">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="16" statements="11" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ARGBScreenImage(int,int)" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ARGBScreenImage(int,int,IntArray)" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ARGBScreenImage(int,int,int[])" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="image() : BufferedImage" num="97" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getData() : int[]" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/display/screenimage/awt/AWTScreenImage.java" name="AWTScreenImage.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="52" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AWTScreenImage">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/display/screenimage/awt/AWTScreenImageUtil.java" name="AWTScreenImageUtil.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="161" coveredmethods="0" methods="2" elements="60" classes="1" ncloc="84" statements="42" conditionals="16" coveredstatements="0"/>
            <class name="AWTScreenImageUtil">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="2" elements="60" statements="42" conditionals="16" coveredstatements="0"/>
            </class>
            <line complexity="9" visibility="public" signature="emptyScreenImage(T,long[]) : ArrayImgAWTScreenImage&lt; T, ? &gt;" num="84" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="96" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="144" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="numElements(long[]) : int" num="156" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/display/screenimage/awt/ArrayImgAWTScreenImage.java" name="ArrayImgAWTScreenImage.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="110" coveredmethods="0" methods="7" elements="27" classes="1" ncloc="59" statements="18" conditionals="2" coveredstatements="0"/>
            <class name="ArrayImgAWTScreenImage">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="7" elements="27" statements="18" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ArrayImgAWTScreenImage(ArrayImg&lt; T, A &gt;)" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ArrayImgAWTScreenImage(T,A,long[])" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="image() : BufferedImage" num="74" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="2" visibility="protected" signature="getBitsPerPixel(T) : int" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="createBufferedImage(T,A,int,int) : BufferedImage" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="createColorModel(T,DataBuffer) : ColorModel" num="97" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="dimensions(Dimensions) : long[]" num="104" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/display/screenimage/awt/ByteAWTScreenImage.java" name="ByteAWTScreenImage.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="69" coveredmethods="0" methods="3" elements="7" classes="1" ncloc="22" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="ByteAWTScreenImage">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ByteAWTScreenImage(ArrayImg&lt; ByteType, ByteArray &gt;)" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ByteAWTScreenImage(ByteType,ByteArray,long[])" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="createDataBuffer(ByteArray) : SignedByteDataBuffer" num="62" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/display/screenimage/awt/DoubleAWTScreenImage.java" name="DoubleAWTScreenImage.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="71" coveredmethods="0" methods="3" elements="7" classes="1" ncloc="22" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="DoubleAWTScreenImage">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DoubleAWTScreenImage(ArrayImg&lt; DoubleType, DoubleArray &gt;)" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DoubleAWTScreenImage(DoubleType,DoubleArray,long[])" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="createDataBuffer(DoubleArray) : DataBufferDouble" num="64" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/display/screenimage/awt/FloatAWTScreenImage.java" name="FloatAWTScreenImage.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="70" coveredmethods="0" methods="3" elements="7" classes="1" ncloc="22" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="FloatAWTScreenImage">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="FloatAWTScreenImage(ArrayImg&lt; FloatType, FloatArray &gt;)" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="FloatAWTScreenImage(FloatType,FloatArray,long[])" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="createDataBuffer(FloatArray) : DataBufferFloat" num="63" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/display/screenimage/awt/IntAWTScreenImage.java" name="IntAWTScreenImage.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="70" coveredmethods="0" methods="3" elements="7" classes="1" ncloc="22" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="IntAWTScreenImage">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="IntAWTScreenImage(ArrayImg&lt; IntType, IntArray &gt;)" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="IntAWTScreenImage(IntType,IntArray,long[])" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="createDataBuffer(IntArray) : DataBufferInt" num="63" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/display/screenimage/awt/ShortAWTScreenImage.java" name="ShortAWTScreenImage.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="69" coveredmethods="0" methods="3" elements="7" classes="1" ncloc="22" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="ShortAWTScreenImage">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ShortAWTScreenImage(ArrayImg&lt; ShortType, ShortArray &gt;)" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ShortAWTScreenImage(ShortType,ShortArray,long[])" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="createDataBuffer(ShortArray) : SignedShortDataBuffer" num="62" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/display/screenimage/awt/UnsignedByteAWTScreenImage.java" name="UnsignedByteAWTScreenImage.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="71" coveredmethods="0" methods="3" elements="7" classes="1" ncloc="22" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="UnsignedByteAWTScreenImage">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="UnsignedByteAWTScreenImage(ArrayImg&lt; UnsignedByteType, ByteArray &gt;)" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="UnsignedByteAWTScreenImage(UnsignedByteType,ByteArray,long[])" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="createDataBuffer(ByteArray) : DataBufferByte" num="64" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/display/screenimage/awt/UnsignedIntAWTScreenImage.java" name="UnsignedIntAWTScreenImage.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="69" coveredmethods="0" methods="3" elements="7" classes="1" ncloc="22" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="UnsignedIntAWTScreenImage">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="UnsignedIntAWTScreenImage(ArrayImg&lt; UnsignedIntType, IntArray &gt;)" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="UnsignedIntAWTScreenImage(UnsignedIntType,IntArray,long[])" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="createDataBuffer(IntArray) : UnsignedIntDataBuffer" num="62" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/display/screenimage/awt/UnsignedShortAWTScreenImage.java" name="UnsignedShortAWTScreenImage.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="71" coveredmethods="0" methods="3" elements="7" classes="1" ncloc="22" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="UnsignedShortAWTScreenImage">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="UnsignedShortAWTScreenImage(ArrayImg&lt; UnsignedShortType, ShortArray &gt;)" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="UnsignedShortAWTScreenImage(UnsignedShortType,ShortArray,long[])" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="createDataBuffer(ShortArray) : DataBufferUShort" num="64" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.img">
         <metrics coveredelements="0" complexity="113" loc="1686" methods="83" classes="12" statements="256" coveredconditionals="0" coveredmethods="0" elements="393" ncloc="785" files="12" conditionals="54" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/AbstractImg.java" name="AbstractImg.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="33" loc="231" coveredmethods="0" methods="22" elements="87" classes="1" ncloc="149" statements="45" conditionals="20" coveredstatements="0"/>
            <class name="AbstractImg">
               <metrics coveredelements="0" coveredconditionals="0" complexity="33" coveredmethods="0" methods="22" elements="87" statements="45" conditionals="20" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="AbstractImg(long[])" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt; T &gt;" num="72" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="firstElement() : T" num="78" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="numElements(long[]) : long" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="94" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="dimensions(long[]) : void" num="100" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="dimension(int) : long" num="107" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : long" num="120" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="126" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="134" type="cond"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMax(int) : double" num="142" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="realMax(double[]) : void" num="148" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="151" type="cond"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMax(RealPositionable) : void" num="155" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMin(int) : double" num="161" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="realMin(double[]) : void" num="167" count="0" type="method"/>
            <line num="170" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="170" type="cond"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="realMin(RealPositionable) : void" num="174" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="177" type="cond"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="max(int) : long" num="181" count="0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="max(long[]) : void" num="187" count="0" type="method"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="max(Positionable) : void" num="194" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="min(long[]) : void" num="200" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="203" type="cond"/>
            <line num="204" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="min(int) : long" num="207" count="0" type="method"/>
            <line num="210" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="min(Positionable) : void" num="213" count="0" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="216" type="cond"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess(Interval) : RandomAccess&lt; T &gt;" num="220" count="0" type="method"/>
            <line num="223" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/AbstractNativeImg.java" name="AbstractNativeImg.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="80" coveredmethods="0" methods="3" elements="10" classes="1" ncloc="34" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="AbstractNativeImg">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="3" elements="10" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractNativeImg(long[],Fraction)" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setLinkedType(T) : void" num="62" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createLinkedType() : T" num="68" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/Img.java" name="Img.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="70" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Img">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/ImgFactory.java" name="ImgFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="213" coveredmethods="0" methods="12" elements="32" classes="1" ncloc="74" statements="18" conditionals="2" coveredstatements="0"/>
            <class name="ImgFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="12" elements="32" statements="18" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ImgFactory(T)" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="type() : T" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(Dimensions) : Img&lt; T &gt;" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(int[]) : Img&lt; T &gt;" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="imgFactory(Supplier&lt; S &gt;) : ImgFactory&lt; S &gt;" num="136" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ImgFactory()" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(Dimensions,T) : Img&lt; T &gt;" num="161" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(int[],T) : Img&lt; T &gt;" num="171" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(Supplier&lt; T &gt;,long) : Img&lt; T &gt;" num="177" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(Supplier&lt; T &gt;,Dimensions) : Img&lt; T &gt;" num="183" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(Supplier&lt; T &gt;,int[]) : Img&lt; T &gt;" num="189" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="2" visibility="protected" signature="cache(T) : void" num="207" count="0" type="method"/>
            <line num="210" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="210" type="cond"/>
            <line num="211" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/ImgView.java" name="ImgView.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="18" loc="202" coveredmethods="0" methods="11" elements="59" classes="1" ncloc="107" statements="34" conditionals="14" coveredstatements="0"/>
            <class name="ImgView">
               <metrics coveredelements="0" coveredconditionals="0" complexity="18" coveredmethods="0" methods="11" elements="59" statements="34" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ImgView(RandomAccessibleInterval&lt; T &gt;,ImgFactory&lt; T &gt;)" num="78" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="factory() : ImgFactory&lt; T &gt;" num="86" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="copy() : Img&lt; T &gt;" num="92" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="100" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cursor() : Cursor&lt; T &gt;" num="110" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localizingCursor() : Cursor&lt; T &gt;" num="116" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="supportsOptimizedCursor(Interval) : boolean" num="122" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="subIntervalIterationOrder(Interval) : Object" num="132" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="cursor(Interval) : Cursor&lt; T &gt;" num="142" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localizingCursor(Interval) : Cursor&lt; T &gt;" num="152" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="wrap(RandomAccessibleInterval&lt; T &gt;) : Img&lt; T &gt;" num="173" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="175" type="cond"/>
            <line num="176" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="wrap(RandomAccessibleInterval&lt; T &gt;,ImgFactory&lt; T &gt;) : Img&lt; T &gt;" num="195" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="197" type="cond"/>
            <line num="198" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/NativeImg.java" name="NativeImg.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="59" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="NativeImg">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/NativeImgFactory.java" name="NativeImgFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="113" coveredmethods="0" methods="4" elements="8" classes="1" ncloc="32" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="NativeImgFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="NativeImgFactory(T)" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(Dimensions) : NativeImg&lt; T, ? &gt;" num="68" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(int[]) : NativeImg&lt; T, ? &gt;" num="86" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="NativeImgFactory()" num="108" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/WrappedImg.java" name="WrappedImg.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="45" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="WrappedImg">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/img/AbstractSubIntervalIterableCursorTest.java" name="AbstractSubIntervalIterableCursorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="19" loc="235" coveredmethods="0" methods="12" elements="82" classes="1" ncloc="136" statements="58" conditionals="12" coveredstatements="0"/>
            <class name="AbstractSubIntervalIterableCursorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="19" coveredmethods="0" methods="12" elements="82" statements="58" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testIterationFast() : void" num="74" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterationShifted() : void" num="82" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJumpFwdFast() : void" num="90" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJumpFwdShifted() : void" num="98" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLocalizingIterationFast() : void" num="110" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLocalizingIterationShifted() : void" num="118" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLocalizingJumpFwdFast() : void" num="126" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLocalizingJumpFwdShifted() : void" num="134" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="2" visibility="protected" signature="testCursorIteration(Cursor&lt; IntType &gt;,Interval) : void" num="142" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="160" type="cond"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="testCursorJumpFwd(Cursor&lt; IntType &gt;,Interval) : void" num="179" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line complexity="6" visibility="protected" signature="getSum(Interval) : long" num="195" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="200" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="205" type="cond"/>
            <line num="207" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="207" type="cond"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="214" type="cond"/>
            <line num="216" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line complexity="2" visibility="protected" signature="getIntervalSize(Interval) : long" num="223" count="0" type="method"/>
            <line num="225" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="227" type="cond"/>
            <line num="229" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/img/ImgFactoryTest.java" name="ImgFactoryTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="63" coveredmethods="0" methods="1" elements="5" classes="1" ncloc="19" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="ImgFactoryTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="5" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testCreateSupplierOfTLongArray() : void" num="54" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/img/ImgViewTest.java" name="ImgViewTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="101" coveredmethods="0" methods="3" elements="22" classes="1" ncloc="48" statements="19" conditionals="0" coveredstatements="0"/>
            <class name="ImgViewTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="22" statements="19" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testDefaultWrapping() : void" num="63" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWrapWithFactory() : void" num="78" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAvoidUnnecessaryWrapping() : void" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/img/IterableSubIntervalBenchmark.java" name="IterableSubIntervalBenchmark.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="18" loc="274" coveredmethods="0" methods="15" elements="88" classes="1" ncloc="162" statements="67" conditionals="6" coveredstatements="0"/>
            <class name="IterableSubIntervalBenchmark">
               <metrics coveredelements="0" coveredconditionals="0" complexity="18" coveredmethods="0" methods="15" elements="88" statements="67" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="protected" signature="localizingWalkThrough(Img&lt; IntType &gt;,Interval) : void" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="2" visibility="protected" signature="walkThrough(Img&lt; IntType &gt;,Interval) : void" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="103" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="testArrayImg(int,boolean,Interval,ArrayImg&lt; IntType, ? &gt;,ArrayImg&lt; IntType, ? &gt;) : void" num="142" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="151" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="158" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="171" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="178" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="testPlanarImg(int,boolean,Interval,PlanarImg&lt; IntType, ? &gt;,PlanarImg&lt; IntType, ? &gt;) : void" num="191" count="0" type="method"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="200" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="207" count="0" type="method"/>
            <line num="210" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="220" count="0" type="method"/>
            <line num="223" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="227" count="0" type="method"/>
            <line num="230" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="benchmarkAndCompare(int,boolean,Runnable,Runnable) : void" num="237" count="0" type="method"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="computeStats(ArrayList&lt; Long &gt;) : long[]" num="253" count="0" type="method"/>
            <line num="255" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="259" type="cond"/>
            <line num="261" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.img.planar">
         <metrics coveredelements="0" complexity="282" loc="3041" methods="176" classes="19" statements="656" coveredconditionals="0" coveredmethods="0" elements="1042" ncloc="1693" files="17" conditionals="210" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/planar/PlanarCursor.java" name="PlanarCursor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="16" loc="182" coveredmethods="0" methods="13" elements="59" classes="1" ncloc="105" statements="40" conditionals="6" coveredstatements="0"/>
            <class name="PlanarCursor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="16" coveredmethods="0" methods="13" elements="59" statements="40" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="PlanarCursor(PlanarCursor&lt; T &gt;)" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="PlanarCursor(PlanarImg&lt; T, ? &gt;)" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrentSliceIndex() : int" num="93" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="99" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : PlanarCursor&lt; T &gt;" num="105" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyCursor() : PlanarCursor&lt; T &gt;" num="111" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="123" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="fwd() : void" num="129" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="132" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="jumpFwd(long) : void" num="141" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="145" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reset() : void" num="156" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="165" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(int[]) : void" num="171" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntPosition(int) : int" num="177" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/planar/PlanarCursor1D.java" name="PlanarCursor1D.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="70" coveredmethods="0" methods="4" elements="12" classes="1" ncloc="26" statements="6" conditionals="2" coveredstatements="0"/>
            <class name="PlanarCursor1D">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="4" elements="12" statements="6" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="PlanarCursor1D(PlanarImg&lt; T, ? &gt;)" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="51" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(int[]) : void" num="57" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getIntPosition(int) : int" num="63" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/planar/PlanarCursor2D.java" name="PlanarCursor2D.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="87" coveredmethods="0" methods="5" elements="24" classes="1" ncloc="40" statements="15" conditionals="4" coveredstatements="0"/>
            <class name="PlanarCursor2D">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="5" elements="24" statements="15" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="PlanarCursor2D(PlanarImg&lt; T, ? &gt;)" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="53" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fwd() : void" num="59" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(int[]) : void" num="65" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getIntPosition(int) : int" num="74" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/planar/PlanarImg.java" name="PlanarImg.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="56" loc="393" coveredmethods="0" methods="26" elements="184" classes="2" ncloc="231" statements="98" conditionals="60" coveredstatements="0"/>
            <class name="PlanarImg">
               <metrics coveredelements="0" coveredconditionals="0" complexity="56" coveredmethods="0" methods="26" elements="184" statements="98" conditionals="60" coveredstatements="0"/>
            </class>
            <class name="PlanarImg.PlanarContainerSampler">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="PlanarImg(List&lt; A &gt;,long[],Fraction)" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="PlanarImg(long[],Fraction)" num="91" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="PlanarImg(A,long[],Fraction)" num="97" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="update(Object) : A" num="114" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line complexity="1" visibility="public" signature="numSlices() : int" num="124" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getIndex(int[]) : int" num="137" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="indexToGlobalPosition(int,int,int[]) : void" num="158" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="160" type="cond"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="165" type="cond"/>
            <line num="167" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="169" type="cond"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="indexToGlobalPosition(int,int,int) : int" num="199" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="201" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="203" type="cond"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="205" type="cond"/>
            <line num="206" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="cursor() : PlanarCursor&lt; T &gt;" num="211" count="0" type="method"/>
            <line num="214" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="214" type="cond"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="216" type="cond"/>
            <line num="217" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="localizingCursor() : PlanarLocalizingCursor&lt; T &gt;" num="222" count="0" type="method"/>
            <line num="225" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="225" type="cond"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="227" type="cond"/>
            <line num="228" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="randomAccess() : PlanarRandomAccess&lt; T &gt;" num="233" count="0" type="method"/>
            <line num="236" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="236" type="cond"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterationOrder() : FlatIterationOrder" num="241" count="0" type="method"/>
            <line num="244" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPlane(int) : A" num="247" count="0" type="method"/>
            <line num="250" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPlane(int,A) : void" num="253" count="0" type="method"/>
            <line num="256" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="factory() : PlanarImgFactory&lt; T &gt;" num="259" count="0" type="method"/>
            <line num="262" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="copy() : PlanarImg&lt; T, ? &gt;" num="265" count="0" type="method"/>
            <line num="268" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="273" type="cond"/>
            <line num="274" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="supportsOptimizedCursor(Interval) : boolean" num="282" count="0" type="method"/>
            <line num="286" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subIntervalIterationOrder(Interval) : Object" num="292" count="0" type="method"/>
            <line num="295" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="cursor(Interval) : Cursor&lt; T &gt;" num="301" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="304" type="cond"/>
            <line num="306" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="correspondsToPlane(Interval) : boolean" num="309" count="0" type="method"/>
            <line num="312" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="312" type="cond"/>
            <line num="313" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="315" type="cond"/>
            <line num="316" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="318" type="cond"/>
            <line num="319" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="321" type="cond"/>
            <line num="323" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="323" type="cond"/>
            <line num="324" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localizingCursor(Interval) : Cursor&lt; T &gt;" num="333" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="336" type="cond"/>
            <line num="338" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="numberOfSlices(long[]) : int" num="344" count="0" type="method"/>
            <line num="346" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="347" type="cond"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="longToIntArray(long[]) : int[]" num="354" count="0" type="method"/>
            <line num="356" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="357" type="cond"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="computeSliceSteps(long[]) : int[]" num="362" count="0" type="method"/>
            <line num="364" count="0" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="365" type="cond"/>
            <line num="366" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="369" type="cond"/>
            <line num="370" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="emptySlices(long[]) : List&lt; A &gt;" num="374" count="0" type="method"/>
            <line num="376" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="378" type="cond"/>
            <line num="379" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="createSlices(A,long[],Fraction) : List&lt; A &gt;" num="383" count="0" type="method"/>
            <line num="385" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="387" type="cond"/>
            <line num="388" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="389" type="cond"/>
            <line num="390" count="0" type="stmt"/>
            <line num="391" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/planar/PlanarImgFactory.java" name="PlanarImgFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="134" coveredmethods="0" methods="8" elements="27" classes="1" ncloc="69" statements="17" conditionals="2" coveredstatements="0"/>
            <class name="PlanarImgFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="8" elements="27" statements="17" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="PlanarImgFactory(T)" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(long) : PlanarImg&lt; T, ? &gt;" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(Dimensions) : PlanarImg&lt; T, ? &gt;" num="74" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(int[]) : PlanarImg&lt; T, ? &gt;" num="80" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="create(long[],T,NativeTypeFactory&lt; T, A &gt;) : PlanarImg&lt; T, ? &gt;" num="86" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="imgFactory(S) : ImgFactory&lt; S &gt;" num="98" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="PlanarImgFactory()" num="118" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(long[],T) : PlanarImg&lt; T, ? &gt;" num="124" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/planar/PlanarImgs.java" name="PlanarImgs.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="208" coveredmethods="0" methods="15" elements="29" classes="1" ncloc="98" statements="14" conditionals="0" coveredstatements="0"/>
            <class name="PlanarImgs">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="15" elements="29" statements="14" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="PlanarImgs()" num="77" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="unsignedBytes(long) : PlanarImg&lt; UnsignedByteType, ByteArray &gt;" num="83" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bytes(long) : PlanarImg&lt; ByteType, ByteArray &gt;" num="92" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unsignedShorts(long) : PlanarImg&lt; UnsignedShortType, ShortArray &gt;" num="102" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="shorts(long) : PlanarImg&lt; ShortType, ShortArray &gt;" num="111" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unsignedInts(long) : PlanarImg&lt; UnsignedIntType, IntArray &gt;" num="120" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ints(long) : PlanarImg&lt; IntType, IntArray &gt;" num="129" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="longs(long) : PlanarImg&lt; LongType, LongArray &gt;" num="138" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="booleans(long) : PlanarImg&lt; NativeBoolType, BooleanArray &gt;" num="147" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bits(long) : PlanarImg&lt; BitType, LongArray &gt;" num="156" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="floats(long) : PlanarImg&lt; FloatType, FloatArray &gt;" num="165" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubles(long) : PlanarImg&lt; DoubleType, DoubleArray &gt;" num="174" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="argbs(long) : PlanarImg&lt; ARGBType, IntArray &gt;" num="183" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="complexFloats(long) : PlanarImg&lt; ComplexFloatType, FloatArray &gt;" num="193" count="0" type="method"/>
            <line num="196" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="complexDoubles(long) : PlanarImg&lt; ComplexDoubleType, DoubleArray &gt;" num="203" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/planar/PlanarLocalizingCursor.java" name="PlanarLocalizingCursor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="18" loc="195" coveredmethods="0" methods="10" elements="78" classes="1" ncloc="111" statements="52" conditionals="16" coveredstatements="0"/>
            <class name="PlanarLocalizingCursor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="18" coveredmethods="0" methods="10" elements="78" statements="52" conditionals="16" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="protected" signature="PlanarLocalizingCursor(PlanarLocalizingCursor&lt; T &gt;)" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="PlanarLocalizingCursor(PlanarImg&lt; T, ? &gt;)" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrentSliceIndex() : int" num="111" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="117" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : PlanarLocalizingCursor&lt; T &gt;" num="123" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyCursor() : PlanarLocalizingCursor&lt; T &gt;" num="129" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="141" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="fwd() : void" num="147" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="160" type="cond"/>
            <line num="161" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="jumpFwd(long) : void" num="167" count="0" type="method"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="171" type="cond"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="reset() : void" num="183" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="187" type="cond"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/planar/PlanarLocalizingCursor1D.java" name="PlanarLocalizingCursor1D.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="73" coveredmethods="0" methods="5" elements="11" classes="1" ncloc="29" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="PlanarLocalizingCursor1D">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="11" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="PlanarLocalizingCursor1D(PlanarLocalizingCursor1D&lt; T &gt;)" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="PlanarLocalizingCursor1D(PlanarImg&lt; T, ? &gt;)" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : PlanarLocalizingCursor1D&lt; T &gt;" num="55" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="61" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fwd() : void" num="67" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/planar/PlanarLocalizingCursor2D.java" name="PlanarLocalizingCursor2D.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="78" coveredmethods="0" methods="5" elements="15" classes="1" ncloc="33" statements="8" conditionals="2" coveredstatements="0"/>
            <class name="PlanarLocalizingCursor2D">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="5" elements="15" statements="8" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="PlanarLocalizingCursor2D(PlanarLocalizingCursor2D&lt; T &gt;)" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="PlanarLocalizingCursor2D(PlanarImg&lt; T, ? &gt;)" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : PlanarLocalizingCursor2D&lt; T &gt;" num="55" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="61" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="fwd() : void" num="67" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/planar/PlanarPlaneSubsetCursor.java" name="PlanarPlaneSubsetCursor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="16" loc="231" coveredmethods="0" methods="14" elements="50" classes="1" ncloc="98" statements="32" conditionals="4" coveredstatements="0"/>
            <class name="PlanarPlaneSubsetCursor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="16" coveredmethods="0" methods="14" elements="50" statements="32" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="PlanarPlaneSubsetCursor(PlanarPlaneSubsetCursor&lt; T &gt;)" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="PlanarPlaneSubsetCursor(PlanarImg&lt; T, ? &gt;,Interval)" num="104" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrentSliceIndex() : int" num="125" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="134" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : PlanarPlaneSubsetCursor&lt; T &gt;" num="143" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyCursor() : PlanarPlaneSubsetCursor&lt; T &gt;" num="152" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="161" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fwd() : void" num="170" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="jumpFwd(long) : void" num="179" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reset() : void" num="188" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="199" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(int[]) : void" num="208" count="0" type="method"/>
            <line num="211" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntPosition(int) : int" num="217" count="0" type="method"/>
            <line num="220" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="offset(Interval) : long" num="223" count="0" type="method"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="226" type="cond"/>
            <line num="227" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/planar/PlanarPlaneSubsetLocalizingCursor.java" name="PlanarPlaneSubsetLocalizingCursor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="20" loc="246" coveredmethods="0" methods="13" elements="72" classes="1" ncloc="114" statements="47" conditionals="12" coveredstatements="0"/>
            <class name="PlanarPlaneSubsetLocalizingCursor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="20" coveredmethods="0" methods="13" elements="72" statements="47" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="protected" signature="PlanarPlaneSubsetLocalizingCursor(PlanarPlaneSubsetLocalizingCursor&lt; T &gt;)" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="PlanarPlaneSubsetLocalizingCursor(PlanarImg&lt; T, ? &gt;,Interval)" num="110" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrentSliceIndex() : int" num="136" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="145" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : PlanarPlaneSubsetLocalizingCursor&lt; T &gt;" num="154" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyCursor() : PlanarPlaneSubsetLocalizingCursor&lt; T &gt;" num="163" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="172" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="fwd() : void" num="181" count="0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="185" type="cond"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="jumpFwd(long) : void" num="195" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="updatePositionFromIndex(int) : void" num="202" count="0" type="method"/>
            <line num="204" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="204" type="cond"/>
            <line num="205" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reset() : void" num="217" count="0" type="method"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="227" count="0" type="method"/>
            <line num="230" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="offset(Interval) : long" num="236" count="0" type="method"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="240" type="cond"/>
            <line num="241" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/planar/PlanarRandomAccess.java" name="PlanarRandomAccess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="51" loc="367" coveredmethods="0" methods="18" elements="214" classes="1" ncloc="280" statements="130" conditionals="66" coveredstatements="0"/>
            <class name="PlanarRandomAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="51" coveredmethods="0" methods="18" elements="214" statements="130" conditionals="66" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="protected" signature="PlanarRandomAccess(PlanarRandomAccess&lt; T &gt;)" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="PlanarRandomAccess(PlanarImg&lt; T, ? &gt;)" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrentSliceIndex() : int" num="89" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="95" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : PlanarRandomAccess&lt; T &gt;" num="101" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRandomAccess() : PlanarRandomAccess&lt; T &gt;" num="107" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="fwd(int) : void" num="113" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="bck(int) : void" num="129" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="134" type="cond"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="move(int,int) : void" num="145" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="152" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="154" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(long,int) : void" num="165" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="move(Localizable) : void" num="171" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="180" type="cond"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="183" type="cond"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="188" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="move(int[]) : void" num="201" count="0" type="method"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="208" type="cond"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="211" type="cond"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="216" type="cond"/>
            <line num="218" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="218" type="cond"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="move(long[]) : void" num="229" count="0" type="method"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="236" type="cond"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="239" type="cond"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="244" type="cond"/>
            <line num="246" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="246" type="cond"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="setPosition(int,int) : void" num="257" count="0" type="method"/>
            <line num="260" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="260" type="cond"/>
            <line num="262" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="264" type="cond"/>
            <line num="266" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(long,int) : void" num="277" count="0" type="method"/>
            <line num="280" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="setPosition(Localizable) : void" num="283" count="0" type="method"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="292" type="cond"/>
            <line num="294" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="295" type="cond"/>
            <line num="297" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="300" type="cond"/>
            <line num="302" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="303" type="cond"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="setPosition(int[]) : void" num="314" count="0" type="method"/>
            <line num="317" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="321" type="cond"/>
            <line num="323" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="323" type="cond"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="328" type="cond"/>
            <line num="330" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="330" type="cond"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="setPosition(long[]) : void" num="341" count="0" type="method"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="348" type="cond"/>
            <line num="350" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="350" type="cond"/>
            <line num="352" count="0" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line num="355" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="355" type="cond"/>
            <line num="357" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="357" type="cond"/>
            <line num="359" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/planar/PlanarRandomAccess1D.java" name="PlanarRandomAccess1D.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="127" coveredmethods="0" methods="11" elements="34" classes="1" ncloc="73" statements="23" conditionals="0" coveredstatements="0"/>
            <class name="PlanarRandomAccess1D">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="11" elements="34" statements="23" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="PlanarRandomAccess1D(PlanarImg&lt; T, ? &gt;)" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fwd(int) : void" num="56" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bck(int) : void" num="63" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(int,int) : void" num="70" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(Localizable) : void" num="77" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(int[]) : void" num="85" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(long[]) : void" num="92" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(int,int) : void" num="99" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(Localizable) : void" num="106" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(int[]) : void" num="114" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(long[]) : void" num="121" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/img/planar/CopyTest.java" name="CopyTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="175" coveredmethods="0" methods="8" elements="76" classes="1" ncloc="115" statements="56" conditionals="12" coveredstatements="0"/>
            <class name="CopyTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="8" elements="76" statements="56" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="createSourceData() : void" num="68" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="copyWithSourceIteration(Img&lt; IntType &gt;,Img&lt; IntType &gt;) : void" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="copyWithDestIteration(Img&lt; IntType &gt;,Img&lt; IntType &gt;) : void" num="113" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="getImgAsInts(Img&lt; IntType &gt;) : int[]" num="127" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCopyToArrayContainerWithSourceIteration() : void" num="144" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCopyToArrayContainerWithDestIteration() : void" num="152" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCopyToPlanarContainerWithSourceIteration() : void" num="160" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCopyToPlanarContainerWithDestIteration() : void" num="168" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/img/planar/PlanarImgTest.java" name="PlanarImgTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="74" coveredmethods="0" methods="2" elements="10" classes="1" ncloc="28" statements="6" conditionals="2" coveredstatements="0"/>
            <class name="PlanarImgTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="10" statements="6" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="testPlanarImg() : void" num="55" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPlanarImgInvalidDimensions() : void" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/img/planar/PlanarIterableSubIntervalCursorTest.java" name="PlanarIterableSubIntervalCursorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="12" loc="192" coveredmethods="0" methods="9" elements="56" classes="1" ncloc="103" statements="41" conditionals="6" coveredstatements="0"/>
            <class name="PlanarIterableSubIntervalCursorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="12" coveredmethods="0" methods="9" elements="56" statements="41" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="createSourceData() : void" num="67" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOptimizable() : void" num="112" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterationSinglePlane() : void" num="135" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterationIntervalLine() : void" num="143" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIterationSinglePlaneShifted() : void" num="151" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJumpFwdSinglePlane() : void" num="159" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLocalizingtIterationSinglePlaneShifted() : void" num="169" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLocalizingJumpFwdSinglePlane() : void" num="177" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLocalizingIterationSinglePlane() : void" num="185" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/img/planar/PlanarRandomAccessBenchmark.java" name="PlanarRandomAccessBenchmark.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="18" loc="209" coveredmethods="0" methods="10" elements="91" classes="2" ncloc="140" statements="65" conditionals="16" coveredstatements="0"/>
            <class name="PlanarRandomAccessBenchmark">
               <metrics coveredelements="0" coveredconditionals="0" complexity="18" coveredmethods="0" methods="10" elements="91" statements="65" conditionals="16" coveredstatements="0"/>
            </class>
            <class name="PlanarRandomAccessBenchmark.Benchmark">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="createSourceData() : void" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="fillImage() : void" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="copyWithSourceIteration(Img&lt; IntType &gt;,Img&lt; IntType &gt;) : void" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="median(ArrayList&lt; Long &gt;) : Long" num="121" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="benchmark(Benchmark) : void" num="139" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="143" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="152" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="159" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="167" count="0" type="method"/>
            <line num="170" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="179" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="191" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="201" count="0" type="method"/>
            <line num="204" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2">
         <metrics coveredelements="0" complexity="810" loc="9974" methods="520" classes="72" statements="1551" coveredconditionals="0" coveredmethods="0" elements="2635" ncloc="4562" files="65" conditionals="564" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/AbstractCursor.java" name="AbstractCursor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="151" coveredmethods="0" methods="11" elements="39" classes="1" ncloc="73" statements="20" conditionals="8" coveredstatements="0"/>
            <class name="AbstractCursor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="11" elements="39" statements="20" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractCursor(int)" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="72" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="next() : T" num="78" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="jumpFwd(long) : void" num="90" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(float[]) : void" num="97" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(double[]) : void" num="105" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(int[]) : void" num="113" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatPosition(int) : float" num="121" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDoublePosition(int) : double" num="127" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntPosition(int) : int" num="133" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="139" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/AbstractCursorInt.java" name="AbstractCursorInt.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="155" coveredmethods="0" methods="11" elements="39" classes="1" ncloc="73" statements="20" conditionals="8" coveredstatements="0"/>
            <class name="AbstractCursorInt">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="11" elements="39" statements="20" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractCursorInt(int)" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="76" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="next() : T" num="82" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="jumpFwd(long) : void" num="94" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(float[]) : void" num="101" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(double[]) : void" num="109" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(long[]) : void" num="117" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="121" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatPosition(int) : float" num="125" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDoublePosition(int) : double" num="131" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLongPosition(int) : long" num="137" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="143" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/AbstractEuclideanSpace.java" name="AbstractEuclideanSpace.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="68" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="14" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="AbstractEuclideanSpace">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractEuclideanSpace(int)" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="63" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/AbstractInterval.java" name="AbstractInterval.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="48" loc="253" coveredmethods="0" methods="20" elements="112" classes="1" ncloc="140" statements="36" conditionals="56" coveredstatements="0"/>
            <class name="AbstractInterval">
               <metrics coveredelements="0" coveredconditionals="0" complexity="48" coveredmethods="0" methods="20" elements="112" statements="36" conditionals="56" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractInterval(int)" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractInterval(Interval)" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="AbstractInterval(Dimensions)" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="AbstractInterval(long[],long[])" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="AbstractInterval(long[])" num="119" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="realMin(int) : double" num="126" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="129" type="cond"/>
            <line falsecount="0" truecount="0" num="130" type="cond"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="realMin(double[]) : void" num="135" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="138" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="140" type="cond"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="realMin(RealPositionable) : void" num="144" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="147" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="realMax(int) : double" num="152" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="realMax(double[]) : void" num="161" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
            <line num="166" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="166" type="cond"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="realMax(RealPositionable) : void" num="170" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="min(int) : long" num="178" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="181" type="cond"/>
            <line falsecount="0" truecount="0" num="182" type="cond"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="min(long[]) : void" num="187" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="192" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="192" type="cond"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="min(Positionable) : void" num="196" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="199" type="cond"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="max(int) : long" num="204" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="207" type="cond"/>
            <line falsecount="0" truecount="0" num="208" type="cond"/>
            <line num="210" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="max(long[]) : void" num="213" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="216" type="cond"/>
            <line num="218" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="218" type="cond"/>
            <line num="219" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="max(Positionable) : void" num="222" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="225" type="cond"/>
            <line num="227" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="dimensions(long[]) : void" num="230" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="233" type="cond"/>
            <line num="235" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="235" type="cond"/>
            <line num="236" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="dimension(int) : long" num="239" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="242" type="cond"/>
            <line falsecount="0" truecount="0" num="243" type="cond"/>
            <line num="245" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="248" count="0" type="method"/>
            <line num="251" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/AbstractLocalizable.java" name="AbstractLocalizable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="128" coveredmethods="0" methods="10" elements="34" classes="1" ncloc="59" statements="16" conditionals="8" coveredstatements="0"/>
            <class name="AbstractLocalizable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="10" elements="34" statements="16" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractLocalizable(int)" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="AbstractLocalizable(long[])" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(float[]) : void" num="77" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(double[]) : void" num="84" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(int[]) : void" num="91" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(long[]) : void" num="98" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatPosition(int) : float" num="105" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDoublePosition(int) : double" num="111" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntPosition(int) : int" num="117" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLongPosition(int) : long" num="123" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/AbstractLocalizableInt.java" name="AbstractLocalizableInt.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="132" coveredmethods="0" methods="10" elements="34" classes="1" ncloc="59" statements="16" conditionals="8" coveredstatements="0"/>
            <class name="AbstractLocalizableInt">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="10" elements="34" statements="16" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractLocalizableInt(int)" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="AbstractLocalizableInt(int[])" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(float[]) : void" num="81" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(double[]) : void" num="88" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(int[]) : void" num="95" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="98" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(long[]) : void" num="102" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatPosition(int) : float" num="109" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDoublePosition(int) : double" num="115" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntPosition(int) : int" num="121" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLongPosition(int) : long" num="127" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/AbstractLocalizingCursor.java" name="AbstractLocalizingCursor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="84" coveredmethods="0" methods="4" elements="11" classes="1" ncloc="28" statements="5" conditionals="2" coveredstatements="0"/>
            <class name="AbstractLocalizingCursor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="4" elements="11" statements="5" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractLocalizingCursor(int)" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="59" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="next() : T" num="65" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="jumpFwd(long) : void" num="72" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/AbstractLocalizingCursorInt.java" name="AbstractLocalizingCursorInt.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="84" coveredmethods="0" methods="4" elements="11" classes="1" ncloc="28" statements="5" conditionals="2" coveredstatements="0"/>
            <class name="AbstractLocalizingCursorInt">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="4" elements="11" statements="5" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractLocalizingCursorInt(int)" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="59" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="next() : T" num="65" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="jumpFwd(long) : void" num="72" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/AbstractRealInterval.java" name="AbstractRealInterval.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="137" coveredmethods="0" methods="10" elements="38" classes="1" ncloc="64" statements="20" conditionals="8" coveredstatements="0"/>
            <class name="AbstractRealInterval">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="10" elements="38" statements="20" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractRealInterval(int)" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractRealInterval(RealInterval)" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractRealInterval(double[],double[])" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMin(int) : double" num="91" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="realMin(double[]) : void" num="97" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="100" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="realMin(RealPositionable) : void" num="104" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMax(int) : double" num="111" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="realMax(double[]) : void" num="117" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="realMax(RealPositionable) : void" num="124" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="127" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="131" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/AbstractRealLocalizable.java" name="AbstractRealLocalizable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="102" coveredmethods="0" methods="6" elements="20" classes="1" ncloc="37" statements="10" conditionals="4" coveredstatements="0"/>
            <class name="AbstractRealLocalizable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="6" elements="20" statements="10" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="AbstractRealLocalizable(int)" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="AbstractRealLocalizable(double[])" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(float[]) : void" num="77" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(double[]) : void" num="84" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatPosition(int) : float" num="91" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDoublePosition(int) : double" num="97" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/AbstractWrappedInterval.java" name="AbstractWrappedInterval.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="97" coveredmethods="0" methods="9" elements="18" classes="1" ncloc="48" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="AbstractWrappedInterval">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="9" elements="18" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractWrappedInterval(I)" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dimensions(long[]) : void" num="50" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dimension(int) : long" num="56" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="min(int) : long" num="62" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="min(long[]) : void" num="68" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="min(Positionable) : void" num="74" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="max(int) : long" num="80" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="max(long[]) : void" num="86" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="max(Positionable) : void" num="92" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/AbstractWrappedLocalizable.java" name="AbstractWrappedLocalizable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="108" coveredmethods="0" methods="10" elements="20" classes="1" ncloc="54" statements="10" conditionals="0" coveredstatements="0"/>
            <class name="AbstractWrappedLocalizable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="10" elements="20" statements="10" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="AbstractWrappedLocalizable(L)" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(int[]) : void" num="55" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(long[]) : void" num="61" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntPosition(int) : int" num="67" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLongPosition(int) : long" num="73" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(float[]) : void" num="79" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(double[]) : void" num="85" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatPosition(int) : float" num="91" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDoublePosition(int) : double" num="97" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="103" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/AbstractWrappedPositionableLocalizable.java" name="AbstractWrappedPositionableLocalizable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="125" coveredmethods="0" methods="13" elements="26" classes="1" ncloc="68" statements="13" conditionals="0" coveredstatements="0"/>
            <class name="AbstractWrappedPositionableLocalizable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="13" elements="26" statements="13" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="AbstractWrappedPositionableLocalizable(P)" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fwd(int) : void" num="54" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bck(int) : void" num="60" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(int,int) : void" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(long,int) : void" num="72" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(Localizable) : void" num="78" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(int[]) : void" num="84" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(long[]) : void" num="90" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(Localizable) : void" num="96" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(int[]) : void" num="102" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(long[]) : void" num="108" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(int,int) : void" num="114" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(long,int) : void" num="120" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/AbstractWrappedRealInterval.java" name="AbstractWrappedRealInterval.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="98" coveredmethods="0" methods="9" elements="18" classes="1" ncloc="48" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="AbstractWrappedRealInterval">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="9" elements="18" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractWrappedRealInterval(I)" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMin(int) : double" num="52" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMin(double[]) : void" num="58" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMin(RealPositionable) : void" num="64" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMax(int) : double" num="70" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMax(double[]) : void" num="76" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMax(RealPositionable) : void" num="82" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="88" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSource() : I" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/Cursor.java" name="Cursor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="90" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Cursor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/Dimensions.java" name="Dimensions.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="16" loc="188" coveredmethods="0" methods="7" elements="52" classes="1" ncloc="59" statements="27" conditionals="18" coveredstatements="0"/>
            <class name="Dimensions">
               <metrics coveredelements="0" coveredconditionals="0" complexity="16" coveredmethods="0" methods="7" elements="52" statements="27" conditionals="18" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="package" signature="dimensions(long[]) : void" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="58" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="allPositive(long) : boolean" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="allPositive(int) : boolean" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="verifyAllPositive(long) : long[]" num="116" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="verifyAllPositive(int) : int[]" num="134" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="3" visibility="package" signature="verify(long) : long[]" num="155" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="157" type="cond"/>
            <line num="158" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="160" type="cond"/>
            <line num="161" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="3" visibility="package" signature="verify(int) : int[]" num="178" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="180" type="cond"/>
            <line num="181" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="183" type="cond"/>
            <line num="184" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/Dirty.java" name="Dirty.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="47" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Dirty">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/EuclideanSpace.java" name="EuclideanSpace.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="47" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="EuclideanSpace">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/FinalDimensions.java" name="FinalDimensions.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="152" coveredmethods="0" methods="11" elements="33" classes="1" ncloc="64" statements="16" conditionals="6" coveredstatements="0"/>
            <class name="FinalDimensions">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="11" elements="33" statements="16" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="protected" signature="FinalDimensions(long[],boolean)" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="FinalDimensions(long)" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="FinalDimensions(int)" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="FinalDimensions(Dimensions)" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="103" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="dimensions(long[]) : void" num="109" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dimension(int) : long" num="116" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="122" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="128" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="135" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="wrap(long[]) : FinalDimensions" num="148" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/FinalInterval.java" name="FinalInterval.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="179" coveredmethods="0" methods="9" elements="42" classes="1" ncloc="68" statements="25" conditionals="8" coveredstatements="0"/>
            <class name="FinalInterval">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="9" elements="42" statements="25" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="FinalInterval(Interval)" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="FinalInterval(Dimensions)" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="FinalInterval(long[],long[])" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="FinalInterval(long)" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="97" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="103" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createMinSize(long) : FinalInterval" num="121" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createMinMax(long) : FinalInterval" num="146" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="151" type="cond"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="createMinSize(long[],long[]) : FinalInterval" num="168" count="0" type="method"/>
            <line num="170" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="171" type="cond"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="175" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/FinalRealInterval.java" name="FinalRealInterval.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="142" coveredmethods="0" methods="6" elements="28" classes="1" ncloc="51" statements="18" conditionals="4" coveredstatements="0"/>
            <class name="FinalRealInterval">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="6" elements="28" statements="18" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="FinalRealInterval(RealInterval)" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="FinalRealInterval(double[],double[])" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createMinSize(double) : FinalRealInterval" num="90" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="96" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createMinMax(double) : FinalRealInterval" num="116" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="121" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="129" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="137" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/FlatIterationOrder.java" name="FlatIterationOrder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="117" coveredmethods="0" methods="3" elements="32" classes="1" ncloc="39" statements="17" conditionals="12" coveredstatements="0"/>
            <class name="FlatIterationOrder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="3" elements="32" statements="17" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="FlatIterationOrder(Interval)" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="equals(Object) : boolean" num="78" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="validIndices(Interval) : List&lt; Integer &gt;" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/Interval.java" name="Interval.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="145" coveredmethods="0" methods="7" elements="30" classes="1" ncloc="45" statements="15" conditionals="8" coveredstatements="0"/>
            <class name="Interval">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="7" elements="30" statements="15" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="package" signature="min(long[]) : void" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="min(Positionable) : void" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="max(long[]) : void" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="max(Positionable) : void" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="121" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="realMin(int) : double" num="126" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="realMax(int) : double" num="133" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="dimension(int) : long" num="140" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/IterableInterval.java" name="IterableInterval.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="62" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="IterableInterval">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/IterableRealInterval.java" name="IterableRealInterval.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="126" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="IterableRealInterval">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/Iterator.java" name="Iterator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="74" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Iterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/KDTree.java" name="KDTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="94" loc="750" coveredmethods="0" methods="52" elements="309" classes="5" ncloc="454" statements="173" conditionals="84" coveredstatements="0"/>
            <class name="KDTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="60" coveredmethods="0" methods="24" elements="222" statements="126" conditionals="72" coveredstatements="0"/>
            </class>
            <class name="KDTree.ValueNode">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="12" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="KDTree.SamplerNode">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="12" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="KDTree.DimComparator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="2" elements="9" statements="3" conditionals="4" coveredstatements="0"/>
            </class>
            <class name="KDTree.KDTreeCursor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="20" coveredmethods="0" methods="16" elements="54" statements="30" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ValueNode(T,RealLocalizable,int,ValueNode&lt; T &gt;,ValueNode&lt; T &gt;)" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="ValueNode(ValueNode&lt; T &gt;)" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="108" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : ValueNode&lt; T &gt;" num="114" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="120" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SamplerNode(Sampler&lt; T &gt;,RealLocalizable,int,SamplerNode&lt; T &gt;,SamplerNode&lt; T &gt;)" num="146" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="SamplerNode(SamplerNode&lt; T &gt;)" num="152" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="158" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : SamplerNode&lt; T &gt;" num="164" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="170" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="11" visibility="public" signature="KDTree(List&lt; T &gt;,List&lt; L &gt;)" num="190" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="192" type="cond"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="198" type="cond"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="202" type="cond"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="209" type="cond"/>
            <line num="211" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="213" type="cond"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="215" type="cond"/>
            <line num="216" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="220" type="cond"/>
            <line num="222" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="222" type="cond"/>
            <line num="223" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="230" type="cond"/>
            <line num="231" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="233" type="cond"/>
            <line num="234" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="KDTree(IterableRealInterval&lt; T &gt;)" num="247" count="0" type="method"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="257" type="cond"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line complexity="2" visibility="protected" signature="verifyDimensions(List&lt; L &gt;,int) : boolean" num="270" count="0" type="method"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="273" type="cond"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DimComparator(int)" num="285" count="0" type="method"/>
            <line num="287" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="compare(L,L) : int" num="290" count="0" type="method"/>
            <line num="293" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="294" type="cond"/>
            <line falsecount="0" truecount="0" num="294" type="cond"/>
            <line complexity="4" visibility="protected" signature="makeNode(List&lt; L &gt;,int,int,int,List&lt; T &gt;,int[]) : ValueNode&lt; T &gt;" num="321" count="0" type="method"/>
            <line num="323" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="323" type="cond"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="328" type="cond"/>
            <line num="329" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="331" type="cond"/>
            <line num="333" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line complexity="7" visibility="protected" signature="makeNode(ListIterator&lt; L &gt;,ListIterator&lt; L &gt;,int,List&lt; T &gt;,int[]) : ValueNode&lt; T &gt;" num="362" count="0" type="method"/>
            <line num="364" count="0" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="366" type="cond"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line num="373" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="373" type="cond"/>
            <line num="376" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="376" type="cond"/>
            <line num="377" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="381" type="cond"/>
            <line num="382" count="0" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="383" type="cond"/>
            <line num="384" count="0" type="stmt"/>
            <line num="385" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="389" type="cond"/>
            <line num="391" count="0" type="stmt"/>
            <line num="392" count="0" type="stmt"/>
            <line num="396" count="0" type="stmt"/>
            <line complexity="4" visibility="protected" signature="makeNode(List&lt; L &gt;,int,int,int) : ValueNode&lt; T &gt;" num="413" count="0" type="method"/>
            <line num="416" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="416" type="cond"/>
            <line num="418" count="0" type="stmt"/>
            <line num="419" count="0" type="stmt"/>
            <line num="421" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="421" type="cond"/>
            <line num="422" count="0" type="stmt"/>
            <line num="424" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="424" type="cond"/>
            <line num="426" count="0" type="stmt"/>
            <line num="430" count="0" type="stmt"/>
            <line complexity="7" visibility="protected" signature="makeNode(ListIterator&lt; L &gt;,ListIterator&lt; L &gt;,int) : ValueNode&lt; T &gt;" num="446" count="0" type="method"/>
            <line num="449" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="451" type="cond"/>
            <line num="453" count="0" type="stmt"/>
            <line num="454" count="0" type="stmt"/>
            <line num="455" count="0" type="stmt"/>
            <line num="456" count="0" type="stmt"/>
            <line num="458" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="458" type="cond"/>
            <line num="461" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="461" type="cond"/>
            <line num="462" count="0" type="stmt"/>
            <line num="463" count="0" type="stmt"/>
            <line num="466" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="466" type="cond"/>
            <line num="467" count="0" type="stmt"/>
            <line num="468" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="468" type="cond"/>
            <line num="469" count="0" type="stmt"/>
            <line num="470" count="0" type="stmt"/>
            <line num="472" count="0" type="stmt"/>
            <line num="474" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="474" type="cond"/>
            <line num="476" count="0" type="stmt"/>
            <line num="477" count="0" type="stmt"/>
            <line num="481" count="0" type="stmt"/>
            <line complexity="4" visibility="protected" signature="makeSamplerNode(List&lt; RealCursor&lt; T &gt; &gt;,int,int,int) : SamplerNode&lt; T &gt;" num="505" count="0" type="method"/>
            <line num="507" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="507" type="cond"/>
            <line num="509" count="0" type="stmt"/>
            <line num="510" count="0" type="stmt"/>
            <line num="512" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="512" type="cond"/>
            <line num="513" count="0" type="stmt"/>
            <line num="515" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="515" type="cond"/>
            <line num="517" count="0" type="stmt"/>
            <line num="521" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRoot() : KDTreeNode&lt; T &gt;" num="530" count="0" type="method"/>
            <line num="532" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="535" count="0" type="method"/>
            <line num="538" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString(KDTreeNode&lt; T &gt;,String) : String" num="541" count="0" type="method"/>
            <line num="543" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="543" type="cond"/>
            <line num="544" count="0" type="stmt"/>
            <line num="546" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="549" count="0" type="method"/>
            <line num="552" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMin(int) : double" num="555" count="0" type="method"/>
            <line num="558" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="realMin(double[]) : void" num="561" count="0" type="method"/>
            <line num="564" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="564" type="cond"/>
            <line num="565" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMin(RealPositionable) : void" num="568" count="0" type="method"/>
            <line num="571" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMax(int) : double" num="574" count="0" type="method"/>
            <line num="577" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="realMax(double[]) : void" num="580" count="0" type="method"/>
            <line num="583" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="583" type="cond"/>
            <line num="584" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMax(RealPositionable) : void" num="587" count="0" type="method"/>
            <line num="590" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : long" num="593" count="0" type="method"/>
            <line num="596" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterationOrder() : Object" num="599" count="0" type="method"/>
            <line num="602" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="KDTreeCursor(KDTree&lt; T &gt;)" num="613" count="0" type="method"/>
            <line num="615" count="0" type="stmt"/>
            <line num="616" count="0" type="stmt"/>
            <line num="617" count="0" type="stmt"/>
            <line num="618" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="KDTreeCursor(KDTreeCursor)" num="621" count="0" type="method"/>
            <line num="623" count="0" type="stmt"/>
            <line num="624" count="0" type="stmt"/>
            <line num="625" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(float[]) : void" num="628" count="0" type="method"/>
            <line num="631" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(double[]) : void" num="634" count="0" type="method"/>
            <line num="637" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatPosition(int) : float" num="640" count="0" type="method"/>
            <line num="643" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDoublePosition(int) : double" num="646" count="0" type="method"/>
            <line num="649" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="652" count="0" type="method"/>
            <line num="655" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="658" count="0" type="method"/>
            <line num="661" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : KDTreeCursor" num="664" count="0" type="method"/>
            <line num="667" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="jumpFwd(long) : void" num="670" count="0" type="method"/>
            <line num="673" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="673" type="cond"/>
            <line num="674" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="fwd() : void" num="677" count="0" type="method"/>
            <line num="680" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="680" type="cond"/>
            <line num="681" count="0" type="stmt"/>
            <line num="684" count="0" type="stmt"/>
            <line num="685" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="685" type="cond"/>
            <line num="686" count="0" type="stmt"/>
            <line num="687" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="687" type="cond"/>
            <line num="688" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reset() : void" num="692" count="0" type="method"/>
            <line num="695" count="0" type="stmt"/>
            <line num="696" count="0" type="stmt"/>
            <line num="697" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="700" count="0" type="method"/>
            <line num="703" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : T" num="706" count="0" type="method"/>
            <line num="709" count="0" type="stmt"/>
            <line num="710" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="713" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="copyCursor() : KDTreeCursor" num="719" count="0" type="method"/>
            <line num="722" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : KDTreeCursor" num="727" count="0" type="method"/>
            <line num="730" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cursor() : KDTreeCursor" num="733" count="0" type="method"/>
            <line num="736" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localizingCursor() : KDTreeCursor" num="739" count="0" type="method"/>
            <line num="742" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="firstElement() : T" num="745" count="0" type="method"/>
            <line num="748" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/KDTreeNode.java" name="KDTreeNode.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="17" loc="201" coveredmethods="0" methods="12" elements="54" classes="1" ncloc="90" statements="32" conditionals="10" coveredstatements="0"/>
            <class name="KDTreeNode">
               <metrics coveredelements="0" coveredconditionals="0" complexity="17" coveredmethods="0" methods="12" elements="54" statements="32" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="KDTreeNode(RealLocalizable,int,KDTreeNode&lt; T &gt;,KDTreeNode&lt; T &gt;)" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="KDTreeNode(KDTreeNode&lt; T &gt;)" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSplitDimension() : int" num="112" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSplitCoordinate() : double" num="123" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="128" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(float[]) : void" num="134" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="137" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(double[]) : void" num="141" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="144" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatPosition(int) : float" num="148" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDoublePosition(int) : double" num="154" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="squDistanceTo(float[]) : float" num="166" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="169" type="cond"/>
            <line num="171" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="squDistanceTo(double[]) : double" num="179" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="182" type="cond"/>
            <line num="184" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="squDistanceTo(RealLocalizable) : double" num="192" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="195" type="cond"/>
            <line num="197" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/Localizable.java" name="Localizable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="107" coveredmethods="0" methods="5" elements="18" classes="1" ncloc="31" statements="9" conditionals="4" coveredstatements="0"/>
            <class name="Localizable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="5" elements="18" statements="9" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="package" signature="localize(int[]) : void" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="58" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="localize(long[]) : void" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getIntPosition(int) : int" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getFloatPosition(int) : float" num="96" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getDoublePosition(int) : double" num="102" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/Point.java" name="Point.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="28" loc="222" coveredmethods="0" methods="21" elements="64" classes="1" ncloc="114" statements="29" conditionals="14" coveredstatements="0"/>
            <class name="Point">
               <metrics coveredelements="0" coveredconditionals="0" complexity="28" coveredmethods="0" methods="21" elements="64" statements="29" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="protected" signature="Point(long[],boolean)" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line complexity="1" visibility="public" signature="Point(int)" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Point(long)" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Point(int)" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Point(Localizable)" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fwd(int) : void" num="114" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bck(int) : void" num="120" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(int,int) : void" num="126" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(long,int) : void" num="132" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(Localizable) : void" num="138" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="141" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(int[]) : void" num="145" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="148" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(long[]) : void" num="152" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(Localizable) : void" num="159" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="162" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(int[]) : void" num="166" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="169" type="cond"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(long[]) : void" num="173" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="176" type="cond"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(int,int) : void" num="180" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(long,int) : void" num="186" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="192" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="198" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="205" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="wrap(long[]) : Point" num="218" count="0" type="method"/>
            <line num="220" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/PointSampleList.java" name="PointSampleList.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="31" loc="255" coveredmethods="0" methods="27" elements="85" classes="2" ncloc="174" statements="50" conditionals="8" coveredstatements="0"/>
            <class name="PointSampleList">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="9" elements="39" statements="22" conditionals="8" coveredstatements="0"/>
            </class>
            <class name="PointSampleList.PointSampleListCursor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="18" coveredmethods="0" methods="18" elements="46" statements="28" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="copy() : Cursor&lt; T &gt;" num="56" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyCursor() : Cursor&lt; T &gt;" num="67" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDoublePosition(int) : double" num="73" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatPosition(int) : float" num="79" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntPosition(int) : int" num="85" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLongPosition(int) : long" num="91" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(float[]) : void" num="97" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(double[]) : void" num="103" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(int[]) : void" num="109" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(long[]) : void" num="115" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="121" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="127" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fwd() : void" num="133" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="141" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="jumpFwd(long) : void" num="147" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reset() : void" num="155" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : T" num="163" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="170" count="0" type="method"/>
            <line complexity="2" visibility="private" signature="initInterval(int) : Interval" num="183" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="187" type="cond"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="PointSampleList(int)" num="199" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="add(Point,T) : void" num="204" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="209" type="cond"/>
            <line num="211" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="213" type="cond"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="215" type="cond"/>
            <line num="216" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cursor() : Cursor&lt; T &gt;" num="220" count="0" type="method"/>
            <line num="223" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterationOrder() : Object" num="226" count="0" type="method"/>
            <line num="229" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="firstElement() : T" num="232" count="0" type="method"/>
            <line num="235" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localizingCursor() : Cursor&lt; T &gt;" num="238" count="0" type="method"/>
            <line num="241" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : long" num="244" count="0" type="method"/>
            <line num="247" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt; T &gt;" num="250" count="0" type="method"/>
            <line num="253" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/Positionable.java" name="Positionable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="156" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="16" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Positionable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/RandomAccess.java" name="RandomAccess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="169" coveredmethods="0" methods="3" elements="15" classes="1" ncloc="23" statements="6" conditionals="6" coveredstatements="0"/>
            <class name="RandomAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="3" elements="15" statements="6" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="package" signature="setPositionAndGet(long) : T" num="87" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="setPositionAndGet(int) : T" num="124" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="setPositionAndGet(Localizable) : T" num="161" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/RandomAccessible.java" name="RandomAccessible.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="183" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="19" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="RandomAccessible">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="getAt(long) : T" num="143" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getAt(int) : T" num="161" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getAt(Localizable) : T" num="179" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/RandomAccessibleInterval.java" name="RandomAccessibleInterval.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="63" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="RandomAccessibleInterval">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/RealCursor.java" name="RealCursor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="89" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="RealCursor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/RealInterval.java" name="RealInterval.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="121" coveredmethods="0" methods="4" elements="24" classes="1" ncloc="30" statements="12" conditionals="8" coveredstatements="0"/>
            <class name="RealInterval">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="4" elements="24" statements="12" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="package" signature="realMin(double[]) : void" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="realMin(RealPositionable) : void" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="realMax(double[]) : void" num="103" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="realMax(RealPositionable) : void" num="115" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="119" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/RealLocalizable.java" name="RealLocalizable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="93" coveredmethods="0" methods="3" elements="14" classes="1" ncloc="21" statements="7" conditionals="4" coveredstatements="0"/>
            <class name="RealLocalizable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="3" elements="14" statements="7" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="package" signature="localize(float[]) : void" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="localize(double[]) : void" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getFloatPosition(int) : float" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/RealPoint.java" name="RealPoint.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="44" loc="289" coveredmethods="0" methods="31" elements="102" classes="1" ncloc="170" statements="45" conditionals="26" coveredstatements="0"/>
            <class name="RealPoint">
               <metrics coveredelements="0" coveredconditionals="0" complexity="44" coveredmethods="0" methods="31" elements="102" statements="45" conditionals="26" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="protected" signature="RealPoint(double[],boolean)" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line complexity="1" visibility="public" signature="RealPoint(int)" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RealPoint(double)" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RealPoint(float)" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RealPoint(RealLocalizable)" num="109" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fwd(int) : void" num="115" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bck(int) : void" num="121" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(int,int) : void" num="127" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(long,int) : void" num="133" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(Localizable) : void" num="139" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="142" type="cond"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(int[]) : void" num="146" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="149" type="cond"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(long[]) : void" num="153" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(Localizable) : void" num="160" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(int[]) : void" num="167" count="0" type="method"/>
            <line num="170" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="170" type="cond"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(long[]) : void" num="174" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="177" type="cond"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(int,int) : void" num="181" count="0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(long,int) : void" num="187" count="0" type="method"/>
            <line num="190" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(float,int) : void" num="193" count="0" type="method"/>
            <line num="196" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(double,int) : void" num="199" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(RealLocalizable) : void" num="205" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="208" type="cond"/>
            <line num="209" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(float[]) : void" num="212" count="0" type="method"/>
            <line num="215" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="215" type="cond"/>
            <line num="216" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(double[]) : void" num="219" count="0" type="method"/>
            <line num="222" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="222" type="cond"/>
            <line num="223" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(RealLocalizable) : void" num="226" count="0" type="method"/>
            <line num="229" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="229" type="cond"/>
            <line num="230" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(float[]) : void" num="233" count="0" type="method"/>
            <line num="236" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="236" type="cond"/>
            <line num="237" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(double[]) : void" num="240" count="0" type="method"/>
            <line num="243" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="243" type="cond"/>
            <line num="244" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(float,int) : void" num="247" count="0" type="method"/>
            <line num="250" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(double,int) : void" num="253" count="0" type="method"/>
            <line num="256" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="259" count="0" type="method"/>
            <line num="262" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="265" count="0" type="method"/>
            <line num="268" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="272" count="0" type="method"/>
            <line num="275" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="wrap(double[]) : RealPoint" num="285" count="0" type="method"/>
            <line num="287" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/RealPointSampleList.java" name="RealPointSampleList.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="35" loc="273" coveredmethods="0" methods="29" elements="95" classes="2" ncloc="189" statements="54" conditionals="12" coveredstatements="0"/>
            <class name="RealPointSampleList">
               <metrics coveredelements="0" coveredconditionals="0" complexity="21" coveredmethods="0" methods="15" elements="57" statements="30" conditionals="12" coveredstatements="0"/>
            </class>
            <class name="RealPointSampleList.RealPointSampleListCursor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="14" elements="38" statements="24" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="copy() : RealCursor&lt; T &gt;" num="55" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyCursor() : RealCursor&lt; T &gt;" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDoublePosition(int) : double" num="72" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatPosition(int) : float" num="78" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(float[]) : void" num="84" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(double[]) : void" num="90" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="96" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="102" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fwd() : void" num="108" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="116" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="jumpFwd(long) : void" num="122" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reset() : void" num="130" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : T" num="138" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="145" count="0" type="method"/>
            <line complexity="2" visibility="public" signature="RealPointSampleList(int)" num="166" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="171" type="cond"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="add(RealPoint,T) : void" num="178" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="183" type="cond"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="187" type="cond"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="189" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cursor() : RealCursor&lt; T &gt;" num="194" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterationOrder() : Object" num="200" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="firstElement() : T" num="206" count="0" type="method"/>
            <line num="209" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localizingCursor() : RealCursor&lt; T &gt;" num="212" count="0" type="method"/>
            <line num="215" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : long" num="218" count="0" type="method"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMax(int) : double" num="224" count="0" type="method"/>
            <line num="227" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="realMax(double[]) : void" num="230" count="0" type="method"/>
            <line num="233" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="233" type="cond"/>
            <line num="234" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMax(RealPositionable) : void" num="237" count="0" type="method"/>
            <line num="240" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMin(int) : double" num="243" count="0" type="method"/>
            <line num="246" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="realMin(double[]) : void" num="249" count="0" type="method"/>
            <line num="252" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="252" type="cond"/>
            <line num="253" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMin(RealPositionable) : void" num="256" count="0" type="method"/>
            <line num="259" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="262" count="0" type="method"/>
            <line num="265" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt; T &gt;" num="268" count="0" type="method"/>
            <line num="271" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/RealPositionable.java" name="RealPositionable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="132" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="14" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="RealPositionable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/RealRandomAccess.java" name="RealRandomAccess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="166" coveredmethods="0" methods="3" elements="15" classes="1" ncloc="23" statements="6" conditionals="6" coveredstatements="0"/>
            <class name="RealRandomAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="3" elements="15" statements="6" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="package" signature="setPositionAndGet(double) : T" num="84" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="setPositionAndGet(float) : T" num="121" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="setPositionAndGet(RealLocalizable) : T" num="158" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="160" type="cond"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/RealRandomAccessible.java" name="RealRandomAccessible.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="122" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="18" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="RealRandomAccessible">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="getAt(float) : T" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getAt(double) : T" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getAt(RealLocalizable) : T" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/RealRandomAccessibleRealInterval.java" name="RealRandomAccessibleRealInterval.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="63" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="RealRandomAccessibleRealInterval">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/Sampler.java" name="Sampler.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="76" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Sampler">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/View.java" name="View.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="59" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="View">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/Volatile.java" name="Volatile.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="73" coveredmethods="0" methods="5" elements="11" classes="1" ncloc="27" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="Volatile">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="11" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Volatile(T,boolean)" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Volatile(T)" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isValid() : boolean" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValid(boolean) : void" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/BinningTest.java" name="BinningTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="25" loc="542" coveredmethods="0" methods="15" elements="205" classes="1" ncloc="389" statements="170" conditionals="20" coveredstatements="0"/>
            <class name="BinningTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="25" coveredmethods="0" methods="15" elements="205" statements="170" conditionals="20" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="BinningTest()" num="61" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="setUpClass() : void" num="64" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="tearDownClass() : void" num="68" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="setUp() : void" num="72" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="76" count="0" type="method"/>
            <line complexity="2" visibility="public" signature="testInternal() : void" num="80" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testValues() : void" num="105" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEdges() : void" num="119" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDistribution() : void" num="152" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testEdgeValuesArray() : void" num="173" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="254" type="cond"/>
            <line num="256" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="265" type="cond"/>
            <line num="267" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testCenterValuesArray() : void" num="280" count="0" type="method"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="361" type="cond"/>
            <line num="363" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="367" type="cond"/>
            <line num="369" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="testSomeValues(int) : void" num="379" count="0" type="method"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line num="388" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line num="391" count="0" type="stmt"/>
            <line num="392" count="0" type="stmt"/>
            <line num="393" count="0" type="stmt"/>
            <line num="396" count="0" type="stmt"/>
            <line num="397" count="0" type="stmt"/>
            <line num="398" count="0" type="stmt"/>
            <line num="399" count="0" type="stmt"/>
            <line num="400" count="0" type="stmt"/>
            <line num="401" count="0" type="stmt"/>
            <line num="402" count="0" type="stmt"/>
            <line num="405" count="0" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line num="407" count="0" type="stmt"/>
            <line num="408" count="0" type="stmt"/>
            <line num="409" count="0" type="stmt"/>
            <line num="410" count="0" type="stmt"/>
            <line num="411" count="0" type="stmt"/>
            <line num="414" count="0" type="stmt"/>
            <line num="415" count="0" type="stmt"/>
            <line num="416" count="0" type="stmt"/>
            <line num="417" count="0" type="stmt"/>
            <line num="418" count="0" type="stmt"/>
            <line num="419" count="0" type="stmt"/>
            <line num="420" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="testSomeEdges(int,double) : void" num="430" count="0" type="method"/>
            <line num="432" count="0" type="stmt"/>
            <line num="433" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line num="435" count="0" type="stmt"/>
            <line num="438" count="0" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="439" type="cond"/>
            <line num="442" count="0" type="stmt"/>
            <line num="443" count="0" type="stmt"/>
            <line num="444" count="0" type="stmt"/>
            <line num="448" count="0" type="stmt"/>
            <line num="449" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line num="453" count="0" type="stmt"/>
            <line num="454" count="0" type="stmt"/>
            <line num="456" count="0" type="stmt"/>
            <line num="459" count="0" type="stmt"/>
            <line num="460" count="0" type="stmt"/>
            <line num="461" count="0" type="stmt"/>
            <line num="462" count="0" type="stmt"/>
            <line num="464" count="0" type="stmt"/>
            <line num="465" count="0" type="stmt"/>
            <line num="467" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="testHistogram(double,double,double,int) : void" num="478" count="0" type="method"/>
            <line num="480" count="0" type="stmt"/>
            <line num="483" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="483" type="cond"/>
            <line num="485" count="0" type="stmt"/>
            <line num="486" count="0" type="stmt"/>
            <line num="490" count="0" type="stmt"/>
            <line num="491" count="0" type="stmt"/>
            <line num="492" count="0" type="stmt"/>
            <line num="493" count="0" type="stmt"/>
            <line num="495" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="495" type="cond"/>
            <line num="497" count="0" type="stmt"/>
            <line num="498" count="0" type="stmt"/>
            <line num="503" count="0" type="stmt"/>
            <line num="506" count="0" type="stmt"/>
            <line num="507" count="0" type="stmt"/>
            <line num="508" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="testNextDouble(double,int) : void" num="517" count="0" type="method"/>
            <line num="519" count="0" type="stmt"/>
            <line num="522" count="0" type="stmt"/>
            <line num="523" count="0" type="stmt"/>
            <line num="524" count="0" type="stmt"/>
            <line num="526" count="0" type="stmt"/>
            <line num="527" count="0" type="stmt"/>
            <line num="528" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="530" type="cond"/>
            <line num="533" count="0" type="stmt"/>
            <line num="535" count="0" type="stmt"/>
            <line num="536" count="0" type="stmt"/>
            <line num="537" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="539" type="cond"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/DimensionsTest.java" name="DimensionsTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="73" coveredmethods="0" methods="3" elements="8" classes="1" ncloc="26" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="DimensionsTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="dimension(int) : long" num="50" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="56" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDimensionsWithLongs() : void" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/DoubleUtil.java" name="DoubleUtil.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="27" loc="259" coveredmethods="0" methods="3" elements="108" classes="1" ncloc="164" statements="71" conditionals="34" coveredstatements="0"/>
            <class name="DoubleUtil">
               <metrics coveredelements="0" coveredconditionals="0" complexity="27" coveredmethods="0" methods="3" elements="108" statements="71" conditionals="34" coveredstatements="0"/>
            </class>
            <line complexity="8" visibility="public" signature="nextDouble(double,boolean) : double" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="17" visibility="private" signature="nextDoubleHexString(String,boolean) : String" num="109" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="147" type="cond"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="152" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="152" type="cond"/>
            <line num="155" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="174" type="cond"/>
            <line num="176" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="192" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="196" type="cond"/>
            <line num="198" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="204" type="cond"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="220" type="cond"/>
            <line num="222" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="234" type="cond"/>
            <line num="236" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="240" type="cond"/>
            <line num="242" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="245" type="cond"/>
            <line complexity="2" visibility="private" signature="padWithZeros(String) : String" num="251" count="0" type="method"/>
            <line num="253" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="253" type="cond"/>
            <line num="255" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/FinalDimensionsTest.java" name="FinalDimensionsTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="76" coveredmethods="0" methods="3" elements="13" classes="1" ncloc="31" statements="10" conditionals="0" coveredstatements="0"/>
            <class name="FinalDimensionsTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="13" statements="10" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="52" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHashCode() : void" num="62" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="70" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/FinalIntervalTest.java" name="FinalIntervalTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="168" coveredmethods="0" methods="11" elements="53" classes="1" ncloc="94" statements="42" conditionals="0" coveredstatements="0"/>
            <class name="FinalIntervalTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="11" elements="53" statements="42" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testCtorDimensions() : void" num="55" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCtorInterval() : void" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCtorMinMax() : void" num="77" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCtorLongArray() : void" num="89" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCreateMinSizeOneArray() : void" num="99" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCreateMinMaxOneArray() : void" num="109" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCreateMinSizeTwoArrays() : void" num="119" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertInterval(int,int,int,int,int,int,int,int,int,Interval) : void" num="128" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="141" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHashCode() : void" num="153" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="162" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/FinalRealIntervalTest.java" name="FinalRealIntervalTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="76" coveredmethods="0" methods="3" elements="13" classes="1" ncloc="31" statements="10" conditionals="0" coveredstatements="0"/>
            <class name="FinalRealIntervalTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="13" statements="10" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="52" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHashCode() : void" num="62" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="70" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/IntervalTest.java" name="IntervalTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="142" coveredmethods="0" methods="10" elements="28" classes="1" ncloc="68" statements="18" conditionals="0" coveredstatements="0"/>
            <class name="IntervalTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="10" elements="28" statements="18" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="min(int) : long" num="53" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="max(int) : long" num="59" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="65" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMinWithLongs() : void" num="75" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMinWithPositionable() : void" num="86" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMaxWithLongs() : void" num="97" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMaxWithPositionable() : void" num="108" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRealMin() : void" num="119" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRealMax() : void" num="128" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDimension() : void" num="137" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/LocalizableTest.java" name="LocalizableTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="104" coveredmethods="0" methods="7" elements="18" classes="1" ncloc="49" statements="11" conditionals="0" coveredstatements="0"/>
            <class name="LocalizableTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="18" statements="11" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="getLongPosition(int) : long" num="52" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="58" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetIntPosition() : void" num="65" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetDoublePosition() : void" num="71" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetFloatPosition() : void" num="77" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLocalizeWithLongs() : void" num="86" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLocalizeWithInts() : void" num="97" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/PointTest.java" name="PointTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="58" loc="424" coveredmethods="0" methods="28" elements="244" classes="1" ncloc="355" statements="156" conditionals="60" coveredstatements="0"/>
            <class name="PointTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="58" coveredmethods="0" methods="28" elements="244" statements="156" conditionals="60" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testPointInt() : void" num="51" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPointLongArray() : void" num="58" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPointIntArray() : void" num="67" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPointLocalizable() : void" num="76" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testLocalizeFloatArray() : void" num="86" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testLocalizeDoubleArray() : void" num="99" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testGetFloatPosition() : void" num="112" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testGetDoublePosition() : void" num="123" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNumDimensions() : void" num="134" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="testFwd() : void" num="142" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="152" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="152" type="cond"/>
            <line num="154" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="testBck() : void" num="164" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="168" type="cond"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="172" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="174" type="cond"/>
            <line num="176" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="testMoveIntInt() : void" num="186" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="191" type="cond"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="195" type="cond"/>
            <line num="197" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="197" type="cond"/>
            <line num="199" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="testMoveLongInt() : void" num="209" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="214" type="cond"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="218" type="cond"/>
            <line num="220" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="220" type="cond"/>
            <line num="222" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMoveLocalizable() : void" num="232" count="0" type="method"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="240" type="cond"/>
            <line num="242" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMoveIntArray() : void" num="246" count="0" type="method"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="253" type="cond"/>
            <line num="255" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMoveLongArray() : void" num="259" count="0" type="method"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="266" type="cond"/>
            <line num="268" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSetPositionLocalizable() : void" num="272" count="0" type="method"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="280" type="cond"/>
            <line num="282" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSetPositionIntArray() : void" num="286" count="0" type="method"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="293" type="cond"/>
            <line num="295" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSetPositionLongArray() : void" num="299" count="0" type="method"/>
            <line num="302" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="306" type="cond"/>
            <line num="308" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="testSetPositionIntInt() : void" num="312" count="0" type="method"/>
            <line num="315" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="317" type="cond"/>
            <line num="319" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="321" type="cond"/>
            <line num="323" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="323" type="cond"/>
            <line num="325" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="testSetPositionLongInt() : void" num="335" count="0" type="method"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="340" type="cond"/>
            <line num="342" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="344" type="cond"/>
            <line num="346" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="346" type="cond"/>
            <line num="348" count="0" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testLocalizeIntArray() : void" num="358" count="0" type="method"/>
            <line num="361" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line num="364" count="0" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="365" type="cond"/>
            <line num="367" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testLocalizeLongArray() : void" num="371" count="0" type="method"/>
            <line num="374" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="378" type="cond"/>
            <line num="380" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetIntPosition() : void" num="384" count="0" type="method"/>
            <line num="387" count="0" type="stmt"/>
            <line num="388" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetLongPosition() : void" num="392" count="0" type="method"/>
            <line num="395" count="0" type="stmt"/>
            <line num="396" count="0" type="stmt"/>
            <line num="397" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="400" count="0" type="method"/>
            <line num="403" count="0" type="stmt"/>
            <line num="404" count="0" type="stmt"/>
            <line num="405" count="0" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line num="407" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHashCode() : void" num="410" count="0" type="method"/>
            <line num="413" count="0" type="stmt"/>
            <line num="414" count="0" type="stmt"/>
            <line num="415" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="418" count="0" type="method"/>
            <line num="421" count="0" type="stmt"/>
            <line num="422" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/RandomAccessTest.java" name="RandomAccessTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="64" coveredmethods="0" methods="1" elements="6" classes="1" ncloc="18" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="RandomAccessTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="6" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testSetPositionAndGet() : void" num="53" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/RandomAccessibleTest.java" name="RandomAccessibleTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="63" coveredmethods="0" methods="1" elements="5" classes="1" ncloc="17" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="RandomAccessibleTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="5" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testGetAt() : void" num="53" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/RealIntervalTest.java" name="RealIntervalTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="114" coveredmethods="0" methods="7" elements="22" classes="1" ncloc="52" statements="15" conditionals="0" coveredstatements="0"/>
            <class name="RealIntervalTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="22" statements="15" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="realMin(int) : double" num="52" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMax(int) : double" num="58" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="64" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRealMinWithDoubles() : void" num="74" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRealMaxWithDoubles() : void" num="85" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRealMinWithPositionable() : void" num="96" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRealMaxWithPositionable() : void" num="107" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/RealLocalizableTest.java" name="RealLocalizableTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="92" coveredmethods="0" methods="5" elements="14" classes="1" ncloc="39" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="RealLocalizableTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="14" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="getDoublePosition(int) : double" num="52" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="58" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetFloatPosition() : void" num="65" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLocalizeWithDoubles() : void" num="74" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLocalizeWithFloats() : void" num="85" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/RealPointSampleListTest.java" name="RealPointSampleListTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="146" coveredmethods="0" methods="5" elements="57" classes="1" ncloc="88" statements="36" conditionals="16" coveredstatements="0"/>
            <class name="RealPointSampleListTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="5" elements="57" statements="36" conditionals="16" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="private" signature="positionEquals(RealLocalizable,RealLocalizable) : boolean" num="70" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="init() : void" num="85" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIteration() : void" num="103" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testPosition() : void" num="111" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testCopy() : void" num="124" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="129" type="cond"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="137" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/RealPointTest.java" name="RealPointTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="75" loc="604" coveredmethods="0" methods="34" elements="324" classes="1" ncloc="429" statements="208" conditionals="82" coveredstatements="0"/>
            <class name="RealPointTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="75" coveredmethods="0" methods="34" elements="324" statements="208" conditionals="82" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="testRealPointInt() : void" num="54" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testRealPointDoubleArray() : void" num="68" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testRealPointFloatArray() : void" num="83" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRealPointRealLocalizable() : void" num="95" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testFwd() : void" num="108" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testBck() : void" num="127" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="130" type="cond"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testMoveIntInt() : void" num="146" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testMoveLongInt() : void" num="166" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="170" type="cond"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="176" type="cond"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMoveLocalizable() : void" num="187" count="0" type="method"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="195" type="cond"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMoveIntArray() : void" num="204" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="211" type="cond"/>
            <line num="213" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMoveLongArray() : void" num="220" count="0" type="method"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="227" type="cond"/>
            <line num="229" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSetPositionLocalizable() : void" num="237" count="0" type="method"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="245" type="cond"/>
            <line num="247" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSetPositionIntArray() : void" num="254" count="0" type="method"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="261" type="cond"/>
            <line num="263" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSetPositionLongArray() : void" num="270" count="0" type="method"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="277" type="cond"/>
            <line num="279" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSetPositionIntInt() : void" num="286" count="0" type="method"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="291" type="cond"/>
            <line num="293" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSetPositionLongInt() : void" num="302" count="0" type="method"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="307" type="cond"/>
            <line num="309" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNumDimensions() : void" num="318" count="0" type="method"/>
            <line num="321" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="testMoveFloatInt() : void" num="329" count="0" type="method"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="334" type="cond"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="338" type="cond"/>
            <line num="340" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="341" type="cond"/>
            <line num="342" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="testMoveDoubleInt() : void" num="351" count="0" type="method"/>
            <line num="354" count="0" type="stmt"/>
            <line num="355" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="356" type="cond"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="360" type="cond"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="363" type="cond"/>
            <line num="364" count="0" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMoveRealLocalizable() : void" num="374" count="0" type="method"/>
            <line num="377" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="382" type="cond"/>
            <line num="384" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMoveFloatArray() : void" num="391" count="0" type="method"/>
            <line num="394" count="0" type="stmt"/>
            <line num="395" count="0" type="stmt"/>
            <line num="396" count="0" type="stmt"/>
            <line num="397" count="0" type="stmt"/>
            <line num="398" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="398" type="cond"/>
            <line num="400" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testMoveDoubleArray() : void" num="407" count="0" type="method"/>
            <line num="410" count="0" type="stmt"/>
            <line num="411" count="0" type="stmt"/>
            <line num="412" count="0" type="stmt"/>
            <line num="413" count="0" type="stmt"/>
            <line num="414" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="414" type="cond"/>
            <line num="416" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSetPositionRealLocalizable() : void" num="424" count="0" type="method"/>
            <line num="427" count="0" type="stmt"/>
            <line num="428" count="0" type="stmt"/>
            <line num="429" count="0" type="stmt"/>
            <line num="430" count="0" type="stmt"/>
            <line num="431" count="0" type="stmt"/>
            <line num="432" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="432" type="cond"/>
            <line num="434" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSetPositionFloatArray() : void" num="441" count="0" type="method"/>
            <line num="444" count="0" type="stmt"/>
            <line num="445" count="0" type="stmt"/>
            <line num="446" count="0" type="stmt"/>
            <line num="447" count="0" type="stmt"/>
            <line num="448" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="448" type="cond"/>
            <line num="450" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSetPositionDoubleArray() : void" num="457" count="0" type="method"/>
            <line num="460" count="0" type="stmt"/>
            <line num="461" count="0" type="stmt"/>
            <line num="462" count="0" type="stmt"/>
            <line num="463" count="0" type="stmt"/>
            <line num="464" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="464" type="cond"/>
            <line num="466" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="testSetPositionFloatInt() : void" num="473" count="0" type="method"/>
            <line num="476" count="0" type="stmt"/>
            <line num="477" count="0" type="stmt"/>
            <line num="478" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="478" type="cond"/>
            <line num="480" count="0" type="stmt"/>
            <line num="481" count="0" type="stmt"/>
            <line num="482" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="482" type="cond"/>
            <line num="484" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="484" type="cond"/>
            <line num="485" count="0" type="stmt"/>
            <line num="487" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="testSetPositionDoubleInt() : void" num="495" count="0" type="method"/>
            <line num="498" count="0" type="stmt"/>
            <line num="499" count="0" type="stmt"/>
            <line num="500" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="500" type="cond"/>
            <line num="502" count="0" type="stmt"/>
            <line num="503" count="0" type="stmt"/>
            <line num="504" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="504" type="cond"/>
            <line num="506" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="506" type="cond"/>
            <line num="507" count="0" type="stmt"/>
            <line num="509" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testLocalizeFloatArray() : void" num="517" count="0" type="method"/>
            <line num="520" count="0" type="stmt"/>
            <line num="521" count="0" type="stmt"/>
            <line num="522" count="0" type="stmt"/>
            <line num="523" count="0" type="stmt"/>
            <line num="524" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="524" type="cond"/>
            <line num="526" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testLocalizeDoubleArray() : void" num="533" count="0" type="method"/>
            <line num="536" count="0" type="stmt"/>
            <line num="537" count="0" type="stmt"/>
            <line num="538" count="0" type="stmt"/>
            <line num="539" count="0" type="stmt"/>
            <line num="540" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="540" type="cond"/>
            <line num="542" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testGetFloatPosition() : void" num="549" count="0" type="method"/>
            <line num="552" count="0" type="stmt"/>
            <line num="553" count="0" type="stmt"/>
            <line num="554" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="554" type="cond"/>
            <line num="556" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testGetDoublePosition() : void" num="563" count="0" type="method"/>
            <line num="566" count="0" type="stmt"/>
            <line num="567" count="0" type="stmt"/>
            <line num="568" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="568" type="cond"/>
            <line num="570" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="577" count="0" type="method"/>
            <line num="580" count="0" type="stmt"/>
            <line num="581" count="0" type="stmt"/>
            <line num="582" count="0" type="stmt"/>
            <line num="583" count="0" type="stmt"/>
            <line num="584" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHashCode() : void" num="590" count="0" type="method"/>
            <line num="593" count="0" type="stmt"/>
            <line num="594" count="0" type="stmt"/>
            <line num="595" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="598" count="0" type="method"/>
            <line num="601" count="0" type="stmt"/>
            <line num="602" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/RealRandomAccessTest.java" name="RealRandomAccessTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="67" coveredmethods="0" methods="2" elements="8" classes="1" ncloc="22" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="RealRandomAccessTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="8" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testSetPositionAndGet() : void" num="52" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="sumCoordinates(RealLocalizable,DoubleType) : void" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/RealRandomAccessibleTest.java" name="RealRandomAccessibleTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="66" coveredmethods="0" methods="2" elements="7" classes="1" ncloc="21" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="RealRandomAccessibleTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="7" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testGetAt() : void" num="52" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="sumCoordinates(RealLocalizable,DoubleType) : void" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/TestAbstractRealLocalizable.java" name="TestAbstractRealLocalizable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="12" loc="141" coveredmethods="0" methods="7" elements="43" classes="2" ncloc="71" statements="26" conditionals="10" coveredstatements="0"/>
            <class name="TestAbstractRealLocalizable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="5" elements="39" statements="24" conditionals="10" coveredstatements="0"/>
            </class>
            <class name="TestAbstractRealLocalizable.AbstractRealLocalizableImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractRealLocalizableImpl(int)" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getPosition(int) : double" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testAbstractRealLocalizableSampler() : void" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testLocalizeFloatArray() : void" num="81" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testLocalizeDoubleArray() : void" num="97" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testGetFloatPosition() : void" num="113" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="119" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testGetDoublePosition() : void" num="129" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="137" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.transform.integer.shear">
         <metrics coveredelements="0" complexity="57" loc="649" methods="31" classes="4" statements="117" coveredconditionals="0" coveredmethods="0" elements="188" ncloc="331" files="4" conditionals="40" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/transform/integer/shear/AbstractShearTransform.java" name="AbstractShearTransform.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="158" coveredmethods="0" methods="11" elements="25" classes="1" ncloc="73" statements="14" conditionals="0" coveredstatements="0"/>
            <class name="AbstractShearTransform">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="11" elements="25" statements="14" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="AbstractShearTransform(int,int,int)" num="68" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="AbstractShearTransform(int,int,int,AbstractShearTransform)" num="77" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReferenceDimension() : int" num="90" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numSourceDimensions() : int" num="95" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numTargetDimensions() : int" num="102" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="109" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getShearDimension() : int" num="115" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyInverse(long[],long[]) : void" num="121" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyInverse(int[],int[]) : void" num="129" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyInverse(Positionable,Localizable) : void" num="137" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inverse() : AbstractShearTransform" num="145" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/transform/integer/shear/InverseShearTransform.java" name="InverseShearTransform.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="145" coveredmethods="0" methods="8" elements="32" classes="1" ncloc="68" statements="18" conditionals="6" coveredstatements="0"/>
            <class name="InverseShearTransform">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="8" elements="32" statements="18" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="InverseShearTransform(int,int,int)" num="60" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="InverseShearTransform(int,int,int,AbstractShearTransform)" num="82" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="apply(long[],long[]) : void" num="92" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="apply(int[],int[]) : void" num="101" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="apply(Localizable,Positionable) : void" num="110" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : AbstractShearTransform" num="118" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getShear() : long[]" num="125" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="transform(BoundingBox) : BoundingBox" num="134" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/transform/integer/shear/ShearTransform.java" name="ShearTransform.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="146" coveredmethods="0" methods="8" elements="32" classes="1" ncloc="68" statements="18" conditionals="6" coveredstatements="0"/>
            <class name="ShearTransform">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="8" elements="32" statements="18" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ShearTransform(int,int,int)" num="59" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="ShearTransform(int,int,int,AbstractShearTransform)" num="81" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="apply(long[],long[]) : void" num="91" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="apply(int[],int[]) : void" num="100" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="apply(Localizable,Positionable) : void" num="109" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : ShearTransform" num="118" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getShear() : long[]" num="126" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="transform(BoundingBox) : BoundingBox" num="135" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/transform/integer/shear/ShearTransformTest.java" name="ShearTransformTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="18" loc="200" coveredmethods="0" methods="4" elements="99" classes="1" ncloc="122" statements="67" conditionals="28" coveredstatements="0"/>
            <class name="ShearTransformTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="18" coveredmethods="0" methods="4" elements="99" statements="67" conditionals="28" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="76" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="testIdentity() : void" num="83" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="100" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="testTransform() : void" num="111" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="138" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="141" type="cond"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="testInverseTransform() : void" num="156" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="159" type="cond"/>
            <line num="161" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="161" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="184" type="cond"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="187" type="cond"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.position">
         <metrics coveredelements="0" complexity="41" loc="696" methods="41" classes="11" statements="67" coveredconditionals="0" coveredmethods="0" elements="108" ncloc="332" files="7" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/position/AbstractFunctionEuclideanSpace.java" name="AbstractFunctionEuclideanSpace.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="92" coveredmethods="0" methods="3" elements="8" classes="1" ncloc="31" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="AbstractFunctionEuclideanSpace">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractFunctionEuclideanSpace(int,Supplier&lt; BiConsumer&lt; P, ? super T &gt; &gt;,Supplier&lt; T &gt;)" num="61" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractFunctionEuclideanSpace(int,BiConsumer&lt; P, ? super T &gt;,Supplier&lt; T &gt;)" num="79" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="87" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/position/FunctionRandomAccessible.java" name="FunctionRandomAccessible.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="112" coveredmethods="0" methods="8" elements="17" classes="2" ncloc="60" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="FunctionRandomAccessible">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="FunctionRandomAccessible.FunctionRandomAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="FunctionRandomAccessible(int,BiConsumer&lt; Localizable, ? super T &gt;,Supplier&lt; T &gt;)" num="55" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="FunctionRandomAccessible(int,Supplier&lt; BiConsumer&lt; Localizable, ? super T &gt; &gt;,Supplier&lt; T &gt;)" num="63" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="FunctionRandomAccess()" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="81" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : FunctionRandomAccess" num="88" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRandomAccess() : FunctionRandomAccess" num="94" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess() : FunctionRandomAccess" num="101" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess(Interval) : FunctionRandomAccess" num="107" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/position/FunctionRealRandomAccessible.java" name="FunctionRealRandomAccessible.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="111" coveredmethods="0" methods="8" elements="17" classes="2" ncloc="60" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="FunctionRealRandomAccessible">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="FunctionRealRandomAccessible.RealFunctionRealRandomAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="FunctionRealRandomAccessible(int,BiConsumer&lt; RealLocalizable, ? super T &gt;,Supplier&lt; T &gt;)" num="54" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="FunctionRealRandomAccessible(int,Supplier&lt; BiConsumer&lt; RealLocalizable, ? super T &gt; &gt;,Supplier&lt; T &gt;)" num="62" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RealFunctionRealRandomAccess()" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="80" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : RealFunctionRealRandomAccess" num="87" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRealRandomAccess() : RealFunctionRealRandomAccess" num="93" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realRandomAccess() : RealFunctionRealRandomAccess" num="100" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realRandomAccess(RealInterval) : RealFunctionRealRandomAccess" num="106" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/position/PositionRandomAccessible.java" name="PositionRandomAccessible.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="111" coveredmethods="0" methods="8" elements="18" classes="2" ncloc="55" statements="10" conditionals="0" coveredstatements="0"/>
            <class name="PositionRandomAccessible">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="PositionRandomAccessible.PositionRandomAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="PositionRandomAccessible(int,int)" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="PositionRandomAccess()" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : LongType" num="74" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : PositionRandomAccess" num="81" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRandomAccess() : RandomAccess&lt; LongType &gt;" num="87" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="94" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess() : RandomAccess&lt; LongType &gt;" num="100" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess(Interval) : RandomAccess&lt; LongType &gt;" num="106" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/position/RealPositionRealRandomAccessible.java" name="RealPositionRealRandomAccessible.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="111" coveredmethods="0" methods="8" elements="18" classes="2" ncloc="55" statements="10" conditionals="0" coveredstatements="0"/>
            <class name="RealPositionRealRandomAccessible">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RealPositionRealRandomAccessible.RealPositionRealRandomAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RealPositionRealRandomAccessible(int,int)" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RealPositionRealRandomAccess()" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : DoubleType" num="74" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : RealPositionRealRandomAccess" num="81" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRealRandomAccess() : RealPositionRealRandomAccess" num="87" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="94" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realRandomAccess() : RealPositionRealRandomAccess" num="100" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realRandomAccess(RealInterval) : RealPositionRealRandomAccess" num="106" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/position/FunctionRandomAccessibleTest.java" name="FunctionRandomAccessibleTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="72" coveredmethods="0" methods="1" elements="13" classes="1" ncloc="30" statements="12" conditionals="0" coveredstatements="0"/>
            <class name="FunctionRandomAccessibleTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="13" statements="12" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="46" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/position/FunctionRealRandomAccessibleTest.java" name="FunctionRealRandomAccessibleTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="87" coveredmethods="0" methods="5" elements="17" classes="1" ncloc="41" statements="12" conditionals="0" coveredstatements="0"/>
            <class name="FunctionRealRandomAccessibleTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="17" statements="12" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUpBeforeClass() : void" num="50" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="tearDownAfterClass() : void" num="53" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="setUp() : void" num="56" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="59" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="test() : void" num="62" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.img.basictypeaccess.array">
         <metrics coveredelements="0" complexity="120" loc="1817" methods="120" classes="25" statements="128" coveredconditionals="0" coveredmethods="0" elements="248" ncloc="690" files="25" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/array/AbstractBooleanArray.java" name="AbstractBooleanArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="79" coveredmethods="0" methods="6" elements="12" classes="1" ncloc="33" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="AbstractBooleanArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="12" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractBooleanArray(int)" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractBooleanArray(boolean[])" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(int) : boolean" num="57" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(int,boolean) : void" num="63" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrentStorageArray() : boolean[]" num="69" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getArrayLength() : int" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/array/AbstractByteArray.java" name="AbstractByteArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="80" coveredmethods="0" methods="6" elements="12" classes="1" ncloc="33" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="AbstractByteArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="12" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractByteArray(int)" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractByteArray(byte[])" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(int) : byte" num="58" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(int,byte) : void" num="64" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrentStorageArray() : byte[]" num="70" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getArrayLength() : int" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/array/AbstractCharArray.java" name="AbstractCharArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="80" coveredmethods="0" methods="6" elements="12" classes="1" ncloc="33" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="AbstractCharArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="12" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractCharArray(int)" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractCharArray(char[])" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(int) : char" num="58" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(int,char) : void" num="64" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrentStorageArray() : char[]" num="70" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getArrayLength() : int" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/array/AbstractDoubleArray.java" name="AbstractDoubleArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="80" coveredmethods="0" methods="6" elements="12" classes="1" ncloc="33" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="AbstractDoubleArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="12" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractDoubleArray(int)" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractDoubleArray(double[])" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(int) : double" num="58" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(int,double) : void" num="64" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrentStorageArray() : double[]" num="70" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getArrayLength() : int" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/array/AbstractFloatArray.java" name="AbstractFloatArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="80" coveredmethods="0" methods="6" elements="12" classes="1" ncloc="33" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="AbstractFloatArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="12" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractFloatArray(int)" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractFloatArray(float[])" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(int) : float" num="58" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(int,float) : void" num="64" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrentStorageArray() : float[]" num="70" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getArrayLength() : int" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/array/AbstractIntArray.java" name="AbstractIntArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="80" coveredmethods="0" methods="6" elements="12" classes="1" ncloc="33" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="AbstractIntArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="12" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractIntArray(int)" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractIntArray(int[])" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(int) : int" num="58" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(int,int) : void" num="64" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrentStorageArray() : int[]" num="70" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getArrayLength() : int" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/array/AbstractLongArray.java" name="AbstractLongArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="80" coveredmethods="0" methods="6" elements="12" classes="1" ncloc="33" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="AbstractLongArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="12" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractLongArray(int)" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractLongArray(long[])" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(int) : long" num="58" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(int,long) : void" num="64" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrentStorageArray() : long[]" num="70" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getArrayLength() : int" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/array/AbstractShortArray.java" name="AbstractShortArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="80" coveredmethods="0" methods="6" elements="12" classes="1" ncloc="33" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="AbstractShortArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="12" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractShortArray(int)" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractShortArray(short[])" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(int) : short" num="58" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(int,short) : void" num="64" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrentStorageArray() : short[]" num="70" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getArrayLength() : int" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/array/ArrayDataAccess.java" name="ArrayDataAccess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="53" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ArrayDataAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/array/BooleanArray.java" name="BooleanArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="58" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="17" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="BooleanArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="BooleanArray(int)" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BooleanArray(boolean[])" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createArray(int) : BooleanArray" num="53" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/array/ByteArray.java" name="ByteArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="59" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="17" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="ByteArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ByteArray(int)" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ByteArray(byte[])" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createArray(int) : ByteArray" num="54" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/array/CharArray.java" name="CharArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="59" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="17" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="CharArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CharArray(int)" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CharArray(char[])" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createArray(int) : CharArray" num="54" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/array/DirtyBooleanArray.java" name="DirtyBooleanArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="81" coveredmethods="0" methods="6" elements="13" classes="1" ncloc="35" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="DirtyBooleanArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DirtyBooleanArray(int)" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DirtyBooleanArray(boolean[])" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(int,boolean) : void" num="57" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createArray(int) : DirtyBooleanArray" num="64" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDirty() : boolean" num="70" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDirty() : void" num="76" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/array/DirtyByteArray.java" name="DirtyByteArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="81" coveredmethods="0" methods="6" elements="13" classes="1" ncloc="35" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="DirtyByteArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DirtyByteArray(int)" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DirtyByteArray(byte[])" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(int,byte) : void" num="57" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createArray(int) : DirtyByteArray" num="64" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDirty() : boolean" num="70" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDirty() : void" num="76" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/array/DirtyCharArray.java" name="DirtyCharArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="81" coveredmethods="0" methods="6" elements="13" classes="1" ncloc="35" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="DirtyCharArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DirtyCharArray(int)" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DirtyCharArray(char[])" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(int,char) : void" num="57" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createArray(int) : DirtyCharArray" num="64" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDirty() : boolean" num="70" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDirty() : void" num="76" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/array/DirtyDoubleArray.java" name="DirtyDoubleArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="81" coveredmethods="0" methods="6" elements="13" classes="1" ncloc="35" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="DirtyDoubleArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DirtyDoubleArray(int)" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DirtyDoubleArray(double[])" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(int,double) : void" num="57" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createArray(int) : DirtyDoubleArray" num="64" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDirty() : boolean" num="70" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDirty() : void" num="76" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/array/DirtyFloatArray.java" name="DirtyFloatArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="81" coveredmethods="0" methods="6" elements="13" classes="1" ncloc="35" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="DirtyFloatArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DirtyFloatArray(int)" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DirtyFloatArray(float[])" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(int,float) : void" num="57" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createArray(int) : DirtyFloatArray" num="64" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDirty() : boolean" num="70" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDirty() : void" num="76" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/array/DirtyIntArray.java" name="DirtyIntArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="81" coveredmethods="0" methods="6" elements="13" classes="1" ncloc="35" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="DirtyIntArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DirtyIntArray(int)" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DirtyIntArray(int[])" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(int,int) : void" num="57" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createArray(int) : DirtyIntArray" num="64" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDirty() : boolean" num="70" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDirty() : void" num="76" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/array/DirtyLongArray.java" name="DirtyLongArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="81" coveredmethods="0" methods="6" elements="13" classes="1" ncloc="35" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="DirtyLongArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DirtyLongArray(int)" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DirtyLongArray(long[])" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(int,long) : void" num="57" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createArray(int) : DirtyLongArray" num="64" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDirty() : boolean" num="70" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDirty() : void" num="76" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/array/DirtyShortArray.java" name="DirtyShortArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="81" coveredmethods="0" methods="6" elements="13" classes="1" ncloc="35" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="DirtyShortArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DirtyShortArray(int)" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DirtyShortArray(short[])" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(int,short) : void" num="57" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createArray(int) : DirtyShortArray" num="64" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDirty() : boolean" num="70" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setDirty() : void" num="76" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/array/DoubleArray.java" name="DoubleArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="60" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="17" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="DoubleArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DoubleArray(int)" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DoubleArray(double[])" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createArray(int) : DoubleArray" num="55" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/array/FloatArray.java" name="FloatArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="60" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="17" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="FloatArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="FloatArray(int)" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="FloatArray(float[])" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createArray(int) : FloatArray" num="55" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/array/IntArray.java" name="IntArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="61" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="18" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="IntArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="IntArray(int)" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="IntArray(int[])" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createArray(int) : IntArray" num="56" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/array/LongArray.java" name="LongArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="59" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="17" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="LongArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LongArray(int)" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LongArray(long[])" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createArray(int) : LongArray" num="54" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/array/ShortArray.java" name="ShortArray.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="61" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="18" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="ShortArray">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ShortArray(int)" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ShortArray(short[])" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createArray(int) : ShortArray" num="56" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.transform.integer.permutation">
         <metrics coveredelements="0" complexity="99" loc="999" methods="49" classes="7" statements="211" coveredconditionals="0" coveredmethods="0" elements="340" ncloc="539" files="6" conditionals="80" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/transform/integer/permutation/AbstractPermutationTransform.java" name="AbstractPermutationTransform.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="18" loc="134" coveredmethods="0" methods="8" elements="56" classes="1" ncloc="68" statements="30" conditionals="18" coveredstatements="0"/>
            <class name="AbstractPermutationTransform">
               <metrics coveredelements="0" coveredconditionals="0" complexity="18" coveredmethods="0" methods="8" elements="56" statements="30" conditionals="18" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="AbstractPermutationTransform(int[])" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(int) : int" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="applyChecked(int) : long" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyInverse(int) : int" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="applyInverseChecked(int) : long" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="98" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLutCopy() : int[]" num="104" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInverseLutCopy() : int[]" num="109" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="checkBijectivity(int[]) : boolean" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="119" type="cond"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="121" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/transform/integer/permutation/PermutationTransform.java" name="PermutationTransform.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="32" loc="163" coveredmethods="0" methods="11" elements="61" classes="1" ncloc="81" statements="22" conditionals="28" coveredstatements="0"/>
            <class name="PermutationTransform">
               <metrics coveredelements="0" coveredconditionals="0" complexity="32" coveredmethods="0" methods="11" elements="61" statements="22" conditionals="28" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="PermutationTransform(int[],int,int)" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numSourceDimensions() : int" num="72" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numTargetDimensions() : int" num="78" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="apply(long[],long[]) : void" num="84" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="apply(int[],int[]) : void" num="93" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="96" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="98" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="apply(Localizable,Positionable) : void" num="102" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="applyInverse(long[],long[]) : void" num="111" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="116" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="applyInverse(int[],int[]) : void" num="120" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="applyInverse(Positionable,Localizable) : void" num="129" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="132" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="134" type="cond"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inverse() : PermutationTransform" num="138" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="checkInterval(Interval,int[]) : boolean" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="157" type="cond"/>
            <line num="158" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/transform/integer/permutation/SingleDimensionPermutationTransform.java" name="SingleDimensionPermutationTransform.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="140" coveredmethods="0" methods="10" elements="31" classes="1" ncloc="72" statements="19" conditionals="2" coveredstatements="0"/>
            <class name="SingleDimensionPermutationTransform">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="10" elements="31" statements="19" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="SingleDimensionPermutationTransform(int[],int,int,int)" num="67" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyInverse(long[],long[]) : void" num="80" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyInverse(int[],int[]) : void" num="87" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyInverse(Positionable,Localizable) : void" num="94" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inverse() : SingleDimensionPermutationTransform" num="101" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numSourceDimensions() : int" num="107" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numTargetDimensions() : int" num="113" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(long[],long[]) : void" num="119" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(int[],int[]) : void" num="126" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Localizable,Positionable) : void" num="133" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/transform/integer/permutation/AbstractPermutationTransformTest.java" name="AbstractPermutationTransformTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="19" loc="206" coveredmethods="0" methods="16" elements="56" classes="2" ncloc="118" statements="34" conditionals="6" coveredstatements="0"/>
            <class name="AbstractPermutationTransformTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="2" elements="34" statements="26" conditionals="6" coveredstatements="0"/>
            </class>
            <class name="AbstractPermutationTransformTest.MockPermutation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="14" elements="22" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="apply(int) : int" num="63" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyChecked(int) : long" num="69" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyInverse(int) : int" num="75" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyInverseChecked(int) : long" num="81" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MockPermutation(int[])" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applyInverse(long[],long[]) : void" num="93" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="applyInverse(int[],int[]) : void" num="99" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="applyInverse(Positionable,Localizable) : void" num="105" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="inverse() : MockPermutation" num="111" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numSourceDimensions() : int" num="117" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numTargetDimensions() : int" num="123" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(long[],long[]) : void" num="129" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="apply(int[],int[]) : void" num="135" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="apply(Localizable,Positionable) : void" num="141" count="0" type="method"/>
            <line complexity="3" visibility="public" signature="setUp() : void" num="158" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="164" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="168" type="cond"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="test() : void" num="176" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="183" type="cond"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/transform/integer/permutation/PermutationTransformTest.java" name="PermutationTransformTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="151" coveredmethods="0" methods="2" elements="54" classes="1" ncloc="80" statements="40" conditionals="12" coveredstatements="0"/>
            <class name="PermutationTransformTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="2" elements="54" statements="40" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="setUpBeforeClass() : void" num="77" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="test() : void" num="96" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="127" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/transform/integer/permutation/SingleDimensionPermutationTransformTest.java" name="SingleDimensionPermutationTransformTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="205" coveredmethods="0" methods="2" elements="82" classes="1" ncloc="120" statements="66" conditionals="14" coveredstatements="0"/>
            <class name="SingleDimensionPermutationTransformTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="2" elements="82" statements="66" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="setUp() : void" num="90" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="test() : void" num="109" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="152" type="cond"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="185" type="cond"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.display.projector.specialized">
         <metrics coveredelements="0" complexity="32" loc="696" methods="12" classes="5" statements="104" coveredconditionals="0" coveredmethods="0" elements="156" ncloc="267" files="5" conditionals="40" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/display/projector/specialized/ArrayImgXYByteProjector.java" name="ArrayImgXYByteProjector.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="157" coveredmethods="0" methods="2" elements="32" classes="1" ncloc="54" statements="22" conditionals="8" coveredstatements="0"/>
            <class name="ArrayImgXYByteProjector">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="2" elements="32" statements="22" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ArrayImgXYByteProjector(ArrayImg&lt; A, ByteArray &gt;,ArrayImg&lt; UnsignedByteType, ByteArray &gt;,double,double)" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="map() : void" num="106" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="121" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="144" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="152" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/display/projector/specialized/ArrayImgXYShortProjector.java" name="ArrayImgXYShortProjector.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="145" coveredmethods="0" methods="2" elements="32" classes="1" ncloc="54" statements="22" conditionals="8" coveredstatements="0"/>
            <class name="ArrayImgXYShortProjector">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="2" elements="32" statements="22" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ArrayImgXYShortProjector(ArrayImg&lt; A, ShortArray &gt;,ArrayImg&lt; UnsignedShortType, ShortArray &gt;,double,double)" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="map() : void" num="105" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="134" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="140" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/display/projector/specialized/PlanarImgContainerSamplerImpl.java" name="PlanarImgContainerSamplerImpl.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="71" coveredmethods="0" methods="4" elements="8" classes="1" ncloc="23" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="PlanarImgContainerSamplerImpl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="PlanarImgContainerSamplerImpl(int)" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrentSliceIndex() : int" num="55" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fwd() : int" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setCurrentSlice(int) : void" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/display/projector/specialized/PlanarImgXYByteProjector.java" name="PlanarImgXYByteProjector.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="161" coveredmethods="0" methods="2" elements="42" classes="1" ncloc="68" statements="28" conditionals="12" coveredstatements="0"/>
            <class name="PlanarImgXYByteProjector">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="2" elements="42" statements="28" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="PlanarImgXYByteProjector(PlanarImg&lt; A, ByteArray &gt;,ArrayImg&lt; UnsignedByteType, ByteArray &gt;,double,double)" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="map() : void" num="106" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="140" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="142" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="152" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="152" type="cond"/>
            <line num="156" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/display/projector/specialized/PlanarImgXYShortProjector.java" name="PlanarImgXYShortProjector.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="162" coveredmethods="0" methods="2" elements="42" classes="1" ncloc="68" statements="28" conditionals="12" coveredstatements="0"/>
            <class name="PlanarImgXYShortProjector">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="2" elements="42" statements="28" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="PlanarImgXYShortProjector(PlanarImg&lt; A, ShortArray &gt;,ArrayImg&lt; UnsignedShortType, ShortArray &gt;,double,double)" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="map() : void" num="106" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="140" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="142" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="151" type="cond"/>
            <line num="153" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="153" type="cond"/>
            <line num="157" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.display.projector">
         <metrics coveredelements="0" complexity="16" loc="448" methods="5" classes="4" statements="78" coveredconditionals="0" coveredmethods="0" elements="103" ncloc="166" files="4" conditionals="20" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/display/projector/AbstractProjector2D.java" name="AbstractProjector2D.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="77" coveredmethods="0" methods="1" elements="4" classes="1" ncloc="15" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="AbstractProjector2D">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="4" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractProjector2D(int)" num="67" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/display/projector/IterableIntervalProjector2D.java" name="IterableIntervalProjector2D.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="177" coveredmethods="0" methods="2" elements="60" classes="1" ncloc="85" statements="44" conditionals="14" coveredstatements="0"/>
            <class name="IterableIntervalProjector2D">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="2" elements="60" statements="44" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="IterableIntervalProjector2D(int,int,RandomAccessible&lt; A &gt;,IterableInterval&lt; B &gt;,Converter&lt; ? super A, B &gt;)" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="map() : void" num="105" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="131" type="cond"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="147" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="149" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="167" type="cond"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/display/projector/Projector.java" name="Projector.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="45" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Projector">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/display/projector/RandomAccessibleProjector2D.java" name="RandomAccessibleProjector2D.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="149" coveredmethods="0" methods="2" elements="39" classes="1" ncloc="61" statements="31" conditionals="6" coveredstatements="0"/>
            <class name="RandomAccessibleProjector2D">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="2" elements="39" statements="31" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RandomAccessibleProjector2D(int,int,RandomAccessible&lt; A &gt;,RandomAccessibleInterval&lt; B &gt;,Converter&lt; ? super A, B &gt;)" num="97" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="map() : void" num="112" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="137" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.type.operators">
         <metrics coveredelements="0" complexity="0" loc="349" methods="0" classes="8" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="41" files="8" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/operators/Add.java" name="Add.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="44" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Add">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/operators/Div.java" name="Div.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="44" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Div">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/operators/Mul.java" name="Mul.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="44" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Mul">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/operators/MulFloatingPoint.java" name="MulFloatingPoint.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="43" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="MulFloatingPoint">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/operators/SetOne.java" name="SetOne.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="42" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SetOne">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/operators/SetZero.java" name="SetZero.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="42" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SetZero">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/operators/Sub.java" name="Sub.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="44" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Sub">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/operators/ValueEquals.java" name="ValueEquals.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="46" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ValueEquals">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.imglib2.util">
         <metrics coveredelements="0" complexity="1197" loc="11147" methods="501" classes="43" statements="3284" coveredconditionals="0" coveredmethods="0" elements="5071" ncloc="6341" files="34" conditionals="1286" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/util/BenchmarkHelper.java" name="BenchmarkHelper.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="123" coveredmethods="0" methods="3" elements="39" classes="1" ncloc="47" statements="26" conditionals="10" coveredstatements="0"/>
            <class name="BenchmarkHelper">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="3" elements="39" statements="26" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="benchmark(int,Runnable) : ArrayList&lt; Long &gt;" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="benchmarkAndPrint(int,boolean,Runnable) : void" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="median(ArrayList&lt; Long &gt;) : long" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="116" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/util/Binning.java" name="Binning.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="134" coveredmethods="0" methods="4" elements="34" classes="1" ncloc="52" statements="22" conditionals="8" coveredstatements="0"/>
            <class name="Binning">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="4" elements="34" statements="22" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="valueToBin(int,double,double,double) : int" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="exclusiveValueToBin(int,double,double,double) : int" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="edgeValuesPerBin(int,double,double) : double[]" num="104" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="centerValuesPerBin(int,double,double) : double[]" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/util/Cast.java" name="Cast.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="40" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="13" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="Cast">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="Cast()" num="11" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="unchecked(Object) : T" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/util/ConstantUtils.java" name="ConstantUtils.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="18" loc="160" coveredmethods="0" methods="18" elements="36" classes="3" ncloc="109" statements="18" conditionals="0" coveredstatements="0"/>
            <class name="ConstantUtils">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="10" elements="20" statements="10" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ConstantUtils.ConstantRandomAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ConstantUtils.ConstantRealRandomAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="constantRandomAccessible(T,int) : RandomAccessible&lt; T &gt;" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="54" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ConstantRandomAccess()" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="67" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : ConstantRandomAccess" num="73" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRandomAccess() : ConstantRandomAccess" num="79" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess() : RandomAccess&lt; T &gt;" num="86" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess(Interval) : RandomAccess&lt; T &gt;" num="92" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="constantRandomAccessibleInterval(T,Interval) : RandomAccessibleInterval&lt; T &gt;" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="constantRandomAccessibleInterval(T,int,Interval) : RandomAccessibleInterval&lt; T &gt;" num="105" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="constantRealRandomAccessible(T,int) : RealRandomAccessible&lt; T &gt;" num="111" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="115" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ConstantRealRandomAccess()" num="123" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="128" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : ConstantRealRandomAccess" num="134" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRealRandomAccess() : ConstantRealRandomAccess" num="140" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realRandomAccess() : ConstantRealRandomAccess" num="147" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realRandomAccess(RealInterval) : ConstantRealRandomAccess" num="153" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/util/FlatCollections.java" name="FlatCollections.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="26" loc="409" coveredmethods="0" methods="24" elements="62" classes="3" ncloc="150" statements="34" conditionals="4" coveredstatements="0"/>
            <class name="FlatCollections">
               <metrics coveredelements="0" coveredconditionals="0" complexity="17" coveredmethods="0" methods="15" elements="38" statements="19" conditionals="4" coveredstatements="0"/>
            </class>
            <class name="FlatCollections.ListFromRAI">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="12" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="FlatCollections.CollectionFromII">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="12" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="collection(IterableInterval&lt; T &gt;,Function&lt; T, E &gt;) : Collection&lt; E &gt;" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="booleanCollection(IterableInterval&lt; ? extends BooleanType&lt; ? &gt; &gt;) : Collection&lt; Boolean &gt;" num="105" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleCollection(IterableInterval&lt; ? extends RealType&lt; ? &gt; &gt;) : Collection&lt; Double &gt;" num="122" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="floatCollection(IterableInterval&lt; ? extends RealType&lt; ? &gt; &gt;) : Collection&lt; Float &gt;" num="139" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="integerCollection(IterableInterval&lt; ? extends IntegerType&lt; ? &gt; &gt;) : Collection&lt; Integer &gt;" num="156" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="longCollection(IterableInterval&lt; ? extends IntegerType&lt; ? &gt; &gt;) : Collection&lt; Long &gt;" num="173" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bigIntegerCollection(IterableInterval&lt; ? extends IntegerType&lt; ? &gt; &gt;) : Collection&lt; BigInteger &gt;" num="190" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="list(RandomAccessibleInterval&lt; T &gt;,Function&lt; T, E &gt;) : List&lt; E &gt;" num="218" count="0" type="method"/>
            <line num="220" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="booleanList(RandomAccessibleInterval&lt; ? extends BooleanType&lt; ? &gt; &gt;) : List&lt; Boolean &gt;" num="233" count="0" type="method"/>
            <line num="235" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="doubleList(RandomAccessibleInterval&lt; ? extends RealType&lt; ? &gt; &gt;) : List&lt; Double &gt;" num="248" count="0" type="method"/>
            <line num="250" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="floatList(RandomAccessibleInterval&lt; ? extends RealType&lt; ? &gt; &gt;) : List&lt; Float &gt;" num="263" count="0" type="method"/>
            <line num="265" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="integerList(RandomAccessibleInterval&lt; ? extends IntegerType&lt; ? &gt; &gt;) : List&lt; Integer &gt;" num="278" count="0" type="method"/>
            <line num="280" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="longList(RandomAccessibleInterval&lt; ? extends IntegerType&lt; ? &gt; &gt;) : List&lt; Long &gt;" num="293" count="0" type="method"/>
            <line num="295" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bigIntegerList(RandomAccessibleInterval&lt; ? extends IntegerType&lt; ? &gt; &gt;) : List&lt; BigInteger &gt;" num="308" count="0" type="method"/>
            <line num="310" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="initialValue() : RandomAccess&lt; T &gt;" num="326" count="0" type="method"/>
            <line num="329" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ListFromRAI(RandomAccessibleInterval&lt; T &gt;,Function&lt; T, E &gt;)" num="333" count="0" type="method"/>
            <line num="335" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : E" num="340" count="0" type="method"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="348" count="0" type="method"/>
            <line num="351" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="CollectionFromII(IterableInterval&lt; T &gt;,Function&lt; T, E &gt;)" num="365" count="0" type="method"/>
            <line num="367" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="372" count="0" type="method"/>
            <line num="375" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt; E &gt;" num="378" count="0" type="method"/>
            <line num="381" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="386" count="0" type="method"/>
            <line num="389" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : E" num="392" count="0" type="method"/>
            <line num="395" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="sizeAsInt(long) : int" num="401" count="0" type="method"/>
            <line num="403" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="403" type="cond"/>
            <line num="404" count="0" type="stmt"/>
            <line num="405" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="405" type="cond"/>
            <line num="406" count="0" type="stmt"/>
            <line num="407" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/util/Fraction.java" name="Fraction.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="122" coveredmethods="0" methods="10" elements="30" classes="1" ncloc="43" statements="18" conditionals="2" coveredstatements="0"/>
            <class name="Fraction">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="10" elements="30" statements="18" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Fraction(long,long)" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Fraction()" num="61" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNumerator() : long" num="66" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDenominator() : long" num="71" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRatio() : double" num="76" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invert() : void" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(Fraction) : void" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(Fraction) : void" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="mulCeil(long) : long" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="clone() : Fraction" num="117" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/util/ImgUtil.java" name="ImgUtil.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="45" loc="324" coveredmethods="0" methods="12" elements="156" classes="1" ncloc="194" statements="100" conditionals="44" coveredstatements="0"/>
            <class name="ImgUtil">
               <metrics coveredelements="0" coveredconditionals="0" complexity="45" coveredmethods="0" methods="12" elements="156" statements="100" conditionals="44" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="copy(double[],int,int[],Img&lt; T &gt;) : void" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="copy(float[],int,int[],Img&lt; T &gt;) : void" num="104" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="copy(long[],int,int[],Img&lt; T &gt;) : void" num="124" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="copy(int[],int,int[],Img&lt; T &gt;) : void" num="144" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="148" type="cond"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="153" type="cond"/>
            <line num="155" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="copy(boolean[],int,int[],Img&lt; T &gt;) : void" num="164" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="168" type="cond"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="175" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="copy(Img&lt; T &gt;,double[],int,int[]) : void" num="198" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="202" type="cond"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="207" type="cond"/>
            <line num="209" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="copy(Img&lt; T &gt;,float[],int,int[]) : void" num="218" count="0" type="method"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="222" type="cond"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="227" type="cond"/>
            <line num="229" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="copy(Img&lt; T &gt;,long[],int,int[]) : void" num="238" count="0" type="method"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="242" type="cond"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="247" type="cond"/>
            <line num="249" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="copy(Img&lt; T &gt;,int[],int,int[]) : void" num="258" count="0" type="method"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="262" type="cond"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="267" type="cond"/>
            <line num="269" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="copy(Img&lt; T &gt;,short[],int,int[]) : void" num="278" count="0" type="method"/>
            <line num="280" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="282" type="cond"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="287" type="cond"/>
            <line num="289" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="copy(Img&lt; T &gt;,boolean[],int,int[]) : void" num="298" count="0" type="method"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="302" type="cond"/>
            <line num="304" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="307" type="cond"/>
            <line num="309" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy(RandomAccessibleInterval&lt; T &gt;,RandomAccessibleInterval&lt; T &gt;) : void" num="318" count="0" type="method"/>
            <line num="320" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/util/IntervalIndexer.java" name="IntervalIndexer.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="62" loc="392" coveredmethods="0" methods="34" elements="247" classes="1" ncloc="299" statements="157" conditionals="56" coveredstatements="0"/>
            <class name="IntervalIndexer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="62" coveredmethods="0" methods="34" elements="247" statements="157" conditionals="56" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="positionToIndex(int[],int[]) : int" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="positionToIndex(long[],int[]) : int" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="positionToIndex(long[],long[]) : long" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="positionToIndex(Localizable,Dimensions) : long" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="positionWithOffsetToIndex(long[],long[],long[]) : long" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="positionWithOffsetToIndex(long[],int[],long[]) : int" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="positionWithOffsetToIndex(int[],int[],int[]) : int" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="indexToPosition(int,int[],int[]) : void" num="116" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="119" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="indexToPosition(long,long[],int[]) : void" num="128" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="131" type="cond"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="indexToPosition(int,int[],long[]) : void" num="140" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="143" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="indexToPosition(long,long[],long[]) : void" num="152" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="indexToPosition(long,Dimensions,Positionable) : void" num="164" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="167" type="cond"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="indexToPosition(int,int[],float[]) : void" num="176" count="0" type="method"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="179" type="cond"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="indexToPosition(long,long[],float[]) : void" num="188" count="0" type="method"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="191" type="cond"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="indexToPosition(int,int[],double[]) : void" num="200" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="203" type="cond"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="indexToPosition(long,long[],double[]) : void" num="212" count="0" type="method"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="215" type="cond"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="indexToPositionWithOffset(int,int[],int[],int[]) : void" num="224" count="0" type="method"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="227" type="cond"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="indexToPositionWithOffset(int,int[],long[],long[]) : void" num="236" count="0" type="method"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="239" type="cond"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="indexToPositionWithOffset(long,long[],long[],long[]) : void" num="248" count="0" type="method"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="251" type="cond"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="indexToPositionWithOffset(long,long[],long[],int[]) : void" num="260" count="0" type="method"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="263" type="cond"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="indexToPositionWithOffset(long,long[],long[],float[]) : void" num="272" count="0" type="method"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="275" type="cond"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="indexToPositionWithOffset(long,long[],long[],double[]) : void" num="284" count="0" type="method"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="287" type="cond"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="indexToPosition(int,int[],int) : int" num="296" count="0" type="method"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="299" type="cond"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="indexToPosition(long,long[],int) : long" num="304" count="0" type="method"/>
            <line num="306" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="307" type="cond"/>
            <line num="308" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="indexToPositionWithOffset(int,int[],int[],int) : int" num="312" count="0" type="method"/>
            <line num="314" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="indexToPosition(int,int[],int[],int) : int" num="317" count="0" type="method"/>
            <line num="319" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="indexToPosition(long,long[],long[],int) : long" num="322" count="0" type="method"/>
            <line num="324" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="indexToPositionWithOffset(int,int[],int[],int[],int) : int" num="327" count="0" type="method"/>
            <line num="329" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="indexToPositionWithOffset(int,int[],int[],long[],int) : long" num="332" count="0" type="method"/>
            <line num="334" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="indexToPositionWithOffset(long,long[],long[],long[],int) : long" num="337" count="0" type="method"/>
            <line num="339" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="positionToIndexForInterval(Localizable,Interval) : long" num="342" count="0" type="method"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="346" type="cond"/>
            <line num="347" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="indexToPositionForInterval(long,Interval,Positionable) : void" num="351" count="0" type="method"/>
            <line num="353" count="0" type="stmt"/>
            <line num="354" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="354" type="cond"/>
            <line num="356" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createAllocationSteps(long[],long[]) : void" num="371" count="0" type="method"/>
            <line num="373" count="0" type="stmt"/>
            <line num="374" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="374" type="cond"/>
            <line num="375" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createAllocationSteps(int[],int[]) : void" num="385" count="0" type="method"/>
            <line num="387" count="0" type="stmt"/>
            <line num="388" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="388" type="cond"/>
            <line num="389" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/util/Intervals.java" name="Intervals.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="124" loc="1126" coveredmethods="0" methods="51" elements="495" classes="1" ncloc="545" statements="312" conditionals="132" coveredstatements="0"/>
            <class name="Intervals">
               <metrics coveredelements="0" coveredconditionals="0" complexity="124" coveredmethods="0" methods="51" elements="495" statements="312" conditionals="132" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="createMinSize(long) : FinalInterval" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createMinMax(long) : FinalInterval" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createMinSizeReal(double) : FinalRealInterval" num="110" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createMinMaxReal(double) : FinalRealInterval" num="128" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="expand(Interval,long) : FinalInterval" num="145" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="152" type="cond"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="expand(Interval,long) : FinalInterval" num="172" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="expand(Interval,Dimensions) : FinalInterval" num="189" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="196" type="cond"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="expand(Interval,long,int) : FinalInterval" num="218" count="0" type="method"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="translate(Interval,long,int) : FinalInterval" num="244" count="0" type="method"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="translate(Interval,long) : FinalInterval" num="268" count="0" type="method"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="275" type="cond"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="translateInverse(Interval,long) : FinalInterval" num="295" count="0" type="method"/>
            <line num="297" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="302" type="cond"/>
            <line num="304" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="addDimension(Interval,long,long) : FinalInterval" num="324" count="0" type="method"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="329" type="cond"/>
            <line num="331" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invertAxis(Interval,int) : FinalInterval" num="347" count="0" type="method"/>
            <line num="349" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line num="354" count="0" type="stmt"/>
            <line num="355" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="hyperSlice(Interval,int) : FinalInterval" num="364" count="0" type="method"/>
            <line num="366" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="370" type="cond"/>
            <line num="372" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="372" type="cond"/>
            <line num="374" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="377" type="cond"/>
            <line num="379" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="moveAxis(Interval,int,int) : FinalInterval" num="393" count="0" type="method"/>
            <line num="395" count="0" type="stmt"/>
            <line num="396" count="0" type="stmt"/>
            <line num="397" count="0" type="stmt"/>
            <line num="398" count="0" type="stmt"/>
            <line num="400" count="0" type="stmt"/>
            <line num="401" count="0" type="stmt"/>
            <line num="402" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="402" type="cond"/>
            <line num="404" count="0" type="stmt"/>
            <line num="405" count="0" type="stmt"/>
            <line num="407" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="permuteAxes(Interval,int,int) : FinalInterval" num="417" count="0" type="method"/>
            <line num="419" count="0" type="stmt"/>
            <line num="420" count="0" type="stmt"/>
            <line num="421" count="0" type="stmt"/>
            <line num="422" count="0" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line num="424" count="0" type="stmt"/>
            <line num="425" count="0" type="stmt"/>
            <line num="426" count="0" type="stmt"/>
            <line num="427" count="0" type="stmt"/>
            <line num="428" count="0" type="stmt"/>
            <line num="429" count="0" type="stmt"/>
            <line num="430" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="rotate(Interval,int,int) : FinalInterval" num="445" count="0" type="method"/>
            <line num="447" count="0" type="stmt"/>
            <line num="448" count="0" type="stmt"/>
            <line num="449" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="452" type="cond"/>
            <line num="454" count="0" type="stmt"/>
            <line num="455" count="0" type="stmt"/>
            <line num="456" count="0" type="stmt"/>
            <line num="457" count="0" type="stmt"/>
            <line num="458" count="0" type="stmt"/>
            <line num="459" count="0" type="stmt"/>
            <line num="461" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="zeroMin(Interval) : FinalInterval" num="468" count="0" type="method"/>
            <line num="470" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="scale(RealInterval,double) : RealInterval" num="476" count="0" type="method"/>
            <line num="478" count="0" type="stmt"/>
            <line num="479" count="0" type="stmt"/>
            <line num="480" count="0" type="stmt"/>
            <line num="481" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="481" type="cond"/>
            <line num="483" count="0" type="stmt"/>
            <line num="484" count="0" type="stmt"/>
            <line num="486" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="intersect(Interval,Interval) : FinalInterval" num="501" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="503" type="cond"/>
            <line num="505" count="0" type="stmt"/>
            <line num="506" count="0" type="stmt"/>
            <line num="507" count="0" type="stmt"/>
            <line num="508" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="508" type="cond"/>
            <line num="510" count="0" type="stmt"/>
            <line num="511" count="0" type="stmt"/>
            <line num="513" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="intersect(RealInterval,RealInterval) : FinalRealInterval" num="528" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="530" type="cond"/>
            <line num="532" count="0" type="stmt"/>
            <line num="533" count="0" type="stmt"/>
            <line num="534" count="0" type="stmt"/>
            <line num="535" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="535" type="cond"/>
            <line num="537" count="0" type="stmt"/>
            <line num="538" count="0" type="stmt"/>
            <line num="540" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="union(Interval,Interval) : FinalInterval" num="554" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="556" type="cond"/>
            <line num="558" count="0" type="stmt"/>
            <line num="559" count="0" type="stmt"/>
            <line num="560" count="0" type="stmt"/>
            <line num="561" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="561" type="cond"/>
            <line num="563" count="0" type="stmt"/>
            <line num="564" count="0" type="stmt"/>
            <line num="566" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="union(RealInterval,RealInterval) : FinalRealInterval" num="580" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="582" type="cond"/>
            <line num="584" count="0" type="stmt"/>
            <line num="585" count="0" type="stmt"/>
            <line num="586" count="0" type="stmt"/>
            <line num="587" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="587" type="cond"/>
            <line num="589" count="0" type="stmt"/>
            <line num="590" count="0" type="stmt"/>
            <line num="592" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="smallestContainingInterval(RealInterval) : Interval" num="604" count="0" type="method"/>
            <line num="606" count="0" type="stmt"/>
            <line num="607" count="0" type="stmt"/>
            <line num="608" count="0" type="stmt"/>
            <line num="609" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="609" type="cond"/>
            <line num="611" count="0" type="stmt"/>
            <line num="612" count="0" type="stmt"/>
            <line num="614" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="largestContainedInterval(RealInterval) : Interval" num="626" count="0" type="method"/>
            <line num="628" count="0" type="stmt"/>
            <line num="629" count="0" type="stmt"/>
            <line num="630" count="0" type="stmt"/>
            <line num="631" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="631" type="cond"/>
            <line num="633" count="0" type="stmt"/>
            <line num="634" count="0" type="stmt"/>
            <line num="636" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="isEmpty(Interval) : boolean" num="648" count="0" type="method"/>
            <line num="650" count="0" type="stmt"/>
            <line num="651" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="651" type="cond"/>
            <line num="652" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="652" type="cond"/>
            <line num="653" count="0" type="stmt"/>
            <line num="654" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="isEmpty(RealInterval) : boolean" num="666" count="0" type="method"/>
            <line num="668" count="0" type="stmt"/>
            <line num="669" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="669" type="cond"/>
            <line num="670" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="670" type="cond"/>
            <line num="671" count="0" type="stmt"/>
            <line num="672" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="contains(Interval,Localizable) : boolean" num="682" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="684" type="cond"/>
            <line num="686" count="0" type="stmt"/>
            <line num="687" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="687" type="cond"/>
            <line num="689" count="0" type="stmt"/>
            <line num="690" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="690" type="cond"/>
            <line num="691" count="0" type="stmt"/>
            <line num="693" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="contains(RealInterval,RealLocalizable) : boolean" num="703" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="705" type="cond"/>
            <line num="707" count="0" type="stmt"/>
            <line num="708" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="708" type="cond"/>
            <line num="710" count="0" type="stmt"/>
            <line num="711" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="711" type="cond"/>
            <line num="712" count="0" type="stmt"/>
            <line num="714" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="contains(Interval,Interval) : boolean" num="721" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="723" type="cond"/>
            <line num="725" count="0" type="stmt"/>
            <line num="726" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="726" type="cond"/>
            <line num="728" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="728" type="cond"/>
            <line num="729" count="0" type="stmt"/>
            <line num="731" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="contains(RealInterval,RealInterval) : boolean" num="738" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="740" type="cond"/>
            <line num="742" count="0" type="stmt"/>
            <line num="743" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="743" type="cond"/>
            <line num="745" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="745" type="cond"/>
            <line num="746" count="0" type="stmt"/>
            <line num="748" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="numElements(Dimensions) : long" num="757" count="0" type="method"/>
            <line num="759" count="0" type="stmt"/>
            <line num="760" count="0" type="stmt"/>
            <line num="761" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="761" type="cond"/>
            <line num="762" count="0" type="stmt"/>
            <line num="763" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="numElements(int) : long" num="773" count="0" type="method"/>
            <line num="775" count="0" type="stmt"/>
            <line num="776" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="776" type="cond"/>
            <line num="777" count="0" type="stmt"/>
            <line num="778" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="numElements(long) : long" num="788" count="0" type="method"/>
            <line num="790" count="0" type="stmt"/>
            <line num="791" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="791" type="cond"/>
            <line num="792" count="0" type="stmt"/>
            <line num="793" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="equals(Interval,Interval) : boolean" num="799" count="0" type="method"/>
            <line num="802" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="802" type="cond"/>
            <line num="803" count="0" type="stmt"/>
            <line num="805" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="805" type="cond"/>
            <line num="806" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="806" type="cond"/>
            <line num="807" count="0" type="stmt"/>
            <line num="809" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="equals(RealInterval,RealInterval) : boolean" num="815" count="0" type="method"/>
            <line num="817" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="817" type="cond"/>
            <line num="818" count="0" type="stmt"/>
            <line num="820" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="820" type="cond"/>
            <line num="821" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="821" type="cond"/>
            <line num="822" count="0" type="stmt"/>
            <line num="824" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="equals(RealInterval,RealInterval,double) : boolean" num="831" count="0" type="method"/>
            <line num="834" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="834" type="cond"/>
            <line num="835" count="0" type="stmt"/>
            <line num="837" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="837" type="cond"/>
            <line num="839" count="0" type="stmt"/>
            <line num="840" count="0" type="stmt"/>
            <line num="841" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="841" type="cond"/>
            <line num="842" count="0" type="stmt"/>
            <line num="845" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="equalDimensions(Dimensions,Dimensions) : boolean" num="851" count="0" type="method"/>
            <line num="853" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="853" type="cond"/>
            <line num="854" count="0" type="stmt"/>
            <line num="856" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="856" type="cond"/>
            <line num="857" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="857" type="cond"/>
            <line num="858" count="0" type="stmt"/>
            <line num="860" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equalDimensions(Interval,Interval) : boolean" num="866" count="0" type="method"/>
            <line num="869" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dimensionsAsLongArray(Dimensions) : long[]" num="886" count="0" type="method"/>
            <line num="888" count="0" type="stmt"/>
            <line num="889" count="0" type="stmt"/>
            <line num="890" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="dimensionsAsIntArray(Dimensions) : int[]" num="906" count="0" type="method"/>
            <line num="908" count="0" type="stmt"/>
            <line num="909" count="0" type="stmt"/>
            <line num="910" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="910" type="cond"/>
            <line num="911" count="0" type="stmt"/>
            <line num="912" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="minAsLongArray(Interval) : long[]" num="928" count="0" type="method"/>
            <line num="930" count="0" type="stmt"/>
            <line num="931" count="0" type="stmt"/>
            <line num="932" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="minAsIntArray(Interval) : int[]" num="948" count="0" type="method"/>
            <line num="950" count="0" type="stmt"/>
            <line num="951" count="0" type="stmt"/>
            <line num="952" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="952" type="cond"/>
            <line num="953" count="0" type="stmt"/>
            <line num="954" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="maxAsLongArray(Interval) : long[]" num="970" count="0" type="method"/>
            <line num="972" count="0" type="stmt"/>
            <line num="973" count="0" type="stmt"/>
            <line num="974" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="maxAsIntArray(Interval) : int[]" num="990" count="0" type="method"/>
            <line num="992" count="0" type="stmt"/>
            <line num="993" count="0" type="stmt"/>
            <line num="994" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="994" type="cond"/>
            <line num="995" count="0" type="stmt"/>
            <line num="996" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="maxAsDoubleArray(RealInterval) : double[]" num="1014" count="0" type="method"/>
            <line num="1016" count="0" type="stmt"/>
            <line num="1017" count="0" type="stmt"/>
            <line num="1018" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="minAsDoubleArray(RealInterval) : double[]" num="1036" count="0" type="method"/>
            <line num="1038" count="0" type="stmt"/>
            <line num="1039" count="0" type="stmt"/>
            <line num="1040" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="positions(Interval) : RandomAccessibleInterval&lt; Localizable &gt;" num="1050" count="0" type="method"/>
            <line num="1051" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="toString(Interval) : String" num="1058" count="0" type="method"/>
            <line num="1060" count="0" type="stmt"/>
            <line num="1062" count="0" type="stmt"/>
            <line num="1063" count="0" type="stmt"/>
            <line num="1064" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1064" type="cond"/>
            <line num="1066" count="0" type="stmt"/>
            <line num="1067" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1067" type="cond"/>
            <line num="1068" count="0" type="stmt"/>
            <line num="1070" count="0" type="stmt"/>
            <line num="1071" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1071" type="cond"/>
            <line num="1073" count="0" type="stmt"/>
            <line num="1074" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1074" type="cond"/>
            <line num="1075" count="0" type="stmt"/>
            <line num="1077" count="0" type="stmt"/>
            <line num="1078" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1078" type="cond"/>
            <line num="1080" count="0" type="stmt"/>
            <line num="1081" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1081" type="cond"/>
            <line num="1082" count="0" type="stmt"/>
            <line num="1084" count="0" type="stmt"/>
            <line num="1086" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="toString(RealInterval) : String" num="1092" count="0" type="method"/>
            <line num="1094" count="0" type="stmt"/>
            <line num="1096" count="0" type="stmt"/>
            <line num="1097" count="0" type="stmt"/>
            <line num="1098" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1098" type="cond"/>
            <line num="1100" count="0" type="stmt"/>
            <line num="1101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1101" type="cond"/>
            <line num="1102" count="0" type="stmt"/>
            <line num="1104" count="0" type="stmt"/>
            <line num="1105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1105" type="cond"/>
            <line num="1107" count="0" type="stmt"/>
            <line num="1108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1108" type="cond"/>
            <line num="1109" count="0" type="stmt"/>
            <line num="1111" count="0" type="stmt"/>
            <line num="1113" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString(Dimensions) : String" num="1119" count="0" type="method"/>
            <line num="1121" count="0" type="stmt"/>
            <line num="1122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1122" type="cond"/>
            <line num="1123" count="0" type="stmt"/>
            <line num="1124" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/util/IterablePair.java" name="IterablePair.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="105" coveredmethods="0" methods="7" elements="17" classes="1" ncloc="43" statements="10" conditionals="0" coveredstatements="0"/>
            <class name="IterablePair">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="17" statements="10" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="IterablePair(Iterable&lt;A&gt;,Iterable&lt;B&gt;)" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;Pair&lt;A, B&gt;&gt;" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getA() : A" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getB() : B" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : Pair&lt;A, B&gt;" num="97" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/util/KthElement.java" name="KthElement.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="72" loc="873" coveredmethods="0" methods="26" elements="270" classes="1" ncloc="343" statements="152" conditionals="92" coveredstatements="0"/>
            <class name="KthElement">
               <metrics coveredelements="0" coveredconditionals="0" complexity="72" coveredmethods="0" methods="26" elements="270" statements="152" conditionals="92" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="kthElement(int,int,int,byte[]) : void" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="kthElement(int,byte[]) : void" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="kthElement(int,int,int,short[]) : void" num="112" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="kthElement(int,short[]) : void" num="142" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="kthElement(int,int,int,int[]) : void" num="161" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="166" type="cond"/>
            <line num="169" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="171" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="kthElement(int,int[]) : void" num="191" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="kthElement(int,int,int,long[]) : void" num="210" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="215" type="cond"/>
            <line num="218" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="220" type="cond"/>
            <line num="223" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="kthElement(int,long[]) : void" num="240" count="0" type="method"/>
            <line num="242" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="kthElement(int,int,int,float[]) : void" num="259" count="0" type="method"/>
            <line num="261" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="264" type="cond"/>
            <line num="267" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="269" type="cond"/>
            <line num="272" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="kthElement(int,float[]) : void" num="289" count="0" type="method"/>
            <line num="291" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="kthElement(int,int,int,double[]) : void" num="308" count="0" type="method"/>
            <line num="310" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="313" type="cond"/>
            <line num="316" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="318" type="cond"/>
            <line num="321" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="kthElement(int,double[]) : void" num="338" count="0" type="method"/>
            <line num="340" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="kthElement(int,int,int,char[]) : void" num="357" count="0" type="method"/>
            <line num="359" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="362" type="cond"/>
            <line num="365" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="367" type="cond"/>
            <line num="370" count="0" type="stmt"/>
            <line num="373" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="kthElement(int,char[]) : void" num="387" count="0" type="method"/>
            <line num="389" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="kthElement(int,int,int,List&lt; T &gt;,Comparator&lt; ? super T &gt;) : void" num="408" count="0" type="method"/>
            <line num="410" count="0" type="stmt"/>
            <line num="412" count="0" type="stmt"/>
            <line num="413" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="413" type="cond"/>
            <line num="416" count="0" type="stmt"/>
            <line num="418" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="418" type="cond"/>
            <line num="421" count="0" type="stmt"/>
            <line num="424" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="kthElement(int,List&lt; T &gt;,Comparator&lt; ? super T &gt;) : void" num="440" count="0" type="method"/>
            <line num="442" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="kthElement(int,int,int,List&lt; T &gt;) : void" num="459" count="0" type="method"/>
            <line num="461" count="0" type="stmt"/>
            <line num="463" count="0" type="stmt"/>
            <line num="464" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="464" type="cond"/>
            <line num="467" count="0" type="stmt"/>
            <line num="469" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="469" type="cond"/>
            <line num="472" count="0" type="stmt"/>
            <line num="475" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="kthElement(int,List&lt; T &gt;) : void" num="489" count="0" type="method"/>
            <line num="491" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="kthElement(ListIterator&lt; T &gt;,ListIterator&lt; T &gt;,int,Comparator&lt; ? super T &gt;) : void" num="516" count="0" type="method"/>
            <line num="518" count="0" type="stmt"/>
            <line num="520" count="0" type="stmt"/>
            <line num="521" count="0" type="stmt"/>
            <line num="522" count="0" type="stmt"/>
            <line num="523" count="0" type="stmt"/>
            <line num="524" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="524" type="cond"/>
            <line num="527" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="527" type="cond"/>
            <line num="528" count="0" type="stmt"/>
            <line num="529" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="529" type="cond"/>
            <line num="530" count="0" type="stmt"/>
            <line num="532" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="532" type="cond"/>
            <line num="535" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="535" type="cond"/>
            <line num="536" count="0" type="stmt"/>
            <line num="537" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="537" type="cond"/>
            <line num="538" count="0" type="stmt"/>
            <line num="541" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="kthElement(ListIterator&lt; T &gt;,ListIterator&lt; T &gt;,int) : void" num="565" count="0" type="method"/>
            <line num="567" count="0" type="stmt"/>
            <line num="569" count="0" type="stmt"/>
            <line num="570" count="0" type="stmt"/>
            <line num="571" count="0" type="stmt"/>
            <line num="572" count="0" type="stmt"/>
            <line num="573" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="573" type="cond"/>
            <line num="576" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="576" type="cond"/>
            <line num="577" count="0" type="stmt"/>
            <line num="578" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="578" type="cond"/>
            <line num="579" count="0" type="stmt"/>
            <line num="581" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="581" type="cond"/>
            <line num="584" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="584" type="cond"/>
            <line num="585" count="0" type="stmt"/>
            <line num="586" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="586" type="cond"/>
            <line num="587" count="0" type="stmt"/>
            <line num="590" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="kthElement(int,int,int,List&lt; T &gt;,int[],Comparator&lt; ? super T &gt;) : void" num="623" count="0" type="method"/>
            <line num="625" count="0" type="stmt"/>
            <line num="627" count="0" type="stmt"/>
            <line num="628" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="628" type="cond"/>
            <line num="631" count="0" type="stmt"/>
            <line num="633" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="633" type="cond"/>
            <line num="636" count="0" type="stmt"/>
            <line num="639" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="kthElement(int,List&lt; T &gt;,int[],Comparator&lt; ? super T &gt;) : void" num="668" count="0" type="method"/>
            <line num="670" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="kthElement(int,int,int,List&lt; T &gt;,int[]) : void" num="700" count="0" type="method"/>
            <line num="702" count="0" type="stmt"/>
            <line num="704" count="0" type="stmt"/>
            <line num="705" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="705" type="cond"/>
            <line num="708" count="0" type="stmt"/>
            <line num="710" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="710" type="cond"/>
            <line num="713" count="0" type="stmt"/>
            <line num="716" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="kthElement(int,List&lt; T &gt;,int[]) : void" num="743" count="0" type="method"/>
            <line num="745" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="kthElement(ListIterator&lt; T &gt;,ListIterator&lt; T &gt;,int,int[],Comparator&lt; ? super T &gt;) : void" num="783" count="0" type="method"/>
            <line num="785" count="0" type="stmt"/>
            <line num="787" count="0" type="stmt"/>
            <line num="788" count="0" type="stmt"/>
            <line num="789" count="0" type="stmt"/>
            <line num="790" count="0" type="stmt"/>
            <line num="791" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="791" type="cond"/>
            <line num="794" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="794" type="cond"/>
            <line num="795" count="0" type="stmt"/>
            <line num="796" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="796" type="cond"/>
            <line num="797" count="0" type="stmt"/>
            <line num="799" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="799" type="cond"/>
            <line num="802" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="802" type="cond"/>
            <line num="803" count="0" type="stmt"/>
            <line num="804" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="804" type="cond"/>
            <line num="805" count="0" type="stmt"/>
            <line num="808" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="kthElement(ListIterator&lt; T &gt;,ListIterator&lt; T &gt;,int,int[]) : void" num="845" count="0" type="method"/>
            <line num="847" count="0" type="stmt"/>
            <line num="849" count="0" type="stmt"/>
            <line num="850" count="0" type="stmt"/>
            <line num="851" count="0" type="stmt"/>
            <line num="852" count="0" type="stmt"/>
            <line num="853" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="853" type="cond"/>
            <line num="856" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="856" type="cond"/>
            <line num="857" count="0" type="stmt"/>
            <line num="858" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="858" type="cond"/>
            <line num="859" count="0" type="stmt"/>
            <line num="861" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="861" type="cond"/>
            <line num="864" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="864" type="cond"/>
            <line num="865" count="0" type="stmt"/>
            <line num="866" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="866" type="cond"/>
            <line num="867" count="0" type="stmt"/>
            <line num="870" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/util/LinAlgHelpers.java" name="LinAlgHelpers.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="158" loc="999" coveredmethods="0" methods="46" elements="503" classes="1" ncloc="514" statements="263" conditionals="194" coveredstatements="0"/>
            <class name="LinAlgHelpers">
               <metrics coveredelements="0" coveredconditionals="0" complexity="158" coveredmethods="0" methods="46" elements="503" statements="263" conditionals="194" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="rows(double[]) : int" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rows(double[][]) : int" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cols(double[][]) : int" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="squareLength(double[]) : double" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="length(double[]) : double" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="squareDistance(double[],double[]) : double" num="90" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="distance(double[],double[]) : double" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="lerp(double[],double[],double,double[]) : void" num="116" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line falsecount="0" truecount="0" num="119" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="scale(double[],double,double[]) : void" num="135" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="137" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="141" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="scale(double[][],double,double[][]) : void" num="153" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="160" type="cond"/>
            <line num="161" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="161" type="cond"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="copy(double[][],double[][]) : void" num="171" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="178" type="cond"/>
            <line num="179" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="179" type="cond"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="subtract(double[],double[],double[]) : void" num="191" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="193" type="cond"/>
            <line num="195" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="197" type="cond"/>
            <line num="198" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="add(double[],double[],double[]) : void" num="209" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="211" type="cond"/>
            <line num="213" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="215" type="cond"/>
            <line num="216" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="mult(double[][],double[],double[]) : void" num="229" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="231" type="cond"/>
            <line falsecount="0" truecount="0" num="232" type="cond"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="237" type="cond"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="240" type="cond"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="multT(double[][],double[],double[]) : void" num="256" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="258" type="cond"/>
            <line falsecount="0" truecount="0" num="259" type="cond"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="264" type="cond"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="267" type="cond"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="mult(double[][],double[][],double[][]) : void" num="283" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="285" type="cond"/>
            <line falsecount="0" truecount="0" num="286" type="cond"/>
            <line num="288" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="292" type="cond"/>
            <line num="294" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="294" type="cond"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="297" type="cond"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="multABT(double[][],double[][],double[][]) : void" num="314" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="316" type="cond"/>
            <line falsecount="0" truecount="0" num="317" type="cond"/>
            <line num="319" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="323" type="cond"/>
            <line num="325" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="325" type="cond"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="328" type="cond"/>
            <line num="329" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="multATB(double[][],double[][],double[][]) : void" num="345" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="347" type="cond"/>
            <line falsecount="0" truecount="0" num="348" type="cond"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line num="354" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="354" type="cond"/>
            <line num="356" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="356" type="cond"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="359" type="cond"/>
            <line num="360" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="add(double[][],double[][],double[][]) : void" num="376" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="378" type="cond"/>
            <line falsecount="0" truecount="0" num="379" type="cond"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="384" type="cond"/>
            <line num="385" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="385" type="cond"/>
            <line num="386" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getCol(int,double[][],double[]) : void" num="398" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="400" type="cond"/>
            <line falsecount="0" truecount="0" num="401" type="cond"/>
            <line num="403" count="0" type="stmt"/>
            <line num="405" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="405" type="cond"/>
            <line num="406" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="setCol(int,double[],double[][]) : void" num="418" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="420" type="cond"/>
            <line falsecount="0" truecount="0" num="421" type="cond"/>
            <line num="423" count="0" type="stmt"/>
            <line num="425" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="425" type="cond"/>
            <line num="426" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getRow(int,double[][],double[]) : void" num="438" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="440" type="cond"/>
            <line falsecount="0" truecount="0" num="441" type="cond"/>
            <line num="443" count="0" type="stmt"/>
            <line num="445" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="445" type="cond"/>
            <line num="446" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="setRow(int,double[],double[][]) : void" num="458" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="460" type="cond"/>
            <line falsecount="0" truecount="0" num="461" type="cond"/>
            <line num="463" count="0" type="stmt"/>
            <line num="465" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="465" type="cond"/>
            <line num="466" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="normalize(double[]) : void" num="474" count="0" type="method"/>
            <line num="476" count="0" type="stmt"/>
            <line num="477" count="0" type="stmt"/>
            <line num="478" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="478" type="cond"/>
            <line num="479" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="dot(double[],double[]) : double" num="490" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="492" type="cond"/>
            <line num="494" count="0" type="stmt"/>
            <line num="496" count="0" type="stmt"/>
            <line num="497" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="497" type="cond"/>
            <line num="498" count="0" type="stmt"/>
            <line num="500" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cross(double[],double[],double[]) : void" num="511" count="0" type="method"/>
            <line num="513" count="0" type="stmt"/>
            <line num="514" count="0" type="stmt"/>
            <line num="515" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="outer(double[],double[],double[][]) : void" num="528" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="530" type="cond"/>
            <line num="532" count="0" type="stmt"/>
            <line num="533" count="0" type="stmt"/>
            <line num="535" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="535" type="cond"/>
            <line num="536" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="536" type="cond"/>
            <line num="537" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="angleFromR(double[][]) : double" num="547" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="549" type="cond"/>
            <line falsecount="0" truecount="0" num="550" type="cond"/>
            <line num="552" count="0" type="stmt"/>
            <line num="553" count="0" type="stmt"/>
            <line num="554" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="axisFromR(double[][],double[]) : void" num="565" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="567" type="cond"/>
            <line falsecount="0" truecount="0" num="568" type="cond"/>
            <line falsecount="0" truecount="0" num="569" type="cond"/>
            <line num="571" count="0" type="stmt"/>
            <line num="572" count="0" type="stmt"/>
            <line num="573" count="0" type="stmt"/>
            <line num="574" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="quaternionFromR(double[][],double[]) : void" num="585" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="587" type="cond"/>
            <line falsecount="0" truecount="0" num="588" type="cond"/>
            <line falsecount="0" truecount="0" num="589" type="cond"/>
            <line num="592" count="0" type="stmt"/>
            <line num="593" count="0" type="stmt"/>
            <line num="594" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="594" type="cond"/>
            <line num="596" count="0" type="stmt"/>
            <line num="597" count="0" type="stmt"/>
            <line num="598" count="0" type="stmt"/>
            <line num="599" count="0" type="stmt"/>
            <line num="600" count="0" type="stmt"/>
            <line num="606" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="606" type="cond"/>
            <line num="608" count="0" type="stmt"/>
            <line num="609" count="0" type="stmt"/>
            <line num="610" count="0" type="stmt"/>
            <line num="611" count="0" type="stmt"/>
            <line num="612" count="0" type="stmt"/>
            <line num="613" count="0" type="stmt"/>
            <line num="615" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="615" type="cond"/>
            <line num="617" count="0" type="stmt"/>
            <line num="618" count="0" type="stmt"/>
            <line num="619" count="0" type="stmt"/>
            <line num="620" count="0" type="stmt"/>
            <line num="621" count="0" type="stmt"/>
            <line num="622" count="0" type="stmt"/>
            <line num="626" count="0" type="stmt"/>
            <line num="627" count="0" type="stmt"/>
            <line num="628" count="0" type="stmt"/>
            <line num="629" count="0" type="stmt"/>
            <line num="630" count="0" type="stmt"/>
            <line num="631" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="quaternionToR(double[],double[][]) : void" num="644" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="646" type="cond"/>
            <line falsecount="0" truecount="0" num="647" type="cond"/>
            <line falsecount="0" truecount="0" num="648" type="cond"/>
            <line num="650" count="0" type="stmt"/>
            <line num="651" count="0" type="stmt"/>
            <line num="652" count="0" type="stmt"/>
            <line num="653" count="0" type="stmt"/>
            <line num="655" count="0" type="stmt"/>
            <line num="656" count="0" type="stmt"/>
            <line num="657" count="0" type="stmt"/>
            <line num="659" count="0" type="stmt"/>
            <line num="660" count="0" type="stmt"/>
            <line num="661" count="0" type="stmt"/>
            <line num="663" count="0" type="stmt"/>
            <line num="664" count="0" type="stmt"/>
            <line num="665" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="quaternionFromAngleAxis(double[],double,double[]) : void" num="678" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="680" type="cond"/>
            <line falsecount="0" truecount="0" num="681" type="cond"/>
            <line num="683" count="0" type="stmt"/>
            <line num="684" count="0" type="stmt"/>
            <line num="685" count="0" type="stmt"/>
            <line num="686" count="0" type="stmt"/>
            <line num="687" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="quaternionMultiply(double[],double[],double[]) : void" num="702" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="704" type="cond"/>
            <line falsecount="0" truecount="0" num="705" type="cond"/>
            <line falsecount="0" truecount="0" num="706" type="cond"/>
            <line num="708" count="0" type="stmt"/>
            <line num="709" count="0" type="stmt"/>
            <line num="710" count="0" type="stmt"/>
            <line num="711" count="0" type="stmt"/>
            <line num="713" count="0" type="stmt"/>
            <line num="714" count="0" type="stmt"/>
            <line num="715" count="0" type="stmt"/>
            <line num="716" count="0" type="stmt"/>
            <line num="718" count="0" type="stmt"/>
            <line num="719" count="0" type="stmt"/>
            <line num="720" count="0" type="stmt"/>
            <line num="721" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="quaternionPower(double[],double,double[]) : void" num="734" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="736" type="cond"/>
            <line falsecount="0" truecount="0" num="737" type="cond"/>
            <line num="739" count="0" type="stmt"/>
            <line num="740" count="0" type="stmt"/>
            <line num="741" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="741" type="cond"/>
            <line num="743" count="0" type="stmt"/>
            <line num="744" count="0" type="stmt"/>
            <line num="745" count="0" type="stmt"/>
            <line num="746" count="0" type="stmt"/>
            <line num="750" count="0" type="stmt"/>
            <line num="751" count="0" type="stmt"/>
            <line num="752" count="0" type="stmt"/>
            <line num="753" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="quaternionInvert(double[],double[]) : void" num="766" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="768" type="cond"/>
            <line falsecount="0" truecount="0" num="769" type="cond"/>
            <line num="771" count="0" type="stmt"/>
            <line num="772" count="0" type="stmt"/>
            <line num="773" count="0" type="stmt"/>
            <line num="774" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="quaternionApply(double[],double[],double[]) : void" num="788" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="790" type="cond"/>
            <line falsecount="0" truecount="0" num="791" type="cond"/>
            <line falsecount="0" truecount="0" num="792" type="cond"/>
            <line num="794" count="0" type="stmt"/>
            <line num="795" count="0" type="stmt"/>
            <line num="796" count="0" type="stmt"/>
            <line num="797" count="0" type="stmt"/>
            <line num="799" count="0" type="stmt"/>
            <line num="800" count="0" type="stmt"/>
            <line num="801" count="0" type="stmt"/>
            <line num="802" count="0" type="stmt"/>
            <line num="804" count="0" type="stmt"/>
            <line num="805" count="0" type="stmt"/>
            <line num="806" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="det3x3(double[]) : double" num="816" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="818" type="cond"/>
            <line num="820" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="det3x3(double,double,double,double,double,double,double,double,double) : double" num="845" count="0" type="method"/>
            <line num="850" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="invert3x3(double[]) : void" num="866" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="868" type="cond"/>
            <line num="870" count="0" type="stmt"/>
            <line num="871" count="0" type="stmt"/>
            <line num="871" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="871" type="cond"/>
            <line num="873" count="0" type="stmt"/>
            <line num="874" count="0" type="stmt"/>
            <line num="875" count="0" type="stmt"/>
            <line num="877" count="0" type="stmt"/>
            <line num="878" count="0" type="stmt"/>
            <line num="879" count="0" type="stmt"/>
            <line num="881" count="0" type="stmt"/>
            <line num="882" count="0" type="stmt"/>
            <line num="883" count="0" type="stmt"/>
            <line num="885" count="0" type="stmt"/>
            <line num="886" count="0" type="stmt"/>
            <line num="887" count="0" type="stmt"/>
            <line num="889" count="0" type="stmt"/>
            <line num="890" count="0" type="stmt"/>
            <line num="891" count="0" type="stmt"/>
            <line num="893" count="0" type="stmt"/>
            <line num="894" count="0" type="stmt"/>
            <line num="895" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="invert3x3(double,double,double,double,double,double,double,double,double) : double[]" num="905" count="0" type="method"/>
            <line num="910" count="0" type="stmt"/>
            <line num="911" count="0" type="stmt"/>
            <line num="911" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="911" type="cond"/>
            <line num="913" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invertSymmetric3x3(double[][],double[][]) : void" num="927" count="0" type="method"/>
            <line num="929" count="0" type="stmt"/>
            <line num="930" count="0" type="stmt"/>
            <line num="931" count="0" type="stmt"/>
            <line num="933" count="0" type="stmt"/>
            <line num="934" count="0" type="stmt"/>
            <line num="936" count="0" type="stmt"/>
            <line num="938" count="0" type="stmt"/>
            <line num="940" count="0" type="stmt"/>
            <line num="941" count="0" type="stmt"/>
            <line num="942" count="0" type="stmt"/>
            <line num="943" count="0" type="stmt"/>
            <line num="944" count="0" type="stmt"/>
            <line num="945" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invertSymmetric2x2(double[][],double[][]) : void" num="956" count="0" type="method"/>
            <line num="958" count="0" type="stmt"/>
            <line num="959" count="0" type="stmt"/>
            <line num="960" count="0" type="stmt"/>
            <line num="961" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString(double[][]) : String" num="964" count="0" type="method"/>
            <line num="966" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="toString(double[][],String) : String" num="969" count="0" type="method"/>
            <line num="971" count="0" type="stmt"/>
            <line num="972" count="0" type="stmt"/>
            <line num="974" count="0" type="stmt"/>
            <line num="975" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="975" type="cond"/>
            <line num="977" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="977" type="cond"/>
            <line num="978" count="0" type="stmt"/>
            <line num="979" count="0" type="stmt"/>
            <line num="981" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString(double[]) : String" num="984" count="0" type="method"/>
            <line num="986" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString(double[],String) : String" num="989" count="0" type="method"/>
            <line num="991" count="0" type="stmt"/>
            <line num="993" count="0" type="stmt"/>
            <line num="994" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="994" type="cond"/>
            <line num="995" count="0" type="stmt"/>
            <line num="996" count="0" type="stmt"/>
            <line num="997" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/util/Localizables.java" name="Localizables.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="27" loc="209" coveredmethods="0" methods="16" elements="88" classes="3" ncloc="127" statements="50" conditionals="22" coveredstatements="0"/>
            <class name="Localizables">
               <metrics coveredelements="0" coveredconditionals="0" complexity="19" coveredmethods="0" methods="8" elements="72" statements="42" conditionals="22" coveredstatements="0"/>
            </class>
            <class name="Localizables.LocationRandomAccessible">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Localizables.LocationRandomAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="asLongArray(Localizable) : long[]" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccessible(int) : RandomAccessible&lt; Localizable &gt;" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccessibleInterval(Interval) : RandomAccessibleInterval&lt; Localizable &gt;" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="equals(Localizable,Localizable) : boolean" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="equals(RealLocalizable,RealLocalizable) : boolean" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="equals(RealLocalizable,RealLocalizable,double) : boolean" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString(Localizable) : String" num="123" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="127" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString(RealLocalizable) : String" num="140" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="144" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LocationRandomAccessible(int)" num="158" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess() : RandomAccess&lt; Localizable &gt;" num="163" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess(Interval) : RandomAccess&lt; Localizable &gt;" num="169" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LocationRandomAccess(int)" num="181" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LocationRandomAccess(Localizable)" num="186" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRandomAccess() : RandomAccess&lt; Localizable &gt;" num="191" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : Localizable" num="197" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : Sampler&lt; Localizable &gt;" num="203" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/util/Pair.java" name="Pair.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="42" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Pair">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/util/Partition.java" name="Partition.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="109" loc="1178" coveredmethods="0" methods="15" elements="619" classes="1" ncloc="656" statements="416" conditionals="188" coveredstatements="0"/>
            <class name="Partition">
               <metrics coveredelements="0" coveredconditionals="0" complexity="109" coveredmethods="0" methods="15" elements="619" statements="416" conditionals="188" coveredstatements="0"/>
            </class>
            <line complexity="7" visibility="public" signature="partitionSubList(int,int,byte[]) : int" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="98" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="partitionSubList(int,int,short[]) : int" num="131" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="142" type="cond"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="149" type="cond"/>
            <line num="150" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="166" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="175" type="cond"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="partitionSubList(int,int,int[]) : int" num="199" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="207" type="cond"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="210" type="cond"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="217" type="cond"/>
            <line num="218" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="224" type="cond"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="234" type="cond"/>
            <line num="236" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="243" type="cond"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="partitionSubList(int,int,long[]) : int" num="267" count="0" type="method"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="275" type="cond"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="278" type="cond"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="285" type="cond"/>
            <line num="286" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="292" type="cond"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="302" type="cond"/>
            <line num="304" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="311" type="cond"/>
            <line num="313" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="partitionSubList(int,int,float[]) : int" num="335" count="0" type="method"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="343" type="cond"/>
            <line num="345" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="346" type="cond"/>
            <line num="347" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="353" type="cond"/>
            <line num="354" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="360" type="cond"/>
            <line num="363" count="0" type="stmt"/>
            <line num="364" count="0" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="370" type="cond"/>
            <line num="372" count="0" type="stmt"/>
            <line num="374" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="379" type="cond"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="partitionSubList(int,int,double[]) : int" num="403" count="0" type="method"/>
            <line num="405" count="0" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line num="408" count="0" type="stmt"/>
            <line num="411" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="411" type="cond"/>
            <line num="413" count="0" type="stmt"/>
            <line num="414" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="414" type="cond"/>
            <line num="415" count="0" type="stmt"/>
            <line num="416" count="0" type="stmt"/>
            <line num="421" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="421" type="cond"/>
            <line num="422" count="0" type="stmt"/>
            <line num="425" count="0" type="stmt"/>
            <line num="427" count="0" type="stmt"/>
            <line num="428" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="428" type="cond"/>
            <line num="431" count="0" type="stmt"/>
            <line num="432" count="0" type="stmt"/>
            <line num="433" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line num="435" count="0" type="stmt"/>
            <line num="436" count="0" type="stmt"/>
            <line num="438" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="438" type="cond"/>
            <line num="440" count="0" type="stmt"/>
            <line num="442" count="0" type="stmt"/>
            <line num="447" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="447" type="cond"/>
            <line num="449" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="partitionSubList(int,int,char[]) : int" num="471" count="0" type="method"/>
            <line num="473" count="0" type="stmt"/>
            <line num="474" count="0" type="stmt"/>
            <line num="476" count="0" type="stmt"/>
            <line num="479" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="479" type="cond"/>
            <line num="481" count="0" type="stmt"/>
            <line num="482" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="482" type="cond"/>
            <line num="483" count="0" type="stmt"/>
            <line num="484" count="0" type="stmt"/>
            <line num="489" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="489" type="cond"/>
            <line num="490" count="0" type="stmt"/>
            <line num="493" count="0" type="stmt"/>
            <line num="495" count="0" type="stmt"/>
            <line num="496" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="496" type="cond"/>
            <line num="499" count="0" type="stmt"/>
            <line num="500" count="0" type="stmt"/>
            <line num="501" count="0" type="stmt"/>
            <line num="502" count="0" type="stmt"/>
            <line num="503" count="0" type="stmt"/>
            <line num="504" count="0" type="stmt"/>
            <line num="506" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="506" type="cond"/>
            <line num="508" count="0" type="stmt"/>
            <line num="510" count="0" type="stmt"/>
            <line num="515" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="515" type="cond"/>
            <line num="517" count="0" type="stmt"/>
            <line num="518" count="0" type="stmt"/>
            <line num="520" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="partitionSubList(int,int,List&lt; T &gt;,Comparator&lt; ? super T &gt;) : int" num="541" count="0" type="method"/>
            <line num="543" count="0" type="stmt"/>
            <line num="544" count="0" type="stmt"/>
            <line num="546" count="0" type="stmt"/>
            <line num="549" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="549" type="cond"/>
            <line num="551" count="0" type="stmt"/>
            <line num="552" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="552" type="cond"/>
            <line num="553" count="0" type="stmt"/>
            <line num="554" count="0" type="stmt"/>
            <line num="559" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="559" type="cond"/>
            <line num="560" count="0" type="stmt"/>
            <line num="563" count="0" type="stmt"/>
            <line num="565" count="0" type="stmt"/>
            <line num="566" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="566" type="cond"/>
            <line num="569" count="0" type="stmt"/>
            <line num="570" count="0" type="stmt"/>
            <line num="571" count="0" type="stmt"/>
            <line num="572" count="0" type="stmt"/>
            <line num="573" count="0" type="stmt"/>
            <line num="574" count="0" type="stmt"/>
            <line num="576" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="576" type="cond"/>
            <line num="578" count="0" type="stmt"/>
            <line num="580" count="0" type="stmt"/>
            <line num="586" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="586" type="cond"/>
            <line num="588" count="0" type="stmt"/>
            <line num="589" count="0" type="stmt"/>
            <line num="591" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="partitionSubList(int,int,List&lt; T &gt;) : int" num="610" count="0" type="method"/>
            <line num="612" count="0" type="stmt"/>
            <line num="613" count="0" type="stmt"/>
            <line num="615" count="0" type="stmt"/>
            <line num="618" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="618" type="cond"/>
            <line num="620" count="0" type="stmt"/>
            <line num="621" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="621" type="cond"/>
            <line num="622" count="0" type="stmt"/>
            <line num="623" count="0" type="stmt"/>
            <line num="628" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="628" type="cond"/>
            <line num="629" count="0" type="stmt"/>
            <line num="632" count="0" type="stmt"/>
            <line num="634" count="0" type="stmt"/>
            <line num="635" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="635" type="cond"/>
            <line num="638" count="0" type="stmt"/>
            <line num="639" count="0" type="stmt"/>
            <line num="640" count="0" type="stmt"/>
            <line num="641" count="0" type="stmt"/>
            <line num="642" count="0" type="stmt"/>
            <line num="643" count="0" type="stmt"/>
            <line num="645" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="645" type="cond"/>
            <line num="647" count="0" type="stmt"/>
            <line num="649" count="0" type="stmt"/>
            <line num="655" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="655" type="cond"/>
            <line num="657" count="0" type="stmt"/>
            <line num="658" count="0" type="stmt"/>
            <line num="660" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="partitionSubList(ListIterator&lt; T &gt;,ListIterator&lt; T &gt;,Comparator&lt; ? super T &gt;) : void" num="686" count="0" type="method"/>
            <line num="688" count="0" type="stmt"/>
            <line num="689" count="0" type="stmt"/>
            <line num="691" count="0" type="stmt"/>
            <line num="694" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="694" type="cond"/>
            <line num="696" count="0" type="stmt"/>
            <line num="697" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="697" type="cond"/>
            <line num="699" count="0" type="stmt"/>
            <line num="700" count="0" type="stmt"/>
            <line num="707" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="707" type="cond"/>
            <line num="708" count="0" type="stmt"/>
            <line num="711" count="0" type="stmt"/>
            <line num="713" count="0" type="stmt"/>
            <line num="714" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="714" type="cond"/>
            <line num="717" count="0" type="stmt"/>
            <line num="718" count="0" type="stmt"/>
            <line num="719" count="0" type="stmt"/>
            <line num="720" count="0" type="stmt"/>
            <line num="722" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="722" type="cond"/>
            <line num="724" count="0" type="stmt"/>
            <line num="730" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="730" type="cond"/>
            <line num="732" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="732" type="cond"/>
            <line num="733" count="0" type="stmt"/>
            <line num="734" count="0" type="stmt"/>
            <line num="735" count="0" type="stmt"/>
            <line num="737" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="partitionSubList(ListIterator&lt; T &gt;,ListIterator&lt; T &gt;) : void" num="761" count="0" type="method"/>
            <line num="763" count="0" type="stmt"/>
            <line num="764" count="0" type="stmt"/>
            <line num="766" count="0" type="stmt"/>
            <line num="769" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="769" type="cond"/>
            <line num="771" count="0" type="stmt"/>
            <line num="772" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="772" type="cond"/>
            <line num="774" count="0" type="stmt"/>
            <line num="775" count="0" type="stmt"/>
            <line num="782" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="782" type="cond"/>
            <line num="783" count="0" type="stmt"/>
            <line num="786" count="0" type="stmt"/>
            <line num="788" count="0" type="stmt"/>
            <line num="789" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="789" type="cond"/>
            <line num="792" count="0" type="stmt"/>
            <line num="793" count="0" type="stmt"/>
            <line num="794" count="0" type="stmt"/>
            <line num="795" count="0" type="stmt"/>
            <line num="797" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="797" type="cond"/>
            <line num="799" count="0" type="stmt"/>
            <line num="805" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="805" type="cond"/>
            <line num="807" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="807" type="cond"/>
            <line num="808" count="0" type="stmt"/>
            <line num="809" count="0" type="stmt"/>
            <line num="810" count="0" type="stmt"/>
            <line num="812" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="partitionSubList(int,int,List&lt; T &gt;,int[],Comparator&lt; ? super T &gt;) : int" num="846" count="0" type="method"/>
            <line num="848" count="0" type="stmt"/>
            <line num="849" count="0" type="stmt"/>
            <line num="850" count="0" type="stmt"/>
            <line num="852" count="0" type="stmt"/>
            <line num="855" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="855" type="cond"/>
            <line num="857" count="0" type="stmt"/>
            <line num="858" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="858" type="cond"/>
            <line num="859" count="0" type="stmt"/>
            <line num="860" count="0" type="stmt"/>
            <line num="865" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="865" type="cond"/>
            <line num="866" count="0" type="stmt"/>
            <line num="869" count="0" type="stmt"/>
            <line num="871" count="0" type="stmt"/>
            <line num="872" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="872" type="cond"/>
            <line num="875" count="0" type="stmt"/>
            <line num="876" count="0" type="stmt"/>
            <line num="877" count="0" type="stmt"/>
            <line num="878" count="0" type="stmt"/>
            <line num="879" count="0" type="stmt"/>
            <line num="880" count="0" type="stmt"/>
            <line num="881" count="0" type="stmt"/>
            <line num="882" count="0" type="stmt"/>
            <line num="883" count="0" type="stmt"/>
            <line num="885" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="885" type="cond"/>
            <line num="887" count="0" type="stmt"/>
            <line num="889" count="0" type="stmt"/>
            <line num="895" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="895" type="cond"/>
            <line num="897" count="0" type="stmt"/>
            <line num="898" count="0" type="stmt"/>
            <line num="899" count="0" type="stmt"/>
            <line num="900" count="0" type="stmt"/>
            <line num="902" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="partitionSubList(int,int,List&lt; T &gt;,int[]) : int" num="934" count="0" type="method"/>
            <line num="936" count="0" type="stmt"/>
            <line num="937" count="0" type="stmt"/>
            <line num="938" count="0" type="stmt"/>
            <line num="940" count="0" type="stmt"/>
            <line num="943" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="943" type="cond"/>
            <line num="945" count="0" type="stmt"/>
            <line num="946" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="946" type="cond"/>
            <line num="947" count="0" type="stmt"/>
            <line num="948" count="0" type="stmt"/>
            <line num="953" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="953" type="cond"/>
            <line num="954" count="0" type="stmt"/>
            <line num="957" count="0" type="stmt"/>
            <line num="959" count="0" type="stmt"/>
            <line num="960" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="960" type="cond"/>
            <line num="963" count="0" type="stmt"/>
            <line num="964" count="0" type="stmt"/>
            <line num="965" count="0" type="stmt"/>
            <line num="966" count="0" type="stmt"/>
            <line num="967" count="0" type="stmt"/>
            <line num="968" count="0" type="stmt"/>
            <line num="969" count="0" type="stmt"/>
            <line num="970" count="0" type="stmt"/>
            <line num="971" count="0" type="stmt"/>
            <line num="973" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="973" type="cond"/>
            <line num="975" count="0" type="stmt"/>
            <line num="977" count="0" type="stmt"/>
            <line num="983" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="983" type="cond"/>
            <line num="985" count="0" type="stmt"/>
            <line num="986" count="0" type="stmt"/>
            <line num="987" count="0" type="stmt"/>
            <line num="988" count="0" type="stmt"/>
            <line num="990" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="partitionSubList(ListIterator&lt; T &gt;,ListIterator&lt; T &gt;,int[],Comparator&lt; ? super T &gt;) : void" num="1029" count="0" type="method"/>
            <line num="1031" count="0" type="stmt"/>
            <line num="1032" count="0" type="stmt"/>
            <line num="1033" count="0" type="stmt"/>
            <line num="1035" count="0" type="stmt"/>
            <line num="1038" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1038" type="cond"/>
            <line num="1040" count="0" type="stmt"/>
            <line num="1041" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1041" type="cond"/>
            <line num="1043" count="0" type="stmt"/>
            <line num="1044" count="0" type="stmt"/>
            <line num="1051" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1051" type="cond"/>
            <line num="1052" count="0" type="stmt"/>
            <line num="1055" count="0" type="stmt"/>
            <line num="1057" count="0" type="stmt"/>
            <line num="1058" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1058" type="cond"/>
            <line num="1061" count="0" type="stmt"/>
            <line num="1062" count="0" type="stmt"/>
            <line num="1063" count="0" type="stmt"/>
            <line num="1064" count="0" type="stmt"/>
            <line num="1065" count="0" type="stmt"/>
            <line num="1066" count="0" type="stmt"/>
            <line num="1067" count="0" type="stmt"/>
            <line num="1068" count="0" type="stmt"/>
            <line num="1069" count="0" type="stmt"/>
            <line num="1071" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1071" type="cond"/>
            <line num="1073" count="0" type="stmt"/>
            <line num="1079" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1079" type="cond"/>
            <line num="1081" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1081" type="cond"/>
            <line num="1082" count="0" type="stmt"/>
            <line num="1083" count="0" type="stmt"/>
            <line num="1084" count="0" type="stmt"/>
            <line num="1085" count="0" type="stmt"/>
            <line num="1086" count="0" type="stmt"/>
            <line num="1087" count="0" type="stmt"/>
            <line num="1089" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="partitionSubList(ListIterator&lt; T &gt;,ListIterator&lt; T &gt;,int[]) : void" num="1116" count="0" type="method"/>
            <line num="1118" count="0" type="stmt"/>
            <line num="1119" count="0" type="stmt"/>
            <line num="1120" count="0" type="stmt"/>
            <line num="1122" count="0" type="stmt"/>
            <line num="1125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1125" type="cond"/>
            <line num="1127" count="0" type="stmt"/>
            <line num="1128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1128" type="cond"/>
            <line num="1130" count="0" type="stmt"/>
            <line num="1131" count="0" type="stmt"/>
            <line num="1138" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1138" type="cond"/>
            <line num="1139" count="0" type="stmt"/>
            <line num="1142" count="0" type="stmt"/>
            <line num="1144" count="0" type="stmt"/>
            <line num="1145" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1145" type="cond"/>
            <line num="1148" count="0" type="stmt"/>
            <line num="1149" count="0" type="stmt"/>
            <line num="1150" count="0" type="stmt"/>
            <line num="1151" count="0" type="stmt"/>
            <line num="1152" count="0" type="stmt"/>
            <line num="1153" count="0" type="stmt"/>
            <line num="1154" count="0" type="stmt"/>
            <line num="1155" count="0" type="stmt"/>
            <line num="1156" count="0" type="stmt"/>
            <line num="1158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1158" type="cond"/>
            <line num="1160" count="0" type="stmt"/>
            <line num="1166" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1166" type="cond"/>
            <line num="1168" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1168" type="cond"/>
            <line num="1169" count="0" type="stmt"/>
            <line num="1170" count="0" type="stmt"/>
            <line num="1171" count="0" type="stmt"/>
            <line num="1172" count="0" type="stmt"/>
            <line num="1173" count="0" type="stmt"/>
            <line num="1174" count="0" type="stmt"/>
            <line num="1176" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/util/RealSum.java" name="RealSum.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="137" coveredmethods="0" methods="5" elements="36" classes="1" ncloc="57" statements="29" conditionals="2" coveredstatements="0"/>
            <class name="RealSum">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="5" elements="36" statements="29" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RealSum()" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RealSum(int)" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSum() : double" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="expand(double) : void" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="add(double) : void" num="115" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="121" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/util/StopWatch.java" name="StopWatch.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="17" loc="167" coveredmethods="0" methods="10" elements="56" classes="1" ncloc="74" statements="32" conditionals="14" coveredstatements="0"/>
            <class name="StopWatch">
               <metrics coveredelements="0" coveredconditionals="0" complexity="17" coveredmethods="0" methods="10" elements="56" statements="32" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="StopWatch()" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createStopped() : StopWatch" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createAndStart() : StopWatch" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="safeNanos() : long" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="start() : void" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="stop() : void" num="111" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="nanoTime() : long" num="125" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="127" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="seconds() : double" num="138" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="148" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="secondsToString(double) : String" num="156" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="159" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="161" type="cond"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/util/Util.java" name="Util.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="185" loc="1104" coveredmethods="0" methods="71" elements="660" classes="1" ncloc="706" statements="391" conditionals="198" coveredstatements="0"/>
            <class name="Util">
               <metrics coveredelements="0" coveredconditionals="0" complexity="185" coveredmethods="0" methods="71" elements="660" statements="391" conditionals="198" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="genericArray(int) : T[]" num="88" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="log2(double) : double" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getArrayFromValue(double,int) : double[]" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getArrayFromValue(float,int) : float[]" num="112" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="116" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getArrayFromValue(int,int) : int[]" num="123" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="127" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getArrayFromValue(long,int) : long[]" num="134" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="138" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="distance(RealLocalizable,RealLocalizable) : double" num="144" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="149" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="distance(long[],long[]) : double" num="159" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="percentile(double[],double) : double" num="183" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="averageDouble(List&lt; Double &gt;) : double" num="194" count="0" type="method"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="averageFloat(List&lt; Float &gt;) : float" num="205" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="min(List&lt; Float &gt;) : float" num="216" count="0" type="method"/>
            <line num="218" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="221" type="cond"/>
            <line num="222" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="max(List&lt; Float &gt;) : float" num="227" count="0" type="method"/>
            <line num="229" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="232" type="cond"/>
            <line num="233" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="average(float[]) : float" num="238" count="0" type="method"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="average(double[]) : double" num="249" count="0" type="method"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="min(double[]) : double" num="260" count="0" type="method"/>
            <line num="262" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="265" type="cond"/>
            <line num="266" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="max(double[]) : double" num="271" count="0" type="method"/>
            <line num="273" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="276" type="cond"/>
            <line num="277" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="median(long[]) : long" num="282" count="0" type="method"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="291" type="cond"/>
            <line num="292" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="median(double[]) : double" num="300" count="0" type="method"/>
            <line num="302" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="309" type="cond"/>
            <line num="310" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="median(float[]) : float" num="318" count="0" type="method"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="327" type="cond"/>
            <line num="328" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="quicksort(long[]) : void" num="336" count="0" type="method"/>
            <line num="338" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="quicksort(long[],int,int) : void" num="341" count="0" type="method"/>
            <line num="343" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="343" type="cond"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="349" type="cond"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="351" type="cond"/>
            <line num="352" count="0" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="353" type="cond"/>
            <line num="355" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="362" type="cond"/>
            <line num="363" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="363" type="cond"/>
            <line num="364" count="0" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="365" type="cond"/>
            <line num="366" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="quicksort(double[]) : void" num="369" count="0" type="method"/>
            <line num="371" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="quicksort(double[],int,int) : void" num="374" count="0" type="method"/>
            <line num="376" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="376" type="cond"/>
            <line num="377" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="382" type="cond"/>
            <line num="383" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="384" type="cond"/>
            <line num="385" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="386" type="cond"/>
            <line num="388" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line num="391" count="0" type="stmt"/>
            <line num="392" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="395" type="cond"/>
            <line num="396" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="396" type="cond"/>
            <line num="397" count="0" type="stmt"/>
            <line num="398" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="398" type="cond"/>
            <line num="399" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="quicksort(float[]) : void" num="402" count="0" type="method"/>
            <line num="404" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="quicksort(float[],int,int) : void" num="407" count="0" type="method"/>
            <line num="409" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="409" type="cond"/>
            <line num="410" count="0" type="stmt"/>
            <line num="411" count="0" type="stmt"/>
            <line num="412" count="0" type="stmt"/>
            <line num="413" count="0" type="stmt"/>
            <line num="415" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="415" type="cond"/>
            <line num="416" count="0" type="stmt"/>
            <line num="417" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="417" type="cond"/>
            <line num="418" count="0" type="stmt"/>
            <line num="419" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="419" type="cond"/>
            <line num="421" count="0" type="stmt"/>
            <line num="422" count="0" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line num="424" count="0" type="stmt"/>
            <line num="425" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="428" type="cond"/>
            <line num="429" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="429" type="cond"/>
            <line num="430" count="0" type="stmt"/>
            <line num="431" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="431" type="cond"/>
            <line num="432" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="quicksort(double[],int[],int,int) : void" num="435" count="0" type="method"/>
            <line num="437" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="437" type="cond"/>
            <line num="438" count="0" type="stmt"/>
            <line num="439" count="0" type="stmt"/>
            <line num="440" count="0" type="stmt"/>
            <line num="441" count="0" type="stmt"/>
            <line num="443" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="443" type="cond"/>
            <line num="444" count="0" type="stmt"/>
            <line num="445" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="445" type="cond"/>
            <line num="446" count="0" type="stmt"/>
            <line num="447" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="447" type="cond"/>
            <line num="449" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line num="451" count="0" type="stmt"/>
            <line num="453" count="0" type="stmt"/>
            <line num="454" count="0" type="stmt"/>
            <line num="455" count="0" type="stmt"/>
            <line num="457" count="0" type="stmt"/>
            <line num="458" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="461" type="cond"/>
            <line num="462" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="462" type="cond"/>
            <line num="463" count="0" type="stmt"/>
            <line num="464" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="464" type="cond"/>
            <line num="465" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="gLog(double,double) : double" num="468" count="0" type="method"/>
            <line num="470" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="470" type="cond"/>
            <line num="471" count="0" type="stmt"/>
            <line num="472" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="gLog(float,float) : float" num="475" count="0" type="method"/>
            <line num="477" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="477" type="cond"/>
            <line num="478" count="0" type="stmt"/>
            <line num="479" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="gLogInv(double,double) : double" num="482" count="0" type="method"/>
            <line num="484" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="484" type="cond"/>
            <line num="485" count="0" type="stmt"/>
            <line num="486" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="gLogInv(float,float) : double" num="489" count="0" type="method"/>
            <line num="491" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="491" type="cond"/>
            <line num="492" count="0" type="stmt"/>
            <line num="493" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="isApproxEqual(float,float,float) : boolean" num="496" count="0" type="method"/>
            <line num="498" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="498" type="cond"/>
            <line num="499" count="0" type="stmt"/>
            <line num="500" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="500" type="cond"/>
            <line num="501" count="0" type="stmt"/>
            <line num="503" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="isApproxEqual(double,double,double) : boolean" num="506" count="0" type="method"/>
            <line num="508" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="508" type="cond"/>
            <line num="509" count="0" type="stmt"/>
            <line num="510" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="510" type="cond"/>
            <line num="511" count="0" type="stmt"/>
            <line num="513" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="round(float) : int" num="516" count="0" type="method"/>
            <line num="518" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="round(double) : long" num="521" count="0" type="method"/>
            <line num="523" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="roundToInt(float) : int" num="526" count="0" type="method"/>
            <line num="528" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="roundToInt(double) : int" num="531" count="0" type="method"/>
            <line num="533" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="roundToLong(float) : long" num="536" count="0" type="method"/>
            <line num="538" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="roundToLong(double) : long" num="541" count="0" type="method"/>
            <line num="543" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="createGaussianKernel1DDouble(double,boolean) : double[]" num="557" count="0" type="method"/>
            <line num="559" count="0" type="stmt"/>
            <line num="560" count="0" type="stmt"/>
            <line num="562" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="562" type="cond"/>
            <line num="564" count="0" type="stmt"/>
            <line num="565" count="0" type="stmt"/>
            <line num="569" count="0" type="stmt"/>
            <line num="571" count="0" type="stmt"/>
            <line num="572" count="0" type="stmt"/>
            <line num="574" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="574" type="cond"/>
            <line num="576" count="0" type="stmt"/>
            <line num="578" count="0" type="stmt"/>
            <line num="579" count="0" type="stmt"/>
            <line num="583" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="583" type="cond"/>
            <line num="585" count="0" type="stmt"/>
            <line num="586" count="0" type="stmt"/>
            <line num="587" count="0" type="stmt"/>
            <line num="589" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="589" type="cond"/>
            <line num="590" count="0" type="stmt"/>
            <line num="593" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getSuggestedKernelDiameter(double) : int" num="596" count="0" type="method"/>
            <line num="598" count="0" type="stmt"/>
            <line num="600" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="600" type="cond"/>
            <line num="601" count="0" type="stmt"/>
            <line num="603" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="printCoordinates(float[]) : String" num="606" count="0" type="method"/>
            <line num="608" count="0" type="stmt"/>
            <line num="610" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="610" type="cond"/>
            <line num="611" count="0" type="stmt"/>
            <line num="612" count="0" type="stmt"/>
            <line num="614" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="614" type="cond"/>
            <line num="615" count="0" type="stmt"/>
            <line num="617" count="0" type="stmt"/>
            <line num="619" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="printCoordinates(double[]) : String" num="622" count="0" type="method"/>
            <line num="624" count="0" type="stmt"/>
            <line num="626" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="626" type="cond"/>
            <line num="627" count="0" type="stmt"/>
            <line num="628" count="0" type="stmt"/>
            <line num="630" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="630" type="cond"/>
            <line num="631" count="0" type="stmt"/>
            <line num="633" count="0" type="stmt"/>
            <line num="635" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="printCoordinates(RealLocalizable) : String" num="638" count="0" type="method"/>
            <line num="640" count="0" type="stmt"/>
            <line num="642" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="642" type="cond"/>
            <line num="643" count="0" type="stmt"/>
            <line num="644" count="0" type="stmt"/>
            <line num="646" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="646" type="cond"/>
            <line num="647" count="0" type="stmt"/>
            <line num="649" count="0" type="stmt"/>
            <line num="651" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="printInterval(Interval) : String" num="654" count="0" type="method"/>
            <line num="656" count="0" type="stmt"/>
            <line num="658" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="658" type="cond"/>
            <line num="659" count="0" type="stmt"/>
            <line num="661" count="0" type="stmt"/>
            <line num="663" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="663" type="cond"/>
            <line num="664" count="0" type="stmt"/>
            <line num="666" count="0" type="stmt"/>
            <line num="668" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="668" type="cond"/>
            <line num="669" count="0" type="stmt"/>
            <line num="671" count="0" type="stmt"/>
            <line num="673" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="673" type="cond"/>
            <line num="674" count="0" type="stmt"/>
            <line num="676" count="0" type="stmt"/>
            <line num="678" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="printCoordinates(int[]) : String" num="681" count="0" type="method"/>
            <line num="683" count="0" type="stmt"/>
            <line num="685" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="685" type="cond"/>
            <line num="686" count="0" type="stmt"/>
            <line num="687" count="0" type="stmt"/>
            <line num="689" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="689" type="cond"/>
            <line num="690" count="0" type="stmt"/>
            <line num="692" count="0" type="stmt"/>
            <line num="694" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="printCoordinates(long[]) : String" num="697" count="0" type="method"/>
            <line num="699" count="0" type="stmt"/>
            <line num="701" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="701" type="cond"/>
            <line num="702" count="0" type="stmt"/>
            <line num="703" count="0" type="stmt"/>
            <line num="705" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="705" type="cond"/>
            <line num="706" count="0" type="stmt"/>
            <line num="708" count="0" type="stmt"/>
            <line num="710" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="printCoordinates(boolean[]) : String" num="713" count="0" type="method"/>
            <line num="715" count="0" type="stmt"/>
            <line num="717" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="717" type="cond"/>
            <line num="718" count="0" type="stmt"/>
            <line num="719" count="0" type="stmt"/>
            <line num="721" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="721" type="cond"/>
            <line num="722" count="0" type="stmt"/>
            <line num="724" count="0" type="stmt"/>
            <line num="726" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="726" type="cond"/>
            <line num="728" count="0" type="stmt"/>
            <line num="729" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="729" type="cond"/>
            <line num="730" count="0" type="stmt"/>
            <line num="732" count="0" type="stmt"/>
            <line num="735" count="0" type="stmt"/>
            <line num="737" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="pow(int,int) : int" num="740" count="0" type="method"/>
            <line num="742" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="742" type="cond"/>
            <line num="743" count="0" type="stmt"/>
            <line num="744" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="744" type="cond"/>
            <line num="745" count="0" type="stmt"/>
            <line num="748" count="0" type="stmt"/>
            <line num="750" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="750" type="cond"/>
            <line num="751" count="0" type="stmt"/>
            <line num="753" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="max(T,T) : T" num="757" count="0" type="method"/>
            <line num="759" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="759" type="cond"/>
            <line num="760" count="0" type="stmt"/>
            <line num="762" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="min(T,T) : T" num="765" count="0" type="method"/>
            <line num="767" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="767" type="cond"/>
            <line num="768" count="0" type="stmt"/>
            <line num="770" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="long2int(long[]) : int[]" num="773" count="0" type="method"/>
            <line num="775" count="0" type="stmt"/>
            <line num="777" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="777" type="cond"/>
            <line num="778" count="0" type="stmt"/>
            <line num="780" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="int2long(int[]) : long[]" num="783" count="0" type="method"/>
            <line num="785" count="0" type="stmt"/>
            <line num="787" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="787" type="cond"/>
            <line num="788" count="0" type="stmt"/>
            <line num="790" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTypeFromInterval(F) : T" num="803" count="0" type="method"/>
            <line num="806" count="0" type="stmt"/>
            <line num="809" count="0" type="stmt"/>
            <line num="811" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTypeFromRealInterval(F) : T" num="824" count="0" type="method"/>
            <line num="827" count="0" type="stmt"/>
            <line num="830" count="0" type="stmt"/>
            <line num="832" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getArrayOrCellImgFactory(Dimensions,T) : ImgFactory&lt; T &gt;" num="846" count="0" type="method"/>
            <line num="848" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getArrayOrCellImgFactory(Dimensions,int,T) : ImgFactory&lt; T &gt;" num="867" count="0" type="method"/>
            <line num="869" count="0" type="stmt"/>
            <line num="870" count="0" type="stmt"/>
            <line num="871" count="0" type="stmt"/>
            <line num="872" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="872" type="cond"/>
            <line num="873" count="0" type="stmt"/>
            <line num="874" count="0" type="stmt"/>
            <line num="875" count="0" type="stmt"/>
            <line num="876" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getSuitableImgFactory(Dimensions,T) : ImgFactory&lt; T &gt;" num="893" count="0" type="method"/>
            <line num="895" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="895" type="cond"/>
            <line num="897" count="0" type="stmt"/>
            <line num="898" count="0" type="stmt"/>
            <line num="899" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="899" type="cond"/>
            <line num="901" count="0" type="stmt"/>
            <line num="903" count="0" type="stmt"/>
            <line num="910" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="910" type="cond"/>
            <line num="913" count="0" type="stmt"/>
            <line num="915" count="0" type="stmt"/>
            <line num="917" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="ldu(int) : int" num="927" count="0" type="method"/>
            <line num="929" count="0" type="stmt"/>
            <line num="930" count="0" type="stmt"/>
            <line num="932" count="0" type="stmt"/>
            <line num="933" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="935" type="cond"/>
            <line num="936" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="equalIterationOrder(IterableInterval&lt; ? &gt;) : boolean" num="942" count="0" type="method"/>
            <line num="944" count="0" type="stmt"/>
            <line num="945" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="945" type="cond"/>
            <line num="947" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="947" type="cond"/>
            <line num="948" count="0" type="stmt"/>
            <line num="951" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="locationsEqual(Localizable,Localizable) : boolean" num="974" count="0" type="method"/>
            <line num="976" count="0" type="stmt"/>
            <line num="977" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="977" type="cond"/>
            <line num="978" count="0" type="stmt"/>
            <line num="979" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="979" type="cond"/>
            <line num="981" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="981" type="cond"/>
            <line num="982" count="0" type="stmt"/>
            <line num="984" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="locationsEqual(RealLocalizable,RealLocalizable) : boolean" num="998" count="0" type="method"/>
            <line num="1000" count="0" type="stmt"/>
            <line num="1001" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1001" type="cond"/>
            <line num="1002" count="0" type="stmt"/>
            <line num="1003" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1003" type="cond"/>
            <line num="1005" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1005" type="cond"/>
            <line num="1006" count="0" type="stmt"/>
            <line num="1008" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="imagesEqual(RandomAccessibleInterval&lt; ? extends T &gt;,RandomAccessibleInterval&lt; ? extends U &gt;) : boolean" num="1014" count="0" type="method"/>
            <line num="1016" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="imagesEqual(RandomAccessibleInterval&lt; ? extends T &gt;,RandomAccessibleInterval&lt; ? extends U &gt;,BiPredicate&lt; T, U &gt;) : boolean" num="1023" count="0" type="method"/>
            <line num="1025" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1025" type="cond"/>
            <line num="1026" count="0" type="stmt"/>
            <line num="1027" count="0" type="stmt"/>
            <line num="1028" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1028" type="cond"/>
            <line num="1029" count="0" type="stmt"/>
            <line num="1030" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="min(double[],double[]) : void" num="1039" count="0" type="method"/>
            <line num="1041" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1041" type="cond"/>
            <line num="1042" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1042" type="cond"/>
            <line num="1043" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="max(double[],double[]) : void" num="1052" count="0" type="method"/>
            <line num="1054" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1054" type="cond"/>
            <line num="1055" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1055" type="cond"/>
            <line num="1056" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="asDoubleArray(Iterable&lt; ? extends RealType&lt; ? &gt; &gt;) : double[]" num="1062" count="0" type="method"/>
            <line num="1064" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="asDoubleArray(RandomAccessibleInterval&lt; ? extends RealType&lt; ? &gt; &gt;) : double[]" num="1071" count="0" type="method"/>
            <line num="1073" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="asDoubleArray(Img&lt; ? extends RealType&lt; ? &gt; &gt;) : double[]" num="1080" count="0" type="method"/>
            <line num="1082" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="valueEqualsObject(T,Object) : boolean" num="1091" count="0" type="method"/>
            <line num="1093" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1093" type="cond"/>
            <line num="1094" count="0" type="stmt"/>
            <line num="1095" count="0" type="stmt"/>
            <line num="1097" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="combineHash(int,int) : int" num="1100" count="0" type="method"/>
            <line num="1102" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/util/ValuePair.java" name="ValuePair.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="16" loc="102" coveredmethods="0" methods="5" elements="54" classes="1" ncloc="56" statements="27" conditionals="22" coveredstatements="0"/>
            <class name="ValuePair">
               <metrics coveredelements="0" coveredconditionals="0" complexity="16" coveredmethods="0" methods="5" elements="54" statements="27" conditionals="22" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ValuePair(A,B)" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getA() : A" num="54" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getB() : B" num="60" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="hashCode() : int" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="10" visibility="public" signature="equals(Object) : boolean" num="76" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="98" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/util/ConstantUtilsTest.java" name="ConstantUtilsTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="105" coveredmethods="0" methods="3" elements="39" classes="1" ncloc="60" statements="28" conditionals="8" coveredstatements="0"/>
            <class name="ConstantUtilsTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="3" elements="39" statements="28" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="constantRandomAccessible() : void" num="55" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="constantRandomAccessibleInterval() : void" num="73" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="constantRealRandomAccessible() : void" num="88" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/util/FlatCollectionsBenchmark.java" name="FlatCollectionsBenchmark.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="61" coveredmethods="0" methods="3" elements="13" classes="1" ncloc="46" statements="10" conditionals="0" coveredstatements="0"/>
            <class name="FlatCollectionsBenchmark">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="13" statements="10" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="benchmarkSumList() : double" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="benchmarkSumImg() : double" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String) : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/util/FlatCollectionsTest.java" name="FlatCollectionsTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="20" loc="230" coveredmethods="0" methods="18" elements="75" classes="1" ncloc="160" statements="53" conditionals="4" coveredstatements="0"/>
            <class name="FlatCollectionsTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="20" coveredmethods="0" methods="18" elements="75" statements="53" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testCollection() : void" num="88" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBooleanCollection() : void" num="94" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDoubleCollection() : void" num="100" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFloatCollection() : void" num="108" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIntegerCollection() : void" num="116" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLongCollection() : void" num="126" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBigIntegerCollection() : void" num="135" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testList() : void" num="141" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBooleanList() : void" num="147" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDoubleList() : void" num="153" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFloatList() : void" num="161" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIntegerList() : void" num="169" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testLongList() : void" num="179" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBigIntegerList() : void" num="188" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertImageEqualsCollection(Img&lt; T &gt;,Collection&lt; E &gt;,BiPredicate&lt; T, E &gt;) : void" num="194" count="0" type="method"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertImageEqualsList(Img&lt; T &gt;,List&lt; E &gt;,BiPredicate&lt; T, E &gt;) : void" num="200" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="assertIterationEquals(Iterable&lt; E &gt;,Iterable&lt; A &gt;,BiPredicate&lt; E, A &gt;) : void" num="206" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="210" type="cond"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="assertRandomAccessibleIntervalEqualsList(RandomAccessibleInterval&lt; T &gt;,List&lt; E &gt;,BiPredicate&lt; T, E &gt;) : void" num="220" count="0" type="method"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="223" type="cond"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/util/ImgTestHelper.java" name="ImgTestHelper.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="19" loc="282" coveredmethods="0" methods="7" elements="105" classes="1" ncloc="175" statements="80" conditionals="18" coveredstatements="0"/>
            <class name="ImgTestHelper">
               <metrics coveredelements="0" coveredconditionals="0" complexity="19" coveredmethods="0" methods="7" elements="105" statements="80" conditionals="18" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="dims() : long[][]" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertInvalidDims(ImgFactory&lt; ? &gt;) : void" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertInvalidDims(Function&lt; long[], Img&lt; ? &gt; &gt;) : void" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="assertInvalidDims(long[],Function&lt; long[], Img&lt; ? &gt; &gt;) : void" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="testImg(long[],ImgFactory&lt; FloatType &gt;,ImgFactory&lt; FloatType &gt;) : boolean" num="131" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="178" type="cond"/>
            <line num="179" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="203" type="cond"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="216" type="cond"/>
            <line num="217" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="233" type="cond"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="createReference(Img&lt; FloatType &gt;) : float[]" num="243" count="0" type="method"/>
            <line num="246" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="255" type="cond"/>
            <line num="257" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="test(Img&lt; FloatType &gt;,float[]) : boolean" num="267" count="0" type="method"/>
            <line num="269" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="274" type="cond"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/util/ImgUtilTest.java" name="ImgUtilTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="36" loc="382" coveredmethods="0" methods="10" elements="207" classes="1" ncloc="320" statements="145" conditionals="52" coveredstatements="0"/>
            <class name="ImgUtilTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="36" coveredmethods="0" methods="10" elements="207" statements="145" conditionals="52" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="testPercentile() : void" num="64" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="testCopyDoubleArrayIntIntArrayImgOfT() : void" num="93" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="119" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="testCopyFloatArrayIntIntArrayImgOfT() : void" num="132" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="152" type="cond"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="161" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="testCopyLongArrayIntIntArrayImgOfT() : void" num="171" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="191" type="cond"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="197" type="cond"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="200" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="testCopyIntArrayIntIntArrayImgOfT() : void" num="210" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="230" type="cond"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="236" type="cond"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="239" type="cond"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="testCopyImgOfTDoubleArrayIntIntArray() : void" num="249" count="0" type="method"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="263" type="cond"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="266" type="cond"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="273" type="cond"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="testCopyImgOfTFloatArrayIntIntArray() : void" num="280" count="0" type="method"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="294" type="cond"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="297" type="cond"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="304" type="cond"/>
            <line num="306" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="testCopyImgOfTLongArrayIntIntArray() : void" num="311" count="0" type="method"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="325" type="cond"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="328" type="cond"/>
            <line num="330" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="335" type="cond"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="testCopyImgOfTIntArrayIntIntArray() : void" num="342" count="0" type="method"/>
            <line num="345" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line num="354" count="0" type="stmt"/>
            <line num="355" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="356" type="cond"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="359" type="cond"/>
            <line num="361" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="366" type="cond"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCopyRAItoRAI() : void" num="373" count="0" type="method"/>
            <line num="376" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/util/IntervalIndexerTest.java" name="IntervalIndexerTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="116" coveredmethods="0" methods="3" elements="35" classes="1" ncloc="61" statements="24" conditionals="8" coveredstatements="0"/>
            <class name="IntervalIndexerTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="3" elements="35" statements="24" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="test() : void" num="68" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testIndexToPosition(Interval) : void" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="96" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testPositionToIndex(RandomAccessibleInterval&lt; ? &gt;) : void" num="104" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/util/IntervalsTest.java" name="IntervalsTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="17" loc="211" coveredmethods="0" methods="17" elements="90" classes="1" ncloc="154" statements="73" conditionals="0" coveredstatements="0"/>
            <class name="IntervalsTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="17" coveredmethods="0" methods="17" elements="90" statements="73" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testTranslateDim() : void" num="51" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTranslateUsesCorrectOverload() : void" num="60" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTranslateDimNegative() : void" num="72" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTranslate() : void" num="81" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTranslateNegative() : void" num="90" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRotate() : void" num="99" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAddDimension() : void" num="108" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInvertAxis() : void" num="117" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMoveAxis() : void" num="126" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPermuteAxis() : void" num="135" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHyperSlice() : void" num="144" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testZeroMin() : void" num="153" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testScale() : void" num="162" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="171" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEqualsForRealIntervals() : void" num="181" count="0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEqualsForRealIntervalsWithTolerance() : void" num="191" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEqualDimensions() : void" num="202" count="0" type="method"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/util/IterablePairTest.java" name="IterablePairTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="138" coveredmethods="0" methods="5" elements="39" classes="1" ncloc="75" statements="34" conditionals="0" coveredstatements="0"/>
            <class name="IterablePairTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="5" elements="39" statements="34" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="testIterator() : void" num="62" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNulls() : void" num="89" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmpty() : void" num="99" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSameIterable() : void" num="111" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertNextItems(Iterator&lt; Pair&lt; Integer, String &gt; &gt;,Integer,String) : void" num="131" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/util/KthElementTest.java" name="KthElementTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="68" loc="638" coveredmethods="0" methods="19" elements="406" classes="2" ncloc="408" statements="289" conditionals="98" coveredstatements="0"/>
            <class name="KthElementTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="67" coveredmethods="0" methods="18" elements="404" statements="288" conditionals="98" coveredstatements="0"/>
            </class>
            <class name="KthElementTest.ComparableComparator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="testMedianByte() : void" num="55" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testMedianByteFull() : void" num="84" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="100" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testMinByteFull() : void" num="113" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="129" type="cond"/>
            <line num="130" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testMaxByteFull() : void" num="142" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="162" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testMedianShortFull() : void" num="171" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="187" type="cond"/>
            <line num="188" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="191" type="cond"/>
            <line num="192" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testMedianIntFull() : void" num="200" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="216" type="cond"/>
            <line num="217" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="220" type="cond"/>
            <line num="221" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testMedianLongFull() : void" num="229" count="0" type="method"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="245" type="cond"/>
            <line num="246" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="249" type="cond"/>
            <line num="250" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testMedianFloatFull() : void" num="258" count="0" type="method"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="274" type="cond"/>
            <line num="275" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="278" type="cond"/>
            <line num="279" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testMedianDoubleFull() : void" num="287" count="0" type="method"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="303" type="cond"/>
            <line num="304" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="307" type="cond"/>
            <line num="308" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="testMedianFloatObject() : void" num="316" count="0" type="method"/>
            <line num="319" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="337" type="cond"/>
            <line num="338" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="341" type="cond"/>
            <line num="342" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="347" type="cond"/>
            <line num="348" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="testMedianFloatObjectFull() : void" num="351" count="0" type="method"/>
            <line num="354" count="0" type="stmt"/>
            <line num="355" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line num="364" count="0" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line num="372" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="372" type="cond"/>
            <line num="373" count="0" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="376" type="cond"/>
            <line num="377" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="382" type="cond"/>
            <line num="383" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compare(T,T) : int" num="388" count="0" type="method"/>
            <line num="391" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="testMedianFloatObjectFullComparator() : void" num="395" count="0" type="method"/>
            <line num="398" count="0" type="stmt"/>
            <line num="399" count="0" type="stmt"/>
            <line num="401" count="0" type="stmt"/>
            <line num="403" count="0" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line num="407" count="0" type="stmt"/>
            <line num="408" count="0" type="stmt"/>
            <line num="409" count="0" type="stmt"/>
            <line num="410" count="0" type="stmt"/>
            <line num="413" count="0" type="stmt"/>
            <line num="416" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="416" type="cond"/>
            <line num="417" count="0" type="stmt"/>
            <line num="420" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="420" type="cond"/>
            <line num="421" count="0" type="stmt"/>
            <line num="425" count="0" type="stmt"/>
            <line num="426" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="426" type="cond"/>
            <line num="427" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="testMedianFloatObjectIterator() : void" num="430" count="0" type="method"/>
            <line num="433" count="0" type="stmt"/>
            <line num="434" count="0" type="stmt"/>
            <line num="436" count="0" type="stmt"/>
            <line num="438" count="0" type="stmt"/>
            <line num="441" count="0" type="stmt"/>
            <line num="442" count="0" type="stmt"/>
            <line num="443" count="0" type="stmt"/>
            <line num="444" count="0" type="stmt"/>
            <line num="445" count="0" type="stmt"/>
            <line num="446" count="0" type="stmt"/>
            <line num="447" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line num="453" count="0" type="stmt"/>
            <line num="456" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="456" type="cond"/>
            <line num="457" count="0" type="stmt"/>
            <line num="460" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="460" type="cond"/>
            <line num="461" count="0" type="stmt"/>
            <line num="465" count="0" type="stmt"/>
            <line num="466" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="466" type="cond"/>
            <line num="467" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="testMedianFloatObjectFullIteratorComparator() : void" num="470" count="0" type="method"/>
            <line num="473" count="0" type="stmt"/>
            <line num="474" count="0" type="stmt"/>
            <line num="476" count="0" type="stmt"/>
            <line num="478" count="0" type="stmt"/>
            <line num="481" count="0" type="stmt"/>
            <line num="482" count="0" type="stmt"/>
            <line num="483" count="0" type="stmt"/>
            <line num="484" count="0" type="stmt"/>
            <line num="485" count="0" type="stmt"/>
            <line num="486" count="0" type="stmt"/>
            <line num="487" count="0" type="stmt"/>
            <line num="490" count="0" type="stmt"/>
            <line num="493" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="493" type="cond"/>
            <line num="494" count="0" type="stmt"/>
            <line num="497" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="497" type="cond"/>
            <line num="498" count="0" type="stmt"/>
            <line num="502" count="0" type="stmt"/>
            <line num="503" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="503" type="cond"/>
            <line num="504" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="testMedianFloatObjectFullPermutation() : void" num="507" count="0" type="method"/>
            <line num="510" count="0" type="stmt"/>
            <line num="511" count="0" type="stmt"/>
            <line num="513" count="0" type="stmt"/>
            <line num="515" count="0" type="stmt"/>
            <line num="518" count="0" type="stmt"/>
            <line num="519" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="519" type="cond"/>
            <line num="520" count="0" type="stmt"/>
            <line num="522" count="0" type="stmt"/>
            <line num="523" count="0" type="stmt"/>
            <line num="524" count="0" type="stmt"/>
            <line num="525" count="0" type="stmt"/>
            <line num="528" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="528" type="cond"/>
            <line num="529" count="0" type="stmt"/>
            <line num="532" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="532" type="cond"/>
            <line num="533" count="0" type="stmt"/>
            <line num="535" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="535" type="cond"/>
            <line num="536" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="testMedianFloatObjectFullComparatorPermutation() : void" num="539" count="0" type="method"/>
            <line num="542" count="0" type="stmt"/>
            <line num="543" count="0" type="stmt"/>
            <line num="545" count="0" type="stmt"/>
            <line num="547" count="0" type="stmt"/>
            <line num="550" count="0" type="stmt"/>
            <line num="551" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="551" type="cond"/>
            <line num="552" count="0" type="stmt"/>
            <line num="554" count="0" type="stmt"/>
            <line num="555" count="0" type="stmt"/>
            <line num="556" count="0" type="stmt"/>
            <line num="557" count="0" type="stmt"/>
            <line num="560" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="560" type="cond"/>
            <line num="561" count="0" type="stmt"/>
            <line num="564" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="564" type="cond"/>
            <line num="565" count="0" type="stmt"/>
            <line num="567" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="567" type="cond"/>
            <line num="568" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="testMedianFloatObjectFullIteratorComparatorPermutation() : void" num="571" count="0" type="method"/>
            <line num="574" count="0" type="stmt"/>
            <line num="575" count="0" type="stmt"/>
            <line num="577" count="0" type="stmt"/>
            <line num="579" count="0" type="stmt"/>
            <line num="582" count="0" type="stmt"/>
            <line num="583" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="583" type="cond"/>
            <line num="584" count="0" type="stmt"/>
            <line num="586" count="0" type="stmt"/>
            <line num="587" count="0" type="stmt"/>
            <line num="588" count="0" type="stmt"/>
            <line num="589" count="0" type="stmt"/>
            <line num="590" count="0" type="stmt"/>
            <line num="591" count="0" type="stmt"/>
            <line num="594" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="594" type="cond"/>
            <line num="595" count="0" type="stmt"/>
            <line num="598" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="598" type="cond"/>
            <line num="599" count="0" type="stmt"/>
            <line num="601" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="601" type="cond"/>
            <line num="602" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="testMedianFloatObjectFullIteratorPermutation() : void" num="605" count="0" type="method"/>
            <line num="608" count="0" type="stmt"/>
            <line num="609" count="0" type="stmt"/>
            <line num="611" count="0" type="stmt"/>
            <line num="613" count="0" type="stmt"/>
            <line num="616" count="0" type="stmt"/>
            <line num="617" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="617" type="cond"/>
            <line num="618" count="0" type="stmt"/>
            <line num="620" count="0" type="stmt"/>
            <line num="621" count="0" type="stmt"/>
            <line num="622" count="0" type="stmt"/>
            <line num="623" count="0" type="stmt"/>
            <line num="624" count="0" type="stmt"/>
            <line num="625" count="0" type="stmt"/>
            <line num="628" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="628" type="cond"/>
            <line num="629" count="0" type="stmt"/>
            <line num="632" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="632" type="cond"/>
            <line num="633" count="0" type="stmt"/>
            <line num="635" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="635" type="cond"/>
            <line num="636" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/util/LinAlgHelpersTest.java" name="LinAlgHelpersTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="16" loc="223" coveredmethods="0" methods="10" elements="121" classes="1" ncloc="164" statements="99" conditionals="12" coveredstatements="0"/>
            <class name="LinAlgHelpersTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="16" coveredmethods="0" methods="10" elements="121" statements="99" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="getXRot(double) : double[][]" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getYRot(double) : double[][]" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getZRot(double) : double[][]" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAngleFromR() : void" num="82" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAxisFromR() : void" num="91" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="testR2Q2R() : void" num="118" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="134" type="cond"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="140" type="cond"/>
            <line num="141" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="152" type="cond"/>
            <line num="153" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testQuaternionToR() : void" num="162" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testQuaternionFromR() : void" num="178" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testQuaternionMultiply() : void" num="192" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testQuaternionApply() : void" num="210" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/util/LocalizablesTest.java" name="LocalizablesTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="66" coveredmethods="0" methods="2" elements="13" classes="1" ncloc="28" statements="11" conditionals="0" coveredstatements="0"/>
            <class name="LocalizablesTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="13" statements="11" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testAsLongArray() : void" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRandomAccessible() : void" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/util/PartitionTest.java" name="PartitionTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="58" loc="476" coveredmethods="0" methods="16" elements="336" classes="2" ncloc="339" statements="236" conditionals="84" coveredstatements="0"/>
            <class name="PartitionTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="57" coveredmethods="0" methods="15" elements="334" statements="235" conditionals="84" coveredstatements="0"/>
            </class>
            <class name="PartitionTest.ComparableComparator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="testPartitionByte() : void" num="54" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testPartitionShort() : void" num="77" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testPartitionInt() : void" num="100" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="116" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testPartitionLong() : void" num="123" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testPartitionFloat() : void" num="146" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="159" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="162" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testPartitionDouble() : void" num="169" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="182" type="cond"/>
            <line num="183" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="185" type="cond"/>
            <line num="186" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testPartitionChar() : void" num="192" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="205" type="cond"/>
            <line num="206" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="208" type="cond"/>
            <line num="209" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="testPartitionFloatObject() : void" num="215" count="0" type="method"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="233" type="cond"/>
            <line num="234" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="236" type="cond"/>
            <line num="237" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="240" type="cond"/>
            <line num="241" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compare(T,T) : int" num="246" count="0" type="method"/>
            <line num="249" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="testPartitionFloatObjectComparator() : void" num="253" count="0" type="method"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="271" type="cond"/>
            <line num="272" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="274" type="cond"/>
            <line num="275" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="278" type="cond"/>
            <line num="279" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="testPartitionFloatObjectIterator() : void" num="282" count="0" type="method"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="303" type="cond"/>
            <line num="304" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="306" type="cond"/>
            <line num="307" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="310" type="cond"/>
            <line num="311" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="testPartitionFloatObjectIteratorComparator() : void" num="314" count="0" type="method"/>
            <line num="317" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="335" type="cond"/>
            <line num="336" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="338" type="cond"/>
            <line num="339" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="342" type="cond"/>
            <line num="343" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="testPartitionFloatObjectPermutation() : void" num="346" count="0" type="method"/>
            <line num="349" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line num="354" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="358" type="cond"/>
            <line num="359" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="367" type="cond"/>
            <line num="368" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="370" type="cond"/>
            <line num="371" count="0" type="stmt"/>
            <line num="373" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="373" type="cond"/>
            <line num="374" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="testPartitionFloatObjectComparatorPermutation() : void" num="377" count="0" type="method"/>
            <line num="380" count="0" type="stmt"/>
            <line num="381" count="0" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
            <line num="385" count="0" type="stmt"/>
            <line num="388" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="389" type="cond"/>
            <line num="390" count="0" type="stmt"/>
            <line num="392" count="0" type="stmt"/>
            <line num="393" count="0" type="stmt"/>
            <line num="394" count="0" type="stmt"/>
            <line num="396" count="0" type="stmt"/>
            <line num="398" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="398" type="cond"/>
            <line num="399" count="0" type="stmt"/>
            <line num="401" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="401" type="cond"/>
            <line num="402" count="0" type="stmt"/>
            <line num="404" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="404" type="cond"/>
            <line num="405" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="testPartitionFloatObjectIteratorPermutation() : void" num="408" count="0" type="method"/>
            <line num="411" count="0" type="stmt"/>
            <line num="412" count="0" type="stmt"/>
            <line num="414" count="0" type="stmt"/>
            <line num="416" count="0" type="stmt"/>
            <line num="419" count="0" type="stmt"/>
            <line num="420" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="420" type="cond"/>
            <line num="421" count="0" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line num="424" count="0" type="stmt"/>
            <line num="425" count="0" type="stmt"/>
            <line num="426" count="0" type="stmt"/>
            <line num="427" count="0" type="stmt"/>
            <line num="428" count="0" type="stmt"/>
            <line num="430" count="0" type="stmt"/>
            <line num="432" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="432" type="cond"/>
            <line num="433" count="0" type="stmt"/>
            <line num="435" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="435" type="cond"/>
            <line num="436" count="0" type="stmt"/>
            <line num="438" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="438" type="cond"/>
            <line num="439" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="testPartitionFloatObjectIteratorComparatorPermutation() : void" num="442" count="0" type="method"/>
            <line num="445" count="0" type="stmt"/>
            <line num="446" count="0" type="stmt"/>
            <line num="448" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line num="453" count="0" type="stmt"/>
            <line num="454" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="454" type="cond"/>
            <line num="455" count="0" type="stmt"/>
            <line num="457" count="0" type="stmt"/>
            <line num="458" count="0" type="stmt"/>
            <line num="459" count="0" type="stmt"/>
            <line num="460" count="0" type="stmt"/>
            <line num="461" count="0" type="stmt"/>
            <line num="462" count="0" type="stmt"/>
            <line num="464" count="0" type="stmt"/>
            <line num="466" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="466" type="cond"/>
            <line num="467" count="0" type="stmt"/>
            <line num="469" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="469" type="cond"/>
            <line num="470" count="0" type="stmt"/>
            <line num="472" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="472" type="cond"/>
            <line num="473" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/util/RealSumTest.java" name="RealSumTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="140" coveredmethods="0" methods="7" elements="46" classes="1" ncloc="71" statements="25" conditionals="14" coveredstatements="0"/>
            <class name="RealSumTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="7" elements="46" statements="25" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="init() : void" num="57" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRealSum() : void" num="70" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRealSumInt() : void" num="80" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testGetSum() : void" num="90" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDoubleSum() : void" num="102" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testAdd() : void" num="114" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testDoubleAdd() : void" num="129" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="132" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/util/StopWatchTest.java" name="StopWatchTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="62" coveredmethods="0" methods="5" elements="30" classes="1" ncloc="55" statements="25" conditionals="0" coveredstatements="0"/>
            <class name="StopWatchTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="30" statements="25" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="demo() : void" num="10" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
            <line num="15" count="0" type="stmt"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCreateAndStart() : void" num="19" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStartStop() : void" num="29" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSeconds() : void" num="43" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSecondsToString() : void" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/util/UtilTest.java" name="UtilTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="17" loc="271" coveredmethods="0" methods="17" elements="110" classes="2" ncloc="191" statements="93" conditionals="0" coveredstatements="0"/>
            <class name="UtilTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="14" elements="104" statements="90" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="UtilTest.Simple">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testPrintCoordinatesEmpty() : void" num="71" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrintCoordinatesNull() : void" num="91" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrintCoordinatesOneElem() : void" num="112" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrintCoordinatesManyElems() : void" num="131" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetSuitableImgFactory() : void" num="151" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testImagesEqual() : void" num="163" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testImagesEqualWithPredicate() : void" num="172" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="intsImage(int) : Img&lt; IntType &gt;" num="180" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="doublesImage(double) : Img&lt;DoubleType &gt;" num="185" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAsDoubleArray() : void" num="190" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testValueEqualsObject() : void" num="204" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="Simple(int)" num="220" count="0" type="method"/>
            <line num="222" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="valueEquals(Simple) : boolean" num="225" count="0" type="method"/>
            <line num="228" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="231" count="0" type="method"/>
            <line num="234" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetArrayOrCellImgFactory() : void" num="238" count="0" type="method"/>
            <line num="242" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetArrayOrCellImgFactoryWithComplexFloatType() : void" num="249" count="0" type="method"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetArrayOrCellImgFactoryWithEntitiesPerPixelLessThanOne() : void" num="261" count="0" type="method"/>
            <line num="267" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.converter">
         <metrics coveredelements="0" complexity="229" loc="3703" methods="197" classes="44" statements="370" coveredconditionals="0" coveredmethods="0" elements="609" ncloc="1653" files="35" conditionals="42" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/ARGBARGBDoubleConverter.java" name="ARGBARGBDoubleConverter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="58" coveredmethods="0" methods="1" elements="3" classes="1" ncloc="17" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="ARGBARGBDoubleConverter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="convert(ARGBType,T) : void" num="48" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/ARGBDoubleARGBConverter.java" name="ARGBDoubleARGBConverter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="51" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="ARGBDoubleARGBConverter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="convert(T,ARGBType) : void" num="46" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/AbstractConvertedCursor.java" name="AbstractConvertedCursor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="17" loc="151" coveredmethods="0" methods="17" elements="35" classes="1" ncloc="93" statements="18" conditionals="0" coveredstatements="0"/>
            <class name="AbstractConvertedCursor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="17" coveredmethods="0" methods="17" elements="35" statements="18" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractConvertedCursor(Cursor&lt; A &gt;)" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(int[]) : void" num="52" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(long[]) : void" num="58" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntPosition(int) : int" num="64" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLongPosition(int) : long" num="70" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(float[]) : void" num="76" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(double[]) : void" num="82" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatPosition(int) : float" num="88" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDoublePosition(int) : double" num="94" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="100" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="jumpFwd(long) : void" num="106" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fwd() : void" num="112" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reset() : void" num="118" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="124" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : B" num="130" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="137" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyCursor() : AbstractConvertedCursor&lt; A, B &gt;" num="146" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/AbstractConvertedIterableInterval.java" name="AbstractConvertedIterableInterval.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="83" coveredmethods="0" methods="5" elements="10" classes="1" ncloc="36" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="AbstractConvertedIterableInterval">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractConvertedIterableInterval(IterableInterval&lt; A &gt;)" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : long" num="54" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterationOrder() : Object" num="60" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt; B &gt;" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="firstElement() : B" num="72" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/AbstractConvertedIterableRandomAccessibleInterval.java" name="AbstractConvertedIterableRandomAccessibleInterval.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="92" coveredmethods="0" methods="5" elements="10" classes="1" ncloc="43" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="AbstractConvertedIterableRandomAccessibleInterval">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractConvertedIterableRandomAccessibleInterval(S)" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : long" num="63" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterationOrder() : Object" num="69" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt; B &gt;" num="75" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="firstElement() : B" num="81" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/AbstractConvertedRandomAccess.java" name="AbstractConvertedRandomAccess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="23" loc="187" coveredmethods="0" methods="23" elements="46" classes="1" ncloc="123" statements="23" conditionals="0" coveredstatements="0"/>
            <class name="AbstractConvertedRandomAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="23" coveredmethods="0" methods="23" elements="46" statements="23" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractConvertedRandomAccess(RandomAccess&lt; A &gt;)" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(int[]) : void" num="53" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(long[]) : void" num="59" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntPosition(int) : int" num="65" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLongPosition(int) : long" num="71" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(float[]) : void" num="77" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(double[]) : void" num="83" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatPosition(int) : float" num="89" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDoublePosition(int) : double" num="95" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="101" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fwd(int) : void" num="107" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bck(int) : void" num="113" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(int,int) : void" num="119" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(long,int) : void" num="125" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(Localizable) : void" num="131" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(int[]) : void" num="137" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(long[]) : void" num="143" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(Localizable) : void" num="149" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(int[]) : void" num="155" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(long[]) : void" num="161" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(int,int) : void" num="167" count="0" type="method"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(long,int) : void" num="173" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRandomAccess() : AbstractConvertedRandomAccess&lt; A, B &gt;" num="182" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/AbstractConvertedRandomAccessible.java" name="AbstractConvertedRandomAccessible.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="71" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="25" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="AbstractConvertedRandomAccessible">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractConvertedRandomAccessible(RandomAccessible&lt; A &gt;)" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="54" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSource() : RandomAccessible&lt; A &gt;" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/AbstractConvertedRandomAccessibleInterval.java" name="AbstractConvertedRandomAccessibleInterval.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="63" coveredmethods="0" methods="1" elements="3" classes="1" ncloc="18" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="AbstractConvertedRandomAccessibleInterval">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractConvertedRandomAccessibleInterval(RandomAccessibleInterval&lt; A &gt;)" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/AbstractConvertedRealRandomAccess.java" name="AbstractConvertedRealRandomAccess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="29" loc="224" coveredmethods="0" methods="29" elements="58" classes="1" ncloc="154" statements="29" conditionals="0" coveredstatements="0"/>
            <class name="AbstractConvertedRealRandomAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="29" coveredmethods="0" methods="29" elements="58" statements="29" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractConvertedRealRandomAccess(RealRandomAccess&lt; A &gt;)" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(float[]) : void" num="54" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(double[]) : void" num="60" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatPosition(int) : float" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDoublePosition(int) : double" num="72" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="78" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fwd(int) : void" num="84" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bck(int) : void" num="90" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(int,int) : void" num="96" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(long,int) : void" num="102" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(Localizable) : void" num="108" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(int[]) : void" num="114" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(long[]) : void" num="120" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(Localizable) : void" num="126" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(int[]) : void" num="132" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(long[]) : void" num="138" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(int,int) : void" num="144" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(long,int) : void" num="150" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRealRandomAccess() : AbstractConvertedRealRandomAccess&lt; A, B &gt;" num="159" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(float,int) : void" num="165" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(double,int) : void" num="171" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(RealLocalizable) : void" num="177" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(float[]) : void" num="183" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(double[]) : void" num="189" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(RealLocalizable) : void" num="195" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(float[]) : void" num="201" count="0" type="method"/>
            <line num="204" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(double[]) : void" num="207" count="0" type="method"/>
            <line num="210" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(float,int) : void" num="213" count="0" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(double,int) : void" num="219" count="0" type="method"/>
            <line num="222" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/AbstractConvertedRealRandomAccessible.java" name="AbstractConvertedRealRandomAccessible.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="70" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="25" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="AbstractConvertedRealRandomAccessible">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractConvertedRealRandomAccessible(RealRandomAccessible&lt; A &gt;)" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="54" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSource() : RealRandomAccessible&lt; A &gt;" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/ChannelARGBConverter.java" name="ChannelARGBConverter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="98" coveredmethods="0" methods="4" elements="12" classes="2" ncloc="40" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="ChannelARGBConverter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="10" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ChannelARGBConverter.Channel">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ChannelARGBConverter(Channel)" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 70()" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="Channel(int)" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="convert(UnsignedByteType,ARGBType) : void" num="93" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/ColorChannelOrder.java" name="ColorChannelOrder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="51" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="13" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="ColorChannelOrder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="ColorChannelOrder(int)" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="channelCount() : int" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/ComplexImaginaryFloatConverter.java" name="ComplexImaginaryFloatConverter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="52" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="ComplexImaginaryFloatConverter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="convert(R,FloatType) : void" num="47" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/ComplexPhaseFloatConverter.java" name="ComplexPhaseFloatConverter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="52" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="ComplexPhaseFloatConverter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="convert(R,FloatType) : void" num="47" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/ComplexPowerFloatConverter.java" name="ComplexPowerFloatConverter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="52" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="ComplexPowerFloatConverter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="convert(R,FloatType) : void" num="47" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/ComplexPowerGLogFloatConverter.java" name="ComplexPowerGLogFloatConverter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="53" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="12" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="ComplexPowerGLogFloatConverter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="convert(R,FloatType) : void" num="48" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/ComplexRealFloatConverter.java" name="ComplexRealFloatConverter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="52" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="ComplexRealFloatConverter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="convert(R,FloatType) : void" num="47" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/CompositeChannelConverter.java" name="CompositeChannelConverter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="63" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="16" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="CompositeChannelConverter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CompositeChannelConverter(long)" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="convert(A,T) : void" num="57" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/Converter.java" name="Converter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="43" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Converter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/Converters.java" name="Converters.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="30" loc="565" coveredmethods="0" methods="23" elements="74" classes="1" ncloc="217" statements="39" conditionals="12" coveredstatements="0"/>
            <class name="Converters">
               <metrics coveredelements="0" coveredconditionals="0" complexity="30" coveredmethods="0" methods="23" elements="74" statements="39" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="convert(RandomAccessible&lt; A &gt;,Converter&lt; ? super A, ? super B &gt;,B) : RandomAccessible&lt; B &gt;" num="94" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="100" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="convert(RandomAccessible&lt; A &gt;,SamplerConverter&lt; ? super A, B &gt;) : WriteConvertedRandomAccessible&lt; A, B &gt;" num="116" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="convert(RandomAccessibleInterval&lt; A &gt;,Converter&lt; ? super A, ? super B &gt;,B) : RandomAccessibleInterval&lt; B &gt;" num="136" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="142" type="cond"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="convertRAI(RandomAccessibleInterval&lt; A &gt;,Converter&lt; ? super A, ? super B &gt;,B) : RandomAccessibleInterval&lt; B &gt;" num="166" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="convert(RandomAccessibleInterval&lt; A &gt;,SamplerConverter&lt; ? super A, B &gt;) : WriteConvertedRandomAccessibleInterval&lt; A, B &gt;" num="185" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="convertRAI(RandomAccessibleInterval&lt; A &gt;,SamplerConverter&lt; ? super A, B &gt;) : WriteConvertedRandomAccessibleInterval&lt; A, B &gt;" num="209" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="convert(IterableInterval&lt; A &gt;,Converter&lt; ? super A, ? super B &gt;,B) : IterableInterval&lt; B &gt;" num="228" count="0" type="method"/>
            <line num="234" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="234" type="cond"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="convert(IterableInterval&lt; A &gt;,SamplerConverter&lt; ? super A, B &gt;) : WriteConvertedIterableInterval&lt; A, B &gt;" num="249" count="0" type="method"/>
            <line num="253" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="convertRandomAccessibleIterableInterval(S,SamplerConverter&lt; ? super A, B &gt;) : WriteConvertedIterableRandomAccessibleInterval&lt; A, B, S &gt;" num="268" count="0" type="method"/>
            <line num="273" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="convert(RealRandomAccessibleRealInterval&lt; A &gt;,Converter&lt; ? super A, ? super B &gt;,B) : RealRandomAccessibleRealInterval&lt; B &gt;" num="289" count="0" type="method"/>
            <line num="295" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="295" type="cond"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="convert(RealRandomAccessible&lt; A &gt;,Converter&lt; ? super A, ? super B &gt;,B) : RealRandomAccessible&lt; B &gt;" num="313" count="0" type="method"/>
            <line num="319" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="319" type="cond"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="argbChannel(RandomAccessibleInterval&lt; ARGBType &gt;,int) : WriteConvertedRandomAccessibleInterval&lt; ARGBType, UnsignedByteType &gt;" num="337" count="0" type="method"/>
            <line num="341" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="argbChannel(RandomAccessible&lt; ARGBType &gt;,int) : WriteConvertedRandomAccessible&lt; ARGBType, UnsignedByteType &gt;" num="359" count="0" type="method"/>
            <line num="363" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="argbChannels(RandomAccessibleInterval&lt; ARGBType &gt;) : RandomAccessibleInterval&lt; UnsignedByteType &gt;" num="381" count="0" type="method"/>
            <line num="383" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="argbChannels(RandomAccessibleInterval&lt; ARGBType &gt;,int) : RandomAccessibleInterval&lt; UnsignedByteType &gt;" num="405" count="0" type="method"/>
            <line num="407" count="0" type="stmt"/>
            <line num="408" count="0" type="stmt"/>
            <line num="409" count="0" type="stmt"/>
            <line num="411" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mergeARGB(RandomAccessible&lt; UnsignedByteType &gt;,ColorChannelOrder) : RandomAccessible&lt; ARGBType &gt;" num="423" count="0" type="method"/>
            <line num="424" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="mergeARGB(RandomAccessibleInterval&lt; UnsignedByteType &gt;,ColorChannelOrder) : RandomAccessibleInterval&lt; ARGBType &gt;" num="436" count="0" type="method"/>
            <line num="437" count="0" type="stmt"/>
            <line num="438" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="438" type="cond"/>
            <line num="439" count="0" type="stmt"/>
            <line num="440" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="composeReal(List&lt; RandomAccessibleInterval&lt; A &gt; &gt;,Converter&lt; RealComposite&lt; A &gt;, B &gt;,B) : RandomAccessibleInterval&lt; B &gt;" num="454" count="0" type="method"/>
            <line num="459" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="composeReal(List&lt; RandomAccessibleInterval&lt; A &gt; &gt;,Converter&lt; RealComposite&lt; A &gt;, B &gt;,Supplier&lt; B &gt;) : RandomAccessibleInterval&lt; B &gt;" num="476" count="0" type="method"/>
            <line num="481" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="composeNumeric(List&lt; RandomAccessibleInterval&lt; A &gt; &gt;,Converter&lt; NumericComposite&lt; A &gt;, B &gt;,B) : RandomAccessibleInterval&lt; B &gt;" num="495" count="0" type="method"/>
            <line num="500" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="composeNumeric(List&lt; RandomAccessibleInterval&lt; A &gt; &gt;,Converter&lt; NumericComposite&lt; A &gt;, B &gt;,Supplier&lt; B &gt;) : RandomAccessibleInterval&lt; B &gt;" num="517" count="0" type="method"/>
            <line num="522" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compose(List&lt; RandomAccessibleInterval&lt; A &gt; &gt;,Converter&lt; Composite&lt; A &gt;, B &gt;,B) : RandomAccessibleInterval&lt; B &gt;" num="536" count="0" type="method"/>
            <line num="541" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compose(List&lt; RandomAccessibleInterval&lt; A &gt; &gt;,Converter&lt; Composite&lt; A &gt;, B &gt;,Supplier&lt; B &gt;) : RandomAccessibleInterval&lt; B &gt;" num="558" count="0" type="method"/>
            <line num="563" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/RealARGBConverter.java" name="RealARGBConverter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="79" coveredmethods="0" methods="5" elements="13" classes="1" ncloc="32" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="RealARGBConverter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="13" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RealARGBConverter()" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RealARGBConverter(double,double)" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="convert(R,ARGBType) : void" num="61" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setAlpha(int) : void" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAlpha() : int" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/RealDoubleConverter.java" name="RealDoubleConverter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="55" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="RealDoubleConverter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="convert(R,DoubleType) : void" num="50" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/RealFloatConverter.java" name="RealFloatConverter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="53" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="RealFloatConverter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="convert(R,FloatType) : void" num="48" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/RealLUTConverter.java" name="RealLUTConverter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="91" coveredmethods="0" methods="5" elements="15" classes="1" ncloc="37" statements="8" conditionals="2" coveredstatements="0"/>
            <class name="RealLUTConverter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="5" elements="15" statements="8" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RealLUTConverter()" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RealLUTConverter(double,double,ColorTable)" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLUT() : ColorTable" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setLUT(ColorTable) : void" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line complexity="1" visibility="public" signature="convert(R,ARGBType) : void" num="83" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/RealTypeConverterInternals.java" name="RealTypeConverterInternals.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="33" loc="214" coveredmethods="0" methods="14" elements="67" classes="9" ncloc="133" statements="35" conditionals="18" coveredstatements="0"/>
            <class name="RealTypeConverterInternals">
               <metrics coveredelements="0" coveredconditionals="0" complexity="24" coveredmethods="0" methods="5" elements="49" statements="26" conditionals="18" coveredstatements="0"/>
            </class>
            <class name="RealTypeConverterInternals.ConverterFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RealTypeConverterInternals.DoubleConverter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RealTypeConverterInternals.FloatConverter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RealTypeConverterInternals.IntegerConverter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RealTypeConverterInternals.LongConverter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RealTypeConverterInternals.ByteConverter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RealTypeConverterInternals.ShortConverter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RealTypeConverterInternals.BooleanConverter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="getConverter(S,T) : Converter&lt; S, T &gt;" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="getConverterFactory(RealType&lt; ? &gt;,RealType&lt; ? &gt;) : ConverterFactory" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="floatingPointConverterFactory(RealType&lt; ? &gt;,RealType&lt; ? &gt;) : ConverterFactory" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="15" visibility="private" signature="integerConverterFactory(RealType&lt; ? &gt;,RealType&lt; ? &gt;) : ConverterFactory" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="smallerThanInt(RealType&lt; ? &gt;) : boolean" num="111" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="ConverterFactory(Class&lt; ? extends Converter &gt;)" num="127" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(RealType&lt; ? &gt;,RealType&lt; ? &gt;) : Converter" num="132" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="convert(RealType&lt; ? &gt;,RealType&lt; ? &gt;) : void" num="142" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="convert(RealType&lt; ? &gt;,RealType&lt; ? &gt;) : void" num="153" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="convert(IntegerType&lt; ? &gt;,IntegerType&lt; ? &gt;) : void" num="164" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="convert(IntegerType&lt; ? &gt;,IntegerType&lt; ? &gt;) : void" num="175" count="0" type="method"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="convert(GenericByteType&lt; ? &gt;,GenericByteType&lt; ? &gt;) : void" num="186" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="convert(GenericShortType&lt; ? &gt;,GenericShortType&lt; ? &gt;) : void" num="197" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="convert(BooleanType&lt; ? &gt;,BooleanType&lt; ? &gt;) : void" num="208" count="0" type="method"/>
            <line num="211" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/RealTypeConverters.java" name="RealTypeConverters.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="130" coveredmethods="0" methods="4" elements="13" classes="1" ncloc="42" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="RealTypeConverters">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="13" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="RealTypeConverters()" num="53" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="copyFromTo(RandomAccessible&lt; ? extends RealType&lt; ? &gt; &gt;,RandomAccessibleInterval&lt; ? extends RealType&lt; ? &gt; &gt;) : void" num="70" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="convert(RandomAccessibleInterval&lt; ? extends RealType&lt; ? &gt; &gt;,T) : RandomAccessibleInterval&lt; T &gt;" num="99" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConverter(S,T) : Converter&lt; S, T &gt;" num="125" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/RealUnsignedByteConverter.java" name="RealUnsignedByteConverter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="64" coveredmethods="0" methods="3" elements="7" classes="1" ncloc="21" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="RealUnsignedByteConverter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RealUnsignedByteConverter()" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RealUnsignedByteConverter(double,double)" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="convert(R,UnsignedByteType) : void" num="58" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/RealUnsignedShortConverter.java" name="RealUnsignedShortConverter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="64" coveredmethods="0" methods="3" elements="7" classes="1" ncloc="21" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="RealUnsignedShortConverter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RealUnsignedShortConverter()" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RealUnsignedShortConverter(double,double)" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="convert(R,UnsignedShortType) : void" num="58" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/TypeIdentity.java" name="TypeIdentity.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="51" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="TypeIdentity">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="convert(T,T) : void" num="46" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/VolatileRealTypeARGBConverter.java" name="VolatileRealTypeARGBConverter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="80" coveredmethods="0" methods="5" elements="16" classes="1" ncloc="33" statements="9" conditionals="2" coveredstatements="0"/>
            <class name="VolatileRealTypeARGBConverter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="5" elements="16" statements="9" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="VolatileRealTypeARGBConverter(ARGBType)" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileRealTypeARGBConverter()" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileRealTypeARGBConverter(double,double,ARGBType)" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileRealTypeARGBConverter(double,double)" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="convert(VolatileRealType&lt; ? &gt;,ARGBType) : void" num="71" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/converter/AbstractConvertedRandomAccessibleIntervalTest.java" name="AbstractConvertedRandomAccessibleIntervalTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="114" coveredmethods="0" methods="6" elements="21" classes="1" ncloc="59" statements="13" conditionals="2" coveredstatements="0"/>
            <class name="AbstractConvertedRandomAccessibleIntervalTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="6" elements="21" statements="13" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 62()" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="test() : void" num="67" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess() : AbstractConvertedRandomAccess&lt; DoubleType, DoubleType &gt;" num="73" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : DoubleType" num="81" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : AbstractConvertedRandomAccess&lt; DoubleType, DoubleType &gt;" num="89" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess(Interval) : AbstractConvertedRandomAccess&lt; DoubleType, DoubleType &gt;" num="97" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/converter/ConvertersTest.java" name="ConvertersTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="167" coveredmethods="0" methods="7" elements="68" classes="1" ncloc="101" statements="57" conditionals="4" coveredstatements="0"/>
            <class name="ConvertersTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="7" elements="68" statements="57" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 61()" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="&lt;init&gt;, line 66()" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testArgbChannels() : void" num="71" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMergeARBGReading() : void" num="126" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMergeARBGWriting() : void" num="134" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMergeRGBReading() : void" num="147" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMergbeRGBWriting() : void" num="155" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/converter/RealTypeConverterInternalsTest.java" name="RealTypeConverterInternalsTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="12" loc="204" coveredmethods="0" methods="11" elements="63" classes="1" ncloc="143" statements="50" conditionals="2" coveredstatements="0"/>
            <class name="RealTypeConverterInternalsTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="12" coveredmethods="0" methods="11" elements="63" statements="50" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testConvertUnsignedByteToFloatType() : void" num="96" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConvertImportantValuesBetweenAllTypes() : void" num="106" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="testMinValueConversion(Converter&lt; RealType&lt; ? &gt;, RealType&lt; ? &gt; &gt;,RealType&lt; ? &gt;,RealType&lt; ? &gt;) : void" num="120" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="testMaxValueConversion(Converter&lt; RealType&lt; ? &gt;, RealType&lt; ? &gt; &gt;,RealType&lt; ? &gt;,RealType&lt; ? &gt;) : void" num="126" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="decreaseMaxValue(double) : double" num="134" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="141" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="testValueConversion(double,Converter&lt; RealType&lt; ? &gt;, RealType&lt; ? &gt; &gt;,RealType&lt; ? &gt;,RealType&lt; ? &gt;) : void" num="146" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSmallerThanInt() : void" num="157" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTypeIdentityConverters() : void" num="167" count="0" type="method"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOptimalConverterTypes() : void" num="174" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConvertRandomAccessibleInterval() : void" num="191" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="testConverterType(RealType&lt; ? &gt;,RealType&lt; ? &gt;,Class&lt; ? extends Converter &gt;) : void" num="199" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/converter/RealTypeConvertersBenchmark.java" name="RealTypeConvertersBenchmark.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="117" coveredmethods="0" methods="3" elements="10" classes="1" ncloc="64" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="RealTypeConvertersBenchmark">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="10" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setup() : void" num="88" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="converter() : void" num="96" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String) : void" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/converter/RealTypeConvertersTest.java" name="RealTypeConvertersTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="89" coveredmethods="0" methods="4" elements="20" classes="1" ncloc="43" statements="16" conditionals="0" coveredstatements="0"/>
            <class name="RealTypeConvertersTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="20" statements="16" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testGetConverter() : void" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConvert() : void" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCopy() : void" num="72" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCopyWithTypeConversion() : void" num="81" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.parallel">
         <metrics coveredelements="0" complexity="126" loc="1705" methods="100" classes="14" statements="243" coveredconditionals="0" coveredmethods="0" elements="361" ncloc="832" files="12" conditionals="18" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/parallel/DefaultTaskExecutor.java" name="DefaultTaskExecutor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="20" loc="183" coveredmethods="0" methods="11" elements="77" classes="1" ncloc="124" statements="52" conditionals="14" coveredstatements="0"/>
            <class name="DefaultTaskExecutor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="20" coveredmethods="0" methods="11" elements="77" statements="52" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DefaultTaskExecutor(ExecutorService)" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExecutorService() : ExecutorService" num="62" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getParallelism() : int" num="68" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="runAll(List&lt; Runnable &gt;) : void" num="82" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="suggestNumberOfTasks() : int" num="92" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="96" type="cond"/>
            <line complexity="1" visibility="public" signature="forEach(List&lt; ? extends T &gt;,Consumer&lt; ? super T &gt;) : void" num="99" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="forEachApply(List&lt; ? extends T &gt;,Function&lt; ? super T, ? extends R &gt;) : List&lt; R &gt;" num="112" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="invokeAllIgnoreResults(List&lt; Callable&lt; Object &gt; &gt;) : void" num="133" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="unwrapExecutionException(Throwable) : RuntimeException" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="161" type="cond"/>
            <line num="162" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="concatenate(T[],T[]) : T[]" num="167" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="close() : void" num="178" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/parallel/ForkJoinExecutorService.java" name="ForkJoinExecutorService.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="166" coveredmethods="0" methods="13" elements="32" classes="1" ncloc="85" statements="17" conditionals="2" coveredstatements="0"/>
            <class name="ForkJoinExecutorService">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="13" elements="32" statements="17" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="getParallelism() : int" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="shutdown() : void" num="77" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="shutdownNow() : List&lt; Runnable &gt;" num="82" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isShutdown() : boolean" num="88" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isTerminated() : boolean" num="94" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="awaitTermination(long,TimeUnit) : boolean" num="100" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invokeAll(Collection&lt; ? extends Callable&lt; T &gt; &gt;) : List&lt; Future&lt; T &gt; &gt;" num="112" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invokeAll(Collection&lt; ? extends Callable&lt; T &gt; &gt;,long,TimeUnit) : List&lt; Future&lt; T &gt; &gt;" num="130" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="submit(Runnable) : Future&lt; ? &gt;" num="137" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="submit(Runnable,T) : Future&lt; T &gt;" num="143" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="submit(Callable&lt; T &gt;) : Future&lt; T &gt;" num="149" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="execute(Runnable) : void" num="155" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getPool() : ForkJoinPool" num="161" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/parallel/Parallelization.java" name="Parallelization.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="23" loc="269" coveredmethods="0" methods="14" elements="38" classes="2" ncloc="85" statements="24" conditionals="0" coveredstatements="0"/>
            <class name="Parallelization">
               <metrics coveredelements="0" coveredconditionals="0" complexity="23" coveredmethods="0" methods="14" elements="38" statements="24" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Parallelization.Frame">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="Parallelization()" num="85" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getTaskExecutor() : TaskExecutor" num="97" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExecutorService() : ExecutorService" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="runSingleThreaded(Runnable) : void" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="runSingleThreaded(Callable&lt; T &gt;) : T" num="124" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="runMultiThreaded(Runnable) : void" num="134" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="runMultiThreaded(Callable&lt; T &gt;) : T" num="144" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="runWithNumThreads(int,Runnable) : void" num="154" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="runWithNumThreads(int,Callable&lt; R &gt;) : R" num="167" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="runWithExecutor(ExecutorService,Runnable) : void" num="179" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="runWithExecutor(ExecutorService,Callable&lt; R &gt;) : R" num="188" count="0" type="method"/>
            <line num="190" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="runWithExecutor(TaskExecutor,Runnable) : void" num="197" count="0" type="method"/>
            <line num="199" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="runWithExecutor(TaskExecutor,Callable&lt; T &gt;) : T" num="209" count="0" type="method"/>
            <line num="211" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="setExecutorRequiresReset(TaskExecutor) : Frame" num="256" count="0" type="method"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/parallel/SequentialExecutorService.java" name="SequentialExecutorService.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="88" coveredmethods="0" methods="7" elements="13" classes="1" ncloc="43" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="SequentialExecutorService">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="13" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="getParallelism() : int" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="shutdown() : void" num="52" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="shutdownNow() : List&lt; Runnable &gt;" num="58" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isShutdown() : boolean" num="64" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isTerminated() : boolean" num="70" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="awaitTermination(long,TimeUnit) : boolean" num="76" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="execute(Runnable) : void" num="83" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/parallel/SequentialTaskExecutor.java" name="SequentialTaskExecutor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="110" coveredmethods="0" methods="9" elements="22" classes="1" ncloc="60" statements="13" conditionals="0" coveredstatements="0"/>
            <class name="SequentialTaskExecutor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="9" elements="22" statements="13" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="SequentialTaskExecutor()" num="51" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getInstance() : TaskExecutor" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExecutorService() : ExecutorService" num="61" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="suggestNumberOfTasks() : int" num="67" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParallelism() : int" num="73" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="runAll(List&lt; Runnable &gt;) : void" num="79" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="forEach(List&lt; ? extends T &gt;,Consumer&lt; ? super T &gt;) : void" num="86" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="forEachApply(List&lt; ? extends T &gt;,Function&lt; ? super T, ? extends R &gt;) : List&lt; R &gt;" num="93" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="close() : void" num="105" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/parallel/TaskExecutor.java" name="TaskExecutor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="119" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="17" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TaskExecutor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/parallel/TaskExecutors.java" name="TaskExecutors.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="174" coveredmethods="0" methods="13" elements="31" classes="1" ncloc="76" statements="18" conditionals="0" coveredstatements="0"/>
            <class name="TaskExecutors">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="13" elements="31" statements="18" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="TaskExecutors()" num="48" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="singleThreaded() : TaskExecutor" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="multiThreaded() : TaskExecutor" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numThreads(int) : TaskExecutor" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="forExecutorService(ExecutorService) : TaskExecutor" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="forExecutorServiceAndNumThreads(ExecutorService,int) : TaskExecutor" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParallelism() : int" num="99" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="forExecutorServiceAndNumTasks(ExecutorService,int) : TaskExecutor" num="111" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="suggestNumberOfTasks() : int" num="115" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fixedThreadPool(int) : TaskExecutor" num="127" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="nestedFixedThreadPool(int,int) : TaskExecutor" num="143" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="threadFactory(Supplier&lt; TaskExecutor &gt;) : ThreadFactory" num="154" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="applyTaskExecutorToThreadFactory(Supplier&lt; TaskExecutor &gt;,ThreadFactory) : ThreadFactory" num="165" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/parallel/DefaultTaskExecutorTest.java" name="DefaultTaskExecutorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="142" coveredmethods="0" methods="9" elements="38" classes="2" ncloc="88" statements="29" conditionals="0" coveredstatements="0"/>
            <class name="DefaultTaskExecutorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="9" elements="38" statements="29" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="DefaultTaskExecutorTest.DummyException">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testGetParallelism() : void" num="61" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="testGetParallelism(int,ExecutorService) : void" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSuggestNumberOfTasks() : void" num="77" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testForEach() : void" num="84" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testForEachApply() : void" num="93" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunAll() : void" num="101" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testExceptionHandling() : void" num="112" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertStackTraceContainsMethod(Exception,String) : void" num="127" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="throwDummyException() : void" num="133" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/parallel/ParallelizationBenchmark.java" name="ParallelizationBenchmark.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="162" coveredmethods="0" methods="10" elements="40" classes="1" ncloc="104" statements="28" conditionals="2" coveredstatements="0"/>
            <class name="ParallelizationBenchmark">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="10" elements="40" statements="28" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="private" signature="calculateSum(RandomAccessibleInterval&lt; IntType &gt;) : long" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="simpleCalculateSum(RandomAccessibleInterval&lt; IntType &gt;) : long" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="slices(RandomAccessibleInterval&lt; IntType &gt;) : List&lt; RandomAccessibleInterval&lt; IntType &gt; &gt;" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fixedThreadPool() : Long" num="111" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="twoThreadsForkJoinPool() : Long" num="122" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="multiThreaded() : Long" num="131" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="singleThreaded() : Long" num="137" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="defaultBehavior() : Long" num="143" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="singleThreadedBaseline() : Long" num="149" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String) : void" num="155" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/parallel/ParallelizationDemo.java" name="ParallelizationDemo.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="88" coveredmethods="0" methods="3" elements="21" classes="1" ncloc="41" statements="18" conditionals="0" coveredstatements="0"/>
            <class name="ParallelizationDemo">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="3" elements="21" statements="18" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="main(String) : void" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="exampleAlgorithm() : void" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="waitOneSecond() : void" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/parallel/ParallelizationTest.java" name="ParallelizationTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="102" coveredmethods="0" methods="5" elements="22" classes="1" ncloc="55" statements="17" conditionals="0" coveredstatements="0"/>
            <class name="ParallelizationTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="5" elements="22" statements="17" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testSingleThreaded() : void" num="56" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSingleThreadedWithRunnable() : void" num="64" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMultiThreaded() : void" num="73" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWithExecutor() : void" num="82" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testSetExecutorService() : void" num="91" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/parallel/TaskExecutorsTest.java" name="TaskExecutorsTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="102" coveredmethods="0" methods="6" elements="27" classes="1" ncloc="54" statements="21" conditionals="0" coveredstatements="0"/>
            <class name="TaskExecutorsTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="27" statements="21" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testSingleThreaded() : void" num="52" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMultiThreaded() : void" num="59" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNumThreads() : void" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testForExecutorService() : void" num="74" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testForExecutorServiceAndNumThreads() : void" num="83" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testForExecutorServiceAndNumTasks() : void" num="93" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.img.basictypeaccess">
         <metrics coveredelements="0" complexity="52" loc="726" methods="11" classes="11" statements="40" coveredconditionals="0" coveredmethods="0" elements="117" ncloc="250" files="11" conditionals="66" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/AccessFlags.java" name="AccessFlags.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="104" coveredmethods="0" methods="6" elements="39" classes="1" ncloc="54" statements="15" conditionals="18" coveredstatements="0"/>
            <class name="AccessFlags">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="6" elements="39" statements="15" conditionals="18" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ofAccess(Object) : Set&lt; AccessFlags &gt;" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setOf() : Set&lt; AccessFlags &gt;" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setOf(AccessFlags) : Set&lt; AccessFlags &gt;" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line complexity="4" visibility="public" signature="setOf(AccessFlags,AccessFlags) : Set&lt; AccessFlags &gt;" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line complexity="3" visibility="public" signature="setOf(AccessFlags) : Set&lt; AccessFlags &gt;" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="fromBooleansDirtyVolatile(boolean,boolean) : Set&lt; AccessFlags &gt;" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line falsecount="0" truecount="0" num="96" type="cond"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/ArrayDataAccessFactory.java" name="ArrayDataAccessFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="37" loc="190" coveredmethods="0" methods="5" elements="78" classes="1" ncloc="142" statements="25" conditionals="48" coveredstatements="0"/>
            <class name="ArrayDataAccessFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="37" coveredmethods="0" methods="5" elements="78" statements="25" conditionals="48" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="get(T) : A" num="87" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(T,Set&lt; AccessFlags &gt;) : A" num="93" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(NativeTypeFactory&lt; ?, ? super A &gt;) : A" num="100" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(NativeTypeFactory&lt; ?, ? super A &gt;,Set&lt; AccessFlags &gt;) : A" num="106" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="33" visibility="public" signature="get(PrimitiveType,Set&lt; AccessFlags &gt;) : A" num="113" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line falsecount="0" truecount="0" num="127" type="cond"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="131" type="cond"/>
            <line falsecount="0" truecount="0" num="132" type="cond"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line falsecount="0" truecount="0" num="140" type="cond"/>
            <line falsecount="0" truecount="0" num="143" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="147" type="cond"/>
            <line falsecount="0" truecount="0" num="148" type="cond"/>
            <line falsecount="0" truecount="0" num="151" type="cond"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line falsecount="0" truecount="0" num="159" type="cond"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
            <line falsecount="0" truecount="0" num="167" type="cond"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="171" type="cond"/>
            <line falsecount="0" truecount="0" num="172" type="cond"/>
            <line falsecount="0" truecount="0" num="175" type="cond"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="179" type="cond"/>
            <line falsecount="0" truecount="0" num="180" type="cond"/>
            <line falsecount="0" truecount="0" num="183" type="cond"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/BooleanAccess.java" name="BooleanAccess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="47" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="BooleanAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/ByteAccess.java" name="ByteAccess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="48" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ByteAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/CharAccess.java" name="CharAccess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="48" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="CharAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/DoubleAccess.java" name="DoubleAccess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="48" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="DoubleAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/FloatAccess.java" name="FloatAccess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="48" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FloatAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/IntAccess.java" name="IntAccess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="48" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="IntAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/LongAccess.java" name="LongAccess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="48" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="LongAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/PlanarAccess.java" name="PlanarAccess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="49" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="PlanarAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/basictypeaccess/ShortAccess.java" name="ShortAccess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="48" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ShortAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.imglib2.img.sparse">
         <metrics coveredelements="0" complexity="170" loc="1834" methods="119" classes="17" statements="300" coveredconditionals="0" coveredmethods="0" elements="505" ncloc="908" files="15" conditionals="86" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/sparse/BooleanNtree.java" name="BooleanNtree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="84" coveredmethods="0" methods="6" elements="14" classes="1" ncloc="34" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="BooleanNtree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="14" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="BooleanNtree(long[],long[],boolean)" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="BooleanNtree(Ntree&lt; Boolean &gt;,long[])" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(int) : boolean" num="61" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(int,boolean) : void" num="67" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrentStorageNtree() : Ntree&lt; Boolean &gt;" num="73" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createInstance(long[]) : BooleanNtree" num="79" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/sparse/ByteNtree.java" name="ByteNtree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="88" coveredmethods="0" methods="6" elements="14" classes="1" ncloc="37" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="ByteNtree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="14" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ByteNtree(long[],long[],byte)" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="ByteNtree(Ntree&lt; Byte &gt;,long[])" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(int) : byte" num="63" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(int,byte) : void" num="70" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrentStorageNtree() : Ntree&lt; Byte &gt;" num="77" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createInstance(long[]) : ByteNtree" num="83" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/sparse/CharNtree.java" name="CharNtree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="88" coveredmethods="0" methods="6" elements="14" classes="1" ncloc="37" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="CharNtree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="14" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CharNtree(long[],long[],char)" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="CharNtree(Ntree&lt; Character &gt;,long[])" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(int) : char" num="63" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(int,char) : void" num="70" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrentStorageNtree() : Ntree&lt; Character &gt;" num="77" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createInstance(long[]) : CharNtree" num="83" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/sparse/DoubleNtree.java" name="DoubleNtree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="88" coveredmethods="0" methods="6" elements="14" classes="1" ncloc="37" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="DoubleNtree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="14" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="DoubleNtree(long[],long[],double)" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="DoubleNtree(Ntree&lt; Double &gt;,long[])" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(int) : double" num="63" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(int,double) : void" num="70" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrentStorageNtree() : Ntree&lt; Double &gt;" num="77" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createInstance(long[]) : DoubleNtree" num="83" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/sparse/FloatNtree.java" name="FloatNtree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="89" coveredmethods="0" methods="6" elements="14" classes="1" ncloc="37" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="FloatNtree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="14" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="FloatNtree(long[],long[],float)" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="FloatNtree(Ntree&lt; Float &gt;,long[])" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(int) : float" num="64" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(int,float) : void" num="71" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrentStorageNtree() : Ntree&lt; Float &gt;" num="78" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createInstance(long[]) : FloatNtree" num="84" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/sparse/IntNtree.java" name="IntNtree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="99" coveredmethods="0" methods="6" elements="14" classes="1" ncloc="37" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="IntNtree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="14" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="IntNtree(long[],long[],int)" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="IntNtree(Ntree&lt; Integer &gt;,long[])" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(int) : int" num="74" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(int,int) : void" num="81" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrentStorageNtree() : Ntree&lt; Integer &gt;" num="88" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createInstance(long[]) : IntNtree" num="94" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/sparse/LongNtree.java" name="LongNtree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="97" coveredmethods="0" methods="6" elements="14" classes="1" ncloc="37" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="LongNtree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="14" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LongNtree(long[],long[],long)" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LongNtree(Ntree&lt; Long &gt;,long[])" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(int) : long" num="72" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(int,long) : void" num="79" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrentStorageNtree() : Ntree&lt; Long &gt;" num="86" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createInstance(long[]) : LongNtree" num="92" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/sparse/Ntree.java" name="Ntree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="38" loc="308" coveredmethods="0" methods="14" elements="142" classes="2" ncloc="158" statements="82" conditionals="46" coveredstatements="0"/>
            <class name="Ntree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="32" coveredmethods="0" methods="8" elements="129" statements="75" conditionals="46" coveredstatements="0"/>
            </class>
            <class name="Ntree.NtreeNode">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="NtreeNode(NtreeNode&lt; T &gt;,T)" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="hasChildren() : boolean" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : T" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(T) : void" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getChildren() : NtreeNode&lt; T &gt;[]" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setChildren(NtreeNode&lt; T &gt;[]) : void" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="Ntree(long[],T)" num="122" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="132" type="cond"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="copyRecursively(NtreeNode&lt; T &gt;,NtreeNode&lt; T &gt;) : NtreeNode&lt; T &gt;" num="145" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="149" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="152" type="cond"/>
            <line num="154" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="Ntree(Ntree&lt; T &gt;)" num="163" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="5" visibility="package" signature="getNode(long[]) : NtreeNode&lt; T &gt;" num="181" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="184" type="cond"/>
            <line num="186" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="186" type="cond"/>
            <line num="187" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="191" type="cond"/>
            <line num="192" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="192" type="cond"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line complexity="6" visibility="package" signature="createNode(long[]) : NtreeNode&lt; T &gt;" num="207" count="0" type="method"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="211" type="cond"/>
            <line num="213" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="213" type="cond"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="216" type="cond"/>
            <line num="217" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="222" type="cond"/>
            <line num="223" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="223" type="cond"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line complexity="8" visibility="package" signature="createNodeWithValue(long[],T) : NtreeNode&lt; T &gt;" num="242" count="0" type="method"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="246" type="cond"/>
            <line num="248" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="248" type="cond"/>
            <line num="250" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="250" type="cond"/>
            <line num="251" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="254" type="cond"/>
            <line num="255" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="260" type="cond"/>
            <line num="261" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="261" type="cond"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="265" type="cond"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line complexity="6" visibility="package" signature="mergeUpwards(NtreeNode&lt; T &gt;) : NtreeNode&lt; T &gt;" num="280" count="0" type="method"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="283" type="cond"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="286" type="cond"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="288" type="cond"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="291" type="cond"/>
            <line num="292" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRootNode() : NtreeNode&lt; T &gt;" num="304" count="0" type="method"/>
            <line num="306" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/sparse/NtreeAccess.java" name="NtreeAccess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="43" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="NtreeAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/sparse/NtreeCursor.java" name="NtreeCursor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="114" coveredmethods="0" methods="8" elements="31" classes="1" ncloc="59" statements="19" conditionals="4" coveredstatements="0"/>
            <class name="NtreeCursor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="8" elements="31" statements="19" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="NtreeCursor(NtreeImg&lt; T, ? &gt;)" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="NtreeCursor(NtreeCursor&lt; T &gt;)" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="80" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : T" num="86" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="93" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="copy() : NtreeCursor&lt; T &gt;" num="97" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyCursor() : NtreeCursor&lt; T &gt;" num="103" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPosition() : long[]" num="109" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/sparse/NtreeImg.java" name="NtreeImg.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="130" coveredmethods="0" methods="9" elements="27" classes="2" ncloc="67" statements="16" conditionals="2" coveredstatements="0"/>
            <class name="NtreeImg">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="9" elements="27" statements="16" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="NtreeImg.PositionProvider">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="NtreeImg(A,long[],Fraction)" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="NtreeImg(NtreeImg&lt; T, A &gt;)" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="update(Object) : A" num="79" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess() : NtreeRandomAccess&lt; T &gt;" num="85" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cursor() : NtreeCursor&lt; T &gt;" num="91" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localizingCursor() : NtreeCursor&lt; T &gt;" num="97" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="factory() : ImgFactory&lt; T &gt;" num="103" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="copy() : NtreeImg&lt; T, A &gt;" num="109" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="119" type="cond"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterationOrder() : FlatIterationOrder" num="125" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/sparse/NtreeImgFactory.java" name="NtreeImgFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="18" loc="156" coveredmethods="0" methods="9" elements="48" classes="1" ncloc="91" statements="35" conditionals="4" coveredstatements="0"/>
            <class name="NtreeImgFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="18" coveredmethods="0" methods="9" elements="48" statements="35" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="NtreeImgFactory(T)" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(long) : NtreeImg&lt; T, ? &gt;" num="58" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(Dimensions) : NtreeImg&lt; T, ? &gt;" num="64" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(int[]) : NtreeImg&lt; T, ? &gt;" num="70" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="create(long[],T,NativeTypeFactory&lt; T, A &gt;) : NtreeImg&lt; T, ? &gt;" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="createNtreeAccess(NativeTypeFactory&lt; ?, ? super A &gt;,long[]) : A" num="95" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="imgFactory(S) : ImgFactory&lt; S &gt;" num="121" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="NtreeImgFactory()" num="142" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(long[],T) : NtreeImg&lt; T, ? &gt;" num="148" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/sparse/NtreeRandomAccess.java" name="NtreeRandomAccess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="43" loc="266" coveredmethods="0" methods="28" elements="114" classes="1" ncloc="187" statements="56" conditionals="30" coveredstatements="0"/>
            <class name="NtreeRandomAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="43" coveredmethods="0" methods="28" elements="114" statements="56" conditionals="30" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="NtreeRandomAccess(NtreeImg&lt; T, ? &gt;)" num="57" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="NtreeRandomAccess(NtreeRandomAccess&lt; T &gt;)" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fwd(int) : void" num="84" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bck(int) : void" num="90" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(long,int) : void" num="96" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(int[]) : void" num="102" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(long[]) : void" num="109" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(long,int) : void" num="116" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="122" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : NtreeRandomAccess&lt; T &gt;" num="128" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRandomAccess() : NtreeRandomAccess&lt; T &gt;" num="134" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPosition() : long[]" num="140" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(int,int) : void" num="146" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(int,int) : void" num="152" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="move(int[]) : void" num="158" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="161" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="165" type="cond"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="move(long[]) : void" num="170" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="175" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="177" type="cond"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="move(Localizable) : void" num="182" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="185" type="cond"/>
            <line num="187" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="189" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(Localizable) : void" num="194" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="197" type="cond"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(float[]) : void" num="203" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="206" type="cond"/>
            <line num="207" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(double[]) : void" num="210" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="213" type="cond"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(int[]) : void" num="217" count="0" type="method"/>
            <line num="220" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="220" type="cond"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(long[]) : void" num="224" count="0" type="method"/>
            <line num="227" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="227" type="cond"/>
            <line num="228" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatPosition(int) : float" num="231" count="0" type="method"/>
            <line num="234" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDoublePosition(int) : double" num="237" count="0" type="method"/>
            <line num="240" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntPosition(int) : int" num="243" count="0" type="method"/>
            <line num="246" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLongPosition(int) : long" num="249" count="0" type="method"/>
            <line num="252" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="255" count="0" type="method"/>
            <line num="258" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="261" count="0" type="method"/>
            <line num="264" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/sparse/ShortNtree.java" name="ShortNtree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="87" coveredmethods="0" methods="6" elements="14" classes="1" ncloc="37" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="ShortNtree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="14" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ShortNtree(long[],long[],short)" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ShortNtree(Ntree&lt; Short &gt;,long[])" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(int) : short" num="62" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(int,short) : void" num="69" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCurrentStorageNtree() : Ntree&lt; Short &gt;" num="76" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createInstance(long[]) : ShortNtree" num="82" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/img/sparse/NtreeTest.java" name="NtreeTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="97" coveredmethods="0" methods="3" elements="31" classes="1" ncloc="47" statements="28" conditionals="0" coveredstatements="0"/>
            <class name="NtreeTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="31" statements="28" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test_getNode() : void" num="48" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_createNote() : void" num="60" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test_mergeUpwards() : void" num="79" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.type.label">
         <metrics coveredelements="0" complexity="54" loc="397" methods="38" classes="3" statements="90" coveredconditionals="0" coveredmethods="0" elements="128" ncloc="259" files="2" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/label/BasePairBitType.java" name="BasePairBitType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="29" loc="196" coveredmethods="0" methods="18" elements="68" classes="2" ncloc="128" statements="50" conditionals="0" coveredstatements="0"/>
            <class name="BasePairBitType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="20" coveredmethods="0" methods="15" elements="48" statements="33" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="BasePairBitType.Base">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="3" elements="20" statements="17" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="Base(char)" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getChar() : char" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="fromChar(char) : Base" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BasePairBitType(NativeImg&lt; ?, ? extends LongAccess &gt;)" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BasePairBitType(Base)" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BasePairBitType()" num="112" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="duplicateTypeOnSameNativeImg() : BasePairBitType" num="117" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNativeTypeFactory() : NativeTypeFactory&lt; BasePairBitType, LongAccess &gt;" num="122" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(Base) : void" num="128" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : Base" num="134" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compareTo(BasePairBitType) : int" num="140" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="complement() : void" num="146" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="baseToValue() : byte" num="161" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(BasePairBitType) : void" num="167" count="0" type="method"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createVariable() : BasePairBitType" num="173" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : BasePairBitType" num="179" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="185" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="valueEquals(BasePairBitType) : boolean" num="191" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/label/BasePairCharType.java" name="BasePairCharType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="25" loc="201" coveredmethods="0" methods="20" elements="60" classes="1" ncloc="131" statements="40" conditionals="0" coveredstatements="0"/>
            <class name="BasePairCharType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="25" coveredmethods="0" methods="20" elements="60" statements="40" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="getEntitiesPerPixel() : Fraction" num="55" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BasePairCharType(NativeImg&lt; ?, ? extends CharAccess &gt;)" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BasePairCharType(Base)" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BasePairCharType(char)" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BasePairCharType()" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="updateContainer(Object) : void" num="94" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="duplicateTypeOnSameNativeImg() : BasePairCharType" num="100" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNativeTypeFactory() : NativeTypeFactory&lt; BasePairCharType, CharAccess &gt;" num="108" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getChar() : char" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setChar(char) : void" num="119" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(Base) : void" num="124" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : Base" num="130" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(BasePairCharType) : void" num="136" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compareTo(BasePairCharType) : int" num="142" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="complement() : void" num="148" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="baseToValue() : byte" num="172" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createVariable() : BasePairCharType" num="178" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : BasePairCharType" num="184" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="190" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="valueEquals(BasePairCharType) : boolean" num="196" count="0" type="method"/>
            <line num="199" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.view.composite">
         <metrics coveredelements="0" complexity="106" loc="1033" methods="75" classes="13" statements="160" coveredconditionals="0" coveredmethods="0" elements="297" ncloc="569" files="9" conditionals="62" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/view/composite/AbstractComposite.java" name="AbstractComposite.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="61" coveredmethods="0" methods="2" elements="6" classes="1" ncloc="18" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="AbstractComposite">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractComposite(RandomAccess&lt; T &gt;)" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(long) : T" num="55" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/view/composite/AbstractNumericComposite.java" name="AbstractNumericComposite.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="27" loc="213" coveredmethods="0" methods="15" elements="102" classes="1" ncloc="154" statements="63" conditionals="24" coveredstatements="0"/>
            <class name="AbstractNumericComposite">
               <metrics coveredelements="0" coveredconditionals="0" complexity="27" coveredmethods="0" methods="15" elements="102" statements="63" conditionals="24" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="54" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : T" num="60" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="68" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractNumericComposite(RandomAccess&lt; T &gt;,int)" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="set(C) : void" num="81" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="add(C) : void" num="94" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="sub(C) : void" num="107" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="mul(C) : void" num="120" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="div(C) : void" num="133" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="138" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setZero() : void" num="146" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setOne() : void" num="157" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="161" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="mul(float) : void" num="168" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="172" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="mul(double) : void" num="179" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="183" type="cond"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt; T &gt;" num="190" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="valueEquals(C) : boolean" num="197" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="200" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="204" type="cond"/>
            <line num="205" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="205" type="cond"/>
            <line num="206" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/view/composite/Composite.java" name="Composite.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="50" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Composite">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/view/composite/CompositeFactory.java" name="CompositeFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="47" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="CompositeFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/view/composite/CompositeIntervalView.java" name="CompositeIntervalView.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="23" loc="156" coveredmethods="0" methods="16" elements="57" classes="1" ncloc="100" statements="27" conditionals="14" coveredstatements="0"/>
            <class name="CompositeIntervalView">
               <metrics coveredelements="0" coveredconditionals="0" complexity="23" coveredmethods="0" methods="16" elements="57" statements="27" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="zeroMinN(RandomAccessibleInterval&lt; T &gt;) : RandomAccessibleInterval&lt; T &gt;" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CompositeIntervalView(RandomAccessibleInterval&lt; T &gt;,CompositeFactory&lt; T, C &gt;)" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="min(int) : long" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="min(long[]) : void" num="72" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="min(Positionable) : void" num="79" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="max(int) : long" num="86" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="max(long[]) : void" num="92" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="max(Positionable) : void" num="99" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMin(int) : double" num="106" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="realMin(double[]) : void" num="112" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMin(RealPositionable) : void" num="119" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMax(int) : double" num="125" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="realMax(double[]) : void" num="131" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="134" type="cond"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMax(RealPositionable) : void" num="138" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="dimensions(long[]) : void" num="144" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="147" type="cond"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dimension(int) : long" num="151" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/view/composite/CompositeView.java" name="CompositeView.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="40" loc="256" coveredmethods="0" methods="30" elements="94" classes="2" ncloc="178" statements="44" conditionals="20" coveredstatements="0"/>
            <class name="CompositeView">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CompositeView.CompositeRandomAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="36" coveredmethods="0" methods="26" elements="84" statements="38" conditionals="20" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CompositeRandomAccess()" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="CompositeRandomAccess(CompositeRandomAccess)" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(int[]) : void" num="76" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(long[]) : void" num="83" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntPosition(int) : int" num="90" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLongPosition(int) : long" num="96" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(float[]) : void" num="102" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(double[]) : void" num="109" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatPosition(int) : float" num="116" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDoublePosition(int) : double" num="122" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="128" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fwd(int) : void" num="134" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bck(int) : void" num="140" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(int,int) : void" num="146" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(long,int) : void" num="152" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(Localizable) : void" num="158" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="161" type="cond"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(int[]) : void" num="165" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="168" type="cond"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(long[]) : void" num="172" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="175" type="cond"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(Localizable) : void" num="179" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="182" type="cond"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(int[]) : void" num="186" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="189" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(long[]) : void" num="193" count="0" type="method"/>
            <line num="196" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="196" type="cond"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(int,int) : void" num="200" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(long,int) : void" num="206" count="0" type="method"/>
            <line num="209" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : C" num="212" count="0" type="method"/>
            <line num="215" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : CompositeRandomAccess" num="218" count="0" type="method"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRandomAccess() : CompositeRandomAccess" num="224" count="0" type="method"/>
            <line num="227" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CompositeView(RandomAccessible&lt; T &gt;,CompositeFactory&lt; T, C &gt;)" num="231" count="0" type="method"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="238" count="0" type="method"/>
            <line num="241" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess() : CompositeRandomAccess" num="244" count="0" type="method"/>
            <line num="247" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess(Interval) : CompositeRandomAccess" num="250" count="0" type="method"/>
            <line num="253" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/view/composite/GenericComposite.java" name="GenericComposite.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="59" coveredmethods="0" methods="2" elements="4" classes="2" ncloc="17" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="GenericComposite">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="GenericComposite.Factory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="create(RandomAccess&lt; T &gt;) : GenericComposite&lt; T &gt;" num="47" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="GenericComposite(RandomAccess&lt; T &gt;)" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/view/composite/NumericComposite.java" name="NumericComposite.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="95" coveredmethods="0" methods="5" elements="17" classes="2" ncloc="45" statements="10" conditionals="2" coveredstatements="0"/>
            <class name="NumericComposite">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="3" elements="13" statements="8" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="NumericComposite.Factory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Factory(int)" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(RandomAccess&lt; T &gt;) : NumericComposite&lt; T &gt;" num="62" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="NumericComposite(RandomAccess&lt; T &gt;,int)" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createVariable() : NumericComposite&lt; T &gt;" num="77" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : NumericComposite&lt; T &gt;" num="90" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/view/composite/RealComposite.java" name="RealComposite.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="96" coveredmethods="0" methods="5" elements="17" classes="2" ncloc="46" statements="10" conditionals="2" coveredstatements="0"/>
            <class name="RealComposite">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="3" elements="13" statements="8" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="RealComposite.Factory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Factory(int)" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(RandomAccess&lt; T &gt;) : RealComposite&lt; T &gt;" num="63" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RealComposite(RandomAccess&lt; T &gt;,int)" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createVariable() : RealComposite&lt; T &gt;" num="78" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : RealComposite&lt; T &gt;" num="91" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.converter.readwrite">
         <metrics coveredelements="0" complexity="44" loc="853" methods="42" classes="16" statements="66" coveredconditionals="0" coveredmethods="0" elements="108" ncloc="348" files="11" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/readwrite/ARGBChannelSamplerConverter.java" name="ARGBChannelSamplerConverter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="104" coveredmethods="0" methods="5" elements="12" classes="2" ncloc="50" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="ARGBChannelSamplerConverter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ARGBChannelSamplerConverter.ARGBChannelConvertingAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ARGBChannelSamplerConverter(int)" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="convert(Sampler&lt; ? extends ARGBType &gt;) : UnsignedByteType" num="70" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="ARGBChannelConvertingAccess(Sampler&lt; ? extends ARGBType &gt;)" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(int) : byte" num="88" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(int,byte) : void" num="97" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/readwrite/CompositeARGBSamplerConverter.java" name="CompositeARGBSamplerConverter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="129" coveredmethods="0" methods="9" elements="32" classes="3" ncloc="80" statements="23" conditionals="0" coveredstatements="0"/>
            <class name="CompositeARGBSamplerConverter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="3" elements="11" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CompositeARGBSamplerConverter.CompositeARGBAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="11" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CompositeARGBSamplerConverter.CompositeRGBAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="10" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CompositeARGBSamplerConverter(ColorChannelOrder)" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getAccessFactory(ColorChannelOrder) : Function&lt;Sampler&lt;? extends Composite&lt;UnsignedByteType&gt;&gt;,? extends IntAccess&gt;" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="convert(Sampler&lt; ? extends Composite&lt; UnsignedByteType &gt; &gt;) : ARGBType" num="65" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CompositeARGBAccess(Sampler&lt; ? extends Composite&lt; UnsignedByteType &gt; &gt;)" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(int) : int" num="80" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(int,int) : void" num="90" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CompositeRGBAccess(Sampler&lt; ? extends Composite&lt; UnsignedByteType &gt; &gt;)" num="105" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(int) : int" num="110" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(int,int) : void" num="120" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/readwrite/RealDoubleSamplerConverter.java" name="RealDoubleSamplerConverter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="81" coveredmethods="0" methods="4" elements="8" classes="2" ncloc="31" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="RealDoubleSamplerConverter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RealDoubleSamplerConverter.RealConvertingDoubleAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="convert(Sampler&lt; ? extends R &gt;) : DoubleType" num="48" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="RealConvertingDoubleAccess(Sampler&lt; ? extends R &gt;)" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(int) : double" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(int,double) : void" num="75" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/readwrite/RealFloatSamplerConverter.java" name="RealFloatSamplerConverter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="81" coveredmethods="0" methods="4" elements="8" classes="2" ncloc="31" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="RealFloatSamplerConverter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RealFloatSamplerConverter.RealConvertingFloatAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="convert(Sampler&lt; ? extends R &gt;) : FloatType" num="48" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="RealConvertingFloatAccess(Sampler&lt; ? extends R &gt;)" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue(int) : float" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setValue(int,float) : void" num="75" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/readwrite/SamplerConverter.java" name="SamplerConverter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="46" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SamplerConverter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/readwrite/WriteConvertedCursor.java" name="WriteConvertedCursor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="68" coveredmethods="0" methods="3" elements="8" classes="1" ncloc="24" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="WriteConvertedCursor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="WriteConvertedCursor(Cursor&lt; A &gt;,SamplerConverter&lt; ? super A, B &gt;)" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : B" num="57" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : WriteConvertedCursor&lt; A, B &gt;" num="63" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/readwrite/WriteConvertedIterableInterval.java" name="WriteConvertedIterableInterval.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="65" coveredmethods="0" methods="3" elements="7" classes="1" ncloc="22" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="WriteConvertedIterableInterval">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="WriteConvertedIterableInterval(IterableInterval&lt; A &gt;,SamplerConverter&lt; ? super A, B &gt;)" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cursor() : WriteConvertedCursor&lt; A, B &gt;" num="54" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localizingCursor() : WriteConvertedCursor&lt; A, B &gt;" num="60" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/readwrite/WriteConvertedIterableRandomAccessibleInterval.java" name="WriteConvertedIterableRandomAccessibleInterval.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="79" coveredmethods="0" methods="5" elements="11" classes="1" ncloc="34" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="WriteConvertedIterableRandomAccessibleInterval">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="11" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="WriteConvertedIterableRandomAccessibleInterval(S,SamplerConverter&lt; ? super A, B &gt;)" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess() : WriteConvertedRandomAccess&lt; A, B &gt;" num="56" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess(Interval) : WriteConvertedRandomAccess&lt; A, B &gt;" num="62" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cursor() : WriteConvertedCursor&lt; A, B &gt;" num="68" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localizingCursor() : WriteConvertedCursor&lt; A, B &gt;" num="74" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/readwrite/WriteConvertedRandomAccess.java" name="WriteConvertedRandomAccess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="68" coveredmethods="0" methods="3" elements="8" classes="1" ncloc="24" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="WriteConvertedRandomAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="WriteConvertedRandomAccess(RandomAccess&lt; A &gt;,SamplerConverter&lt; ? super A, B &gt;)" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : B" num="57" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : WriteConvertedRandomAccess&lt; A, B &gt;" num="63" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/readwrite/WriteConvertedRandomAccessible.java" name="WriteConvertedRandomAccessible.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="66" coveredmethods="0" methods="3" elements="7" classes="1" ncloc="23" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="WriteConvertedRandomAccessible">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="WriteConvertedRandomAccessible(RandomAccessible&lt; A &gt;,SamplerConverter&lt; ? super A, B &gt;)" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess() : WriteConvertedRandomAccess&lt; A, B &gt;" num="55" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess(Interval) : WriteConvertedRandomAccess&lt; A, B &gt;" num="61" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/converter/readwrite/WriteConvertedRandomAccessibleInterval.java" name="WriteConvertedRandomAccessibleInterval.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="66" coveredmethods="0" methods="3" elements="7" classes="1" ncloc="23" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="WriteConvertedRandomAccessibleInterval">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="WriteConvertedRandomAccessibleInterval(RandomAccessibleInterval&lt; A &gt;,SamplerConverter&lt; ? super A, B &gt;)" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess() : WriteConvertedRandomAccess&lt; A, B &gt;" num="55" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess(Interval) : WriteConvertedRandomAccess&lt; A, B &gt;" num="61" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.display.projector.volatiles">
         <metrics coveredelements="0" complexity="7" loc="113" methods="3" classes="1" statements="20" coveredconditionals="0" coveredmethods="0" elements="31" ncloc="54" files="1" conditionals="8" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/display/projector/volatiles/Volatile2DRandomAccessibleProjector.java" name="Volatile2DRandomAccessibleProjector.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="113" coveredmethods="0" methods="3" elements="31" classes="1" ncloc="54" statements="20" conditionals="8" coveredstatements="0"/>
            <class name="Volatile2DRandomAccessibleProjector">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="3" elements="31" statements="20" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Volatile2DRandomAccessibleProjector(int,int,RandomAccessible&lt; A &gt;,RandomAccessibleInterval&lt; B &gt;,Converter&lt; ? super A, B &gt;)" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isValid() : boolean" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="map() : void" num="75" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.exception">
         <metrics coveredelements="0" complexity="8" loc="138" methods="8" classes="3" statements="9" coveredconditionals="0" coveredmethods="0" elements="17" ncloc="48" files="3" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/exception/ImgLibException.java" name="ImgLibException.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="62" coveredmethods="0" methods="4" elements="8" classes="1" ncloc="20" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="ImgLibException">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ImgLibException(String)" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ImgLibException(Object,String)" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ImgLibException()" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ImgLibException(Throwable)" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/exception/IncompatibleTypeException.java" name="IncompatibleTypeException.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="52" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="IncompatibleTypeException">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="IncompatibleTypeException(Object,String)" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/exception/InvalidDimensionsException.java" name="InvalidDimensionsException.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="24" coveredmethods="0" methods="3" elements="7" classes="1" ncloc="19" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="InvalidDimensionsException">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="InvalidDimensionsException(long[],String)" num="9" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="InvalidDimensionsException(int[],String)" num="15" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDimenionsCopy() : long[]" num="20" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.concatenate">
         <metrics coveredelements="0" complexity="11" loc="231" methods="2" classes="3" statements="31" coveredconditionals="0" coveredmethods="0" elements="47" ncloc="69" files="3" conditionals="14" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/concatenate/Concatenable.java" name="Concatenable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="61" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Concatenable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/concatenate/ConcatenateUtils.java" name="ConcatenateUtils.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="108" coveredmethods="0" methods="2" elements="47" classes="1" ncloc="57" statements="31" conditionals="14" coveredstatements="0"/>
            <class name="ConcatenateUtils">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="2" elements="47" statements="31" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="print(List&lt; ? &gt;) : void" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="join(List&lt; T &gt;) : void" num="70" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/concatenate/PreConcatenable.java" name="PreConcatenable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="62" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="PreConcatenable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="net.imglib2.neighborsearch">
         <metrics coveredelements="0" complexity="91" loc="1111" methods="56" classes="8" statements="171" coveredconditionals="0" coveredmethods="0" elements="287" ncloc="528" files="8" conditionals="60" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/neighborsearch/KNearestNeighborSearch.java" name="KNearestNeighborSearch.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="99" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="15" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="KNearestNeighborSearch">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/neighborsearch/KNearestNeighborSearchOnIterableRealInterval.java" name="KNearestNeighborSearchOnIterableRealInterval.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="21" loc="192" coveredmethods="0" methods="14" elements="68" classes="1" ncloc="120" statements="42" conditionals="12" coveredstatements="0"/>
            <class name="KNearestNeighborSearchOnIterableRealInterval">
               <metrics coveredelements="0" coveredconditionals="0" complexity="21" coveredmethods="0" methods="14" elements="68" statements="42" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="protected" signature="squareDistance(RealLocalizable) : double" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="KNearestNeighborSearchOnIterableRealInterval(IterableRealInterval&lt; T &gt;,int)" num="75" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="87" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getK() : int" num="93" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="search(RealLocalizable) : void" num="99" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPosition(int) : RealLocalizable" num="130" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampler(int) : RealCursor&lt; T &gt;" num="136" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSquareDistance(int) : double" num="142" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDistance(int) : double" num="148" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPosition() : RealLocalizable" num="156" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampler() : Sampler&lt; T &gt;" num="162" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSquareDistance() : double" num="168" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDistance() : double" num="174" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="copy() : KNearestNeighborSearchOnIterableRealInterval&lt; T &gt;" num="180" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="185" type="cond"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/neighborsearch/KNearestNeighborSearchOnKDTree.java" name="KNearestNeighborSearchOnKDTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="25" loc="188" coveredmethods="0" methods="14" elements="77" classes="1" ncloc="120" statements="45" conditionals="18" coveredstatements="0"/>
            <class name="KNearestNeighborSearchOnKDTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="25" coveredmethods="0" methods="14" elements="77" statements="45" conditionals="18" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="KNearestNeighborSearchOnKDTree(KDTree&lt; T &gt;,int)" num="61" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="74" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getK() : int" num="80" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="search(RealLocalizable) : void" num="86" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="9" visibility="protected" signature="searchNode(KDTreeNode&lt; T &gt;) : void" num="95" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="102" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="116" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampler(int) : Sampler&lt; T &gt;" num="126" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPosition(int) : RealLocalizable" num="132" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSquareDistance(int) : double" num="138" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDistance(int) : double" num="144" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPosition() : RealLocalizable" num="152" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampler() : Sampler&lt; T &gt;" num="158" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSquareDistance() : double" num="164" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDistance() : double" num="170" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="copy() : KNearestNeighborSearchOnKDTree&lt; T &gt;" num="176" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="181" type="cond"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/neighborsearch/NearestNeighborSearch.java" name="NearestNeighborSearch.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="90" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="13" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="NearestNeighborSearch">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/neighborsearch/NearestNeighborSearchOnIterableRealInterval.java" name="NearestNeighborSearchOnIterableRealInterval.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="12" loc="144" coveredmethods="0" methods="9" elements="42" classes="1" ncloc="80" statements="27" conditionals="6" coveredstatements="0"/>
            <class name="NearestNeighborSearchOnIterableRealInterval">
               <metrics coveredelements="0" coveredconditionals="0" complexity="12" coveredmethods="0" methods="9" elements="42" statements="27" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="protected" signature="squareDistance(RealLocalizable) : double" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="NearestNeighborSearchOnIterableRealInterval(IterableRealInterval&lt; T &gt;)" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="83" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="search(RealLocalizable) : void" num="89" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPosition() : RealLocalizable" num="111" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampler() : Sampler&lt; T &gt;" num="117" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSquareDistance() : double" num="123" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDistance() : double" num="129" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : NearestNeighborSearchOnIterableRealInterval&lt; T &gt;" num="135" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/neighborsearch/NearestNeighborSearchOnKDTree.java" name="NearestNeighborSearchOnKDTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="139" coveredmethods="0" methods="9" elements="48" classes="1" ncloc="78" statements="29" conditionals="10" coveredstatements="0"/>
            <class name="NearestNeighborSearchOnKDTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="9" elements="48" statements="29" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="NearestNeighborSearchOnKDTree(KDTree&lt; T &gt;)" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="67" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="search(RealLocalizable) : void" num="73" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="7" visibility="protected" signature="searchNode(KDTreeNode&lt; T &gt;) : void" num="81" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="98" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampler() : Sampler&lt; T &gt;" num="106" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPosition() : RealLocalizable" num="112" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSquareDistance() : double" num="118" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDistance() : double" num="124" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : NearestNeighborSearchOnKDTree&lt; T &gt;" num="130" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/neighborsearch/RadiusNeighborSearch.java" name="RadiusNeighborSearch.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="110" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="13" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="RadiusNeighborSearch">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/neighborsearch/RadiusNeighborSearchOnKDTree.java" name="RadiusNeighborSearchOnKDTree.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="18" loc="149" coveredmethods="0" methods="10" elements="52" classes="1" ncloc="89" statements="28" conditionals="14" coveredstatements="0"/>
            <class name="RadiusNeighborSearchOnKDTree">
               <metrics coveredelements="0" coveredconditionals="0" complexity="18" coveredmethods="0" methods="10" elements="52" statements="28" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RadiusNeighborSearchOnKDTree(KDTree&lt; T &gt;)" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="search(RealLocalizable,double,boolean) : void" num="70" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compare(ValuePair&lt; KDTreeNode&lt; T &gt;, Double &gt;,ValuePair&lt; KDTreeNode&lt; T &gt;, Double &gt;) : int" num="81" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="90" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="7" visibility="protected" signature="searchNode(KDTreeNode&lt; T &gt;,double) : void" num="96" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="100" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="116" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numNeighbors() : int" num="120" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSampler(int) : Sampler&lt; T &gt;" num="126" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPosition(int) : RealLocalizable" num="132" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSquareDistance(int) : double" num="138" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDistance(int) : double" num="144" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.loops">
         <metrics coveredelements="0" complexity="220" loc="3042" methods="170" classes="49" statements="557" coveredconditionals="0" coveredmethods="0" elements="813" ncloc="1727" files="17" conditionals="86" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/loops/BindActionToSamplers.java" name="BindActionToSamplers.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="275" coveredmethods="0" methods="13" elements="54" classes="7" ncloc="149" statements="39" conditionals="2" coveredstatements="0"/>
            <class name="BindActionToSamplers">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="1" elements="9" statements="6" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="BindActionToSamplers.ConsumerRunnable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="BindActionToSamplers.BiConsumerRunnable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="BindActionToSamplers.TriConsumerRunnable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="7" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="BindActionToSamplers.FourConsumerRunnable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="8" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="BindActionToSamplers.FiveConsumerRunnable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="9" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="BindActionToSamplers.SixConsumerRunnable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="10" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="bindActionToSamplers(Object,List&lt; ? extends Sampler&lt; ? &gt; &gt;) : Runnable" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ConsumerRunnable(Consumer&lt; A &gt;,Sampler&lt; A &gt;)" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="124" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="BiConsumerRunnable(BiConsumer&lt; A, B &gt;,Sampler&lt; A &gt;,Sampler&lt; B &gt;)" num="140" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="147" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="TriConsumerRunnable(LoopBuilder.TriConsumer&lt; A, B, C &gt;,Sampler&lt; A &gt;,Sampler&lt; B &gt;,Sampler&lt; C &gt;)" num="165" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="173" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="FourConsumerRunnable(LoopBuilder.FourConsumer&lt; A, B, C, D &gt;,Sampler&lt; A &gt;,Sampler&lt; B &gt;,Sampler&lt; C &gt;,Sampler&lt; D &gt;)" num="193" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="202" count="0" type="method"/>
            <line num="205" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="FiveConsumerRunnable(LoopBuilder.FiveConsumer&lt; A, B, C, D, E &gt;,Sampler&lt; A &gt;,Sampler&lt; B &gt;,Sampler&lt; C &gt;,Sampler&lt; D &gt;,Sampler&lt; E &gt;)" num="224" count="0" type="method"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="234" count="0" type="method"/>
            <line num="237" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SixConsumerRunnable(LoopBuilder.SixConsumer&lt; A, B, C, D, E, F &gt;,Sampler&lt; A &gt;,Sampler&lt; B &gt;,Sampler&lt; C &gt;,Sampler&lt; D &gt;,Sampler&lt; E &gt;,Sampler&lt; F &gt;)" num="258" count="0" type="method"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="269" count="0" type="method"/>
            <line num="272" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/loops/ClassCopier.java" name="ClassCopier.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="105" coveredmethods="0" methods="5" elements="25" classes="2" ncloc="49" statements="18" conditionals="2" coveredstatements="0"/>
            <class name="ClassCopier">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="3" elements="19" statements="14" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="ClassCopier.ClassCopyLoader">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="ClassCopier(Class&lt; ? extends T &gt;,Class&lt; T &gt;)" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : Class&lt; ? extends T &gt;" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="classToBytes(Class&lt; ? &gt;) : byte[]" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassCopyLoader(ClassLoader)" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="bytesToClass(String,byte[]) : Class&lt; ? &gt;" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/loops/ClassCopyProvider.java" name="ClassCopyProvider.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="137" coveredmethods="0" methods="6" elements="41" classes="1" ncloc="56" statements="21" conditionals="14" coveredstatements="0"/>
            <class name="ClassCopyProvider">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="6" elements="41" statements="21" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="ClassCopyProvider(Class&lt; ? extends T &gt;,Class&lt; T &gt;,Class&lt; ? &gt;)" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line complexity="4" visibility="private" signature="assumeConstructorSignature(Class&lt; ? &gt;) : Class&lt; ? &gt;[]" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="hasDefaultConstructor(Class&lt; ? &gt;) : boolean" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="classForKey(Object) : Class&lt; ? extends T &gt;" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="matches(Object) : boolean" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="newInstanceForKey(Object,Object) : T" num="126" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/loops/FastCursorLoops.java" name="FastCursorLoops.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="21" loc="285" coveredmethods="0" methods="14" elements="73" classes="7" ncloc="163" statements="45" conditionals="14" coveredstatements="0"/>
            <class name="FastCursorLoops">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="10" statements="6" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="FastCursorLoops.OneCursorLoop">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="8" statements="4" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="FastCursorLoops.TwoCursorLoop">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="9" statements="5" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="FastCursorLoops.ThreeCursorLoop">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="10" statements="6" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="FastCursorLoops.FourCursorLoop">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="11" statements="7" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="FastCursorLoops.FiveCursorLoop">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="12" statements="8" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="FastCursorLoops.SixCursorLoop">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="13" statements="9" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="FastCursorLoops()" num="58" count="0" type="method"/>
            <line complexity="2" visibility="public" signature="createLoop(Object,List&lt; ? extends Cursor&lt; ? &gt; &gt;) : LongConsumer" num="103" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="OneCursorLoop(Consumer&lt; A &gt;,Cursor&lt; A &gt;)" num="122" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="accept(long) : void" num="128" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="131" type="cond"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="TwoCursorLoop(BiConsumer&lt; A, B &gt;,Cursor&lt; A &gt;,Cursor&lt; B &gt;)" num="145" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="accept(long) : void" num="152" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ThreeCursorLoop(TriConsumer&lt; A, B, C &gt;,Cursor&lt; A &gt;,Cursor&lt; B &gt;,Cursor&lt; C &gt;)" num="171" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="accept(long) : void" num="179" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="182" type="cond"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="FourCursorLoop(FourConsumer&lt; A, B, C, D &gt;,Cursor&lt; A &gt;,Cursor&lt; B &gt;,Cursor&lt; C &gt;,Cursor&lt; D &gt;)" num="200" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="accept(long) : void" num="209" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="212" type="cond"/>
            <line num="213" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="FiveCursorLoop(FiveConsumer&lt; A, B, C, D, E &gt;,Cursor&lt; A &gt;,Cursor&lt; B &gt;,Cursor&lt; C &gt;,Cursor&lt; D &gt;,Cursor&lt; E &gt;)" num="232" count="0" type="method"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="accept(long) : void" num="242" count="0" type="method"/>
            <line num="245" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="245" type="cond"/>
            <line num="246" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SixCursorLoop(SixConsumer&lt; A, B, C, D, E, F &gt;,Cursor&lt; A &gt;,Cursor&lt; B &gt;,Cursor&lt; C &gt;,Cursor&lt; D &gt;,Cursor&lt; E &gt;,Cursor&lt; F &gt;)" num="267" count="0" type="method"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="accept(long) : void" num="278" count="0" type="method"/>
            <line num="281" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="281" type="cond"/>
            <line num="282" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/loops/IntervalChunks.java" name="IntervalChunks.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="119" coveredmethods="0" methods="4" elements="40" classes="1" ncloc="59" statements="28" conditionals="8" coveredstatements="0"/>
            <class name="IntervalChunks">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="4" elements="40" statements="28" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="chunkInterval(Interval,int) : List&lt; Interval &gt;" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="suggestChunkSize(long[],long) : long[]" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="3" visibility="package" signature="generateGrid(Interval,long[]) : List&lt; Interval &gt;" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="100" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="3" visibility="package" signature="divideAndRoundUp(long,long) : long" num="113" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/loops/LoopBuilder.java" name="LoopBuilder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="33" loc="427" coveredmethods="0" methods="26" elements="111" classes="6" ncloc="217" statements="71" conditionals="14" coveredstatements="0"/>
            <class name="LoopBuilder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="33" coveredmethods="0" methods="26" elements="111" statements="71" conditionals="14" coveredstatements="0"/>
            </class>
            <class name="LoopBuilder.TriConsumer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="LoopBuilder.FourConsumer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="LoopBuilder.FiveConsumer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="LoopBuilder.SixConsumer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="LoopBuilder.Chunk">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setImages(RandomAccessibleInterval&lt; A &gt;) : LoopBuilder&lt; Consumer&lt; A &gt; &gt;" num="109" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setImages(RandomAccessibleInterval&lt; A &gt;,RandomAccessibleInterval&lt; B &gt;) : LoopBuilder&lt; BiConsumer&lt; A, B &gt; &gt;" num="117" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setImages(RandomAccessibleInterval&lt; A &gt;,RandomAccessibleInterval&lt; B &gt;,RandomAccessibleInterval&lt; C &gt;) : LoopBuilder&lt; TriConsumer&lt; A, B, C &gt; &gt;" num="125" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setImages(RandomAccessibleInterval&lt; A &gt;,RandomAccessibleInterval&lt; B &gt;,RandomAccessibleInterval&lt; C &gt;,RandomAccessibleInterval&lt; D &gt;) : LoopBuilder&lt; FourConsumer&lt; A, B, C, D &gt; &gt;" num="133" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setImages(RandomAccessibleInterval&lt; A &gt;,RandomAccessibleInterval&lt; B &gt;,RandomAccessibleInterval&lt; C &gt;,RandomAccessibleInterval&lt; D &gt;,RandomAccessibleInterval&lt; E &gt;) : LoopBuilder&lt; FiveConsumer&lt; A, B, C, D, E &gt; &gt;" num="141" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setImages(RandomAccessibleInterval&lt; A &gt;,RandomAccessibleInterval&lt; B &gt;,RandomAccessibleInterval&lt; C &gt;,RandomAccessibleInterval&lt; D &gt;,RandomAccessibleInterval&lt; E &gt;,RandomAccessibleInterval&lt; F &gt;) : LoopBuilder&lt; SixConsumer&lt; A, B, C, D, E, F &gt; &gt;" num="149" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="forEachPixel(T) : void" num="157" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="forEachChunk(Function&lt; Chunk&lt; T &gt;, R &gt;) : List&lt; R &gt;" num="192" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="195" type="cond"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="198" type="cond"/>
            <line num="199" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="allCursorsAreFast(List&lt; IterableInterval&lt; ? &gt; &gt;) : boolean" num="204" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="cursorIsFast(IterableInterval&lt; ? &gt;) : boolean" num="209" count="0" type="method"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="multiThreaded() : LoopBuilder&lt; T &gt;" num="253" count="0" type="method"/>
            <line num="255" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="multiThreaded(TaskExecutor) : LoopBuilder&lt; T &gt;" num="264" count="0" type="method"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="flatIterationOrder() : LoopBuilder&lt; T &gt;" num="278" count="0" type="method"/>
            <line num="280" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="flatIterationOrder(boolean) : LoopBuilder&lt; T &gt;" num="295" count="0" type="method"/>
            <line num="297" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="LoopBuilder(RandomAccessibleInterval&lt; ? &gt;)" num="328" count="0" type="method"/>
            <line num="330" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="checkDimensions() : void" num="335" count="0" type="method"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="339" type="cond"/>
            <line num="341" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="runUsingRandomAccesses(Function&lt; Chunk&lt; T &gt;, R &gt;) : List&lt; R &gt;" num="348" count="0" type="method"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="runOnChunkUsingRandomAccesses(RandomAccessibleInterval[],Function&lt; Chunk&lt; T &gt;, R &gt;,Interval) : R" num="356" count="0" type="method"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="360" type="cond"/>
            <line num="361" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line num="364" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="initRandomAccess(RandomAccessibleInterval&lt; ? &gt;) : RandomAccess&lt; ? &gt;" num="368" count="0" type="method"/>
            <line num="370" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line num="372" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="imagesAsIterableIntervals() : List&lt; IterableInterval&lt; ? &gt; &gt;" num="375" count="0" type="method"/>
            <line num="377" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="377" type="cond"/>
            <line complexity="1" visibility="private" signature="runUsingCursors(List&lt; IterableInterval&lt; ? &gt; &gt;,Function&lt; Chunk&lt; T &gt;, R &gt;) : List&lt; R &gt;" num="382" count="0" type="method"/>
            <line num="384" count="0" type="stmt"/>
            <line num="385" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="runOnChunkUsingCursors(List&lt; IterableInterval&lt; ? &gt; &gt;,Function&lt; Chunk&lt; T &gt;, R &gt;,long,long) : R" num="391" count="0" type="method"/>
            <line num="393" count="0" type="stmt"/>
            <line num="394" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="394" type="cond"/>
            <line num="395" count="0" type="stmt"/>
            <line num="396" count="0" type="stmt"/>
            <line num="397" count="0" type="stmt"/>
            <line num="398" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="jumpFwd(List&lt; Cursor&lt; ? &gt; &gt;,long) : void" num="402" count="0" type="method"/>
            <line num="404" count="0" type="stmt"/>
            <line num="405" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="equalIterationOrderIterableIntervals() : List&lt; IterableInterval&lt; ? &gt; &gt;" num="408" count="0" type="method"/>
            <line num="410" count="0" type="stmt"/>
            <line num="411" count="0" type="stmt"/>
            <line num="412" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="412" type="cond"/>
            <line num="413" count="0" type="stmt"/>
            <line num="414" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="flatIterableIntervals() : List&lt; IterableInterval&lt; ? &gt; &gt;" num="417" count="0" type="method"/>
            <line num="419" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="allEqual(List&lt; Object &gt;) : boolean" num="422" count="0" type="method"/>
            <line num="424" count="0" type="stmt"/>
            <line num="425" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/loops/LoopUtils.java" name="LoopUtils.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="153" coveredmethods="0" methods="5" elements="30" classes="2" ncloc="53" statements="17" conditionals="8" coveredstatements="0"/>
            <class name="LoopUtils">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="3" elements="18" statements="9" conditionals="6" coveredstatements="0"/>
            </class>
            <class name="LoopUtils.LineProcessor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="12" statements="8" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="LoopUtils()" num="51" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="createLineLoop(Positionable,long,int,Runnable) : Runnable" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="createIntervalLoop(Positionable,Dimensions,Runnable) : Runnable" num="110" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LineProcessor(Runnable,Positionable,long,int)" num="134" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="run() : void" num="142" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="145" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/loops/SyncedPositionables.java" name="SyncedPositionables.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="36" loc="343" coveredmethods="0" methods="32" elements="108" classes="9" ncloc="233" statements="68" conditionals="8" coveredstatements="0"/>
            <class name="SyncedPositionables">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="3" elements="9" statements="4" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="SyncedPositionables.Private">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SyncedPositionables.Private.Forwarder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="11" elements="31" statements="14" conditionals="6" coveredstatements="0"/>
            </class>
            <class name="SyncedPositionables.Private.Forwarder1">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SyncedPositionables.Private.Forwarder2">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="9" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SyncedPositionables.Private.Forwarder3">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="12" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SyncedPositionables.Private.Forwarder4">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="15" statements="12" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SyncedPositionables.Private.Forwarder5">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="18" statements="15" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SyncedPositionables.Private.GeneralForwarder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="SyncedPositionables()" num="71" count="0" type="method"/>
            <line complexity="2" visibility="public" signature="create(List&lt; ? extends Positionable &gt;) : Positionable" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line complexity="1" visibility="public" signature="create(Positionable) : Positionable" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="bck(int) : void" num="102" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="move(int,int) : void" num="108" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="move(Localizable) : void" num="114" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="move(int[]) : void" num="121" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="move(long[]) : void" num="128" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="131" type="cond"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="setPosition(Localizable) : void" num="135" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="setPosition(int[]) : void" num="141" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="setPosition(long[]) : void" num="147" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="setPosition(int,int) : void" num="153" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="setPosition(long,int) : void" num="159" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="numDimensions() : int" num="165" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Forwarder1(List&lt; ? extends Positionable &gt;)" num="177" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fwd(int) : void" num="182" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(long,int) : void" num="188" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Forwarder2(List&lt; ? extends Positionable &gt;)" num="200" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fwd(int) : void" num="206" count="0" type="method"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(long,int) : void" num="213" count="0" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Forwarder3(List&lt; ? extends Positionable &gt;)" num="226" count="0" type="method"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fwd(int) : void" num="233" count="0" type="method"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(long,int) : void" num="241" count="0" type="method"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Forwarder4(List&lt; ? extends Positionable &gt;)" num="255" count="0" type="method"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fwd(int) : void" num="263" count="0" type="method"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(long,int) : void" num="272" count="0" type="method"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Forwarder5(List&lt; ? extends Positionable &gt;)" num="287" count="0" type="method"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fwd(int) : void" num="296" count="0" type="method"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(long,int) : void" num="306" count="0" type="method"/>
            <line num="309" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="GeneralForwarder(List&lt; ? extends Positionable &gt;)" num="322" count="0" type="method"/>
            <line num="324" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fwd(int) : void" num="327" count="0" type="method"/>
            <line num="330" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(long,int) : void" num="334" count="0" type="method"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/loops/ClassCopierTest.java" name="ClassCopierTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="89" coveredmethods="0" methods="4" elements="13" classes="3" ncloc="40" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="ClassCopierTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="11" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ClassCopierTest.MyClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ClassCopierTest.MyInterface">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testExecuteCopy() : void" num="49" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCopy() : void" num="58" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCopyRequiresInterface() : void" num="67" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="78" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/loops/ClassCopyProviderBenchmark.java" name="ClassCopyProviderBenchmark.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="139" coveredmethods="0" methods="7" elements="27" classes="3" ncloc="75" statements="18" conditionals="2" coveredstatements="0"/>
            <class name="ClassCopyProviderBenchmark">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="6" elements="24" statements="16" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="ClassCopyProviderBenchmark.Loop">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ClassCopyProviderBenchmark.LoopInterface">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="sumMinMax() : void" num="70" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sumMinMax_using_ClassCopyProvider() : void" num="76" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="calculateSumMinAndMax(Consumer&lt; IntConsumer &gt;) : void" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="normalForEach(IntConsumer) : void" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="fasterForEach(IntConsumer) : void" num="101" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(int[],IntConsumer) : void" num="116" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String) : void" num="127" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/loops/ClassCopyProviderTest.java" name="ClassCopyProviderTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="89" coveredmethods="0" methods="5" elements="18" classes="2" ncloc="43" statements="13" conditionals="0" coveredstatements="0"/>
            <class name="ClassCopyProviderTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="14" statements="11" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ClassCopyProviderTest.MyRunnable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testCreate() : void" num="49" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEqualClass() : void" num="57" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDifferentClass() : void" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MyRunnable(int)" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsInt() : int" num="83" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/loops/IntervalChunksTest.java" name="IntervalChunksTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="103" coveredmethods="0" methods="6" elements="33" classes="1" ncloc="58" statements="25" conditionals="2" coveredstatements="0"/>
            <class name="IntervalChunksTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="6" elements="33" statements="25" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testDivideAndRoundUp() : void" num="50" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSuggestCellSize() : void" num="59" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGenerateGrid() : void" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testChunkInterval() : void" num="81" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="assertArrayEquals(long[],long[]) : void" num="91" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="array(long) : long[]" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/loops/LoopBuilderTest.java" name="LoopBuilderTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="19" loc="230" coveredmethods="0" methods="16" elements="90" classes="1" ncloc="166" statements="68" conditionals="6" coveredstatements="0"/>
            <class name="LoopBuilderTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="19" coveredmethods="0" methods="16" elements="90" statements="68" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testLoopBuilderRun() : void" num="69" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="randomImage(int) : RandomAccessibleInterval&lt; IntType &gt;" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="assertSum(RandomAccessibleInterval&lt; IntType &gt;,RandomAccessibleInterval&lt; IntType &gt;,RandomAccessibleInterval&lt; IntType &gt;) : void" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFourConsumer() : void" num="101" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFiveConsumer() : void" num="110" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSixConsumer() : void" num="119" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="createNImages(int) : List&lt; Img&lt; IntType &gt; &gt;" num="128" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="assertIncreasing(List&lt; Img&lt; IntType &gt; &gt;) : void" num="134" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="setIncreasing(IntType) : void" num="143" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="145" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMultiThreaded() : void" num="149" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunUsingRandomAccessesOnSubInterval() : void" num="163" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunOnChunkUsingCursors() : void" num="178" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunUsingCursorWithImagesOfDifferentIterationOrder() : void" num="192" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="testRunUsingCursors(ImgFactory&lt; IntType &gt;,ImgFactory&lt; IntType &gt;) : void" num="204" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFlatIterationOrder() : void" num="214" count="0" type="method"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCheckDimensions() : void" num="224" count="0" type="method"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/loops/LoopBuilderVsCursorsBenchmark.java" name="LoopBuilderVsCursorsBenchmark.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="12" loc="239" coveredmethods="0" methods="10" elements="80" classes="1" ncloc="170" statements="66" conditionals="4" coveredstatements="0"/>
            <class name="LoopBuilderVsCursorsBenchmark">
               <metrics coveredelements="0" coveredconditionals="0" complexity="12" coveredmethods="0" methods="10" elements="80" statements="66" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="initImageFactories() : Map&lt; String, Supplier&lt; RandomAccessibleInterval&lt; DoubleType &gt; &gt; &gt;" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setup() : void" num="140" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="143" type="cond"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="slowDown() : void" num="150" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="flatCopy() : Object" num="162" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="flatCopy(RandomAccessibleInterval&lt; DoubleType &gt;,RandomAccessibleInterval&lt; DoubleType &gt;) : void" num="169" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="174" type="cond"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="loopBuilder() : Object" num="178" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="loopBuilder(RandomAccessibleInterval&lt; DoubleType &gt;,RandomAccessibleInterval&lt; DoubleType &gt;) : void" num="185" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String) : void" num="190" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="printTable(Collection&lt; RunResult &gt;) : void" num="201" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getValue(Collection&lt; RunResult &gt;,String,String,String) : double" num="230" count="0" type="method"/>
            <line num="232" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/loops/LoopPerformanceBenchmark.java" name="LoopPerformanceBenchmark.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="160" coveredmethods="0" methods="8" elements="43" classes="1" ncloc="102" statements="33" conditionals="2" coveredstatements="0"/>
            <class name="LoopPerformanceBenchmark">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="8" elements="43" statements="33" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="gradient_niceAndSlow() : void" num="78" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="gradient_better() : void" num="92" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="gradient_LoopBuilder() : void" num="111" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="gradient_LoopBuilder_MultiThreaded() : void" num="122" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy_pairedView() : void" num="132" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy_loopBuilder() : void" num="138" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="copy_flatIterable() : void" num="144" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="149" type="cond"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String) : void" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/loops/LoopUtilsTest.java" name="LoopUtilsTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="74" coveredmethods="0" methods="2" elements="12" classes="1" ncloc="30" statements="10" conditionals="0" coveredstatements="0"/>
            <class name="LoopUtilsTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="12" statements="10" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testLoopLine() : void" num="47" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIntervalLoop() : void" num="61" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/loops/SyncedPositionablesBenchmark.java" name="SyncedPositionablesBenchmark.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="75" coveredmethods="0" methods="7" elements="15" classes="1" ncloc="64" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="SyncedPositionablesBenchmark">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="15" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="sixTimes(Supplier&lt; T &gt;) : List&lt; T &gt;" num="28" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="benchmark2() : void" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="benchmark3() : void" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="benchmark4() : void" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="benchmark5() : void" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="benchmark6() : void" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String) : void" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.img.cell">
         <metrics coveredelements="0" complexity="297" loc="3189" methods="164" classes="22" statements="764" coveredconditionals="0" coveredmethods="0" elements="1160" ncloc="1860" files="18" conditionals="232" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/cell/AbstractCellImg.java" name="AbstractCellImg.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="145" coveredmethods="0" methods="9" elements="25" classes="2" ncloc="68" statements="14" conditionals="2" coveredstatements="0"/>
            <class name="AbstractCellImg">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="9" elements="25" statements="14" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="AbstractCellImg.CellImgSampler">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractCellImg(CellGrid,I,Fraction)" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="update(Object) : A" num="81" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cursor() : CellCursor&lt; T, C &gt;" num="89" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localizingCursor() : CellLocalizingCursor&lt; T, C &gt;" num="95" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess() : CellRandomAccess&lt; T, C &gt;" num="101" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterationOrder() : CellIterationOrder" num="107" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCells() : I" num="119" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCellGrid() : CellGrid" num="132" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="2" visibility="protected" signature="copyDataTo(AbstractCellImg&lt; T, ?, ?, ? &gt;) : void" num="137" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="142" type="cond"/>
            <line num="143" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/cell/Cell.java" name="Cell.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="176" coveredmethods="0" methods="11" elements="40" classes="1" ncloc="76" statements="23" conditionals="6" coveredstatements="0"/>
            <class name="Cell">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="11" elements="40" statements="23" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="Cell(int[],long[],A)" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getData() : A" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : long" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="indexToGlobalPosition(int,int) : long" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="indexToGlobalPosition(int,long[]) : void" num="103" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="globalPositionToIndex(long[]) : int" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="123" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="min(int) : long" num="136" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="max(int) : long" num="149" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dimension(int) : long" num="160" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="dimensions(int[]) : void" num="171" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/cell/CellCursor.java" name="CellCursor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="16" loc="186" coveredmethods="0" methods="14" elements="59" classes="1" ncloc="112" statements="41" conditionals="4" coveredstatements="0"/>
            <class name="CellCursor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="16" coveredmethods="0" methods="14" elements="59" statements="41" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="CellCursor(CellCursor&lt; T, C &gt;)" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CellCursor(AbstractCellImg&lt; T, ?, C, ? &gt;)" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCell() : C" num="91" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="97" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : CellCursor&lt; T, C &gt;" num="103" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyCursor() : CellCursor&lt; T, C &gt;" num="109" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="115" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="jumpFwd(long) : void" num="121" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="fwd() : void" num="137" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="140" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reset() : void" num="148" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="156" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLongPosition(int) : long" num="162" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(long[]) : void" num="168" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="moveToNextCell() : void" num="178" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/cell/CellGrid.java" name="CellGrid.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="33" loc="322" coveredmethods="0" methods="21" elements="94" classes="1" ncloc="142" statements="49" conditionals="24" coveredstatements="0"/>
            <class name="CellGrid">
               <metrics coveredelements="0" coveredconditionals="0" complexity="33" coveredmethods="0" methods="21" elements="94" statements="49" conditionals="24" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="CellGrid(long[],int[])" num="62" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CellGrid(CellGrid)" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getGridDimensions() : long[]" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="gridDimensions(long[]) : void" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="gridDimension(int) : long" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getImgDimensions() : long[]" num="115" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="imgDimensions(long[]) : void" num="126" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="imgDimension(int) : long" num="138" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="cellDimensions(int[]) : void" num="150" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="152" type="cond"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cellDimension(int) : int" num="163" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCellDimensions(long,long[],int[]) : void" num="187" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="189" type="cond"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="194" type="cond"/>
            <line num="195" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCellDimensions(long[],long[],int[]) : void" num="213" count="0" type="method"/>
            <line num="215" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="215" type="cond"/>
            <line num="217" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="217" type="cond"/>
            <line num="218" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCellDimension(int,long) : int" num="234" count="0" type="method"/>
            <line num="236" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="236" type="cond"/>
            <line complexity="1" visibility="public" signature="getCellMin(int,long) : long" num="250" count="0" type="method"/>
            <line num="252" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCellGridPositionFlat(long,long[]) : void" num="264" count="0" type="method"/>
            <line num="266" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCellPosition(long[],long[]) : void" num="277" count="0" type="method"/>
            <line num="279" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="279" type="cond"/>
            <line num="280" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCellPosition(long[],Positionable) : void" num="291" count="0" type="method"/>
            <line num="293" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="293" type="cond"/>
            <line num="294" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="297" count="0" type="method"/>
            <line num="300" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="equals(Object) : boolean" num="303" count="0" type="method"/>
            <line num="306" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="306" type="cond"/>
            <line num="308" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="315" count="0" type="method"/>
            <line num="318" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/cell/CellImg.java" name="CellImg.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="65" coveredmethods="0" methods="3" elements="9" classes="1" ncloc="27" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="CellImg">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="9" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CellImg(CellImgFactory&lt; T &gt;,CellGrid,ListImg&lt; Cell&lt; A &gt; &gt;,Fraction)" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="factory() : ImgFactory&lt; T &gt;" num="51" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : CellImg&lt; T, A &gt;" num="57" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/cell/CellImgFactory.java" name="CellImgFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="18" loc="224" coveredmethods="0" methods="13" elements="70" classes="1" ncloc="122" statements="47" conditionals="10" coveredstatements="0"/>
            <class name="CellImgFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="18" coveredmethods="0" methods="13" elements="70" statements="47" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CellImgFactory(T)" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CellImgFactory(T,int)" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getCellDimensions(int[],int,Fraction) : int[]" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(long) : CellImg&lt; T, ? &gt;" num="99" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(Dimensions) : CellImg&lt; T, ? &gt;" num="107" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(int[]) : CellImg&lt; T, ? &gt;" num="113" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="create(long[],T,NativeTypeFactory&lt; T, A &gt;) : CellImg&lt; T, A &gt;" num="119" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="141" type="cond"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="imgFactory(S) : ImgFactory&lt; S &gt;" num="155" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="159" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CellImgFactory()" num="175" count="0" type="method"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CellImgFactory(int)" num="181" count="0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(long[],T) : CellImg&lt; T, ? &gt;" num="187" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="verifyDimensions(int[]) : void" num="209" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="verifyDimensions(long[]) : void" num="219" count="0" type="method"/>
            <line num="222" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/cell/CellIterationOrder.java" name="CellIterationOrder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="68" coveredmethods="0" methods="2" elements="9" classes="1" ncloc="18" statements="5" conditionals="2" coveredstatements="0"/>
            <class name="CellIterationOrder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="9" statements="5" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CellIterationOrder(AbstractCellImg&lt; ?, ?, ?, ? &gt;)" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="equals(Object) : boolean" num="58" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/cell/CellLocalizingCursor.java" name="CellLocalizingCursor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="17" loc="203" coveredmethods="0" methods="11" elements="81" classes="1" ncloc="122" statements="58" conditionals="12" coveredstatements="0"/>
            <class name="CellLocalizingCursor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="17" coveredmethods="0" methods="11" elements="81" statements="58" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="protected" signature="CellLocalizingCursor(CellLocalizingCursor&lt; T, C &gt;)" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="CellLocalizingCursor(AbstractCellImg&lt; T, ?, C, ? &gt;)" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCell() : C" num="102" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="108" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : CellLocalizingCursor&lt; T, C &gt;" num="114" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyCursor() : CellLocalizingCursor&lt; T, C &gt;" num="120" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="126" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="jumpFwd(long) : void" num="132" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="fwd() : void" num="155" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="165" type="cond"/>
            <line num="167" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="167" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reset() : void" num="174" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="moveToNextCell() : void" num="187" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="198" type="cond"/>
            <line num="199" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/cell/CellRandomAccess.java" name="CellRandomAccess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="85" loc="485" coveredmethods="0" methods="20" elements="298" classes="1" ncloc="373" statements="182" conditionals="96" coveredstatements="0"/>
            <class name="CellRandomAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="85" coveredmethods="0" methods="20" elements="298" statements="182" conditionals="96" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="protected" signature="CellRandomAccess(CellRandomAccess&lt; T, C &gt;)" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="CellRandomAccess(AbstractCellImg&lt; T, ?, C, ? &gt;)" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCell() : C" num="134" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="140" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : CellRandomAccess&lt; T, C &gt;" num="146" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRandomAccess() : CellRandomAccess&lt; T, C &gt;" num="152" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="fwd(int) : void" num="158" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="162" type="cond"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="bck(int) : void" num="170" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="174" type="cond"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="move(int,int) : void" num="182" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="187" type="cond"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="move(long,int) : void" num="195" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="200" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="move(Localizable) : void" num="208" count="0" type="method"/>
            <line num="211" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="211" type="cond"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="214" type="cond"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="218" type="cond"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="223" type="cond"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="226" type="cond"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="229" type="cond"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="move(int[]) : void" num="244" count="0" type="method"/>
            <line num="247" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="247" type="cond"/>
            <line num="249" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="249" type="cond"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="253" type="cond"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="258" type="cond"/>
            <line num="260" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="260" type="cond"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="263" type="cond"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="move(long[]) : void" num="278" count="0" type="method"/>
            <line num="281" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="281" type="cond"/>
            <line num="283" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="283" type="cond"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="287" type="cond"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="292" type="cond"/>
            <line num="294" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="294" type="cond"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="297" type="cond"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="setPosition(int,int) : void" num="312" count="0" type="method"/>
            <line num="315" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="317" type="cond"/>
            <line num="319" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="setPosition(long,int) : void" num="325" count="0" type="method"/>
            <line num="328" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="330" type="cond"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="setPosition(Localizable) : void" num="338" count="0" type="method"/>
            <line num="341" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="341" type="cond"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="344" type="cond"/>
            <line num="346" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="348" type="cond"/>
            <line num="350" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="353" type="cond"/>
            <line num="355" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="356" type="cond"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="359" type="cond"/>
            <line num="361" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="setPosition(int[]) : void" num="374" count="0" type="method"/>
            <line num="377" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="377" type="cond"/>
            <line num="379" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="379" type="cond"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="382" type="cond"/>
            <line num="384" count="0" type="stmt"/>
            <line num="385" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="setPos2(int[],int) : void" num="393" count="0" type="method"/>
            <line num="395" count="0" type="stmt"/>
            <line num="396" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="396" type="cond"/>
            <line num="398" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="398" type="cond"/>
            <line num="400" count="0" type="stmt"/>
            <line num="401" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="401" type="cond"/>
            <line num="403" count="0" type="stmt"/>
            <line num="404" count="0" type="stmt"/>
            <line num="408" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="setPosition(long[]) : void" num="411" count="0" type="method"/>
            <line num="414" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="414" type="cond"/>
            <line num="416" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="416" type="cond"/>
            <line num="418" count="0" type="stmt"/>
            <line num="419" count="0" type="stmt"/>
            <line num="420" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="420" type="cond"/>
            <line num="422" count="0" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
            <line num="425" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="425" type="cond"/>
            <line num="427" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="427" type="cond"/>
            <line num="429" count="0" type="stmt"/>
            <line num="430" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="430" type="cond"/>
            <line num="432" count="0" type="stmt"/>
            <line num="433" count="0" type="stmt"/>
            <line num="438" count="0" type="stmt"/>
            <line num="442" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="updatePosition(boolean) : void" num="450" count="0" type="method"/>
            <line num="453" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="453" type="cond"/>
            <line num="455" count="0" type="stmt"/>
            <line num="456" count="0" type="stmt"/>
            <line num="457" count="0" type="stmt"/>
            <line num="461" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="461" type="cond"/>
            <line num="464" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="464" type="cond"/>
            <line num="465" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="465" type="cond"/>
            <line num="466" count="0" type="stmt"/>
            <line num="471" count="0" type="stmt"/>
            <line num="472" count="0" type="stmt"/>
            <line num="475" count="0" type="stmt"/>
            <line num="477" count="0" type="stmt"/>
            <line num="478" count="0" type="stmt"/>
            <line num="479" count="0" type="stmt"/>
            <line num="481" count="0" type="stmt"/>
            <line num="482" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/img/cell/LazyCellImg.java" name="LazyCellImg.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="125" coveredmethods="0" methods="9" elements="21" classes="3" ncloc="67" statements="12" conditionals="0" coveredstatements="0"/>
            <class name="LazyCellImg">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="LazyCellImg.Get">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="LazyCellImg.LazyCells">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="11" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LazyCellImg(CellGrid,T,Get&lt; Cell&lt; A &gt; &gt;)" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LazyCellImg(CellGrid,Fraction,Get&lt; Cell&lt; A &gt; &gt;)" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="factory() : ImgFactory&lt; T &gt;" num="79" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : Img&lt; T &gt;" num="85" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LazyCells(long[],Get&lt; T &gt;)" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="get(long) : T" num="101" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="set(long,T) : void" num="107" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="factory() : ImgFactory&lt; T &gt;" num="113" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : Img&lt; T &gt;" num="119" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/img/cell/ArrayRandomAccessBenchmark.java" name="ArrayRandomAccessBenchmark.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="20" loc="217" coveredmethods="0" methods="11" elements="96" classes="2" ncloc="148" statements="67" conditionals="18" coveredstatements="0"/>
            <class name="ArrayRandomAccessBenchmark">
               <metrics coveredelements="0" coveredconditionals="0" complexity="20" coveredmethods="0" methods="11" elements="96" statements="67" conditionals="18" coveredstatements="0"/>
            </class>
            <class name="ArrayRandomAccessBenchmark.Benchmark">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="createSourceData() : void" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="fillImage() : void" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="100" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="copyWithSourceIteration(Img&lt; IntType &gt;,Img&lt; IntType &gt;) : void" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="copyWithIterationBoth(Img&lt; IntType &gt;,Img&lt; IntType &gt;) : void" num="122" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="median(ArrayList&lt; Long &gt;) : Long" num="132" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="benchmark(Benchmark) : void" num="149" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="153" type="cond"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="160" type="cond"/>
            <line num="162" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="169" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="177" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="189" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="199" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="209" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/img/cell/CellContainerFactoryTest.java" name="CellContainerFactoryTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="129" coveredmethods="0" methods="8" elements="30" classes="1" ncloc="77" statements="22" conditionals="0" coveredstatements="0"/>
            <class name="CellContainerFactoryTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="8" elements="30" statements="22" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="testDefaultCellSize(T) : void" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBitDefaultCellSize() : void" num="82" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIntDefaultCellSize() : void" num="88" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFloatDefaultCellSize() : void" num="94" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="testDefaultCellDimensions(T) : void" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBitDefaultCellDimensions() : void" num="112" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIntDefaultCellDimensions() : void" num="118" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFloatDefaultCellDimensions() : void" num="124" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/img/cell/CellContainerTest.java" name="CellContainerTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="81" coveredmethods="0" methods="2" elements="14" classes="1" ncloc="34" statements="12" conditionals="0" coveredstatements="0"/>
            <class name="CellContainerTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="14" statements="12" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="58" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equalIterationOrder() : void" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/img/cell/CellCursorTest.java" name="CellCursorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="19" loc="221" coveredmethods="0" methods="8" elements="118" classes="1" ncloc="149" statements="88" conditionals="22" coveredstatements="0"/>
            <class name="CellCursorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="19" coveredmethods="0" methods="8" elements="118" statements="88" conditionals="22" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="createSourceData() : void" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSumWithCursor() : void" num="97" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="102" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testResetWithCursor() : void" num="110" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testJmpWithCursor() : void" num="127" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="132" type="cond"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSumWithLocalizingCursor() : void" num="148" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="153" type="cond"/>
            <line num="155" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testResetWithLocalizingCursor() : void" num="161" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testJmpWithLocalizingCursor() : void" num="178" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="183" type="cond"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="testSumWithRandomAccess() : void" num="199" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="205" type="cond"/>
            <line num="206" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="208" type="cond"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="212" type="cond"/>
            <line num="213" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="213" type="cond"/>
            <line num="214" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/img/cell/CellImgTest.java" name="CellImgTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="78" coveredmethods="0" methods="2" elements="13" classes="1" ncloc="32" statements="7" conditionals="4" coveredstatements="0"/>
            <class name="CellImgTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="2" elements="13" statements="7" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="testCellImg() : void" num="56" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCellImgInvalidDimensions() : void" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/img/cell/CellRandomAccessBenchmark.java" name="CellRandomAccessBenchmark.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="171" coveredmethods="0" methods="8" elements="67" classes="1" ncloc="108" statements="49" conditionals="10" coveredstatements="0"/>
            <class name="CellRandomAccessBenchmark">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="8" elements="67" statements="49" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="createSourceData() : void" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="fillImage() : void" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="copyWithSourceIteration(Img&lt; IntType &gt;,Img&lt; IntType &gt;) : void" num="105" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="119" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="127" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="139" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="151" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="163" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/img/cell/CellTest.java" name="CellTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="98" coveredmethods="0" methods="2" elements="27" classes="1" ncloc="52" statements="17" conditionals="8" coveredstatements="0"/>
            <class name="CellTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="2" elements="27" statements="17" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="testLocalIndexCalculation() : void" num="68" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testGlobalPositionCalculation() : void" num="83" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/img/cell/CopyTest.java" name="CopyTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="17" loc="195" coveredmethods="0" methods="10" elements="89" classes="1" ncloc="133" statements="65" conditionals="14" coveredstatements="0"/>
            <class name="CopyTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="17" coveredmethods="0" methods="10" elements="89" statements="65" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="createSourceData() : void" num="68" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="copyWithSourceIteration(Img&lt; IntType &gt;,Img&lt; IntType &gt;) : void" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="copyWithDestIteration(Img&lt; IntType &gt;,Img&lt; IntType &gt;) : void" num="113" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="copyWithIterationBoth(Img&lt; IntType &gt;,Img&lt; IntType &gt;) : void" num="127" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="131" type="cond"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="getImgAsInts(Img&lt; IntType &gt;) : int[]" num="137" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="145" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCopyToArrayContainerWithSourceIteration() : void" num="154" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCopyToArrayContainerWithDestIteration() : void" num="162" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCopyToCellContainerWithSourceIteration() : void" num="170" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCopyToCellContainerWithDestIteration() : void" num="178" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCopyArrayToArrayWithIterationBoth() : void" num="186" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.view">
         <metrics coveredelements="0" complexity="1085" loc="9800" methods="634" classes="46" statements="2086" coveredconditionals="0" coveredmethods="0" elements="3606" ncloc="5597" files="38" conditionals="886" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/view/ExtendedRandomAccessibleInterval.java" name="ExtendedRandomAccessibleInterval.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="96" coveredmethods="0" methods="6" elements="19" classes="1" ncloc="44" statements="9" conditionals="4" coveredstatements="0"/>
            <class name="ExtendedRandomAccessibleInterval">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="6" elements="19" statements="9" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ExtendedRandomAccessibleInterval(F,OutOfBoundsFactory&lt; T, ? super F &gt;)" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess() : OutOfBounds&lt; T &gt;" num="72" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="randomAccess(Interval) : RandomAccess&lt; T &gt;" num="78" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSource() : F" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOutOfBoundsFactory() : OutOfBoundsFactory&lt; T, ? super F &gt;" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/view/ExtendedRealRandomAccessibleRealInterval.java" name="ExtendedRealRandomAccessibleRealInterval.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="94" coveredmethods="0" methods="6" elements="19" classes="1" ncloc="43" statements="9" conditionals="4" coveredstatements="0"/>
            <class name="ExtendedRealRandomAccessibleRealInterval">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="6" elements="19" statements="9" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ExtendedRealRandomAccessibleRealInterval(F,RealOutOfBoundsFactory&lt; T, ? super F &gt;)" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="64" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realRandomAccess() : RealOutOfBoundsRealRandomAccess&lt; T &gt;" num="70" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="realRandomAccess(RealInterval) : RealRandomAccess&lt; T &gt;" num="76" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSource() : F" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOutOfBoundsFactory() : RealOutOfBoundsFactory&lt; T, ? super F &gt;" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/view/FullSourceMapMixedRandomAccess.java" name="FullSourceMapMixedRandomAccess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="70" loc="382" coveredmethods="0" methods="25" elements="203" classes="1" ncloc="241" statements="88" conditionals="90" coveredstatements="0"/>
            <class name="FullSourceMapMixedRandomAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="70" coveredmethods="0" methods="25" elements="203" statements="88" conditionals="90" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="package" signature="FullSourceMapMixedRandomAccess(RandomAccess&lt; T &gt;,Mixed)" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="96" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="FullSourceMapMixedRandomAccess(FullSourceMapMixedRandomAccess&lt; T &gt;)" num="130" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="localize(int[]) : void" num="144" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="147" type="cond"/>
            <line num="148" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="148" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="localize(long[]) : void" num="152" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getIntPosition(int) : int" num="160" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="166" type="cond"/>
            <line complexity="3" visibility="public" signature="getLongPosition(int) : long" num="169" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="172" type="cond"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="175" type="cond"/>
            <line complexity="3" visibility="public" signature="localize(float[]) : void" num="178" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="181" type="cond"/>
            <line num="182" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="182" type="cond"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="localize(double[]) : void" num="186" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="189" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatPosition(int) : float" num="194" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDoublePosition(int) : double" num="200" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="fwd(int) : void" num="206" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="209" type="cond"/>
            <line num="210" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="210" type="cond"/>
            <line num="211" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="bck(int) : void" num="216" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="219" type="cond"/>
            <line num="220" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="220" type="cond"/>
            <line num="221" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="move(int,int) : void" num="226" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="229" type="cond"/>
            <line num="230" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="230" type="cond"/>
            <line complexity="3" visibility="public" signature="move(long,int) : void" num="233" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="236" type="cond"/>
            <line num="237" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="237" type="cond"/>
            <line complexity="4" visibility="public" signature="move(Localizable) : void" num="240" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="243" type="cond"/>
            <line num="249" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="249" type="cond"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="253" type="cond"/>
            <line num="255" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="move(int[]) : void" num="258" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="261" type="cond"/>
            <line num="267" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="267" type="cond"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="270" type="cond"/>
            <line num="272" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="move(long[]) : void" num="275" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="278" type="cond"/>
            <line num="284" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="284" type="cond"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="287" type="cond"/>
            <line num="289" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="setPosition(Localizable) : void" num="292" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="295" type="cond"/>
            <line num="302" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="302" type="cond"/>
            <line num="304" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="306" type="cond"/>
            <line num="308" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="setPosition(int[]) : void" num="311" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="314" type="cond"/>
            <line num="321" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="321" type="cond"/>
            <line num="323" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="324" type="cond"/>
            <line num="326" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="setPosition(long[]) : void" num="329" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="332" type="cond"/>
            <line num="339" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="339" type="cond"/>
            <line num="341" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="342" type="cond"/>
            <line num="344" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="setPosition(int,int) : void" num="347" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="350" type="cond"/>
            <line num="351" count="0" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="352" type="cond"/>
            <line num="353" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="setPosition(long,int) : void" num="356" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="359" type="cond"/>
            <line num="360" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="361" type="cond"/>
            <line num="362" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="365" count="0" type="method"/>
            <line num="368" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : FullSourceMapMixedRandomAccess&lt; T &gt;" num="371" count="0" type="method"/>
            <line num="374" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRandomAccess() : FullSourceMapMixedRandomAccess&lt; T &gt;" num="377" count="0" type="method"/>
            <line num="380" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/view/FullSourceMapSlicingRandomAccess.java" name="FullSourceMapSlicingRandomAccess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="56" loc="324" coveredmethods="0" methods="25" elements="147" classes="1" ncloc="191" statements="60" conditionals="62" coveredstatements="0"/>
            <class name="FullSourceMapSlicingRandomAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="56" coveredmethods="0" methods="25" elements="147" statements="60" conditionals="62" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="package" signature="FullSourceMapSlicingRandomAccess(RandomAccess&lt; T &gt;,Slicing)" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="98" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="FullSourceMapSlicingRandomAccess(FullSourceMapSlicingRandomAccess&lt; T &gt;)" num="110" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="localize(int[]) : void" num="120" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="localize(long[]) : void" num="128" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="131" type="cond"/>
            <line num="132" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="132" type="cond"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getIntPosition(int) : int" num="136" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getLongPosition(int) : long" num="143" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="localize(float[]) : void" num="150" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="153" type="cond"/>
            <line num="154" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="154" type="cond"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="localize(double[]) : void" num="158" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="161" type="cond"/>
            <line num="162" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="162" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFloatPosition(int) : float" num="166" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="169" type="cond"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDoublePosition(int) : double" num="173" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="176" type="cond"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fwd(int) : void" num="180" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bck(int) : void" num="186" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(int,int) : void" num="192" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="195" type="cond"/>
            <line num="196" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(long,int) : void" num="199" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="202" type="cond"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="move(Localizable) : void" num="206" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="209" type="cond"/>
            <line num="215" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="215" type="cond"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="move(int[]) : void" num="220" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="223" type="cond"/>
            <line num="229" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="229" type="cond"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="move(long[]) : void" num="234" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="237" type="cond"/>
            <line num="243" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="243" type="cond"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="setPosition(Localizable) : void" num="248" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="251" type="cond"/>
            <line num="258" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="258" type="cond"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="setPosition(int[]) : void" num="263" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="266" type="cond"/>
            <line num="273" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="273" type="cond"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="setPosition(long[]) : void" num="278" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="281" type="cond"/>
            <line num="288" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="288" type="cond"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(int,int) : void" num="293" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="296" type="cond"/>
            <line num="297" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(long,int) : void" num="300" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="303" type="cond"/>
            <line num="304" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="307" count="0" type="method"/>
            <line num="310" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : FullSourceMapSlicingRandomAccess&lt; T &gt;" num="313" count="0" type="method"/>
            <line num="316" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRandomAccess() : FullSourceMapSlicingRandomAccess&lt; T &gt;" num="319" count="0" type="method"/>
            <line num="322" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/view/HyperSlice.java" name="HyperSlice.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="47" loc="311" coveredmethods="0" methods="31" elements="121" classes="2" ncloc="209" statements="60" conditionals="30" coveredstatements="0"/>
            <class name="HyperSlice">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="5" elements="37" statements="22" conditionals="10" coveredstatements="0"/>
            </class>
            <class name="HyperSlice.HyperSliceRandomAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="36" coveredmethods="0" methods="26" elements="84" statements="38" conditionals="20" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="private" signature="sourceInterval(Interval) : Interval" num="67" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="HyperSliceRandomAccess()" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="HyperSliceRandomAccess(Interval)" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(int[]) : void" num="102" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(long[]) : void" num="109" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntPosition(int) : int" num="116" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLongPosition(int) : long" num="122" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(float[]) : void" num="128" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="131" type="cond"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(double[]) : void" num="135" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="138" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatPosition(int) : float" num="142" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDoublePosition(int) : double" num="148" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="154" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fwd(int) : void" num="160" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bck(int) : void" num="166" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(int,int) : void" num="172" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(long,int) : void" num="178" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(Localizable) : void" num="184" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="187" type="cond"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(int[]) : void" num="191" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="194" type="cond"/>
            <line num="195" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(long[]) : void" num="198" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="201" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(Localizable) : void" num="205" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="208" type="cond"/>
            <line num="209" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(int[]) : void" num="212" count="0" type="method"/>
            <line num="215" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="215" type="cond"/>
            <line num="216" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(long[]) : void" num="219" count="0" type="method"/>
            <line num="222" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="222" type="cond"/>
            <line num="223" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(int,int) : void" num="226" count="0" type="method"/>
            <line num="229" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(long,int) : void" num="232" count="0" type="method"/>
            <line num="235" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="238" count="0" type="method"/>
            <line num="241" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : HyperSliceRandomAccess" num="244" count="0" type="method"/>
            <line num="247" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRandomAccess() : HyperSliceRandomAccess" num="250" count="0" type="method"/>
            <line num="253" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="HyperSlice(RandomAccessible&lt; T &gt;,int[],long[])" num="266" count="0" type="method"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="278" type="cond"/>
            <line num="280" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="280" type="cond"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="293" count="0" type="method"/>
            <line num="296" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess() : HyperSliceRandomAccess" num="299" count="0" type="method"/>
            <line num="302" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess(Interval) : RandomAccess&lt; T &gt;" num="305" count="0" type="method"/>
            <line num="308" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/view/HyperSlicesView.java" name="HyperSlicesView.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="12" loc="133" coveredmethods="0" methods="8" elements="35" classes="2" ncloc="69" statements="21" conditionals="6" coveredstatements="0"/>
            <class name="HyperSlicesView">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="4" elements="20" statements="12" conditionals="4" coveredstatements="0"/>
            </class>
            <class name="HyperSlicesView.HyperSlicesViewRandomAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="4" elements="15" statements="9" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="HyperSlicesViewRandomAccess()" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="get() : HyperSlice&lt; T &gt;" num="70" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : HyperSlicesViewRandomAccess" num="81" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRandomAccess() : HyperSlicesViewRandomAccess" num="89" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="HyperSlicesView(RandomAccessible&lt; T &gt;,int)" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="112" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess() : HyperSlicesViewRandomAccess" num="118" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess(Interval) : HyperSlicesViewRandomAccess" num="124" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/view/IntervalView.java" name="IntervalView.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="16" loc="176" coveredmethods="0" methods="12" elements="40" classes="1" ncloc="83" statements="20" conditionals="8" coveredstatements="0"/>
            <class name="IntervalView">
               <metrics coveredelements="0" coveredconditionals="0" complexity="16" coveredmethods="0" methods="12" elements="40" statements="20" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="IntervalView(RandomAccessible&lt; T &gt;,Interval)" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="IntervalView(RandomAccessible&lt; T &gt;,long[],long[])" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSource() : RandomAccessible&lt; T &gt;" num="115" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess(Interval) : RandomAccess&lt; T &gt;" num="120" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="randomAccess() : RandomAccess&lt; T &gt;" num="126" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="129" type="cond"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="2" visibility="protected" signature="getFullViewIterableInterval() : IterableInterval&lt; T &gt;" num="134" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : long" num="141" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="firstElement() : T" num="147" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterationOrder() : Object" num="153" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt; T &gt;" num="159" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cursor() : Cursor&lt; T &gt;" num="165" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localizingCursor() : Cursor&lt; T &gt;" num="171" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/view/IterableRandomAccessibleInterval.java" name="IterableRandomAccessibleInterval.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="123" coveredmethods="0" methods="10" elements="27" classes="1" ncloc="67" statements="15" conditionals="2" coveredstatements="0"/>
            <class name="IterableRandomAccessibleInterval">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="10" elements="27" statements="15" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="create(RandomAccessibleInterval&lt; T &gt;) : IterableRandomAccessibleInterval&lt; T &gt;" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="IterableRandomAccessibleInterval(RandomAccessibleInterval&lt; T &gt;)" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : long" num="74" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="firstElement() : T" num="80" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterationOrder() : FlatIterationOrder" num="88" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt; T &gt;" num="94" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cursor() : Cursor&lt; T &gt;" num="100" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localizingCursor() : Cursor&lt; T &gt;" num="106" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess() : RandomAccess&lt; T &gt;" num="112" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess(Interval) : RandomAccess&lt; T &gt;" num="118" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/view/MixedRandomAccess.java" name="MixedRandomAccess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="63" loc="378" coveredmethods="0" methods="17" elements="212" classes="1" ncloc="249" statements="103" conditionals="92" coveredstatements="0"/>
            <class name="MixedRandomAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="63" coveredmethods="0" methods="17" elements="212" statements="103" conditionals="92" coveredstatements="0"/>
            </class>
            <line complexity="5" visibility="package" signature="MixedRandomAccess(RandomAccess&lt; T &gt;,Mixed)" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="MixedRandomAccess(MixedRandomAccess&lt; T &gt;)" num="132" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="fwd(int) : void" num="148" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="151" type="cond"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="153" type="cond"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="bck(int) : void" num="166" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="169" type="cond"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="171" type="cond"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="175" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="move(int,int) : void" num="184" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="187" type="cond"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="189" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line complexity="4" visibility="public" signature="move(long,int) : void" num="193" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="196" type="cond"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="198" type="cond"/>
            <line num="199" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="199" type="cond"/>
            <line complexity="5" visibility="public" signature="move(Localizable) : void" num="202" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="205" type="cond"/>
            <line num="211" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="211" type="cond"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="215" type="cond"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="218" type="cond"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="move(int[]) : void" num="224" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="227" type="cond"/>
            <line num="233" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="233" type="cond"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="236" type="cond"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="239" type="cond"/>
            <line num="242" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="move(long[]) : void" num="245" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="248" type="cond"/>
            <line num="254" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="254" type="cond"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="257" type="cond"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="260" type="cond"/>
            <line num="263" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="setPosition(Localizable) : void" num="266" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="269" type="cond"/>
            <line num="276" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="276" type="cond"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="280" type="cond"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="283" type="cond"/>
            <line num="286" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="setPosition(int[]) : void" num="289" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="292" type="cond"/>
            <line num="299" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="299" type="cond"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="303" type="cond"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="306" type="cond"/>
            <line num="309" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="setPosition(long[]) : void" num="312" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="315" type="cond"/>
            <line num="322" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="322" type="cond"/>
            <line num="324" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="326" type="cond"/>
            <line num="328" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="329" type="cond"/>
            <line num="332" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="setPosition(int,int) : void" num="335" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="338" type="cond"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="340" type="cond"/>
            <line num="342" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="343" type="cond"/>
            <line num="344" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="setPosition(long,int) : void" num="348" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="351" type="cond"/>
            <line num="352" count="0" type="stmt"/>
            <line num="353" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="353" type="cond"/>
            <line num="355" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="356" type="cond"/>
            <line num="357" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="361" count="0" type="method"/>
            <line num="364" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : MixedRandomAccess&lt; T &gt;" num="367" count="0" type="method"/>
            <line num="370" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRandomAccess() : MixedRandomAccess&lt; T &gt;" num="373" count="0" type="method"/>
            <line num="376" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/view/MixedTransformView.java" name="MixedTransformView.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="125" coveredmethods="0" methods="7" elements="37" classes="1" ncloc="71" statements="22" conditionals="8" coveredstatements="0"/>
            <class name="MixedTransformView">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="7" elements="37" statements="22" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="MixedTransformView(RandomAccessible&lt; T &gt;,Mixed)" num="58" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="86" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="92" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSource() : RandomAccessible&lt; T &gt;" num="100" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTransformToSource() : MixedTransform" num="106" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess(Interval) : RandomAccess&lt; T &gt;" num="112" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="randomAccess() : RandomAccess&lt; T &gt;" num="118" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="121" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/view/RandomAccessibleIntervalCursor.java" name="RandomAccessibleIntervalCursor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="25" loc="217" coveredmethods="0" methods="20" elements="80" classes="1" ncloc="148" statements="50" conditionals="10" coveredstatements="0"/>
            <class name="RandomAccessibleIntervalCursor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="25" coveredmethods="0" methods="20" elements="80" statements="50" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="RandomAccessibleIntervalCursor(I)" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="RandomAccessibleIntervalCursor(RandomAccessibleIntervalCursor&lt; T &gt;)" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="93" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="jumpFwd(long) : void" num="99" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="fwd() : void" num="109" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="nextLine() : void" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reset() : void" num="132" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="141" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : T" num="147" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="154" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="copy() : RandomAccessibleIntervalCursor&lt; T &gt;" num="158" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyCursor() : RandomAccessibleIntervalCursor&lt; T &gt;" num="164" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(float[]) : void" num="170" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(double[]) : void" num="176" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatPosition(int) : float" num="182" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDoublePosition(int) : double" num="188" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(int[]) : void" num="194" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(long[]) : void" num="200" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntPosition(int) : int" num="206" count="0" type="method"/>
            <line num="209" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLongPosition(int) : long" num="212" count="0" type="method"/>
            <line num="215" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/view/RandomAccessibleOnRealRandomAccessible.java" name="RandomAccessibleOnRealRandomAccessible.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="31" loc="238" coveredmethods="0" methods="29" elements="65" classes="2" ncloc="162" statements="32" conditionals="4" coveredstatements="0"/>
            <class name="RandomAccessibleOnRealRandomAccessible">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RandomAccessibleOnRealRandomAccessible.RandomAccessOnRealRandomAccessible">
               <metrics coveredelements="0" coveredconditionals="0" complexity="27" coveredmethods="0" methods="25" elements="56" statements="27" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RandomAccessOnRealRandomAccessible(RealRandomAccess&lt; T &gt;)" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(int[]) : void" num="69" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(long[]) : void" num="76" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntPosition(int) : int" num="83" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLongPosition(int) : long" num="89" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(float[]) : void" num="95" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(double[]) : void" num="101" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatPosition(int) : float" num="107" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDoublePosition(int) : double" num="113" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fwd(int) : void" num="119" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bck(int) : void" num="125" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(int,int) : void" num="131" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(long,int) : void" num="137" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(Localizable) : void" num="143" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(int[]) : void" num="149" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(long[]) : void" num="155" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(Localizable) : void" num="161" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(int[]) : void" num="167" count="0" type="method"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(long[]) : void" num="173" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(int,int) : void" num="179" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(long,int) : void" num="185" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="191" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : RandomAccessOnRealRandomAccessible" num="197" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRandomAccess() : RandomAccessOnRealRandomAccessible" num="203" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="209" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSource() : RealRandomAccessible&lt; T &gt;" num="216" count="0" type="method"/>
            <line num="218" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomAccessibleOnRealRandomAccessible(RealRandomAccessible&lt; T &gt;)" num="221" count="0" type="method"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess() : RandomAccess&lt; T &gt;" num="227" count="0" type="method"/>
            <line num="230" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess(Interval) : RandomAccess&lt; T &gt;" num="233" count="0" type="method"/>
            <line num="236" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/view/RandomAccessiblePair.java" name="RandomAccessiblePair.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="31" loc="261" coveredmethods="0" methods="31" elements="78" classes="2" ncloc="186" statements="47" conditionals="0" coveredstatements="0"/>
            <class name="RandomAccessiblePair">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RandomAccessiblePair.RandomAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="27" coveredmethods="0" methods="27" elements="69" statements="42" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RandomAccess()" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getA() : A" num="65" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getB() : B" num="71" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(int[]) : void" num="77" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(long[]) : void" num="83" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntPosition(int) : int" num="89" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLongPosition(int) : long" num="95" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(float[]) : void" num="101" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localize(double[]) : void" num="107" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatPosition(int) : float" num="113" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDoublePosition(int) : double" num="119" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="125" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fwd(int) : void" num="131" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bck(int) : void" num="138" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(int,int) : void" num="145" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(long,int) : void" num="152" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(Localizable) : void" num="159" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(int[]) : void" num="166" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(long[]) : void" num="173" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(Localizable) : void" num="180" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(int[]) : void" num="187" count="0" type="method"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(long[]) : void" num="194" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(int,int) : void" num="201" count="0" type="method"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(long,int) : void" num="208" count="0" type="method"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : RandomAccess" num="215" count="0" type="method"/>
            <line num="218" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : RandomAccess" num="221" count="0" type="method"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRandomAccess() : RandomAccess" num="229" count="0" type="method"/>
            <line num="232" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RandomAccessiblePair(RandomAccessible&lt; A &gt;,RandomAccessible&lt; B &gt;)" num="236" count="0" type="method"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="244" count="0" type="method"/>
            <line num="247" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess() : RandomAccess" num="250" count="0" type="method"/>
            <line num="253" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess(Interval) : RandomAccess" num="256" count="0" type="method"/>
            <line num="259" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/view/SlicingRandomAccess.java" name="SlicingRandomAccess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="50" loc="312" coveredmethods="0" methods="17" elements="164" classes="1" ncloc="190" statements="81" conditionals="66" coveredstatements="0"/>
            <class name="SlicingRandomAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="50" coveredmethods="0" methods="17" elements="164" statements="81" conditionals="66" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="package" signature="SlicingRandomAccess(RandomAccess&lt; T &gt;,Slicing)" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="100" type="cond"/>
            <line num="101" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="SlicingRandomAccess(SlicingRandomAccess&lt; T &gt;)" num="115" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="fwd(int) : void" num="126" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="129" type="cond"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="131" type="cond"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="bck(int) : void" num="135" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="138" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="140" type="cond"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="move(int,int) : void" num="144" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="147" type="cond"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="149" type="cond"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="move(long,int) : void" num="153" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="move(Localizable) : void" num="162" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="165" type="cond"/>
            <line num="171" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="171" type="cond"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="175" type="cond"/>
            <line num="176" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="move(int[]) : void" num="181" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="184" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="193" type="cond"/>
            <line num="194" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="move(long[]) : void" num="199" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="202" type="cond"/>
            <line num="208" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="208" type="cond"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="211" type="cond"/>
            <line num="212" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="setPosition(Localizable) : void" num="217" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="220" type="cond"/>
            <line num="227" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="227" type="cond"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="231" type="cond"/>
            <line num="232" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="setPosition(int[]) : void" num="237" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="240" type="cond"/>
            <line num="247" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="247" type="cond"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="251" type="cond"/>
            <line num="252" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="setPosition(long[]) : void" num="257" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="260" type="cond"/>
            <line num="267" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="267" type="cond"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="271" type="cond"/>
            <line num="272" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="setPosition(int,int) : void" num="277" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="280" type="cond"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="282" type="cond"/>
            <line num="283" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="setPosition(long,int) : void" num="286" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="289" type="cond"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="291" type="cond"/>
            <line num="292" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="295" count="0" type="method"/>
            <line num="298" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : SlicingRandomAccess&lt; T &gt;" num="301" count="0" type="method"/>
            <line num="304" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRandomAccess() : SlicingRandomAccess&lt; T &gt;" num="307" count="0" type="method"/>
            <line num="310" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/view/StackView.java" name="StackView.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="122" loc="731" coveredmethods="0" methods="62" elements="379" classes="4" ncloc="515" statements="199" conditionals="118" coveredstatements="0"/>
            <class name="StackView">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="6" elements="25" statements="13" conditionals="6" coveredstatements="0"/>
            </class>
            <class name="StackView.StackAccessMode">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="StackView.DefaultRA">
               <metrics coveredelements="0" coveredconditionals="0" complexity="53" coveredmethods="0" methods="29" elements="166" statements="91" conditionals="46" coveredstatements="0"/>
            </class>
            <class name="StackView.MoveAllSlicesRA">
               <metrics coveredelements="0" coveredconditionals="0" complexity="60" coveredmethods="0" methods="27" elements="188" statements="95" conditionals="66" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="StackView(List&lt; ? extends RandomAccessibleInterval&lt; T &gt; &gt;)" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="StackView(List&lt; ? extends RandomAccessibleInterval&lt; T &gt; &gt;,StackAccessMode)" num="119" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="randomAccess() : RandomAccess&lt; T &gt;" num="134" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="137" type="cond"/>
            <line complexity="2" visibility="public" signature="randomAccess(Interval) : RandomAccess&lt; T &gt;" num="142" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="145" type="cond"/>
            <line complexity="1" visibility="public" signature="getSourceSlices() : List&lt; RandomAccessibleInterval&lt; T &gt; &gt;" num="157" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStackAccessMode() : StackAccessMode" num="165" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DefaultRA(RandomAccessibleInterval&lt; T &gt;[])" num="201" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="DefaultRA(RandomAccessibleInterval&lt; T &gt;[],Interval)" num="206" count="0" type="method"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="215" type="cond"/>
            <line num="217" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="217" type="cond"/>
            <line num="218" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="224" type="cond"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="230" type="cond"/>
            <line num="231" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="DefaultRA(DefaultRA&lt; T &gt;)" num="236" count="0" type="method"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="239" type="cond"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(int[]) : void" num="249" count="0" type="method"/>
            <line num="252" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="252" type="cond"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(long[]) : void" num="257" count="0" type="method"/>
            <line num="260" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="260" type="cond"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getIntPosition(int) : int" num="265" count="0" type="method"/>
            <line num="268" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="268" type="cond"/>
            <line complexity="2" visibility="public" signature="getLongPosition(int) : long" num="271" count="0" type="method"/>
            <line num="274" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="274" type="cond"/>
            <line complexity="2" visibility="public" signature="localize(float[]) : void" num="277" count="0" type="method"/>
            <line num="280" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="280" type="cond"/>
            <line num="281" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(double[]) : void" num="285" count="0" type="method"/>
            <line num="288" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="288" type="cond"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatPosition(int) : float" num="293" count="0" type="method"/>
            <line num="296" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDoublePosition(int) : double" num="299" count="0" type="method"/>
            <line num="302" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="305" count="0" type="method"/>
            <line num="308" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="fwd(int) : void" num="311" count="0" type="method"/>
            <line num="314" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="314" type="cond"/>
            <line num="315" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="bck(int) : void" num="320" count="0" type="method"/>
            <line num="323" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="323" type="cond"/>
            <line num="324" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(int,int) : void" num="329" count="0" type="method"/>
            <line num="332" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="332" type="cond"/>
            <line num="333" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(long,int) : void" num="338" count="0" type="method"/>
            <line num="341" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="341" type="cond"/>
            <line num="342" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(Localizable) : void" num="347" count="0" type="method"/>
            <line num="350" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="350" type="cond"/>
            <line num="351" count="0" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(int[]) : void" num="355" count="0" type="method"/>
            <line num="358" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="358" type="cond"/>
            <line num="359" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(long[]) : void" num="363" count="0" type="method"/>
            <line num="366" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="366" type="cond"/>
            <line num="367" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(Localizable) : void" num="371" count="0" type="method"/>
            <line num="374" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="374" type="cond"/>
            <line num="375" count="0" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(int[]) : void" num="380" count="0" type="method"/>
            <line num="383" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line num="385" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(long[]) : void" num="388" count="0" type="method"/>
            <line num="391" count="0" type="stmt"/>
            <line num="392" count="0" type="stmt"/>
            <line num="393" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(int,int) : void" num="396" count="0" type="method"/>
            <line num="399" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="399" type="cond"/>
            <line num="400" count="0" type="stmt"/>
            <line num="402" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(long,int) : void" num="405" count="0" type="method"/>
            <line num="408" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="408" type="cond"/>
            <line num="409" count="0" type="stmt"/>
            <line num="411" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="setSlice(int) : void" num="414" count="0" type="method"/>
            <line num="416" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="416" type="cond"/>
            <line num="418" count="0" type="stmt"/>
            <line num="419" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="419" type="cond"/>
            <line num="421" count="0" type="stmt"/>
            <line num="422" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="setSlice(long) : void" num="427" count="0" type="method"/>
            <line num="429" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="432" count="0" type="method"/>
            <line num="435" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : DefaultRA&lt; T &gt;" num="438" count="0" type="method"/>
            <line num="441" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRandomAccess() : DefaultRA&lt; T &gt;" num="444" count="0" type="method"/>
            <line num="447" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MoveAllSlicesRA(RandomAccessibleInterval&lt; T &gt;[])" num="490" count="0" type="method"/>
            <line num="492" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="MoveAllSlicesRA(RandomAccessibleInterval&lt; T &gt;[],Interval)" num="495" count="0" type="method"/>
            <line num="498" count="0" type="stmt"/>
            <line num="499" count="0" type="stmt"/>
            <line num="500" count="0" type="stmt"/>
            <line num="501" count="0" type="stmt"/>
            <line num="502" count="0" type="stmt"/>
            <line num="503" count="0" type="stmt"/>
            <line num="504" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="504" type="cond"/>
            <line num="506" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="506" type="cond"/>
            <line num="507" count="0" type="stmt"/>
            <line num="511" count="0" type="stmt"/>
            <line num="512" count="0" type="stmt"/>
            <line num="513" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="513" type="cond"/>
            <line num="515" count="0" type="stmt"/>
            <line num="516" count="0" type="stmt"/>
            <line num="518" count="0" type="stmt"/>
            <line num="519" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="519" type="cond"/>
            <line num="520" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="MoveAllSlicesRA(MoveAllSlicesRA&lt; T &gt;)" num="524" count="0" type="method"/>
            <line num="526" count="0" type="stmt"/>
            <line num="527" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="527" type="cond"/>
            <line num="528" count="0" type="stmt"/>
            <line num="529" count="0" type="stmt"/>
            <line num="530" count="0" type="stmt"/>
            <line num="531" count="0" type="stmt"/>
            <line num="532" count="0" type="stmt"/>
            <line num="533" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(int[]) : void" num="536" count="0" type="method"/>
            <line num="539" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="539" type="cond"/>
            <line num="540" count="0" type="stmt"/>
            <line num="541" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(long[]) : void" num="544" count="0" type="method"/>
            <line num="547" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="547" type="cond"/>
            <line num="548" count="0" type="stmt"/>
            <line num="549" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getIntPosition(int) : int" num="552" count="0" type="method"/>
            <line num="555" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="555" type="cond"/>
            <line complexity="2" visibility="public" signature="getLongPosition(int) : long" num="558" count="0" type="method"/>
            <line num="561" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="561" type="cond"/>
            <line complexity="2" visibility="public" signature="localize(float[]) : void" num="564" count="0" type="method"/>
            <line num="567" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="567" type="cond"/>
            <line num="568" count="0" type="stmt"/>
            <line num="569" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(double[]) : void" num="572" count="0" type="method"/>
            <line num="575" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="575" type="cond"/>
            <line num="576" count="0" type="stmt"/>
            <line num="577" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatPosition(int) : float" num="580" count="0" type="method"/>
            <line num="583" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDoublePosition(int) : double" num="586" count="0" type="method"/>
            <line num="589" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="592" count="0" type="method"/>
            <line num="595" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="fwd(int) : void" num="598" count="0" type="method"/>
            <line num="601" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="601" type="cond"/>
            <line num="602" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="602" type="cond"/>
            <line num="603" count="0" type="stmt"/>
            <line num="605" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="bck(int) : void" num="608" count="0" type="method"/>
            <line num="611" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="611" type="cond"/>
            <line num="612" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="612" type="cond"/>
            <line num="613" count="0" type="stmt"/>
            <line num="615" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="move(int,int) : void" num="618" count="0" type="method"/>
            <line num="621" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="621" type="cond"/>
            <line num="622" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="622" type="cond"/>
            <line num="623" count="0" type="stmt"/>
            <line num="625" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="move(long,int) : void" num="628" count="0" type="method"/>
            <line num="631" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="631" type="cond"/>
            <line num="632" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="632" type="cond"/>
            <line num="633" count="0" type="stmt"/>
            <line num="635" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="move(Localizable) : void" num="638" count="0" type="method"/>
            <line num="641" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="641" type="cond"/>
            <line num="642" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="642" type="cond"/>
            <line num="643" count="0" type="stmt"/>
            <line num="644" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="move(int[]) : void" num="647" count="0" type="method"/>
            <line num="650" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="650" type="cond"/>
            <line num="651" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="651" type="cond"/>
            <line num="652" count="0" type="stmt"/>
            <line num="653" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="move(long[]) : void" num="656" count="0" type="method"/>
            <line num="659" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="659" type="cond"/>
            <line num="660" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="660" type="cond"/>
            <line num="661" count="0" type="stmt"/>
            <line num="662" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="setPosition(Localizable) : void" num="665" count="0" type="method"/>
            <line num="668" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="668" type="cond"/>
            <line num="669" count="0" type="stmt"/>
            <line num="670" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="670" type="cond"/>
            <line num="671" count="0" type="stmt"/>
            <line num="672" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(int[]) : void" num="675" count="0" type="method"/>
            <line num="678" count="0" type="stmt"/>
            <line num="679" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="679" type="cond"/>
            <line num="680" count="0" type="stmt"/>
            <line num="681" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(long[]) : void" num="684" count="0" type="method"/>
            <line num="687" count="0" type="stmt"/>
            <line num="688" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="688" type="cond"/>
            <line num="689" count="0" type="stmt"/>
            <line num="690" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="setPosition(int,int) : void" num="693" count="0" type="method"/>
            <line num="696" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="696" type="cond"/>
            <line num="697" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="697" type="cond"/>
            <line num="698" count="0" type="stmt"/>
            <line num="700" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="setPosition(long,int) : void" num="703" count="0" type="method"/>
            <line num="706" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="706" type="cond"/>
            <line num="707" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="707" type="cond"/>
            <line num="708" count="0" type="stmt"/>
            <line num="710" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="713" count="0" type="method"/>
            <line num="716" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : MoveAllSlicesRA&lt; T &gt;" num="719" count="0" type="method"/>
            <line num="722" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRandomAccess() : MoveAllSlicesRA&lt; T &gt;" num="725" count="0" type="method"/>
            <line num="728" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/view/SubsampleIntervalView.java" name="SubsampleIntervalView.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="27" loc="182" coveredmethods="0" methods="16" elements="75" classes="1" ncloc="114" statements="37" conditionals="22" coveredstatements="0"/>
            <class name="SubsampleIntervalView">
               <metrics coveredelements="0" coveredconditionals="0" complexity="27" coveredmethods="0" methods="16" elements="75" statements="37" conditionals="22" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="SubsampleIntervalView(RandomAccessibleInterval&lt; T &gt;,long)" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="SubsampleIntervalView(RandomAccessibleInterval&lt; T &gt;,long)" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="min(int) : long" num="89" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="min(long[]) : void" num="95" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="98" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="min(Positionable) : void" num="102" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="max(int) : long" num="109" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="max(long[]) : void" num="115" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="max(Positionable) : void" num="122" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMin(int) : double" num="129" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="realMin(double[]) : void" num="135" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="138" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="realMin(RealPositionable) : void" num="142" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="145" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMax(int) : double" num="149" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="realMax(double[]) : void" num="155" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="realMax(RealPositionable) : void" num="162" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="165" type="cond"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="dimensions(long[]) : void" num="169" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="172" type="cond"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dimension(int) : long" num="177" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/view/SubsampleView.java" name="SubsampleView.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="46" loc="287" coveredmethods="0" methods="34" elements="112" classes="2" ncloc="200" statements="54" conditionals="24" coveredstatements="0"/>
            <class name="SubsampleView">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="7" elements="22" statements="11" conditionals="4" coveredstatements="0"/>
            </class>
            <class name="SubsampleView.SubsampleRandomAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="37" coveredmethods="0" methods="27" elements="90" statements="43" conditionals="20" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="SubsampleRandomAccess(RandomAccess&lt; T &gt;)" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SubsampleRandomAccess()" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SubsampleRandomAccess(Interval)" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(int[]) : void" num="80" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(long[]) : void" num="87" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="90" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntPosition(int) : int" num="94" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLongPosition(int) : long" num="100" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(float[]) : void" num="106" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="localize(double[]) : void" num="113" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="116" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFloatPosition(int) : float" num="120" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDoublePosition(int) : double" num="126" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="132" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fwd(int) : void" num="138" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bck(int) : void" num="144" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(int,int) : void" num="150" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(long,int) : void" num="156" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(Localizable) : void" num="162" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="165" type="cond"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(int[]) : void" num="170" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(long[]) : void" num="178" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="181" type="cond"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(Localizable) : void" num="186" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="189" type="cond"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(int[]) : void" num="194" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="197" type="cond"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(long[]) : void" num="202" count="0" type="method"/>
            <line num="205" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="205" type="cond"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(int,int) : void" num="210" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPosition(long,int) : void" num="216" count="0" type="method"/>
            <line num="219" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="222" count="0" type="method"/>
            <line num="225" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : SubsampleRandomAccess" num="228" count="0" type="method"/>
            <line num="231" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRandomAccess() : SubsampleRandomAccess" num="234" count="0" type="method"/>
            <line num="237" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="SubsampleView(RandomAccessible&lt; T &gt;,long)" num="241" count="0" type="method"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="245" type="cond"/>
            <line num="246" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="SubsampleView(RandomAccessible&lt; T &gt;,long)" num="249" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="251" type="cond"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="257" count="0" type="method"/>
            <line num="260" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess() : RandomAccess&lt; T &gt;" num="263" count="0" type="method"/>
            <line num="266" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess(Interval) : RandomAccess&lt; T &gt;" num="269" count="0" type="method"/>
            <line num="272" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSource() : RandomAccessible&lt; T &gt;" num="275" count="0" type="method"/>
            <line num="277" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSteps() : long[]" num="283" count="0" type="method"/>
            <line num="285" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/view/TransformBuilder.java" name="TransformBuilder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="70" loc="475" coveredmethods="0" methods="28" elements="236" classes="1" ncloc="291" statements="130" conditionals="78" coveredstatements="0"/>
            <class name="TransformBuilder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="70" coveredmethods="0" methods="28" elements="236" statements="130" conditionals="78" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="getEfficientRandomAccessible(Interval,RandomAccessible&lt; S &gt;) : RandomAccessible&lt; S &gt;" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="2" visibility="protected" signature="TransformBuilder(Interval,RandomAccessible&lt; T &gt;)" num="117" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="3" visibility="protected" signature="prependTransform(Transform) : void" num="135" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="137" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="5" visibility="protected" signature="visit(RandomAccessible&lt; T &gt;) : void" num="154" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="157" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="161" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="165" type="cond"/>
            <line num="167" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="169" type="cond"/>
            <line num="171" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="visitTransformed(TransformedRandomAccessible&lt; T &gt;) : void" num="186" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="3" visibility="protected" signature="visitExtended(ExtendedRandomAccessibleInterval&lt; T, ? &gt;) : void" num="201" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="204" type="cond"/>
            <line num="205" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="isIdentity(Mixed) : boolean" num="210" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="214" type="cond"/>
            <line num="215" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="217" type="cond"/>
            <line num="219" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="219" type="cond"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="221" type="cond"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="223" type="cond"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="225" type="cond"/>
            <line num="226" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="isTranslation(Mixed) : boolean" num="231" count="0" type="method"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="235" type="cond"/>
            <line num="236" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="238" type="cond"/>
            <line num="240" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="240" type="cond"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="242" type="cond"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="244" type="cond"/>
            <line num="245" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="isComponentMapping(Mixed) : boolean" num="250" count="0" type="method"/>
            <line num="252" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="254" type="cond"/>
            <line num="256" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="256" type="cond"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="258" type="cond"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="260" type="cond"/>
            <line num="261" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="isSlicing(Mixed) : boolean" num="266" count="0" type="method"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="270" type="cond"/>
            <line num="271" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="273" type="cond"/>
            <line num="275" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="275" type="cond"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="277" type="cond"/>
            <line num="278" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line complexity="6" visibility="protected" signature="simplifyTransforms() : void" num="293" count="0" type="method"/>
            <line num="295" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="297" type="cond"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="300" type="cond"/>
            <line num="302" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="303" type="cond"/>
            <line num="307" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="309" type="cond"/>
            <line num="313" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="325" type="cond"/>
            <line num="329" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line complexity="5" visibility="protected" signature="build() : RandomAccessible&lt; T &gt;" num="352" count="0" type="method"/>
            <line num="354" count="0" type="stmt"/>
            <line num="355" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="355" type="cond"/>
            <line num="357" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="358" type="cond"/>
            <line num="359" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="360" type="cond"/>
            <line num="361" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="362" type="cond"/>
            <line num="363" count="0" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="wrapGenericTransform(RandomAccessible&lt; T &gt;,Transform) : RandomAccessible&lt; T &gt;" num="370" count="0" type="method"/>
            <line num="372" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="374" count="0" type="method"/>
            <line num="377" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess() : RandomAccess&lt; T &gt;" num="380" count="0" type="method"/>
            <line num="383" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess(Interval) : RandomAccess&lt; T &gt;" num="386" count="0" type="method"/>
            <line num="389" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="wrapMixedTransform(RandomAccessible&lt; T &gt;,MixedTransform) : RandomAccessible&lt; T &gt;" num="394" count="0" type="method"/>
            <line num="396" count="0" type="stmt"/>
            <line num="397" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="399" count="0" type="method"/>
            <line num="402" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="randomAccess() : RandomAccess&lt; T &gt;" num="405" count="0" type="method"/>
            <line num="408" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="408" type="cond"/>
            <line num="409" count="0" type="stmt"/>
            <line num="410" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="randomAccess(Interval) : RandomAccess&lt; T &gt;" num="413" count="0" type="method"/>
            <line num="416" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="416" type="cond"/>
            <line num="417" count="0" type="stmt"/>
            <line num="418" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="wrapTranslationTransform(RandomAccessible&lt; T &gt;,TranslationTransform) : RandomAccessible&lt; T &gt;" num="423" count="0" type="method"/>
            <line num="425" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="427" count="0" type="method"/>
            <line num="430" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess() : TranslationRandomAccess&lt; T &gt;" num="433" count="0" type="method"/>
            <line num="436" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess(Interval) : TranslationRandomAccess&lt; T &gt;" num="439" count="0" type="method"/>
            <line num="442" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="wrapSlicingTransform(RandomAccessible&lt; T &gt;,SlicingTransform) : RandomAccessible&lt; T &gt;" num="447" count="0" type="method"/>
            <line num="449" count="0" type="stmt"/>
            <line num="450" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="452" count="0" type="method"/>
            <line num="455" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="randomAccess() : RandomAccess&lt; T &gt;" num="458" count="0" type="method"/>
            <line num="461" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="461" type="cond"/>
            <line num="462" count="0" type="stmt"/>
            <line num="463" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="randomAccess(Interval) : RandomAccess&lt; T &gt;" num="466" count="0" type="method"/>
            <line num="469" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="469" type="cond"/>
            <line num="470" count="0" type="stmt"/>
            <line num="471" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/view/TransformRandomAccess.java" name="TransformRandomAccess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="34" loc="203" coveredmethods="0" methods="17" elements="81" classes="1" ncloc="121" statements="30" conditionals="34" coveredstatements="0"/>
            <class name="TransformRandomAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="34" coveredmethods="0" methods="17" elements="81" statements="30" conditionals="34" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="TransformRandomAccess(RandomAccess&lt; T &gt;,Transform)" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="TransformRandomAccess(TransformRandomAccess&lt; T &gt;)" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="fwd(int) : void" num="89" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="bck(int) : void" num="96" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(int,int) : void" num="103" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="move(long,int) : void" num="110" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="move(Localizable) : void" num="117" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="move(int[]) : void" num="126" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="129" type="cond"/>
            <line num="131" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="131" type="cond"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="move(long[]) : void" num="135" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="138" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="140" type="cond"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(Localizable) : void" num="144" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="147" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="setPosition(int[]) : void" num="152" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="157" type="cond"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="setPosition(long[]) : void" num="161" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
            <line num="166" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="166" type="cond"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(int,int) : void" num="170" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(long,int) : void" num="177" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="180" type="cond"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="184" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : TransformRandomAccess&lt; T &gt;" num="192" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRandomAccess() : TransformRandomAccess&lt; T &gt;" num="198" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/view/TransformView.java" name="TransformView.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="102" coveredmethods="0" methods="6" elements="21" classes="1" ncloc="47" statements="11" conditionals="4" coveredstatements="0"/>
            <class name="TransformView">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="6" elements="21" statements="11" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="TransformView(RandomAccessible&lt; T &gt;,Transform)" num="59" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="71" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSource() : RandomAccessible&lt; T &gt;" num="77" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTransformToSource() : Transform" num="83" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess(Interval) : RandomAccess&lt; T &gt;" num="89" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="randomAccess() : RandomAccess&lt; T &gt;" num="95" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="98" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/view/TransformedRandomAccessible.java" name="TransformedRandomAccessible.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="72" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TransformedRandomAccessible">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/view/TranslationRandomAccess.java" name="TranslationRandomAccess.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="46" loc="237" coveredmethods="0" methods="25" elements="110" classes="1" ncloc="166" statements="43" conditionals="42" coveredstatements="0"/>
            <class name="TranslationRandomAccess">
               <metrics coveredelements="0" coveredconditionals="0" complexity="46" coveredmethods="0" methods="25" elements="110" statements="43" conditionals="42" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="package" signature="TranslationRandomAccess(RandomAccess&lt; T &gt;,Translation)" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="58" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="TranslationRandomAccess(TranslationRandomAccess&lt; T &gt;)" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="localize(int[]) : void" num="76" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="localize(long[]) : void" num="84" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getIntPosition(int) : int" num="92" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getLongPosition(int) : long" num="99" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="localize(float[]) : void" num="106" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="localize(double[]) : void" num="114" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFloatPosition(int) : float" num="122" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDoublePosition(int) : double" num="129" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="132" type="cond"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fwd(int) : void" num="136" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bck(int) : void" num="142" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(int,int) : void" num="148" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(long,int) : void" num="154" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(Localizable) : void" num="160" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(int[]) : void" num="166" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="move(long[]) : void" num="172" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="setPosition(Localizable) : void" num="178" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="181" type="cond"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="183" type="cond"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="setPosition(int[]) : void" num="188" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="191" type="cond"/>
            <line num="192" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="192" type="cond"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="setPosition(long[]) : void" num="197" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="200" type="cond"/>
            <line num="201" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="201" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(int,int) : void" num="206" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="209" type="cond"/>
            <line num="210" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setPosition(long,int) : void" num="213" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="216" type="cond"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="220" count="0" type="method"/>
            <line num="223" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : TranslationRandomAccess&lt; T &gt;" num="226" count="0" type="method"/>
            <line num="229" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copyRandomAccess() : TranslationRandomAccess&lt; T &gt;" num="232" count="0" type="method"/>
            <line num="235" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/view/ViewTransforms.java" name="ViewTransforms.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="21" loc="292" coveredmethods="0" methods="9" elements="110" classes="1" ncloc="139" statements="77" conditionals="24" coveredstatements="0"/>
            <class name="ViewTransforms">
               <metrics coveredelements="0" coveredconditionals="0" complexity="21" coveredmethods="0" methods="9" elements="110" statements="77" conditionals="24" coveredstatements="0"/>
            </class>
            <line complexity="6" visibility="public" signature="rotate(int,int,int) : Mixed" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="permute(int,int,int) : Mixed" num="110" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="116" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="hyperSlice(int,int,long) : MixedTransform" num="140" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="148" type="cond"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="155" type="cond"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="translate(long) : MixedTransform" num="181" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="translateInverse(long) : MixedTransform" num="198" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="moveAxis(int,int,int) : MixedTransform" num="216" count="0" type="method"/>
            <line num="218" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="218" type="cond"/>
            <line num="219" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="227" type="cond"/>
            <line num="229" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="zeroMin(Interval) : MixedTransform" num="244" count="0" type="method"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addDimension(int) : MixedTransform" num="264" count="0" type="method"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invertAxis(int,int) : MixedTransform" num="284" count="0" type="method"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/view/Views.java" name="Views.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="112" loc="1639" coveredmethods="0" methods="86" elements="297" classes="1" ncloc="509" statements="161" conditionals="50" coveredstatements="0"/>
            <class name="Views">
               <metrics coveredelements="0" coveredconditionals="0" complexity="112" coveredmethods="0" methods="86" elements="297" statements="161" conditionals="50" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="interpolate(F,InterpolatorFactory&lt; T, F &gt;) : RealRandomAccessible&lt; T &gt;" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="raster(RealRandomAccessible&lt; T &gt;) : RandomAccessibleOnRealRandomAccessible&lt; T &gt;" num="124" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="extend(F,OutOfBoundsFactory&lt; T, ? super F &gt;) : ExtendedRandomAccessibleInterval&lt; T, F &gt;" num="139" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="extendMirrorSingle(F) : ExtendedRandomAccessibleInterval&lt; T, F &gt;" num="155" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="extendMirrorDouble(F) : ExtendedRandomAccessibleInterval&lt; T, F &gt;" num="170" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="extendValue(F,T) : ExtendedRandomAccessibleInterval&lt; T, F &gt;" num="185" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="extendValue(F,T) : ExtendedRandomAccessibleInterval&lt; T, F &gt;" num="201" count="0" type="method"/>
            <line num="205" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="extendValue(F,float) : ExtendedRandomAccessibleInterval&lt; T, F &gt;" num="220" count="0" type="method"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="extendValue(F,double) : ExtendedRandomAccessibleInterval&lt; T, F &gt;" num="239" count="0" type="method"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="extendValue(F,int) : ExtendedRandomAccessibleInterval&lt; T, F &gt;" num="258" count="0" type="method"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="extendValue(F,long) : ExtendedRandomAccessibleInterval&lt; T, F &gt;" num="277" count="0" type="method"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="extendValue(F,boolean) : ExtendedRandomAccessibleInterval&lt; T, F &gt;" num="296" count="0" type="method"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="extendZero(F) : ExtendedRandomAccessibleInterval&lt; T, F &gt;" num="313" count="0" type="method"/>
            <line num="315" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="extendRandom(F,double,double) : ExtendedRandomAccessibleInterval&lt; T, F &gt;" num="334" count="0" type="method"/>
            <line num="336" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="extendPeriodic(F) : ExtendedRandomAccessibleInterval&lt; T, F &gt;" num="348" count="0" type="method"/>
            <line num="350" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="extendBorder(F) : ExtendedRandomAccessibleInterval&lt; T, F &gt;" num="363" count="0" type="method"/>
            <line num="365" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="interval(RandomAccessible&lt; T &gt;,long[],long[]) : IntervalView&lt; T &gt;" num="381" count="0" type="method"/>
            <line num="383" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="interval(RandomAccessible&lt; T &gt;,Interval) : IntervalView&lt; T &gt;" num="397" count="0" type="method"/>
            <line num="399" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rotate(RandomAccessible&lt; T &gt;,int,int) : MixedTransformView&lt; T &gt;" num="413" count="0" type="method"/>
            <line num="415" count="0" type="stmt"/>
            <line num="416" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rotate(RandomAccessibleInterval&lt; T &gt;,int,int) : IntervalView&lt; T &gt;" num="430" count="0" type="method"/>
            <line num="432" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="permute(RandomAccessible&lt; T &gt;,int,int) : MixedTransformView&lt; T &gt;" num="442" count="0" type="method"/>
            <line num="444" count="0" type="stmt"/>
            <line num="445" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="permute(RandomAccessibleInterval&lt; T &gt;,int,int) : IntervalView&lt; T &gt;" num="455" count="0" type="method"/>
            <line num="457" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="moveAxis(RandomAccessible&lt; T &gt;,int,int) : RandomAccessible&lt; T &gt;" num="467" count="0" type="method"/>
            <line num="469" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="moveAxis(RandomAccessibleInterval&lt; T &gt;,int,int) : RandomAccessibleInterval&lt; T &gt;" num="479" count="0" type="method"/>
            <line num="481" count="0" type="stmt"/>
            <line num="482" count="0" type="stmt"/>
            <line num="483" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="translate(RandomAccessible&lt; T &gt;,long) : MixedTransformView&lt; T &gt;" num="498" count="0" type="method"/>
            <line num="500" count="0" type="stmt"/>
            <line num="501" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="translate(RandomAccessibleInterval&lt; T &gt;,long) : IntervalView&lt; T &gt;" num="516" count="0" type="method"/>
            <line num="518" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="translateInverse(RandomAccessible&lt; T &gt;,long) : MixedTransformView&lt; T &gt;" num="538" count="0" type="method"/>
            <line num="540" count="0" type="stmt"/>
            <line num="541" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="translateInverse(RandomAccessibleInterval&lt; T &gt;,long) : IntervalView&lt; T &gt;" num="559" count="0" type="method"/>
            <line num="561" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="offset(RandomAccessible&lt; T &gt;,long) : MixedTransformView&lt; T &gt;" num="580" count="0" type="method"/>
            <line num="583" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="offset(RandomAccessibleInterval&lt; T &gt;,long) : IntervalView&lt; T &gt;" num="600" count="0" type="method"/>
            <line num="603" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="zeroMin(RandomAccessibleInterval&lt; T &gt;) : IntervalView&lt; T &gt;" num="613" count="0" type="method"/>
            <line num="615" count="0" type="stmt"/>
            <line num="616" count="0" type="stmt"/>
            <line num="617" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hyperSlice(RandomAccessible&lt; T &gt;,int,long) : MixedTransformView&lt; T &gt;" num="624" count="0" type="method"/>
            <line num="626" count="0" type="stmt"/>
            <line num="627" count="0" type="stmt"/>
            <line num="628" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hyperSlice(RandomAccessibleInterval&lt; T &gt;,int,long) : IntervalView&lt; T &gt;" num="635" count="0" type="method"/>
            <line num="637" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addDimension(RandomAccessible&lt; T &gt;) : MixedTransformView&lt; T &gt;" num="651" count="0" type="method"/>
            <line num="653" count="0" type="stmt"/>
            <line num="655" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addDimension(RandomAccessibleInterval&lt; T &gt;,long,long) : IntervalView&lt; T &gt;" num="674" count="0" type="method"/>
            <line num="676" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invertAxis(RandomAccessible&lt; T &gt;,int) : MixedTransformView&lt; T &gt;" num="687" count="0" type="method"/>
            <line num="689" count="0" type="stmt"/>
            <line num="690" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invertAxis(RandomAccessibleInterval&lt; T &gt;,int) : IntervalView&lt; T &gt;" num="701" count="0" type="method"/>
            <line num="703" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="offsetInterval(RandomAccessible&lt; T &gt;,long[],long[]) : IntervalView&lt; T &gt;" num="719" count="0" type="method"/>
            <line num="721" count="0" type="stmt"/>
            <line num="722" count="0" type="stmt"/>
            <line num="723" count="0" type="stmt"/>
            <line num="724" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="724" type="cond"/>
            <line num="725" count="0" type="stmt"/>
            <line num="726" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="offsetInterval(RandomAccessible&lt; T &gt;,Interval) : IntervalView&lt; T &gt;" num="741" count="0" type="method"/>
            <line num="743" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="isZeroMin(Interval) : boolean" num="753" count="0" type="method"/>
            <line num="755" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="755" type="cond"/>
            <line num="756" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="756" type="cond"/>
            <line num="757" count="0" type="stmt"/>
            <line num="759" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="iterable(RandomAccessibleInterval&lt; T &gt;) : IterableInterval&lt; T &gt;" num="772" count="0" type="method"/>
            <line num="775" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="775" type="cond"/>
            <line num="777" count="0" type="stmt"/>
            <line num="778" count="0" type="stmt"/>
            <line num="779" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="779" type="cond"/>
            <line num="780" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="780" type="cond"/>
            <line num="781" count="0" type="stmt"/>
            <line num="783" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="flatIterable(RandomAccessibleInterval&lt; T &gt;) : IterableInterval&lt; T &gt;" num="797" count="0" type="method"/>
            <line num="800" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="800" type="cond"/>
            <line num="802" count="0" type="stmt"/>
            <line num="803" count="0" type="stmt"/>
            <line num="804" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="804" type="cond"/>
            <line num="805" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="805" type="cond"/>
            <line num="806" count="0" type="stmt"/>
            <line num="808" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="collapse(RandomAccessibleInterval&lt; T &gt;) : CompositeIntervalView&lt; T, ? extends GenericComposite&lt; T &gt; &gt;" num="822" count="0" type="method"/>
            <line num="824" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="collapseReal(RandomAccessibleInterval&lt; T &gt;) : CompositeIntervalView&lt; T, RealComposite&lt; T &gt; &gt;" num="838" count="0" type="method"/>
            <line num="840" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="collapseNumeric(RandomAccessibleInterval&lt; T &gt;) : CompositeIntervalView&lt; T, NumericComposite&lt; T &gt; &gt;" num="854" count="0" type="method"/>
            <line num="856" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="collapse(RandomAccessible&lt; T &gt;) : CompositeView&lt; T, ? extends GenericComposite&lt; T &gt; &gt;" num="870" count="0" type="method"/>
            <line num="872" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="collapseReal(RandomAccessible&lt; T &gt;,int) : CompositeView&lt; T, RealComposite&lt; T &gt; &gt;" num="889" count="0" type="method"/>
            <line num="891" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="collapseNumeric(RandomAccessible&lt; T &gt;,int) : CompositeView&lt; T, NumericComposite&lt; T &gt; &gt;" num="908" count="0" type="method"/>
            <line num="910" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subsample(RandomAccessibleInterval&lt; T &gt;,long) : SubsampleIntervalView&lt; T &gt;" num="925" count="0" type="method"/>
            <line num="927" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="subsample(RandomAccessibleInterval&lt; T &gt;,long) : SubsampleIntervalView&lt; T &gt;" num="942" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="944" type="cond"/>
            <line num="946" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subsample(RandomAccessible&lt; T &gt;,long) : SubsampleView&lt; T &gt;" num="961" count="0" type="method"/>
            <line num="963" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="subsample(RandomAccessible&lt; T &gt;,long) : SubsampleView&lt; T &gt;" num="978" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="980" type="cond"/>
            <line num="982" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="dropSingletonDimensions(RandomAccessibleInterval&lt; T &gt;) : RandomAccessibleInterval&lt; T &gt;" num="993" count="0" type="method"/>
            <line num="995" count="0" type="stmt"/>
            <line num="996" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="996" type="cond"/>
            <line num="997" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="997" type="cond"/>
            <line num="998" count="0" type="stmt"/>
            <line num="1000" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="stack(List&lt; ? extends RandomAccessibleInterval&lt; T &gt; &gt;) : RandomAccessibleInterval&lt; T &gt;" num="1013" count="0" type="method"/>
            <line num="1015" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="stack(RandomAccessibleInterval&lt; T &gt;) : RandomAccessibleInterval&lt; T &gt;" num="1028" count="0" type="method"/>
            <line num="1031" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="stack(StackAccessMode,List&lt; ? extends RandomAccessibleInterval&lt; T &gt; &gt;) : RandomAccessibleInterval&lt; T &gt;" num="1049" count="0" type="method"/>
            <line num="1051" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="stack(StackAccessMode,RandomAccessibleInterval&lt; T &gt;) : RandomAccessibleInterval&lt; T &gt;" num="1069" count="0" type="method"/>
            <line num="1071" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="shear(RandomAccessible&lt; T &gt;,int,int) : TransformView&lt; T &gt;" num="1088" count="0" type="method"/>
            <line num="1090" count="0" type="stmt"/>
            <line num="1091" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unshear(RandomAccessible&lt; T &gt;,int,int) : TransformView&lt; T &gt;" num="1108" count="0" type="method"/>
            <line num="1110" count="0" type="stmt"/>
            <line num="1111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="shear(RandomAccessible&lt; T &gt;,Interval,int,int) : IntervalView&lt; T &gt;" num="1132" count="0" type="method"/>
            <line num="1134" count="0" type="stmt"/>
            <line num="1135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unshear(RandomAccessible&lt; T &gt;,Interval,int,int) : IntervalView&lt; T &gt;" num="1156" count="0" type="method"/>
            <line num="1158" count="0" type="stmt"/>
            <line num="1159" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="permuteCoordinates(RandomAccessibleInterval&lt; T &gt;,int[]) : IntervalView&lt; T &gt;" num="1176" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="1178" type="cond"/>
            <line falsecount="0" truecount="0" num="1179" type="cond"/>
            <line num="1181" count="0" type="stmt"/>
            <line num="1182" count="0" type="stmt"/>
            <line num="1183" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="permuteCoordinates(RandomAccessibleInterval&lt; T &gt;,int[],int) : IntervalView&lt; T &gt;" num="1201" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="1203" type="cond"/>
            <line falsecount="0" truecount="0" num="1204" type="cond"/>
            <line falsecount="0" truecount="0" num="1205" type="cond"/>
            <line num="1207" count="0" type="stmt"/>
            <line num="1208" count="0" type="stmt"/>
            <line num="1209" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="permuteCoordinatesInverse(RandomAccessibleInterval&lt; T &gt;,int[]) : IntervalView&lt; T &gt;" num="1226" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="1228" type="cond"/>
            <line falsecount="0" truecount="0" num="1229" type="cond"/>
            <line num="1231" count="0" type="stmt"/>
            <line num="1232" count="0" type="stmt"/>
            <line num="1233" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="permuteCoordinateInverse(RandomAccessibleInterval&lt; T &gt;,int[],int) : IntervalView&lt; T &gt;" num="1254" count="0" type="method"/>
            <line num="1257" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="permuteCoordinatesInverse(RandomAccessibleInterval&lt; T &gt;,int[],int) : IntervalView&lt; T &gt;" num="1275" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="1277" type="cond"/>
            <line falsecount="0" truecount="0" num="1278" type="cond"/>
            <line falsecount="0" truecount="0" num="1279" type="cond"/>
            <line num="1281" count="0" type="stmt"/>
            <line num="1282" count="0" type="stmt"/>
            <line num="1283" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="pair(RandomAccessible&lt; A &gt;,RandomAccessible&lt; B &gt;) : RandomAccessible&lt; Pair&lt; A, B &gt; &gt;" num="1294" count="0" type="method"/>
            <line num="1296" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hyperSlices(RandomAccessible&lt; T &gt;,int) : RandomAccessible&lt; ? extends RandomAccessible&lt; T &gt; &gt;" num="1311" count="0" type="method"/>
            <line num="1313" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="expand(F,OutOfBoundsFactory&lt; T, ? super F &gt;,long) : IntervalView&lt; T &gt;" num="1327" count="0" type="method"/>
            <line num="1329" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="expandMirrorSingle(RandomAccessibleInterval&lt; T &gt;,long) : IntervalView&lt; T &gt;" num="1343" count="0" type="method"/>
            <line num="1345" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="expandMirrorDouble(RandomAccessibleInterval&lt; T &gt;,long) : IntervalView&lt; T &gt;" num="1357" count="0" type="method"/>
            <line num="1359" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="expandValue(RandomAccessibleInterval&lt; T &gt;,T,long) : IntervalView&lt; T &gt;" num="1373" count="0" type="method"/>
            <line num="1375" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="expandValue(RandomAccessibleInterval&lt; T &gt;,T,long) : IntervalView&lt; T &gt;" num="1390" count="0" type="method"/>
            <line num="1394" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="expandValue(RandomAccessibleInterval&lt; T &gt;,float,long) : IntervalView&lt; T &gt;" num="1408" count="0" type="method"/>
            <line num="1410" count="0" type="stmt"/>
            <line num="1411" count="0" type="stmt"/>
            <line num="1412" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="expandValue(RandomAccessibleInterval&lt; T &gt;,double,long) : IntervalView&lt; T &gt;" num="1426" count="0" type="method"/>
            <line num="1428" count="0" type="stmt"/>
            <line num="1429" count="0" type="stmt"/>
            <line num="1430" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="expandValue(RandomAccessibleInterval&lt; T &gt;,int,long) : IntervalView&lt; T &gt;" num="1444" count="0" type="method"/>
            <line num="1446" count="0" type="stmt"/>
            <line num="1447" count="0" type="stmt"/>
            <line num="1448" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="expandValue(RandomAccessibleInterval&lt; T &gt;,long,long) : IntervalView&lt; T &gt;" num="1462" count="0" type="method"/>
            <line num="1464" count="0" type="stmt"/>
            <line num="1465" count="0" type="stmt"/>
            <line num="1466" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="expandValue(RandomAccessibleInterval&lt; T &gt;,boolean,long) : IntervalView&lt; T &gt;" num="1480" count="0" type="method"/>
            <line num="1482" count="0" type="stmt"/>
            <line num="1483" count="0" type="stmt"/>
            <line num="1484" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="expandZero(RandomAccessibleInterval&lt; T &gt;,long) : IntervalView&lt; T &gt;" num="1496" count="0" type="method"/>
            <line num="1498" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="expandRandom(RandomAccessibleInterval&lt; T &gt;,double,double,long) : IntervalView&lt; T &gt;" num="1514" count="0" type="method"/>
            <line num="1516" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="expandPeriodic(RandomAccessibleInterval&lt; T &gt;,long) : IntervalView&lt; T &gt;" num="1528" count="0" type="method"/>
            <line num="1530" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="expandBorder(RandomAccessibleInterval&lt; T &gt;,long) : IntervalView&lt; T &gt;" num="1542" count="0" type="method"/>
            <line num="1544" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="concatenate(int,RandomAccessibleInterval&lt; T &gt;) : RandomAccessibleInterval&lt; T &gt;" num="1559" count="0" type="method"/>
            <line num="1564" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="concatenate(int,List&lt; ? extends RandomAccessibleInterval&lt; T &gt; &gt;) : RandomAccessibleInterval&lt; T &gt;" num="1578" count="0" type="method"/>
            <line num="1582" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="concatenate(int,StackView.StackAccessMode,RandomAccessibleInterval&lt; T &gt;) : RandomAccessibleInterval&lt; T &gt;" num="1600" count="0" type="method"/>
            <line num="1606" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="concatenate(int,StackView.StackAccessMode,List&lt; ? extends RandomAccessibleInterval&lt; T &gt; &gt;) : RandomAccessibleInterval&lt; T &gt;" num="1624" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="1629" type="cond"/>
            <line num="1631" count="0" type="stmt"/>
            <line num="1632" count="0" type="stmt"/>
            <line num="1633" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1633" type="cond"/>
            <line num="1634" count="0" type="stmt"/>
            <line num="1636" count="0" type="stmt"/>
            <line num="1637" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/view/ConcatenateViewTest.java" name="ConcatenateViewTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="137" coveredmethods="0" methods="7" elements="36" classes="1" ncloc="76" statements="29" conditionals="0" coveredstatements="0"/>
            <class name="ConcatenateViewTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="36" statements="29" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testConcatenateSimple() : void" num="65" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConcatenate() : void" num="77" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConcatenateFirstAxis() : void" num="83" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="testConcatenateImpl(long[],int,long) : void" num="89" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="createRandomImage(long[]) : ArrayImg&lt; ByteType, ByteArray &gt;" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="splitImage(RandomAccessibleInterval&lt; ByteType &gt;,int,long) : List&lt; RandomAccessibleInterval&lt; ByteType &gt; &gt;" num="109" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertImageEquals(RandomAccessibleInterval&lt; ByteType &gt;,RandomAccessibleInterval&lt; ByteType &gt;) : void" num="130" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/view/HyperSlicesViewTest.java" name="HyperSlicesViewTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="134" coveredmethods="0" methods="3" elements="50" classes="1" ncloc="77" statements="37" conditionals="10" coveredstatements="0"/>
            <class name="HyperSlicesViewTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="3" elements="50" statements="37" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="private" signature="hyperSlice2Array(RandomAccess&lt; HyperSlice&lt; LongType &gt; &gt;,int) : long[]" num="52" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="printHyperSlice(RandomAccess&lt; HyperSlice&lt; LongType &gt; &gt;,int) : String" num="78" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="test() : void" num="104" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="130" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/view/MixedTransformConcatenateTest.java" name="MixedTransformConcatenateTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="39" loc="425" coveredmethods="0" methods="35" elements="182" classes="1" ncloc="307" statements="139" conditionals="8" coveredstatements="0"/>
            <class name="MixedTransformConcatenateTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="39" coveredmethods="0" methods="35" elements="182" statements="139" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="testConcatenation(MixedTransform,Mixed) : boolean" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testPreConcatenation(Mixed,MixedTransform) : boolean" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="94" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setUp() : void" num="152" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="concatenateSlice1Tr3() : void" num="201" count="0" type="method"/>
            <line num="204" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="preconcatenateSlice1Tr3() : void" num="207" count="0" type="method"/>
            <line num="210" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="concatenateProj1Tr1() : void" num="213" count="0" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="preconcatenateProj1Tr1() : void" num="219" count="0" type="method"/>
            <line num="222" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="concatenateTr11Tr2() : void" num="225" count="0" type="method"/>
            <line num="228" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="preconcatenateTr1Tr2() : void" num="231" count="0" type="method"/>
            <line num="234" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="concatenateTr1Perm1() : void" num="237" count="0" type="method"/>
            <line num="240" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="preconcatenateTr1Perm1() : void" num="243" count="0" type="method"/>
            <line num="246" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="concatenateTr1Rot1() : void" num="249" count="0" type="method"/>
            <line num="252" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="preconcatenateTr1Rot1() : void" num="255" count="0" type="method"/>
            <line num="258" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="concatenateRot1Tr1() : void" num="261" count="0" type="method"/>
            <line num="264" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="preconcatenateRot1Tr1() : void" num="267" count="0" type="method"/>
            <line num="270" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="concatenateProj1Proj2() : void" num="273" count="0" type="method"/>
            <line num="276" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="preconcatenateProj1Proj2() : void" num="279" count="0" type="method"/>
            <line num="282" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="concatenateProj2Proj1() : void" num="285" count="0" type="method"/>
            <line num="288" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="preconcatenateProj2Proj1() : void" num="291" count="0" type="method"/>
            <line num="294" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="concatenateComp1Tr1() : void" num="297" count="0" type="method"/>
            <line num="300" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="preconcatenateComp1Tr1() : void" num="303" count="0" type="method"/>
            <line num="306" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="concatenateTr1Comp1() : void" num="309" count="0" type="method"/>
            <line num="312" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="preconcatenateTr1Comp1() : void" num="315" count="0" type="method"/>
            <line num="318" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="concatenateComp1Rot1() : void" num="321" count="0" type="method"/>
            <line num="324" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="preconcatenateComp1Rot1() : void" num="327" count="0" type="method"/>
            <line num="330" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="concatenateRot1Comp1() : void" num="333" count="0" type="method"/>
            <line num="336" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="preconcatenateRot1Comp1() : void" num="339" count="0" type="method"/>
            <line num="342" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="concatenateProj1Comp1() : void" num="345" count="0" type="method"/>
            <line num="348" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="preconcatenateProj1Comp1() : void" num="351" count="0" type="method"/>
            <line num="354" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="concatenateComp1Proj2() : void" num="357" count="0" type="method"/>
            <line num="360" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="preconcatenateComp1Proj2() : void" num="363" count="0" type="method"/>
            <line num="366" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="concatenateComp1Translation1() : void" num="369" count="0" type="method"/>
            <line num="372" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="preconcatenateTranslation1Comp1() : void" num="375" count="0" type="method"/>
            <line num="378" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="concatenateComp1Slicing1() : void" num="381" count="0" type="method"/>
            <line num="384" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="387" count="0" type="method"/>
            <line num="389" count="0" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line num="392" count="0" type="stmt"/>
            <line num="393" count="0" type="stmt"/>
            <line num="394" count="0" type="stmt"/>
            <line num="395" count="0" type="stmt"/>
            <line num="396" count="0" type="stmt"/>
            <line num="397" count="0" type="stmt"/>
            <line num="398" count="0" type="stmt"/>
            <line num="399" count="0" type="stmt"/>
            <line num="401" count="0" type="stmt"/>
            <line num="402" count="0" type="stmt"/>
            <line num="404" count="0" type="stmt"/>
            <line num="405" count="0" type="stmt"/>
            <line num="407" count="0" type="stmt"/>
            <line num="408" count="0" type="stmt"/>
            <line num="410" count="0" type="stmt"/>
            <line num="411" count="0" type="stmt"/>
            <line num="413" count="0" type="stmt"/>
            <line num="414" count="0" type="stmt"/>
            <line num="416" count="0" type="stmt"/>
            <line num="417" count="0" type="stmt"/>
            <line num="419" count="0" type="stmt"/>
            <line num="420" count="0" type="stmt"/>
            <line num="422" count="0" type="stmt"/>
            <line num="423" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/view/RandomAccessTest.java" name="RandomAccessTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="16" loc="186" coveredmethods="0" methods="8" elements="94" classes="1" ncloc="118" statements="70" conditionals="16" coveredstatements="0"/>
            <class name="RandomAccessTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="16" coveredmethods="0" methods="8" elements="94" statements="70" conditionals="16" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="55" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRandomAccess() : void" num="62" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFullSourceMapMixedAccess() : void" num="77" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testlocalize(RandomAccess&lt; T &gt;,long[]) : void" num="97" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testfwd(RandomAccess&lt; T &gt;,long[]) : void" num="115" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testbck(RandomAccess&lt; T &gt;,long[]) : void" num="134" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="145" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testmove(RandomAccess&lt; T &gt;,long[],long) : void" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testmove(RandomAccess&lt; T &gt;,long[],long[]) : void" num="172" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="177" type="cond"/>
            <line num="178" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/view/RandomAccessibleIntervalCursorBenchmark.java" name="RandomAccessibleIntervalCursorBenchmark.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="138" coveredmethods="0" methods="5" elements="53" classes="1" ncloc="83" statements="36" conditionals="12" coveredstatements="0"/>
            <class name="RandomAccessibleIntervalCursorBenchmark">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="5" elements="53" statements="36" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="setUp() : void" num="69" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="copy(C,D) : void" num="97" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="getImgAsInts(Img&lt; IntType &gt;) : int[]" num="103" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="main(String[]) : void" num="120" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="130" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/view/RandomAccessibleIntervalCursorTest.java" name="RandomAccessibleIntervalCursorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="166" coveredmethods="0" methods="7" elements="67" classes="1" ncloc="104" statements="48" conditionals="12" coveredstatements="0"/>
            <class name="RandomAccessibleIntervalCursorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="7" elements="67" statements="48" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="setUp() : void" num="74" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="90" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="copy(Cursor&lt; IntType &gt;,Cursor&lt; IntType &gt;) : void" num="103" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="getImgAsInts(Img&lt; IntType &gt;) : int[]" num="109" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="117" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testJumpFwd() : void" num="126" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArrayCopy() : void" num="146" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testArrayCopy2() : void" num="153" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCellCopy() : void" num="160" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/view/RotationViewTest.java" name="RotationViewTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="98" coveredmethods="0" methods="1" elements="25" classes="1" ncloc="39" statements="18" conditionals="6" coveredstatements="0"/>
            <class name="RotationViewTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="1" elements="25" statements="18" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="test() : void" num="58" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/view/SequentializeTransformTest.java" name="SequentializeTransformTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="207" coveredmethods="0" methods="4" elements="126" classes="1" ncloc="145" statements="116" conditionals="6" coveredstatements="0"/>
            <class name="SequentializeTransformTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="4" elements="126" statements="116" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test2Dto1D() : void" num="48" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test3Dto1D() : void" num="77" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test4Dto3D() : void" num="116" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="test4Dto3DInverse() : void" num="157" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="172" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="185" type="cond"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="198" type="cond"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/view/SlicingTransformConcatenateTest.java" name="SlicingTransformConcatenateTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="157" coveredmethods="0" methods="5" elements="71" classes="1" ncloc="96" statements="58" conditionals="8" coveredstatements="0"/>
            <class name="SlicingTransformConcatenateTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="5" elements="71" statements="58" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="testConcatenation(SlicingTransform,Slicing) : boolean" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testPreConcatenation(Slicing,SlicingTransform) : boolean" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setUp() : void" num="132" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="concatenateTr1Tr2() : void" num="146" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="preconcatenateTr1Tr2() : void" num="152" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/view/StackRandomAccessibleIntervalsTest.java" name="StackRandomAccessibleIntervalsTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="103" coveredmethods="0" methods="2" elements="25" classes="1" ncloc="45" statements="15" conditionals="8" coveredstatements="0"/>
            <class name="StackRandomAccessibleIntervalsTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="2" elements="25" statements="15" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="setUp() : void" num="63" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="71" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="testStacking() : void" num="79" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="98" type="cond"/>
            <line num="100" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/view/SubsampleIntervalViewTest.java" name="SubsampleIntervalViewTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="144" coveredmethods="0" methods="2" elements="35" classes="1" ncloc="88" statements="27" conditionals="6" coveredstatements="0"/>
            <class name="SubsampleIntervalViewTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="2" elements="35" statements="27" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="test1DSubsampling() : void" num="52" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testDimSubsampling() : void" num="95" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/view/TranslationTransformConcatenateTest.java" name="TranslationTransformConcatenateTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="165" coveredmethods="0" methods="7" elements="71" classes="1" ncloc="102" statements="56" conditionals="8" coveredstatements="0"/>
            <class name="TranslationTransformConcatenateTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="7" elements="71" statements="56" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="testConcatenation(TranslationTransform,Translation) : boolean" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testPreConcatenation(Translation,TranslationTransform) : boolean" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setUp() : void" num="132" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="concatenateTr1Tr2() : void" num="142" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="preconcatenateTr1Tr2() : void" num="148" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="concatenateTr2Tr1() : void" num="154" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="preconcatenateTr2Tr1() : void" num="160" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/view/ViewTransformsTest.java" name="ViewTransformsTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="118" coveredmethods="0" methods="9" elements="37" classes="1" ncloc="72" statements="28" conditionals="0" coveredstatements="0"/>
            <class name="ViewTransformsTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="9" elements="37" statements="28" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testTranslate() : void" num="46" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRotate() : void" num="54" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPermute() : void" num="62" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMoveAxis() : void" num="70" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInvertAxis() : void" num="78" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testZeroMin() : void" num="86" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAddDimension() : void" num="95" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHyperSlice() : void" num="103" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="apply(Mixed,long[]) : long[]" num="111" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/view/ViewsTest.java" name="ViewsTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="232" coveredmethods="0" methods="12" elements="66" classes="1" ncloc="181" statements="50" conditionals="4" coveredstatements="0"/>
            <class name="ViewsTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="12" elements="66" statements="50" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testMoveAxisUp() : void" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMoveAxisDown() : void" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMoveAxisUpForInteval() : void" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMoveAxisDownForInteval() : void" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExtendValue() : void" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="testExtendFloatingPoint(long[],double,double,float) : void" num="105" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="testExpandFloatingPoint(long[],double,double,float,long) : void" num="126" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="testExtendInteger(long[],long,long,int) : void" num="148" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="testExpandInteger(long[],long,long,int,long) : void" num="169" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="testExtendBoolean(long[],boolean,boolean) : void" num="191" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="testExpandBoolean(long[],boolean,boolean,long) : void" num="205" count="0" type="method"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="testValueExtended(RandomAccessible&lt;T&gt;,Interval,Interval,T,T) : void" num="220" count="0" type="method"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="227" type="cond"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="229" type="cond"/>
         </file>
      </package>
      <package name="net.imglib2.type.numeric.integer">
         <metrics coveredelements="0" complexity="655" loc="6506" methods="616" classes="33" statements="1140" coveredconditionals="0" coveredmethods="0" elements="1834" ncloc="3808" files="33" conditionals="78" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/numeric/integer/AbstractIntegerBitType.java" name="AbstractIntegerBitType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="43" loc="208" coveredmethods="0" methods="42" elements="86" classes="1" ncloc="116" statements="42" conditionals="2" coveredstatements="0"/>
            <class name="AbstractIntegerBitType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="43" coveredmethods="0" methods="42" elements="86" statements="42" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractIntegerBitType(NativeImg&lt; ?, ? extends LongAccess &gt;,int)" num="62" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBitsPerPixel() : int" num="72" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMinIncrement() : double" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(float) : void" num="78" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(double) : void" num="81" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealFloat() : float" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealDouble() : double" num="86" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setReal(float) : void" num="89" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setReal(double) : void" num="91" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setZero() : void" num="94" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setOne() : void" num="96" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="99" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInteger() : int" num="102" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegerLong() : long" num="105" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBigInteger() : BigInteger" num="108" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInteger(int) : void" num="111" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInteger(long) : void" num="114" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setBigInteger(BigInteger) : void" num="117" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxValue() : double" num="121" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMinValue() : double" num="123" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inc() : void" num="126" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dec() : void" num="129" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(T) : void" num="132" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(T) : void" num="135" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(T) : void" num="138" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(T) : void" num="141" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(T) : void" num="144" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getImaginaryFloat() : float" num="147" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getImaginaryDouble() : double" num="149" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setImaginary(float) : void" num="152" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="setImaginary(double) : void" num="154" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getPhaseFloat() : float" num="157" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPhaseDouble() : double" num="159" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPowerFloat() : float" num="162" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPowerDouble() : double" num="164" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setComplexNumber(float,float) : void" num="167" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setComplexNumber(double,double) : void" num="169" count="0" type="method"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="complexConjugate() : void" num="172" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="compareTo(T) : int" num="175" count="0" type="method"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="valueEquals(T) : boolean" num="187" count="0" type="method"/>
            <line num="190" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="equals(Object) : boolean" num="193" count="0" type="method"/>
            <line num="196" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="196" type="cond"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="203" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/numeric/integer/AbstractIntegerType.java" name="AbstractIntegerType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="134" coveredmethods="0" methods="14" elements="33" classes="1" ncloc="81" statements="17" conditionals="2" coveredstatements="0"/>
            <class name="AbstractIntegerType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="14" elements="33" statements="17" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="getMinIncrement() : double" num="47" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealFloat() : float" num="53" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealDouble() : double" num="59" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setReal(float) : void" num="65" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setReal(double) : void" num="71" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inc() : void" num="77" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dec() : void" num="83" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setZero() : void" num="89" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setOne() : void" num="95" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="101" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compareTo(T) : int" num="107" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="valueEquals(T) : boolean" num="113" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="equals(Object) : boolean" num="119" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="129" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/numeric/integer/ByteType.java" name="ByteType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="18" loc="158" coveredmethods="0" methods="18" elements="36" classes="1" ncloc="93" statements="18" conditionals="0" coveredstatements="0"/>
            <class name="ByteType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="18" coveredmethods="0" methods="18" elements="36" statements="18" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ByteType(NativeImg&lt; ?, ? extends ByteAccess &gt;)" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ByteType(byte)" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ByteType(ByteAccess)" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ByteType()" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNativeTypeFactory() : NativeTypeFactory&lt; ByteType, ByteAccess &gt;" num="77" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="duplicateTypeOnSameNativeImg() : ByteType" num="83" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : byte" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(byte) : void" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInteger() : int" num="99" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegerLong() : long" num="105" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBigInteger() : BigInteger" num="111" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInteger(int) : void" num="117" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInteger(long) : void" num="123" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setBigInteger(BigInteger) : void" num="129" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxValue() : double" num="135" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMinValue() : double" num="141" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createVariable() : ByteType" num="147" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : ByteType" num="153" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/numeric/integer/GenericByteType.java" name="GenericByteType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="34" loc="287" coveredmethods="0" methods="33" elements="82" classes="1" ncloc="190" statements="47" conditionals="2" coveredstatements="0"/>
            <class name="GenericByteType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="34" coveredmethods="0" methods="33" elements="82" statements="47" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="GenericByteType(NativeImg&lt; ?, ? extends ByteAccess &gt;)" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="GenericByteType(byte)" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="GenericByteType(ByteAccess)" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="GenericByteType()" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getEntitiesPerPixel() : Fraction" num="87" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="updateContainer(Object) : void" num="93" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getValue() : byte" num="105" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="setValue(byte) : void" num="114" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getByte() : byte" num="125" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setByte(byte) : void" num="133" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(float) : void" num="138" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(double) : void" num="145" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(T) : void" num="152" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(T) : void" num="159" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(T) : void" num="166" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(T) : void" num="173" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(T) : void" num="180" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setOne() : void" num="186" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setZero() : void" num="192" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inc() : void" num="198" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dec() : void" num="205" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="212" count="0" type="method"/>
            <line num="215" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="updateIndex(int) : void" num="218" count="0" type="method"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIndex() : int" num="224" count="0" type="method"/>
            <line num="227" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="incIndex() : void" num="230" count="0" type="method"/>
            <line num="233" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="incIndex(int) : void" num="236" count="0" type="method"/>
            <line num="239" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decIndex() : void" num="242" count="0" type="method"/>
            <line num="245" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decIndex(int) : void" num="248" count="0" type="method"/>
            <line num="251" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBitsPerPixel() : int" num="254" count="0" type="method"/>
            <line num="257" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compareTo(T) : int" num="260" count="0" type="method"/>
            <line num="263" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="valueEquals(T) : boolean" num="266" count="0" type="method"/>
            <line num="269" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="equals(Object) : boolean" num="272" count="0" type="method"/>
            <line num="275" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="275" type="cond"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="282" count="0" type="method"/>
            <line num="285" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/numeric/integer/GenericIntType.java" name="GenericIntType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="34" loc="287" coveredmethods="0" methods="33" elements="82" classes="1" ncloc="190" statements="47" conditionals="2" coveredstatements="0"/>
            <class name="GenericIntType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="34" coveredmethods="0" methods="33" elements="82" statements="47" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="GenericIntType(NativeImg&lt; ?, ? extends IntAccess &gt;)" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="GenericIntType(int)" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="GenericIntType(IntAccess)" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="GenericIntType()" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getEntitiesPerPixel() : Fraction" num="87" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="updateContainer(Object) : void" num="93" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getValue() : int" num="105" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="setValue(int) : void" num="114" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInt() : int" num="125" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInt(int) : void" num="133" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(float) : void" num="138" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(double) : void" num="145" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(T) : void" num="152" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(T) : void" num="159" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(T) : void" num="166" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(T) : void" num="173" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(T) : void" num="180" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setOne() : void" num="186" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setZero() : void" num="192" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inc() : void" num="198" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dec() : void" num="205" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="212" count="0" type="method"/>
            <line num="215" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="updateIndex(int) : void" num="218" count="0" type="method"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIndex() : int" num="224" count="0" type="method"/>
            <line num="227" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="incIndex() : void" num="230" count="0" type="method"/>
            <line num="233" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="incIndex(int) : void" num="236" count="0" type="method"/>
            <line num="239" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decIndex() : void" num="242" count="0" type="method"/>
            <line num="245" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decIndex(int) : void" num="248" count="0" type="method"/>
            <line num="251" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBitsPerPixel() : int" num="254" count="0" type="method"/>
            <line num="257" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compareTo(T) : int" num="260" count="0" type="method"/>
            <line num="263" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="valueEquals(T) : boolean" num="266" count="0" type="method"/>
            <line num="269" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="equals(Object) : boolean" num="272" count="0" type="method"/>
            <line num="275" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="275" type="cond"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="282" count="0" type="method"/>
            <line num="285" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/numeric/integer/GenericLongType.java" name="GenericLongType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="34" loc="279" coveredmethods="0" methods="33" elements="76" classes="1" ncloc="184" statements="41" conditionals="2" coveredstatements="0"/>
            <class name="GenericLongType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="34" coveredmethods="0" methods="33" elements="76" statements="41" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="GenericLongType(NativeImg&lt; ?, ? extends LongAccess &gt;)" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="GenericLongType(long)" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="GenericLongType(LongAccess)" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="GenericLongType()" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getEntitiesPerPixel() : Fraction" num="85" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="updateContainer(Object) : void" num="91" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getValue() : long" num="103" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="setValue(long) : void" num="112" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLong() : long" num="123" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setLong(long) : void" num="131" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(float) : void" num="136" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(double) : void" num="142" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(T) : void" num="148" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(T) : void" num="154" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(T) : void" num="160" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(T) : void" num="166" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(T) : void" num="172" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setOne() : void" num="178" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setZero() : void" num="184" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inc() : void" num="190" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dec() : void" num="197" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="204" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="updateIndex(int) : void" num="210" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIndex() : int" num="216" count="0" type="method"/>
            <line num="219" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="incIndex() : void" num="222" count="0" type="method"/>
            <line num="225" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="incIndex(int) : void" num="228" count="0" type="method"/>
            <line num="231" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decIndex() : void" num="234" count="0" type="method"/>
            <line num="237" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decIndex(int) : void" num="240" count="0" type="method"/>
            <line num="243" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBitsPerPixel() : int" num="246" count="0" type="method"/>
            <line num="249" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compareTo(T) : int" num="252" count="0" type="method"/>
            <line num="255" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="valueEquals(T) : boolean" num="258" count="0" type="method"/>
            <line num="261" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="equals(Object) : boolean" num="264" count="0" type="method"/>
            <line num="267" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="267" type="cond"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="274" count="0" type="method"/>
            <line num="277" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/numeric/integer/GenericShortType.java" name="GenericShortType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="34" loc="291" coveredmethods="0" methods="33" elements="82" classes="1" ncloc="193" statements="47" conditionals="2" coveredstatements="0"/>
            <class name="GenericShortType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="34" coveredmethods="0" methods="33" elements="82" statements="47" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="GenericShortType(NativeImg&lt; ?, ? extends ShortAccess &gt;)" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="GenericShortType(short)" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="GenericShortType(ShortAccess)" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="GenericShortType()" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getEntitiesPerPixel() : Fraction" num="91" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="updateContainer(Object) : void" num="97" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getValue() : short" num="109" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="setValue(short) : void" num="118" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getShort() : short" num="129" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setShort(short) : void" num="137" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(float) : void" num="142" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(double) : void" num="149" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(T) : void" num="156" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(T) : void" num="163" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(T) : void" num="170" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(T) : void" num="177" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(T) : void" num="184" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setOne() : void" num="190" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setZero() : void" num="196" count="0" type="method"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inc() : void" num="202" count="0" type="method"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dec() : void" num="209" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="216" count="0" type="method"/>
            <line num="219" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="updateIndex(int) : void" num="222" count="0" type="method"/>
            <line num="225" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIndex() : int" num="228" count="0" type="method"/>
            <line num="231" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="incIndex() : void" num="234" count="0" type="method"/>
            <line num="237" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="incIndex(int) : void" num="240" count="0" type="method"/>
            <line num="243" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decIndex() : void" num="246" count="0" type="method"/>
            <line num="249" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decIndex(int) : void" num="252" count="0" type="method"/>
            <line num="255" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBitsPerPixel() : int" num="258" count="0" type="method"/>
            <line num="261" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compareTo(T) : int" num="264" count="0" type="method"/>
            <line num="267" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="valueEquals(T) : boolean" num="270" count="0" type="method"/>
            <line num="273" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="equals(Object) : boolean" num="276" count="0" type="method"/>
            <line num="279" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="279" type="cond"/>
            <line num="280" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="286" count="0" type="method"/>
            <line num="289" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/numeric/integer/IntType.java" name="IntType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="18" loc="158" coveredmethods="0" methods="18" elements="36" classes="1" ncloc="93" statements="18" conditionals="0" coveredstatements="0"/>
            <class name="IntType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="18" coveredmethods="0" methods="18" elements="36" statements="18" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="IntType(NativeImg&lt; ?, ? extends IntAccess &gt;)" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="IntType(int)" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="IntType(IntAccess)" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="IntType()" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="duplicateTypeOnSameNativeImg() : IntType" num="75" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNativeTypeFactory() : NativeTypeFactory&lt; IntType, IntAccess &gt;" num="83" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : int" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(int) : void" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInteger() : int" num="99" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegerLong() : long" num="105" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBigInteger() : BigInteger" num="111" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInteger(int) : void" num="117" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInteger(long) : void" num="123" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setBigInteger(BigInteger) : void" num="129" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxValue() : double" num="135" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMinValue() : double" num="141" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createVariable() : IntType" num="147" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : IntType" num="153" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/numeric/integer/LongType.java" name="LongType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="19" loc="166" coveredmethods="0" methods="19" elements="38" classes="1" ncloc="99" statements="19" conditionals="0" coveredstatements="0"/>
            <class name="LongType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="19" coveredmethods="0" methods="19" elements="38" statements="19" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LongType(NativeImg&lt; ?, ? extends LongAccess &gt;)" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LongType(LongAccess)" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LongType(long)" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="LongType()" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="duplicateTypeOnSameNativeImg() : LongType" num="77" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNativeTypeFactory() : NativeTypeFactory&lt; LongType, LongAccess &gt;" num="85" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : long" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(long) : void" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInteger() : int" num="101" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegerLong() : long" num="107" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBigInteger() : BigInteger" num="113" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInteger(int) : void" num="119" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInteger(long) : void" num="125" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setBigInteger(BigInteger) : void" num="131" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setReal(float) : void" num="137" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxValue() : double" num="143" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMinValue() : double" num="149" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createVariable() : LongType" num="155" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : LongType" num="161" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/numeric/integer/ShortType.java" name="ShortType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="18" loc="158" coveredmethods="0" methods="18" elements="36" classes="1" ncloc="93" statements="18" conditionals="0" coveredstatements="0"/>
            <class name="ShortType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="18" coveredmethods="0" methods="18" elements="36" statements="18" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ShortType(NativeImg&lt; ?, ? extends ShortAccess &gt;)" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ShortType(short)" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ShortType(ShortAccess)" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ShortType()" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="duplicateTypeOnSameNativeImg() : ShortType" num="75" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNativeTypeFactory() : NativeTypeFactory&lt; ShortType, ShortAccess &gt;" num="83" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : short" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(short) : void" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInteger() : int" num="99" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegerLong() : long" num="105" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBigInteger() : BigInteger" num="111" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInteger(int) : void" num="117" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInteger(long) : void" num="123" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setBigInteger(BigInteger) : void" num="129" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxValue() : double" num="135" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMinValue() : double" num="141" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createVariable() : ShortType" num="147" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : ShortType" num="153" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/numeric/integer/Unsigned128BitType.java" name="Unsigned128BitType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="59" loc="505" coveredmethods="0" methods="51" elements="195" classes="1" ncloc="370" statements="128" conditionals="16" coveredstatements="0"/>
            <class name="Unsigned128BitType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="59" coveredmethods="0" methods="51" elements="195" statements="128" conditionals="16" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Unsigned128BitType(NativeImg&lt; ?, ? extends LongAccess &gt;)" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Unsigned128BitType(long,long)" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Unsigned128BitType(BigInteger)" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Unsigned128BitType(LongAccess)" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Unsigned128BitType()" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="updateContainer(Object) : void" num="107" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="duplicateTypeOnSameNativeImg() : Unsigned128BitType" num="113" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNativeTypeFactory() : NativeTypeFactory&lt; Unsigned128BitType, LongAccess &gt;" num="121" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="intoBytes(long,long) : void" num="127" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="set(byte[]) : void" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="157" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="161" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : BigInteger" num="169" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(BigInteger) : void" num="176" count="0" type="method"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(long,long) : void" num="181" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInteger() : int" num="189" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegerLong() : long" num="196" count="0" type="method"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBigInteger() : BigInteger" num="202" count="0" type="method"/>
            <line num="205" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealFloat() : float" num="208" count="0" type="method"/>
            <line num="211" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealDouble() : double" num="214" count="0" type="method"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInteger(int) : void" num="224" count="0" type="method"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInteger(long) : void" num="232" count="0" type="method"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setBigInteger(BigInteger) : void" num="240" count="0" type="method"/>
            <line num="243" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setReal(float) : void" num="246" count="0" type="method"/>
            <line num="249" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setReal(double) : void" num="252" count="0" type="method"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxValue() : double" num="267" count="0" type="method"/>
            <line num="270" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMaxBigIntegerValue() : BigInteger" num="277" count="0" type="method"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="280" type="cond"/>
            <line num="282" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMinValue() : double" num="287" count="0" type="method"/>
            <line num="290" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIndex() : int" num="293" count="0" type="method"/>
            <line num="296" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="updateIndex(int) : void" num="299" count="0" type="method"/>
            <line num="302" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="incIndex() : void" num="305" count="0" type="method"/>
            <line num="308" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="incIndex(int) : void" num="311" count="0" type="method"/>
            <line num="314" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decIndex() : void" num="317" count="0" type="method"/>
            <line num="320" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decIndex(int) : void" num="323" count="0" type="method"/>
            <line num="326" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createVariable() : Unsigned128BitType" num="329" count="0" type="method"/>
            <line num="332" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : Unsigned128BitType" num="335" count="0" type="method"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getEntitiesPerPixel() : Fraction" num="344" count="0" type="method"/>
            <line num="347" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBitsPerPixel() : int" num="350" count="0" type="method"/>
            <line num="353" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="inc() : void" num="356" count="0" type="method"/>
            <line num="359" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="361" type="cond"/>
            <line num="363" count="0" type="stmt"/>
            <line num="364" count="0" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="365" type="cond"/>
            <line num="367" count="0" type="stmt"/>
            <line num="371" count="0" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="dec() : void" num="380" count="0" type="method"/>
            <line num="383" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line num="385" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="385" type="cond"/>
            <line num="387" count="0" type="stmt"/>
            <line num="388" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="389" type="cond"/>
            <line num="391" count="0" type="stmt"/>
            <line num="395" count="0" type="stmt"/>
            <line num="400" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setZero() : void" num="404" count="0" type="method"/>
            <line num="407" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setOne() : void" num="410" count="0" type="method"/>
            <line num="413" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(float) : void" num="417" count="0" type="method"/>
            <line num="420" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(double) : void" num="427" count="0" type="method"/>
            <line num="430" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(Unsigned128BitType) : void" num="434" count="0" type="method"/>
            <line num="437" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(Unsigned128BitType) : void" num="441" count="0" type="method"/>
            <line num="444" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(Unsigned128BitType) : void" num="448" count="0" type="method"/>
            <line num="451" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(Unsigned128BitType) : void" num="455" count="0" type="method"/>
            <line num="458" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="compareTo(Unsigned128BitType) : int" num="461" count="0" type="method"/>
            <line num="464" count="0" type="stmt"/>
            <line num="465" count="0" type="stmt"/>
            <line num="466" count="0" type="stmt"/>
            <line num="467" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="467" type="cond"/>
            <line num="468" count="0" type="stmt"/>
            <line num="470" count="0" type="stmt"/>
            <line num="471" count="0" type="stmt"/>
            <line num="472" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="valueEquals(Unsigned128BitType) : boolean" num="475" count="0" type="method"/>
            <line num="478" count="0" type="stmt"/>
            <line num="479" count="0" type="stmt"/>
            <line num="481" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="485" count="0" type="method"/>
            <line num="488" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="491" count="0" type="method"/>
            <line num="494" count="0" type="stmt"/>
            <line num="495" count="0" type="stmt"/>
            <line num="496" count="0" type="stmt"/>
            <line num="497" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="500" count="0" type="method"/>
            <line num="503" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/numeric/integer/Unsigned12BitType.java" name="Unsigned12BitType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="174" coveredmethods="0" methods="10" elements="53" classes="1" ncloc="103" statements="37" conditionals="6" coveredstatements="0"/>
            <class name="Unsigned12BitType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="10" elements="53" statements="37" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Unsigned12BitType(NativeImg&lt; ?, ? extends LongAccess &gt;)" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Unsigned12BitType(long)" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Unsigned12BitType(LongAccess)" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Unsigned12BitType()" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="duplicateTypeOnSameNativeImg() : Unsigned12BitType" num="83" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNativeTypeFactory() : NativeTypeFactory&lt; Unsigned12BitType, LongAccess &gt;" num="91" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="get() : long" num="97" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="set(long) : void" num="121" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="134" type="cond"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="149" type="cond"/>
            <line num="152" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createVariable() : Unsigned12BitType" num="163" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : Unsigned12BitType" num="169" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/numeric/integer/Unsigned2BitType.java" name="Unsigned2BitType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="143" coveredmethods="0" methods="10" elements="28" classes="1" ncloc="67" statements="18" conditionals="0" coveredstatements="0"/>
            <class name="Unsigned2BitType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="10" elements="28" statements="18" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Unsigned2BitType(NativeImg&lt; ?, ? extends LongAccess &gt;)" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Unsigned2BitType(long)" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Unsigned2BitType(LongAccess)" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Unsigned2BitType()" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="duplicateTypeOnSameNativeImg() : Unsigned2BitType" num="82" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNativeTypeFactory() : NativeTypeFactory&lt; Unsigned2BitType, LongAccess &gt;" num="90" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : long" num="96" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(long) : void" num="111" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createVariable() : Unsigned2BitType" num="132" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : Unsigned2BitType" num="138" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/numeric/integer/Unsigned4BitType.java" name="Unsigned4BitType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="135" coveredmethods="0" methods="10" elements="28" classes="1" ncloc="67" statements="18" conditionals="0" coveredstatements="0"/>
            <class name="Unsigned4BitType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="10" elements="28" statements="18" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Unsigned4BitType(NativeImg&lt; ?, ? extends LongAccess &gt;)" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Unsigned4BitType(long)" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Unsigned4BitType(LongAccess)" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Unsigned4BitType()" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="duplicateTypeOnSameNativeImg() : Unsigned4BitType" num="82" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNativeTypeFactory() : NativeTypeFactory&lt; Unsigned4BitType, LongAccess &gt;" num="90" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : long" num="96" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(long) : void" num="103" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createVariable() : Unsigned4BitType" num="124" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : Unsigned4BitType" num="130" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/numeric/integer/UnsignedByteType.java" name="UnsignedByteType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="31" loc="230" coveredmethods="0" methods="29" elements="68" classes="1" ncloc="152" statements="35" conditionals="4" coveredstatements="0"/>
            <class name="UnsignedByteType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="31" coveredmethods="0" methods="29" elements="68" statements="35" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="UnsignedByteType(NativeImg&lt; ?, ? extends ByteAccess &gt;)" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="UnsignedByteType(int)" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="UnsignedByteType(ByteAccess)" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="UnsignedByteType()" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCodedSignedByteChecked(int) : byte" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCodedSignedByte(int) : byte" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUnsignedByte(byte) : int" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="duplicateTypeOnSameNativeImg() : UnsignedByteType" num="96" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNativeTypeFactory() : NativeTypeFactory&lt; UnsignedByteType, ByteAccess &gt;" num="104" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(float) : void" num="110" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(double) : void" num="118" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(UnsignedByteType) : void" num="125" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(UnsignedByteType) : void" num="131" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(UnsignedByteType) : void" num="137" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(UnsignedByteType) : void" num="143" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : int" num="149" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(int) : void" num="154" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInteger() : int" num="159" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegerLong() : long" num="165" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBigInteger() : BigInteger" num="171" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInteger(int) : void" num="177" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInteger(long) : void" num="183" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setBigInteger(BigInteger) : void" num="189" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxValue() : double" num="195" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMinValue() : double" num="201" count="0" type="method"/>
            <line num="204" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createVariable() : UnsignedByteType" num="207" count="0" type="method"/>
            <line num="210" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : UnsignedByteType" num="213" count="0" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="219" count="0" type="method"/>
            <line num="222" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compareTo(UnsignedByteType) : int" num="225" count="0" type="method"/>
            <line num="228" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/numeric/integer/UnsignedIntType.java" name="UnsignedIntType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="36" loc="259" coveredmethods="0" methods="34" elements="78" classes="1" ncloc="177" statements="40" conditionals="4" coveredstatements="0"/>
            <class name="UnsignedIntType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="36" coveredmethods="0" methods="34" elements="78" statements="40" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="UnsignedIntType(NativeImg&lt; ?, ? extends IntAccess &gt;)" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="UnsignedIntType(long)" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="UnsignedIntType(IntAccess)" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="UnsignedIntType()" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCodedSignedIntChecked(long) : int" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCodedSignedInt(long) : int" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUnsignedInt(int) : long" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="duplicateTypeOnSameNativeImg() : UnsignedIntType" num="96" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNativeTypeFactory() : NativeTypeFactory&lt; UnsignedIntType, IntAccess &gt;" num="104" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(float) : void" num="110" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(double) : void" num="117" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(UnsignedIntType) : void" num="124" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(UnsignedIntType) : void" num="130" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(UnsignedIntType) : void" num="136" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(UnsignedIntType) : void" num="142" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setOne() : void" num="148" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setZero() : void" num="154" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inc() : void" num="160" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dec() : void" num="166" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="172" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : long" num="178" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(long) : void" num="183" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInteger() : int" num="188" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegerLong() : long" num="194" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBigInteger() : BigInteger" num="200" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInteger(int) : void" num="206" count="0" type="method"/>
            <line num="209" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInteger(long) : void" num="212" count="0" type="method"/>
            <line num="215" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setBigInteger(BigInteger) : void" num="218" count="0" type="method"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setReal(float) : void" num="224" count="0" type="method"/>
            <line num="227" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxValue() : double" num="230" count="0" type="method"/>
            <line num="233" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMinValue() : double" num="236" count="0" type="method"/>
            <line num="239" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createVariable() : UnsignedIntType" num="242" count="0" type="method"/>
            <line num="245" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : UnsignedIntType" num="248" count="0" type="method"/>
            <line num="251" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compareTo(UnsignedIntType) : int" num="254" count="0" type="method"/>
            <line num="257" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/numeric/integer/UnsignedLongType.java" name="UnsignedLongType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="51" loc="375" coveredmethods="0" methods="41" elements="120" classes="1" ncloc="240" statements="59" conditionals="20" coveredstatements="0"/>
            <class name="UnsignedLongType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="51" coveredmethods="0" methods="41" elements="120" statements="59" conditionals="20" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="UnsignedLongType(NativeImg&lt; ?, ? extends LongAccess &gt;)" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="UnsignedLongType(long)" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="UnsignedLongType(BigInteger)" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="UnsignedLongType(LongAccess)" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="UnsignedLongType()" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="duplicateTypeOnSameNativeImg() : UnsignedLongType" num="92" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNativeTypeFactory() : NativeTypeFactory&lt; UnsignedLongType, LongAccess &gt;" num="100" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(float) : void" num="106" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(double) : void" num="112" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(UnsignedLongType) : void" num="118" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(UnsignedLongType) : void" num="127" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="divide(long,long) : long" num="143" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="145" type="cond"/>
            <line num="148" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="148" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="160" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="165" type="cond"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(UnsignedLongType) : void" num="173" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(UnsignedLongType) : void" num="179" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setOne() : void" num="185" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setZero() : void" num="191" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inc() : void" num="197" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dec() : void" num="203" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="209" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : long" num="219" count="0" type="method"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBigInteger() : BigInteger" num="228" count="0" type="method"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(long) : void" num="235" count="0" type="method"/>
            <line num="237" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInteger() : int" num="240" count="0" type="method"/>
            <line num="243" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegerLong() : long" num="246" count="0" type="method"/>
            <line num="249" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInteger(int) : void" num="252" count="0" type="method"/>
            <line num="255" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInteger(long) : void" num="258" count="0" type="method"/>
            <line num="261" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setBigInteger(BigInteger) : void" num="264" count="0" type="method"/>
            <line num="267" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setReal(double) : void" num="270" count="0" type="method"/>
            <line num="273" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="doubleToUnsignedLong(double) : long" num="276" count="0" type="method"/>
            <line num="278" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="278" type="cond"/>
            <line num="281" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setReal(float) : void" num="284" count="0" type="method"/>
            <line num="287" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(BigInteger) : void" num="290" count="0" type="method"/>
            <line num="292" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxValue() : double" num="299" count="0" type="method"/>
            <line num="302" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxBigIntegerValue() : BigInteger" num="309" count="0" type="method"/>
            <line num="311" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMinValue() : double" num="314" count="0" type="method"/>
            <line num="317" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="compare(long,long) : int" num="323" count="0" type="method"/>
            <line num="326" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="326" type="cond"/>
            <line num="327" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="331" type="cond"/>
            <line num="333" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="335" type="cond"/>
            <line complexity="1" visibility="public" signature="createVariable() : UnsignedLongType" num="339" count="0" type="method"/>
            <line num="342" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : UnsignedLongType" num="345" count="0" type="method"/>
            <line num="348" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getRealFloat() : float" num="351" count="0" type="method"/>
            <line num="354" count="0" type="stmt"/>
            <line num="355" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="355" type="cond"/>
            <line complexity="1" visibility="public" signature="getRealDouble() : double" num="358" count="0" type="method"/>
            <line num="361" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="unsignedLongToDouble(long) : double" num="364" count="0" type="method"/>
            <line num="366" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="366" type="cond"/>
            <line complexity="1" visibility="public" signature="compareTo(UnsignedLongType) : int" num="369" count="0" type="method"/>
            <line num="372" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/numeric/integer/UnsignedShortType.java" name="UnsignedShortType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="33" loc="239" coveredmethods="0" methods="31" elements="70" classes="1" ncloc="160" statements="35" conditionals="4" coveredstatements="0"/>
            <class name="UnsignedShortType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="33" coveredmethods="0" methods="31" elements="70" statements="35" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="UnsignedShortType(NativeImg&lt; ?, ? extends ShortAccess &gt;)" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="UnsignedShortType(int)" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="UnsignedShortType(ShortAccess)" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="UnsignedShortType()" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getCodedSignedShortChecked(int) : short" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCodedSignedShort(int) : short" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUnsignedShort(short) : int" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="duplicateTypeOnSameNativeImg() : UnsignedShortType" num="96" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNativeTypeFactory() : NativeTypeFactory&lt; UnsignedShortType, ShortAccess &gt;" num="104" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(float) : void" num="110" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(double) : void" num="116" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(UnsignedShortType) : void" num="122" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(UnsignedShortType) : void" num="128" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(UnsignedShortType) : void" num="134" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(UnsignedShortType) : void" num="140" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inc() : void" num="146" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dec() : void" num="152" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : int" num="158" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(int) : void" num="163" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInteger() : int" num="168" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegerLong() : long" num="174" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBigInteger() : BigInteger" num="180" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInteger(int) : void" num="186" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInteger(long) : void" num="192" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setBigInteger(BigInteger) : void" num="198" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxValue() : double" num="204" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMinValue() : double" num="210" count="0" type="method"/>
            <line num="213" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createVariable() : UnsignedShortType" num="216" count="0" type="method"/>
            <line num="219" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : UnsignedShortType" num="222" count="0" type="method"/>
            <line num="225" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="228" count="0" type="method"/>
            <line num="231" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compareTo(UnsignedShortType) : int" num="234" count="0" type="method"/>
            <line num="237" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/numeric/integer/UnsignedVariableBitLengthType.java" name="UnsignedVariableBitLengthType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="52" loc="373" coveredmethods="0" methods="51" elements="103" classes="1" ncloc="258" statements="50" conditionals="2" coveredstatements="0"/>
            <class name="UnsignedVariableBitLengthType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="52" coveredmethods="0" methods="51" elements="103" statements="50" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="UnsignedVariableBitLengthType(NativeImg&lt; ?, ? extends LongAccess &gt;,int)" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="UnsignedVariableBitLengthType(long,int)" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="UnsignedVariableBitLengthType(LongAccess,int)" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="UnsignedVariableBitLengthType(int)" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(long) : void" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : long" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(UnsignedVariableBitLengthType) : void" num="95" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="duplicateTypeOnSameNativeImg() : UnsignedVariableBitLengthType" num="101" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNativeTypeFactory() : NativeTypeFactory&lt; UnsignedVariableBitLengthType, LongAccess &gt;" num="109" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createVariable() : UnsignedVariableBitLengthType" num="115" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : UnsignedVariableBitLengthType" num="121" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(UnsignedVariableBitLengthType) : void" num="128" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(float) : void" num="134" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(double) : void" num="140" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealFloat() : float" num="146" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealDouble() : double" num="152" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setReal(float) : void" num="158" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setReal(double) : void" num="164" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setZero() : void" num="170" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setOne() : void" num="176" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBitsPerPixel() : int" num="182" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMinIncrement() : double" num="188" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="194" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInteger() : int" num="200" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIntegerLong() : long" num="206" count="0" type="method"/>
            <line num="209" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getBigInteger() : BigInteger" num="212" count="0" type="method"/>
            <line num="215" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="215" type="cond"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInteger(int) : void" num="220" count="0" type="method"/>
            <line num="223" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setInteger(long) : void" num="226" count="0" type="method"/>
            <line num="229" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setBigInteger(BigInteger) : void" num="232" count="0" type="method"/>
            <line num="235" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxValue() : double" num="241" count="0" type="method"/>
            <line num="244" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMinValue() : double" num="247" count="0" type="method"/>
            <line num="250" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inc() : void" num="253" count="0" type="method"/>
            <line num="256" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dec() : void" num="259" count="0" type="method"/>
            <line num="262" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(UnsignedVariableBitLengthType) : void" num="265" count="0" type="method"/>
            <line num="268" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(UnsignedVariableBitLengthType) : void" num="271" count="0" type="method"/>
            <line num="274" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(UnsignedVariableBitLengthType) : void" num="277" count="0" type="method"/>
            <line num="280" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getImaginaryFloat() : float" num="283" count="0" type="method"/>
            <line num="286" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getImaginaryDouble() : double" num="289" count="0" type="method"/>
            <line num="292" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setImaginary(float) : void" num="295" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="setImaginary(double) : void" num="299" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getPhaseFloat() : float" num="303" count="0" type="method"/>
            <line num="306" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPhaseDouble() : double" num="309" count="0" type="method"/>
            <line num="312" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPowerFloat() : float" num="315" count="0" type="method"/>
            <line num="318" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPowerDouble() : double" num="321" count="0" type="method"/>
            <line num="324" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setComplexNumber(float,float) : void" num="327" count="0" type="method"/>
            <line num="330" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setComplexNumber(double,double) : void" num="333" count="0" type="method"/>
            <line num="336" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="complexConjugate() : void" num="339" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="compareTo(UnsignedVariableBitLengthType) : int" num="343" count="0" type="method"/>
            <line num="346" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="valueEquals(UnsignedVariableBitLengthType) : boolean" num="356" count="0" type="method"/>
            <line num="359" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="362" count="0" type="method"/>
            <line num="365" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="368" count="0" type="method"/>
            <line num="371" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/type/numeric/integer/ByteTypeTest.java" name="ByteTypeTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="75" coveredmethods="0" methods="2" elements="11" classes="1" ncloc="21" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="ByteTypeTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="11" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testGetBigInteger() : void" num="49" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetBigInteger() : void" num="63" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/type/numeric/integer/IntTypeTest.java" name="IntTypeTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="76" coveredmethods="0" methods="2" elements="11" classes="1" ncloc="21" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="IntTypeTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="11" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testGetBigInteger() : void" num="49" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetBigInteger() : void" num="64" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/type/numeric/integer/IntegerTypeTest.java" name="IntegerTypeTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="199" coveredmethods="0" methods="12" elements="57" classes="1" ncloc="123" statements="39" conditionals="6" coveredstatements="0"/>
            <class name="IntegerTypeTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="12" elements="57" statements="39" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="data() : Collection&lt; Object &gt;" num="91" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="IntegerTypeTest(String,T)" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="initValues() : List&lt; BigInteger &gt;" num="111" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="powersOfTwo(int) : List&lt; BigInteger &gt;" num="125" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="negate(List&lt;BigInteger&gt;) : List&lt; BigInteger &gt;" num="134" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetAndSetBigInteger() : void" num="140" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="148" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetReal() : void" num="159" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetRealDouble() : void" num="170" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetRealFloat() : void" num="180" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="toBigInteger(double) : BigInteger" num="190" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="zero() : T" num="195" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/type/numeric/integer/LongTypeTest.java" name="LongTypeTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="103" coveredmethods="0" methods="6" elements="28" classes="1" ncloc="46" statements="22" conditionals="0" coveredstatements="0"/>
            <class name="LongTypeTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="28" statements="22" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testGetBigInteger() : void" num="49" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetBigInteger() : void" num="63" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetRealFloat() : void" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="testSetRealFloat(float,long) : void" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetMinMaxValue() : void" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="testSetRealDouble(double,long) : void" num="97" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/type/numeric/integer/ShortTypeTest.java" name="ShortTypeTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="172" coveredmethods="0" methods="7" elements="43" classes="1" ncloc="71" statements="36" conditionals="0" coveredstatements="0"/>
            <class name="ShortTypeTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="43" statements="36" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testGetBigInteger() : void" num="57" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetBigInteger() : void" num="73" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdd() : void" num="89" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSub() : void" num="108" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMul() : void" num="127" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDiv() : void" num="146" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDivByZero() : void" num="162" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/type/numeric/integer/Unsigned128BitTypeTest.java" name="Unsigned128BitTypeTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="178" coveredmethods="0" methods="9" elements="52" classes="1" ncloc="89" statements="43" conditionals="0" coveredstatements="0"/>
            <class name="Unsigned128BitTypeTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="9" elements="52" statements="43" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUpBeforeClass() : void" num="54" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetRandom() : void" num="64" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSmallBigIntegerValues() : void" num="87" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="99" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHashCode() : void" num="126" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetBigInteger() : void" num="137" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetBigInteger() : void" num="154" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetRealDouble() : void" num="166" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetRealFloat() : void" num="172" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/type/numeric/integer/Unsigned12BitTypeTest.java" name="Unsigned12BitTypeTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="148" coveredmethods="0" methods="6" elements="36" classes="1" ncloc="68" statements="30" conditionals="0" coveredstatements="0"/>
            <class name="Unsigned12BitTypeTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="36" statements="30" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUpBeforeClass() : void" num="56" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetRandom() : void" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetBigInteger() : void" num="83" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetBigInteger() : void" num="98" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="113" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testHashCode() : void" num="141" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/type/numeric/integer/Unsigned2BitTypeTest.java" name="Unsigned2BitTypeTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="150" coveredmethods="0" methods="6" elements="39" classes="1" ncloc="70" statements="31" conditionals="2" coveredstatements="0"/>
            <class name="Unsigned2BitTypeTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="6" elements="39" statements="31" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUpBeforeClass() : void" num="56" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetRandom() : void" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetBigInteger() : void" num="83" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetBigInteger() : void" num="98" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="113" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testHashCode() : void" num="141" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="144" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/type/numeric/integer/Unsigned4BitTypeTest.java" name="Unsigned4BitTypeTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="149" coveredmethods="0" methods="6" elements="39" classes="1" ncloc="70" statements="31" conditionals="2" coveredstatements="0"/>
            <class name="Unsigned4BitTypeTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="6" elements="39" statements="31" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUpBeforeClass() : void" num="56" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetRandom() : void" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetBigInteger() : void" num="83" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetBigInteger() : void" num="98" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="113" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testHashCode() : void" num="141" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="144" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/type/numeric/integer/UnsignedByteTypeTest.java" name="UnsignedByteTypeTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="119" coveredmethods="0" methods="5" elements="27" classes="1" ncloc="47" statements="22" conditionals="0" coveredstatements="0"/>
            <class name="UnsignedByteTypeTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="27" statements="22" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testInRangeValues() : void" num="48" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPositiveOutOfRangeValue() : void" num="67" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNegativeOutOfRangeValue() : void" num="80" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetBigInteger() : void" num="93" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetBigInteger() : void" num="108" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/type/numeric/integer/UnsignedIntTypeTest.java" name="UnsignedIntTypeTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="120" coveredmethods="0" methods="5" elements="27" classes="1" ncloc="47" statements="22" conditionals="0" coveredstatements="0"/>
            <class name="UnsignedIntTypeTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="27" statements="22" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testInRangeValues() : void" num="48" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPositiveOutOfRangeValue() : void" num="68" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNegativeOutOfRangeValue() : void" num="81" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetBigInteger() : void" num="94" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetBigInteger() : void" num="109" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/type/numeric/integer/UnsignedLongTypeTest.java" name="UnsignedLongTypeTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="253" coveredmethods="0" methods="15" elements="93" classes="1" ncloc="133" statements="78" conditionals="0" coveredstatements="0"/>
            <class name="UnsignedLongTypeTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="15" elements="93" statements="78" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testComparePosNeg() : void" num="53" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCompareNegatives() : void" num="73" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testComparePositives() : void" num="93" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCompareZero() : void" num="113" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBIConstructor() : void" num="134" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetBigInteger() : void" num="148" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetBigInteger() : void" num="167" count="0" type="method"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetMaxValue() : void" num="181" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetRealDouble() : void" num="186" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetRealFloat() : void" num="193" count="0" type="method"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetRealDouble() : void" num="200" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="testSetRealDouble(double,long) : void" num="217" count="0" type="method"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetMinMax() : void" num="224" count="0" type="method"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetRealFloat() : void" num="230" count="0" type="method"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="testSetRealFloat(double,long) : void" num="247" count="0" type="method"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/type/numeric/integer/UnsignedShortTypeTest.java" name="UnsignedShortTypeTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="119" coveredmethods="0" methods="5" elements="27" classes="1" ncloc="47" statements="22" conditionals="0" coveredstatements="0"/>
            <class name="UnsignedShortTypeTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="27" statements="22" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testInRangeValues() : void" num="48" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPositiveOutOfRangeValue() : void" num="67" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNegativeOutOfRangeValue() : void" num="80" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetBigInteger() : void" num="93" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetBigInteger() : void" num="108" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/type/numeric/integer/UnsignedVariableBitLengthTypeTest.java" name="UnsignedVariableBitLengthTypeTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="86" coveredmethods="0" methods="2" elements="14" classes="1" ncloc="29" statements="12" conditionals="0" coveredstatements="0"/>
            <class name="UnsignedVariableBitLengthTypeTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="14" statements="12" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testGetBigInteger() : void" num="50" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetBigInteger() : void" num="73" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.histogram">
         <metrics coveredelements="0" complexity="405" loc="3950" methods="241" classes="15" statements="1076" coveredconditionals="0" coveredmethods="0" elements="1595" ncloc="2292" files="11" conditionals="278" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/histogram/BinMapper1d.java" name="BinMapper1d.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="115" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="13" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="BinMapper1d">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/histogram/DiscreteFrequencyDistribution.java" name="DiscreteFrequencyDistribution.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="47" loc="369" coveredmethods="0" methods="36" elements="133" classes="1" ncloc="239" statements="77" conditionals="20" coveredstatements="0"/>
            <class name="DiscreteFrequencyDistribution">
               <metrics coveredelements="0" coveredconditionals="0" complexity="47" coveredmethods="0" methods="36" elements="133" statements="77" conditionals="20" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="DiscreteFrequencyDistribution(long[])" num="73" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="DiscreteFrequencyDistribution(Img&lt; LongType &gt;)" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="resetCounters() : void" num="105" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="frequency(long[]) : long" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setFrequency(long[],long) : void" num="132" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="134" type="cond"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="relativeFrequency(long[]) : double" num="144" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="increment(long[]) : void" num="154" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decrement(long[]) : void" num="164" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="totalValues() : long" num="174" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="modeCount() : long" num="182" count="0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="modePositions() : List&lt; long[] &gt;" num="191" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="196" type="cond"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="199" type="cond"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="207" type="cond"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess() : RandomAccess&lt; LongType &gt;" num="219" count="0" type="method"/>
            <line num="222" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess(Interval) : RandomAccess&lt; LongType &gt;" num="225" count="0" type="method"/>
            <line num="228" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="231" count="0" type="method"/>
            <line num="234" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="min(int) : long" num="237" count="0" type="method"/>
            <line num="240" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="min(long[]) : void" num="243" count="0" type="method"/>
            <line num="246" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="min(Positionable) : void" num="249" count="0" type="method"/>
            <line num="252" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="max(int) : long" num="255" count="0" type="method"/>
            <line num="258" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="max(long[]) : void" num="261" count="0" type="method"/>
            <line num="264" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="max(Positionable) : void" num="267" count="0" type="method"/>
            <line num="270" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMin(int) : double" num="273" count="0" type="method"/>
            <line num="276" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMin(double[]) : void" num="279" count="0" type="method"/>
            <line num="282" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMin(RealPositionable) : void" num="285" count="0" type="method"/>
            <line num="288" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMax(int) : double" num="291" count="0" type="method"/>
            <line num="294" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMax(double[]) : void" num="297" count="0" type="method"/>
            <line num="300" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMax(RealPositionable) : void" num="303" count="0" type="method"/>
            <line num="306" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dimensions(long[]) : void" num="309" count="0" type="method"/>
            <line num="312" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dimension(int) : long" num="315" count="0" type="method"/>
            <line num="318" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cursor() : Cursor&lt; LongType &gt;" num="321" count="0" type="method"/>
            <line num="324" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localizingCursor() : Cursor&lt; LongType &gt;" num="327" count="0" type="method"/>
            <line num="330" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : long" num="333" count="0" type="method"/>
            <line num="336" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="firstElement() : LongType" num="339" count="0" type="method"/>
            <line num="342" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterationOrder() : Object" num="345" count="0" type="method"/>
            <line num="348" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt; LongType &gt;" num="351" count="0" type="method"/>
            <line num="354" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="factory() : ImgFactory&lt; LongType &gt;" num="357" count="0" type="method"/>
            <line num="360" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : DiscreteFrequencyDistribution" num="363" count="0" type="method"/>
            <line num="366" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/histogram/Histogram1d.java" name="Histogram1d.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="84" loc="768" coveredmethods="0" methods="69" elements="217" classes="1" ncloc="395" statements="124" conditionals="24" coveredstatements="0"/>
            <class name="Histogram1d">
               <metrics coveredelements="0" coveredconditionals="0" complexity="84" coveredmethods="0" methods="69" elements="217" statements="124" conditionals="24" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Histogram1d(BinMapper1d&lt; T &gt;)" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Histogram1d(Histogram1d&lt; T &gt;)" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Histogram1d(Iterable&lt; T &gt;,BinMapper1d&lt; T &gt;)" num="117" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="firstDataValue() : T" num="128" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasTails() : boolean" num="137" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="lowerTailCount() : long" num="145" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="147" type="cond"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="upperTailCount() : long" num="156" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="valueCount() : long" num="168" count="0" type="method"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="distributionCount() : long" num="177" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ignoredCount() : long" num="186" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="totalCount() : long" num="196" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="frequency(T) : long" num="209" count="0" type="method"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="frequency(long) : long" num="218" count="0" type="method"/>
            <line num="220" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="220" type="cond"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="relativeFrequency(T,boolean) : double" num="245" count="0" type="method"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="relativeFrequency(long,boolean) : double" num="267" count="0" type="method"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="270" type="cond"/>
            <line num="271" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBinCount() : long" num="277" count="0" type="method"/>
            <line num="279" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="map(T) : long" num="285" count="0" type="method"/>
            <line num="287" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCenterValue(long,T) : void" num="298" count="0" type="method"/>
            <line num="300" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLowerBound(long,T) : void" num="311" count="0" type="method"/>
            <line num="313" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUpperBound(long,T) : void" num="324" count="0" type="method"/>
            <line num="326" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="includesUpperBound(long) : boolean" num="335" count="0" type="method"/>
            <line num="337" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="includesLowerBound(long) : boolean" num="346" count="0" type="method"/>
            <line num="348" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="isInLowerTail(T) : boolean" num="358" count="0" type="method"/>
            <line num="360" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="360" type="cond"/>
            <line num="361" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="isInUpperTail(T) : boolean" num="373" count="0" type="method"/>
            <line num="375" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="375" type="cond"/>
            <line num="376" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line num="378" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="isInMiddle(T) : boolean" num="388" count="0" type="method"/>
            <line num="390" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="390" type="cond"/>
            <line num="391" count="0" type="stmt"/>
            <line num="392" count="0" type="stmt"/>
            <line num="393" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isOutside(T) : boolean" num="402" count="0" type="method"/>
            <line num="404" count="0" type="stmt"/>
            <line num="405" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dfd() : DiscreteFrequencyDistribution" num="411" count="0" type="method"/>
            <line num="413" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="countData(Iterable&lt; T &gt;) : void" num="423" count="0" type="method"/>
            <line num="425" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addData(Iterable&lt; T &gt;) : void" num="435" count="0" type="method"/>
            <line num="437" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subtractData(Iterable&lt; T &gt;) : void" num="447" count="0" type="method"/>
            <line num="449" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="increment(long) : void" num="458" count="0" type="method"/>
            <line num="460" count="0" type="stmt"/>
            <line num="461" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decrement(long) : void" num="470" count="0" type="method"/>
            <line num="472" count="0" type="stmt"/>
            <line num="473" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="increment(T) : void" num="482" count="0" type="method"/>
            <line num="484" count="0" type="stmt"/>
            <line num="485" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="485" type="cond"/>
            <line num="487" count="0" type="stmt"/>
            <line num="491" count="0" type="stmt"/>
            <line num="492" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="decrement(T) : void" num="502" count="0" type="method"/>
            <line num="504" count="0" type="stmt"/>
            <line num="505" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="505" type="cond"/>
            <line num="507" count="0" type="stmt"/>
            <line num="511" count="0" type="stmt"/>
            <line num="512" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="resetCounters() : void" num="519" count="0" type="method"/>
            <line num="521" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toLongArray() : long[]" num="528" count="0" type="method"/>
            <line num="530" count="0" type="stmt"/>
            <line num="531" count="0" type="stmt"/>
            <line num="532" count="0" type="stmt"/>
            <line num="533" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="533" type="cond"/>
            <line num="535" count="0" type="stmt"/>
            <line num="537" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="546" count="0" type="method"/>
            <line num="549" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dimension(int) : long" num="556" count="0" type="method"/>
            <line num="559" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dimensions(long[]) : void" num="566" count="0" type="method"/>
            <line num="569" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess() : RandomAccess&lt; LongType &gt;" num="572" count="0" type="method"/>
            <line num="575" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess(Interval) : RandomAccess&lt; LongType &gt;" num="578" count="0" type="method"/>
            <line num="581" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="min() : long" num="584" count="0" type="method"/>
            <line num="586" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="min(int) : long" num="589" count="0" type="method"/>
            <line num="592" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="min(long[]) : void" num="595" count="0" type="method"/>
            <line num="598" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="min(Positionable) : void" num="601" count="0" type="method"/>
            <line num="604" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="max() : long" num="607" count="0" type="method"/>
            <line num="609" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="max(int) : long" num="612" count="0" type="method"/>
            <line num="615" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="max(long[]) : void" num="618" count="0" type="method"/>
            <line num="621" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="max(Positionable) : void" num="624" count="0" type="method"/>
            <line num="627" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMin() : double" num="630" count="0" type="method"/>
            <line num="632" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMin(int) : double" num="635" count="0" type="method"/>
            <line num="638" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMin(double[]) : void" num="641" count="0" type="method"/>
            <line num="644" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMin(RealPositionable) : void" num="647" count="0" type="method"/>
            <line num="650" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMax() : double" num="653" count="0" type="method"/>
            <line num="655" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMax(int) : double" num="658" count="0" type="method"/>
            <line num="661" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMax(double[]) : void" num="664" count="0" type="method"/>
            <line num="667" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMax(RealPositionable) : void" num="670" count="0" type="method"/>
            <line num="673" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cursor() : Cursor&lt; LongType &gt;" num="676" count="0" type="method"/>
            <line num="679" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localizingCursor() : Cursor&lt; LongType &gt;" num="682" count="0" type="method"/>
            <line num="685" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : long" num="688" count="0" type="method"/>
            <line num="691" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="firstElement() : LongType" num="694" count="0" type="method"/>
            <line num="697" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterationOrder() : Object" num="700" count="0" type="method"/>
            <line num="703" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt; LongType &gt;" num="706" count="0" type="method"/>
            <line num="709" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="factory() : ImgFactory&lt; LongType &gt;" num="712" count="0" type="method"/>
            <line num="715" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : Histogram1d&lt; T &gt;" num="718" count="0" type="method"/>
            <line num="721" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="reset() : void" num="726" count="0" type="method"/>
            <line num="728" count="0" type="stmt"/>
            <line num="729" count="0" type="stmt"/>
            <line num="730" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="init(Iterable&lt; T &gt;) : void" num="733" count="0" type="method"/>
            <line num="735" count="0" type="stmt"/>
            <line num="738" count="0" type="stmt"/>
            <line num="739" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="739" type="cond"/>
            <line num="741" count="0" type="stmt"/>
            <line num="742" count="0" type="stmt"/>
            <line num="746" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="746" type="cond"/>
            <line num="748" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="add(Iterable&lt; T &gt;) : void" num="752" count="0" type="method"/>
            <line num="754" count="0" type="stmt"/>
            <line num="756" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="subtract(Iterable&lt; T &gt;) : void" num="760" count="0" type="method"/>
            <line num="762" count="0" type="stmt"/>
            <line num="764" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/histogram/HistogramNd.java" name="HistogramNd.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="156" loc="1150" coveredmethods="0" methods="86" elements="476" classes="4" ncloc="655" statements="262" conditionals="128" coveredstatements="0"/>
            <class name="HistogramNd">
               <metrics coveredelements="0" coveredconditionals="0" complexity="152" coveredmethods="0" methods="84" elements="464" statements="256" conditionals="124" coveredstatements="0"/>
            </class>
            <class name="HistogramNd.Counter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="HistogramNd.Decrementer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="1" elements="6" statements="3" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="HistogramNd.Incrementer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="1" elements="6" statements="3" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="HistogramNd(List&lt; BinMapper1d&lt; T &gt;&gt;)" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="96" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="HistogramNd(HistogramNd&lt; T &gt;)" num="112" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="HistogramNd(Iterable&lt; List&lt; T &gt;&gt;,List&lt; BinMapper1d&lt; T &gt;&gt;)" num="135" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="HistogramNd(List&lt; Iterable&lt; T &gt;&gt;,List&lt; BinMapper1d&lt; T &gt;&gt;)" num="151" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasTails(int) : boolean" num="163" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="hasTails() : boolean" num="172" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="174" type="cond"/>
            <line num="176" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="176" type="cond"/>
            <line num="177" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="lowerTailCount(int) : long" num="186" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="188" type="cond"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="193" type="cond"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="197" type="cond"/>
            <line num="198" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="lowerTailCount() : long" num="206" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="208" type="cond"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="213" type="cond"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="217" type="cond"/>
            <line num="219" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="219" type="cond"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="upperTailCount(int) : long" num="233" count="0" type="method"/>
            <line num="235" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="235" type="cond"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="241" type="cond"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="245" type="cond"/>
            <line num="246" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="upperTailCount() : long" num="254" count="0" type="method"/>
            <line num="256" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="256" type="cond"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="261" type="cond"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="265" type="cond"/>
            <line num="267" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="267" type="cond"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="valueCount(int) : long" num="281" count="0" type="method"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="288" type="cond"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="293" type="cond"/>
            <line num="295" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="297" type="cond"/>
            <line num="298" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="valueCount() : long" num="307" count="0" type="method"/>
            <line num="312" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="312" type="cond"/>
            <line num="313" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="317" type="cond"/>
            <line num="319" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="322" type="cond"/>
            <line num="324" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="324" type="cond"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="330" type="cond"/>
            <line num="331" count="0" type="stmt"/>
            <line num="333" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="distributionCount(int,long) : long" num="341" count="0" type="method"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="346" type="cond"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="350" type="cond"/>
            <line num="351" count="0" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line num="354" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="distributionCount() : long" num="361" count="0" type="method"/>
            <line num="363" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ignoredCount() : long" num="370" count="0" type="method"/>
            <line num="372" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="totalCount() : long" num="380" count="0" type="method"/>
            <line num="382" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="frequency(List&lt; T &gt;) : long" num="394" count="0" type="method"/>
            <line num="396" count="0" type="stmt"/>
            <line num="397" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="frequency(long[]) : long" num="403" count="0" type="method"/>
            <line num="405" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="relativeFrequency(List&lt; T &gt;,boolean) : double" num="427" count="0" type="method"/>
            <line num="429" count="0" type="stmt"/>
            <line num="430" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="relativeFrequency(long[],boolean) : double" num="449" count="0" type="method"/>
            <line num="451" count="0" type="stmt"/>
            <line num="452" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="452" type="cond"/>
            <line num="453" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getBinCount() : long" num="459" count="0" type="method"/>
            <line num="461" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="461" type="cond"/>
            <line num="462" count="0" type="stmt"/>
            <line num="463" count="0" type="stmt"/>
            <line num="464" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="464" type="cond"/>
            <line num="466" count="0" type="stmt"/>
            <line num="468" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="map(List&lt; T &gt;,long[]) : void" num="474" count="0" type="method"/>
            <line num="476" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="476" type="cond"/>
            <line num="478" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCenterValues(long[],List&lt; T &gt;) : void" num="490" count="0" type="method"/>
            <line num="492" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="492" type="cond"/>
            <line num="494" count="0" type="stmt"/>
            <line num="495" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getLowerBounds(long[],List&lt; T &gt;) : void" num="507" count="0" type="method"/>
            <line num="509" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="509" type="cond"/>
            <line num="511" count="0" type="stmt"/>
            <line num="512" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getUpperBounds(long[],List&lt; T &gt;) : void" num="524" count="0" type="method"/>
            <line num="526" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="526" type="cond"/>
            <line num="528" count="0" type="stmt"/>
            <line num="529" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="includesUpperBounds(long[]) : boolean" num="539" count="0" type="method"/>
            <line num="541" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="541" type="cond"/>
            <line num="543" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="543" type="cond"/>
            <line num="544" count="0" type="stmt"/>
            <line num="546" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="includesLowerBounds(long[]) : boolean" num="555" count="0" type="method"/>
            <line num="557" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="557" type="cond"/>
            <line num="559" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="559" type="cond"/>
            <line num="560" count="0" type="stmt"/>
            <line num="562" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="includesUpperBound(int,long) : boolean" num="574" count="0" type="method"/>
            <line num="576" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="includesLowerBound(int,long) : boolean" num="588" count="0" type="method"/>
            <line num="590" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="isInLowerTail(List&lt; T &gt;) : boolean" num="600" count="0" type="method"/>
            <line num="602" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="602" type="cond"/>
            <line num="604" count="0" type="stmt"/>
            <line num="604" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="604" type="cond"/>
            <line num="606" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="isInLowerTail(int,T) : boolean" num="618" count="0" type="method"/>
            <line num="620" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="620" type="cond"/>
            <line num="622" count="0" type="stmt"/>
            <line num="623" count="0" type="stmt"/>
            <line num="623" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="623" type="cond"/>
            <line num="625" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="isInUpperTail(List&lt; T &gt;) : boolean" num="635" count="0" type="method"/>
            <line num="637" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="637" type="cond"/>
            <line num="639" count="0" type="stmt"/>
            <line num="639" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="639" type="cond"/>
            <line num="641" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="isInUpperTail(int,T) : boolean" num="653" count="0" type="method"/>
            <line num="655" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="655" type="cond"/>
            <line num="657" count="0" type="stmt"/>
            <line num="658" count="0" type="stmt"/>
            <line num="658" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="658" type="cond"/>
            <line num="660" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="isInMiddle(List&lt; T &gt;) : boolean" num="670" count="0" type="method"/>
            <line num="672" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="672" type="cond"/>
            <line num="674" count="0" type="stmt"/>
            <line num="674" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="674" type="cond"/>
            <line num="676" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="isInMiddle(int,T) : boolean" num="688" count="0" type="method"/>
            <line num="690" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="690" type="cond"/>
            <line num="692" count="0" type="stmt"/>
            <line num="693" count="0" type="stmt"/>
            <line num="693" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="693" type="cond"/>
            <line num="695" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="isOutside(List&lt; T &gt;) : boolean" num="704" count="0" type="method"/>
            <line num="706" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="706" type="cond"/>
            <line num="708" count="0" type="stmt"/>
            <line num="708" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="708" type="cond"/>
            <line num="710" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="isOutside(int,T) : boolean" num="720" count="0" type="method"/>
            <line num="722" count="0" type="stmt"/>
            <line num="723" count="0" type="stmt"/>
            <line num="723" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="723" type="cond"/>
            <line num="724" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dfd() : DiscreteFrequencyDistribution" num="730" count="0" type="method"/>
            <line num="732" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="countData(Iterable&lt; List&lt; T &gt;&gt;) : void" num="742" count="0" type="method"/>
            <line num="744" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="countData(List&lt; Iterable&lt; T &gt;&gt;) : void" num="754" count="0" type="method"/>
            <line num="756" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addData(Iterable&lt; List&lt; T &gt;&gt;) : void" num="766" count="0" type="method"/>
            <line num="768" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addData(List&lt; Iterable&lt; T &gt;&gt;) : void" num="778" count="0" type="method"/>
            <line num="780" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subtractData(Iterable&lt; List&lt; T &gt;&gt;) : void" num="790" count="0" type="method"/>
            <line num="792" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subtractData(List&lt; Iterable&lt; T &gt;&gt;) : void" num="802" count="0" type="method"/>
            <line num="804" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="increment(long[]) : void" num="813" count="0" type="method"/>
            <line num="815" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decrement(long[]) : void" num="824" count="0" type="method"/>
            <line num="826" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="increment(List&lt; T &gt;) : void" num="835" count="0" type="method"/>
            <line num="837" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decrement(List&lt; T &gt;) : void" num="846" count="0" type="method"/>
            <line num="848" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="resetCounters() : void" num="854" count="0" type="method"/>
            <line num="856" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numDimensions() : int" num="865" count="0" type="method"/>
            <line num="868" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dimension(int) : long" num="875" count="0" type="method"/>
            <line num="878" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dimensions(long[]) : void" num="885" count="0" type="method"/>
            <line num="888" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess() : RandomAccess&lt; LongType &gt;" num="891" count="0" type="method"/>
            <line num="894" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomAccess(Interval) : RandomAccess&lt; LongType &gt;" num="897" count="0" type="method"/>
            <line num="900" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="min(int) : long" num="903" count="0" type="method"/>
            <line num="906" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="min(long[]) : void" num="909" count="0" type="method"/>
            <line num="912" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="min(Positionable) : void" num="915" count="0" type="method"/>
            <line num="918" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="max(int) : long" num="921" count="0" type="method"/>
            <line num="924" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="max(long[]) : void" num="927" count="0" type="method"/>
            <line num="930" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="max(Positionable) : void" num="933" count="0" type="method"/>
            <line num="936" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMin(int) : double" num="939" count="0" type="method"/>
            <line num="942" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMin(double[]) : void" num="945" count="0" type="method"/>
            <line num="948" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMin(RealPositionable) : void" num="951" count="0" type="method"/>
            <line num="954" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMax(int) : double" num="957" count="0" type="method"/>
            <line num="960" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMax(double[]) : void" num="963" count="0" type="method"/>
            <line num="966" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="realMax(RealPositionable) : void" num="969" count="0" type="method"/>
            <line num="972" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cursor() : Cursor&lt; LongType &gt;" num="975" count="0" type="method"/>
            <line num="978" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="localizingCursor() : Cursor&lt; LongType &gt;" num="981" count="0" type="method"/>
            <line num="984" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : long" num="987" count="0" type="method"/>
            <line num="990" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="firstElement() : LongType" num="993" count="0" type="method"/>
            <line num="996" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterationOrder() : Object" num="999" count="0" type="method"/>
            <line num="1002" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt; LongType &gt;" num="1005" count="0" type="method"/>
            <line num="1008" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="factory() : ImgFactory&lt; LongType &gt;" num="1011" count="0" type="method"/>
            <line num="1014" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : HistogramNd&lt; T &gt;" num="1017" count="0" type="method"/>
            <line num="1020" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="reset() : void" num="1025" count="0" type="method"/>
            <line num="1027" count="0" type="stmt"/>
            <line num="1028" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="init(Iterable&lt; List&lt; T &gt;&gt;) : void" num="1031" count="0" type="method"/>
            <line num="1033" count="0" type="stmt"/>
            <line num="1034" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="init(List&lt; Iterable&lt; T &gt;&gt;) : void" num="1037" count="0" type="method"/>
            <line num="1039" count="0" type="stmt"/>
            <line num="1040" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="add(Iterable&lt; List&lt; T &gt;&gt;) : void" num="1043" count="0" type="method"/>
            <line num="1045" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="add(List&lt; Iterable&lt; T &gt;&gt;) : void" num="1048" count="0" type="method"/>
            <line num="1050" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="subtract(Iterable&lt; List&lt; T &gt;&gt;) : void" num="1053" count="0" type="method"/>
            <line num="1055" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="subtract(List&lt; Iterable&lt; T &gt;&gt;) : void" num="1058" count="0" type="method"/>
            <line num="1060" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="modifyCounts(Iterable&lt; List&lt; T &gt;&gt;,Counter) : void" num="1063" count="0" type="method"/>
            <line num="1065" count="0" type="stmt"/>
            <line num="1066" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1066" type="cond"/>
            <line num="1068" count="0" type="stmt"/>
            <line complexity="7" visibility="private" signature="modifyCounts(List&lt; Iterable&lt; T &gt;&gt;,Counter) : void" num="1072" count="0" type="method"/>
            <line num="1074" count="0" type="stmt"/>
            <line num="1075" count="0" type="stmt"/>
            <line num="1076" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1076" type="cond"/>
            <line num="1078" count="0" type="stmt"/>
            <line num="1079" count="0" type="stmt"/>
            <line num="1081" count="0" type="stmt"/>
            <line num="1082" count="0" type="stmt"/>
            <line num="1084" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1084" type="cond"/>
            <line num="1086" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1086" type="cond"/>
            <line num="1087" count="0" type="stmt"/>
            <line num="1089" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1089" type="cond"/>
            <line num="1091" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1091" type="cond"/>
            <line num="1093" count="0" type="stmt"/>
            <line num="1095" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1098" type="cond"/>
            <line complexity="4" visibility="private" signature="count(List&lt; T &gt;,Counter) : void" num="1101" count="0" type="method"/>
            <line num="1103" count="0" type="stmt"/>
            <line num="1104" count="0" type="stmt"/>
            <line num="1105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1105" type="cond"/>
            <line num="1107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1107" type="cond"/>
            <line num="1109" count="0" type="stmt"/>
            <line num="1110" count="0" type="stmt"/>
            <line num="1113" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="count(long[],boolean) : void" num="1125" count="0" type="method"/>
            <line num="1129" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1129" type="cond"/>
            <line num="1130" count="0" type="stmt"/>
            <line num="1132" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="count(long[],boolean) : void" num="1139" count="0" type="method"/>
            <line num="1143" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="1143" type="cond"/>
            <line num="1144" count="0" type="stmt"/>
            <line num="1146" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/histogram/Integer1dBinMapper.java" name="Integer1dBinMapper.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="35" loc="232" coveredmethods="0" methods="11" elements="96" classes="1" ncloc="143" statements="53" conditionals="32" coveredstatements="0"/>
            <class name="Integer1dBinMapper">
               <metrics coveredelements="0" coveredconditionals="0" complexity="35" coveredmethods="0" methods="11" elements="96" statements="53" conditionals="32" coveredstatements="0"/>
            </class>
            <line complexity="5" visibility="public" signature="Integer1dBinMapper(long,long,boolean)" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line complexity="1" visibility="public" signature="getBinCount() : long" num="94" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="map(T) : long" num="100" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="108" type="cond"/>
            <line num="109" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="111" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="getCenterValue(long,T) : void" num="128" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="132" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="134" type="cond"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getLowerBound(long,T) : void" num="148" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="151" type="cond"/>
            <line num="153" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="153" type="cond"/>
            <line num="154" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getUpperBound(long,T) : void" num="164" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="167" type="cond"/>
            <line num="169" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="169" type="cond"/>
            <line num="170" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="includesLowerBound(long) : boolean" num="180" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="includesUpperBound(long) : boolean" num="186" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasTails() : boolean" num="192" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : Integer1dBinMapper&lt; T &gt;" num="198" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="histogramNd(long[],long[],boolean[]) : HistogramNd&lt; K &gt;" num="217" count="0" type="method"/>
            <line num="220" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="220" type="cond"/>
            <line num="221" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="224" type="cond"/>
            <line num="226" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/histogram/Real1dBinMapper.java" name="Real1dBinMapper.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="45" loc="268" coveredmethods="0" methods="14" elements="134" classes="1" ncloc="163" statements="72" conditionals="48" coveredstatements="0"/>
            <class name="Real1dBinMapper">
               <metrics coveredelements="0" coveredconditionals="0" complexity="45" coveredmethods="0" methods="14" elements="134" statements="72" conditionals="48" coveredstatements="0"/>
            </class>
            <line complexity="7" visibility="public" signature="Real1dBinMapper(double,double,long,boolean)" num="82" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="89" type="cond"/>
            <line num="91" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBinCount() : long" num="109" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="8" visibility="public" signature="map(T) : long" num="115" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="131" type="cond"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="140" type="cond"/>
            <line num="141" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCenterValue(long,T) : void" num="148" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLowerBound(long,T) : void" num="154" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getUpperBound(long,T) : void" num="160" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="includesLowerBound(long) : boolean" num="166" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="169" type="cond"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="includesUpperBound(long) : boolean" num="174" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="177" type="cond"/>
            <line num="179" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="179" type="cond"/>
            <line num="180" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="184" type="cond"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasTails() : boolean" num="190" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : Real1dBinMapper&lt; T &gt;" num="196" count="0" type="method"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="histogramNd(double[],double[],long[],boolean[]) : HistogramNd&lt; K &gt;" num="217" count="0" type="method"/>
            <line num="220" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="220" type="cond"/>
            <line num="221" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="224" type="cond"/>
            <line num="226" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="min(long) : double" num="235" count="0" type="method"/>
            <line num="237" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="237" type="cond"/>
            <line num="238" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="238" type="cond"/>
            <line num="240" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="240" type="cond"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="242" type="cond"/>
            <line num="243" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="max(long) : double" num="249" count="0" type="method"/>
            <line num="251" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="251" type="cond"/>
            <line num="252" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="252" type="cond"/>
            <line num="254" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="254" type="cond"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="256" type="cond"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="center(long) : double" num="263" count="0" type="method"/>
            <line num="265" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/histogram/Histogram1dTest.java" name="Histogram1dTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="123" coveredmethods="0" methods="2" elements="50" classes="1" ncloc="66" statements="48" conditionals="0" coveredstatements="0"/>
            <class name="Histogram1dTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="50" statements="48" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="54" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getData1() : List&lt; UnsignedByteType &gt;" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/histogram/HistogramNdTest.java" name="HistogramNdTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="12" loc="383" coveredmethods="0" methods="11" elements="213" classes="2" ncloc="276" statements="200" conditionals="2" coveredstatements="0"/>
            <class name="HistogramNdTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="192" statements="186" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="HistogramNdTest.RgbIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="5" elements="21" statements="14" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testUnconstrainedNoTails() : void" num="61" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstrainedWithTails() : void" num="132" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testConstrainedWithNoTails() : void" num="202" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRgbHist() : void" num="273" count="0" type="method"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line num="288" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="292" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getData1() : List&lt; UnsignedByteType &gt;" num="295" count="0" type="method"/>
            <line num="297" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line num="304" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getData2() : List&lt; UnsignedByteType &gt;" num="312" count="0" type="method"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line num="317" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line num="323" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="RgbIterator(Img&lt; ARGBType &gt;)" num="334" count="0" type="method"/>
            <line num="336" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt; List&lt; IntType &gt;&gt;" num="339" count="0" type="method"/>
            <line num="342" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="hasNext() : boolean" num="349" count="0" type="method"/>
            <line num="352" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="352" type="cond"/>
            <line num="354" count="0" type="stmt"/>
            <line num="355" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : List&lt; IntType &gt;" num="363" count="0" type="method"/>
            <line num="366" count="0" type="stmt"/>
            <line num="367" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="373" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/histogram/HistogramPerformanceTest.java" name="HistogramPerformanceTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="130" coveredmethods="0" methods="3" elements="47" classes="1" ncloc="70" statements="40" conditionals="4" coveredstatements="0"/>
            <class name="HistogramPerformanceTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="3" elements="47" statements="40" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="run(T,int) : void" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="createImage(T,int) : Img&lt; T &gt;" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/histogram/Integer1dBinMapperTest.java" name="Integer1dBinMapperTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="109" coveredmethods="0" methods="2" elements="44" classes="1" ncloc="59" statements="38" conditionals="4" coveredstatements="0"/>
            <class name="Integer1dBinMapperTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="2" elements="44" statements="38" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="testNoTail() : void" num="50" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="58" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testTail() : void" num="76" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/histogram/Real1dBinMapperTest.java" name="Real1dBinMapperTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="303" coveredmethods="0" methods="7" elements="185" classes="1" ncloc="213" statements="162" conditionals="16" coveredstatements="0"/>
            <class name="Real1dBinMapperTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="7" elements="185" statements="162" conditionals="16" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="testIntNoTails() : void" num="56" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testIntTails() : void" num="93" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testFloatNoTails() : void" num="130" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="138" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="143" type="cond"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testFloatTails() : void" num="161" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="169" type="cond"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="174" type="cond"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBinBoundariesTails() : void" num="192" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBinBoundariesNoTails() : void" num="243" count="0" type="method"/>
            <line num="246" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptyMapper() : void" num="290" count="0" type="method"/>
            <line num="293" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.type.volatiles">
         <metrics coveredelements="0" complexity="218" loc="2299" methods="216" classes="28" statements="309" coveredconditionals="0" coveredmethods="0" elements="529" ncloc="1302" files="17" conditionals="4" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/volatiles/AbstractVolatileNativeNumericType.java" name="AbstractVolatileNativeNumericType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="103" coveredmethods="0" methods="8" elements="16" classes="1" ncloc="48" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="AbstractVolatileNativeNumericType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="8" elements="16" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractVolatileNativeNumericType(N,boolean)" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getEntitiesPerPixel() : Fraction" num="62" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="updateIndex(int) : void" num="68" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIndex() : int" num="74" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="incIndex() : void" num="80" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="incIndex(int) : void" num="86" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decIndex() : void" num="92" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decIndex(int) : void" num="98" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/volatiles/AbstractVolatileNativeRealType.java" name="AbstractVolatileNativeRealType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="102" coveredmethods="0" methods="8" elements="16" classes="1" ncloc="48" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="AbstractVolatileNativeRealType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="8" elements="16" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractVolatileNativeRealType(R,boolean)" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getEntitiesPerPixel() : Fraction" num="61" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="updateIndex(int) : void" num="67" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIndex() : int" num="73" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="incIndex() : void" num="79" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="incIndex(int) : void" num="85" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decIndex() : void" num="91" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decIndex(int) : void" num="97" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/volatiles/AbstractVolatileNumericType.java" name="AbstractVolatileNumericType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="146" coveredmethods="0" methods="14" elements="38" classes="1" ncloc="86" statements="22" conditionals="2" coveredstatements="0"/>
            <class name="AbstractVolatileNumericType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="14" elements="38" statements="22" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractVolatileNumericType(N,boolean)" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractVolatileNumericType(N)" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(T) : void" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(T) : void" num="73" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(T) : void" num="80" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(T) : void" num="87" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(T) : void" num="94" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setZero() : void" num="101" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setOne() : void" num="107" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(float) : void" num="113" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(double) : void" num="119" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="valueEquals(T) : boolean" num="125" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="equals(Object) : boolean" num="131" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="134" type="cond"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="141" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/volatiles/AbstractVolatileRealType.java" name="AbstractVolatileRealType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="36" loc="272" coveredmethods="0" methods="35" elements="80" classes="1" ncloc="192" statements="43" conditionals="2" coveredstatements="0"/>
            <class name="AbstractVolatileRealType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="36" coveredmethods="0" methods="35" elements="80" statements="43" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractVolatileRealType(R,boolean)" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealDouble() : double" num="60" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRealFloat() : float" num="66" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getImaginaryDouble() : double" num="72" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getImaginaryFloat() : float" num="78" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setReal(float) : void" num="84" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setReal(double) : void" num="90" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setImaginary(float) : void" num="96" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setImaginary(double) : void" num="102" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setComplexNumber(float,float) : void" num="108" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setComplexNumber(double,double) : void" num="114" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPowerFloat() : float" num="120" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPowerDouble() : double" num="126" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPhaseFloat() : float" num="132" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPhaseDouble() : double" num="138" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="complexConjugate() : void" num="144" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inc() : void" num="150" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dec() : void" num="156" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMaxValue() : double" num="162" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMinValue() : double" num="168" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMinIncrement() : double" num="174" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBitsPerPixel() : int" num="180" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(T) : void" num="186" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(T) : void" num="193" count="0" type="method"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sub(T) : void" num="200" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(T) : void" num="207" count="0" type="method"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="div(T) : void" num="214" count="0" type="method"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setZero() : void" num="221" count="0" type="method"/>
            <line num="224" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setOne() : void" num="227" count="0" type="method"/>
            <line num="230" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(float) : void" num="233" count="0" type="method"/>
            <line num="236" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mul(double) : void" num="239" count="0" type="method"/>
            <line num="242" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compareTo(T) : int" num="245" count="0" type="method"/>
            <line num="248" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="valueEquals(T) : boolean" num="251" count="0" type="method"/>
            <line num="254" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="equals(Object) : boolean" num="257" count="0" type="method"/>
            <line num="260" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="260" type="cond"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="264" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="267" count="0" type="method"/>
            <line num="270" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/volatiles/VolatileARGBType.java" name="VolatileARGBType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="143" coveredmethods="0" methods="13" elements="33" classes="2" ncloc="82" statements="20" conditionals="0" coveredstatements="0"/>
            <class name="VolatileARGBType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="10" elements="27" statements="17" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="VolatileARGBType.WrappedARGBType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="WrappedARGBType(NativeImg&lt; ?, ? extends IntAccess &gt;)" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="WrappedARGBType(IntAccess)" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setAccess(IntAccess) : void" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileARGBType(NativeImg&lt; ?, ? extends VolatileIntAccess &gt;)" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileARGBType(VolatileIntAccess)" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileARGBType(int)" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileARGBType()" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(int) : void" num="103" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="updateContainer(Object) : void" num="108" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="duplicateTypeOnSameNativeImg() : VolatileARGBType" num="116" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createVariable() : VolatileARGBType" num="122" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : VolatileARGBType" num="128" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNativeTypeFactory() : NativeTypeFactory&lt; VolatileARGBType, ? &gt;" num="138" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/volatiles/VolatileByteType.java" name="VolatileByteType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="140" coveredmethods="0" methods="13" elements="33" classes="2" ncloc="80" statements="20" conditionals="0" coveredstatements="0"/>
            <class name="VolatileByteType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="10" elements="27" statements="17" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="VolatileByteType.WrappedByteType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="WrappedByteType(NativeImg&lt;?, ? extends ByteAccess&gt;)" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="WrappedByteType(ByteAccess)" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setAccess(ByteAccess) : void" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileByteType(NativeImg&lt; ?, ? extends VolatileByteAccess &gt;)" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileByteType(VolatileByteAccess)" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileByteType(byte)" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileByteType()" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(byte) : void" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="updateContainer(Object) : void" num="105" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="duplicateTypeOnSameNativeImg() : VolatileByteType" num="113" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createVariable() : VolatileByteType" num="119" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : VolatileByteType" num="125" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNativeTypeFactory() : NativeTypeFactory&lt; VolatileByteType, ? &gt;" num="135" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/volatiles/VolatileDoubleType.java" name="VolatileDoubleType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="140" coveredmethods="0" methods="13" elements="33" classes="2" ncloc="80" statements="20" conditionals="0" coveredstatements="0"/>
            <class name="VolatileDoubleType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="10" elements="27" statements="17" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="VolatileDoubleType.WrappedDoubleType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="WrappedDoubleType(NativeImg&lt;?, ? extends DoubleAccess&gt;)" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="WrappedDoubleType(DoubleAccess)" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setAccess(DoubleAccess) : void" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileDoubleType(NativeImg&lt; ?, ? extends VolatileDoubleAccess &gt;)" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileDoubleType(VolatileDoubleAccess)" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileDoubleType(double)" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileDoubleType()" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(double) : void" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="updateContainer(Object) : void" num="105" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="duplicateTypeOnSameNativeImg() : VolatileDoubleType" num="113" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createVariable() : VolatileDoubleType" num="119" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : VolatileDoubleType" num="125" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNativeTypeFactory() : NativeTypeFactory&lt; VolatileDoubleType, ? &gt;" num="135" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/volatiles/VolatileFloatType.java" name="VolatileFloatType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="140" coveredmethods="0" methods="13" elements="33" classes="2" ncloc="80" statements="20" conditionals="0" coveredstatements="0"/>
            <class name="VolatileFloatType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="10" elements="27" statements="17" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="VolatileFloatType.WrappedFloatType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="WrappedFloatType(NativeImg&lt;?, ? extends FloatAccess&gt;)" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="WrappedFloatType(FloatAccess)" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setAccess(FloatAccess) : void" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileFloatType(NativeImg&lt; ?, ? extends VolatileFloatAccess &gt;)" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileFloatType(VolatileFloatAccess)" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileFloatType(float)" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileFloatType()" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(float) : void" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="updateContainer(Object) : void" num="105" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="duplicateTypeOnSameNativeImg() : VolatileFloatType" num="113" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createVariable() : VolatileFloatType" num="119" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : VolatileFloatType" num="125" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNativeTypeFactory() : NativeTypeFactory&lt; VolatileFloatType, ? &gt;" num="135" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/volatiles/VolatileIntType.java" name="VolatileIntType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="140" coveredmethods="0" methods="13" elements="33" classes="2" ncloc="80" statements="20" conditionals="0" coveredstatements="0"/>
            <class name="VolatileIntType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="10" elements="27" statements="17" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="VolatileIntType.WrappedIntType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="WrappedIntType(NativeImg&lt;?, ? extends IntAccess&gt;)" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="WrappedIntType(IntAccess)" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setAccess(IntAccess) : void" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileIntType(NativeImg&lt; ?, ? extends VolatileIntAccess &gt;)" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileIntType(VolatileIntAccess)" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileIntType(int)" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileIntType()" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(int) : void" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="updateContainer(Object) : void" num="105" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="duplicateTypeOnSameNativeImg() : VolatileIntType" num="113" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createVariable() : VolatileIntType" num="119" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : VolatileIntType" num="125" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNativeTypeFactory() : NativeTypeFactory&lt; VolatileIntType, ? &gt;" num="135" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/volatiles/VolatileLongType.java" name="VolatileLongType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="140" coveredmethods="0" methods="13" elements="33" classes="2" ncloc="80" statements="20" conditionals="0" coveredstatements="0"/>
            <class name="VolatileLongType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="10" elements="27" statements="17" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="VolatileLongType.WrappedLongType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="WrappedLongType(NativeImg&lt;?, ? extends LongAccess&gt;)" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="WrappedLongType(LongAccess)" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setAccess(LongAccess) : void" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileLongType(NativeImg&lt; ?, ? extends VolatileLongAccess &gt;)" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileLongType(VolatileLongAccess)" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileLongType(long)" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileLongType()" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(long) : void" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="updateContainer(Object) : void" num="105" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="duplicateTypeOnSameNativeImg() : VolatileLongType" num="113" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createVariable() : VolatileLongType" num="119" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : VolatileLongType" num="125" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNativeTypeFactory() : NativeTypeFactory&lt; VolatileLongType, ? &gt;" num="135" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/volatiles/VolatileNumericType.java" name="VolatileNumericType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="67" coveredmethods="0" methods="4" elements="8" classes="1" ncloc="23" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="VolatileNumericType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="VolatileNumericType(T,boolean)" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileNumericType(T)" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createVariable() : VolatileNumericType&lt; T &gt;" num="56" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : VolatileNumericType&lt; T &gt;" num="62" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/volatiles/VolatileRealType.java" name="VolatileRealType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="67" coveredmethods="0" methods="4" elements="8" classes="1" ncloc="23" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="VolatileRealType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="VolatileRealType(T,boolean)" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileRealType(T)" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createVariable() : VolatileRealType&lt; T &gt;" num="56" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : VolatileRealType&lt; T &gt;" num="62" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/volatiles/VolatileShortType.java" name="VolatileShortType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="140" coveredmethods="0" methods="13" elements="33" classes="2" ncloc="80" statements="20" conditionals="0" coveredstatements="0"/>
            <class name="VolatileShortType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="10" elements="27" statements="17" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="VolatileShortType.WrappedShortType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="WrappedShortType(NativeImg&lt;?, ? extends ShortAccess&gt;)" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="WrappedShortType(ShortAccess)" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setAccess(ShortAccess) : void" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileShortType(NativeImg&lt; ?, ? extends VolatileShortAccess &gt;)" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileShortType(VolatileShortAccess)" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileShortType(short)" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileShortType()" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(short) : void" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="updateContainer(Object) : void" num="105" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="duplicateTypeOnSameNativeImg() : VolatileShortType" num="113" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createVariable() : VolatileShortType" num="119" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : VolatileShortType" num="125" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNativeTypeFactory() : NativeTypeFactory&lt; VolatileShortType, ? &gt;" num="135" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/volatiles/VolatileUnsignedByteType.java" name="VolatileUnsignedByteType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="141" coveredmethods="0" methods="13" elements="33" classes="2" ncloc="80" statements="20" conditionals="0" coveredstatements="0"/>
            <class name="VolatileUnsignedByteType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="10" elements="27" statements="17" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="VolatileUnsignedByteType.WrappedUnsignedByteType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="WrappedUnsignedByteType(NativeImg&lt;?, ? extends ByteAccess&gt;)" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="WrappedUnsignedByteType(ByteAccess)" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setAccess(ByteAccess) : void" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileUnsignedByteType(NativeImg&lt; ?, ? extends VolatileByteAccess &gt;)" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileUnsignedByteType(VolatileByteAccess)" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileUnsignedByteType(int)" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileUnsignedByteType()" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(int) : void" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="updateContainer(Object) : void" num="106" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="duplicateTypeOnSameNativeImg() : VolatileUnsignedByteType" num="114" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createVariable() : VolatileUnsignedByteType" num="120" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : VolatileUnsignedByteType" num="126" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNativeTypeFactory() : NativeTypeFactory&lt; VolatileUnsignedByteType, ? &gt;" num="136" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/volatiles/VolatileUnsignedIntType.java" name="VolatileUnsignedIntType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="139" coveredmethods="0" methods="13" elements="33" classes="2" ncloc="80" statements="20" conditionals="0" coveredstatements="0"/>
            <class name="VolatileUnsignedIntType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="10" elements="27" statements="17" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="VolatileUnsignedIntType.WrappedUnsignedIntType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="WrappedUnsignedIntType(NativeImg&lt;?, ? extends IntAccess&gt;)" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="WrappedUnsignedIntType(IntAccess)" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setAccess(IntAccess) : void" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileUnsignedIntType(NativeImg&lt; ?, ? extends VolatileIntAccess &gt;)" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileUnsignedIntType(VolatileIntAccess)" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileUnsignedIntType(int)" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileUnsignedIntType()" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(int) : void" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="updateContainer(Object) : void" num="104" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="duplicateTypeOnSameNativeImg() : VolatileUnsignedIntType" num="112" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createVariable() : VolatileUnsignedIntType" num="118" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : VolatileUnsignedIntType" num="124" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNativeTypeFactory() : NativeTypeFactory&lt; VolatileUnsignedIntType, ? &gt;" num="134" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/volatiles/VolatileUnsignedLongType.java" name="VolatileUnsignedLongType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="139" coveredmethods="0" methods="13" elements="33" classes="2" ncloc="80" statements="20" conditionals="0" coveredstatements="0"/>
            <class name="VolatileUnsignedLongType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="10" elements="27" statements="17" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="VolatileUnsignedLongType.WrappedUnsignedLongType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="WrappedUnsignedLongType(NativeImg&lt;?, ? extends LongAccess&gt;)" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="WrappedUnsignedLongType(LongAccess)" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setAccess(LongAccess) : void" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileUnsignedLongType(NativeImg&lt; ?, ? extends VolatileLongAccess &gt;)" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileUnsignedLongType(VolatileLongAccess)" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileUnsignedLongType(long)" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileUnsignedLongType()" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(long) : void" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="updateContainer(Object) : void" num="104" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="duplicateTypeOnSameNativeImg() : VolatileUnsignedLongType" num="112" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createVariable() : VolatileUnsignedLongType" num="118" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : VolatileUnsignedLongType" num="124" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNativeTypeFactory() : NativeTypeFactory&lt; VolatileUnsignedLongType, ? &gt;" num="134" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/type/volatiles/VolatileUnsignedShortType.java" name="VolatileUnsignedShortType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="140" coveredmethods="0" methods="13" elements="33" classes="2" ncloc="80" statements="20" conditionals="0" coveredstatements="0"/>
            <class name="VolatileUnsignedShortType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="10" elements="27" statements="17" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="VolatileUnsignedShortType.WrappedUnsignedShortType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="WrappedUnsignedShortType(NativeImg&lt;?, ? extends ShortAccess&gt;)" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="WrappedUnsignedShortType(ShortAccess)" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setAccess(ShortAccess) : void" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileUnsignedShortType(NativeImg&lt; ?, ? extends VolatileShortAccess &gt;)" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileUnsignedShortType(VolatileShortAccess)" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileUnsignedShortType(int)" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="VolatileUnsignedShortType()" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="set(int) : void" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="updateContainer(Object) : void" num="105" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="duplicateTypeOnSameNativeImg() : VolatileUnsignedShortType" num="113" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createVariable() : VolatileUnsignedShortType" num="119" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : VolatileUnsignedShortType" num="125" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNativeTypeFactory() : NativeTypeFactory&lt; VolatileUnsignedShortType, ? &gt;" num="135" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.display.awt">
         <metrics coveredelements="0" complexity="34" loc="360" methods="34" classes="3" statements="47" coveredconditionals="0" coveredmethods="0" elements="81" ncloc="187" files="3" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/display/awt/SignedByteDataBuffer.java" name="SignedByteDataBuffer.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="98" coveredmethods="0" methods="8" elements="19" classes="1" ncloc="45" statements="11" conditionals="0" coveredstatements="0"/>
            <class name="SignedByteDataBuffer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="8" elements="19" statements="11" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SignedByteDataBuffer(byte[],int)" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SignedByteDataBuffer(byte[][],int)" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getData() : byte[]" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getData(int) : byte[]" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getElem(int) : int" num="74" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getElem(int,int) : int" num="80" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setElem(int,int) : void" num="86" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setElem(int,int,int) : void" num="92" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/display/awt/SignedShortDataBuffer.java" name="SignedShortDataBuffer.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="115" coveredmethods="0" methods="10" elements="26" classes="1" ncloc="56" statements="16" conditionals="0" coveredstatements="0"/>
            <class name="SignedShortDataBuffer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="10" elements="26" statements="16" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SignedShortDataBuffer(int)" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SignedShortDataBuffer(int,int)" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SignedShortDataBuffer(short[],int)" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SignedShortDataBuffer(short[],int,int)" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SignedShortDataBuffer(short[][],int)" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SignedShortDataBuffer(short[][],int,int[])" num="84" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getData() : short[]" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getData(int) : short[]" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getElem(int,int) : int" num="103" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setElem(int,int,int) : void" num="109" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/display/awt/UnsignedIntDataBuffer.java" name="UnsignedIntDataBuffer.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="16" loc="147" coveredmethods="0" methods="16" elements="36" classes="1" ncloc="86" statements="20" conditionals="0" coveredstatements="0"/>
            <class name="UnsignedIntDataBuffer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="16" coveredmethods="0" methods="16" elements="36" statements="20" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="UnsignedIntDataBuffer(int[],int)" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="UnsignedIntDataBuffer(int[][],int)" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getData() : int[]" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getData(int) : int[]" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getElem(int) : int" num="74" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getElem(int,int) : int" num="80" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getElemFloat(int) : float" num="87" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getElemFloat(int,int) : float" num="93" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getElemDouble(int) : double" num="99" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getElemDouble(int,int) : double" num="105" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setElem(int,int) : void" num="111" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setElem(int,int,int) : void" num="117" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setElemFloat(int,float) : void" num="123" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setElemFloat(int,int,float) : void" num="129" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setElemDouble(int,double) : void" num="135" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setElemDouble(int,int,double) : void" num="141" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.display">
         <metrics coveredelements="0" complexity="53" loc="900" methods="42" classes="8" statements="128" coveredconditionals="0" coveredmethods="0" elements="186" ncloc="388" files="8" conditionals="16" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/display/AbstractArrayColorTable.java" name="AbstractArrayColorTable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="118" coveredmethods="0" methods="5" elements="24" classes="1" ncloc="41" statements="11" conditionals="8" coveredstatements="0"/>
            <class name="AbstractArrayColorTable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="5" elements="24" statements="11" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractArrayColorTable(T)" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValues() : T[]" num="68" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="argb(int) : int" num="74" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="77" type="cond"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="lookupARGB(double,double,double) : int" num="86" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getComponentCount() : int" num="94" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/display/AbstractLinearRange.java" name="AbstractLinearRange.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="91" coveredmethods="0" methods="7" elements="17" classes="1" ncloc="41" statements="10" conditionals="0" coveredstatements="0"/>
            <class name="AbstractLinearRange">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="17" statements="10" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="AbstractLinearRange()" num="50" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="AbstractLinearRange(double,double)" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="roundPositive(double) : int" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMin() : double" num="65" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMax() : double" num="71" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setMax(double) : void" num="77" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setMin(double) : void" num="84" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/display/ArrayColorTable.java" name="ArrayColorTable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="76" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ArrayColorTable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/display/ColorTable.java" name="ColorTable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="87" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="13" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ColorTable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/display/ColorTable16.java" name="ColorTable16.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="110" coveredmethods="0" methods="8" elements="25" classes="1" ncloc="50" statements="13" conditionals="4" coveredstatements="0"/>
            <class name="ColorTable16">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="8" elements="25" statements="13" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ColorTable16()" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ColorTable16(short[])" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLength() : int" num="61" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBits() : int" num="67" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int,int) : int" num="73" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNative(int,int) : int" num="80" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getResampled(int,int,int) : int" num="87" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="gray() : short[][]" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/display/ColorTable8.java" name="ColorTable8.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="105" coveredmethods="0" methods="8" elements="25" classes="1" ncloc="50" statements="13" conditionals="4" coveredstatements="0"/>
            <class name="ColorTable8">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="8" elements="25" statements="13" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ColorTable8()" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ColorTable8(byte[])" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLength() : int" num="58" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBits() : int" num="64" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int,int) : int" num="70" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNative(int,int) : int" num="76" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getResampled(int,int,int) : int" num="82" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="gray() : byte[][]" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/display/LinearRange.java" name="LinearRange.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="51" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="LinearRange">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/display/ARGBScreenImageExpectationChecking.java" name="ARGBScreenImageExpectationChecking.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="17" loc="262" coveredmethods="0" methods="14" elements="95" classes="1" ncloc="177" statements="81" conditionals="0" coveredstatements="0"/>
            <class name="ARGBScreenImageExpectationChecking">
               <metrics coveredelements="0" coveredconditionals="0" complexity="17" coveredmethods="0" methods="14" elements="95" statements="81" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="main(String[]) : void" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFill() : void" num="76" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="testFill2() : boolean" num="82" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getPixel(Image,int,int) : int" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFillAndGrabPixel() : void" num="116" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFillAndGrabPixel2() : boolean" num="122" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFillAndPaintPanelAndGrab() : void" num="147" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFillAndPaintPanelAndGrab2() : boolean" num="153" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="174" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="187" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="run() : void" num="208" count="0" type="method"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="frame(Image,String) : JFrame" num="235" count="0" type="method"/>
            <line num="237" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="update(Graphics) : void" num="244" count="0" type="method"/>
            <line num="247" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="paint(Graphics) : void" num="250" count="0" type="method"/>
            <line num="253" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.display.projector.sampler">
         <metrics coveredelements="0" complexity="26" loc="487" methods="19" classes="4" statements="72" coveredconditionals="0" coveredmethods="0" elements="105" ncloc="208" files="4" conditionals="14" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/display/projector/sampler/IntervalSampler.java" name="IntervalSampler.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="112" coveredmethods="0" methods="8" elements="21" classes="1" ncloc="54" statements="11" conditionals="2" coveredstatements="0"/>
            <class name="IntervalSampler">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="8" elements="21" statements="11" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="IntervalSampler(int,long,long)" num="59" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="jumpFwd(long) : void" num="67" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fwd() : void" num="76" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reset() : void" num="82" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="88" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="94" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : Sampler&lt; T &gt;" num="100" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setRandomAccess(RandomAccess&lt; T &gt;) : void" num="106" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/display/projector/sampler/ProjectedSampler.java" name="ProjectedSampler.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="62" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ProjectedSampler">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/display/projector/sampler/SamplingProjector2D.java" name="SamplingProjector2D.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="205" coveredmethods="0" methods="3" elements="65" classes="1" ncloc="94" statements="50" conditionals="12" coveredstatements="0"/>
            <class name="SamplingProjector2D">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="3" elements="65" statements="50" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="SamplingProjector2D(int,int,RandomAccessible&lt; A &gt;,IterableInterval&lt; B &gt;,Converter&lt; ProjectedSampler&lt; A &gt;, B &gt;,int,long[])" num="111" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="130" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="132" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SamplingProjector2D(int,int,RandomAccessibleInterval&lt; A &gt;,IterableInterval&lt; B &gt;,Converter&lt; ProjectedSampler&lt; A &gt;, B &gt;,int)" num="141" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="map() : void" num="160" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="164" type="cond"/>
            <line num="165" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="182" type="cond"/>
            <line num="183" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="183" type="cond"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="194" type="cond"/>
            <line num="196" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/net/imglib2/display/projector/sampler/SelectiveSampler.java" name="SelectiveSampler.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="108" coveredmethods="0" methods="8" elements="19" classes="1" ncloc="52" statements="11" conditionals="0" coveredstatements="0"/>
            <class name="SelectiveSampler">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="8" elements="19" statements="11" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SelectiveSampler(int,long[])" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="jumpFwd(long) : void" num="65" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fwd() : void" num="71" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reset() : void" num="77" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="83" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="89" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy() : Sampler&lt; T &gt;" num="96" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setRandomAccess(RandomAccess&lt; T &gt;) : void" num="103" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
         </file>
      </package>
      <package name="tests">
         <metrics coveredelements="0" complexity="47" loc="565" methods="26" classes="6" statements="115" coveredconditionals="0" coveredmethods="0" elements="179" ncloc="277" files="3" conditionals="38" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/tests/BasicTest.java" name="BasicTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="130" coveredmethods="0" methods="5" elements="26" classes="1" ncloc="54" statements="17" conditionals="4" coveredstatements="0"/>
            <class name="BasicTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="5" elements="26" statements="17" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testOnePixel() : void" num="72" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAnotherPixel() : void" num="81" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefinition() : void" num="90" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSignature() : void" num="99" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testCursorCoverage() : void" num="109" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/tests/BasicTests.java" name="BasicTests.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="130" coveredmethods="0" methods="5" elements="26" classes="1" ncloc="54" statements="17" conditionals="4" coveredstatements="0"/>
            <class name="BasicTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="5" elements="26" statements="17" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testOnePixel() : void" num="72" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAnotherPixel() : void" num="81" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDefinition() : void" num="90" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSignature() : void" num="99" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testCursorCoverage() : void" num="109" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="123" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/tests/JUnitTestBase.java" name="JUnitTestBase.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="33" loc="305" coveredmethods="0" methods="16" elements="127" classes="4" ncloc="169" statements="81" conditionals="30" coveredstatements="0"/>
            <class name="JUnitTestBase">
               <metrics coveredelements="0" coveredconditionals="0" complexity="26" coveredmethods="0" methods="12" elements="115" statements="75" conditionals="28" coveredstatements="0"/>
            </class>
            <class name="JUnitTestBase.Function">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="JUnitTestBase.TestGenerator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="JUnitTestBase.SinglePixel3D">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="2" elements="8" statements="4" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="protected" signature="match(Img&lt; T &gt;,Function) : boolean" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="83" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="3" visibility="protected" signature="match(Img&lt; T &gt;,Function,float) : boolean" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="100" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="105" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="signature(Img&lt; T &gt;) : float[]" num="116" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="5" visibility="protected" signature="signature(Img&lt; T &gt;,float[]) : void" num="129" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="142" type="cond"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="149" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="157" type="cond"/>
            <line num="158" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="matchSignature(Img&lt; T &gt;,float[]) : boolean" num="170" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="3" visibility="protected" signature="matchSignature(Img&lt; T &gt;,float[],float) : boolean" num="182" count="0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="185" type="cond"/>
            <line num="186" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="186" type="cond"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="get(Img&lt; T &gt;,int[]) : float" num="194" count="0" type="method"/>
            <line num="196" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="get3D(Img&lt; T &gt;,int,int,int) : float" num="205" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line complexity="2" visibility="protected" signature="makeImage(T,Function,long[]) : Img&lt; T &gt;" num="213" count="0" type="method"/>
            <line num="215" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="219" type="cond"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="TestGenerator(float)" num="236" count="0" type="method"/>
            <line num="238" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="calculate(long[]) : float" num="241" count="0" type="method"/>
            <line num="244" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="SinglePixel3D(long,long,long)" num="258" count="0" type="method"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="calculate(long[]) : float" num="265" count="0" type="method"/>
            <line num="268" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="268" type="cond"/>
            <line complexity="1" visibility="protected" signature="makeTestImage3D(long) : Img&lt; FloatType &gt;" num="275" count="0" type="method"/>
            <line num="277" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="makeSinglePixel3D(long,long,long,long) : Img&lt; FloatType &gt;" num="283" count="0" type="method"/>
            <line num="285" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="toString(float[]) : String" num="292" count="0" type="method"/>
            <line num="294" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="294" type="cond"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="296" type="cond"/>
            <line num="297" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="300" type="cond"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.nearestneighbor">
         <metrics coveredelements="0" complexity="63" loc="562" methods="14" classes="2" statements="247" coveredconditionals="0" coveredmethods="0" elements="357" ncloc="407" files="2" conditionals="96" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/nearestneighbor/KDTreeTest.java" name="KDTreeTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="56" loc="459" coveredmethods="0" methods="11" elements="329" classes="1" ncloc="352" statements="230" conditionals="88" coveredstatements="0"/>
            <class name="KDTreeTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="56" coveredmethods="0" methods="11" elements="329" statements="230" conditionals="88" coveredstatements="0"/>
            </class>
            <line complexity="8" visibility="protected" signature="testNearestNeighbor(int,int,int,float,float) : boolean" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="104" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="findNearestNeighborExhaustive(ArrayList&lt; RealPoint &gt;,RealPoint) : RealPoint" num="138" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="152" type="cond"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="154" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="11" visibility="protected" signature="testKNearestNeighbor(int,int,int,int,float,float) : boolean" num="164" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="173" type="cond"/>
            <line num="175" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="175" type="cond"/>
            <line num="176" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="192" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="192" type="cond"/>
            <line num="193" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="203" type="cond"/>
            <line num="205" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="209" type="cond"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="212" type="cond"/>
            <line num="213" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="213" type="cond"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="215" type="cond"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="231" type="cond"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="239" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="244" count="0" type="stmt"/>
            <line num="245" count="0" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line num="250" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="findKNearestNeighborExhaustive(ArrayList&lt; RealPoint &gt;,RealPoint,int) : RealPoint[]" num="253" count="0" type="method"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="257" type="cond"/>
            <line num="258" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="261" count="0" type="stmt"/>
            <line num="262" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line num="265" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="269" type="cond"/>
            <line num="270" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="272" type="cond"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="275" type="cond"/>
            <line num="277" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line num="280" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line complexity="13" visibility="protected" signature="testRadiusNeighbor(int,int,int,float,float) : boolean" num="288" count="0" type="method"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="297" type="cond"/>
            <line num="299" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="299" type="cond"/>
            <line num="300" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line num="303" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line num="308" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line num="315" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="316" type="cond"/>
            <line num="318" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="318" type="cond"/>
            <line num="319" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line num="325" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="331" type="cond"/>
            <line num="332" count="0" type="stmt"/>
            <line num="334" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="334" type="cond"/>
            <line num="336" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="338" type="cond"/>
            <line num="339" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="339" type="cond"/>
            <line num="340" count="0" type="stmt"/>
            <line num="342" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="342" type="cond"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line num="348" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="348" type="cond"/>
            <line num="349" count="0" type="stmt"/>
            <line num="351" count="0" type="stmt"/>
            <line num="355" count="0" type="stmt"/>
            <line num="356" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line num="359" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="363" type="cond"/>
            <line num="365" count="0" type="stmt"/>
            <line num="368" count="0" type="stmt"/>
            <line num="369" count="0" type="stmt"/>
            <line num="370" count="0" type="stmt"/>
            <line num="372" count="0" type="stmt"/>
            <line num="373" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="376" type="cond"/>
            <line num="377" count="0" type="stmt"/>
            <line num="379" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="findNeighborsRadiusExhaustive(ArrayList&lt; RealPoint &gt;,RealPoint,double,boolean) : ArrayList&lt; ValuePair&lt; RealPoint, Double &gt; &gt;" num="385" count="0" type="method"/>
            <line num="387" count="0" type="stmt"/>
            <line num="389" count="0" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line num="391" count="0" type="stmt"/>
            <line num="392" count="0" type="stmt"/>
            <line num="394" count="0" type="stmt"/>
            <line num="396" count="0" type="stmt"/>
            <line num="397" count="0" type="stmt"/>
            <line num="398" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="398" type="cond"/>
            <line num="399" count="0" type="stmt"/>
            <line num="400" count="0" type="stmt"/>
            <line num="402" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="402" type="cond"/>
            <line num="403" count="0" type="stmt"/>
            <line num="406" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="406" type="cond"/>
            <line num="408" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compare(ValuePair&lt; RealPoint, Double &gt;,ValuePair&lt; RealPoint, Double &gt;) : int" num="410" count="0" type="method"/>
            <line num="413" count="0" type="stmt"/>
            <line num="418" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testKDTreeKNearestNeighborSearch() : void" num="421" count="0" type="method"/>
            <line num="424" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testKDTreeNearestNeighborSearch() : void" num="427" count="0" type="method"/>
            <line num="430" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testKDTreeRadiusNeighborSearch() : void" num="433" count="0" type="method"/>
            <line num="436" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="main(String[]) : void" num="439" count="0" type="method"/>
            <line num="441" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="441" type="cond"/>
            <line num="443" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="443" type="cond"/>
            <line num="444" count="0" type="stmt"/>
            <line num="447" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="447" type="cond"/>
            <line num="449" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="449" type="cond"/>
            <line num="450" count="0" type="stmt"/>
            <line num="453" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="453" type="cond"/>
            <line num="455" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="455" type="cond"/>
            <line num="456" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/nearestneighbor/NearestNeighborSearchOnIterableRealIntervalTest.java" name="NearestNeighborSearchOnIterableRealIntervalTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="103" coveredmethods="0" methods="3" elements="28" classes="1" ncloc="55" statements="17" conditionals="8" coveredstatements="0"/>
            <class name="NearestNeighborSearchOnIterableRealIntervalTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="3" elements="28" statements="17" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="private" signature="positionEquals(RealLocalizable,RealLocalizable) : boolean" num="67" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="74" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="init() : void" num="82" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testKNearestNeighborSearch() : void" num="89" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
         </file>
      </package>
      <package name="net.imglib2.iterationorder">
         <metrics coveredelements="0" complexity="1" loc="84" methods="1" classes="1" statements="4" coveredconditionals="0" coveredmethods="0" elements="5" ncloc="26" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/net/imglib2/iterationorder/IterationOrderTests.java" name="IterationOrderTests.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="84" coveredmethods="0" methods="1" elements="5" classes="1" ncloc="26" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="IterationOrderTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="5" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testFlatIterationOrder() : void" num="72" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
         </file>
      </package>
   </project>
   <testproject name="ImgLib2 Core Library 5.9.3-SNAPSHOT" timestamp="0">
      <metrics coveredelements="0" complexity="0" loc="0" methods="0" classes="0" statements="0" packages="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="0" files="0" conditionals="0" coveredstatements="0"/>
   </testproject>
</coverage>