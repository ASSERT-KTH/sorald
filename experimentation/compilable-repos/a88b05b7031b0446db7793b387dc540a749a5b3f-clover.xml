<?xml version="1.0" encoding="UTF-8"?>
<coverage generated="1594120559426" clover="4.4.1">
   <project name="chicory-maven-parent 0.36-successor-SNAPSHOT (Aggregated)" timestamp="1594120556492">
      <metrics coveredelements="0" complexity="323" loc="2542" methods="290" classes="46" statements="441" packages="2" coveredconditionals="0" coveredmethods="0" elements="767" ncloc="1539" files="22" conditionals="36" coveredstatements="0"/>
      <package name="com.github.sviperll.environment">
         <metrics coveredelements="0" complexity="17" loc="207" methods="13" classes="4" statements="30" coveredconditionals="0" coveredmethods="0" elements="45" ncloc="109" files="3" conditionals="2" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/chicory-environment/src/main/java/com/github/sviperll/environment/HUPReopeningFileOutputStream.java" name="HUPReopeningFileOutputStream.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="98" coveredmethods="0" methods="7" elements="26" classes="1" ncloc="65" statements="19" conditionals="0" coveredstatements="0"/>
            <class name="HUPReopeningFileOutputStream">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="7" elements="26" statements="19" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="HUPReopeningFileOutputStream(File)" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="handle(Signal) : void" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(int) : void" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(byte[]) : void" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(byte[],int,int) : void" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="flush() : void" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="close() : void" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/chicory-environment/src/main/java/com/github/sviperll/environment/JVM.java" name="JVM.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="38" coveredmethods="0" methods="2" elements="3" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="JVM">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="getPID() : int" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="JVM()" num="36" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/chicory-environment/src/main/java/com/github/sviperll/environment/SignalWaiter.java" name="SignalWaiter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="71" coveredmethods="0" methods="4" elements="16" classes="2" ncloc="35" statements="10" conditionals="2" coveredstatements="0"/>
            <class name="SignalWaiter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="3" elements="12" statements="7" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="SignalWaiter.SignalWaiterHandler">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="4" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="3" visibility="public" signature="waitForSignal() : void" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isReceived() : boolean" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="expect(String) : void" num="58" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="handle(Signal) : void" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.sviperll.stream">
         <metrics coveredelements="0" complexity="306" loc="2335" methods="277" classes="42" statements="411" coveredconditionals="0" coveredmethods="0" elements="722" ncloc="1430" files="19" conditionals="34" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/chicory-stream/src/main/java/com/github/sviperll/stream/Arrays.java" name="Arrays.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="43" coveredmethods="0" methods="2" elements="5" classes="1" ncloc="11" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="Arrays">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="asStream(T[]) : Stream&lt;T&gt;" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="Arrays()" num="41" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/chicory-stream/src/main/java/com/github/sviperll/stream/CloseableIterator.java" name="CloseableIterator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="38" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="CloseableIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/chicory-stream/src/main/java/com/github/sviperll/stream/Collecting.java" name="Collecting.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="38" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Collecting">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/chicory-stream/src/main/java/com/github/sviperll/stream/Collections.java" name="Collections.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="44" coveredmethods="0" methods="2" elements="5" classes="1" ncloc="12" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="Collections">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="asStream(Iterable&lt;T&gt;) : Stream&lt;T&gt;" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="Collections()" num="42" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/chicory-stream/src/main/java/com/github/sviperll/stream/Collector.java" name="Collector.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="33" loc="197" coveredmethods="0" methods="33" elements="66" classes="1" ncloc="126" statements="33" conditionals="0" coveredstatements="0"/>
            <class name="Collector">
               <metrics coveredelements="0" coveredconditionals="0" complexity="33" coveredmethods="0" methods="33" elements="66" statements="33" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="optional(Function&lt;? super T, Collecting&lt;? super T, R&gt;&gt;) : Collector&lt;T, Optional&lt;R&gt;&gt;" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reducing(U,BiFunction&lt;U, ? super T, U&gt;) : Collector&lt;T, U&gt;" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reducing(BinaryOperator&lt;T&gt;) : Collector&lt;T, Optional&lt;T&gt;&gt;" num="58" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="joiningStrings(String) : Collector&lt;String, Optional&lt;String&gt;&gt;" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="joiningStrings() : Collector&lt;String, String&gt;" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toList() : Collector&lt;T, List&lt;T&gt;&gt;" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toSortedList() : Collector&lt;T, List&lt;T&gt;&gt;" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toSortedList(int) : Collector&lt;T, List&lt;T&gt;&gt;" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toHashSet() : Collector&lt;T, HashSet&lt;T&gt;&gt;" num="88" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toTreeSet() : Collector&lt;T, TreeSet&lt;T&gt;&gt;" num="92" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="findFirst() : Collector&lt;T, Optional&lt;T&gt;&gt;" num="96" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toCollection(Supplier&lt;R&gt;) : Collector&lt;T, R&gt;" num="100" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toMap(Function&lt;? super I, ? extends K&gt;,Supplier&lt;? extends Collecting&lt;I, V&gt;&gt;,Supplier&lt;R&gt;) : Collector&lt;I, R&gt;" num="104" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toHashMap(Function&lt;? super I, ? extends K&gt;,Supplier&lt;? extends Collecting&lt;I, V&gt;&gt;) : Collector&lt;I, HashMap&lt;K, V&gt;&gt;" num="111" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toTreeMap(Function&lt;? super I, ? extends K&gt;,Supplier&lt;? extends Collecting&lt;I, V&gt;&gt;) : Collector&lt;I, TreeMap&lt;K, V&gt;&gt;" num="117" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="counting() : Collector&lt;T, Integer&gt;" num="123" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="maximum() : Collector&lt;T, Optional&lt;T&gt;&gt;" num="127" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="minimum() : Collector&lt;T, Optional&lt;T&gt;&gt;" num="131" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="maximum(Comparator&lt;? super T&gt;) : Collector&lt;T, Optional&lt;T&gt;&gt;" num="135" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="minimum(Comparator&lt;? super T&gt;) : Collector&lt;T, Optional&lt;T&gt;&gt;" num="139" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="summingInt() : Collector&lt;Integer, Integer&gt;" num="143" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="summingLong() : Collector&lt;Long, Long&gt;" num="147" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="summingDouble() : Collector&lt;Double, Double&gt;" num="151" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="productingInt() : Collector&lt;Integer, Integer&gt;" num="155" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="productingLong() : Collector&lt;Long, Long&gt;" num="159" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="productingDouble() : Collector&lt;Double, Double&gt;" num="163" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Collector(Supplier&lt;? extends Collecting&lt;T, R&gt;&gt;)" num="169" count="0" type="method"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : Collecting&lt;T, R&gt;" num="173" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="limiting(int) : Collector&lt;T, R&gt;" num="178" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="skipping(int) : Collector&lt;T, R&gt;" num="182" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="filtering(Predicate&lt;? super T&gt;) : Collector&lt;T, R&gt;" num="186" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mapping(Function&lt;U, ? extends T&gt;) : Collector&lt;U, R&gt;" num="190" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="finallyTransforming(Function&lt;? super R, U&gt;) : Collector&lt;T, U&gt;" num="194" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/chicory-stream/src/main/java/com/github/sviperll/stream/CollectorState.java" name="CollectorState.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="82" loc="466" coveredmethods="0" methods="77" elements="195" classes="5" ncloc="361" statements="108" conditionals="10" coveredstatements="0"/>
            <class name="CollectorState">
               <metrics coveredelements="0" coveredconditionals="0" complexity="65" coveredmethods="0" methods="60" elements="158" statements="88" conditionals="10" coveredstatements="0"/>
            </class>
            <class name="CollectorState.StatefulCollecting">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CollectorState.NoResultCollecting">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CollectorState.ReducingCollecting">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CollectorState.NotOptionalCollectorState">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="optional(Function&lt;? super T, ? extends Collecting&lt;? super T, R&gt;&gt;) : CollectorState&lt;T, Optional&lt;R&gt;&gt;" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reducing(U,BiFunction&lt;U, ? super T, U&gt;) : CollectorState&lt;T, U&gt;" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reducing(BinaryOperator&lt;T&gt;) : CollectorState&lt;T, Optional&lt;T&gt;&gt;" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toList() : CollectorState&lt;T, List&lt;T&gt;&gt;" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toSortedList() : CollectorState&lt;T, List&lt;T&gt;&gt;" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : List&lt;T&gt;" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(T) : void" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="needsMore() : boolean" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toSortedList(int) : CollectorState&lt;T, List&lt;T&gt;&gt;" num="92" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : List&lt;T&gt;" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="accept(T) : void" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="needsMore() : boolean" num="109" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toHashSet() : CollectorState&lt;T, HashSet&lt;T&gt;&gt;" num="117" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toTreeSet() : CollectorState&lt;T, TreeSet&lt;T&gt;&gt;" num="121" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="findFirst() : CollectorState&lt;T, Optional&lt;T&gt;&gt;" num="125" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : T" num="128" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(T) : void" num="133" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="needsMore() : boolean" num="137" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toCollection(R) : CollectorState&lt;T, R&gt;" num="145" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : R" num="147" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(T) : void" num="152" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="needsMore() : boolean" num="157" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toMap(Function&lt;? super I, ? extends K&gt;,Supplier&lt;? extends Collecting&lt;I, V&gt;&gt;,Supplier&lt;R&gt;) : CollectorState&lt;I, R&gt;" num="165" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : R" num="171" count="0" type="method"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="accept(I) : void" num="180" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="184" type="cond"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="needsMore() : boolean" num="191" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toHashMap(Function&lt;? super I, ? extends K&gt;,Supplier&lt;? extends Collecting&lt;I, V&gt;&gt;) : CollectorState&lt;I, HashMap&lt;K, V&gt;&gt;" num="199" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toTreeMap(Function&lt;? super I, ? extends K&gt;,Supplier&lt;? extends Collecting&lt;I, V&gt;&gt;) : CollectorState&lt;I, TreeMap&lt;K, V&gt;&gt;" num="205" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="counting() : CollectorState&lt;T, Integer&gt;" num="211" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(T) : void" num="215" count="0" type="method"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="needsMore() : boolean" num="220" count="0" type="method"/>
            <line num="222" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : Integer" num="225" count="0" type="method"/>
            <line num="227" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="summingInt() : CollectorState&lt;Integer, Integer&gt;" num="233" count="0" type="method"/>
            <line num="234" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="summingLong() : CollectorState&lt;Long, Long&gt;" num="237" count="0" type="method"/>
            <line num="238" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="summingDouble() : CollectorState&lt;Double, Double&gt;" num="241" count="0" type="method"/>
            <line num="242" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="productingInt() : CollectorState&lt;Integer, Integer&gt;" num="245" count="0" type="method"/>
            <line num="246" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="productingLong() : CollectorState&lt;Long, Long&gt;" num="249" count="0" type="method"/>
            <line num="250" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="productingDouble() : CollectorState&lt;Double, Double&gt;" num="253" count="0" type="method"/>
            <line num="254" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="maximum() : CollectorState&lt;T, Optional&lt;T&gt;&gt;" num="257" count="0" type="method"/>
            <line num="258" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="maximum(Comparator&lt;? super T&gt;) : CollectorState&lt;T, Optional&lt;T&gt;&gt;" num="261" count="0" type="method"/>
            <line num="262" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="262" type="cond"/>
            <line complexity="1" visibility="public" signature="minimum() : CollectorState&lt;T, Optional&lt;T&gt;&gt;" num="265" count="0" type="method"/>
            <line num="266" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="minimum(Comparator&lt;? super T&gt;) : CollectorState&lt;T, Optional&lt;T&gt;&gt;" num="269" count="0" type="method"/>
            <line num="270" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="270" type="cond"/>
            <line complexity="1" visibility="public" signature="joiningStrings(String) : CollectorState&lt;String, Optional&lt;String&gt;&gt;" num="273" count="0" type="method"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : String" num="277" count="0" type="method"/>
            <line num="279" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(String) : void" num="282" count="0" type="method"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="needsMore() : boolean" num="288" count="0" type="method"/>
            <line num="290" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="joiningStrings() : CollectorState&lt;String, String&gt;" num="296" count="0" type="method"/>
            <line num="297" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : String" num="299" count="0" type="method"/>
            <line num="301" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(String) : void" num="304" count="0" type="method"/>
            <line num="306" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="needsMore() : boolean" num="309" count="0" type="method"/>
            <line num="311" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="of(Collecting&lt;T, R&gt;) : CollectorState&lt;T, R&gt;" num="317" count="0" type="method"/>
            <line num="318" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="318" type="cond"/>
            <line num="319" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="CollectorState(SaturableConsuming&lt;T&gt;,Supplier&lt;R&gt;)" num="326" count="0" type="method"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(T) : void" num="331" count="0" type="method"/>
            <line num="333" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="needsMore() : boolean" num="336" count="0" type="method"/>
            <line num="338" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : R" num="341" count="0" type="method"/>
            <line num="343" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="limiting(int) : CollectorState&lt;T, R&gt;" num="346" count="0" type="method"/>
            <line num="347" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="skipping(int) : CollectorState&lt;T, R&gt;" num="350" count="0" type="method"/>
            <line num="351" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="filtering(Predicate&lt;? super T&gt;) : CollectorState&lt;T, R&gt;" num="354" count="0" type="method"/>
            <line num="355" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="mapping(Function&lt;U, ? extends T&gt;) : CollectorState&lt;U, R&gt;" num="358" count="0" type="method"/>
            <line num="359" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="finallyTransforming(Function&lt;? super R, U&gt;) : CollectorState&lt;T, U&gt;" num="362" count="0" type="method"/>
            <line num="363" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="StatefulCollecting(Collecting&lt;T, R&gt;)" num="369" count="0" type="method"/>
            <line num="370" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setBehaviour(Collecting&lt;T, R&gt;) : void" num="373" count="0" type="method"/>
            <line num="374" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(T) : void" num="377" count="0" type="method"/>
            <line num="379" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : R" num="382" count="0" type="method"/>
            <line num="384" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="needsMore() : boolean" num="387" count="0" type="method"/>
            <line num="389" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="NoResultCollecting(StatefulCollecting&lt;T, Optional&lt;R&gt;&gt;,Function&lt;? super T, ? extends Collecting&lt;? super T, R&gt;&gt;)" num="397" count="0" type="method"/>
            <line num="398" count="0" type="stmt"/>
            <line num="399" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : Optional&lt;R&gt;" num="402" count="0" type="method"/>
            <line num="404" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(T) : void" num="407" count="0" type="method"/>
            <line num="409" count="0" type="stmt"/>
            <line num="410" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="needsMore() : boolean" num="413" count="0" type="method"/>
            <line num="415" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="ReducingCollecting(U,BiFunction&lt;U, ? super T, U&gt;)" num="423" count="0" type="method"/>
            <line num="424" count="0" type="stmt"/>
            <line num="425" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(T) : void" num="428" count="0" type="method"/>
            <line num="430" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : U" num="433" count="0" type="method"/>
            <line num="435" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="needsMore() : boolean" num="438" count="0" type="method"/>
            <line num="440" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="NotOptionalCollectorState(Collecting&lt;? super T, R&gt;)" num="447" count="0" type="method"/>
            <line num="448" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : Optional&lt;R&gt;" num="451" count="0" type="method"/>
            <line num="453" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(T) : void" num="456" count="0" type="method"/>
            <line num="458" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="needsMore() : boolean" num="461" count="0" type="method"/>
            <line num="463" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/chicory-stream/src/main/java/com/github/sviperll/stream/Drainer.java" name="Drainer.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="32" loc="213" coveredmethods="0" methods="26" elements="73" classes="5" ncloc="153" statements="47" conditionals="0" coveredstatements="0"/>
            <class name="Drainer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="16" coveredmethods="0" methods="11" elements="37" statements="26" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Drainer.DrainerState">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Drainer.CommunicatingState">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="6" elements="20" statements="14" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Drainer.ClosedState">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="7" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Drainer.ExceptionCaughtState">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="9" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="Drainer(Streamable&lt;T&gt;)" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="run() : void" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(T) : void" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="needsMore() : boolean" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fetch() : DrainerResponse&lt;T&gt;" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="close() : DrainerResponse&lt;T&gt;" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="setExceptionCaughtState(RuntimeException) : void" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="setClosedState() : void" num="78" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="request(DrainerRequest) : DrainerResponse&lt;T&gt;" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="takeRequest() : DrainerRequest" num="98" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="putResponse(DrainerResponse&lt;T&gt;) : void" num="108" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="accept(T) : void" num="124" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fetch() : Void" num="129" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="close() : Void" num="135" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="needsMore() : boolean" num="147" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="finish() : void" num="152" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setException(RuntimeException) : void" num="158" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(T) : void" num="166" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="needsMore() : boolean" num="170" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="finish() : void" num="175" count="0" type="method"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setException(RuntimeException) : void" num="180" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="ExceptionCaughtState(RuntimeException)" num="190" count="0" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(T) : void" num="194" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="needsMore() : boolean" num="198" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="finish() : void" num="203" count="0" type="method"/>
            <line num="205" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setException(RuntimeException) : void" num="208" count="0" type="method"/>
            <line num="210" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/chicory-stream/src/main/java/com/github/sviperll/stream/DrainerRequest.java" name="DrainerRequest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="87" coveredmethods="0" methods="10" elements="17" classes="4" ncloc="44" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="DrainerRequest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="7" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="DrainerRequest.DrainerRequestFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="DrainerRequest.DrainerRequestFactory.FetchDrainerRequest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="DrainerRequest.DrainerRequestFactory.CloseDrainerRequest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="factory() : DrainerRequestVisitor&lt;DrainerRequest&gt;" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fetch() : DrainerRequest" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="close() : DrainerRequest" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="DrainerRequest()" num="46" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="fetch() : DrainerRequest" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="close() : DrainerRequest" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="FetchDrainerRequest()" num="67" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="accept(DrainerRequestVisitor&lt;R&gt;) : R" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="CloseDrainerRequest()" num="78" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="accept(DrainerRequestVisitor&lt;R&gt;) : R" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/chicory-stream/src/main/java/com/github/sviperll/stream/DrainerRequestVisitor.java" name="DrainerRequestVisitor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="36" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="DrainerRequestVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/chicory-stream/src/main/java/com/github/sviperll/stream/DrainerResponse.java" name="DrainerResponse.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="118" coveredmethods="0" methods="14" elements="26" classes="5" ncloc="66" statements="12" conditionals="0" coveredstatements="0"/>
            <class name="DrainerResponse">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="9" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="DrainerResponse.DrainerResponseFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="DrainerResponse.DrainerResponseFactory.FetchedDrainerResponse">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="DrainerResponse.DrainerResponseFactory.ClosedDrainerResponse">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="DrainerResponse.DrainerResponseFactory.ErrorDrainerResponse">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="fetched(T) : DrainerResponse&lt;T&gt;" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="closed() : DrainerResponse&lt;T&gt;" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="error(RuntimeException) : DrainerResponse&lt;T&gt;" num="45" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="factory() : DrainerResponseVisitor&lt;T, DrainerResponse&lt;T&gt;&gt;" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="DrainerResponse()" num="54" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="fetched(T) : DrainerResponse&lt;T&gt;" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="closed() : DrainerResponse&lt;T&gt;" num="68" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="error(RuntimeException) : DrainerResponse&lt;T&gt;" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="FetchedDrainerResponse(T)" num="83" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DrainerResponseVisitor&lt;T, R&gt;) : R" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="ClosedDrainerResponse()" num="95" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="accept(DrainerResponseVisitor&lt;T, R&gt;) : R" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="ErrorDrainerResponse(RuntimeException)" num="108" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(DrainerResponseVisitor&lt;T, R&gt;) : R" num="112" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/chicory-stream/src/main/java/com/github/sviperll/stream/DrainerResponseVisitor.java" name="DrainerResponseVisitor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="37" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="DrainerResponseVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/chicory-stream/src/main/java/com/github/sviperll/stream/Files.java" name="Files.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="41" coveredmethods="0" methods="2" elements="3" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="Files">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="asStreamable(File) : StreamableFile" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="Files()" num="39" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/chicory-stream/src/main/java/com/github/sviperll/stream/SaturableConsumer.java" name="SaturableConsumer.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="42" loc="261" coveredmethods="0" methods="37" elements="96" classes="6" ncloc="185" statements="49" conditionals="10" coveredstatements="0"/>
            <class name="SaturableConsumer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="7" statements="3" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="SaturableConsumer.SimpleSaturableConsumer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="14" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SaturableConsumer.FilteringSaturableConsumer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="7" elements="18" statements="9" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="SaturableConsumer.LimitingSaturableConsumer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="7" elements="23" statements="12" conditionals="4" coveredstatements="0"/>
            </class>
            <class name="SaturableConsumer.MappedSaturableConsumer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="15" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SaturableConsumer.SkippingSaturableConsumer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="7" elements="19" statements="10" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="of(SaturableConsuming&lt;T&gt;) : SaturableConsumer&lt;T&gt;" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="39" type="cond"/>
            <line num="40" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="SaturableConsumer()" num="44" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="SimpleSaturableConsumer(SaturableConsuming&lt;T&gt;)" num="55" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(T) : void" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="needsMore() : boolean" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="filtering(Predicate&lt;? super T&gt;) : SaturableConsumer&lt;T&gt;" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="limiting(int) : SaturableConsumer&lt;T&gt;" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="mapping(Function&lt;U, ? extends T&gt;) : SaturableConsumer&lt;U&gt;" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="skipping(int) : SaturableConsumer&lt;T&gt;" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="FilteringSaturableConsumer(SaturableConsuming&lt;T&gt;,Predicate&lt;? super T&gt;)" num="95" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="accept(T) : void" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="needsMore() : boolean" num="105" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="filtering(Predicate&lt;? super T&gt;) : SaturableConsumer&lt;T&gt;" num="110" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="limiting(int) : SaturableConsumer&lt;T&gt;" num="115" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="mapping(Function&lt;U, ? extends T&gt;) : SaturableConsumer&lt;U&gt;" num="120" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="skipping(int) : SaturableConsumer&lt;T&gt;" num="125" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="LimitingSaturableConsumer(SaturableConsuming&lt;T&gt;,int)" num="137" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="accept(T) : void" num="142" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="144" type="cond"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="needsMore() : boolean" num="149" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="filtering(Predicate&lt;? super T&gt;) : SaturableConsumer&lt;T&gt;" num="154" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="limiting(int) : SaturableConsumer&lt;T&gt;" num="159" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="161" type="cond"/>
            <line num="162" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="mapping(Function&lt;U, ? extends T&gt;) : SaturableConsumer&lt;U&gt;" num="167" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="skipping(int) : SaturableConsumer&lt;T&gt;" num="172" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="MappedSaturableConsumer(SaturableConsuming&lt;V&gt;,Function&lt;T, ? extends V&gt;)" num="182" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(T) : void" num="187" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="needsMore() : boolean" num="192" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="filtering(Predicate&lt;? super T&gt;) : SaturableConsumer&lt;T&gt;" num="197" count="0" type="method"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="limiting(int) : SaturableConsumer&lt;T&gt;" num="202" count="0" type="method"/>
            <line num="204" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="mapping(Function&lt;U, ? extends T&gt;) : SaturableConsumer&lt;U&gt;" num="207" count="0" type="method"/>
            <line num="209" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="skipping(int) : SaturableConsumer&lt;T&gt;" num="212" count="0" type="method"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="SkippingSaturableConsumer(SaturableConsuming&lt;T&gt;,int)" num="223" count="0" type="method"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="accept(T) : void" num="228" count="0" type="method"/>
            <line num="230" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="230" type="cond"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="needsMore() : boolean" num="235" count="0" type="method"/>
            <line num="237" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="filtering(Predicate&lt;? super T&gt;) : SaturableConsumer&lt;T&gt;" num="240" count="0" type="method"/>
            <line num="242" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="limiting(int) : SaturableConsumer&lt;T&gt;" num="245" count="0" type="method"/>
            <line num="247" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="mapping(Function&lt;U, ? extends T&gt;) : SaturableConsumer&lt;U&gt;" num="250" count="0" type="method"/>
            <line num="252" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="skipping(int) : SaturableConsumer&lt;T&gt;" num="255" count="0" type="method"/>
            <line num="257" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/chicory-stream/src/main/java/com/github/sviperll/stream/SaturableConsuming.java" name="SaturableConsuming.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="48" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="SaturableConsuming">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/chicory-stream/src/main/java/com/github/sviperll/stream/Stream.java" name="Stream.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="31" loc="212" coveredmethods="0" methods="30" elements="88" classes="1" ncloc="151" statements="56" conditionals="2" coveredstatements="0"/>
            <class name="Stream">
               <metrics coveredelements="0" coveredconditionals="0" complexity="31" coveredmethods="0" methods="30" elements="88" statements="56" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="of(Streamable&lt;T&gt;) : Stream&lt;T&gt;" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="47" type="cond"/>
            <line num="48" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="generate(Supplier&lt;T&gt;) : Stream&lt;T&gt;" num="53" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterate(T,UnaryOperator&lt;T&gt;) : Stream&lt;T&gt;" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="forEach(SaturableConsuming&lt;? super T&gt;) : void" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="flatten(Streamable&lt;? extends Streamable&lt;T&gt;&gt;) : Stream&lt;T&gt;" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="empty() : Stream&lt;T&gt;" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ofElements(T) : Stream&lt;T&gt;" num="79" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ofElements(T,T) : Stream&lt;T&gt;" num="85" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ofElements(T,T,T) : Stream&lt;T&gt;" num="92" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ofElements(T,T,T,T) : Stream&lt;T&gt;" num="100" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ofElements(T,T,T,T,T) : Stream&lt;T&gt;" num="109" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="typedFlatten(Streamable&lt;S&gt;) : Stream&lt;T&gt;" num="119" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(S) : void" num="122" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="needsMore() : boolean" num="127" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="Stream(Streamable&lt;T&gt;)" num="136" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="openIterator() : CloseableIterator&lt;T&gt;" num="140" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="forEach(SaturableConsuming&lt;? super T&gt;) : void" num="144" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="forEach(Consumer&lt;? super T&gt;) : void" num="149" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(T) : void" num="151" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="needsMore() : boolean" num="156" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="map(Function&lt;? super T, U&gt;) : Stream&lt;U&gt;" num="163" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="filter(Predicate&lt;? super T&gt;) : Stream&lt;T&gt;" num="169" count="0" type="method"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reduce(U,BiFunction&lt;U, ? super T, U&gt;) : U" num="175" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reduce(BinaryOperator&lt;T&gt;) : Optional&lt;T&gt;" num="179" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="flatMap(Function&lt;? super T, ? extends Streamable&lt;R&gt;&gt;) : Stream&lt;R&gt;" num="183" count="0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="skip(int) : Stream&lt;T&gt;" num="187" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="limit(int) : Stream&lt;T&gt;" num="193" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="collect(Supplier&lt;? extends Collecting&lt;? super T, R&gt;&gt;) : R" num="199" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="findFirst() : Optional&lt;T&gt;" num="205" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="count() : int" num="209" count="0" type="method"/>
            <line num="210" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/chicory-stream/src/main/java/com/github/sviperll/stream/StreamIterator.java" name="StreamIterator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="32" loc="224" coveredmethods="0" methods="32" elements="78" classes="4" ncloc="161" statements="46" conditionals="0" coveredstatements="0"/>
            <class name="StreamIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="12" coveredmethods="0" methods="12" elements="29" statements="17" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="StreamIterator.HasNextValueState">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="11" elements="31" statements="20" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="StreamIterator.HasErrorState">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="11" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="StreamIterator.EmptyIterator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="7" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="createInstance(Streamable&lt;T&gt;) : CloseableIterator&lt;T&gt;" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fetched(T) : CloseableIterator&lt;T&gt;" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="closed() : CloseableIterator&lt;T&gt;" num="53" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="error(RuntimeException) : CloseableIterator&lt;T&gt;" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="StreamIterator(Drainer&lt;T&gt;)" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="setHasNextValueState(T) : void" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="setClosedState() : void" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="setErrorState(RuntimeException) : void" num="83" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="close() : void" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : T" num="97" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="HasNextValueState(T)" num="110" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : T" num="119" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fetched(T) : Void" num="125" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="closed() : Void" num="131" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="error(RuntimeException) : Void" num="137" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="146" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="close() : void" num="151" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fetched(T) : Void" num="155" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="closed() : Void" num="160" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="error(RuntimeException) : Void" num="166" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="HasErrorState(RuntimeException)" num="177" count="0" type="method"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="181" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : T" num="186" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="193" count="0" type="method"/>
            <line num="195" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="close() : void" num="198" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="205" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : T" num="210" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="215" count="0" type="method"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="close() : void" num="220" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/chicory-stream/src/main/java/com/github/sviperll/stream/Streamable.java" name="Streamable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="38" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Streamable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/chicory-stream/src/main/java/com/github/sviperll/stream/StreamableFile.java" name="StreamableFile.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="81" coveredmethods="0" methods="5" elements="25" classes="1" ncloc="46" statements="16" conditionals="4" coveredstatements="0"/>
            <class name="StreamableFile">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="5" elements="25" statements="16" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="StreamableFile(File)" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="file() : File" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="text(Charset) : StreamableTextFile" num="51" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bytes() : Stream&lt;Byte&gt;" num="55" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="forEach(SaturableConsuming&lt;? super Byte&gt;) : void" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/repo/chicory-stream/src/main/java/com/github/sviperll/stream/StreamableTextFile.java" name="StreamableTextFile.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="113" coveredmethods="0" methods="7" elements="45" classes="1" ncloc="76" statements="30" conditionals="8" coveredstatements="0"/>
            <class name="StreamableTextFile">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="7" elements="45" statements="30" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="StreamableTextFile(File,Charset)" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="file() : File" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="binary() : StreamableFile" num="56" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="lines() : Stream&lt;String&gt;" num="60" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="forEach(SaturableConsuming&lt;? super String&gt;) : void" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="68" type="cond"/>
            <line num="69" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="characters() : Stream&lt;Character&gt;" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="forEach(SaturableConsuming&lt;? super Character&gt;) : void" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="95" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
         </file>
      </package>
   </project>
   <testproject name="chicory-maven-parent 0.36-successor-SNAPSHOT (Aggregated)" timestamp="1594120556492">
      <metrics coveredelements="0" complexity="21" loc="161" methods="10" classes="2" statements="60" packages="1" coveredconditionals="0" coveredmethods="0" elements="90" ncloc="130" files="1" conditionals="20" coveredstatements="0"/>
      <package name="com.github.sviperll.stream">
         <metrics coveredelements="0" complexity="21" loc="161" methods="10" classes="2" statements="60" coveredconditionals="0" coveredmethods="0" elements="90" ncloc="130" files="1" conditionals="20" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/repo/chicory-stream/src/test/java/com/github/sviperll/stream/StreamTest.java" name="StreamTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="21" loc="161" coveredmethods="0" methods="10" elements="90" classes="2" ncloc="130" statements="60" conditionals="20" coveredstatements="0"/>
            <class name="StreamTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="21" coveredmethods="0" methods="10" elements="90" statements="60" conditionals="20" coveredstatements="0"/>
            </class>
            <class name="StreamTest.ExpectedException">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="StreamTest()" num="23" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="setUpClass() : void" num="26" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="tearDownClass() : void" num="30" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="setUp() : void" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="39" count="0" type="method"/>
            <line complexity="4" visibility="public" signature="testDrainingAll() : void" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="testDrainingPart() : void" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line complexity="5" visibility="public" signature="testDrainingWithException() : void" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="102" type="cond"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBasicPipeline() : void" num="121" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStringJoin() : void" num="146" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
         </file>
      </package>
   </testproject>
</coverage>