<?xml version="1.0" encoding="UTF-8"?>
<coverage generated="1594343493464" clover="4.4.1">
   <project name="JUnit 4.14-SNAPSHOT" timestamp="1594343483485">
      <metrics coveredelements="12416" complexity="5175" loc="44895" methods="4202" classes="1305" statements="9263" packages="62" coveredconditionals="1024" coveredmethods="3372" elements="14741" ncloc="30898" files="447" conditionals="1276" coveredstatements="8020"/>
      <package name="org.junit.runners">
         <metrics coveredelements="630" complexity="201" loc="2072" methods="130" classes="27" statements="412" coveredconditionals="98" coveredmethods="126" elements="648" ncloc="1160" files="11" conditionals="106" coveredstatements="406"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runners/AllTests.java" name="AllTests.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="27" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="7" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="AllTests">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="AllTests(Class&lt;?&gt;)" num="24" count="6" type="method"/>
            <line num="25" count="6" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java" name="BlockJUnit4ClassRunner.java">
            <metrics coveredelements="168" coveredconditionals="29" complexity="56" loc="473" coveredmethods="35" methods="35" elements="171" classes="2" ncloc="265" statements="104" conditionals="32" coveredstatements="104"/>
            <class name="BlockJUnit4ClassRunner">
               <metrics coveredelements="159" coveredconditionals="27" complexity="53" coveredmethods="34" methods="34" elements="160" statements="98" conditionals="28" coveredstatements="98"/>
            </class>
            <class name="BlockJUnit4ClassRunner.RuleCollector">
               <metrics coveredelements="9" coveredconditionals="2" complexity="3" coveredmethods="1" methods="1" elements="11" statements="6" conditionals="4" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="BlockJUnit4ClassRunner(Class&lt;?&gt;)" num="73" count="95" type="method"/>
            <line num="74" count="95" type="stmt"/>
            <line complexity="1" visibility="protected" signature="BlockJUnit4ClassRunner(TestClass)" num="83" count="1085" type="method"/>
            <line num="84" count="1085" type="stmt"/>
            <line complexity="2" visibility="protected" signature="runChild(FrameworkMethod,RunNotifier) : void" num="91" count="1493" type="method"/>
            <line num="93" count="1493" type="stmt"/>
            <line num="94" count="1493" type="stmt"/>
            <line falsecount="1478" truecount="15" num="94" type="cond"/>
            <line num="95" count="15" type="stmt"/>
            <line num="97" count="1478" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : void" num="98" count="1477" type="method"/>
            <line num="100" count="1477" type="stmt"/>
            <line num="103" count="1478" type="stmt"/>
            <line complexity="1" visibility="protected" signature="isIgnored(FrameworkMethod) : boolean" num="111" count="2053" type="method"/>
            <line num="113" count="2053" type="stmt"/>
            <line complexity="2" visibility="protected" signature="describeChild(FrameworkMethod) : Description" num="116" count="30952" type="method"/>
            <line num="118" count="30952" type="stmt"/>
            <line num="120" count="30952" type="stmt"/>
            <line falsecount="28142" truecount="2810" num="120" type="cond"/>
            <line num="121" count="2810" type="stmt"/>
            <line num="123" count="2810" type="stmt"/>
            <line num="126" count="30952" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getChildren() : List&lt;FrameworkMethod&gt;" num="129" count="1003" type="method"/>
            <line num="131" count="1003" type="stmt"/>
            <line complexity="1" visibility="protected" signature="computeTestMethods() : List&lt;FrameworkMethod&gt;" num="143" count="2153" type="method"/>
            <line num="144" count="2153" type="stmt"/>
            <line complexity="1" visibility="protected" signature="collectInitializationErrors(List&lt;Throwable&gt;) : void" num="147" count="1063" type="method"/>
            <line num="149" count="1063" type="stmt"/>
            <line num="151" count="1063" type="stmt"/>
            <line num="152" count="1063" type="stmt"/>
            <line num="153" count="1063" type="stmt"/>
            <line num="154" count="1063" type="stmt"/>
            <line num="155" count="1063" type="stmt"/>
            <line num="156" count="1063" type="stmt"/>
            <line complexity="2" visibility="private" signature="validatePublicConstructor(List&lt;Throwable&gt;) : void" num="159" count="1063" type="method"/>
            <line num="160" count="1063" type="stmt"/>
            <line falsecount="0" truecount="1063" num="160" type="cond"/>
            <line num="161" count="1063" type="stmt"/>
            <line complexity="2" visibility="protected" signature="validateNoNonStaticInnerClass(List&lt;Throwable&gt;) : void" num="165" count="1063" type="method"/>
            <line num="166" count="1063" type="stmt"/>
            <line falsecount="1062" truecount="1" num="166" type="cond"/>
            <line num="167" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="validateConstructor(List&lt;Throwable&gt;) : void" num="178" count="762" type="method"/>
            <line num="179" count="762" type="stmt"/>
            <line num="180" count="762" type="stmt"/>
            <line complexity="2" visibility="protected" signature="validateOnlyOneConstructor(List&lt;Throwable&gt;) : void" num="187" count="1063" type="method"/>
            <line num="188" count="1063" type="stmt"/>
            <line falsecount="1057" truecount="6" num="188" type="cond"/>
            <line num="189" count="6" type="stmt"/>
            <line num="190" count="6" type="stmt"/>
            <line complexity="4" visibility="protected" signature="validateZeroArgConstructor(List&lt;Throwable&gt;) : void" num="198" count="829" type="method"/>
            <line num="199" count="829" type="stmt"/>
            <line falsecount="828" truecount="1" num="199" type="cond"/>
            <line num="202" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="hasOneConstructor() : boolean" num="207" count="1891" type="method"/>
            <line num="208" count="1891" type="stmt"/>
            <line complexity="2" visibility="protected" signature="validateInstanceMethods(List&lt;Throwable&gt;) : void" num="217" count="1063" type="method"/>
            <line num="219" count="1063" type="stmt"/>
            <line num="220" count="1063" type="stmt"/>
            <line num="221" count="1063" type="stmt"/>
            <line num="223" count="1063" type="stmt"/>
            <line falsecount="1054" truecount="9" num="223" type="cond"/>
            <line num="224" count="9" type="stmt"/>
            <line complexity="1" visibility="protected" signature="validateFields(List&lt;Throwable&gt;) : void" num="228" count="1063" type="method"/>
            <line num="229" count="1063" type="stmt"/>
            <line complexity="1" visibility="private" signature="validateMethods(List&lt;Throwable&gt;) : void" num="232" count="1063" type="method"/>
            <line num="233" count="1063" type="stmt"/>
            <line complexity="1" visibility="protected" signature="validateTestMethods(List&lt;Throwable&gt;) : void" num="240" count="976" type="method"/>
            <line num="241" count="976" type="stmt"/>
            <line complexity="1" visibility="protected" signature="createTest() : Object" num="249" count="1274" type="method"/>
            <line num="250" count="1274" type="stmt"/>
            <line complexity="1" visibility="protected" signature="createTest(FrameworkMethod) : Object" num="259" count="1569" type="method"/>
            <line num="260" count="1569" type="stmt"/>
            <line complexity="1" visibility="protected" signature="testName(FrameworkMethod) : String" num="267" count="2580" type="method"/>
            <line num="268" count="2580" type="stmt"/>
            <line complexity="2" visibility="protected" signature="methodBlock(FrameworkMethod) : Statement" num="303" count="1571" type="method"/>
            <line num="304" count="1571" type="stmt"/>
            <line num="305" count="1571" type="stmt"/>
            <line num="306" count="1571" type="stmt"/>
            <line complexity="1" visibility="protected" signature="runReflectiveCall() : Object" num="307" count="1571" type="method"/>
            <line num="309" count="1571" type="stmt"/>
            <line num="313" count="6" type="stmt"/>
            <line num="316" count="1565" type="stmt"/>
            <line num="317" count="1565" type="stmt"/>
            <line num="318" count="1565" type="stmt"/>
            <line num="319" count="1565" type="stmt"/>
            <line num="320" count="1565" type="stmt"/>
            <line num="321" count="1565" type="stmt"/>
            <line num="322" count="1563" type="stmt"/>
            <line num="323" count="1563" type="stmt"/>
            <line complexity="1" visibility="protected" signature="methodInvoker(FrameworkMethod,Object) : Statement" num="333" count="1400" type="method"/>
            <line num="334" count="1400" type="stmt"/>
            <line complexity="2" visibility="protected" signature="possiblyExpectingExceptions(FrameworkMethod,Object,Statement) : Statement" num="343" count="1565" type="method"/>
            <line num="345" count="1565" type="stmt"/>
            <line num="346" count="1565" type="stmt"/>
            <line num="347" count="1565" type="stmt"/>
            <line falsecount="1500" truecount="65" num="347" type="cond"/>
            <line complexity="2" visibility="protected" signature="withPotentialTimeout(FrameworkMethod,Object,Statement) : Statement" num="356" count="1565" type="method"/>
            <line num="359" count="1565" type="stmt"/>
            <line num="360" count="1565" type="stmt"/>
            <line falsecount="8" truecount="1557" num="360" type="cond"/>
            <line num="361" count="1557" type="stmt"/>
            <line num="363" count="8" type="stmt"/>
            <line complexity="2" visibility="protected" signature="withBefores(FrameworkMethod,Object,Statement) : Statement" num="373" count="1565" type="method"/>
            <line num="375" count="1565" type="stmt"/>
            <line num="377" count="1565" type="stmt"/>
            <line falsecount="138" truecount="1427" num="377" type="cond"/>
            <line complexity="2" visibility="protected" signature="withAfters(FrameworkMethod,Object,Statement) : Statement" num="388" count="1565" type="method"/>
            <line num="390" count="1565" type="stmt"/>
            <line num="392" count="1565" type="stmt"/>
            <line falsecount="74" truecount="1491" num="392" type="cond"/>
            <line complexity="3" visibility="private" signature="withRules(FrameworkMethod,Object,Statement) : Statement" num="396" count="1565" type="method"/>
            <line num="397" count="1565" type="stmt"/>
            <line num="398" count="1565" type="stmt"/>
            <line num="399" count="1565" type="stmt"/>
            <line num="400" count="1565" type="stmt"/>
            <line num="401" count="1565" type="stmt"/>
            <line num="402" count="23" type="stmt"/>
            <line falsecount="2" truecount="21" num="402" type="cond"/>
            <line num="403" count="21" type="stmt"/>
            <line num="406" count="1565" type="stmt"/>
            <line num="407" count="259" type="stmt"/>
            <line num="410" count="1565" type="stmt"/>
            <line num="412" count="1565" type="stmt"/>
            <line complexity="1" visibility="protected" signature="rules(Object) : List&lt;MethodRule&gt;" num="420" count="1565" type="method"/>
            <line num="421" count="1565" type="stmt"/>
            <line num="422" count="1565" type="stmt"/>
            <line num="424" count="1565" type="stmt"/>
            <line num="426" count="1565" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getTestRules(Object) : List&lt;TestRule&gt;" num="434" count="1565" type="method"/>
            <line num="435" count="1565" type="stmt"/>
            <line num="436" count="1565" type="stmt"/>
            <line num="437" count="1565" type="stmt"/>
            <line num="438" count="1565" type="stmt"/>
            <line complexity="3" visibility="private" signature="getExpectedException(Test) : Class&lt;? extends Throwable&gt;" num="441" count="1565" type="method"/>
            <line num="442" count="1565" type="stmt"/>
            <line falsecount="65" truecount="1500" num="442" type="cond"/>
            <line num="443" count="1500" type="stmt"/>
            <line num="445" count="65" type="stmt"/>
            <line complexity="2" visibility="private" signature="getTimeout(Test) : long" num="449" count="1565" type="method"/>
            <line num="450" count="1565" type="stmt"/>
            <line falsecount="1434" truecount="131" num="450" type="cond"/>
            <line num="451" count="131" type="stmt"/>
            <line num="453" count="1434" type="stmt"/>
            <line complexity="3" visibility="public" signature="accept(FrameworkMember&lt;?&gt;,T) : void" num="462" count="280" type="method"/>
            <line num="463" count="280" type="stmt"/>
            <line num="464" count="280" type="stmt"/>
            <line falsecount="0" truecount="280" num="464" type="cond"/>
            <line num="465" count="280" type="stmt"/>
            <line num="466" count="280" type="stmt"/>
            <line falsecount="0" truecount="280" num="466" type="cond"/>
            <line num="467" count="280" type="stmt"/>
            <line num="470" count="280" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runners/JUnit4.java" name="JUnit4.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="25" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="8" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="JUnit4">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="JUnit4(Class&lt;?&gt;)" num="22" count="708" type="method"/>
            <line num="23" count="708" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runners/MethodSorters.java" name="MethodSorters.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="41" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="16" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="MethodSorters">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="private" signature="MethodSorters(Comparator&lt;Method&gt;)" num="34" count="3" type="method"/>
            <line num="35" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getComparator() : Comparator&lt;Method&gt;" num="38" count="14" type="method"/>
            <line num="39" count="14" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runners/Parameterized.java" name="Parameterized.java">
            <metrics coveredelements="119" coveredconditionals="23" complexity="34" loc="504" coveredmethods="18" methods="18" elements="121" classes="8" ncloc="232" statements="79" conditionals="24" coveredstatements="78"/>
            <class name="Parameterized">
               <metrics coveredelements="24" coveredconditionals="5" complexity="8" coveredmethods="4" methods="4" elements="25" statements="15" conditionals="6" coveredstatements="15"/>
            </class>
            <class name="Parameterized.Parameters">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Parameterized.Parameter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Parameterized.UseParametersRunnerFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Parameterized.BeforeParam">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Parameterized.AfterParam">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Parameterized.AssumptionViolationRunner">
               <metrics coveredelements="7" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="Parameterized.RunnersFactory">
               <metrics coveredelements="88" coveredconditionals="18" complexity="23" coveredmethods="11" methods="11" elements="89" statements="60" conditionals="18" coveredstatements="59"/>
            </class>
            <line complexity="1" visibility="public" signature="Parameterized(Class&lt;?&gt;)" num="302" count="37" type="method"/>
            <line num="303" count="37" type="stmt"/>
            <line complexity="1" visibility="private" signature="Parameterized(Class&lt;?&gt;,RunnersFactory)" num="306" count="39" type="method"/>
            <line num="307" count="39" type="stmt"/>
            <line num="308" count="39" type="stmt"/>
            <line complexity="2" visibility="private" signature="validateBeforeParamAndAfterParamMethods(Integer) : void" num="311" count="39" type="method"/>
            <line num="313" count="39" type="stmt"/>
            <line num="314" count="39" type="stmt"/>
            <line num="315" count="39" type="stmt"/>
            <line num="316" count="39" type="stmt"/>
            <line falsecount="37" truecount="2" num="316" type="cond"/>
            <line num="317" count="2" type="stmt"/>
            <line complexity="4" visibility="private" signature="validatePublicStaticVoidMethods(Class&lt;? extends Annotation&gt;,Integer,List&lt;Throwable&gt;) : void" num="321" count="78" type="method"/>
            <line num="324" count="78" type="stmt"/>
            <line num="325" count="78" type="stmt"/>
            <line num="326" count="12" type="stmt"/>
            <line num="327" count="12" type="stmt"/>
            <line falsecount="0" truecount="12" num="327" type="cond"/>
            <line num="328" count="12" type="stmt"/>
            <line num="329" count="12" type="stmt"/>
            <line falsecount="10" truecount="2" num="329" type="cond"/>
            <line num="330" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="AssumptionViolationRunner(TestClass,String,AssumptionViolatedException)" num="341" count="1" type="method"/>
            <line num="343" count="1" type="stmt"/>
            <line num="346" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescription() : Description" num="349" count="5" type="method"/>
            <line num="351" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(RunNotifier) : void" num="354" count="1" type="method"/>
            <line num="356" count="1" type="stmt"/>
            <line complexity="3" visibility="private" signature="RunnersFactory(Class&lt;?&gt;)" num="369" count="47" type="method"/>
            <line num="370" count="47" type="stmt"/>
            <line num="371" count="47" type="stmt"/>
            <line num="372" count="45" type="stmt"/>
            <line num="373" count="45" type="stmt"/>
            <line num="374" count="45" type="stmt"/>
            <line num="375" count="45" type="stmt"/>
            <line num="377" count="1" type="stmt"/>
            <line num="378" count="1" type="stmt"/>
            <line num="381" count="44" type="stmt"/>
            <line num="382" count="44" type="stmt"/>
            <line num="383" count="44" type="stmt"/>
            <line falsecount="43" truecount="1" num="384" type="cond"/>
            <line complexity="2" visibility="private" signature="createRunners() : List&lt;Runner&gt;" num="387" count="44" type="method"/>
            <line num="388" count="44" type="stmt"/>
            <line falsecount="43" truecount="1" num="388" type="cond"/>
            <line num="389" count="1" type="stmt"/>
            <line num="391" count="43" type="stmt"/>
            <line num="392" count="43" type="stmt"/>
            <line complexity="2" visibility="private" signature="getParametersRunnerFactory() : ParametersRunnerFactory" num="397" count="43" type="method"/>
            <line num="399" count="43" type="stmt"/>
            <line num="401" count="43" type="stmt"/>
            <line falsecount="2" truecount="41" num="401" type="cond"/>
            <line num="402" count="41" type="stmt"/>
            <line num="404" count="2" type="stmt"/>
            <line num="406" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="createTestWithNotNormalizedParameters(String,int,Object) : TestWithParameters" num="410" count="214" type="method"/>
            <line num="412" count="214" type="stmt"/>
            <line num="413" count="214" type="stmt"/>
            <line complexity="2" visibility="private" signature="normalizeParameters(Object) : Object[]" num="416" count="257" type="method"/>
            <line num="417" count="257" type="stmt"/>
            <line falsecount="46" truecount="211" num="417" type="cond"/>
            <line complexity="5" visibility="private" signature="allParameters(TestClass,FrameworkMethod) : List&lt;Object&gt;" num="421" count="45" type="method"/>
            <line num="424" count="45" type="stmt"/>
            <line num="425" count="44" type="stmt"/>
            <line falsecount="9" truecount="35" num="425" type="cond"/>
            <line num="426" count="35" type="stmt"/>
            <line num="427" count="9" type="stmt"/>
            <line falsecount="8" truecount="1" num="427" type="cond"/>
            <line num="428" count="1" type="stmt"/>
            <line num="429" count="8" type="stmt"/>
            <line falsecount="7" truecount="1" num="429" type="cond"/>
            <line num="430" count="1" type="stmt"/>
            <line num="431" count="1" type="stmt"/>
            <line num="432" count="2" type="stmt"/>
            <line num="434" count="1" type="stmt"/>
            <line num="435" count="7" type="stmt"/>
            <line falsecount="1" truecount="6" num="435" type="cond"/>
            <line num="436" count="6" type="stmt"/>
            <line num="438" count="1" type="stmt"/>
            <line complexity="3" visibility="private" signature="getParametersMethod(TestClass) : FrameworkMethod" num="442" count="47" type="method"/>
            <line num="443" count="47" type="stmt"/>
            <line num="445" count="47" type="stmt"/>
            <line num="446" count="46" type="stmt"/>
            <line falsecount="1" truecount="45" num="446" type="cond"/>
            <line num="447" count="45" type="stmt"/>
            <line num="451" count="2" type="stmt"/>
            <line complexity="2" visibility="private" signature="createRunnersForParameters(Iterable&lt;Object&gt;,String,ParametersRunnerFactory) : List&lt;Runner&gt;" num="455" count="43" type="method"/>
            <line num="458" count="43" type="stmt"/>
            <line num="459" count="43" type="stmt"/>
            <line num="461" count="43" type="stmt"/>
            <line num="462" count="43" type="stmt"/>
            <line num="463" count="214" type="stmt"/>
            <line num="466" count="38" type="stmt"/>
            <line num="468" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="createTestsForParameters(Iterable&lt;Object&gt;,String) : List&lt;TestWithParameters&gt;" num="472" count="43" type="method"/>
            <line num="475" count="43" type="stmt"/>
            <line num="476" count="43" type="stmt"/>
            <line num="477" count="43" type="stmt"/>
            <line num="478" count="214" type="stmt"/>
            <line num="481" count="43" type="stmt"/>
            <line complexity="1" visibility="private" signature="parametersMethodReturnedWrongType(TestClass,FrameworkMethod) : Exception" num="484" count="1" type="method"/>
            <line num="486" count="1" type="stmt"/>
            <line num="487" count="1" type="stmt"/>
            <line num="488" count="1" type="stmt"/>
            <line num="491" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="createTestWithParameters(TestClass,String,int,Object[]) : TestWithParameters" num="494" count="214" type="method"/>
            <line num="497" count="214" type="stmt"/>
            <line num="499" count="214" type="stmt"/>
            <line num="500" count="214" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runners/ParentRunner.java" name="ParentRunner.java">
            <metrics coveredelements="217" coveredconditionals="31" complexity="64" loc="582" coveredmethods="40" methods="40" elements="220" classes="2" ncloc="357" statements="146" conditionals="34" coveredstatements="146"/>
            <class name="ParentRunner">
               <metrics coveredelements="207" coveredconditionals="30" complexity="61" coveredmethods="38" methods="38" elements="209" statements="139" conditionals="32" coveredstatements="139"/>
            </class>
            <class name="ParentRunner.ClassRuleCollector">
               <metrics coveredelements="10" coveredconditionals="1" complexity="3" coveredmethods="2" methods="2" elements="11" statements="7" conditionals="2" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="schedule(Runnable) : void" num="78" count="2197" type="method"/>
            <line num="79" count="2197" type="stmt"/>
            <line complexity="1" visibility="public" signature="finished() : void" num="82" count="1076" type="method"/>
            <line complexity="1" visibility="protected" signature="ParentRunner(Class&lt;?&gt;)" num="90" count="607" type="method"/>
            <line num="91" count="607" type="stmt"/>
            <line num="92" count="607" type="stmt"/>
            <line complexity="1" visibility="protected" signature="ParentRunner(TestClass)" num="100" count="1111" type="method"/>
            <line num="101" count="1111" type="stmt"/>
            <line num="102" count="1111" type="stmt"/>
            <line complexity="1" visibility="protected" signature="createTestClass(Class&lt;?&gt;) : TestClass" num="109" count="607" type="method"/>
            <line num="111" count="607" type="stmt"/>
            <line complexity="1" visibility="protected" signature="collectInitializationErrors(List&lt;Throwable&gt;) : void" num="147" count="1552" type="method"/>
            <line num="148" count="1552" type="stmt"/>
            <line num="149" count="1552" type="stmt"/>
            <line num="150" count="1552" type="stmt"/>
            <line num="151" count="1552" type="stmt"/>
            <line complexity="2" visibility="private" signature="applyValidators(List&lt;Throwable&gt;) : void" num="154" count="1552" type="method"/>
            <line num="155" count="1552" type="stmt"/>
            <line falsecount="312" truecount="1240" num="155" type="cond"/>
            <line num="156" count="1240" type="stmt"/>
            <line num="157" count="1240" type="stmt"/>
            <line complexity="1" visibility="protected" signature="validatePublicVoidNoArgMethods(Class&lt;? extends Annotation&gt;,boolean,List&lt;Throwable&gt;) : void" num="173" count="6206" type="method"/>
            <line num="175" count="6206" type="stmt"/>
            <line num="177" count="6206" type="stmt"/>
            <line num="178" count="2795" type="stmt"/>
            <line complexity="1" visibility="private" signature="validateClassRules(List&lt;Throwable&gt;) : void" num="182" count="1552" type="method"/>
            <line num="183" count="1552" type="stmt"/>
            <line num="184" count="1552" type="stmt"/>
            <line complexity="2" visibility="protected" signature="classBlock(RunNotifier) : Statement" num="212" count="972" type="method"/>
            <line num="213" count="972" type="stmt"/>
            <line num="214" count="972" type="stmt"/>
            <line falsecount="7" truecount="965" num="214" type="cond"/>
            <line num="215" count="965" type="stmt"/>
            <line num="216" count="965" type="stmt"/>
            <line num="217" count="965" type="stmt"/>
            <line num="218" count="964" type="stmt"/>
            <line num="220" count="971" type="stmt"/>
            <line complexity="2" visibility="private" signature="areAllChildrenIgnored() : boolean" num="223" count="972" type="method"/>
            <line num="224" count="972" type="stmt"/>
            <line num="225" count="972" type="stmt"/>
            <line falsecount="7" truecount="965" num="225" type="cond"/>
            <line num="226" count="965" type="stmt"/>
            <line num="229" count="7" type="stmt"/>
            <line complexity="2" visibility="protected" signature="withBeforeClasses(Statement) : Statement" num="237" count="965" type="method"/>
            <line num="238" count="965" type="stmt"/>
            <line num="240" count="965" type="stmt"/>
            <line falsecount="24" truecount="941" num="240" type="cond"/>
            <line complexity="2" visibility="protected" signature="withAfterClasses(Statement) : Statement" num="251" count="965" type="method"/>
            <line num="252" count="965" type="stmt"/>
            <line num="254" count="965" type="stmt"/>
            <line falsecount="14" truecount="951" num="254" type="cond"/>
            <line complexity="2" visibility="private" signature="withClassRules(Statement) : Statement" num="267" count="965" type="method"/>
            <line num="268" count="965" type="stmt"/>
            <line num="269" count="965" type="stmt"/>
            <line falsecount="16" truecount="949" num="269" type="cond"/>
            <line complexity="1" visibility="protected" signature="classRules() : List&lt;TestRule&gt;" num="277" count="965" type="method"/>
            <line num="278" count="965" type="stmt"/>
            <line num="279" count="965" type="stmt"/>
            <line num="280" count="965" type="stmt"/>
            <line num="281" count="965" type="stmt"/>
            <line complexity="1" visibility="protected" signature="childrenInvoker(RunNotifier) : Statement" num="289" count="1085" type="method"/>
            <line num="290" count="1085" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : void" num="291" count="1079" type="method"/>
            <line num="293" count="1079" type="stmt"/>
            <line complexity="1" visibility="protected" signature="withInterruptIsolation(Statement) : Statement" num="301" count="2527" type="method"/>
            <line num="302" count="2527" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : void" num="303" count="2527" type="method"/>
            <line num="305" count="2527" type="stmt"/>
            <line num="306" count="2527" type="stmt"/>
            <line num="308" count="2527" type="stmt"/>
            <line complexity="1" visibility="protected" signature="isIgnored(T) : boolean" num="321" count="412" type="method"/>
            <line num="322" count="412" type="stmt"/>
            <line complexity="1" visibility="private" signature="runChildren(RunNotifier) : void" num="325" count="1079" type="method"/>
            <line num="326" count="1079" type="stmt"/>
            <line num="327" count="1079" type="stmt"/>
            <line num="328" count="1079" type="stmt"/>
            <line num="329" count="2203" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="330" count="2203" type="method"/>
            <line num="331" count="2203" type="stmt"/>
            <line num="336" count="1079" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getName() : String" num="343" count="7698" type="method"/>
            <line num="344" count="7698" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTestClass() : TestClass" num="354" count="48638" type="method"/>
            <line num="355" count="48637" type="stmt"/>
            <line complexity="3" visibility="protected" signature="runLeaf(Statement,Description,RunNotifier) : void" num="361" count="1478" type="method"/>
            <line num="363" count="1478" type="stmt"/>
            <line num="364" count="1478" type="stmt"/>
            <line num="365" count="1477" type="stmt"/>
            <line num="366" count="1477" type="stmt"/>
            <line num="368" count="25" type="stmt"/>
            <line num="370" count="155" type="stmt"/>
            <line num="372" count="1477" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getRunnerAnnotations() : Annotation[]" num="380" count="10288" type="method"/>
            <line num="381" count="10288" type="stmt"/>
            <line complexity="3" visibility="public" signature="getDescription() : Description" num="388" count="10287" type="method"/>
            <line num="390" count="10287" type="stmt"/>
            <line num="391" count="10287" type="stmt"/>
            <line num="394" count="10287" type="stmt"/>
            <line falsecount="7663" truecount="2624" num="394" type="cond"/>
            <line num="395" count="2624" type="stmt"/>
            <line num="397" count="7663" type="stmt"/>
            <line num="400" count="10287" type="stmt"/>
            <line num="401" count="33226" type="stmt"/>
            <line num="403" count="10287" type="stmt"/>
            <line complexity="4" visibility="public" signature="run(RunNotifier) : void" num="406" count="1085" type="method"/>
            <line num="408" count="1085" type="stmt"/>
            <line num="410" count="1085" type="stmt"/>
            <line num="411" count="1085" type="stmt"/>
            <line num="412" count="1085" type="stmt"/>
            <line num="413" count="1084" type="stmt"/>
            <line num="415" count="2" type="stmt"/>
            <line num="417" count="1" type="stmt"/>
            <line num="419" count="6" type="stmt"/>
            <line num="421" count="1085" type="stmt"/>
            <line complexity="5" visibility="public" signature="filter(Filter) : void" num="429" count="419" type="method"/>
            <line num="430" count="419" type="stmt"/>
            <line num="431" count="419" type="stmt"/>
            <line num="432" count="419" type="stmt"/>
            <line num="433" count="419" type="stmt"/>
            <line falsecount="419" truecount="1482" num="433" type="cond"/>
            <line num="434" count="1482" type="stmt"/>
            <line num="435" count="1482" type="stmt"/>
            <line falsecount="115" truecount="1367" num="435" type="cond"/>
            <line num="436" count="1367" type="stmt"/>
            <line num="437" count="1367" type="stmt"/>
            <line num="439" count="6" type="stmt"/>
            <line num="442" count="115" type="stmt"/>
            <line num="445" count="419" type="stmt"/>
            <line num="446" count="419" type="stmt"/>
            <line falsecount="405" truecount="14" num="446" type="cond"/>
            <line num="447" count="14" type="stmt"/>
            <line num="450" count="419" type="stmt"/>
            <line complexity="2" visibility="public" signature="sort(Sorter) : void" num="454" count="17" type="method"/>
            <line num="455" count="17" type="stmt"/>
            <line falsecount="16" truecount="1" num="455" type="cond"/>
            <line num="456" count="1" type="stmt"/>
            <line num="459" count="16" type="stmt"/>
            <line num="460" count="16" type="stmt"/>
            <line num="461" count="16" type="stmt"/>
            <line num="462" count="46" type="stmt"/>
            <line num="464" count="16" type="stmt"/>
            <line num="465" count="16" type="stmt"/>
            <line num="466" count="16" type="stmt"/>
            <line num="468" count="16" type="stmt"/>
            <line complexity="3" visibility="public" signature="order(Orderer) : void" num="477" count="37" type="method"/>
            <line num="478" count="37" type="stmt"/>
            <line falsecount="36" truecount="1" num="478" type="cond"/>
            <line num="479" count="1" type="stmt"/>
            <line num="482" count="36" type="stmt"/>
            <line num="483" count="36" type="stmt"/>
            <line num="484" count="36" type="stmt"/>
            <line num="487" count="36" type="stmt"/>
            <line num="489" count="36" type="stmt"/>
            <line num="490" count="102" type="stmt"/>
            <line num="491" count="102" type="stmt"/>
            <line num="492" count="102" type="stmt"/>
            <line falsecount="0" truecount="102" num="492" type="cond"/>
            <line num="493" count="102" type="stmt"/>
            <line num="494" count="102" type="stmt"/>
            <line num="496" count="102" type="stmt"/>
            <line num="497" count="102" type="stmt"/>
            <line num="500" count="36" type="stmt"/>
            <line num="502" count="36" type="stmt"/>
            <line num="503" count="36" type="stmt"/>
            <line num="504" count="102" type="stmt"/>
            <line num="506" count="36" type="stmt"/>
            <line num="508" count="36" type="stmt"/>
            <line complexity="1" visibility="private" signature="shouldNotReorder() : boolean" num="516" count="54" type="method"/>
            <line num="518" count="54" type="stmt"/>
            <line complexity="2" visibility="private" signature="validate() : void" num="521" count="1718" type="method"/>
            <line num="522" count="1718" type="stmt"/>
            <line num="523" count="1718" type="stmt"/>
            <line num="524" count="1718" type="stmt"/>
            <line falsecount="1669" truecount="49" num="524" type="cond"/>
            <line num="525" count="49" type="stmt"/>
            <line complexity="3" visibility="private" signature="getFilteredChildren() : List&lt;T&gt;" num="529" count="12825" type="method"/>
            <line num="530" count="12825" type="stmt"/>
            <line falsecount="11335" truecount="1490" num="530" type="cond"/>
            <line num="531" count="1490" type="stmt"/>
            <line num="532" count="1490" type="stmt"/>
            <line num="533" count="1490" type="stmt"/>
            <line falsecount="0" truecount="1490" num="533" type="cond"/>
            <line num="534" count="1490" type="stmt"/>
            <line num="538" count="1490" type="stmt"/>
            <line num="541" count="12825" type="stmt"/>
            <line complexity="1" visibility="private" signature="shouldRun(Filter,T) : boolean" num="544" count="1482" type="method"/>
            <line num="545" count="1482" type="stmt"/>
            <line complexity="1" visibility="private" signature="comparator(Sorter) : Comparator&lt;? super T&gt;" num="548" count="16" type="method"/>
            <line num="549" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="compare(T,T) : int" num="550" count="30" type="method"/>
            <line num="551" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="setScheduler(RunnerScheduler) : void" num="560" count="3" type="method"/>
            <line num="561" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="accept(FrameworkMember&lt;?&gt;,TestRule) : void" num="567" count="18" type="method"/>
            <line num="568" count="18" type="stmt"/>
            <line num="569" count="18" type="stmt"/>
            <line falsecount="0" truecount="18" num="570" type="cond"/>
            <line complexity="1" visibility="public" signature="getOrderedRules() : List&lt;TestRule&gt;" num="573" count="965" type="method"/>
            <line num="574" count="965" type="stmt"/>
            <line num="575" count="965" type="stmt"/>
            <line num="576" count="965" type="stmt"/>
            <line num="577" count="18" type="stmt"/>
            <line num="579" count="965" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runners/RuleContainer.java" name="RuleContainer.java">
            <metrics coveredelements="48" coveredconditionals="11" complexity="16" loc="113" coveredmethods="9" methods="9" elements="49" classes="2" ncloc="81" statements="28" conditionals="12" coveredstatements="28"/>
            <class name="RuleContainer">
               <metrics coveredelements="42" coveredconditionals="9" complexity="14" coveredmethods="8" methods="8" elements="43" statements="25" conditionals="10" coveredstatements="25"/>
            </class>
            <class name="RuleContainer.RuleEntry">
               <metrics coveredelements="6" coveredconditionals="2" complexity="2" coveredmethods="1" methods="1" elements="6" statements="3" conditionals="2" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="setOrder(Object,int) : void" num="29" count="284" type="method"/>
            <line num="30" count="284" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(MethodRule) : void" num="33" count="25" type="method"/>
            <line num="34" count="25" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(TestRule) : void" num="37" count="264" type="method"/>
            <line num="38" count="264" type="stmt"/>
            <line complexity="2" visibility="public" signature="compare(RuleEntry,RuleEntry) : int" num="42" count="43" type="method"/>
            <line num="43" count="43" type="stmt"/>
            <line num="44" count="43" type="stmt"/>
            <line falsecount="33" truecount="10" num="44" type="cond"/>
            <line complexity="3" visibility="private" signature="compareInt(int,int) : int" num="47" count="43" type="method"/>
            <line num="48" count="43" type="stmt"/>
            <line falsecount="43" truecount="0" num="48" type="cond"/>
            <line falsecount="10" truecount="33" num="48" type="cond"/>
            <line complexity="1" visibility="private" signature="getSortedEntries() : List&lt;RuleEntry&gt;" num="55" count="254" type="method"/>
            <line num="56" count="254" type="stmt"/>
            <line num="58" count="254" type="stmt"/>
            <line num="59" count="27" type="stmt"/>
            <line num="61" count="254" type="stmt"/>
            <line num="62" count="267" type="stmt"/>
            <line num="64" count="254" type="stmt"/>
            <line num="65" count="254" type="stmt"/>
            <line complexity="4" visibility="public" signature="apply(FrameworkMethod,Description,Object,Statement) : Statement" num="71" count="1565" type="method"/>
            <line num="73" count="1565" type="stmt"/>
            <line falsecount="248" truecount="1317" num="73" type="cond"/>
            <line num="74" count="1317" type="stmt"/>
            <line num="76" count="248" type="stmt"/>
            <line num="77" count="248" type="stmt"/>
            <line num="78" count="280" type="stmt"/>
            <line falsecount="21" truecount="259" num="78" type="cond"/>
            <line num="79" count="259" type="stmt"/>
            <line num="81" count="21" type="stmt"/>
            <line num="84" count="246" type="stmt"/>
            <line complexity="1" visibility="package" signature="getSortedRules() : List&lt;Object&gt;" num="91" count="6" type="method"/>
            <line num="92" count="6" type="stmt"/>
            <line num="93" count="6" type="stmt"/>
            <line num="94" count="14" type="stmt"/>
            <line num="96" count="6" type="stmt"/>
            <line complexity="2" visibility="package" signature="RuleEntry(Object,int,Integer)" num="107" count="312" type="method"/>
            <line num="108" count="312" type="stmt"/>
            <line num="109" count="312" type="stmt"/>
            <line num="110" count="312" type="stmt"/>
            <line falsecount="12" truecount="300" num="110" type="cond"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runners/Suite.java" name="Suite.java">
            <metrics coveredelements="24" coveredconditionals="2" complexity="12" loc="130" coveredmethods="9" methods="10" elements="28" classes="2" ncloc="65" statements="16" conditionals="2" coveredstatements="13"/>
            <class name="Suite">
               <metrics coveredelements="24" coveredconditionals="2" complexity="12" coveredmethods="9" methods="10" elements="28" statements="16" conditionals="2" coveredstatements="13"/>
            </class>
            <class name="Suite.SuiteClasses">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="emptySuite() : Runner" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getAnnotatedClasses(Class&lt;?&gt;) : Class&lt;?&gt;[]" num="53" count="123" type="method"/>
            <line num="54" count="123" type="stmt"/>
            <line num="55" count="123" type="stmt"/>
            <line falsecount="121" truecount="2" num="55" type="cond"/>
            <line num="56" count="2" type="stmt"/>
            <line num="58" count="121" type="stmt"/>
            <line complexity="1" visibility="public" signature="Suite(Class&lt;?&gt;,RunnerBuilder)" num="69" count="116" type="method"/>
            <line num="70" count="116" type="stmt"/>
            <line complexity="1" visibility="public" signature="Suite(RunnerBuilder,Class&lt;?&gt;[])" num="80" count="291" type="method"/>
            <line num="81" count="291" type="stmt"/>
            <line complexity="1" visibility="protected" signature="Suite(Class&lt;?&gt;,Class&lt;?&gt;[])" num="90" count="1" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="Suite(RunnerBuilder,Class&lt;?&gt;,Class&lt;?&gt;[])" num="101" count="138" type="method"/>
            <line num="102" count="138" type="stmt"/>
            <line complexity="1" visibility="protected" signature="Suite(Class&lt;?&gt;,List&lt;Runner&gt;)" num="111" count="489" type="method"/>
            <line num="112" count="489" type="stmt"/>
            <line num="113" count="489" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getChildren() : List&lt;Runner&gt;" num="116" count="487" type="method"/>
            <line num="118" count="487" type="stmt"/>
            <line complexity="1" visibility="protected" signature="describeChild(Runner) : Description" num="121" count="6976" type="method"/>
            <line num="123" count="6976" type="stmt"/>
            <line complexity="1" visibility="protected" signature="runChild(Runner,RunNotifier) : void" num="126" count="710" type="method"/>
            <line num="128" count="710" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/runners/AllRunnersTests.java" name="AllRunnersTests.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="17" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="15" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AllRunnersTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/runners/CustomBlockJUnit4ClassRunnerTest.java" name="CustomBlockJUnit4ClassRunnerTest.java">
            <metrics coveredelements="23" coveredconditionals="2" complexity="9" loc="90" coveredmethods="7" methods="8" elements="24" classes="4" ncloc="56" statements="14" conditionals="2" coveredstatements="14"/>
            <class name="CustomBlockJUnit4ClassRunnerTest">
               <metrics coveredelements="8" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="8" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <class name="CustomBlockJUnit4ClassRunnerTest.CustomBlockJUnit4ClassRunnerTestCase">
               <metrics coveredelements="1" complexity="2" methods="2" testruns="1" statements="0" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="1"/>
            </class>
            <class name="CustomBlockJUnit4ClassRunnerTest.CustomBlockJUnit4ClassRunner">
               <metrics coveredelements="8" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="8" statements="4" conditionals="2" coveredstatements="4"/>
            </class>
            <class name="CustomBlockJUnit4ClassRunnerTest.TrackingRunListener">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="exceptionsFromMethodBlockMustNotResultInUnrootedTests() : void" num="25" count="1" type="method"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldPass() : void" num="39" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="throwException() : void" num="40" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="CustomBlockJUnit4ClassRunner(Class&lt;?&gt;)" num="50" count="1" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="2" visibility="protected" signature="methodBlock(FrameworkMethod) : Statement" num="54" count="2" type="method"/>
            <line num="56" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="56" type="cond"/>
            <line num="57" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStarted(Description) : void" num="74" count="2" type="method"/>
            <line num="76" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFailure(Failure) : void" num="79" count="1" type="method"/>
            <line num="81" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFinished(Description) : void" num="84" count="2" type="method"/>
            <line num="86" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/runners/RuleContainerTest.java" name="RuleContainerTest.java">
            <metrics coveredelements="23" coveredconditionals="0" complexity="6" loc="70" coveredmethods="4" methods="6" elements="27" classes="3" ncloc="58" statements="21" conditionals="0" coveredstatements="19"/>
            <class name="RuleContainerTest">
               <metrics coveredelements="23" complexity="4" methods="4" testruns="4" statements="19" coveredconditionals="0" coveredmethods="4" elements="23" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="19" testpasses="4"/>
            </class>
            <class name="RuleContainerTest.Rule">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RuleContainerTest.MRule">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="methodRulesOnly() : void" num="17" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="19" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRuleAroundMethodRule() : void" num="26" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ordering1() : void" num="33" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ordering2() : void" num="41" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Statement,Description) : Statement" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Statement,FrameworkMethod,Object) : Statement" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.junit.experimental.theories">
         <metrics coveredelements="226" complexity="80" loc="779" methods="49" classes="11" statements="138" coveredconditionals="46" coveredmethods="46" elements="235" ncloc="427" files="9" conditionals="48" coveredstatements="134"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/experimental/theories/DataPoint.java" name="DataPoint.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="56" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="DataPoint">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/experimental/theories/DataPoints.java" name="DataPoints.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="64" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="DataPoints">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/experimental/theories/FromDataPoints.java" name="FromDataPoints.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="54" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FromDataPoints">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/experimental/theories/ParameterSignature.java" name="ParameterSignature.java">
            <metrics coveredelements="73" coveredconditionals="13" complexity="23" loc="134" coveredmethods="16" methods="16" elements="75" classes="1" ncloc="109" statements="45" conditionals="14" coveredstatements="44"/>
            <class name="ParameterSignature">
               <metrics coveredelements="73" coveredconditionals="13" complexity="23" coveredmethods="16" methods="16" elements="75" statements="45" conditionals="14" coveredstatements="44"/>
            </class>
            <line complexity="1" visibility="private" signature="buildConvertableTypesMap() : Map&lt;Class&lt;?&gt;, Class&lt;?&gt;&gt;" num="17" count="1" type="method"/>
            <line num="18" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="putSymmetrically(Map&lt;T, T&gt;,T,T) : void" num="32" count="8" type="method"/>
            <line num="33" count="8" type="stmt"/>
            <line num="34" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="signatures(Method) : ArrayList&lt;ParameterSignature&gt;" num="37" count="228" type="method"/>
            <line num="38" count="228" type="stmt"/>
            <line complexity="1" visibility="public" signature="signatures(Constructor&lt;?&gt;) : List&lt;ParameterSignature&gt;" num="42" count="420" type="method"/>
            <line num="43" count="420" type="stmt"/>
            <line complexity="2" visibility="private" signature="signatures(Class&lt;?&gt;[],Annotation[][]) : ArrayList&lt;ParameterSignature&gt;" num="47" count="648" type="method"/>
            <line num="49" count="648" type="stmt"/>
            <line num="50" count="648" type="stmt"/>
            <line falsecount="648" truecount="252" num="50" type="cond"/>
            <line num="51" count="252" type="stmt"/>
            <line num="54" count="648" type="stmt"/>
            <line complexity="1" visibility="private" signature="ParameterSignature(Class&lt;?&gt;,Annotation[])" num="61" count="252" type="method"/>
            <line num="62" count="252" type="stmt"/>
            <line num="63" count="252" type="stmt"/>
            <line complexity="2" visibility="public" signature="canAcceptValue(Object) : boolean" num="66" count="392" type="method"/>
            <line num="67" count="392" type="stmt"/>
            <line falsecount="371" truecount="21" num="67" type="cond"/>
            <line complexity="1" visibility="public" signature="canAcceptType(Class&lt;?&gt;) : boolean" num="70" count="390" type="method"/>
            <line num="71" count="390" type="stmt"/>
            <line complexity="1" visibility="public" signature="canPotentiallyAcceptType(Class&lt;?&gt;) : boolean" num="75" count="11" type="method"/>
            <line num="76" count="11" type="stmt"/>
            <line complexity="2" visibility="private" signature="isAssignableViaTypeConversion(Class&lt;?&gt;,Class&lt;?&gt;) : boolean" num="81" count="215" type="method"/>
            <line num="82" count="215" type="stmt"/>
            <line falsecount="140" truecount="75" num="82" type="cond"/>
            <line num="83" count="75" type="stmt"/>
            <line num="84" count="75" type="stmt"/>
            <line num="86" count="140" type="stmt"/>
            <line complexity="1" visibility="public" signature="getType() : Class&lt;?&gt;" num="90" count="8" type="method"/>
            <line num="91" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAnnotations() : List&lt;Annotation&gt;" num="94" count="32" type="method"/>
            <line num="95" count="32" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasAnnotation(Class&lt;? extends Annotation&gt;) : boolean" num="98" count="1" type="method"/>
            <line num="99" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="findDeepAnnotation(Class&lt;T&gt;) : T" num="102" count="256" type="method"/>
            <line num="103" count="256" type="stmt"/>
            <line num="104" count="256" type="stmt"/>
            <line complexity="4" visibility="private" signature="findDeepAnnotation(Annotation[],Class&lt;T&gt;,int) : T" num="107" count="277" type="method"/>
            <line num="109" count="277" type="stmt"/>
            <line falsecount="265" truecount="12" num="109" type="cond"/>
            <line num="110" count="12" type="stmt"/>
            <line num="112" count="265" type="stmt"/>
            <line num="113" count="28" type="stmt"/>
            <line falsecount="21" truecount="7" num="113" type="cond"/>
            <line num="114" count="7" type="stmt"/>
            <line num="116" count="21" type="stmt"/>
            <line num="118" count="21" type="stmt"/>
            <line falsecount="18" truecount="3" num="118" type="cond"/>
            <line num="119" count="3" type="stmt"/>
            <line num="123" count="255" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAnnotation(Class&lt;T&gt;) : T" num="126" count="31" type="method"/>
            <line num="127" count="31" type="stmt"/>
            <line num="128" count="31" type="stmt"/>
            <line falsecount="0" truecount="31" num="128" type="cond"/>
            <line num="129" count="31" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/experimental/theories/ParameterSupplier.java" name="ParameterSupplier.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="43" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ParameterSupplier">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/experimental/theories/ParametersSuppliedBy.java" name="ParametersSuppliedBy.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="48" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ParametersSuppliedBy">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/experimental/theories/PotentialAssignment.java" name="PotentialAssignment.java">
            <metrics coveredelements="16" coveredconditionals="2" complexity="8" loc="52" coveredmethods="4" methods="6" elements="19" classes="2" ncloc="40" statements="11" conditionals="2" coveredstatements="10"/>
            <class name="PotentialAssignment">
               <metrics coveredelements="14" coveredconditionals="2" complexity="6" coveredmethods="3" methods="4" elements="16" statements="10" conditionals="2" coveredstatements="9"/>
            </class>
            <class name="PotentialAssignment.CouldNotGenerateValueException">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="CouldNotGenerateValueException()" num="9" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="CouldNotGenerateValueException(Throwable)" num="12" count="3" type="method"/>
            <line num="13" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="forValue(String,Object) : PotentialAssignment" num="17" count="233" type="method"/>
            <line num="18" count="233" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : Object" num="19" count="269" type="method"/>
            <line num="21" count="269" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="24" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="getDescription() : String" num="29" count="8" type="method"/>
            <line num="31" count="8" type="stmt"/>
            <line num="33" count="8" type="stmt"/>
            <line falsecount="6" truecount="2" num="33" type="cond"/>
            <line num="34" count="2" type="stmt"/>
            <line num="36" count="6" type="stmt"/>
            <line num="37" count="6" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="44" count="8" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/experimental/theories/Theories.java" name="Theories.java">
            <metrics coveredelements="137" coveredconditionals="31" complexity="49" loc="310" coveredmethods="26" methods="27" elements="141" classes="2" ncloc="218" statements="82" conditionals="32" coveredstatements="80"/>
            <class name="Theories">
               <metrics coveredelements="69" coveredconditionals="19" complexity="23" coveredmethods="9" methods="10" elements="73" statements="43" conditionals="20" coveredstatements="41"/>
            </class>
            <class name="Theories.TheoryAnchor">
               <metrics coveredelements="68" coveredconditionals="12" complexity="26" coveredmethods="17" methods="17" elements="68" statements="39" conditionals="12" coveredstatements="39"/>
            </class>
            <line complexity="1" visibility="public" signature="Theories(Class&lt;?&gt;)" num="72" count="71" type="method"/>
            <line num="73" count="71" type="stmt"/>
            <line complexity="1" visibility="protected" signature="Theories(TestClass)" num="77" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="collectInitializationErrors(List&lt;Throwable&gt;) : void" num="81" count="87" type="method"/>
            <line num="83" count="87" type="stmt"/>
            <line num="84" count="87" type="stmt"/>
            <line num="85" count="87" type="stmt"/>
            <line complexity="5" visibility="private" signature="validateDataPointFields(List&lt;Throwable&gt;) : void" num="88" count="87" type="method"/>
            <line num="89" count="87" type="stmt"/>
            <line num="91" count="87" type="stmt"/>
            <line num="92" count="150" type="stmt"/>
            <line falsecount="112" truecount="38" num="92" type="cond"/>
            <line num="93" count="38" type="stmt"/>
            <line num="95" count="112" type="stmt"/>
            <line falsecount="110" truecount="2" num="95" type="cond"/>
            <line num="96" count="2" type="stmt"/>
            <line num="98" count="112" type="stmt"/>
            <line falsecount="106" truecount="6" num="98" type="cond"/>
            <line num="99" count="6" type="stmt"/>
            <line complexity="5" visibility="private" signature="validateDataPointMethods(List&lt;Throwable&gt;) : void" num="104" count="87" type="method"/>
            <line num="105" count="87" type="stmt"/>
            <line num="107" count="87" type="stmt"/>
            <line num="108" count="213" type="stmt"/>
            <line falsecount="24" truecount="189" num="108" type="cond"/>
            <line num="109" count="189" type="stmt"/>
            <line num="111" count="24" type="stmt"/>
            <line falsecount="22" truecount="2" num="111" type="cond"/>
            <line num="112" count="2" type="stmt"/>
            <line num="114" count="24" type="stmt"/>
            <line falsecount="18" truecount="6" num="114" type="cond"/>
            <line num="115" count="6" type="stmt"/>
            <line complexity="1" visibility="protected" signature="validateConstructor(List&lt;Throwable&gt;) : void" num="120" count="87" type="method"/>
            <line num="122" count="87" type="stmt"/>
            <line complexity="3" visibility="protected" signature="validateTestMethods(List&lt;Throwable&gt;) : void" num="125" count="87" type="method"/>
            <line num="127" count="87" type="stmt"/>
            <line num="128" count="129" type="stmt"/>
            <line falsecount="32" truecount="97" num="128" type="cond"/>
            <line num="129" count="97" type="stmt"/>
            <line num="130" count="97" type="stmt"/>
            <line num="132" count="32" type="stmt"/>
            <line num="135" count="129" type="stmt"/>
            <line num="136" count="135" type="stmt"/>
            <line num="137" count="135" type="stmt"/>
            <line falsecount="131" truecount="4" num="137" type="cond"/>
            <line num="138" count="4" type="stmt"/>
            <line complexity="4" visibility="private" signature="validateParameterSupplier(Class&lt;? extends ParameterSupplier&gt;,List&lt;Throwable&gt;) : void" num="144" count="4" type="method"/>
            <line num="145" count="4" type="stmt"/>
            <line num="147" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="147" type="cond"/>
            <line num="148" count="0" type="stmt"/>
            <line num="151" count="4" type="stmt"/>
            <line num="152" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="152" type="cond"/>
            <line num="153" count="2" type="stmt"/>
            <line complexity="1" visibility="protected" signature="computeTestMethods() : List&lt;FrameworkMethod&gt;" num="159" count="244" type="method"/>
            <line num="161" count="244" type="stmt"/>
            <line num="162" count="244" type="stmt"/>
            <line num="163" count="244" type="stmt"/>
            <line num="164" count="244" type="stmt"/>
            <line num="165" count="244" type="stmt"/>
            <line complexity="1" visibility="public" signature="methodBlock(FrameworkMethod) : Statement" num="168" count="70" type="method"/>
            <line num="170" count="70" type="stmt"/>
            <line complexity="1" visibility="public" signature="TheoryAnchor(FrameworkMethod,TestClass)" num="181" count="71" type="method"/>
            <line num="182" count="71" type="stmt"/>
            <line num="183" count="71" type="stmt"/>
            <line complexity="1" visibility="private" signature="getTestClass() : TestClass" num="186" count="237" type="method"/>
            <line num="187" count="237" type="stmt"/>
            <line complexity="3" visibility="public" signature="evaluate() : void" num="190" count="71" type="method"/>
            <line num="192" count="71" type="stmt"/>
            <line num="196" count="62" type="stmt"/>
            <line num="197" count="62" type="stmt"/>
            <line falsecount="55" truecount="7" num="197" type="cond"/>
            <line num="198" count="7" type="stmt"/>
            <line complexity="2" visibility="protected" signature="runWithAssignment(Assignments) : void" num="204" count="273" type="method"/>
            <line num="206" count="273" type="stmt"/>
            <line falsecount="166" truecount="107" num="206" type="cond"/>
            <line num="207" count="107" type="stmt"/>
            <line num="209" count="166" type="stmt"/>
            <line complexity="1" visibility="protected" signature="runWithIncompleteAssignment(Assignments) : void" num="213" count="106" type="method"/>
            <line num="215" count="106" type="stmt"/>
            <line num="217" count="200" type="stmt"/>
            <line complexity="1" visibility="protected" signature="runWithCompleteAssignment(Assignments) : void" num="221" count="166" type="method"/>
            <line num="223" count="166" type="stmt"/>
            <line complexity="1" visibility="protected" signature="collectInitializationErrors(List&lt;Throwable&gt;) : void" num="224" count="166" type="method"/>
            <line complexity="1" visibility="public" signature="methodBlock(FrameworkMethod) : Statement" num="230" count="166" type="method"/>
            <line num="232" count="166" type="stmt"/>
            <line num="233" count="166" type="stmt"/>
            <line complexity="3" visibility="public" signature="evaluate() : void" num="234" count="166" type="method"/>
            <line num="236" count="166" type="stmt"/>
            <line num="237" count="166" type="stmt"/>
            <line num="238" count="104" type="stmt"/>
            <line num="240" count="54" type="stmt"/>
            <line num="242" count="8" type="stmt"/>
            <line complexity="1" visibility="protected" signature="methodInvoker(FrameworkMethod,Object) : Statement" num="250" count="165" type="method"/>
            <line num="252" count="165" type="stmt"/>
            <line complexity="2" visibility="public" signature="createTest() : Object" num="255" count="166" type="method"/>
            <line num="257" count="166" type="stmt"/>
            <line num="259" count="166" type="stmt"/>
            <line falsecount="143" truecount="23" num="259" type="cond"/>
            <line num="260" count="23" type="stmt"/>
            <line num="263" count="166" type="stmt"/>
            <line complexity="1" visibility="private" signature="methodCompletesWithParameters(FrameworkMethod,Assignments,Object) : Statement" num="268" count="165" type="method"/>
            <line num="270" count="165" type="stmt"/>
            <line complexity="2" visibility="public" signature="evaluate() : void" num="271" count="165" type="method"/>
            <line num="273" count="165" type="stmt"/>
            <line num="275" count="161" type="stmt"/>
            <line falsecount="138" truecount="23" num="275" type="cond"/>
            <line num="276" count="23" type="stmt"/>
            <line num="279" count="159" type="stmt"/>
            <line complexity="1" visibility="protected" signature="handleAssumptionViolation(AssumptionViolatedException) : void" num="284" count="54" type="method"/>
            <line num="285" count="54" type="stmt"/>
            <line complexity="2" visibility="protected" signature="reportParameterizedError(Throwable,Object) : void" num="288" count="8" type="method"/>
            <line num="290" count="8" type="stmt"/>
            <line falsecount="6" truecount="2" num="290" type="cond"/>
            <line num="291" count="2" type="stmt"/>
            <line num="293" count="6" type="stmt"/>
            <line complexity="2" visibility="private" signature="nullsOk() : boolean" num="297" count="335" type="method"/>
            <line num="298" count="335" type="stmt"/>
            <line num="300" count="335" type="stmt"/>
            <line falsecount="299" truecount="36" num="300" type="cond"/>
            <line num="301" count="36" type="stmt"/>
            <line num="303" count="299" type="stmt"/>
            <line complexity="1" visibility="protected" signature="handleDataPointSuccess() : void" num="306" count="104" type="method"/>
            <line num="307" count="104" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/experimental/theories/Theory.java" name="Theory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="18" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Theory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="org.junit.experimental">
         <metrics coveredelements="28" complexity="12" loc="67" methods="8" classes="1" statements="16" coveredconditionals="5" coveredmethods="8" elements="30" ncloc="55" files="1" conditionals="6" coveredstatements="15"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/experimental/ParallelComputer.java" name="ParallelComputer.java">
            <metrics coveredelements="28" coveredconditionals="5" complexity="12" loc="67" coveredmethods="8" methods="8" elements="30" classes="1" ncloc="55" statements="16" conditionals="6" coveredstatements="15"/>
            <class name="ParallelComputer">
               <metrics coveredelements="28" coveredconditionals="5" complexity="12" coveredmethods="8" methods="8" elements="30" statements="16" conditionals="6" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="public" signature="ParallelComputer(boolean,boolean)" num="19" count="2" type="method"/>
            <line num="20" count="2" type="stmt"/>
            <line num="21" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="classes() : Computer" num="24" count="1" type="method"/>
            <line num="25" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="methods() : Computer" num="28" count="1" type="method"/>
            <line num="29" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="parallelize(Runner) : Runner" num="32" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="33" type="cond"/>
            <line num="34" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="schedule(Runnable) : void" num="37" count="4" type="method"/>
            <line num="38" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="finished() : void" num="41" count="2" type="method"/>
            <line num="42" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="getSuite(RunnerBuilder,java.lang.Class&lt;?&gt;[]) : Runner" num="54" count="2" type="method"/>
            <line num="57" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="58" type="cond"/>
            <line complexity="2" visibility="protected" signature="getRunner(RunnerBuilder,Class&lt;?&gt;) : Runner" num="61" count="3" type="method"/>
            <line num="64" count="3" type="stmt"/>
            <line num="65" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="65" type="cond"/>
         </file>
      </package>
      <package name="org.junit.internal.runners.rules">
         <metrics coveredelements="87" complexity="34" loc="293" methods="22" classes="12" statements="45" coveredconditionals="20" coveredmethods="22" elements="87" ncloc="185" files="2" conditionals="20" coveredstatements="45"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/runners/rules/RuleMemberValidator.java" name="RuleMemberValidator.java">
            <metrics coveredelements="85" coveredconditionals="20" complexity="33" loc="279" coveredmethods="21" methods="21" elements="85" classes="11" ncloc="176" statements="44" conditionals="20" coveredstatements="44"/>
            <class name="RuleMemberValidator">
               <metrics coveredelements="23" coveredconditionals="2" complexity="9" coveredmethods="8" methods="8" elements="23" statements="13" conditionals="2" coveredstatements="13"/>
            </class>
            <class name="RuleMemberValidator.Builder">
               <metrics coveredelements="12" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="12" statements="8" conditionals="0" coveredstatements="8"/>
            </class>
            <class name="RuleMemberValidator.RuleValidator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RuleMemberValidator.MemberMustBeNonStaticOrAlsoClassRule">
               <metrics coveredelements="13" coveredconditionals="4" complexity="5" coveredmethods="1" methods="1" elements="13" statements="8" conditionals="4" coveredstatements="8"/>
            </class>
            <class name="RuleMemberValidator.MemberMustBeStatic">
               <metrics coveredelements="5" coveredconditionals="2" complexity="2" coveredmethods="1" methods="1" elements="5" statements="2" conditionals="2" coveredstatements="2"/>
            </class>
            <class name="RuleMemberValidator.DeclaringClassMustBePublic">
               <metrics coveredelements="7" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="7" statements="3" conditionals="2" coveredstatements="3"/>
            </class>
            <class name="RuleMemberValidator.MemberMustBePublic">
               <metrics coveredelements="5" coveredconditionals="2" complexity="2" coveredmethods="1" methods="1" elements="5" statements="2" conditionals="2" coveredstatements="2"/>
            </class>
            <class name="RuleMemberValidator.FieldMustBeARule">
               <metrics coveredelements="5" coveredconditionals="2" complexity="2" coveredmethods="1" methods="1" elements="5" statements="2" conditionals="2" coveredstatements="2"/>
            </class>
            <class name="RuleMemberValidator.MethodMustBeARule">
               <metrics coveredelements="5" coveredconditionals="2" complexity="2" coveredmethods="1" methods="1" elements="5" statements="2" conditionals="2" coveredstatements="2"/>
            </class>
            <class name="RuleMemberValidator.MethodMustBeATestRule">
               <metrics coveredelements="5" coveredconditionals="2" complexity="2" coveredmethods="1" methods="1" elements="5" statements="2" conditionals="2" coveredstatements="2"/>
            </class>
            <class name="RuleMemberValidator.FieldMustBeATestRule">
               <metrics coveredelements="5" coveredconditionals="2" complexity="2" coveredmethods="1" methods="1" elements="5" statements="2" conditionals="2" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="package" signature="RuleMemberValidator(Builder)" num="75" count="4" type="method"/>
            <line num="76" count="4" type="stmt"/>
            <line num="77" count="4" type="stmt"/>
            <line num="78" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="validate(TestClass,List&lt;Throwable&gt;) : void" num="88" count="5251" type="method"/>
            <line num="89" count="5251" type="stmt"/>
            <line falsecount="2626" truecount="2625" num="89" type="cond"/>
            <line num="92" count="5251" type="stmt"/>
            <line num="93" count="228" type="stmt"/>
            <line complexity="1" visibility="private" signature="validateMember(FrameworkMember&lt;?&gt;,List&lt;Throwable&gt;) : void" num="97" count="228" type="method"/>
            <line num="98" count="228" type="stmt"/>
            <line num="99" count="718" type="stmt"/>
            <line complexity="1" visibility="private" signature="classRuleValidatorBuilder() : Builder" num="103" count="2" type="method"/>
            <line num="104" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="testRuleValidatorBuilder() : Builder" num="107" count="2" type="method"/>
            <line num="108" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="Builder(Class&lt;? extends Annotation&gt;)" num="116" count="4" type="method"/>
            <line num="117" count="4" type="stmt"/>
            <line num="118" count="4" type="stmt"/>
            <line num="119" count="4" type="stmt"/>
            <line complexity="1" visibility="package" signature="forMethods() : Builder" num="122" count="2" type="method"/>
            <line num="123" count="2" type="stmt"/>
            <line num="124" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="withValidator(RuleValidator) : Builder" num="127" count="14" type="method"/>
            <line num="128" count="14" type="stmt"/>
            <line num="129" count="14" type="stmt"/>
            <line complexity="1" visibility="package" signature="build() : RuleMemberValidator" num="132" count="4" type="method"/>
            <line num="133" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="isRuleType(FrameworkMember&lt;?&gt;) : boolean" num="137" count="194" type="method"/>
            <line num="138" count="194" type="stmt"/>
            <line complexity="1" visibility="private" signature="isTestRule(FrameworkMember&lt;?&gt;) : boolean" num="141" count="203" type="method"/>
            <line num="142" count="203" type="stmt"/>
            <line complexity="1" visibility="private" signature="isMethodRule(FrameworkMember&lt;?&gt;) : boolean" num="145" count="392" type="method"/>
            <line num="146" count="392" type="stmt"/>
            <line complexity="5" visibility="public" signature="validate(FrameworkMember&lt;?&gt;,Class&lt;? extends Annotation&gt;,List&lt;Throwable&gt;) : void" num="167" count="194" type="method"/>
            <line num="168" count="194" type="stmt"/>
            <line num="169" count="194" type="stmt"/>
            <line num="176" count="194" type="stmt"/>
            <line falsecount="190" truecount="4" num="176" type="cond"/>
            <line num="177" count="4" type="stmt"/>
            <line num="178" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="178" type="cond"/>
            <line num="179" count="2" type="stmt"/>
            <line num="181" count="2" type="stmt"/>
            <line num="183" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="validate(FrameworkMember&lt;?&gt;,Class&lt;? extends Annotation&gt;,List&lt;Throwable&gt;) : void" num="192" count="34" type="method"/>
            <line num="193" count="34" type="stmt"/>
            <line falsecount="31" truecount="3" num="193" type="cond"/>
            <line num="194" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="validate(FrameworkMember&lt;?&gt;,Class&lt;? extends Annotation&gt;,List&lt;Throwable&gt;) : void" num="204" count="34" type="method"/>
            <line num="205" count="34" type="stmt"/>
            <line falsecount="33" truecount="1" num="205" type="cond"/>
            <line num="206" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="isDeclaringClassPublic(FrameworkMember&lt;?&gt;) : boolean" num="211" count="34" type="method"/>
            <line num="212" count="34" type="stmt"/>
            <line complexity="2" visibility="public" signature="validate(FrameworkMember&lt;?&gt;,Class&lt;? extends Annotation&gt;,List&lt;Throwable&gt;) : void" num="220" count="228" type="method"/>
            <line num="221" count="228" type="stmt"/>
            <line falsecount="222" truecount="6" num="221" type="cond"/>
            <line num="222" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="validate(FrameworkMember&lt;?&gt;,Class&lt;? extends Annotation&gt;,List&lt;Throwable&gt;) : void" num="232" count="173" type="method"/>
            <line num="233" count="173" type="stmt"/>
            <line falsecount="168" truecount="5" num="233" type="cond"/>
            <line num="234" count="5" type="stmt"/>
            <line complexity="2" visibility="public" signature="validate(FrameworkMember&lt;?&gt;,Class&lt;? extends Annotation&gt;,List&lt;Throwable&gt;) : void" num="245" count="21" type="method"/>
            <line num="246" count="21" type="stmt"/>
            <line falsecount="18" truecount="3" num="246" type="cond"/>
            <line num="247" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="validate(FrameworkMember&lt;?&gt;,Class&lt;? extends Annotation&gt;,List&lt;Throwable&gt;) : void" num="257" count="16" type="method"/>
            <line num="259" count="16" type="stmt"/>
            <line falsecount="14" truecount="2" num="259" type="cond"/>
            <line num="260" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="validate(FrameworkMember&lt;?&gt;,Class&lt;? extends Annotation&gt;,List&lt;Throwable&gt;) : void" num="271" count="18" type="method"/>
            <line num="273" count="18" type="stmt"/>
            <line falsecount="16" truecount="2" num="273" type="cond"/>
            <line num="274" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/runners/rules/ValidationError.java" name="ValidationError.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="14" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ValidationError">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="ValidationError(FrameworkMember&lt;?&gt;,Class&lt;? extends Annotation&gt;,String)" num="11" count="26" type="method"/>
            <line num="12" count="26" type="stmt"/>
         </file>
      </package>
      <package name="org.junit.internal.requests">
         <metrics coveredelements="50" complexity="18" loc="183" methods="12" classes="7" statements="34" coveredconditionals="5" coveredmethods="12" elements="52" ncloc="127" files="5" conditionals="6" coveredstatements="33"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/requests/ClassRequest.java" name="ClassRequest.java">
            <metrics coveredelements="15" coveredconditionals="2" complexity="7" loc="54" coveredmethods="5" methods="5" elements="15" classes="3" ncloc="34" statements="8" conditionals="2" coveredstatements="8"/>
            <class name="ClassRequest">
               <metrics coveredelements="7" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="ClassRequest.CustomAllDefaultPossibilitiesBuilder">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="ClassRequest.CustomSuiteMethodBuilder">
               <metrics coveredelements="6" coveredconditionals="2" complexity="3" coveredmethods="1" methods="1" elements="6" statements="3" conditionals="2" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="ClassRequest(Class&lt;?&gt;,boolean)" num="17" count="275" type="method"/>
            <line num="18" count="275" type="stmt"/>
            <line num="19" count="275" type="stmt"/>
            <line complexity="1" visibility="public" signature="ClassRequest(Class&lt;?&gt;)" num="22" count="233" type="method"/>
            <line num="23" count="233" type="stmt"/>
            <line complexity="1" visibility="protected" signature="createRunner() : Runner" num="26" count="275" type="method"/>
            <line num="28" count="275" type="stmt"/>
            <line complexity="1" visibility="protected" signature="suiteMethodBuilder() : RunnerBuilder" num="33" count="529" type="method"/>
            <line num="35" count="529" type="stmt"/>
            <line complexity="3" visibility="public" signature="runnerForClass(Class&lt;?&gt;) : Runner" num="46" count="371" type="method"/>
            <line num="48" count="371" type="stmt"/>
            <line falsecount="340" truecount="31" num="48" type="cond"/>
            <line num="49" count="31" type="stmt"/>
            <line num="51" count="340" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/requests/FilterRequest.java" name="FilterRequest.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="3" loc="45" coveredmethods="2" methods="2" elements="9" classes="1" ncloc="25" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="FilterRequest">
               <metrics coveredelements="9" coveredconditionals="0" complexity="3" coveredmethods="2" methods="2" elements="9" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="FilterRequest(Request,Filter)" num="28" count="68" type="method"/>
            <line num="29" count="68" type="stmt"/>
            <line num="30" count="68" type="stmt"/>
            <line complexity="2" visibility="public" signature="getRunner() : Runner" num="33" count="69" type="method"/>
            <line num="35" count="69" type="stmt"/>
            <line num="36" count="69" type="stmt"/>
            <line num="37" count="69" type="stmt"/>
            <line num="38" count="67" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/requests/MemoizingRequest.java" name="MemoizingRequest.java">
            <metrics coveredelements="11" coveredconditionals="3" complexity="3" loc="30" coveredmethods="1" methods="1" elements="12" classes="1" ncloc="24" statements="7" conditionals="4" coveredstatements="7"/>
            <class name="MemoizingRequest">
               <metrics coveredelements="11" coveredconditionals="3" complexity="3" coveredmethods="1" methods="1" elements="12" statements="7" conditionals="4" coveredstatements="7"/>
            </class>
            <line complexity="3" visibility="public" signature="getRunner() : Runner" num="13" count="290" type="method"/>
            <line num="15" count="290" type="stmt"/>
            <line falsecount="4" truecount="286" num="15" type="cond"/>
            <line num="16" count="286" type="stmt"/>
            <line num="17" count="286" type="stmt"/>
            <line num="18" count="286" type="stmt"/>
            <line falsecount="0" truecount="286" num="18" type="cond"/>
            <line num="19" count="286" type="stmt"/>
            <line num="22" count="286" type="stmt"/>
            <line num="25" count="290" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/requests/OrderingRequest.java" name="OrderingRequest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="3" loc="29" coveredmethods="2" methods="2" elements="9" classes="1" ncloc="24" statements="7" conditionals="0" coveredstatements="6"/>
            <class name="OrderingRequest">
               <metrics coveredelements="8" coveredconditionals="0" complexity="3" coveredmethods="2" methods="2" elements="9" statements="7" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="OrderingRequest(Request,Ordering)" num="14" count="11" type="method"/>
            <line num="15" count="11" type="stmt"/>
            <line num="16" count="11" type="stmt"/>
            <line complexity="2" visibility="protected" signature="createRunner() : Runner" num="19" count="11" type="method"/>
            <line num="21" count="11" type="stmt"/>
            <line num="22" count="11" type="stmt"/>
            <line num="23" count="11" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="27" count="11" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/requests/SortingRequest.java" name="SortingRequest.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="2" loc="25" coveredmethods="2" methods="2" elements="7" classes="1" ncloc="20" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="SortingRequest">
               <metrics coveredelements="7" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="7" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="SortingRequest(Request,Comparator&lt;Description&gt;)" num="14" count="10" type="method"/>
            <line num="15" count="10" type="stmt"/>
            <line num="16" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRunner() : Runner" num="19" count="10" type="method"/>
            <line num="21" count="10" type="stmt"/>
            <line num="22" count="10" type="stmt"/>
            <line num="23" count="10" type="stmt"/>
         </file>
      </package>
      <package name="org.junit.experimental.results">
         <metrics coveredelements="43" complexity="24" loc="200" methods="23" classes="3" statements="31" coveredconditionals="0" coveredmethods="18" elements="54" ncloc="115" files="3" conditionals="0" coveredstatements="25"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/experimental/results/FailureList.java" name="FailureList.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="3" loc="28" coveredmethods="2" methods="2" elements="10" classes="1" ncloc="22" statements="8" conditionals="0" coveredstatements="7"/>
            <class name="FailureList">
               <metrics coveredelements="9" coveredconditionals="0" complexity="3" coveredmethods="2" methods="2" elements="10" statements="8" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="FailureList(List&lt;Failure&gt;)" num="12" count="5" type="method"/>
            <line num="13" count="5" type="stmt"/>
            <line complexity="2" visibility="public" signature="result() : Result" num="16" count="5" type="method"/>
            <line num="17" count="5" type="stmt"/>
            <line num="18" count="5" type="stmt"/>
            <line num="19" count="5" type="stmt"/>
            <line num="20" count="6" type="stmt"/>
            <line num="21" count="6" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line num="26" count="5" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/experimental/results/PrintableResult.java" name="PrintableResult.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="7" loc="72" coveredmethods="6" methods="7" elements="16" classes="1" ncloc="35" statements="9" conditionals="0" coveredstatements="8"/>
            <class name="PrintableResult">
               <metrics coveredelements="14" coveredconditionals="0" complexity="7" coveredmethods="6" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="testResult(Class&lt;?&gt;) : PrintableResult" num="28" count="99" type="method"/>
            <line num="29" count="99" type="stmt"/>
            <line complexity="1" visibility="public" signature="testResult(Request) : PrintableResult" num="35" count="100" type="method"/>
            <line num="36" count="100" type="stmt"/>
            <line complexity="1" visibility="public" signature="PrintableResult(List&lt;Failure&gt;)" num="42" count="5" type="method"/>
            <line num="43" count="5" type="stmt"/>
            <line complexity="1" visibility="private" signature="PrintableResult(Result)" num="46" count="105" type="method"/>
            <line num="47" count="105" type="stmt"/>
            <line complexity="1" visibility="public" signature="failureCount() : int" num="53" count="136" type="method"/>
            <line num="54" count="136" type="stmt"/>
            <line complexity="1" visibility="public" signature="failures() : List&lt;Failure&gt;" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="66" count="77" type="method"/>
            <line num="68" count="77" type="stmt"/>
            <line num="69" count="77" type="stmt"/>
            <line num="70" count="77" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/experimental/results/ResultMatchers.java" name="ResultMatchers.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="14" loc="100" coveredmethods="10" methods="14" elements="28" classes="1" ncloc="58" statements="14" conditionals="0" coveredstatements="10"/>
            <class name="ResultMatchers">
               <metrics coveredelements="20" coveredconditionals="0" complexity="14" coveredmethods="10" methods="14" elements="28" statements="14" conditionals="0" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="ResultMatchers()" num="23" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="isSuccessful() : Matcher&lt;PrintableResult&gt;" num="30" count="54" type="method"/>
            <line num="31" count="54" type="stmt"/>
            <line complexity="1" visibility="public" signature="failureCountIs(int) : Matcher&lt;PrintableResult&gt;" num="37" count="96" type="method"/>
            <line num="38" count="96" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeTo(Description) : void" num="39" count="1" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="matchesSafely(PrintableResult) : boolean" num="43" count="91" type="method"/>
            <line num="45" count="91" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasSingleFailureContaining(String) : Matcher&lt;Object&gt;" num="53" count="23" type="method"/>
            <line num="54" count="23" type="stmt"/>
            <line complexity="1" visibility="public" signature="matches(Object) : boolean" num="55" count="29" type="method"/>
            <line num="56" count="29" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeTo(Description) : void" num="59" count="3" type="method"/>
            <line num="60" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasSingleFailureMatching(Matcher&lt;Throwable&gt;) : Matcher&lt;PrintableResult&gt;" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="matchesSafely(PrintableResult) : boolean" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeTo(Description) : void" num="77" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasFailureContaining(String) : Matcher&lt;PrintableResult&gt;" num="88" count="42" type="method"/>
            <line num="89" count="42" type="stmt"/>
            <line complexity="1" visibility="public" signature="matchesSafely(PrintableResult) : boolean" num="90" count="44" type="method"/>
            <line num="92" count="44" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeTo(Description) : void" num="95" count="3" type="method"/>
            <line num="96" count="3" type="stmt"/>
         </file>
      </package>
      <package name="org.junit.internal.runners.model">
         <metrics coveredelements="28" complexity="13" loc="102" methods="11" classes="3" statements="17" coveredconditionals="2" coveredmethods="10" elements="30" ncloc="63" files="3" conditionals="2" coveredstatements="16"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/runners/model/EachTestNotifier.java" name="EachTestNotifier.java">
            <metrics coveredelements="22" coveredconditionals="2" complexity="10" loc="71" coveredmethods="8" methods="9" elements="24" classes="1" ncloc="43" statements="13" conditionals="2" coveredstatements="12"/>
            <class name="EachTestNotifier">
               <metrics coveredelements="22" coveredconditionals="2" complexity="10" coveredmethods="8" methods="9" elements="24" statements="13" conditionals="2" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="public" signature="EachTestNotifier(RunNotifier,Description)" num="14" count="2563" type="method"/>
            <line num="15" count="2563" type="stmt"/>
            <line num="16" count="2563" type="stmt"/>
            <line complexity="2" visibility="public" signature="addFailure(Throwable) : void" num="19" count="194" type="method"/>
            <line num="20" count="194" type="stmt"/>
            <line falsecount="181" truecount="13" num="20" type="cond"/>
            <line num="21" count="13" type="stmt"/>
            <line num="23" count="181" type="stmt"/>
            <line complexity="1" visibility="private" signature="addMultipleFailureException(MultipleFailureException) : void" num="27" count="13" type="method"/>
            <line num="28" count="13" type="stmt"/>
            <line num="29" count="33" type="stmt"/>
            <line complexity="1" visibility="public" signature="addFailedAssumption(AssumptionViolatedException) : void" num="33" count="27" type="method"/>
            <line num="34" count="27" type="stmt"/>
            <line complexity="1" visibility="public" signature="fireTestFinished() : void" num="37" count="1477" type="method"/>
            <line num="38" count="1477" type="stmt"/>
            <line complexity="1" visibility="public" signature="fireTestStarted() : void" num="41" count="1478" type="method"/>
            <line num="42" count="1478" type="stmt"/>
            <line complexity="1" visibility="public" signature="fireTestIgnored() : void" num="45" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fireTestSuiteStarted() : void" num="56" count="1085" type="method"/>
            <line num="57" count="1085" type="stmt"/>
            <line complexity="1" visibility="public" signature="fireTestSuiteFinished() : void" num="68" count="1085" type="method"/>
            <line num="69" count="1085" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/runners/model/MultipleFailureException.java" name="MultipleFailureException.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="12" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="MultipleFailureException">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="MultipleFailureException(List&lt;Throwable&gt;)" num="9" count="16" type="method"/>
            <line num="10" count="16" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/runners/model/ReflectiveCallable.java" name="ReflectiveCallable.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="19" coveredmethods="1" methods="1" elements="4" classes="1" ncloc="11" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="ReflectiveCallable">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="1" methods="1" elements="4" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="2" visibility="public" signature="run() : Object" num="10" count="3491" type="method"/>
            <line num="11" count="3491" type="stmt"/>
            <line num="12" count="3491" type="stmt"/>
            <line num="14" count="285" type="stmt"/>
         </file>
      </package>
      <package name="org.junit.internal.builders">
         <metrics coveredelements="110" complexity="46" loc="392" methods="34" classes="15" statements="73" coveredconditionals="15" coveredmethods="27" elements="123" ncloc="260" files="9" conditionals="16" coveredstatements="68"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/builders/AllDefaultPossibilitiesBuilder.java" name="AllDefaultPossibilitiesBuilder.java">
            <metrics coveredelements="22" coveredconditionals="3" complexity="10" loc="67" coveredmethods="7" methods="8" elements="27" classes="1" ncloc="48" statements="15" conditionals="4" coveredstatements="12"/>
            <class name="AllDefaultPossibilitiesBuilder">
               <metrics coveredelements="22" coveredconditionals="3" complexity="10" coveredmethods="7" methods="8" elements="27" statements="15" conditionals="4" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="public" signature="AllDefaultPossibilitiesBuilder()" num="15" count="568" type="method"/>
            <line num="16" count="568" type="stmt"/>
            <line complexity="1" visibility="public" signature="AllDefaultPossibilitiesBuilder(boolean)" num="22" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="runnerForClass(Class&lt;?&gt;) : Runner" num="27" count="1087" type="method"/>
            <line num="29" count="1087" type="stmt"/>
            <line num="36" count="1087" type="stmt"/>
            <line num="37" count="4446" type="stmt"/>
            <line num="38" count="4446" type="stmt"/>
            <line falsecount="3359" truecount="1087" num="38" type="cond"/>
            <line num="39" count="1087" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="junit4Builder() : JUnit4Builder" num="45" count="1087" type="method"/>
            <line num="46" count="1087" type="stmt"/>
            <line complexity="1" visibility="protected" signature="junit3Builder() : JUnit3Builder" num="49" count="1087" type="method"/>
            <line num="50" count="1087" type="stmt"/>
            <line complexity="1" visibility="protected" signature="annotatedBuilder() : AnnotatedBuilder" num="53" count="1087" type="method"/>
            <line num="54" count="1087" type="stmt"/>
            <line complexity="1" visibility="protected" signature="ignoredBuilder() : IgnoredBuilder" num="57" count="1087" type="method"/>
            <line num="58" count="1087" type="stmt"/>
            <line complexity="2" visibility="protected" signature="suiteMethodBuilder() : RunnerBuilder" num="61" count="558" type="method"/>
            <line num="62" count="558" type="stmt"/>
            <line falsecount="0" truecount="558" num="62" type="cond"/>
            <line num="63" count="558" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/builders/AnnotatedBuilder.java" name="AnnotatedBuilder.java">
            <metrics coveredelements="25" coveredconditionals="6" complexity="10" loc="116" coveredmethods="4" methods="4" elements="25" classes="1" ncloc="45" statements="15" conditionals="6" coveredstatements="15"/>
            <class name="AnnotatedBuilder">
               <metrics coveredelements="25" coveredconditionals="6" complexity="10" coveredmethods="4" methods="4" elements="25" statements="15" conditionals="6" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="public" signature="AnnotatedBuilder(RunnerBuilder)" num="76" count="1093" type="method"/>
            <line num="77" count="1093" type="stmt"/>
            <line complexity="3" visibility="public" signature="runnerForClass(Class&lt;?&gt;) : Runner" num="80" count="1090" type="method"/>
            <line num="82" count="1090" type="stmt"/>
            <line falsecount="783" truecount="1094" num="82" type="cond"/>
            <line num="84" count="1094" type="stmt"/>
            <line num="85" count="1094" type="stmt"/>
            <line falsecount="787" truecount="307" num="85" type="cond"/>
            <line num="86" count="307" type="stmt"/>
            <line num="90" count="783" type="stmt"/>
            <line complexity="3" visibility="private" signature="getEnclosingClassForNonStaticMemberClass(Class&lt;?&gt;) : Class&lt;?&gt;" num="93" count="787" type="method"/>
            <line num="94" count="787" type="stmt"/>
            <line falsecount="783" truecount="4" num="94" type="cond"/>
            <line num="95" count="4" type="stmt"/>
            <line num="97" count="783" type="stmt"/>
            <line complexity="3" visibility="public" signature="buildRunner(Class&lt;? extends Runner&gt;,Class&lt;?&gt;) : Runner" num="101" count="307" type="method"/>
            <line num="103" count="307" type="stmt"/>
            <line num="104" count="307" type="stmt"/>
            <line num="106" count="145" type="stmt"/>
            <line num="107" count="145" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/builders/IgnoredBuilder.java" name="IgnoredBuilder.java">
            <metrics coveredelements="6" coveredconditionals="2" complexity="2" loc="15" coveredmethods="1" methods="1" elements="6" classes="1" ncloc="12" statements="3" conditionals="2" coveredstatements="3"/>
            <class name="IgnoredBuilder">
               <metrics coveredelements="6" coveredconditionals="2" complexity="2" coveredmethods="1" methods="1" elements="6" statements="3" conditionals="2" coveredstatements="3"/>
            </class>
            <line complexity="2" visibility="public" signature="runnerForClass(Class&lt;?&gt;) : Runner" num="8" count="1087" type="method"/>
            <line num="10" count="1087" type="stmt"/>
            <line falsecount="1084" truecount="3" num="10" type="cond"/>
            <line num="11" count="3" type="stmt"/>
            <line num="13" count="1084" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/builders/IgnoredClassRunner.java" name="IgnoredClassRunner.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="3" loc="23" coveredmethods="3" methods="3" elements="6" classes="1" ncloc="17" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="IgnoredClassRunner">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="IgnoredClassRunner(Class&lt;?&gt;)" num="10" count="3" type="method"/>
            <line num="11" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(RunNotifier) : void" num="14" count="2" type="method"/>
            <line num="16" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescription() : Description" num="19" count="13" type="method"/>
            <line num="21" count="13" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/builders/JUnit3Builder.java" name="JUnit3Builder.java">
            <metrics coveredelements="8" coveredconditionals="2" complexity="3" loc="19" coveredmethods="2" methods="2" elements="8" classes="1" ncloc="15" statements="4" conditionals="2" coveredstatements="4"/>
            <class name="JUnit3Builder">
               <metrics coveredelements="8" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="8" statements="4" conditionals="2" coveredstatements="4"/>
            </class>
            <line complexity="2" visibility="public" signature="runnerForClass(Class&lt;?&gt;) : Runner" num="8" count="763" type="method"/>
            <line num="10" count="763" type="stmt"/>
            <line falsecount="730" truecount="33" num="10" type="cond"/>
            <line num="11" count="33" type="stmt"/>
            <line num="13" count="730" type="stmt"/>
            <line complexity="1" visibility="package" signature="isPre4Test(Class&lt;?&gt;) : boolean" num="16" count="763" type="method"/>
            <line num="17" count="763" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/builders/JUnit4Builder.java" name="JUnit4Builder.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="12" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="JUnit4Builder">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="runnerForClass(Class&lt;?&gt;) : Runner" num="8" count="730" type="method"/>
            <line num="10" count="730" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/builders/NullBuilder.java" name="NullBuilder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="11" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="8" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="NullBuilder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="runnerForClass(Class&lt;?&gt;) : Runner" num="7" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/builders/SuiteMethodBuilder.java" name="SuiteMethodBuilder.java">
            <metrics coveredelements="11" coveredconditionals="2" complexity="4" loc="24" coveredmethods="2" methods="2" elements="11" classes="1" ncloc="20" statements="7" conditionals="2" coveredstatements="7"/>
            <class name="SuiteMethodBuilder">
               <metrics coveredelements="11" coveredconditionals="2" complexity="4" coveredmethods="2" methods="2" elements="11" statements="7" conditionals="2" coveredstatements="7"/>
            </class>
            <line complexity="2" visibility="public" signature="runnerForClass(Class&lt;?&gt;) : Runner" num="8" count="752" type="method"/>
            <line num="10" count="752" type="stmt"/>
            <line falsecount="733" truecount="19" num="10" type="cond"/>
            <line num="11" count="19" type="stmt"/>
            <line num="13" count="733" type="stmt"/>
            <line complexity="2" visibility="public" signature="hasSuiteMethod(Class&lt;?&gt;) : boolean" num="16" count="752" type="method"/>
            <line num="17" count="752" type="stmt"/>
            <line num="18" count="752" type="stmt"/>
            <line num="20" count="733" type="stmt"/>
            <line num="22" count="19" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/internal/builders/AnnotatedBuilderTest.java" name="AnnotatedBuilderTest.java">
            <metrics coveredelements="30" coveredconditionals="0" complexity="12" loc="105" coveredmethods="7" methods="12" elements="36" classes="7" ncloc="85" statements="24" conditionals="0" coveredstatements="23"/>
            <class name="AnnotatedBuilderTest">
               <metrics coveredelements="28" complexity="6" methods="6" testruns="6" statements="22" coveredconditionals="0" coveredmethods="6" elements="28" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="22" testpasses="6"/>
            </class>
            <class name="AnnotatedBuilderTest.OuterClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="AnnotatedBuilderTest.OuterClass.InnerClassWithoutOwnRunWith">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="AnnotatedBuilderTest.OuterClass.InnerClassWithoutOwnRunWith.MostInnerClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="AnnotatedBuilderTest.OuterClass.InnerClassWithOwnRunWith">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="AnnotatedBuilderTest.OuterClass.InnerClassWithOwnRunWith.MostInnerClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="AnnotatedBuilderTest.InnerRunner">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="topLevelTestClassWithoutAnnotation_isRunWithDefaultRunner() : void" num="17" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="19" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="topLevelTestClassWithAnnotation_isRunWithAnnotatedRunner() : void" num="23" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="memberClassInsideAnnotatedTopLevelClass_isRunWithTopLevelRunner() : void" num="32" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="memberClassDeepInsideAnnotatedTopLevelClass_isRunWithTopLevelRunner() : void" num="41" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="annotatedMemberClassInsideAnnotatedTopLevelClass_isRunWithOwnRunner() : void" num="50" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="memberClassDeepInsideAnnotatedMemberClass_isRunWithParentMemberClassRunner() : void" num="59" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="71" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="test() : void" num="76" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="test() : void" num="84" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="test() : void" num="89" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="InnerRunner(Class&lt;?&gt;)" num="97" count="2" type="method"/>
            <line num="98" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="InnerRunner(Class&lt;?&gt;,RunnerBuilder)" num="101" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
         </file>
      </package>
      <package name="junit.textui">
         <metrics coveredelements="134" complexity="53" loc="343" methods="35" classes="2" statements="100" coveredconditionals="23" coveredmethods="29" elements="165" ncloc="219" files="2" conditionals="30" coveredstatements="82"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/junit/textui/ResultPrinter.java" name="ResultPrinter.java">
            <metrics coveredelements="59" coveredconditionals="10" complexity="23" loc="137" coveredmethods="16" methods="17" elements="67" classes="1" ncloc="93" statements="38" conditionals="12" coveredstatements="33"/>
            <class name="ResultPrinter">
               <metrics coveredelements="59" coveredconditionals="10" complexity="23" coveredmethods="16" methods="17" elements="67" statements="38" conditionals="12" coveredstatements="33"/>
            </class>
            <line complexity="1" visibility="public" signature="ResultPrinter(PrintStream)" num="18" count="17" type="method"/>
            <line num="19" count="17" type="stmt"/>
            <line complexity="1" visibility="package" signature="print(TestResult,long) : void" num="24" count="11" type="method"/>
            <line num="25" count="11" type="stmt"/>
            <line num="26" count="11" type="stmt"/>
            <line num="27" count="11" type="stmt"/>
            <line num="28" count="11" type="stmt"/>
            <line complexity="1" visibility="package" signature="printWaitPrompt() : void" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="printHeader(long) : void" num="38" count="11" type="method"/>
            <line num="39" count="11" type="stmt"/>
            <line num="40" count="11" type="stmt"/>
            <line complexity="1" visibility="protected" signature="printErrors(TestResult) : void" num="43" count="8" type="method"/>
            <line num="44" count="8" type="stmt"/>
            <line complexity="1" visibility="protected" signature="printFailures(TestResult) : void" num="47" count="10" type="method"/>
            <line num="48" count="10" type="stmt"/>
            <line complexity="4" visibility="protected" signature="printDefects(Enumeration&lt;TestFailure&gt;,int,String) : void" num="51" count="18" type="method"/>
            <line num="52" count="18" type="stmt"/>
            <line num="52" count="17" type="stmt"/>
            <line falsecount="1" truecount="17" num="52" type="cond"/>
            <line num="53" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="53" type="cond"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line falsecount="1" truecount="1" num="58" type="cond"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="printDefect(TestFailure,int) : void" num="63" count="1" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="printDefectHeader(TestFailure,int) : void" num="68" count="1" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="printDefectTrace(TestFailure) : void" num="74" count="1" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="3" visibility="protected" signature="printFooter(TestResult) : void" num="78" count="11" type="method"/>
            <line num="79" count="11" type="stmt"/>
            <line falsecount="5" truecount="6" num="79" type="cond"/>
            <line num="80" count="6" type="stmt"/>
            <line num="81" count="6" type="stmt"/>
            <line num="82" count="6" type="stmt"/>
            <line falsecount="3" truecount="3" num="82" type="cond"/>
            <line num="85" count="5" type="stmt"/>
            <line num="86" count="5" type="stmt"/>
            <line num="87" count="5" type="stmt"/>
            <line num="91" count="11" type="stmt"/>
            <line complexity="1" visibility="protected" signature="elapsedTimeAsString(long) : String" num="98" count="4" type="method"/>
            <line num="99" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getWriter() : PrintStream" num="102" count="88" type="method"/>
            <line num="103" count="88" type="stmt"/>
            <line complexity="1" visibility="public" signature="addError(Test,Throwable) : void" num="109" count="3" type="method"/>
            <line num="110" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="addFailure(Test,AssertionFailedError) : void" num="116" count="2" type="method"/>
            <line num="117" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="endTest(Test) : void" num="123" count="10" type="method"/>
            <line complexity="2" visibility="public" signature="startTest(Test) : void" num="129" count="10" type="method"/>
            <line num="130" count="10" type="stmt"/>
            <line num="131" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="131" type="cond"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/junit/textui/TestRunner.java" name="TestRunner.java">
            <metrics coveredelements="75" coveredconditionals="13" complexity="30" loc="206" coveredmethods="13" methods="18" elements="98" classes="1" ncloc="126" statements="62" conditionals="18" coveredstatements="49"/>
            <class name="TestRunner">
               <metrics coveredelements="75" coveredconditionals="13" complexity="30" coveredmethods="13" methods="18" elements="98" statements="62" conditionals="18" coveredstatements="49"/>
            </class>
            <line complexity="1" visibility="public" signature="TestRunner()" num="40" count="5" type="method"/>
            <line num="41" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="TestRunner(PrintStream)" num="47" count="5" type="method"/>
            <line num="48" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="TestRunner(ResultPrinter)" num="54" count="12" type="method"/>
            <line num="55" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Class&lt;? extends TestCase&gt;) : void" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Test) : TestResult" num="75" count="1" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="runAndWait(Test) : void" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFailed(int,Test,Throwable) : void" num="89" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="testStarted(String) : void" num="93" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="testEnded(String) : void" num="97" count="0" type="method"/>
            <line complexity="1" visibility="protected" signature="createTestResult() : TestResult" num="104" count="11" type="method"/>
            <line num="105" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="doRun(Test) : TestResult" num="108" count="8" type="method"/>
            <line num="109" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="doRun(Test,boolean) : TestResult" num="112" count="11" type="method"/>
            <line num="113" count="11" type="stmt"/>
            <line num="114" count="11" type="stmt"/>
            <line num="115" count="11" type="stmt"/>
            <line num="116" count="11" type="stmt"/>
            <line num="117" count="11" type="stmt"/>
            <line num="118" count="11" type="stmt"/>
            <line num="119" count="11" type="stmt"/>
            <line num="121" count="11" type="stmt"/>
            <line num="122" count="11" type="stmt"/>
            <line complexity="3" visibility="protected" signature="pause(boolean) : void" num="125" count="11" type="method"/>
            <line num="126" count="11" type="stmt"/>
            <line num="126" count="11" type="stmt"/>
            <line falsecount="0" truecount="11" num="126" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="main(String[]) : void" num="134" count="3" type="method"/>
            <line num="135" count="3" type="stmt"/>
            <line num="136" count="3" type="stmt"/>
            <line num="137" count="3" type="stmt"/>
            <line num="138" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="138" type="cond"/>
            <line num="139" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="9" visibility="public" signature="start(String[]) : TestResult" num="152" count="4" type="method"/>
            <line num="153" count="4" type="stmt"/>
            <line num="154" count="4" type="stmt"/>
            <line num="155" count="4" type="stmt"/>
            <line num="157" count="4" type="stmt"/>
            <line falsecount="4" truecount="4" num="157" type="cond"/>
            <line num="158" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="160" type="cond"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="4" type="stmt"/>
            <line falsecount="3" truecount="1" num="162" type="cond"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="167" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line num="170" count="3" type="stmt"/>
            <line num="174" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="174" type="cond"/>
            <line num="175" count="0" type="stmt"/>
            <line num="178" count="4" type="stmt"/>
            <line num="179" count="4" type="stmt"/>
            <line falsecount="3" truecount="1" num="179" type="cond"/>
            <line num="180" count="1" type="stmt"/>
            <line num="182" count="3" type="stmt"/>
            <line num="183" count="2" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="runSingleMethod(String,String,boolean) : TestResult" num="189" count="1" type="method"/>
            <line num="190" count="1" type="stmt"/>
            <line num="191" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="runFailed(String) : void" num="195" count="1" type="method"/>
            <line num="197" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPrinter(ResultPrinter) : void" num="201" count="5" type="method"/>
            <line num="202" count="5" type="stmt"/>
         </file>
      </package>
      <package name="org.junit.experimental.categories">
         <metrics coveredelements="427" complexity="193" loc="1764" methods="165" classes="102" statements="305" coveredconditionals="49" coveredmethods="115" elements="520" ncloc="1253" files="13" conditionals="50" coveredstatements="263"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/experimental/categories/Categories.java" name="Categories.java">
            <metrics coveredelements="166" coveredconditionals="47" complexity="54" loc="375" coveredmethods="27" methods="28" elements="170" classes="4" ncloc="220" statements="94" conditionals="48" coveredstatements="92"/>
            <class name="Categories">
               <metrics coveredelements="47" coveredconditionals="13" complexity="17" coveredmethods="8" methods="8" elements="49" statements="27" conditionals="14" coveredstatements="26"/>
            </class>
            <class name="Categories.IncludeCategory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Categories.ExcludeCategory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Categories.CategoryFilter">
               <metrics coveredelements="119" coveredconditionals="34" complexity="37" coveredmethods="19" methods="20" elements="121" statements="67" conditionals="34" coveredstatements="66"/>
            </class>
            <line complexity="1" visibility="public" signature="include(boolean,Class&lt;?&gt;) : CategoryFilter" num="121" count="6" type="method"/>
            <line num="122" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="include(Class&lt;?&gt;) : CategoryFilter" num="125" count="4" type="method"/>
            <line num="126" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="include(Class&lt;?&gt;) : CategoryFilter" num="129" count="1" type="method"/>
            <line num="130" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="exclude(boolean,Class&lt;?&gt;) : CategoryFilter" num="133" count="2" type="method"/>
            <line num="134" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="exclude(Class&lt;?&gt;) : CategoryFilter" num="137" count="2" type="method"/>
            <line num="138" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="exclude(Class&lt;?&gt;) : CategoryFilter" num="141" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="categoryFilter(boolean,Set&lt;Class&lt;?&gt;&gt;,boolean,Set&lt;Class&lt;?&gt;&gt;) : CategoryFilter" num="145" count="28" type="method"/>
            <line num="147" count="28" type="stmt"/>
            <line complexity="1" visibility="public" signature="CategoryFilter(Class&lt;?&gt;,Class&lt;?&gt;)" num="150" count="2" type="method"/>
            <line num="152" count="2" type="stmt"/>
            <line num="153" count="2" type="stmt"/>
            <line num="154" count="2" type="stmt"/>
            <line num="155" count="2" type="stmt"/>
            <line complexity="1" visibility="protected" signature="CategoryFilter(boolean,Set&lt;Class&lt;?&gt;&gt;,boolean,Set&lt;Class&lt;?&gt;&gt;)" num="158" count="33" type="method"/>
            <line num="160" count="33" type="stmt"/>
            <line num="161" count="33" type="stmt"/>
            <line num="162" count="33" type="stmt"/>
            <line num="163" count="33" type="stmt"/>
            <line complexity="1" visibility="private" signature="CategoryFilter(boolean,Class&lt;?&gt;[],boolean,Class&lt;?&gt;[])" num="166" count="8" type="method"/>
            <line num="168" count="8" type="stmt"/>
            <line num="169" count="8" type="stmt"/>
            <line num="170" count="8" type="stmt"/>
            <line num="171" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="describe() : String" num="177" count="3" type="method"/>
            <line num="179" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="toString() : String" num="195" count="3" type="method"/>
            <line num="196" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="197" type="cond"/>
            <line num="198" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="198" type="cond"/>
            <line num="199" count="1" type="stmt"/>
            <line num="201" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="shouldRun(Description) : boolean" num="204" count="241" type="method"/>
            <line num="206" count="241" type="stmt"/>
            <line falsecount="126" truecount="115" num="206" type="cond"/>
            <line num="207" count="115" type="stmt"/>
            <line num="210" count="126" type="stmt"/>
            <line num="211" count="62" type="stmt"/>
            <line falsecount="42" truecount="20" num="211" type="cond"/>
            <line num="212" count="20" type="stmt"/>
            <line num="216" count="106" type="stmt"/>
            <line complexity="8" visibility="private" signature="hasCorrectCategoryAnnotation(Description) : boolean" num="219" count="241" type="method"/>
            <line num="220" count="241" type="stmt"/>
            <line num="223" count="241" type="stmt"/>
            <line falsecount="169" truecount="72" num="223" type="cond"/>
            <line num="224" count="72" type="stmt"/>
            <line num="227" count="169" type="stmt"/>
            <line falsecount="77" truecount="92" num="227" type="cond"/>
            <line num="228" count="92" type="stmt"/>
            <line falsecount="9" truecount="83" num="228" type="cond"/>
            <line num="229" count="83" type="stmt"/>
            <line falsecount="36" truecount="47" num="229" type="cond"/>
            <line num="230" count="47" type="stmt"/>
            <line num="233" count="9" type="stmt"/>
            <line falsecount="5" truecount="4" num="233" type="cond"/>
            <line num="234" count="4" type="stmt"/>
            <line num="239" count="118" type="stmt"/>
            <line falsecount="107" truecount="11" num="239" type="cond"/>
            <line num="241" count="11" type="stmt"/>
            <line num="243" count="107" type="stmt"/>
            <line falsecount="12" truecount="95" num="243" type="cond"/>
            <line num="244" count="95" type="stmt"/>
            <line num="246" count="12" type="stmt"/>
            <line complexity="2" visibility="private" signature="matchesAnyParentCategories(Set&lt;Class&lt;?&gt;&gt;,Set&lt;Class&lt;?&gt;&gt;) : boolean" num="255" count="178" type="method"/>
            <line num="256" count="178" type="stmt"/>
            <line num="257" count="193" type="stmt"/>
            <line falsecount="63" truecount="130" num="257" type="cond"/>
            <line num="258" count="130" type="stmt"/>
            <line num="261" count="48" type="stmt"/>
            <line complexity="2" visibility="private" signature="matchesAllParentCategories(Set&lt;Class&lt;?&gt;&gt;,Set&lt;Class&lt;?&gt;&gt;) : boolean" num="268" count="21" type="method"/>
            <line num="269" count="21" type="stmt"/>
            <line num="270" count="34" type="stmt"/>
            <line falsecount="21" truecount="13" num="270" type="cond"/>
            <line num="271" count="13" type="stmt"/>
            <line num="274" count="8" type="stmt"/>
            <line complexity="1" visibility="private" signature="categories(Description) : Set&lt;Class&lt;?&gt;&gt;" num="277" count="241" type="method"/>
            <line num="278" count="241" type="stmt"/>
            <line num="279" count="241" type="stmt"/>
            <line num="280" count="241" type="stmt"/>
            <line num="281" count="241" type="stmt"/>
            <line complexity="2" visibility="private" signature="parentDescription(Description) : Description" num="284" count="241" type="method"/>
            <line num="285" count="241" type="stmt"/>
            <line num="286" count="241" type="stmt"/>
            <line falsecount="234" truecount="7" num="286" type="cond"/>
            <line complexity="3" visibility="private" signature="directCategories(Description) : Class&lt;?&gt;[]" num="289" count="482" type="method"/>
            <line num="290" count="482" type="stmt"/>
            <line falsecount="475" truecount="7" num="290" type="cond"/>
            <line num="291" count="7" type="stmt"/>
            <line num="294" count="475" type="stmt"/>
            <line num="295" count="475" type="stmt"/>
            <line falsecount="209" truecount="266" num="295" type="cond"/>
            <line complexity="2" visibility="private" signature="copyAndRefine(Set&lt;Class&lt;?&gt;&gt;) : Set&lt;Class&lt;?&gt;&gt;" num="298" count="66" type="method"/>
            <line num="299" count="66" type="stmt"/>
            <line num="300" count="66" type="stmt"/>
            <line falsecount="6" truecount="60" num="300" type="cond"/>
            <line num="301" count="60" type="stmt"/>
            <line num="303" count="66" type="stmt"/>
            <line num="304" count="66" type="stmt"/>
            <line complexity="2" visibility="public" signature="Categories(Class&lt;?&gt;,RunnerBuilder)" num="308" count="27" type="method"/>
            <line num="309" count="27" type="stmt"/>
            <line num="310" count="27" type="stmt"/>
            <line num="311" count="27" type="stmt"/>
            <line num="312" count="27" type="stmt"/>
            <line num="313" count="27" type="stmt"/>
            <line num="314" count="27" type="stmt"/>
            <line num="316" count="27" type="stmt"/>
            <line num="318" count="3" type="stmt"/>
            <line complexity="2" visibility="private" signature="getIncludedCategory(Class&lt;?&gt;) : Set&lt;Class&lt;?&gt;&gt;" num="322" count="27" type="method"/>
            <line num="323" count="27" type="stmt"/>
            <line num="324" count="27" type="stmt"/>
            <line falsecount="24" truecount="3" num="324" type="cond"/>
            <line complexity="1" visibility="private" signature="isAnyIncluded(Class&lt;?&gt;) : boolean" num="327" count="27" type="method"/>
            <line num="328" count="27" type="stmt"/>
            <line num="329" count="27" type="stmt"/>
            <line complexity="2" visibility="private" signature="getExcludedCategory(Class&lt;?&gt;) : Set&lt;Class&lt;?&gt;&gt;" num="332" count="27" type="method"/>
            <line num="333" count="27" type="stmt"/>
            <line num="334" count="27" type="stmt"/>
            <line falsecount="13" truecount="14" num="334" type="cond"/>
            <line complexity="1" visibility="private" signature="isAnyExcluded(Class&lt;?&gt;) : boolean" num="337" count="27" type="method"/>
            <line num="338" count="27" type="stmt"/>
            <line num="339" count="27" type="stmt"/>
            <line complexity="2" visibility="private" signature="hasAssignableTo(Set&lt;Class&lt;?&gt;&gt;,Class&lt;?&gt;) : boolean" num="342" count="227" type="method"/>
            <line num="343" count="227" type="stmt"/>
            <line num="344" count="250" type="stmt"/>
            <line falsecount="99" truecount="151" num="344" type="cond"/>
            <line num="345" count="151" type="stmt"/>
            <line num="348" count="76" type="stmt"/>
            <line complexity="5" visibility="private" signature="createSet(Class&lt;?&gt;[]) : Set&lt;Class&lt;?&gt;&gt;" num="351" count="70" type="method"/>
            <line num="354" count="70" type="stmt"/>
            <line falsecount="45" truecount="25" num="354" type="cond"/>
            <line num="355" count="25" type="stmt"/>
            <line num="357" count="45" type="stmt"/>
            <line num="358" count="58" type="stmt"/>
            <line falsecount="58" truecount="0" num="358" type="cond"/>
            <line num="359" count="0" type="stmt"/>
            <line num="363" count="45" type="stmt"/>
            <line falsecount="13" truecount="32" num="363" type="cond"/>
            <line complexity="2" visibility="private" signature="nullableClassToSet(Class&lt;?&gt;) : Set&lt;Class&lt;?&gt;&gt;" num="368" count="4" type="method"/>
            <line num="371" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="371" type="cond"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/experimental/categories/Category.java" name="Category.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="48" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Category">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/experimental/categories/CategoryFilterFactory.java" name="CategoryFilterFactory.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="3" loc="51" coveredmethods="2" methods="2" elements="10" classes="1" ncloc="25" statements="8" conditionals="0" coveredstatements="7"/>
            <class name="CategoryFilterFactory">
               <metrics coveredelements="9" coveredconditionals="0" complexity="3" coveredmethods="2" methods="2" elements="10" statements="8" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="2" visibility="public" signature="createFilter(FilterFactoryParams) : Filter" num="21" count="7" type="method"/>
            <line num="22" count="7" type="stmt"/>
            <line num="23" count="7" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="parseCategories(String) : List&lt;Class&lt;?&gt;&gt;" num="36" count="7" type="method"/>
            <line num="37" count="7" type="stmt"/>
            <line num="39" count="7" type="stmt"/>
            <line num="44" count="7" type="stmt"/>
            <line num="46" count="6" type="stmt"/>
            <line num="49" count="6" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/experimental/categories/CategoryValidator.java" name="CategoryValidator.java">
            <metrics coveredelements="13" coveredconditionals="2" complexity="3" loc="62" coveredmethods="2" methods="2" elements="13" classes="1" ncloc="38" statements="9" conditionals="2" coveredstatements="9"/>
            <class name="CategoryValidator">
               <metrics coveredelements="13" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="13" statements="9" conditionals="2" coveredstatements="9"/>
            </class>
            <line complexity="2" visibility="public" signature="validateAnnotatedMethod(FrameworkMethod) : List&lt;Exception&gt;" num="43" count="83" type="method"/>
            <line num="45" count="83" type="stmt"/>
            <line num="46" count="83" type="stmt"/>
            <line num="47" count="83" type="stmt"/>
            <line num="48" count="165" type="stmt"/>
            <line num="49" count="660" type="stmt"/>
            <line falsecount="656" truecount="4" num="49" type="cond"/>
            <line num="50" count="4" type="stmt"/>
            <line num="54" count="83" type="stmt"/>
            <line complexity="1" visibility="private" signature="addErrorMessage(List&lt;Exception&gt;,Class&lt;?&gt;) : void" num="57" count="4" type="method"/>
            <line num="58" count="4" type="stmt"/>
            <line num="60" count="4" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/experimental/categories/ExcludeCategories.java" name="ExcludeCategories.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="4" loc="52" coveredmethods="4" methods="4" elements="8" classes="2" ncloc="24" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="ExcludeCategories">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="ExcludeCategories.ExcludesAny">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="protected" signature="createFilter(List&lt;Class&lt;?&gt;&gt;) : Filter" num="33" count="3" type="method"/>
            <line num="35" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="ExcludesAny(List&lt;Class&lt;?&gt;&gt;)" num="39" count="3" type="method"/>
            <line num="40" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="ExcludesAny(Set&lt;Class&lt;?&gt;&gt;)" num="43" count="3" type="method"/>
            <line num="44" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="describe() : String" num="47" count="1" type="method"/>
            <line num="49" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/experimental/categories/IncludeCategories.java" name="IncludeCategories.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="4" loc="52" coveredmethods="3" methods="4" elements="8" classes="2" ncloc="24" statements="4" conditionals="0" coveredstatements="3"/>
            <class name="IncludeCategories">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="IncludeCategories.IncludesAny">
               <metrics coveredelements="4" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="protected" signature="createFilter(List&lt;Class&lt;?&gt;&gt;) : Filter" num="33" count="2" type="method"/>
            <line num="35" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="IncludesAny(List&lt;Class&lt;?&gt;&gt;)" num="39" count="2" type="method"/>
            <line num="40" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="IncludesAny(Set&lt;Class&lt;?&gt;&gt;)" num="43" count="2" type="method"/>
            <line num="44" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="describe() : String" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/experimental/categories/AllCategoriesTests.java" name="AllCategoriesTests.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="17" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="15" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AllCategoriesTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/experimental/categories/CategoriesAndParameterizedTest.java" name="CategoriesAndParameterizedTest.java">
            <metrics coveredelements="24" coveredconditionals="0" complexity="11" loc="129" coveredmethods="9" methods="11" elements="28" classes="9" ncloc="106" statements="17" conditionals="0" coveredstatements="15"/>
            <class name="CategoriesAndParameterizedTest">
               <metrics coveredelements="12" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="12" statements="9" conditionals="0" coveredstatements="9"/>
            </class>
            <class name="CategoriesAndParameterizedTest.Token">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CategoriesAndParameterizedTest.ParameterizedTestWithoutCategory">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="CategoriesAndParameterizedTest.TestThatAvoidsNoTestRemainsException">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="CategoriesAndParameterizedTest.SuiteWithParameterizedTestWithoutCategory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CategoriesAndParameterizedTest.ParameterizedTestWithCategory">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="2" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="2" testpasses="2"/>
            </class>
            <class name="CategoriesAndParameterizedTest.SuiteWithParameterizedTestWithCategory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CategoriesAndParameterizedTest.ParameterizedTestWithMethodWithCategory">
               <metrics coveredelements="4" complexity="3" methods="3" testruns="1" statements="3" coveredconditionals="0" coveredmethods="2" elements="6" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <class name="CategoriesAndParameterizedTest.SuiteWithParameterizedTestWithMethodWithCategory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="getParameters() : Iterable&lt;String&gt;" num="26" count="1" type="method"/>
            <line num="28" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSomething() : void" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSomething() : void" num="42" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="doesNotRunTestsWithoutCategory() : void" num="55" count="1" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameters() : Iterable&lt;String&gt;" num="66" count="1" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSomething() : void" num="74" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="76" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="runsTestsWithoutCategory() : void" num="86" count="1" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameters() : Iterable&lt;String&gt;" num="96" count="1" type="method"/>
            <line num="98" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSomething() : void" num="104" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="107" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testThatIsNotExecuted() : void" num="110" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="runsTestMethodWithCategory() : void" num="122" count="1" type="method"/>
            <line num="124" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/experimental/categories/CategoryFilterFactoryTest.java" name="CategoryFilterFactoryTest.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="5" loc="66" coveredmethods="2" methods="5" elements="14" classes="3" ncloc="52" statements="9" conditionals="0" coveredstatements="4"/>
            <class name="CategoryFilterFactoryTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="2" statements="6" coveredconditionals="0" coveredmethods="1" elements="8" testfailures="1" testduration="0.003" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <class name="CategoryFilterFactoryTest.CategoryFilterFactoryStub">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="CategoryFilterFactoryTest.DummyFilter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="shouldCreateFilter() : void" num="27" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="29" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldThrowException() : void" num="37" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="createFilter(List&lt;Class&lt;?&gt;&gt;) : Filter" num="49" count="1" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldRun(Description) : boolean" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="describe() : String" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/experimental/categories/CategoryTest.java" name="CategoryTest.java">
            <metrics coveredelements="126" coveredconditionals="0" complexity="55" loc="575" coveredmethods="41" methods="55" elements="147" classes="48" ncloc="472" statements="92" conditionals="0" coveredstatements="85"/>
            <class name="CategoryTest">
               <metrics coveredelements="111" complexity="26" methods="26" testruns="8" statements="85" coveredconditionals="0" coveredmethods="26" elements="111" testfailures="0" testduration="0.012000000000000004" conditionals="0" coveredstatements="85" testpasses="8"/>
            </class>
            <class name="CategoryTest.FastTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CategoryTest.SlowTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CategoryTest.ReallySlowTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CategoryTest.OneOfEach">
               <metrics coveredelements="3" complexity="3" methods="3" testruns="3" statements="0" coveredconditionals="0" coveredmethods="3" elements="3" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="3"/>
            </class>
            <class name="CategoryTest.A">
               <metrics coveredelements="1" complexity="2" methods="2" testruns="5" statements="1" coveredconditionals="0" coveredmethods="1" elements="3" testfailures="2" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="3"/>
            </class>
            <class name="CategoryTest.B">
               <metrics coveredelements="1" complexity="1" methods="1" testruns="2" statements="0" coveredconditionals="0" coveredmethods="1" elements="1" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="2"/>
            </class>
            <class name="CategoryTest.C">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="2" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="2" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="CategoryTest.SlowTestSuite">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CategoryTest.JustA">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CategoryTest.Category1">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CategoryTest.Category2">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CategoryTest.SomeAreSlow">
               <metrics coveredelements="2" complexity="5" methods="5" testruns="5" statements="0" coveredconditionals="0" coveredmethods="2" elements="5" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="5"/>
            </class>
            <class name="CategoryTest.SomeAreSlowSuite">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CategoryTest.IncludeAndExcludeSuite">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CategoryTest.TestSuiteWithNoCategories">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CategoryTest.OneFastOneSlow">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="2" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CategoryTest.OneFast">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CategoryTest.OneFastSuite">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CategoryTest.OneThatIsBothFastAndSlow">
               <metrics coveredelements="1" complexity="1" methods="1" testruns="1" statements="0" coveredconditionals="0" coveredmethods="1" elements="1" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="1"/>
            </class>
            <class name="CategoryTest.ChooseSlowFromBoth">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CategoryTest.VerySlowTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CategoryTest.OneVerySlowTest">
               <metrics coveredelements="1" complexity="1" methods="1" testruns="1" statements="0" coveredconditionals="0" coveredmethods="1" elements="1" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="1"/>
            </class>
            <class name="CategoryTest.RunSlowFromVerySlow">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CategoryTest.MultiA">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CategoryTest.MultiB">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CategoryTest.MultiC">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CategoryTest.AllIncludedMustBeMatchedSuite">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CategoryTest.AllIncludedMustMatched">
               <metrics coveredelements="1" complexity="2" methods="2" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="3" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="1"/>
            </class>
            <class name="CategoryTest.MultiIncludeWithExcludeCategorySuite">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CategoryTest.MultipleIncludesAndExcludeOnMethod">
               <metrics coveredelements="1" complexity="2" methods="2" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="3" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="1"/>
            </class>
            <class name="CategoryTest.ClassAsCategory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CategoryTest.OneMoreTest">
               <metrics coveredelements="1" complexity="1" methods="1" testruns="1" statements="0" coveredconditionals="0" coveredmethods="1" elements="1" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="1"/>
            </class>
            <class name="CategoryTest.RunClassAsCategory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CategoryTest.Ancestor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CategoryTest.Inherited">
               <metrics coveredelements="1" complexity="1" methods="1" testruns="1" statements="0" coveredconditionals="0" coveredmethods="1" elements="1" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="1"/>
            </class>
            <class name="CategoryTest.InheritanceSuite">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CategoryTest.EmptyCategoriesSuite">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CategoryTest.NoTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CategoryTest.IgnoredTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CategoryTest.IgnoredTestCategoriesSuite">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CategoryTest.ExcludedTest1">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CategoryTest.ExcludedTest2">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CategoryTest.IncludedTest">
               <metrics coveredelements="1" complexity="1" methods="1" testruns="1" statements="0" coveredconditionals="0" coveredmethods="1" elements="1" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="1"/>
            </class>
            <class name="CategoryTest.IncludedExcludedSameSuite">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CategoryTest.NoIncludeCategoryAnnotationSuite">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CategoryTest.NoIncludeCategoryAnnotationTest">
               <metrics coveredelements="1" complexity="2" methods="2" testruns="2" statements="0" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="2"/>
            </class>
            <class name="CategoryTest.SameAsNoIncludeCategoryAnnotationSuite">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="a() : void" num="51" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="b() : void" num="56" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="c() : void" num="61" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="a() : void" num="68" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="b() : void" num="73" testsuccess="true" count="3" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="c() : void" num="81" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="d() : void" num="88" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCountOnJustA() : void" num="106" count="1" type="method"/>
            <line num="108" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCount() : void" num="111" count="1" type="method"/>
            <line num="113" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="noCategory() : void" num="123" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="justCategory1() : void" num="127" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="justCategory2() : void" num="132" testsuccess="true" count="3" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="both() : void" num="137" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="bothReversed() : void" num="142" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="testCountOnAWithoutSlowTests() : void" num="154" count="1" type="method"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testsThatAreBothIncludedAndExcludedAreExcluded() : void" num="169" count="1" type="method"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCountWithExplicitIncludeFilter() : void" num="181" count="1" type="method"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCountWithExplicitExcludeFilter() : void" num="190" count="1" type="method"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCountWithExplicitExcludeFilter_usingConstructor() : void" num="199" count="1" type="method"/>
            <line num="201" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="categoryFilterLeavesOnlyMatchingMethods() : void" num="208" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="211" count="1" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line num="213" count="1" type="stmt"/>
            <line num="214" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="categoryFilterLeavesOnlyMatchingMethods_usingConstructor() : void" num="217" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="220" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line num="222" count="1" type="stmt"/>
            <line num="223" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="a() : void" num="227" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="b() : void" num="233" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="categoryFilterRejectsIncompatibleCategory() : void" num="240" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="243" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="246" count="1" type="stmt"/>
            <line num="247" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="a() : void" num="251" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="ifNoTestsToRunUseErrorRunner() : void" num="264" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="266" count="1" type="stmt"/>
            <line num="267" count="1" type="stmt"/>
            <line num="268" count="1" type="stmt"/>
            <line num="269" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeACategoryFilter() : void" num="272" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="274" count="1" type="stmt"/>
            <line num="275" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeMultipleCategoryFilter() : void" num="278" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="280" count="1" type="stmt"/>
            <line num="281" count="1" type="stmt"/>
            <line num="282" count="1" type="stmt"/>
            <line num="283" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="a() : void" num="288" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="runMethodWithTwoCategories() : void" num="301" count="1" type="method"/>
            <line num="303" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="a() : void" num="311" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="subclassesOfIncludedCategoriesAreRun() : void" num="324" count="1" type="method"/>
            <line num="326" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="a() : void" num="345" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="b() : void" num="350" count="0" type="method"/>
            <line num="353" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="allIncludedSuiteCategoriesMustBeMatched() : void" num="358" count="1" type="method"/>
            <line num="360" count="1" type="stmt"/>
            <line num="361" count="1" type="stmt"/>
            <line num="362" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="a() : void" num="373" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="b() : void" num="378" count="0" type="method"/>
            <line num="381" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="anyMethodWithExcludedCategoryWillBeExcluded() : void" num="386" count="1" type="method"/>
            <line num="388" count="1" type="stmt"/>
            <line num="389" count="1" type="stmt"/>
            <line num="390" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="a() : void" num="397" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="classesCanBeCategories() : void" num="409" count="1" type="method"/>
            <line num="411" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="a() : void" num="418" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="testInheritance() : void" num="428" count="1" type="method"/>
            <line num="430" count="1" type="stmt"/>
            <line num="431" count="1" type="stmt"/>
            <line num="432" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="emptyCategoriesSuite() : void" num="442" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="443" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="453" count="0" type="method"/>
            <line num="456" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ignoredTest() : void" num="466" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="468" count="1" type="stmt"/>
            <line num="469" count="1" type="stmt"/>
            <line num="470" count="1" type="stmt"/>
            <line num="471" count="1" type="stmt"/>
            <line num="472" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="478" count="0" type="method"/>
            <line num="480" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="487" count="0" type="method"/>
            <line num="490" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="496" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="oneRunnableOthersAvoided() : void" num="509" count="1" type="method"/>
            <line num="511" count="1" type="stmt"/>
            <line num="512" count="1" type="stmt"/>
            <line num="513" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCountWithMultipleExcludeFilter() : void" num="516" count="1" type="method"/>
            <line num="519" count="1" type="stmt"/>
            <line num="520" count="1" type="stmt"/>
            <line num="521" count="1" type="stmt"/>
            <line num="522" count="1" type="stmt"/>
            <line num="523" count="1" type="stmt"/>
            <line num="524" count="1" type="stmt"/>
            <line num="525" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCountWithMultipleIncludeFilter() : void" num="528" count="1" type="method"/>
            <line num="530" count="1" type="stmt"/>
            <line num="531" count="1" type="stmt"/>
            <line num="532" count="1" type="stmt"/>
            <line num="533" count="1" type="stmt"/>
            <line num="534" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test2() : void" num="546" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="test1() : void" num="550" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="noIncludeCategoryAnnotation() : void" num="555" count="1" type="method"/>
            <line num="557" count="1" type="stmt"/>
            <line num="558" count="1" type="stmt"/>
            <line num="559" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="sameAsNoIncludeCategoryAnnotation() : void" num="569" count="1" type="method"/>
            <line num="571" count="1" type="stmt"/>
            <line num="572" count="1" type="stmt"/>
            <line num="573" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/experimental/categories/CategoryValidatorTest.java" name="CategoryValidatorTest.java">
            <metrics coveredelements="21" coveredconditionals="0" complexity="11" loc="88" coveredmethods="6" methods="11" elements="26" classes="3" ncloc="70" statements="15" conditionals="0" coveredstatements="15"/>
            <class name="CategoryValidatorTest">
               <metrics coveredelements="21" complexity="6" methods="6" testruns="5" statements="15" coveredconditionals="0" coveredmethods="6" elements="21" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="15" testpasses="5"/>
            </class>
            <class name="CategoryValidatorTest.SampleCategory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CategoryValidatorTest.CategoryTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="5" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="methodWithCategoryAndBeforeClass() : void" num="24" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="methodWithCategoryAndAfterClass() : void" num="29" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="methodWithCategoryAndBefore() : void" num="34" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="methodWithCategoryAndAfter() : void" num="39" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="methodWithCategory() : void" num="44" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="errorIsAddedWhenCategoryIsUsedWithBeforeClass() : void" num="49" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="errorIsAddedWhenCategoryIsUsedWithAfterClass() : void" num="55" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="errorIsAddedWhenCategoryIsUsedWithBefore() : void" num="61" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="errorIsAddedWhenCategoryIsUsedWithAfter() : void" num="67" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="testAndAssertErrorMessage(FrameworkMethod,String) : void" num="73" count="4" type="method"/>
            <line num="74" count="4" type="stmt"/>
            <line num="76" count="4" type="stmt"/>
            <line num="77" count="4" type="stmt"/>
            <line num="78" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="errorIsNotAddedWhenCategoryIsNotCombinedWithIllegalCombination() : void" num="81" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/experimental/categories/JavadocTest.java" name="JavadocTest.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="6" loc="78" coveredmethods="5" methods="6" elements="15" classes="8" ncloc="60" statements="9" conditionals="0" coveredstatements="8"/>
            <class name="JavadocTest">
               <metrics coveredelements="10" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="10" statements="8" conditionals="0" coveredstatements="8"/>
            </class>
            <class name="JavadocTest.FastTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="JavadocTest.SlowTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="JavadocTest.SmokeTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="JavadocTest.A">
               <metrics coveredelements="2" complexity="3" methods="3" testruns="2" statements="1" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="2"/>
            </class>
            <class name="JavadocTest.B">
               <metrics coveredelements="1" complexity="1" methods="1" testruns="2" statements="0" coveredconditionals="0" coveredmethods="1" elements="1" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="2"/>
            </class>
            <class name="JavadocTest.SlowTestSuite">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="JavadocTest.FastOrSmokeTestSuite">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="a() : void" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="b() : void" num="31" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="c() : void" num="36" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="d() : void" num="44" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="slowTests() : void" num="63" count="1" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="fastSmokeTests() : void" num="71" count="1" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/experimental/categories/MultiCategoryTest.java" name="MultiCategoryTest.java">
            <metrics coveredelements="35" coveredconditionals="0" complexity="37" loc="171" coveredmethods="14" methods="37" elements="81" classes="19" ncloc="137" statements="44" conditionals="0" coveredstatements="21"/>
            <class name="MultiCategoryTest">
               <metrics coveredelements="26" complexity="5" methods="5" testruns="1" statements="21" coveredconditionals="0" coveredmethods="5" elements="26" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="21" testpasses="1"/>
            </class>
            <class name="MultiCategoryTest.A">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="MultiCategoryTest.B">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="MultiCategoryTest.C">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="MultiCategoryTest.MultiCategorySuite">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="MultiCategoryTest.CategoriesTest">
               <metrics coveredelements="2" complexity="4" methods="4" testruns="2" statements="2" coveredconditionals="0" coveredmethods="2" elements="6" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="2"/>
            </class>
            <class name="MultiCategoryTest.X">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="MultiCategoryTest.Y">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="MultiCategoryTest.Z">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="MultiCategoryTest.W">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="MultiCategoryTest.Q">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="MultiCategoryTest.InheritanceAny">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="MultiCategoryTest.InheritanceAll">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="MultiCategoryTest.InheritanceAnyAll">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="MultiCategoryTest.InheritanceAllAny">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="MultiCategoryTest.InheritanceAnyTest">
               <metrics coveredelements="3" complexity="7" methods="7" testruns="3" statements="4" coveredconditionals="0" coveredmethods="3" elements="11" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="3"/>
            </class>
            <class name="MultiCategoryTest.InheritanceAllTest">
               <metrics coveredelements="1" complexity="7" methods="7" testruns="1" statements="6" coveredconditionals="0" coveredmethods="1" elements="13" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="1"/>
            </class>
            <class name="MultiCategoryTest.InheritanceAnyAllTest">
               <metrics coveredelements="3" complexity="7" methods="7" testruns="3" statements="4" coveredconditionals="0" coveredmethods="3" elements="11" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="3"/>
            </class>
            <class name="MultiCategoryTest.InheritanceAllAnyTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="14" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="runSuite() : void" num="31" count="1" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="a() : void" num="49" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="b() : void" num="53" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="c() : void" num="57" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="anything() : void" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="inheritanceAnyIncluded() : void" num="69" count="1" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="inheritanceAllIncluded() : void" num="77" count="1" type="method"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="inheritanceAnyAll() : void" num="85" count="1" type="method"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="inheritanceAllAny() : void" num="93" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="x() : void" num="133" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="y() : void" num="134" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="z() : void" num="135" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="w() : void" num="136" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="q() : void" num="137" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="runnable() : void" num="138" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="t() : void" num="139" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="x() : void" num="143" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="y() : void" num="144" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="z() : void" num="145" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="w() : void" num="146" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="q() : void" num="147" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="runnable() : void" num="148" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="t() : void" num="149" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="x() : void" num="153" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="y() : void" num="154" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="z() : void" num="155" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="w() : void" num="156" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="q() : void" num="157" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="runnable() : void" num="158" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="t() : void" num="159" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="x() : void" num="163" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="y() : void" num="164" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="z() : void" num="165" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="w() : void" num="166" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="q() : void" num="167" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="runnable() : void" num="168" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="t() : void" num="169" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.junit.experimental.theories.internal">
         <metrics coveredelements="255" complexity="83" loc="545" methods="47" classes="7" statements="173" coveredconditionals="47" coveredmethods="45" elements="268" ncloc="425" files="6" conditionals="48" coveredstatements="163"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java" name="AllMembersSupplier.java">
            <metrics coveredelements="99" coveredconditionals="21" complexity="38" loc="204" coveredmethods="17" methods="18" elements="110" classes="2" ncloc="165" statements="70" conditionals="22" coveredstatements="61"/>
            <class name="AllMembersSupplier">
               <metrics coveredelements="89" coveredconditionals="21" complexity="32" coveredmethods="14" methods="15" elements="98" statements="61" conditionals="22" coveredstatements="54"/>
            </class>
            <class name="AllMembersSupplier.MethodParameterValue">
               <metrics coveredelements="10" coveredconditionals="0" complexity="6" coveredmethods="3" methods="3" elements="12" statements="9" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="private" signature="MethodParameterValue(FrameworkMethod)" num="27" count="11" type="method"/>
            <line num="28" count="11" type="stmt"/>
            <line complexity="4" visibility="public" signature="getValue() : Object" num="31" count="12" type="method"/>
            <line num="33" count="12" type="stmt"/>
            <line num="34" count="12" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="42" count="4" type="stmt"/>
            <line num="43" count="4" type="stmt"/>
            <line num="45" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescription() : String" num="49" count="3" type="method"/>
            <line num="51" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="AllMembersSupplier(TestClass)" num="60" count="128" type="method"/>
            <line num="61" count="128" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValueSources(ParameterSignature) : List&lt;PotentialAssignment&gt;" num="64" count="128" type="method"/>
            <line num="66" count="128" type="stmt"/>
            <line num="68" count="128" type="stmt"/>
            <line num="69" count="128" type="stmt"/>
            <line num="70" count="128" type="stmt"/>
            <line num="71" count="128" type="stmt"/>
            <line num="73" count="126" type="stmt"/>
            <line complexity="7" visibility="private" signature="addMultiPointMethods(ParameterSignature,List&lt;PotentialAssignment&gt;) : void" num="76" count="128" type="method"/>
            <line num="77" count="128" type="stmt"/>
            <line num="78" count="12" type="stmt"/>
            <line num="80" count="12" type="stmt"/>
            <line falsecount="1" truecount="11" num="80" type="cond"/>
            <line num="82" count="11" type="stmt"/>
            <line num="83" count="11" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="1" num="87" type="cond"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="addSinglePointMethods(ParameterSignature,List&lt;PotentialAssignment&gt;) : void" num="97" count="128" type="method"/>
            <line num="98" count="128" type="stmt"/>
            <line num="99" count="15" type="stmt"/>
            <line falsecount="4" truecount="11" num="99" type="cond"/>
            <line num="100" count="11" type="stmt"/>
            <line complexity="1" visibility="private" signature="addMultiPointFields(ParameterSignature,List&lt;PotentialAssignment&gt;) : void" num="105" count="128" type="method"/>
            <line num="106" count="128" type="stmt"/>
            <line num="107" count="35" type="stmt"/>
            <line num="108" count="35" type="stmt"/>
            <line complexity="2" visibility="private" signature="addSinglePointFields(ParameterSignature,List&lt;PotentialAssignment&gt;) : void" num="112" count="128" type="method"/>
            <line num="113" count="128" type="stmt"/>
            <line num="114" count="274" type="stmt"/>
            <line num="116" count="274" type="stmt"/>
            <line falsecount="141" truecount="133" num="116" type="cond"/>
            <line num="117" count="133" type="stmt"/>
            <line complexity="3" visibility="private" signature="addDataPointsValues(Class&lt;?&gt;,ParameterSignature,String,List&lt;PotentialAssignment&gt;,Object) : void" num="122" count="43" type="method"/>
            <line num="124" count="43" type="stmt"/>
            <line falsecount="4" truecount="39" num="124" type="cond"/>
            <line num="125" count="39" type="stmt"/>
            <line num="127" count="4" type="stmt"/>
            <line falsecount="1" truecount="3" num="127" type="cond"/>
            <line num="128" count="3" type="stmt"/>
            <line complexity="3" visibility="private" signature="addArrayValues(ParameterSignature,String,List&lt;PotentialAssignment&gt;,Object) : void" num="132" count="39" type="method"/>
            <line num="133" count="39" type="stmt"/>
            <line falsecount="39" truecount="112" num="133" type="cond"/>
            <line num="134" count="112" type="stmt"/>
            <line num="135" count="112" type="stmt"/>
            <line falsecount="28" truecount="84" num="135" type="cond"/>
            <line num="136" count="84" type="stmt"/>
            <line complexity="3" visibility="private" signature="addIterableValues(ParameterSignature,String,List&lt;PotentialAssignment&gt;,Iterable&lt;?&gt;) : void" num="141" count="3" type="method"/>
            <line num="142" count="3" type="stmt"/>
            <line num="143" count="3" type="stmt"/>
            <line num="144" count="3" type="stmt"/>
            <line falsecount="3" truecount="6" num="144" type="cond"/>
            <line num="145" count="6" type="stmt"/>
            <line num="146" count="6" type="stmt"/>
            <line falsecount="1" truecount="5" num="146" type="cond"/>
            <line num="147" count="5" type="stmt"/>
            <line num="149" count="6" type="stmt"/>
            <line complexity="3" visibility="private" signature="getStaticFieldValue(Field) : Object" num="153" count="309" type="method"/>
            <line num="154" count="309" type="stmt"/>
            <line num="155" count="309" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="isAssignableToAnyOf(Class&lt;?&gt;[],Object) : boolean" num="165" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="5" type="stmt"/>
            <line falsecount="3" truecount="2" num="167" type="cond"/>
            <line num="168" count="2" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getDataPointsMethods(ParameterSignature) : Collection&lt;FrameworkMethod&gt;" num="174" count="128" type="method"/>
            <line num="175" count="128" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getSingleDataPointFields(ParameterSignature) : Collection&lt;Field&gt;" num="178" count="128" type="method"/>
            <line num="179" count="128" type="stmt"/>
            <line num="180" count="128" type="stmt"/>
            <line num="182" count="128" type="stmt"/>
            <line num="183" count="285" type="stmt"/>
            <line num="186" count="128" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getDataPointsFields(ParameterSignature) : Collection&lt;Field&gt;" num="189" count="128" type="method"/>
            <line num="190" count="128" type="stmt"/>
            <line num="191" count="128" type="stmt"/>
            <line num="193" count="128" type="stmt"/>
            <line num="194" count="46" type="stmt"/>
            <line num="197" count="128" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getSingleDataPointMethods(ParameterSignature) : Collection&lt;FrameworkMethod&gt;" num="200" count="128" type="method"/>
            <line num="201" count="128" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/experimental/theories/internal/Assignments.java" name="Assignments.java">
            <metrics coveredelements="74" coveredconditionals="14" complexity="24" loc="153" coveredmethods="14" methods="15" elements="76" classes="1" ncloc="116" statements="47" conditionals="14" coveredstatements="46"/>
            <class name="Assignments">
               <metrics coveredelements="74" coveredconditionals="14" complexity="24" coveredmethods="14" methods="15" elements="76" statements="47" conditionals="14" coveredstatements="46"/>
            </class>
            <line complexity="1" visibility="private" signature="Assignments(List&lt;PotentialAssignment&gt;,List&lt;ParameterSignature&gt;,TestClass)" num="28" count="288" type="method"/>
            <line num="30" count="288" type="stmt"/>
            <line num="31" count="288" type="stmt"/>
            <line num="32" count="288" type="stmt"/>
            <line complexity="1" visibility="public" signature="allUnassigned(Method,TestClass) : Assignments" num="39" count="86" type="method"/>
            <line num="41" count="86" type="stmt"/>
            <line num="42" count="86" type="stmt"/>
            <line num="44" count="86" type="stmt"/>
            <line num="45" count="86" type="stmt"/>
            <line complexity="1" visibility="public" signature="isComplete() : boolean" num="49" count="273" type="method"/>
            <line num="50" count="273" type="stmt"/>
            <line complexity="1" visibility="public" signature="nextUnassigned() : ParameterSignature" num="53" count="122" type="method"/>
            <line num="54" count="122" type="stmt"/>
            <line complexity="1" visibility="public" signature="assignNext(PotentialAssignment) : Assignments" num="57" count="202" type="method"/>
            <line num="58" count="202" type="stmt"/>
            <line num="59" count="202" type="stmt"/>
            <line num="61" count="202" type="stmt"/>
            <line complexity="2" visibility="public" signature="getActualValues(int,int) : Object[]" num="65" count="331" type="method"/>
            <line num="67" count="331" type="stmt"/>
            <line num="68" count="331" type="stmt"/>
            <line falsecount="327" truecount="267" num="68" type="cond"/>
            <line num="69" count="267" type="stmt"/>
            <line num="71" count="327" type="stmt"/>
            <line complexity="2" visibility="public" signature="potentialsForNextUnassigned() : List&lt;PotentialAssignment&gt;" num="74" count="121" type="method"/>
            <line num="76" count="121" type="stmt"/>
            <line num="77" count="121" type="stmt"/>
            <line num="79" count="120" type="stmt"/>
            <line falsecount="115" truecount="5" num="79" type="cond"/>
            <line num="80" count="5" type="stmt"/>
            <line num="83" count="120" type="stmt"/>
            <line complexity="4" visibility="private" signature="generateAssignmentsFromTypeAlone(ParameterSignature) : List&lt;PotentialAssignment&gt;" num="86" count="5" type="method"/>
            <line num="87" count="5" type="stmt"/>
            <line num="89" count="5" type="stmt"/>
            <line falsecount="4" truecount="1" num="89" type="cond"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="4" type="stmt"/>
            <line falsecount="3" truecount="1" num="91" type="cond"/>
            <line num="92" count="1" type="stmt"/>
            <line num="94" count="3" type="stmt"/>
            <line complexity="2" visibility="private" signature="getSupplier(ParameterSignature) : ParameterSupplier" num="98" count="121" type="method"/>
            <line num="100" count="121" type="stmt"/>
            <line num="103" count="121" type="stmt"/>
            <line falsecount="118" truecount="3" num="103" type="cond"/>
            <line num="104" count="3" type="stmt"/>
            <line num="106" count="118" type="stmt"/>
            <line complexity="3" visibility="private" signature="buildParameterSupplierFromClass(Class&lt;? extends ParameterSupplier&gt;) : ParameterSupplier" num="110" count="3" type="method"/>
            <line num="112" count="3" type="stmt"/>
            <line num="114" count="3" type="stmt"/>
            <line num="115" count="3" type="stmt"/>
            <line num="116" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="116" type="cond"/>
            <line num="118" count="1" type="stmt"/>
            <line num="122" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConstructorArguments() : Object[]" num="125" count="166" type="method"/>
            <line num="127" count="166" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMethodArguments() : Object[]" num="130" count="165" type="method"/>
            <line num="131" count="165" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAllArguments() : Object[]" num="134" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getConstructorParameterCount() : int" num="138" count="331" type="method"/>
            <line num="139" count="331" type="stmt"/>
            <line num="141" count="331" type="stmt"/>
            <line num="142" count="331" type="stmt"/>
            <line complexity="2" visibility="public" signature="getArgumentStrings(boolean) : Object[]" num="145" count="8" type="method"/>
            <line num="147" count="8" type="stmt"/>
            <line num="148" count="8" type="stmt"/>
            <line falsecount="8" truecount="7" num="148" type="cond"/>
            <line num="149" count="7" type="stmt"/>
            <line num="151" count="8" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/experimental/theories/internal/BooleanSupplier.java" name="BooleanSupplier.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="18" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="BooleanSupplier">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="getValueSources(ParameterSignature) : List&lt;PotentialAssignment&gt;" num="12" count="1" type="method"/>
            <line num="14" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/experimental/theories/internal/EnumSupplier.java" name="EnumSupplier.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="2" loc="30" coveredmethods="2" methods="2" elements="8" classes="1" ncloc="21" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="EnumSupplier">
               <metrics coveredelements="8" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="8" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="EnumSupplier(Class&lt;?&gt;)" num="14" count="1" type="method"/>
            <line num="15" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValueSources(ParameterSignature) : List&lt;PotentialAssignment&gt;" num="18" count="1" type="method"/>
            <line num="20" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line num="24" count="3" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/experimental/theories/internal/ParameterizedAssertionError.java" name="ParameterizedAssertionError.java">
            <metrics coveredelements="26" coveredconditionals="4" complexity="9" loc="50" coveredmethods="6" methods="6" elements="26" classes="1" ncloc="41" statements="16" conditionals="4" coveredstatements="16"/>
            <class name="ParameterizedAssertionError">
               <metrics coveredelements="26" coveredconditionals="4" complexity="9" coveredmethods="6" methods="6" elements="26" statements="16" conditionals="4" coveredstatements="16"/>
            </class>
            <line complexity="1" visibility="public" signature="ParameterizedAssertionError(Throwable,String,Object)" num="10" count="26" type="method"/>
            <line num="12" count="26" type="stmt"/>
            <line num="13" count="26" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="16" count="29" type="method"/>
            <line num="18" count="29" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="21" count="8" type="method"/>
            <line num="23" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="join(String,Object) : String" num="26" count="27" type="method"/>
            <line num="27" count="27" type="stmt"/>
            <line complexity="3" visibility="public" signature="join(String,Collection&lt;Object&gt;) : String" num="30" count="27" type="method"/>
            <line num="31" count="27" type="stmt"/>
            <line num="32" count="27" type="stmt"/>
            <line num="33" count="27" type="stmt"/>
            <line falsecount="27" truecount="9" num="33" type="cond"/>
            <line num="34" count="9" type="stmt"/>
            <line num="35" count="9" type="stmt"/>
            <line num="36" count="9" type="stmt"/>
            <line falsecount="8" truecount="1" num="36" type="cond"/>
            <line num="37" count="1" type="stmt"/>
            <line num="40" count="27" type="stmt"/>
            <line complexity="2" visibility="private" signature="stringValueOf(Object) : String" num="43" count="9" type="method"/>
            <line num="44" count="9" type="stmt"/>
            <line num="45" count="9" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/experimental/theories/internal/SpecificDataPointsSupplier.java" name="SpecificDataPointsSupplier.java">
            <metrics coveredelements="46" coveredconditionals="8" complexity="9" loc="90" coveredmethods="5" methods="5" elements="46" classes="1" ncloc="69" statements="33" conditionals="8" coveredstatements="33"/>
            <class name="SpecificDataPointsSupplier">
               <metrics coveredelements="46" coveredconditionals="8" complexity="9" coveredmethods="5" methods="5" elements="46" statements="33" conditionals="8" coveredstatements="33"/>
            </class>
            <line complexity="1" visibility="public" signature="SpecificDataPointsSupplier(TestClass)" num="18" count="7" type="method"/>
            <line num="19" count="7" type="stmt"/>
            <line complexity="2" visibility="protected" signature="getSingleDataPointFields(ParameterSignature) : Collection&lt;Field&gt;" num="22" count="7" type="method"/>
            <line num="24" count="7" type="stmt"/>
            <line num="25" count="7" type="stmt"/>
            <line num="27" count="7" type="stmt"/>
            <line num="29" count="7" type="stmt"/>
            <line num="30" count="14" type="stmt"/>
            <line num="31" count="14" type="stmt"/>
            <line falsecount="11" truecount="3" num="31" type="cond"/>
            <line num="32" count="3" type="stmt"/>
            <line num="36" count="7" type="stmt"/>
            <line complexity="2" visibility="protected" signature="getDataPointsFields(ParameterSignature) : Collection&lt;Field&gt;" num="39" count="7" type="method"/>
            <line num="41" count="7" type="stmt"/>
            <line num="42" count="7" type="stmt"/>
            <line num="44" count="7" type="stmt"/>
            <line num="46" count="7" type="stmt"/>
            <line num="47" count="14" type="stmt"/>
            <line num="48" count="14" type="stmt"/>
            <line falsecount="11" truecount="3" num="48" type="cond"/>
            <line num="49" count="3" type="stmt"/>
            <line num="53" count="7" type="stmt"/>
            <line complexity="2" visibility="protected" signature="getSingleDataPointMethods(ParameterSignature) : Collection&lt;FrameworkMethod&gt;" num="56" count="7" type="method"/>
            <line num="58" count="7" type="stmt"/>
            <line num="59" count="7" type="stmt"/>
            <line num="61" count="7" type="stmt"/>
            <line num="63" count="7" type="stmt"/>
            <line num="64" count="14" type="stmt"/>
            <line num="65" count="14" type="stmt"/>
            <line falsecount="11" truecount="3" num="65" type="cond"/>
            <line num="66" count="3" type="stmt"/>
            <line num="70" count="7" type="stmt"/>
            <line complexity="2" visibility="protected" signature="getDataPointsMethods(ParameterSignature) : Collection&lt;FrameworkMethod&gt;" num="73" count="7" type="method"/>
            <line num="75" count="7" type="stmt"/>
            <line num="76" count="7" type="stmt"/>
            <line num="78" count="7" type="stmt"/>
            <line num="80" count="7" type="stmt"/>
            <line num="81" count="14" type="stmt"/>
            <line num="82" count="14" type="stmt"/>
            <line falsecount="11" truecount="3" num="82" type="cond"/>
            <line num="83" count="3" type="stmt"/>
            <line num="87" count="7" type="stmt"/>
         </file>
      </package>
      <package name="org.junit.function">
         <metrics coveredelements="0" complexity="0" loc="14" methods="0" classes="1" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="4" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/function/ThrowingRunnable.java" name="ThrowingRunnable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="14" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ThrowingRunnable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="org.junit.runners.parameterized">
         <metrics coveredelements="180" complexity="68" loc="617" methods="47" classes="17" statements="148" coveredconditionals="28" coveredmethods="38" elements="227" ncloc="498" files="8" conditionals="32" coveredstatements="114"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runners/parameterized/BlockJUnit4ClassRunnerWithParameters.java" name="BlockJUnit4ClassRunnerWithParameters.java">
            <metrics coveredelements="103" coveredconditionals="24" complexity="37" loc="219" coveredmethods="19" methods="19" elements="119" classes="4" ncloc="191" statements="74" conditionals="26" coveredstatements="60"/>
            <class name="BlockJUnit4ClassRunnerWithParameters">
               <metrics coveredelements="89" coveredconditionals="20" complexity="31" coveredmethods="15" methods="15" elements="105" statements="68" conditionals="22" coveredstatements="54"/>
            </class>
            <class name="BlockJUnit4ClassRunnerWithParameters.InjectionType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="BlockJUnit4ClassRunnerWithParameters.RunBeforeParams">
               <metrics coveredelements="7" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="7" statements="3" conditionals="2" coveredstatements="3"/>
            </class>
            <class name="BlockJUnit4ClassRunnerWithParameters.RunAfterParams">
               <metrics coveredelements="7" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="7" statements="3" conditionals="2" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="BlockJUnit4ClassRunnerWithParameters(TestWithParameters)" num="33" count="211" type="method"/>
            <line num="35" count="211" type="stmt"/>
            <line num="36" count="211" type="stmt"/>
            <line num="38" count="211" type="stmt"/>
            <line complexity="3" visibility="public" signature="createTest() : Object" num="41" count="129" type="method"/>
            <line num="43" count="129" type="stmt"/>
            <line num="44" count="129" type="stmt"/>
            <line num="45" count="79" type="stmt"/>
            <line num="46" count="79" type="stmt"/>
            <line num="47" count="50" type="stmt"/>
            <line num="48" count="50" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="createTestUsingConstructorInjection() : Object" num="55" count="79" type="method"/>
            <line num="56" count="79" type="stmt"/>
            <line complexity="4" visibility="private" signature="createTestUsingFieldInjection() : Object" num="59" count="50" type="method"/>
            <line num="60" count="50" type="stmt"/>
            <line num="61" count="50" type="stmt"/>
            <line falsecount="0" truecount="1" num="61" type="cond"/>
            <line num="62" count="1" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="93" count="48" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getName() : String" num="96" count="4242" type="method"/>
            <line num="98" count="4242" type="stmt"/>
            <line complexity="1" visibility="protected" signature="testName(FrameworkMethod) : String" num="101" count="230" type="method"/>
            <line num="103" count="230" type="stmt"/>
            <line complexity="2" visibility="protected" signature="validateConstructor(List&lt;Throwable&gt;) : void" num="106" count="214" type="method"/>
            <line num="108" count="214" type="stmt"/>
            <line num="109" count="214" type="stmt"/>
            <line falsecount="147" truecount="67" num="109" type="cond"/>
            <line num="110" count="67" type="stmt"/>
            <line complexity="7" visibility="protected" signature="validateFields(List&lt;Throwable&gt;) : void" num="114" count="214" type="method"/>
            <line num="116" count="214" type="stmt"/>
            <line num="117" count="214" type="stmt"/>
            <line falsecount="147" truecount="67" num="117" type="cond"/>
            <line num="118" count="67" type="stmt"/>
            <line num="119" count="67" type="stmt"/>
            <line num="120" count="67" type="stmt"/>
            <line num="121" count="135" type="stmt"/>
            <line num="123" count="135" type="stmt"/>
            <line falsecount="134" truecount="1" num="123" type="cond"/>
            <line num="124" count="1" type="stmt"/>
            <line num="130" count="134" type="stmt"/>
            <line num="133" count="67" type="stmt"/>
            <line falsecount="67" truecount="135" num="133" type="cond"/>
            <line num="134" count="135" type="stmt"/>
            <line num="135" count="135" type="stmt"/>
            <line falsecount="134" truecount="1" num="135" type="cond"/>
            <line num="136" count="1" type="stmt"/>
            <line num="138" count="134" type="stmt"/>
            <line falsecount="134" truecount="0" num="138" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="classBlock(RunNotifier) : Statement" num="146" count="113" type="method"/>
            <line num="148" count="113" type="stmt"/>
            <line num="149" count="113" type="stmt"/>
            <line num="150" count="113" type="stmt"/>
            <line num="151" count="113" type="stmt"/>
            <line complexity="2" visibility="private" signature="withBeforeParams(Statement) : Statement" num="154" count="113" type="method"/>
            <line num="155" count="113" type="stmt"/>
            <line num="157" count="113" type="stmt"/>
            <line falsecount="6" truecount="107" num="157" type="cond"/>
            <line complexity="1" visibility="package" signature="RunBeforeParams(Statement,List&lt;FrameworkMethod&gt;)" num="161" count="6" type="method"/>
            <line num="162" count="6" type="stmt"/>
            <line complexity="2" visibility="protected" signature="invokeMethod(FrameworkMethod) : void" num="165" count="8" type="method"/>
            <line num="167" count="8" type="stmt"/>
            <line num="168" count="8" type="stmt"/>
            <line falsecount="6" truecount="2" num="168" type="cond"/>
            <line complexity="2" visibility="private" signature="withAfterParams(Statement) : Statement" num="172" count="113" type="method"/>
            <line num="173" count="113" type="stmt"/>
            <line num="175" count="113" type="stmt"/>
            <line falsecount="6" truecount="107" num="175" type="cond"/>
            <line complexity="1" visibility="package" signature="RunAfterParams(Statement,List&lt;FrameworkMethod&gt;)" num="179" count="6" type="method"/>
            <line num="180" count="6" type="stmt"/>
            <line complexity="2" visibility="protected" signature="invokeMethod(FrameworkMethod) : void" num="183" count="8" type="method"/>
            <line num="185" count="8" type="stmt"/>
            <line num="186" count="8" type="stmt"/>
            <line falsecount="4" truecount="4" num="186" type="cond"/>
            <line complexity="2" visibility="protected" signature="getRunnerAnnotations() : Annotation[]" num="190" count="2007" type="method"/>
            <line num="192" count="2007" type="stmt"/>
            <line num="193" count="2007" type="stmt"/>
            <line num="194" count="2007" type="stmt"/>
            <line num="195" count="2007" type="stmt"/>
            <line num="196" count="2066" type="stmt"/>
            <line falsecount="2007" truecount="59" num="196" type="cond"/>
            <line num="197" count="59" type="stmt"/>
            <line num="198" count="59" type="stmt"/>
            <line num="201" count="2007" type="stmt"/>
            <line complexity="1" visibility="private" signature="getAnnotatedFieldsByParameter() : List&lt;FrameworkField&gt;" num="204" count="674" type="method"/>
            <line num="205" count="674" type="stmt"/>
            <line complexity="2" visibility="private" signature="getInjectionType() : InjectionType" num="208" count="557" type="method"/>
            <line num="209" count="557" type="stmt"/>
            <line falsecount="373" truecount="184" num="209" type="cond"/>
            <line num="210" count="184" type="stmt"/>
            <line num="212" count="373" type="stmt"/>
            <line complexity="1" visibility="private" signature="fieldsAreAnnotated() : boolean" num="216" count="557" type="method"/>
            <line num="217" count="557" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runners/parameterized/BlockJUnit4ClassRunnerWithParametersFactory.java" name="BlockJUnit4ClassRunnerWithParametersFactory.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="18" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="BlockJUnit4ClassRunnerWithParametersFactory">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="createRunnerForTestWithParameters(TestWithParameters) : Runner" num="14" count="212" type="method"/>
            <line num="16" count="212" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runners/parameterized/ParametersRunnerFactory.java" name="ParametersRunnerFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="21" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ParametersRunnerFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runners/parameterized/TestWithParameters.java" name="TestWithParameters.java">
            <metrics coveredelements="31" coveredconditionals="4" complexity="10" loc="77" coveredmethods="7" methods="7" elements="35" classes="1" ncloc="57" statements="22" conditionals="6" coveredstatements="20"/>
            <class name="TestWithParameters">
               <metrics coveredelements="31" coveredconditionals="4" complexity="10" coveredmethods="7" methods="7" elements="35" statements="22" conditionals="6" coveredstatements="20"/>
            </class>
            <line complexity="1" visibility="public" signature="TestWithParameters(String,TestClass,List&lt;Object&gt;)" num="25" count="233" type="method"/>
            <line num="27" count="233" type="stmt"/>
            <line num="28" count="232" type="stmt"/>
            <line num="29" count="231" type="stmt"/>
            <line num="30" count="230" type="stmt"/>
            <line num="31" count="230" type="stmt"/>
            <line num="32" count="230" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="35" count="211" type="method"/>
            <line num="36" count="211" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTestClass() : TestClass" num="39" count="214" type="method"/>
            <line num="40" count="214" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameters() : List&lt;Object&gt;" num="43" count="424" type="method"/>
            <line num="44" count="424" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="47" count="2" type="method"/>
            <line num="49" count="2" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="equals(Object) : boolean" num="55" count="5" type="method"/>
            <line num="57" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="5" type="stmt"/>
            <line falsecount="4" truecount="1" num="63" type="cond"/>
            <line num="64" count="1" type="stmt"/>
            <line num="66" count="4" type="stmt"/>
            <line num="67" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="72" count="1" type="method"/>
            <line num="74" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/runners/parameterized/AllParameterizedTests.java" name="AllParameterizedTests.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="14" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AllParameterizedTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/runners/parameterized/BlockJUnit4ClassRunnerWithParametersTest.java" name="BlockJUnit4ClassRunnerWithParametersTest.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="4" loc="80" coveredmethods="1" methods="4" elements="15" classes="4" ncloc="66" statements="11" conditionals="0" coveredstatements="5"/>
            <class name="BlockJUnit4ClassRunnerWithParametersTest">
               <metrics coveredelements="6" complexity="2" methods="2" testruns="2" statements="11" coveredconditionals="0" coveredmethods="1" elements="13" testfailures="1" testduration="0.007" conditionals="0" coveredstatements="5" testpasses="1"/>
            </class>
            <class name="BlockJUnit4ClassRunnerWithParametersTest.ClassWithParameterizedAnnotation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="BlockJUnit4ClassRunnerWithParametersTest.DummyAnnotation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="BlockJUnit4ClassRunnerWithParametersTest.ClassWithPrivateParameter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="dummyTest() : void" num="32" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="hasAllAnnotationsExceptRunWith() : void" num="37" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="dummyTest() : void" num="59" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="providesHelpfulMessageIfParameterFieldCannotBeSet() : void" num="64" testsuccess="false" count="0" testduration="0.004" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/runners/parameterized/ParameterizedNamesTest.java" name="ParameterizedNamesTest.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="4" loc="51" coveredmethods="2" methods="4" elements="9" classes="2" ncloc="39" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="ParameterizedNamesTest">
               <metrics coveredelements="5" complexity="1" methods="1" testruns="1" statements="4" coveredconditionals="0" coveredmethods="1" elements="5" testfailures="0" testduration="0.015" conditionals="0" coveredstatements="4" testpasses="1"/>
            </class>
            <class name="ParameterizedNamesTest.ParameterizedWithSpecialCharsInName">
               <metrics coveredelements="2" coveredconditionals="0" complexity="3" coveredmethods="1" methods="3" elements="4" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="ParameterizedWithSpecialCharsInName(String)" num="22" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="data() : Collection&lt;Object[]&gt;" num="25" count="1" type="method"/>
            <line num="27" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="37" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="parameterizedTestsWithSpecialCharsInName() : void" num="42" testsuccess="true" count="1" testduration="0.015" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="6" type="stmt"/>
            <line num="47" count="6" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/runners/parameterized/TestWithParametersTest.java" name="TestWithParametersTest.java">
            <metrics coveredelements="31" coveredconditionals="0" complexity="12" loc="137" coveredmethods="8" methods="12" elements="47" classes="3" ncloc="116" statements="35" conditionals="0" coveredstatements="23"/>
            <class name="TestWithParametersTest">
               <metrics coveredelements="31" complexity="12" methods="12" testruns="12" statements="35" coveredconditionals="0" coveredmethods="8" elements="47" testfailures="4" testduration="0.012000000000000002" conditionals="0" coveredstatements="23" testpasses="8"/>
            </class>
            <class name="TestWithParametersTest.DummyClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestWithParametersTest.AnotherDummyClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="cannotBeCreatedWithoutAName() : void" num="28" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cannotBeCreatedWithoutTestClass() : void" num="35" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cannotBeCreatedWithoutParameters() : void" num="42" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="doesNotAllowToModifyProvidedParameters() : void" num="50" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="doesNotConsiderParametersWhichChangedAfterTestInstantiation() : void" num="58" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isEqualToTestWithSameNameAndTestClassAndParameters() : void" num="67" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNotEqualToTestWithDifferentName() : void" num="78" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNotEqualToTestWithDifferentTestClass() : void" num="87" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="89" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNotEqualToTestWithDifferentParameters() : void" num="96" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="98" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNotEqualToObjectWithDifferentClass() : void" num="105" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="107" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasSameHashCodeAsEqualTest() : void" num="112" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="114" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasMeaningfulToString() : void" num="121" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="123" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
         </file>
      </package>
      <package name="junit.extensions">
         <metrics coveredelements="58" complexity="29" loc="194" methods="24" classes="4" statements="39" coveredconditionals="7" coveredmethods="19" elements="71" ncloc="129" files="4" conditionals="8" coveredstatements="32"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/junit/extensions/ActiveTestSuite.java" name="ActiveTestSuite.java">
            <metrics coveredelements="21" coveredconditionals="2" complexity="11" loc="70" coveredmethods="6" methods="9" elements="28" classes="1" ncloc="51" statements="17" conditionals="2" coveredstatements="13"/>
            <class name="ActiveTestSuite">
               <metrics coveredelements="21" complexity="11" methods="9" testruns="16" statements="17" coveredconditionals="2" coveredmethods="6" elements="28" testfailures="0" testduration="0.001" conditionals="2" coveredstatements="13" testpasses="16"/>
            </class>
            <line complexity="1" visibility="public" signature="ActiveTestSuite()" num="17" count="4" type="method"/>
            <line complexity="1" visibility="public" signature="ActiveTestSuite(Class&lt;? extends TestCase&gt;)" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ActiveTestSuite(String)" num="24" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ActiveTestSuite(Class&lt;? extends TestCase&gt;,String)" num="28" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(TestResult) : void" num="32" count="7" type="method"/>
            <line num="34" count="7" type="stmt"/>
            <line num="35" count="7" type="stmt"/>
            <line num="36" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="runTest(Test,TestResult) : void" num="39" count="700" type="method"/>
            <line num="41" count="700" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="42" count="700" type="method"/>
            <line num="44" count="700" type="stmt"/>
            <line num="47" count="700" type="stmt"/>
            <line num="49" count="700" type="stmt"/>
            <line num="53" count="700" type="stmt"/>
            <line complexity="3" visibility="package" signature="waitUntilFinished() : void" num="56" count="7" type="method"/>
            <line num="57" count="7" type="stmt"/>
            <line falsecount="7" truecount="12" num="57" type="cond"/>
            <line num="58" count="12" type="stmt"/>
            <line num="59" count="12" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="runFinished() : void" num="66" count="700" type="method"/>
            <line num="67" count="700" type="stmt"/>
            <line num="68" count="700" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/junit/extensions/RepeatedTest.java" name="RepeatedTest.java">
            <metrics coveredelements="16" coveredconditionals="5" complexity="7" loc="39" coveredmethods="3" methods="4" elements="20" classes="1" ncloc="29" statements="10" conditionals="6" coveredstatements="8"/>
            <class name="RepeatedTest">
               <metrics coveredelements="16" coveredconditionals="5" complexity="7" coveredmethods="3" methods="4" elements="20" statements="10" conditionals="6" coveredstatements="8"/>
            </class>
            <line complexity="2" visibility="public" signature="RepeatedTest(Test,int)" num="12" count="7" type="method"/>
            <line num="13" count="7" type="stmt"/>
            <line num="14" count="7" type="stmt"/>
            <line falsecount="6" truecount="1" num="14" type="cond"/>
            <line num="15" count="1" type="stmt"/>
            <line num="17" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="countTestCases() : int" num="20" count="3" type="method"/>
            <line num="22" count="3" type="stmt"/>
            <line complexity="3" visibility="public" signature="run(TestResult) : void" num="25" count="6" type="method"/>
            <line num="27" count="6" type="stmt"/>
            <line falsecount="6" truecount="10" num="27" type="cond"/>
            <line num="28" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="28" type="cond"/>
            <line num="29" count="0" type="stmt"/>
            <line num="31" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/junit/extensions/TestDecorator.java" name="TestDecorator.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="6" loc="43" coveredmethods="5" methods="6" elements="12" classes="1" ncloc="26" statements="6" conditionals="0" coveredstatements="5"/>
            <class name="TestDecorator">
               <metrics coveredelements="10" coveredconditionals="0" complexity="6" coveredmethods="5" methods="6" elements="12" statements="6" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="TestDecorator(Test)" num="16" count="12" type="method"/>
            <line num="17" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="basicRun(TestResult) : void" num="23" count="12" type="method"/>
            <line num="24" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="countTestCases() : int" num="27" count="3" type="method"/>
            <line num="28" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(TestResult) : void" num="31" count="10" type="method"/>
            <line num="32" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTest() : Test" num="40" count="1" type="method"/>
            <line num="41" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/junit/extensions/TestSetup.java" name="TestSetup.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="5" loc="42" coveredmethods="5" methods="5" elements="11" classes="1" ncloc="23" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="TestSetup">
               <metrics coveredelements="11" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="11" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="TestSetup(Test)" num="14" count="4" type="method"/>
            <line num="15" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(TestResult) : void" num="18" count="4" type="method"/>
            <line num="20" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="protect() : void" num="21" count="4" type="method"/>
            <line num="22" count="4" type="stmt"/>
            <line num="23" count="2" type="stmt"/>
            <line num="24" count="2" type="stmt"/>
            <line num="27" count="4" type="stmt"/>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="33" count="2" type="method"/>
            <line complexity="1" visibility="protected" signature="tearDown() : void" num="40" count="2" type="method"/>
         </file>
      </package>
      <package name="org.junit.internal.runners.statements">
         <metrics coveredelements="282" complexity="100" loc="774" methods="54" classes="16" statements="217" coveredconditionals="34" coveredmethods="52" elements="317" ncloc="563" files="8" conditionals="46" coveredstatements="196"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/runners/statements/ExpectException.java" name="ExpectException.java">
            <metrics coveredelements="21" coveredconditionals="6" complexity="7" loc="38" coveredmethods="2" methods="2" elements="21" classes="1" ncloc="33" statements="13" conditionals="6" coveredstatements="13"/>
            <class name="ExpectException">
               <metrics coveredelements="21" coveredconditionals="6" complexity="7" coveredmethods="2" methods="2" elements="21" statements="13" conditionals="6" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="ExpectException(Statement,Class&lt;? extends Throwable&gt;)" num="10" count="69" type="method"/>
            <line num="11" count="69" type="stmt"/>
            <line num="12" count="69" type="stmt"/>
            <line complexity="6" visibility="public" signature="evaluate() : void" num="15" count="69" type="method"/>
            <line num="17" count="69" type="stmt"/>
            <line num="18" count="69" type="stmt"/>
            <line num="19" count="69" type="stmt"/>
            <line num="20" count="5" type="stmt"/>
            <line num="22" count="4" type="stmt"/>
            <line falsecount="3" truecount="1" num="22" type="cond"/>
            <line num="23" count="1" type="stmt"/>
            <line num="26" count="60" type="stmt"/>
            <line falsecount="58" truecount="2" num="26" type="cond"/>
            <line num="27" count="2" type="stmt"/>
            <line num="30" count="2" type="stmt"/>
            <line num="33" count="66" type="stmt"/>
            <line falsecount="61" truecount="5" num="33" type="cond"/>
            <line num="34" count="5" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/runners/statements/Fail.java" name="Fail.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="16" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="12" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="Fail">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="Fail(Throwable)" num="8" count="10" type="method"/>
            <line num="9" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : void" num="12" count="10" type="method"/>
            <line num="14" count="10" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java" name="FailOnTimeout.java">
            <metrics coveredelements="108" coveredconditionals="20" complexity="41" loc="301" coveredmethods="14" methods="16" elements="134" classes="3" ncloc="187" statements="88" conditionals="30" coveredstatements="74"/>
            <class name="FailOnTimeout">
               <metrics coveredelements="81" coveredconditionals="16" complexity="30" coveredmethods="8" methods="10" elements="103" statements="69" conditionals="24" coveredstatements="57"/>
            </class>
            <class name="FailOnTimeout.Builder">
               <metrics coveredelements="18" coveredconditionals="4" complexity="7" coveredmethods="4" methods="4" elements="22" statements="12" conditionals="6" coveredstatements="10"/>
            </class>
            <class name="FailOnTimeout.CallableStatement">
               <metrics coveredelements="9" coveredconditionals="0" complexity="4" coveredmethods="2" methods="2" elements="9" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="builder() : Builder" num="30" count="36" type="method"/>
            <line num="31" count="36" type="stmt"/>
            <line complexity="1" visibility="public" signature="FailOnTimeout(Statement,long)" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="FailOnTimeout(Builder,Statement)" num="46" count="35" type="method"/>
            <line num="47" count="35" type="stmt"/>
            <line num="48" count="35" type="stmt"/>
            <line num="49" count="35" type="stmt"/>
            <line num="50" count="35" type="stmt"/>
            <line complexity="1" visibility="private" signature="Builder()" num="63" count="36" type="method"/>
            <line complexity="3" visibility="public" signature="withTimeout(long,TimeUnit) : Builder" num="79" count="36" type="method"/>
            <line num="80" count="36" type="stmt"/>
            <line falsecount="36" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="36" type="stmt"/>
            <line falsecount="35" truecount="1" num="83" type="cond"/>
            <line num="84" count="1" type="stmt"/>
            <line num="86" count="35" type="stmt"/>
            <line num="87" count="35" type="stmt"/>
            <line num="88" count="35" type="stmt"/>
            <line complexity="1" visibility="public" signature="withLookingForStuckThread(boolean) : Builder" num="100" count="16" type="method"/>
            <line num="101" count="16" type="stmt"/>
            <line num="102" count="16" type="stmt"/>
            <line complexity="2" visibility="public" signature="build(Statement) : FailOnTimeout" num="111" count="35" type="method"/>
            <line num="112" count="35" type="stmt"/>
            <line falsecount="35" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="35" type="stmt"/>
            <line complexity="4" visibility="public" signature="evaluate() : void" num="119" count="34" type="method"/>
            <line num="121" count="34" type="stmt"/>
            <line num="122" count="34" type="stmt"/>
            <line num="123" count="34" type="stmt"/>
            <line num="124" count="34" type="stmt"/>
            <line num="125" count="34" type="stmt"/>
            <line num="126" count="34" type="stmt"/>
            <line num="127" count="34" type="stmt"/>
            <line num="128" count="34" type="stmt"/>
            <line num="129" count="34" type="stmt"/>
            <line num="130" count="34" type="stmt"/>
            <line falsecount="4" truecount="30" num="130" type="cond"/>
            <line num="131" count="30" type="stmt"/>
            <line num="134" count="34" type="stmt"/>
            <line num="135" count="34" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="34" type="stmt"/>
            <line num="140" count="34" type="stmt"/>
            <line complexity="5" visibility="private" signature="getResult(FutureTask&lt;Throwable&gt;,Thread) : Throwable" num="153" count="34" type="method"/>
            <line num="154" count="34" type="stmt"/>
            <line num="155" count="34" type="stmt"/>
            <line falsecount="1" truecount="33" num="155" type="cond"/>
            <line num="156" count="33" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="164" count="5" type="stmt"/>
            <line num="166" count="24" type="stmt"/>
            <line complexity="4" visibility="private" signature="createTimeoutException(Thread) : Exception" num="170" count="24" type="method"/>
            <line num="171" count="24" type="stmt"/>
            <line num="172" count="24" type="stmt"/>
            <line falsecount="22" truecount="2" num="172" type="cond"/>
            <line num="173" count="24" type="stmt"/>
            <line num="174" count="24" type="stmt"/>
            <line falsecount="0" truecount="24" num="174" type="cond"/>
            <line num="175" count="24" type="stmt"/>
            <line num="176" count="24" type="stmt"/>
            <line num="178" count="24" type="stmt"/>
            <line falsecount="23" truecount="0" num="178" type="cond"/>
            <line num="179" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="186" count="23" type="stmt"/>
            <line complexity="2" visibility="private" signature="getStackTrace(Thread) : StackTraceElement[]" num="196" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="getStuckThread(Thread) : Thread" num="214" count="2" type="method"/>
            <line num="215" count="2" type="stmt"/>
            <line num="216" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="216" type="cond"/>
            <line num="217" count="0" type="stmt"/>
            <line num="225" count="2" type="stmt"/>
            <line num="226" count="2" type="stmt"/>
            <line num="227" count="2" type="stmt"/>
            <line num="228" count="8" type="stmt"/>
            <line falsecount="6" truecount="2" num="228" type="cond"/>
            <line num="229" count="2" type="stmt"/>
            <line num="230" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="230" type="cond"/>
            <line num="231" count="2" type="stmt"/>
            <line num="232" count="2" type="stmt"/>
            <line num="236" count="2" type="stmt"/>
            <line falsecount="0" truecount="1" num="236" type="cond"/>
            <line complexity="3" visibility="private" signature="getThreadsInGroup(ThreadGroup) : List&lt;Thread&gt;" num="247" count="2" type="method"/>
            <line num="248" count="2" type="stmt"/>
            <line num="249" count="2" type="stmt"/>
            <line num="250" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="250" type="cond"/>
            <line num="251" count="2" type="stmt"/>
            <line num="252" count="2" type="stmt"/>
            <line num="253" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="253" type="cond"/>
            <line num="254" count="2" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="cpuTime(Thread) : long" num="271" count="2" type="method"/>
            <line num="272" count="2" type="stmt"/>
            <line num="273" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="273" type="cond"/>
            <line num="274" count="2" type="stmt"/>
            <line num="275" count="2" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="call() : Throwable" num="285" count="34" type="method"/>
            <line num="286" count="34" type="stmt"/>
            <line num="287" count="34" type="stmt"/>
            <line num="288" count="34" type="stmt"/>
            <line num="290" count="20" type="stmt"/>
            <line num="292" count="1" type="stmt"/>
            <line num="294" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="awaitStarted() : void" num="297" count="34" type="method"/>
            <line num="298" count="34" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/runners/statements/InvokeMethod.java" name="InvokeMethod.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="2" loc="19" coveredmethods="2" methods="2" elements="5" classes="1" ncloc="14" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="InvokeMethod">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="InvokeMethod(FrameworkMethod,Object)" num="10" count="1400" type="method"/>
            <line num="11" count="1400" type="stmt"/>
            <line num="12" count="1400" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : void" num="15" count="1390" type="method"/>
            <line num="17" count="1390" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/runners/statements/RunAfters.java" name="RunAfters.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="5" loc="48" coveredmethods="3" methods="3" elements="16" classes="1" ncloc="36" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="RunAfters">
               <metrics coveredelements="16" coveredconditionals="0" complexity="5" coveredmethods="3" methods="3" elements="16" statements="13" conditionals="0" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="RunAfters(Statement,List&lt;FrameworkMethod&gt;,Object)" num="17" count="94" type="method"/>
            <line num="18" count="94" type="stmt"/>
            <line num="19" count="94" type="stmt"/>
            <line num="20" count="94" type="stmt"/>
            <line complexity="3" visibility="public" signature="evaluate() : void" num="23" count="94" type="method"/>
            <line num="25" count="94" type="stmt"/>
            <line num="26" count="94" type="stmt"/>
            <line num="27" count="94" type="stmt"/>
            <line num="29" count="11" type="stmt"/>
            <line num="31" count="94" type="stmt"/>
            <line num="32" count="103" type="stmt"/>
            <line num="33" count="103" type="stmt"/>
            <line num="35" count="7" type="stmt"/>
            <line num="39" count="94" type="stmt"/>
            <line complexity="1" visibility="protected" signature="invokeMethod(FrameworkMethod) : void" num="45" count="95" type="method"/>
            <line num="46" count="95" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/runners/statements/RunBefores.java" name="RunBefores.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="3" loc="35" coveredmethods="3" methods="3" elements="10" classes="1" ncloc="23" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="RunBefores">
               <metrics coveredelements="10" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="10" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="RunBefores(Statement,List&lt;FrameworkMethod&gt;,Object)" num="15" count="168" type="method"/>
            <line num="16" count="168" type="stmt"/>
            <line num="17" count="168" type="stmt"/>
            <line num="18" count="168" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : void" num="21" count="168" type="method"/>
            <line num="23" count="168" type="stmt"/>
            <line num="24" count="174" type="stmt"/>
            <line num="26" count="157" type="stmt"/>
            <line complexity="1" visibility="protected" signature="invokeMethod(FrameworkMethod) : void" num="32" count="166" type="method"/>
            <line num="33" count="166" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/internal/runners/statements/ExpectExceptionTest.java" name="ExpectExceptionTest.java">
            <metrics coveredelements="27" coveredconditionals="0" complexity="11" loc="88" coveredmethods="7" methods="7" elements="31" classes="4" ncloc="66" statements="24" conditionals="0" coveredstatements="20"/>
            <class name="ExpectExceptionTest">
               <metrics coveredelements="22" complexity="8" methods="4" testruns="4" statements="22" coveredconditionals="0" coveredmethods="4" elements="26" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="18" testpasses="4"/>
            </class>
            <class name="ExpectExceptionTest.PassingStatement">
               <metrics coveredelements="1" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ExpectExceptionTest.SomeException">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="ExpectExceptionTest.AssumptionViolatedExceptionSubclass">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="2" visibility="public" signature="whenExpectingAssumptionViolatedExceptionStatementsThrowingItShouldPass() : void" num="18" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="whenExpectingAssumptionViolatedExceptionStatementsThrowingSubclassShouldPass() : void" num="31" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="whenExpectingAssumptionViolatedExceptionStatementsThrowingDifferentExceptionShouldFail() : void" num="44" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="whenExpectingAssumptionViolatedExceptionStatementsPassingShouldFail() : void" num="58" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : void" num="72" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="SomeException(String)" num="78" count="1" type="method"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="AssumptionViolatedExceptionSubclass(String)" num="84" count="1" type="method"/>
            <line num="85" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/internal/runners/statements/FailOnTimeoutTest.java" name="FailOnTimeoutTest.java">
            <metrics coveredelements="91" coveredconditionals="8" complexity="29" loc="229" coveredmethods="19" methods="19" elements="96" classes="4" ncloc="192" statements="67" conditionals="10" coveredstatements="64"/>
            <class name="FailOnTimeoutTest">
               <metrics coveredelements="70" complexity="21" methods="14" testruns="9" statements="55" coveredconditionals="4" coveredmethods="14" elements="75" testfailures="0" testduration="0.766" conditionals="6" coveredstatements="52" testpasses="9"/>
            </class>
            <class name="FailOnTimeoutTest.TestStatement">
               <metrics coveredelements="6" coveredconditionals="2" complexity="2" coveredmethods="1" methods="1" elements="6" statements="3" conditionals="2" coveredstatements="3"/>
            </class>
            <class name="FailOnTimeoutTest.InfiniteLoopStatement">
               <metrics coveredelements="4" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="4" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="FailOnTimeoutTest.StuckStatement">
               <metrics coveredelements="11" coveredconditionals="2" complexity="5" coveredmethods="3" methods="3" elements="11" statements="6" conditionals="2" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="throwsTestTimedOutException() : void" num="39" testsuccess="true" count="1" testduration="0.101" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="throwExceptionWithNiceMessageOnTimeout() : void" num="46" testsuccess="true" count="1" testduration="0.101" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="sendUpExceptionThrownByStatement() : void" num="54" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="throwExceptionIfTheSecondCallToEvaluateNeedsTooMuchTime() : void" num="63" testsuccess="true" count="1" testduration="0.102" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="throwTimeoutExceptionOnSecondCallAlthoughFirstCallThrowsException() : void" num="72" testsuccess="true" count="1" testduration="0.117" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="throwsExceptionWithTimeoutValueAndTimeUnitSet() : void" num="85" testsuccess="true" count="1" testduration="0.102" type="method"/>
            <line num="87" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="evaluateWithException(Exception) : ThrowingRunnable" num="94" count="2" type="method"/>
            <line num="95" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="96" count="2" type="method"/>
            <line num="97" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line num="99" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="evaluateWithWaitDuration(long) : ThrowingRunnable" num="104" count="7" type="method"/>
            <line num="105" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="106" count="6" type="method"/>
            <line num="107" count="6" type="stmt"/>
            <line num="108" count="6" type="stmt"/>
            <line num="109" count="6" type="stmt"/>
            <line complexity="2" visibility="public" signature="evaluate() : void" num="119" count="8" type="method"/>
            <line num="121" count="8" type="stmt"/>
            <line num="122" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="122" type="cond"/>
            <line num="123" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="stopEndlessStatement() : void" num="128" testsuccess="true" count="1" testduration="0.141" type="method"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : void" num="146" count="1" type="method"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="10" type="stmt"/>
            <line num="150" count="9" type="stmt"/>
            <line complexity="4" visibility="public" signature="stackTraceContainsRealCauseOfTimeout() : void" num="155" testsuccess="true" count="1" testduration="0.102" type="method"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="7" type="stmt"/>
            <line num="169" count="7" type="stmt"/>
            <line falsecount="6" truecount="1" num="169" type="cond"/>
            <line num="170" count="1" type="stmt"/>
            <line num="172" count="7" type="stmt"/>
            <line falsecount="7" truecount="0" num="172" type="cond"/>
            <line num="173" count="0" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="evaluate() : void" num="187" count="1" type="method"/>
            <line num="189" count="1" type="stmt"/>
            <line num="191" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="theRealCauseOfTheTimeout() : void" num="199" count="1" type="method"/>
            <line num="200" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="notTheRealCauseOfTheTimeout() : void" num="203" count="1" type="method"/>
            <line num="204" count="1" type="stmt"/>
            <line falsecount="1" truecount="2200628" num="204" type="cond"/>
            <line num="206" count="2200628" type="stmt"/>
            <line complexity="3" visibility="public" signature="threadGroupNotLeaked() : void" num="211" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="213" count="1" type="stmt"/>
            <line num="215" count="1" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line num="218" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="218" type="cond"/>
            <line num="219" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="subGroupsOfCurrentThread() : Collection&lt;ThreadGroup&gt;" num="224" count="2" type="method"/>
            <line num="225" count="2" type="stmt"/>
            <line num="226" count="2" type="stmt"/>
            <line num="227" count="2" type="stmt"/>
         </file>
      </package>
      <package name="org.junit.experimental.max">
         <metrics coveredelements="129" complexity="49" loc="374" methods="32" classes="5" statements="89" coveredconditionals="21" coveredmethods="30" elements="147" ncloc="243" files="3" conditionals="26" coveredstatements="78"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/experimental/max/CouldNotReadCoreException.java" name="CouldNotReadCoreException.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="15" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="7" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="CouldNotReadCoreException">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CouldNotReadCoreException(Throwable)" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/experimental/max/MaxCore.java" name="MaxCore.java">
            <metrics coveredelements="59" coveredconditionals="10" complexity="23" loc="181" coveredmethods="13" methods="14" elements="71" classes="1" ncloc="109" statements="43" conditionals="14" coveredstatements="36"/>
            <class name="MaxCore">
               <metrics coveredelements="59" coveredconditionals="10" complexity="23" coveredmethods="13" methods="14" elements="71" statements="43" conditionals="14" coveredstatements="36"/>
            </class>
            <line complexity="1" visibility="public" signature="forFolder(String) : MaxCore" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="storedLocally(File) : MaxCore" num="48" count="18" type="method"/>
            <line num="49" count="18" type="stmt"/>
            <line complexity="1" visibility="private" signature="MaxCore(File)" num="54" count="18" type="method"/>
            <line num="55" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Class&lt;?&gt;) : Result" num="63" count="2" type="method"/>
            <line num="64" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Request) : Result" num="73" count="10" type="method"/>
            <line num="74" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Request,JUnitCore) : Result" num="87" count="12" type="method"/>
            <line num="88" count="12" type="stmt"/>
            <line num="89" count="12" type="stmt"/>
            <line complexity="2" visibility="public" signature="sortRequest(Request) : Request" num="95" count="21" type="method"/>
            <line num="96" count="21" type="stmt"/>
            <line falsecount="21" truecount="0" num="96" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="21" type="stmt"/>
            <line num="101" count="21" type="stmt"/>
            <line num="102" count="21" type="stmt"/>
            <line complexity="1" visibility="private" signature="constructLeafRequest(List&lt;Description&gt;) : Request" num="105" count="21" type="method"/>
            <line num="106" count="21" type="stmt"/>
            <line num="107" count="21" type="stmt"/>
            <line num="108" count="46" type="stmt"/>
            <line num="110" count="21" type="stmt"/>
            <line complexity="2" visibility="public" signature="getRunner() : Runner" num="111" count="21" type="method"/>
            <line num="113" count="21" type="stmt"/>
            <line num="114" count="21" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="buildRunner(Description) : Runner" num="123" count="46" type="method"/>
            <line num="124" count="46" type="stmt"/>
            <line falsecount="46" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="46" type="stmt"/>
            <line falsecount="44" truecount="2" num="127" type="cond"/>
            <line num="132" count="2" type="stmt"/>
            <line num="134" count="44" type="stmt"/>
            <line num="135" count="44" type="stmt"/>
            <line falsecount="44" truecount="0" num="135" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line num="138" count="44" type="stmt"/>
            <line num="139" count="44" type="stmt"/>
            <line falsecount="44" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line num="142" count="44" type="stmt"/>
            <line complexity="2" visibility="private" signature="getMalformedTestClass(Description) : Class&lt;?&gt;" num="145" count="2" type="method"/>
            <line num="146" count="2" type="stmt"/>
            <line num="147" count="2" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sortedLeavesForTest(Request) : List&lt;Description&gt;" num="158" count="7" type="method"/>
            <line num="159" count="7" type="stmt"/>
            <line complexity="1" visibility="private" signature="findLeaves(Request) : List&lt;Description&gt;" num="162" count="28" type="method"/>
            <line num="163" count="28" type="stmt"/>
            <line num="164" count="28" type="stmt"/>
            <line num="165" count="28" type="stmt"/>
            <line complexity="3" visibility="private" signature="findLeaves(Description,Description,List&lt;Description&gt;) : void" num="168" count="118" type="method"/>
            <line num="169" count="118" type="stmt"/>
            <line falsecount="54" truecount="64" num="169" type="cond"/>
            <line num="170" count="64" type="stmt"/>
            <line falsecount="62" truecount="2" num="170" type="cond"/>
            <line num="171" count="2" type="stmt"/>
            <line num="173" count="62" type="stmt"/>
            <line num="176" count="54" type="stmt"/>
            <line num="177" count="90" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/experimental/max/MaxHistory.java" name="MaxHistory.java">
            <metrics coveredelements="70" coveredconditionals="11" complexity="25" loc="178" coveredmethods="17" methods="17" elements="74" classes="3" ncloc="127" statements="45" conditionals="12" coveredstatements="42"/>
            <class name="MaxHistory">
               <metrics coveredelements="40" coveredconditionals="3" complexity="15" coveredmethods="11" methods="11" elements="44" statements="29" conditionals="4" coveredstatements="26"/>
            </class>
            <class name="MaxHistory.RememberingListener">
               <metrics coveredelements="10" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <class name="MaxHistory.TestComparator">
               <metrics coveredelements="20" coveredconditionals="8" complexity="6" coveredmethods="2" methods="2" elements="20" statements="10" conditionals="8" coveredstatements="10"/>
            </class>
            <line complexity="3" visibility="public" signature="forFolder(File) : MaxHistory" num="33" count="18" type="method"/>
            <line num="34" count="18" type="stmt"/>
            <line falsecount="17" truecount="1" num="34" type="cond"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="42" count="17" type="stmt"/>
            <line complexity="2" visibility="private" signature="readHistory(File) : MaxHistory" num="45" count="1" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="MaxHistory(File)" num="73" count="17" type="method"/>
            <line num="74" count="17" type="stmt"/>
            <line complexity="2" visibility="private" signature="save() : void" num="77" count="12" type="method"/>
            <line num="78" count="12" type="stmt"/>
            <line num="79" count="12" type="stmt"/>
            <line num="80" count="12" type="stmt"/>
            <line num="81" count="12" type="stmt"/>
            <line num="83" count="12" type="stmt"/>
            <line falsecount="0" truecount="12" num="83" type="cond"/>
            <line num="84" count="12" type="stmt"/>
            <line complexity="1" visibility="package" signature="getFailureTimestamp(Description) : Long" num="89" count="26" type="method"/>
            <line num="90" count="26" type="stmt"/>
            <line complexity="1" visibility="package" signature="putTestFailureTimestamp(Description,long) : void" num="93" count="14" type="method"/>
            <line num="94" count="14" type="stmt"/>
            <line complexity="1" visibility="package" signature="isNewTest(Description) : boolean" num="97" count="43" type="method"/>
            <line num="98" count="43" type="stmt"/>
            <line complexity="1" visibility="package" signature="getTestDuration(Description) : Long" num="101" count="14" type="method"/>
            <line num="102" count="14" type="stmt"/>
            <line complexity="1" visibility="package" signature="putTestDuration(Description,long) : void" num="105" count="25" type="method"/>
            <line num="106" count="25" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStarted(Description) : void" num="114" count="25" type="method"/>
            <line num="116" count="25" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFinished(Description) : void" num="120" count="25" type="method"/>
            <line num="122" count="25" type="stmt"/>
            <line num="123" count="25" type="stmt"/>
            <line num="124" count="25" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFailure(Failure) : void" num="127" count="14" type="method"/>
            <line num="129" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunFinished(Result) : void" num="132" count="12" type="method"/>
            <line num="134" count="12" type="stmt"/>
            <line complexity="4" visibility="public" signature="compare(Description,Description) : int" num="139" count="29" type="method"/>
            <line num="141" count="29" type="stmt"/>
            <line falsecount="14" truecount="15" num="141" type="cond"/>
            <line num="142" count="15" type="stmt"/>
            <line num="144" count="14" type="stmt"/>
            <line falsecount="13" truecount="1" num="144" type="cond"/>
            <line num="145" count="1" type="stmt"/>
            <line num="148" count="13" type="stmt"/>
            <line num="149" count="13" type="stmt"/>
            <line falsecount="7" truecount="6" num="149" type="cond"/>
            <line complexity="2" visibility="private" signature="getFailure(Description) : Long" num="154" count="26" type="method"/>
            <line num="155" count="26" type="stmt"/>
            <line num="156" count="26" type="stmt"/>
            <line falsecount="12" truecount="14" num="156" type="cond"/>
            <line num="157" count="14" type="stmt"/>
            <line num="159" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="listener() : RunListener" num="167" count="12" type="method"/>
            <line num="168" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="testComparator() : Comparator&lt;Description&gt;" num="175" count="21" type="method"/>
            <line num="176" count="21" type="stmt"/>
         </file>
      </package>
      <package name="org.junit.runner.notification">
         <metrics coveredelements="309" complexity="117" loc="1134" methods="97" classes="20" statements="245" coveredconditionals="20" coveredmethods="89" elements="380" ncloc="680" files="9" conditionals="38" coveredstatements="200"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runner/notification/Failure.java" name="Failure.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="8" loc="90" coveredmethods="8" methods="8" elements="17" classes="1" ncloc="35" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="Failure">
               <metrics coveredelements="17" coveredconditionals="0" complexity="8" coveredmethods="8" methods="8" elements="17" statements="9" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="Failure(Description,Throwable)" num="34" count="1811" type="method"/>
            <line num="35" count="1811" type="stmt"/>
            <line num="36" count="1811" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTestHeader() : String" num="42" count="147" type="method"/>
            <line num="43" count="147" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescription() : Description" num="49" count="99" type="method"/>
            <line num="50" count="99" type="stmt"/>
            <line complexity="1" visibility="public" signature="getException() : Throwable" num="57" count="269" type="method"/>
            <line num="58" count="269" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="61" count="8" type="method"/>
            <line num="63" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTrace() : String" num="69" count="5" type="method"/>
            <line num="70" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTrimmedTrace() : String" num="78" count="144" type="method"/>
            <line num="79" count="144" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMessage() : String" num="87" count="42" type="method"/>
            <line num="88" count="42" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runner/notification/RunListener.java" name="RunListener.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="9" loc="168" coveredmethods="9" methods="9" elements="9" classes="2" ncloc="33" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="RunListener">
               <metrics coveredelements="9" coveredconditionals="0" complexity="9" coveredmethods="9" methods="9" elements="9" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RunListener.ThreadSafe">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testRunStarted(Description) : void" num="60" count="38" type="method"/>
            <line complexity="1" visibility="public" signature="testRunFinished(Result) : void" num="69" count="20" type="method"/>
            <line complexity="1" visibility="public" signature="testSuiteStarted(Description) : void" num="86" count="1792" type="method"/>
            <line complexity="1" visibility="public" signature="testSuiteFinished(Description) : void" num="97" count="1791" type="method"/>
            <line complexity="1" visibility="public" signature="testStarted(Description) : void" num="106" count="2816" type="method"/>
            <line complexity="1" visibility="public" signature="testFinished(Description) : void" num="114" count="1122" type="method"/>
            <line complexity="1" visibility="public" signature="testFailure(Failure) : void" num="131" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="testAssumptionFailure(Failure) : void" num="141" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="testIgnored(Description) : void" num="150" count="7" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runner/notification/RunNotifier.java" name="RunNotifier.java">
            <metrics coveredelements="78" coveredconditionals="9" complexity="34" loc="249" coveredmethods="27" methods="27" elements="84" classes="2" ncloc="143" statements="45" conditionals="12" coveredstatements="42"/>
            <class name="RunNotifier">
               <metrics coveredelements="64" coveredconditionals="9" complexity="30" coveredmethods="24" methods="24" elements="70" statements="34" conditionals="12" coveredstatements="31"/>
            </class>
            <class name="RunNotifier.SafeNotifier">
               <metrics coveredelements="14" coveredconditionals="0" complexity="4" coveredmethods="3" methods="3" elements="14" statements="11" conditionals="0" coveredstatements="11"/>
            </class>
            <line complexity="2" visibility="public" signature="addListener(RunListener) : void" num="28" count="1131" type="method"/>
            <line num="29" count="1131" type="stmt"/>
            <line falsecount="1131" truecount="0" num="29" type="cond"/>
            <line num="30" count="0" type="stmt"/>
            <line num="32" count="1131" type="stmt"/>
            <line complexity="2" visibility="public" signature="removeListener(RunListener) : void" num="38" count="463" type="method"/>
            <line num="39" count="463" type="stmt"/>
            <line falsecount="463" truecount="0" num="39" type="cond"/>
            <line num="40" count="0" type="stmt"/>
            <line num="42" count="463" type="stmt"/>
            <line complexity="2" visibility="package" signature="wrapIfNotThreadSafe(RunListener) : RunListener" num="49" count="3054" type="method"/>
            <line num="50" count="3054" type="stmt"/>
            <line falsecount="2138" truecount="916" num="50" type="cond"/>
            <line complexity="1" visibility="package" signature="SafeNotifier()" num="58" count="6749" type="method"/>
            <line num="59" count="6749" type="stmt"/>
            <line complexity="1" visibility="package" signature="SafeNotifier(List&lt;RunListener&gt;)" num="62" count="7021" type="method"/>
            <line num="63" count="7021" type="stmt"/>
            <line complexity="2" visibility="package" signature="run() : void" num="66" count="7021" type="method"/>
            <line num="67" count="7021" type="stmt"/>
            <line num="68" count="7021" type="stmt"/>
            <line num="69" count="7021" type="stmt"/>
            <line num="70" count="7021" type="stmt"/>
            <line num="71" count="17114" type="stmt"/>
            <line num="72" count="17114" type="stmt"/>
            <line num="73" count="15593" type="stmt"/>
            <line num="75" count="1519" type="stmt"/>
            <line num="78" count="7019" type="stmt"/>
            <line complexity="1" visibility="public" signature="fireTestRunStarted(Description) : void" num="87" count="455" type="method"/>
            <line num="88" count="455" type="stmt"/>
            <line complexity="1" visibility="protected" signature="notifyListener(RunListener) : void" num="89" count="543" type="method"/>
            <line num="91" count="543" type="stmt"/>
            <line complexity="1" visibility="public" signature="fireTestRunFinished(Result) : void" num="99" count="455" type="method"/>
            <line num="100" count="455" type="stmt"/>
            <line complexity="1" visibility="protected" signature="notifyListener(RunListener) : void" num="101" count="544" type="method"/>
            <line num="103" count="544" type="stmt"/>
            <line complexity="1" visibility="public" signature="fireTestSuiteStarted(Description) : void" num="117" count="1085" type="method"/>
            <line num="118" count="1085" type="stmt"/>
            <line complexity="1" visibility="protected" signature="notifyListener(RunListener) : void" num="119" count="1795" type="method"/>
            <line num="121" count="1795" type="stmt"/>
            <line complexity="1" visibility="public" signature="fireTestSuiteFinished(Description) : void" num="134" count="1085" type="method"/>
            <line num="135" count="1085" type="stmt"/>
            <line complexity="1" visibility="protected" signature="notifyListener(RunListener) : void" num="136" count="1795" type="method"/>
            <line num="138" count="1795" type="stmt"/>
            <line complexity="2" visibility="public" signature="fireTestStarted(Description) : void" num="149" count="1838" type="method"/>
            <line num="150" count="1838" type="stmt"/>
            <line falsecount="1836" truecount="2" num="150" type="cond"/>
            <line num="151" count="2" type="stmt"/>
            <line num="153" count="1836" type="stmt"/>
            <line complexity="1" visibility="protected" signature="notifyListener(RunListener) : void" num="154" count="6902" type="method"/>
            <line num="156" count="6902" type="stmt"/>
            <line complexity="1" visibility="public" signature="fireTestFailure(Failure) : void" num="166" count="258" type="method"/>
            <line num="167" count="258" type="stmt"/>
            <line complexity="2" visibility="private" signature="fireTestFailures(List&lt;RunListener&gt;,List&lt;Failure&gt;) : void" num="170" count="7277" type="method"/>
            <line num="172" count="7277" type="stmt"/>
            <line falsecount="7005" truecount="272" num="172" type="cond"/>
            <line num="173" count="272" type="stmt"/>
            <line complexity="1" visibility="protected" signature="notifyListener(RunListener) : void" num="174" count="1401" type="method"/>
            <line num="176" count="1401" type="stmt"/>
            <line num="177" count="461182" type="stmt"/>
            <line complexity="1" visibility="public" signature="fireTestAssumptionFailed(Failure) : void" num="191" count="28" type="method"/>
            <line num="192" count="28" type="stmt"/>
            <line complexity="1" visibility="protected" signature="notifyListener(RunListener) : void" num="193" count="35" type="method"/>
            <line num="195" count="35" type="stmt"/>
            <line complexity="1" visibility="public" signature="fireTestIgnored(Description) : void" num="205" count="17" type="method"/>
            <line num="206" count="17" type="stmt"/>
            <line complexity="1" visibility="protected" signature="notifyListener(RunListener) : void" num="207" count="21" type="method"/>
            <line num="209" count="21" type="stmt"/>
            <line complexity="1" visibility="public" signature="fireTestFinished(Description) : void" num="221" count="1788" type="method"/>
            <line num="222" count="1788" type="stmt"/>
            <line complexity="1" visibility="protected" signature="notifyListener(RunListener) : void" num="223" count="4078" type="method"/>
            <line num="225" count="4078" type="stmt"/>
            <line complexity="1" visibility="public" signature="pleaseStop() : void" num="236" count="2" type="method"/>
            <line num="237" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="addFirstListener(RunListener) : void" num="243" count="1458" type="method"/>
            <line num="244" count="1458" type="stmt"/>
            <line falsecount="1458" truecount="0" num="244" type="cond"/>
            <line num="245" count="0" type="stmt"/>
            <line num="247" count="1458" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runner/notification/StoppedByUserException.java" name="StoppedByUserException.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="12" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="StoppedByUserException">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runner/notification/SynchronizedRunListener.java" name="SynchronizedRunListener.java">
            <metrics coveredelements="43" coveredconditionals="3" complexity="15" loc="134" coveredmethods="13" methods="13" elements="45" classes="1" ncloc="85" statements="28" conditionals="4" coveredstatements="27"/>
            <class name="SynchronizedRunListener">
               <metrics coveredelements="43" coveredconditionals="3" complexity="15" coveredmethods="13" methods="13" elements="45" statements="28" conditionals="4" coveredstatements="27"/>
            </class>
            <line complexity="1" visibility="package" signature="SynchronizedRunListener(RunListener,Object)" num="27" count="2148" type="method"/>
            <line num="28" count="2148" type="stmt"/>
            <line num="29" count="2148" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunStarted(Description) : void" num="32" count="88" type="method"/>
            <line num="34" count="88" type="stmt"/>
            <line num="35" count="88" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunFinished(Result) : void" num="39" count="90" type="method"/>
            <line num="41" count="90" type="stmt"/>
            <line num="42" count="90" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSuiteStarted(Description) : void" num="55" count="746" type="method"/>
            <line num="57" count="746" type="stmt"/>
            <line num="58" count="746" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSuiteFinished(Description) : void" num="70" count="746" type="method"/>
            <line num="72" count="746" type="stmt"/>
            <line num="73" count="746" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStarted(Description) : void" num="77" count="5189" type="method"/>
            <line num="79" count="5189" type="stmt"/>
            <line num="80" count="5189" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFinished(Description) : void" num="84" count="2367" type="method"/>
            <line num="86" count="2367" type="stmt"/>
            <line num="87" count="2367" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFailure(Failure) : void" num="91" count="461000" type="method"/>
            <line num="93" count="460932" type="stmt"/>
            <line num="94" count="460952" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAssumptionFailure(Failure) : void" num="98" count="9" type="method"/>
            <line num="100" count="9" type="stmt"/>
            <line num="101" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIgnored(Description) : void" num="105" count="10" type="method"/>
            <line num="107" count="10" type="stmt"/>
            <line num="108" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="112" count="1" type="method"/>
            <line num="114" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="117" count="10" type="method"/>
            <line num="119" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="119" type="cond"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="10" type="stmt"/>
            <line falsecount="9" truecount="1" num="122" type="cond"/>
            <line num="123" count="1" type="stmt"/>
            <line num="125" count="9" type="stmt"/>
            <line num="127" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="130" count="1" type="method"/>
            <line num="132" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/runner/notification/AllNotificationTests.java" name="AllNotificationTests.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="14" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AllNotificationTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/runner/notification/ConcurrentRunNotifierTest.java" name="ConcurrentRunNotifierTest.java">
            <metrics coveredelements="28" coveredconditionals="2" complexity="20" loc="180" coveredmethods="6" methods="13" elements="85" classes="4" ncloc="134" statements="58" conditionals="14" coveredstatements="20"/>
            <class name="ConcurrentRunNotifierTest">
               <metrics coveredelements="23" complexity="9" methods="7" testruns="3" statements="24" coveredconditionals="2" coveredmethods="4" elements="35" testfailures="2" testduration="6.1129999999999995" conditionals="4" coveredstatements="17" testpasses="1"/>
            </class>
            <class name="ConcurrentRunNotifierTest.ConcurrentRunListener">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="ConcurrentRunNotifierTest.ExaminedListener">
               <metrics coveredelements="2" coveredconditionals="0" complexity="4" coveredmethods="1" methods="3" elements="9" statements="4" conditionals="2" coveredstatements="1"/>
            </class>
            <class name="ConcurrentRunNotifierTest.AbstractConcurrentFailuresTest">
               <metrics coveredelements="1" coveredconditionals="0" complexity="6" coveredmethods="0" methods="2" elements="39" statements="29" conditionals="8" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testStarted(Description) : void" num="34" count="8" type="method"/>
            <line num="36" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="realUsage() : void" num="40" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line falsecount="1" truecount="4" num="49" type="cond"/>
            <line num="50" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="51" count="4" type="method"/>
            <line num="52" count="4" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="ExaminedListener(boolean)" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testStarted(Description) : void" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFailure(Failure) : void" num="81" count="460803" type="method"/>
            <line num="83" count="460730" type="stmt"/>
            <line complexity="4" visibility="public" signature="test() : void" num="91" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="98" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="call() : Void" num="110" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportConcurrentFailuresAfterAddListener() : void" num="147" count="1" type="method"/>
            <line num="149" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="addListener(ExaminedListener) : void" num="150" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportConcurrentFailuresAfterAddFirstListener() : void" num="161" count="1" type="method"/>
            <line num="163" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="addListener(ExaminedListener) : void" num="164" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="countReportedTestFailures(ExaminedListener[]) : int" num="171" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="174" type="cond"/>
            <line num="175" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/runner/notification/RunNotifierTest.java" name="RunNotifierTest.java">
            <metrics coveredelements="62" coveredconditionals="0" complexity="12" loc="131" coveredmethods="12" methods="12" elements="62" classes="5" ncloc="111" statements="50" conditionals="0" coveredstatements="50"/>
            <class name="RunNotifierTest">
               <metrics coveredelements="54" complexity="8" methods="8" testruns="8" statements="46" coveredconditionals="0" coveredmethods="8" elements="54" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="46" testpasses="8"/>
            </class>
            <class name="RunNotifierTest.CorruptListener">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="RunNotifierTest.FailureListener">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="RunNotifierTest.CountingListener">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="RunNotifierTest.ThreadSafeListener">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="notifiesSecondListenerIfFirstThrowsException() : void" num="18" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNoProblemsWithFailingListeners() : void" num="28" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunFinished(Result) : void" num="37" count="2" type="method"/>
            <line num="39" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFailure(Failure) : void" num="42" count="1" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="addAndRemoveWithNonThreadSafeListener() : void" num="48" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="addFirstAndRemoveWithNonThreadSafeListener() : void" num="60" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="addAndRemoveWithThreadSafeListener() : void" num="72" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="addFirstAndRemoveWithThreadSafeListener() : void" num="84" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="wrapIfNotThreadSafeShouldNotWrapThreadSafeListeners() : void" num="96" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="wrapIfNotThreadSafeShouldWrapNonThreadSafeListeners() : void" num="102" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFailure(Failure) : void" num="112" count="4" type="method"/>
            <line num="114" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStarted(Description) : void" num="121" count="4" type="method"/>
            <line num="123" count="4" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/runner/notification/SynchronizedRunListenerTest.java" name="SynchronizedRunListenerTest.java">
            <metrics coveredelements="72" coveredconditionals="6" complexity="19" loc="156" coveredmethods="14" methods="15" elements="78" classes="3" ncloc="123" statements="55" conditionals="8" coveredstatements="52"/>
            <class name="SynchronizedRunListenerTest">
               <metrics coveredelements="42" complexity="7" methods="7" testruns="5" statements="35" coveredconditionals="0" coveredmethods="7" elements="42" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="35" testpasses="5"/>
            </class>
            <class name="SynchronizedRunListenerTest.MethodSignature">
               <metrics coveredelements="13" coveredconditionals="2" complexity="6" coveredmethods="3" methods="4" elements="19" statements="11" conditionals="4" coveredstatements="8"/>
            </class>
            <class name="SynchronizedRunListenerTest.NamedListener">
               <metrics coveredelements="17" coveredconditionals="4" complexity="6" coveredmethods="4" methods="4" elements="17" statements="9" conditionals="4" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="MethodSignature(Method)" num="28" count="21" type="method"/>
            <line num="29" count="21" type="stmt"/>
            <line num="30" count="21" type="stmt"/>
            <line num="31" count="21" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="39" count="30" type="method"/>
            <line num="41" count="30" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="44" count="9" type="method"/>
            <line num="46" count="9" type="stmt"/>
            <line falsecount="9" truecount="0" num="46" type="cond"/>
            <line num="47" count="0" type="stmt"/>
            <line num="49" count="9" type="stmt"/>
            <line falsecount="9" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line num="52" count="9" type="stmt"/>
            <line num="53" count="9" type="stmt"/>
            <line complexity="1" visibility="private" signature="getAllDeclaredMethods(Class&lt;?&gt;) : Set&lt;MethodSignature&gt;" num="57" count="2" type="method"/>
            <line num="58" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line num="60" count="21" type="stmt"/>
            <line num="62" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="overridesAllMethodsInRunListener() : void" num="65" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="NamedListener(String)" num="77" count="8" type="method"/>
            <line num="78" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="81" count="2" type="method"/>
            <line num="83" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="86" count="6" type="method"/>
            <line num="88" count="6" type="stmt"/>
            <line complexity="3" visibility="public" signature="equals(Object) : boolean" num="91" count="13" type="method"/>
            <line num="93" count="13" type="stmt"/>
            <line falsecount="9" truecount="4" num="93" type="cond"/>
            <line num="94" count="4" type="stmt"/>
            <line num="96" count="9" type="stmt"/>
            <line falsecount="6" truecount="3" num="96" type="cond"/>
            <line num="97" count="3" type="stmt"/>
            <line num="99" count="6" type="stmt"/>
            <line num="100" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="namedListenerCorrectlyImplementsEqualsAndHashCode() : void" num="104" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="toStringDelegates() : void" num="126" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="128" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="equalsDelegates() : void" num="134" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCodeDelegates() : void" num="147" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="wrap(RunListener) : SynchronizedRunListener" num="153" count="10" type="method"/>
            <line num="154" count="10" type="stmt"/>
         </file>
      </package>
      <package name="org.junit.experimental.theories.suppliers">
         <metrics coveredelements="7" complexity="1" loc="56" methods="1" classes="2" statements="6" coveredconditionals="0" coveredmethods="1" elements="7" ncloc="30" files="2" conditionals="0" coveredstatements="6"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/experimental/theories/suppliers/TestedOn.java" name="TestedOn.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="31" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TestedOn">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/experimental/theories/suppliers/TestedOnSupplier.java" name="TestedOnSupplier.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="1" loc="25" coveredmethods="1" methods="1" elements="7" classes="1" ncloc="18" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="TestedOnSupplier">
               <metrics coveredelements="7" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="7" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="getValueSources(ParameterSignature) : List&lt;PotentialAssignment&gt;" num="15" count="2" type="method"/>
            <line num="17" count="2" type="stmt"/>
            <line num="18" count="2" type="stmt"/>
            <line num="19" count="2" type="stmt"/>
            <line num="20" count="2" type="stmt"/>
            <line num="21" count="2" type="stmt"/>
            <line num="23" count="2" type="stmt"/>
         </file>
      </package>
      <package name="org.junit.matchers">
         <metrics coveredelements="2" complexity="10" loc="113" methods="10" classes="1" statements="10" coveredconditionals="0" coveredmethods="1" elements="20" ncloc="46" files="1" conditionals="0" coveredstatements="1"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/matchers/JUnitMatchers.java" name="JUnitMatchers.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="10" loc="113" coveredmethods="1" methods="10" elements="20" classes="1" ncloc="46" statements="10" conditionals="0" coveredstatements="1"/>
            <class name="JUnitMatchers">
               <metrics coveredelements="2" coveredconditionals="0" complexity="10" coveredmethods="1" methods="10" elements="20" statements="10" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="hasItem(T) : Matcher&lt;Iterable&lt;? super T&gt;&gt;" num="20" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasItem(Matcher&lt;? super T&gt;) : Matcher&lt;Iterable&lt;? super T&gt;&gt;" num="29" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasItems(T) : Matcher&lt;Iterable&lt;T&gt;&gt;" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasItems(Matcher&lt;? super T&gt;) : Matcher&lt;Iterable&lt;T&gt;&gt;" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="everyItem(Matcher&lt;T&gt;) : Matcher&lt;Iterable&lt;T&gt;&gt;" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="containsString(java.lang.String) : Matcher&lt;java.lang.String&gt;" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="both(Matcher&lt;? super T&gt;) : CombinableBothMatcher&lt;T&gt;" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="either(Matcher&lt;? super T&gt;) : CombinableEitherMatcher&lt;T&gt;" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isThrowable(Matcher&lt;T&gt;) : Matcher&lt;T&gt;" num="102" count="42" type="method"/>
            <line num="103" count="42" type="stmt"/>
            <line complexity="1" visibility="public" signature="isException(Matcher&lt;T&gt;) : Matcher&lt;T&gt;" num="110" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.junit.internal.management">
         <metrics coveredelements="38" complexity="46" loc="309" methods="16" classes="12" statements="50" coveredconditionals="4" coveredmethods="8" elements="78" ncloc="178" files="7" conditionals="12" coveredstatements="26"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/management/FakeRuntimeMXBean.java" name="FakeRuntimeMXBean.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="21" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="8" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="FakeRuntimeMXBean">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="getInputArguments() : List&lt;String&gt;" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/management/FakeThreadMXBean.java" name="FakeThreadMXBean.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="27" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="9" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="FakeThreadMXBean">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="getThreadCpuTime(long) : long" num="13" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isThreadCpuTimeSupported() : boolean" num="22" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/management/ManagementFactory.java" name="ManagementFactory.java">
            <metrics coveredelements="15" coveredconditionals="2" complexity="15" loc="77" coveredmethods="4" methods="6" elements="24" classes="4" ncloc="51" statements="12" conditionals="6" coveredstatements="9"/>
            <class name="ManagementFactory">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="ManagementFactory.FactoryHolder">
               <metrics coveredelements="10" coveredconditionals="1" complexity="9" coveredmethods="2" methods="2" elements="12" statements="8" conditionals="2" coveredstatements="7"/>
            </class>
            <class name="ManagementFactory.RuntimeHolder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="1" elements="4" statements="1" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="ManagementFactory.ThreadHolder">
               <metrics coveredelements="3" coveredconditionals="1" complexity="2" coveredmethods="1" methods="1" elements="4" statements="1" conditionals="2" coveredstatements="1"/>
            </class>
            <line complexity="2" visibility="package" signature="&lt;clinit&gt;, line 14()" num="14" count="1" type="method"/>
            <line num="15" count="1" type="stmt"/>
            <line num="16" count="1" type="stmt"/>
            <line num="17" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line complexity="7" visibility="package" signature="getBeanObject(String) : Object" num="24" count="1" type="method"/>
            <line num="25" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="25" type="cond"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getBean(Object) : RuntimeMXBean" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="49" type="cond"/>
            <line complexity="2" visibility="private" signature="getBean(Object) : ThreadMXBean" num="58" count="1" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="59" type="cond"/>
            <line complexity="1" visibility="public" signature="getRuntimeMXBean() : RuntimeMXBean" num="67" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getThreadMXBean() : ThreadMXBean" num="74" count="2" type="method"/>
            <line num="75" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/management/ReflectiveRuntimeMXBean.java" name="ReflectiveRuntimeMXBean.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="61" coveredmethods="0" methods="3" elements="16" classes="2" ncloc="40" statements="11" conditionals="2" coveredstatements="0"/>
            <class name="ReflectiveRuntimeMXBean">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="2" elements="10" statements="6" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="ReflectiveRuntimeMXBean.Holder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="1" elements="6" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="package" signature="&lt;clinit&gt;, line 18()" num="18" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line num="20" count="0" type="stmt"/>
            <line num="21" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="ReflectiveRuntimeMXBean(Object)" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="getInputArguments() : List&lt;String&gt;" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="44" type="cond"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/management/ReflectiveThreadMXBean.java" name="ReflectiveThreadMXBean.java">
            <metrics coveredelements="23" coveredconditionals="2" complexity="17" loc="92" coveredmethods="4" methods="4" elements="32" classes="2" ncloc="60" statements="24" conditionals="4" coveredstatements="17"/>
            <class name="ReflectiveThreadMXBean">
               <metrics coveredelements="14" coveredconditionals="2" complexity="13" coveredmethods="3" methods="3" elements="23" statements="16" conditionals="4" coveredstatements="9"/>
            </class>
            <class name="ReflectiveThreadMXBean.Holder">
               <metrics coveredelements="9" coveredconditionals="0" complexity="4" coveredmethods="1" methods="1" elements="9" statements="8" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="4" visibility="package" signature="&lt;clinit&gt;, line 21()" num="21" count="1" type="method"/>
            <line num="22" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="ReflectiveThreadMXBean(Object)" num="40" count="1" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="6" visibility="public" signature="getThreadCpuTime(long) : long" num="48" count="2" type="method"/>
            <line num="49" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="49" type="cond"/>
            <line num="50" count="2" type="stmt"/>
            <line num="51" count="2" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="isThreadCpuTimeSupported() : boolean" num="74" count="2" type="method"/>
            <line num="75" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="75" type="cond"/>
            <line num="76" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/management/RuntimeMXBean.java" name="RuntimeMXBean.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="14" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="RuntimeMXBean">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/management/ThreadMXBean.java" name="ThreadMXBean.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="17" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ThreadMXBean">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="org.junit.internal.matchers">
         <metrics coveredelements="54" complexity="29" loc="259" methods="26" classes="6" statements="42" coveredconditionals="0" coveredmethods="21" elements="72" ncloc="173" files="6" conditionals="4" coveredstatements="33"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/matchers/StacktracePrintingMatcher.java" name="StacktracePrintingMatcher.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="7" loc="53" coveredmethods="7" methods="7" elements="16" classes="1" ncloc="38" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="StacktracePrintingMatcher">
               <metrics coveredelements="16" coveredconditionals="0" complexity="7" coveredmethods="7" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="StacktracePrintingMatcher(Matcher&lt;T&gt;)" num="18" count="45" type="method"/>
            <line num="19" count="45" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeTo(Description) : void" num="22" count="14" type="method"/>
            <line num="23" count="14" type="stmt"/>
            <line complexity="1" visibility="protected" signature="matchesSafely(T) : boolean" num="26" count="37" type="method"/>
            <line num="28" count="37" type="stmt"/>
            <line complexity="1" visibility="protected" signature="describeMismatchSafely(T,Description) : void" num="31" count="7" type="method"/>
            <line num="33" count="7" type="stmt"/>
            <line num="34" count="7" type="stmt"/>
            <line num="35" count="7" type="stmt"/>
            <line complexity="1" visibility="private" signature="readStacktrace(Throwable) : String" num="38" count="7" type="method"/>
            <line num="39" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="isThrowable(Matcher&lt;T&gt;) : Matcher&lt;T&gt;" num="42" count="44" type="method"/>
            <line num="45" count="44" type="stmt"/>
            <line complexity="1" visibility="public" signature="isException(Matcher&lt;T&gt;) : Matcher&lt;T&gt;" num="48" count="1" type="method"/>
            <line num="51" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/matchers/ThrowableCauseMatcher.java" name="ThrowableCauseMatcher.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="5" loc="50" coveredmethods="5" methods="5" elements="12" classes="1" ncloc="28" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="ThrowableCauseMatcher">
               <metrics coveredelements="12" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="12" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="ThrowableCauseMatcher(Matcher&lt;?&gt;)" num="19" count="6" type="method"/>
            <line num="20" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeTo(Description) : void" num="23" count="2" type="method"/>
            <line num="24" count="2" type="stmt"/>
            <line num="25" count="2" type="stmt"/>
            <line complexity="1" visibility="protected" signature="matchesSafely(T) : boolean" num="28" count="7" type="method"/>
            <line num="30" count="7" type="stmt"/>
            <line complexity="1" visibility="protected" signature="describeMismatchSafely(T,Description) : void" num="33" count="2" type="method"/>
            <line num="35" count="2" type="stmt"/>
            <line num="36" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasCause(Matcher&lt;?&gt;) : Matcher&lt;T&gt;" num="46" count="6" type="method"/>
            <line num="48" count="6" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/matchers/ThrowableMessageMatcher.java" name="ThrowableMessageMatcher.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="5" loc="37" coveredmethods="5" methods="5" elements="12" classes="1" ncloc="28" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="ThrowableMessageMatcher">
               <metrics coveredelements="12" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="12" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="ThrowableMessageMatcher(Matcher&lt;String&gt;)" num="13" count="26" type="method"/>
            <line num="14" count="26" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeTo(Description) : void" num="17" count="7" type="method"/>
            <line num="18" count="7" type="stmt"/>
            <line num="19" count="7" type="stmt"/>
            <line complexity="1" visibility="protected" signature="matchesSafely(T) : boolean" num="22" count="24" type="method"/>
            <line num="24" count="24" type="stmt"/>
            <line complexity="1" visibility="protected" signature="describeMismatchSafely(T,Description) : void" num="27" count="3" type="method"/>
            <line num="29" count="3" type="stmt"/>
            <line num="30" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasMessage(Matcher&lt;String&gt;) : Matcher&lt;T&gt;" num="33" count="26" type="method"/>
            <line num="35" count="26" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/matchers/TypeSafeMatcher.java" name="TypeSafeMatcher.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="63" coveredmethods="0" methods="5" elements="18" classes="1" ncloc="36" statements="9" conditionals="4" coveredstatements="0"/>
            <class name="TypeSafeMatcher">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="5" elements="18" statements="9" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="TypeSafeMatcher()" num="26" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="findExpectedType(Class&lt;?&gt;) : Class&lt;?&gt;" num="30" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="31" type="cond"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="33" type="cond"/>
            <line num="34" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isMatchesSafelyMethod(Method) : boolean" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="TypeSafeMatcher(Class&lt;T&gt;)" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="matches(Object) : boolean" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/internal/matchers/StacktracePrintingMatcherTest.java" name="StacktracePrintingMatcherTest.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="4" loc="38" coveredmethods="3" methods="3" elements="10" classes="1" ncloc="31" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="StacktracePrintingMatcherTest">
               <metrics coveredelements="10" complexity="4" methods="3" testruns="3" statements="7" coveredconditionals="0" coveredmethods="3" elements="10" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="7" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="succeedsWhenInnerMatcherSucceeds() : void" num="17" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="19" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="failsWhenInnerMatcherFails() : void" num="22" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="24" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="assertThatIncludesStacktrace() : void" num="27" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/internal/matchers/ThrowableCauseMatcherTest.java" name="ThrowableCauseMatcherTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="1" loc="18" coveredmethods="1" methods="1" elements="4" classes="1" ncloc="12" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="ThrowableCauseMatcherTest">
               <metrics coveredelements="4" complexity="1" methods="1" testruns="1" statements="3" coveredconditionals="0" coveredmethods="1" elements="4" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="shouldAllowCauseOfDifferentClassFromRoot() : void" num="11" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="13" count="1" type="stmt"/>
            <line num="14" count="1" type="stmt"/>
            <line num="16" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.junit.runner.manipulation">
         <metrics coveredelements="96" complexity="55" loc="564" methods="36" classes="12" statements="83" coveredconditionals="22" coveredmethods="21" elements="151" ncloc="280" files="10" conditionals="32" coveredstatements="53"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runner/manipulation/Alphanumeric.java" name="Alphanumeric.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="3" loc="27" coveredmethods="3" methods="3" elements="6" classes="1" ncloc="16" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="Alphanumeric">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="Alphanumeric()" num="14" count="3" type="method"/>
            <line num="15" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(Context) : Ordering" num="18" count="2" type="method"/>
            <line num="19" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="compare(Description,Description) : int" num="23" count="96" type="method"/>
            <line num="24" count="96" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runner/manipulation/Filter.java" name="Filter.java">
            <metrics coveredelements="33" coveredconditionals="8" complexity="16" loc="122" coveredmethods="7" methods="11" elements="40" classes="1" ncloc="68" statements="21" conditionals="8" coveredstatements="18"/>
            <class name="Filter">
               <metrics coveredelements="33" coveredconditionals="8" complexity="16" coveredmethods="7" methods="11" elements="40" statements="21" conditionals="8" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="public" signature="shouldRun(Description) : boolean" num="22" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="describe() : String" num="27" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Object) : void" num="32" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="intersect(Filter) : Filter" num="37" count="2" type="method"/>
            <line num="39" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="matchMethodDescription(Description) : Filter" num="47" count="53" type="method"/>
            <line num="48" count="53" type="stmt"/>
            <line complexity="3" visibility="public" signature="shouldRun(Description) : boolean" num="49" count="116" type="method"/>
            <line num="51" count="116" type="stmt"/>
            <line falsecount="4" truecount="112" num="51" type="cond"/>
            <line num="52" count="112" type="stmt"/>
            <line num="56" count="4" type="stmt"/>
            <line num="57" count="5" type="stmt"/>
            <line falsecount="3" truecount="2" num="57" type="cond"/>
            <line num="58" count="2" type="stmt"/>
            <line num="61" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="describe() : String" num="64" count="1" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="apply(Object) : void" num="92" count="1444" type="method"/>
            <line num="93" count="1444" type="stmt"/>
            <line falsecount="407" truecount="1037" num="93" type="cond"/>
            <line num="94" count="1037" type="stmt"/>
            <line num="96" count="407" type="stmt"/>
            <line num="97" count="407" type="stmt"/>
            <line complexity="3" visibility="public" signature="intersect(Filter) : Filter" num="104" count="4" type="method"/>
            <line num="105" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="105" type="cond"/>
            <line num="106" count="2" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line num="109" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldRun(Description) : boolean" num="110" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="describe() : String" num="116" count="2" type="method"/>
            <line num="118" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runner/manipulation/Filterable.java" name="Filterable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="19" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Filterable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runner/manipulation/InvalidOrderingException.java" name="InvalidOrderingException.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="21" coveredmethods="0" methods="3" elements="5" classes="1" ncloc="12" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="InvalidOrderingException">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="5" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="InvalidOrderingException()" num="11" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="InvalidOrderingException(String)" num="14" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="InvalidOrderingException(String,Throwable)" num="18" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runner/manipulation/NoTestsRemainException.java" name="NoTestsRemainException.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="10" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="NoTestsRemainException">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runner/manipulation/Orderable.java" name="Orderable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="21" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Orderable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runner/manipulation/Orderer.java" name="Orderer.java">
            <metrics coveredelements="21" coveredconditionals="6" complexity="8" loc="62" coveredmethods="3" methods="3" elements="29" classes="1" ncloc="38" statements="16" conditionals="10" coveredstatements="12"/>
            <class name="Orderer">
               <metrics coveredelements="21" coveredconditionals="6" complexity="8" coveredmethods="3" methods="3" elements="29" statements="16" conditionals="10" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="package" signature="Orderer(Ordering)" num="19" count="25" type="method"/>
            <line num="20" count="25" type="stmt"/>
            <line complexity="5" visibility="public" signature="order(Collection&lt;Description&gt;) : List&lt;Description&gt;" num="28" count="36" type="method"/>
            <line num="30" count="36" type="stmt"/>
            <line num="32" count="36" type="stmt"/>
            <line falsecount="36" truecount="0" num="32" type="cond"/>
            <line num="33" count="0" type="stmt"/>
            <line num="36" count="36" type="stmt"/>
            <line num="37" count="36" type="stmt"/>
            <line falsecount="36" truecount="0" num="37" type="cond"/>
            <line num="38" count="0" type="stmt"/>
            <line num="40" count="36" type="stmt"/>
            <line num="41" count="36" type="stmt"/>
            <line falsecount="36" truecount="0" num="41" type="cond"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="36" type="stmt"/>
            <line falsecount="36" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="47" count="36" type="stmt"/>
            <line complexity="2" visibility="public" signature="apply(Object) : void" num="56" count="108" type="method"/>
            <line num="57" count="108" type="stmt"/>
            <line falsecount="90" truecount="18" num="57" type="cond"/>
            <line num="58" count="18" type="stmt"/>
            <line num="59" count="18" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runner/manipulation/Ordering.java" name="Ordering.java">
            <metrics coveredelements="26" coveredconditionals="6" complexity="18" loc="172" coveredmethods="5" methods="10" elements="53" classes="3" ncloc="92" statements="31" conditionals="12" coveredstatements="15"/>
            <class name="Ordering">
               <metrics coveredelements="24" coveredconditionals="6" complexity="16" coveredmethods="4" methods="8" elements="49" statements="29" conditionals="12" coveredstatements="14"/>
            </class>
            <class name="Ordering.Context">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="Ordering.Factory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="shuffledBy(Random) : Ordering" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="validateOrderingIsCorrect() : boolean" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="orderItems(Collection&lt;Description&gt;) : List&lt;Description&gt;" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="definedBy(Class&lt;? extends Ordering.Factory&gt;,Description) : Ordering" num="55" count="20" type="method"/>
            <line num="58" count="20" type="stmt"/>
            <line falsecount="20" truecount="0" num="58" type="cond"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="20" type="stmt"/>
            <line falsecount="20" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="65" count="20" type="stmt"/>
            <line num="66" count="20" type="stmt"/>
            <line num="67" count="20" type="stmt"/>
            <line num="68" count="20" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="78" count="20" type="stmt"/>
            <line complexity="3" visibility="public" signature="definedBy(Ordering.Factory,Description) : Ordering" num="88" count="20" type="method"/>
            <line num="91" count="20" type="stmt"/>
            <line falsecount="20" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="94" count="20" type="stmt"/>
            <line falsecount="20" truecount="0" num="94" type="cond"/>
            <line num="95" count="0" type="stmt"/>
            <line num="98" count="20" type="stmt"/>
            <line complexity="2" visibility="private" signature="getClassName(Class&lt;?&gt;) : String" num="101" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="apply(Object) : void" num="115" count="27" type="method"/>
            <line num="121" count="27" type="stmt"/>
            <line falsecount="2" truecount="25" num="121" type="cond"/>
            <line num="122" count="25" type="stmt"/>
            <line num="123" count="25" type="stmt"/>
            <line complexity="1" visibility="package" signature="validateOrderingIsCorrect() : boolean" num="131" count="36" type="method"/>
            <line num="132" count="36" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTarget() : Description" num="149" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="Context(Description)" num="153" count="20" type="method"/>
            <line num="154" count="20" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runner/manipulation/Sortable.java" name="Sortable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="20" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Sortable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runner/manipulation/Sorter.java" name="Sorter.java">
            <metrics coveredelements="10" coveredconditionals="2" complexity="7" loc="90" coveredmethods="3" methods="6" elements="18" classes="1" ncloc="38" statements="10" conditionals="2" coveredstatements="5"/>
            <class name="Sorter">
               <metrics coveredelements="10" coveredconditionals="2" complexity="7" coveredmethods="3" methods="6" elements="18" statements="10" conditionals="2" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="compare(Description,Description) : int" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Sorter(Comparator&lt;Description&gt;)" num="37" count="16" type="method"/>
            <line num="38" count="16" type="stmt"/>
            <line complexity="2" visibility="public" signature="apply(Object) : void" num="46" count="62" type="method"/>
            <line num="53" count="62" type="stmt"/>
            <line falsecount="43" truecount="19" num="53" type="cond"/>
            <line num="54" count="19" type="stmt"/>
            <line num="55" count="19" type="stmt"/>
            <line complexity="1" visibility="public" signature="compare(Description,Description) : int" num="59" count="122" type="method"/>
            <line num="60" count="122" type="stmt"/>
            <line complexity="1" visibility="protected" signature="orderItems(Collection&lt;Description&gt;) : List&lt;Description&gt;" num="68" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="validateOrderingIsCorrect() : boolean" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.junit.experimental.runners">
         <metrics coveredelements="10" complexity="3" loc="45" methods="2" classes="1" statements="6" coveredconditionals="2" coveredmethods="2" elements="10" ncloc="20" files="1" conditionals="2" coveredstatements="6"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/experimental/runners/Enclosed.java" name="Enclosed.java">
            <metrics coveredelements="10" coveredconditionals="2" complexity="3" loc="45" coveredmethods="2" methods="2" elements="10" classes="1" ncloc="20" statements="6" conditionals="2" coveredstatements="6"/>
            <class name="Enclosed">
               <metrics coveredelements="10" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="10" statements="6" conditionals="2" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="Enclosed(Class&lt;?&gt;,RunnerBuilder)" num="30" count="21" type="method"/>
            <line num="31" count="21" type="stmt"/>
            <line complexity="2" visibility="private" signature="filterAbstractClasses(Class&lt;?&gt;[]) : Class&lt;?&gt;[]" num="34" count="21" type="method"/>
            <line num="35" count="21" type="stmt"/>
            <line num="37" count="21" type="stmt"/>
            <line num="38" count="77" type="stmt"/>
            <line falsecount="3" truecount="74" num="38" type="cond"/>
            <line num="39" count="74" type="stmt"/>
            <line num="43" count="21" type="stmt"/>
         </file>
      </package>
      <package name="org.junit.rules">
         <metrics coveredelements="1664" complexity="703" loc="6902" methods="647" classes="240" statements="1270" coveredconditionals="47" coveredmethods="546" elements="1985" ncloc="4771" files="41" conditionals="68" coveredstatements="1071"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/rules/DisableOnDebug.java" name="DisableOnDebug.java">
            <metrics coveredelements="18" coveredconditionals="4" complexity="8" loc="125" coveredmethods="4" methods="5" elements="20" classes="1" ncloc="36" statements="11" conditionals="4" coveredstatements="10"/>
            <class name="DisableOnDebug">
               <metrics coveredelements="18" coveredconditionals="4" complexity="8" coveredmethods="4" methods="5" elements="20" statements="11" conditionals="4" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="DisableOnDebug(TestRule)" num="56" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="DisableOnDebug(TestRule,List&lt;String&gt;)" num="68" count="8" type="method"/>
            <line num="69" count="8" type="stmt"/>
            <line num="70" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="apply(Statement,Description) : Statement" num="76" count="4" type="method"/>
            <line num="77" count="4" type="stmt"/>
            <line falsecount="1" truecount="3" num="77" type="cond"/>
            <line num="78" count="3" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="3" visibility="private" signature="isDebugging(List&lt;String&gt;) : boolean" num="104" count="8" type="method"/>
            <line num="105" count="8" type="stmt"/>
            <line num="106" count="8" type="stmt"/>
            <line falsecount="2" truecount="6" num="106" type="cond"/>
            <line num="107" count="6" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="isDebugging() : boolean" num="121" count="4" type="method"/>
            <line num="122" count="4" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/rules/ErrorCollector.java" name="ErrorCollector.java">
            <metrics coveredelements="32" coveredconditionals="3" complexity="12" loc="120" coveredmethods="7" methods="7" elements="34" classes="1" ncloc="60" statements="23" conditionals="4" coveredstatements="22"/>
            <class name="ErrorCollector">
               <metrics coveredelements="32" coveredconditionals="3" complexity="12" coveredmethods="7" methods="7" elements="34" statements="23" conditionals="4" coveredstatements="22"/>
            </class>
            <line complexity="1" visibility="protected" signature="verify() : void" num="40" count="19" type="method"/>
            <line num="42" count="19" type="stmt"/>
            <line complexity="3" visibility="public" signature="addError(Throwable) : void" num="48" count="17" type="method"/>
            <line num="49" count="17" type="stmt"/>
            <line falsecount="17" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
            <line num="52" count="17" type="stmt"/>
            <line falsecount="16" truecount="1" num="52" type="cond"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="checkThat(T,Matcher&lt;T&gt;) : void" num="65" count="3" type="method"/>
            <line num="66" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="checkThat(String,T,Matcher&lt;T&gt;) : void" num="74" count="6" type="method"/>
            <line num="75" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="call() : Object" num="76" count="6" type="method"/>
            <line num="77" count="6" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="checkSucceeds(Callable&lt;T&gt;) : T" num="88" count="12" type="method"/>
            <line num="89" count="12" type="stmt"/>
            <line num="90" count="12" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="93" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line num="97" count="7" type="stmt"/>
            <line num="98" count="7" type="stmt"/>
            <line complexity="2" visibility="public" signature="checkThrows(Class&lt;? extends Throwable&gt;,ThrowingRunnable) : void" num="112" count="3" type="method"/>
            <line num="113" count="3" type="stmt"/>
            <line num="114" count="3" type="stmt"/>
            <line num="116" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/rules/ExpectedException.java" name="ExpectedException.java">
            <metrics coveredelements="40" coveredconditionals="4" complexity="20" loc="285" coveredmethods="14" methods="17" elements="46" classes="2" ncloc="88" statements="25" conditionals="4" coveredstatements="22"/>
            <class name="ExpectedException">
               <metrics coveredelements="29" coveredconditionals="2" complexity="16" coveredmethods="12" methods="15" elements="35" statements="18" conditionals="2" coveredstatements="15"/>
            </class>
            <class name="ExpectedException.ExpectedExceptionStatement">
               <metrics coveredelements="11" coveredconditionals="2" complexity="4" coveredmethods="2" methods="2" elements="11" statements="7" conditionals="2" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="public" signature="none() : ExpectedException" num="121" count="124" type="method"/>
            <line num="123" count="124" type="stmt"/>
            <line complexity="1" visibility="private" signature="ExpectedException()" num="130" count="124" type="method"/>
            <line complexity="1" visibility="public" signature="handleAssertionErrors() : ExpectedException" num="138" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="handleAssumptionViolatedExceptions() : ExpectedException" num="148" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportMissingExceptionWithMessage(String) : ExpectedException" num="163" count="2" type="method"/>
            <line num="164" count="2" type="stmt"/>
            <line num="165" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Statement,org.junit.runner.Description) : Statement" num="168" count="124" type="method"/>
            <line num="170" count="124" type="stmt"/>
            <line complexity="1" visibility="public" signature="expect(Matcher&lt;?&gt;) : void" num="183" count="66" type="method"/>
            <line num="184" count="66" type="stmt"/>
            <line complexity="1" visibility="public" signature="expect(Class&lt;? extends Throwable&gt;) : void" num="196" count="35" type="method"/>
            <line num="197" count="35" type="stmt"/>
            <line complexity="1" visibility="public" signature="expectMessage(String) : void" num="209" count="24" type="method"/>
            <line num="210" count="24" type="stmt"/>
            <line complexity="1" visibility="public" signature="expectMessage(Matcher&lt;String&gt;) : void" num="222" count="26" type="method"/>
            <line num="223" count="26" type="stmt"/>
            <line complexity="1" visibility="public" signature="expectCause(Matcher&lt;?&gt;) : void" num="236" count="0" type="method"/>
            <line num="237" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isAnyExceptionExpected() : boolean" num="244" count="124" type="method"/>
            <line num="245" count="124" type="stmt"/>
            <line complexity="1" visibility="public" signature="ExpectedExceptionStatement(Statement)" num="251" count="124" type="method"/>
            <line num="252" count="124" type="stmt"/>
            <line complexity="3" visibility="public" signature="evaluate() : void" num="255" count="124" type="method"/>
            <line num="257" count="124" type="stmt"/>
            <line num="258" count="124" type="stmt"/>
            <line num="260" count="37" type="stmt"/>
            <line num="261" count="29" type="stmt"/>
            <line num="263" count="87" type="stmt"/>
            <line falsecount="80" truecount="7" num="263" type="cond"/>
            <line num="264" count="7" type="stmt"/>
            <line complexity="2" visibility="private" signature="handleException(Throwable) : void" num="269" count="37" type="method"/>
            <line num="270" count="37" type="stmt"/>
            <line falsecount="2" truecount="35" num="270" type="cond"/>
            <line num="271" count="35" type="stmt"/>
            <line num="273" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="failDueToMissingException() : void" num="277" count="7" type="method"/>
            <line num="278" count="7" type="stmt"/>
            <line complexity="1" visibility="private" signature="missingExceptionMessage() : String" num="281" count="7" type="method"/>
            <line num="282" count="7" type="stmt"/>
            <line num="283" count="7" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/rules/ExpectedExceptionMatcherBuilder.java" name="ExpectedExceptionMatcherBuilder.java">
            <metrics coveredelements="16" coveredconditionals="2" complexity="7" loc="46" coveredmethods="6" methods="6" elements="16" classes="1" ncloc="32" statements="8" conditionals="2" coveredstatements="8"/>
            <class name="ExpectedExceptionMatcherBuilder">
               <metrics coveredelements="16" coveredconditionals="2" complexity="7" coveredmethods="6" methods="6" elements="16" statements="8" conditionals="2" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="package" signature="add(Matcher&lt;?&gt;) : void" num="18" count="66" type="method"/>
            <line num="19" count="66" type="stmt"/>
            <line complexity="1" visibility="package" signature="expectsThrowable() : boolean" num="22" count="124" type="method"/>
            <line num="23" count="124" type="stmt"/>
            <line complexity="1" visibility="package" signature="build() : Matcher&lt;Throwable&gt;" num="26" count="42" type="method"/>
            <line num="27" count="42" type="stmt"/>
            <line complexity="2" visibility="private" signature="allOfTheMatchers() : Matcher&lt;Throwable&gt;" num="30" count="42" type="method"/>
            <line num="31" count="42" type="stmt"/>
            <line falsecount="20" truecount="22" num="31" type="cond"/>
            <line num="32" count="22" type="stmt"/>
            <line num="34" count="20" type="stmt"/>
            <line complexity="1" visibility="private" signature="castedMatchers() : List&lt;Matcher&lt;? super Throwable&gt;&gt;" num="37" count="20" type="method"/>
            <line num="39" count="20" type="stmt"/>
            <line complexity="1" visibility="private" signature="cast(Matcher&lt;?&gt;) : Matcher&lt;Throwable&gt;" num="42" count="22" type="method"/>
            <line num="44" count="22" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/rules/ExternalResource.java" name="ExternalResource.java">
            <metrics coveredelements="16" coveredconditionals="0" complexity="7" loc="84" coveredmethods="5" methods="5" elements="16" classes="1" ncloc="36" statements="11" conditionals="0" coveredstatements="11"/>
            <class name="ExternalResource">
               <metrics coveredelements="16" coveredconditionals="0" complexity="7" coveredmethods="5" methods="5" elements="16" statements="11" conditionals="0" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="apply(Statement,Description) : Statement" num="42" count="36" type="method"/>
            <line num="43" count="36" type="stmt"/>
            <line complexity="1" visibility="private" signature="statement(Statement) : Statement" num="46" count="36" type="method"/>
            <line num="47" count="36" type="stmt"/>
            <line complexity="3" visibility="public" signature="evaluate() : void" num="48" count="36" type="method"/>
            <line num="50" count="36" type="stmt"/>
            <line num="52" count="36" type="stmt"/>
            <line num="53" count="36" type="stmt"/>
            <line num="54" count="36" type="stmt"/>
            <line num="56" count="18" type="stmt"/>
            <line num="58" count="36" type="stmt"/>
            <line num="59" count="36" type="stmt"/>
            <line num="61" count="5" type="stmt"/>
            <line num="64" count="36" type="stmt"/>
            <line complexity="1" visibility="protected" signature="before() : void" num="74" count="4" type="method"/>
            <line complexity="1" visibility="protected" signature="after() : void" num="81" count="4" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/rules/MethodRule.java" name="MethodRule.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="32" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="MethodRule">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/rules/RuleChain.java" name="RuleChain.java">
            <metrics coveredelements="17" coveredconditionals="2" complexity="6" loc="113" coveredmethods="5" methods="5" elements="17" classes="1" ncloc="32" statements="10" conditionals="2" coveredstatements="10"/>
            <class name="RuleChain">
               <metrics coveredelements="17" coveredconditionals="2" complexity="6" coveredmethods="5" methods="5" elements="17" statements="10" conditionals="2" coveredstatements="10"/>
            </class>
            <line complexity="1" visibility="public" signature="emptyRuleChain() : RuleChain" num="70" count="8" type="method"/>
            <line num="71" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="outerRule(TestRule) : RuleChain" num="81" count="7" type="method"/>
            <line num="82" count="7" type="stmt"/>
            <line complexity="1" visibility="private" signature="RuleChain(List&lt;TestRule&gt;)" num="85" count="15" type="method"/>
            <line num="86" count="15" type="stmt"/>
            <line complexity="2" visibility="public" signature="around(TestRule) : RuleChain" num="97" count="16" type="method"/>
            <line num="98" count="16" type="stmt"/>
            <line falsecount="14" truecount="2" num="98" type="cond"/>
            <line num="99" count="2" type="stmt"/>
            <line num="101" count="14" type="stmt"/>
            <line num="102" count="14" type="stmt"/>
            <line num="103" count="14" type="stmt"/>
            <line num="104" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Statement,Description) : Statement" num="110" count="6" type="method"/>
            <line num="111" count="6" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/rules/RunRules.java" name="RunRules.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="3" loc="30" coveredmethods="3" methods="3" elements="8" classes="1" ncloc="20" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="RunRules">
               <metrics coveredelements="8" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="RunRules(Statement,Iterable&lt;TestRule&gt;,Description)" num="14" count="22" type="method"/>
            <line num="15" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : void" num="18" count="21" type="method"/>
            <line num="20" count="21" type="stmt"/>
            <line complexity="1" visibility="private" signature="applyAll(Statement,Iterable&lt;TestRule&gt;,Description) : Statement" num="23" count="22" type="method"/>
            <line num="25" count="22" type="stmt"/>
            <line num="26" count="33" type="stmt"/>
            <line num="28" count="21" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/rules/Stopwatch.java" name="Stopwatch.java">
            <metrics coveredelements="33" coveredconditionals="3" complexity="19" loc="183" coveredmethods="11" methods="17" elements="43" classes="3" ncloc="72" statements="22" conditionals="4" coveredstatements="19"/>
            <class name="Stopwatch">
               <metrics coveredelements="20" coveredconditionals="3" complexity="13" coveredmethods="6" methods="11" elements="28" statements="13" conditionals="4" coveredstatements="11"/>
            </class>
            <class name="Stopwatch.InternalWatcher">
               <metrics coveredelements="13" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="13" statements="8" conditionals="0" coveredstatements="8"/>
            </class>
            <class name="Stopwatch.Clock">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Stopwatch()" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="Stopwatch(Clock)" num="88" count="5" type="method"/>
            <line num="89" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="runtime(TimeUnit) : long" num="98" count="5" type="method"/>
            <line num="99" count="5" type="stmt"/>
            <line complexity="1" visibility="protected" signature="succeeded(long,Description) : void" num="105" count="0" type="method"/>
            <line complexity="1" visibility="protected" signature="failed(long,Throwable,Description) : void" num="111" count="0" type="method"/>
            <line complexity="1" visibility="protected" signature="skipped(long,AssumptionViolatedException,Description) : void" num="117" count="0" type="method"/>
            <line complexity="1" visibility="protected" signature="finished(long,Description) : void" num="123" count="0" type="method"/>
            <line complexity="3" visibility="private" signature="getNanos() : long" num="126" count="15" type="method"/>
            <line num="127" count="15" type="stmt"/>
            <line falsecount="15" truecount="0" num="127" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line num="130" count="15" type="stmt"/>
            <line num="131" count="15" type="stmt"/>
            <line falsecount="12" truecount="3" num="131" type="cond"/>
            <line num="132" count="3" type="stmt"/>
            <line num="135" count="15" type="stmt"/>
            <line complexity="1" visibility="private" signature="starting() : void" num="138" count="5" type="method"/>
            <line num="139" count="5" type="stmt"/>
            <line num="140" count="5" type="stmt"/>
            <line complexity="1" visibility="private" signature="stopping() : void" num="143" count="5" type="method"/>
            <line num="144" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Statement,Description) : Statement" num="147" count="5" type="method"/>
            <line num="148" count="5" type="stmt"/>
            <line complexity="1" visibility="protected" signature="starting(Description) : void" num="153" count="5" type="method"/>
            <line num="154" count="5" type="stmt"/>
            <line complexity="1" visibility="protected" signature="finished(Description) : void" num="157" count="5" type="method"/>
            <line num="158" count="5" type="stmt"/>
            <line complexity="1" visibility="protected" signature="succeeded(Description) : void" num="161" count="3" type="method"/>
            <line num="162" count="3" type="stmt"/>
            <line num="163" count="3" type="stmt"/>
            <line complexity="1" visibility="protected" signature="failed(Throwable,Description) : void" num="166" count="1" type="method"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="skipped(AssumptionViolatedException,Description) : void" num="171" count="1" type="method"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="nanoTime() : long" num="179" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/rules/TemporaryFolder.java" name="TemporaryFolder.java">
            <metrics coveredelements="98" coveredconditionals="20" complexity="37" loc="310" coveredmethods="20" methods="21" elements="121" classes="2" ncloc="155" statements="70" conditionals="30" coveredstatements="58"/>
            <class name="TemporaryFolder">
               <metrics coveredelements="92" coveredconditionals="20" complexity="33" coveredmethods="17" methods="17" elements="112" statements="65" conditionals="30" coveredstatements="55"/>
            </class>
            <class name="TemporaryFolder.Builder">
               <metrics coveredelements="6" coveredconditionals="0" complexity="4" coveredmethods="3" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="TemporaryFolder()" num="54" count="57" type="method"/>
            <line num="55" count="57" type="stmt"/>
            <line complexity="1" visibility="public" signature="TemporaryFolder(File)" num="65" count="58" type="method"/>
            <line num="66" count="58" type="stmt"/>
            <line num="67" count="58" type="stmt"/>
            <line complexity="1" visibility="protected" signature="TemporaryFolder(Builder)" num="74" count="1" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="builder() : Builder" num="84" count="1" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="Builder()" num="97" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="parentFolder(File) : Builder" num="106" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assureDeletion() : Builder" num="118" count="1" type="method"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : TemporaryFolder" num="126" count="1" type="method"/>
            <line num="127" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="before() : void" num="131" count="23" type="method"/>
            <line num="133" count="23" type="stmt"/>
            <line complexity="1" visibility="protected" signature="after() : void" num="136" count="23" type="method"/>
            <line num="138" count="23" type="stmt"/>
            <line complexity="1" visibility="public" signature="create() : void" num="146" count="44" type="method"/>
            <line num="147" count="44" type="stmt"/>
            <line complexity="2" visibility="public" signature="newFile(String) : File" num="153" count="10" type="method"/>
            <line num="154" count="10" type="stmt"/>
            <line num="155" count="8" type="stmt"/>
            <line falsecount="5" truecount="0" num="155" type="cond"/>
            <line num="156" count="0" type="stmt"/>
            <line num="159" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="newFile() : File" num="165" count="25" type="method"/>
            <line num="166" count="25" type="stmt"/>
            <line complexity="1" visibility="public" signature="newFolder(String) : File" num="173" count="11" type="method"/>
            <line num="174" count="11" type="stmt"/>
            <line complexity="7" visibility="public" signature="newFolder(String) : File" num="184" count="19" type="method"/>
            <line num="185" count="19" type="stmt"/>
            <line falsecount="18" truecount="0" num="185" type="cond"/>
            <line num="186" count="0" type="stmt"/>
            <line num="193" count="18" type="stmt"/>
            <line num="194" count="16" type="stmt"/>
            <line num="195" count="27" type="stmt"/>
            <line falsecount="26" truecount="0" num="195" type="cond"/>
            <line num="196" count="0" type="stmt"/>
            <line num="200" count="15" type="stmt"/>
            <line num="201" count="15" type="stmt"/>
            <line num="202" count="15" type="stmt"/>
            <line num="203" count="15" type="stmt"/>
            <line num="204" count="26" type="stmt"/>
            <line num="205" count="26" type="stmt"/>
            <line num="207" count="26" type="stmt"/>
            <line num="208" count="26" type="stmt"/>
            <line falsecount="25" truecount="0" num="208" type="cond"/>
            <line num="209" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="209" type="cond"/>
            <line num="210" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="218" count="14" type="stmt"/>
            <line falsecount="12" truecount="0" num="218" type="cond"/>
            <line num="219" count="0" type="stmt"/>
            <line num="222" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="newFolder() : File" num="228" count="22" type="method"/>
            <line num="229" count="22" type="stmt"/>
            <line complexity="3" visibility="private" signature="createTemporaryFolderIn(File) : File" num="232" count="65" type="method"/>
            <line num="233" count="65" type="stmt"/>
            <line num="234" count="65" type="stmt"/>
            <line falsecount="0" truecount="65" num="234" type="cond"/>
            <line num="236" count="65" type="stmt"/>
            <line num="237" count="65" type="stmt"/>
            <line num="238" count="65" type="stmt"/>
            <line num="240" count="65" type="stmt"/>
            <line num="241" count="65" type="stmt"/>
            <line num="242" count="65" type="stmt"/>
            <line falsecount="0" truecount="65" num="242" type="cond"/>
            <line num="243" count="65" type="stmt"/>
            <line num="244" count="65" type="stmt"/>
            <line num="246" count="0" type="stmt"/>
            <line num="248" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getRoot() : File" num="256" count="102" type="method"/>
            <line num="257" count="102" type="stmt"/>
            <line falsecount="94" truecount="8" num="257" type="cond"/>
            <line num="258" count="8" type="stmt"/>
            <line num="261" count="94" type="stmt"/>
            <line complexity="3" visibility="public" signature="delete() : void" num="271" count="52" type="method"/>
            <line num="272" count="52" type="stmt"/>
            <line falsecount="49" truecount="3" num="272" type="cond"/>
            <line num="273" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="273" type="cond"/>
            <line num="274" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="tryDelete() : boolean" num="286" count="52" type="method"/>
            <line num="287" count="52" type="stmt"/>
            <line falsecount="44" truecount="8" num="287" type="cond"/>
            <line num="288" count="8" type="stmt"/>
            <line num="291" count="44" type="stmt"/>
            <line complexity="4" visibility="private" signature="recursiveDelete(File) : boolean" num="294" count="143" type="method"/>
            <line num="297" count="143" type="stmt"/>
            <line falsecount="64" truecount="79" num="297" type="cond"/>
            <line num="298" count="79" type="stmt"/>
            <line num="300" count="64" type="stmt"/>
            <line num="301" count="64" type="stmt"/>
            <line falsecount="3" truecount="61" num="301" type="cond"/>
            <line num="302" count="61" type="stmt"/>
            <line num="303" count="99" type="stmt"/>
            <line falsecount="99" truecount="0" num="303" type="cond"/>
            <line num="304" count="0" type="stmt"/>
            <line num="308" count="64" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/rules/TestName.java" name="TestName.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="41" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="12" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="TestName">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="protected" signature="starting(Description) : void" num="30" count="11" type="method"/>
            <line num="32" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMethodName() : String" num="38" count="8" type="method"/>
            <line num="39" count="8" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/rules/TestRule.java" name="TestRule.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="56" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TestRule">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/rules/TestWatcher.java" name="TestWatcher.java">
            <metrics coveredelements="46" coveredconditionals="2" complexity="21" loc="170" coveredmethods="13" methods="13" elements="46" classes="1" ncloc="93" statements="31" conditionals="2" coveredstatements="31"/>
            <class name="TestWatcher">
               <metrics coveredelements="46" coveredconditionals="2" complexity="21" coveredmethods="13" methods="13" elements="46" statements="31" conditionals="2" coveredstatements="31"/>
            </class>
            <line complexity="1" visibility="public" signature="apply(Statement,Description) : Statement" num="53" count="46" type="method"/>
            <line num="54" count="46" type="stmt"/>
            <line complexity="3" visibility="public" signature="evaluate() : void" num="55" count="46" type="method"/>
            <line num="57" count="46" type="stmt"/>
            <line num="59" count="46" type="stmt"/>
            <line num="60" count="46" type="stmt"/>
            <line num="61" count="46" type="stmt"/>
            <line num="62" count="29" type="stmt"/>
            <line num="64" count="10" type="stmt"/>
            <line num="65" count="10" type="stmt"/>
            <line num="67" count="7" type="stmt"/>
            <line num="68" count="7" type="stmt"/>
            <line num="70" count="46" type="stmt"/>
            <line num="73" count="46" type="stmt"/>
            <line complexity="2" visibility="private" signature="succeededQuietly(Description,List&lt;Throwable&gt;) : void" num="78" count="29" type="method"/>
            <line num="80" count="29" type="stmt"/>
            <line num="81" count="29" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="failedQuietly(Throwable,Description,List&lt;Throwable&gt;) : void" num="87" count="7" type="method"/>
            <line num="89" count="7" type="stmt"/>
            <line num="90" count="7" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line complexity="3" visibility="private" signature="skippedQuietly(org.junit.internal.AssumptionViolatedException,Description,List&lt;Throwable&gt;) : void" num="96" count="10" type="method"/>
            <line num="99" count="10" type="stmt"/>
            <line num="100" count="10" type="stmt"/>
            <line falsecount="4" truecount="6" num="100" type="cond"/>
            <line num="101" count="6" type="stmt"/>
            <line num="103" count="4" type="stmt"/>
            <line num="106" count="2" type="stmt"/>
            <line complexity="2" visibility="private" signature="startingQuietly(Description,List&lt;Throwable&gt;) : void" num="110" count="46" type="method"/>
            <line num="112" count="46" type="stmt"/>
            <line num="113" count="46" type="stmt"/>
            <line num="115" count="4" type="stmt"/>
            <line complexity="2" visibility="private" signature="finishedQuietly(Description,List&lt;Throwable&gt;) : void" num="119" count="46" type="method"/>
            <line num="121" count="46" type="stmt"/>
            <line num="122" count="46" type="stmt"/>
            <line num="124" count="4" type="stmt"/>
            <line complexity="1" visibility="protected" signature="succeeded(Description) : void" num="131" count="19" type="method"/>
            <line complexity="1" visibility="protected" signature="failed(Throwable,Description) : void" num="137" count="1" type="method"/>
            <line complexity="1" visibility="protected" signature="skipped(AssumptionViolatedException,Description) : void" num="143" count="1" type="method"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="skipped(org.junit.internal.AssumptionViolatedException,Description) : void" num="154" count="1" type="method"/>
            <line complexity="1" visibility="protected" signature="starting(Description) : void" num="162" count="10" type="method"/>
            <line complexity="1" visibility="protected" signature="finished(Description) : void" num="168" count="16" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/rules/TestWatchman.java" name="TestWatchman.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="8" loc="91" coveredmethods="4" methods="6" elements="15" classes="1" ncloc="35" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="TestWatchman">
               <metrics coveredelements="13" coveredconditionals="0" complexity="8" coveredmethods="4" methods="6" elements="15" statements="9" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="apply(Statement,FrameworkMethod,Object) : Statement" num="46" count="8" type="method"/>
            <line num="48" count="8" type="stmt"/>
            <line complexity="3" visibility="public" signature="evaluate() : void" num="49" count="8" type="method"/>
            <line num="51" count="8" type="stmt"/>
            <line num="52" count="8" type="stmt"/>
            <line num="53" count="8" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line num="58" count="4" type="stmt"/>
            <line num="59" count="4" type="stmt"/>
            <line num="61" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="succeeded(FrameworkMethod) : void" num="70" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="failed(Throwable,FrameworkMethod) : void" num="76" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="starting(FrameworkMethod) : void" num="82" count="3" type="method"/>
            <line complexity="1" visibility="public" signature="finished(FrameworkMethod) : void" num="89" count="3" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/rules/Timeout.java" name="Timeout.java">
            <metrics coveredelements="40" coveredconditionals="0" complexity="19" loc="233" coveredmethods="16" methods="18" elements="44" classes="2" ncloc="85" statements="26" conditionals="0" coveredstatements="24"/>
            <class name="Timeout">
               <metrics coveredelements="24" coveredconditionals="0" complexity="12" coveredmethods="9" methods="11" elements="28" statements="17" conditionals="0" coveredstatements="15"/>
            </class>
            <class name="Timeout.Builder">
               <metrics coveredelements="16" coveredconditionals="0" complexity="7" coveredmethods="7" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="builder() : Builder" num="50" count="2" type="method"/>
            <line num="51" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="Timeout(int)" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Timeout(long,TimeUnit)" num="80" count="15" type="method"/>
            <line num="81" count="15" type="stmt"/>
            <line num="82" count="15" type="stmt"/>
            <line num="83" count="15" type="stmt"/>
            <line complexity="1" visibility="protected" signature="Timeout(Builder)" num="92" count="2" type="method"/>
            <line num="93" count="2" type="stmt"/>
            <line num="94" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="millis(long) : Timeout" num="104" count="6" type="method"/>
            <line num="105" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="seconds(long) : Timeout" num="114" count="1" type="method"/>
            <line num="115" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getTimeout(TimeUnit) : long" num="123" count="1" type="method"/>
            <line num="124" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getLookingForStuckThread() : boolean" num="133" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="createFailOnTimeoutStatement(Statement) : Statement" num="145" count="17" type="method"/>
            <line num="147" count="17" type="stmt"/>
            <line complexity="2" visibility="public" signature="apply(Statement,Description) : Statement" num="153" count="17" type="method"/>
            <line num="154" count="17" type="stmt"/>
            <line num="155" count="17" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : void" num="158" count="1" type="method"/>
            <line num="159" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="Builder()" num="175" count="2" type="method"/>
            <line complexity="1" visibility="public" signature="withTimeout(long,TimeUnit) : Builder" num="193" count="2" type="method"/>
            <line num="194" count="2" type="stmt"/>
            <line num="195" count="2" type="stmt"/>
            <line num="196" count="2" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getTimeout() : long" num="199" count="2" type="method"/>
            <line num="200" count="2" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getTimeUnit() : TimeUnit" num="203" count="2" type="method"/>
            <line num="204" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="withLookingForStuckThread(boolean) : Builder" num="216" count="2" type="method"/>
            <line num="217" count="2" type="stmt"/>
            <line num="218" count="2" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getLookingForStuckThread() : boolean" num="221" count="2" type="method"/>
            <line num="222" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : Timeout" num="229" count="2" type="method"/>
            <line num="230" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/rules/Verifier.java" name="Verifier.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="3" loc="47" coveredmethods="2" methods="3" elements="6" classes="1" ncloc="16" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="Verifier">
               <metrics coveredelements="5" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="apply(Statement,Description) : Statement" num="31" count="21" type="method"/>
            <line num="32" count="21" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : void" num="33" count="21" type="method"/>
            <line num="35" count="21" type="stmt"/>
            <line num="36" count="20" type="stmt"/>
            <line complexity="1" visibility="protected" signature="verify() : void" num="45" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/rules/AllRulesTests.java" name="AllRulesTests.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="31" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="29" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AllRulesTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/rules/BlockJUnit4ClassRunnerOverrideTest.java" name="BlockJUnit4ClassRunnerOverrideTest.java">
            <metrics coveredelements="47" coveredconditionals="0" complexity="21" loc="175" coveredmethods="19" methods="19" elements="51" classes="10" ncloc="129" statements="28" conditionals="4" coveredstatements="28"/>
            <class name="BlockJUnit4ClassRunnerOverrideTest">
               <metrics coveredelements="8" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="BlockJUnit4ClassRunnerOverrideTest.FlipBitRule">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="BlockJUnit4ClassRunnerOverrideTest.OverrideRulesRunner">
               <metrics coveredelements="6" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="BlockJUnit4ClassRunnerOverrideTest.OverrideRulesTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="BlockJUnit4ClassRunnerOverrideTest.OverrideTestRulesRunner">
               <metrics coveredelements="8" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <class name="BlockJUnit4ClassRunnerOverrideTest.OverrideTestRulesTest">
               <metrics coveredelements="0" complexity="0" methods="0" testruns="1" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="1"/>
            </class>
            <class name="BlockJUnit4ClassRunnerOverrideTest.OverrideCreateTestRunner">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="2" methods="2" elements="8" statements="4" conditionals="2" coveredstatements="4"/>
            </class>
            <class name="BlockJUnit4ClassRunnerOverrideTest.OverrideCreateTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="2" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="2" testpasses="2"/>
            </class>
            <class name="BlockJUnit4ClassRunnerOverrideTest.CreateTestDefersToNoArgCreateTestRunner">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="2" methods="2" elements="8" statements="4" conditionals="2" coveredstatements="4"/>
            </class>
            <class name="BlockJUnit4ClassRunnerOverrideTest.CreateTestDefersToNoArgCreateTestTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="apply(Statement,FrameworkMethod,Object) : Statement" num="22" count="2" type="method"/>
            <line num="24" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : void" num="25" count="2" type="method"/>
            <line num="27" count="2" type="stmt"/>
            <line num="28" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="OverrideRulesRunner(Class&lt;?&gt;)" num="36" count="1" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="rules(Object) : List&lt;MethodRule&gt;" num="40" count="1" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFlipBit() : void" num="53" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="55" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="overrideRulesMethod() : void" num="59" count="1" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="OverrideTestRulesRunner(Class&lt;?&gt;)" num="65" count="1" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getTestRules(Object) : List&lt;TestRule&gt;" num="70" count="1" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Statement,Description) : Statement" num="75" count="1" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="overrideTestRulesMethod() : void" num="87" count="1" type="method"/>
            <line num="89" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="OverrideCreateTestRunner(Class&lt;?&gt;)" num="100" count="1" type="method"/>
            <line num="101" count="1" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line complexity="1" visibility="protected" signature="createTest(FrameworkMethod) : Object" num="106" count="2" type="method"/>
            <line num="108" count="2" type="stmt"/>
            <line num="110" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMethodA() : void" num="120" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="122" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMethodB() : void" num="125" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="127" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="overrideCreateTestMethod() : void" num="131" count="1" type="method"/>
            <line num="133" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="CreateTestDefersToNoArgCreateTestRunner(Class&lt;?&gt;)" num="145" count="1" type="method"/>
            <line num="146" count="1" type="stmt"/>
            <line falsecount="0" truecount="0" num="148" type="cond"/>
            <line complexity="1" visibility="protected" signature="createTest() : Object" num="151" count="1" type="method"/>
            <line num="153" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCreateTestCalled() : void" num="165" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="167" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="createTestDefersToNoArgCreateTest() : void" num="171" count="1" type="method"/>
            <line num="173" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/rules/ClassRulesTest.java" name="ClassRulesTest.java">
            <metrics coveredelements="128" coveredconditionals="0" complexity="47" loc="366" coveredmethods="47" methods="47" elements="128" classes="18" ncloc="295" statements="81" conditionals="0" coveredstatements="81"/>
            <class name="ClassRulesTest">
               <metrics coveredelements="52" coveredconditionals="0" complexity="12" coveredmethods="12" methods="12" elements="52" statements="40" conditionals="0" coveredstatements="40"/>
            </class>
            <class name="ClassRulesTest.Counter">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="ClassRulesTest.ExampleTestWithClassRule">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="2" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="2" testpasses="2"/>
            </class>
            <class name="ClassRulesTest.SubclassOfTestWithClassRule">
               <metrics coveredelements="0" complexity="0" methods="0" testruns="2" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="0" testpasses="2"/>
            </class>
            <class name="ClassRulesTest.CustomCounter">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="ClassRulesTest.ExampleTestWithCustomClassRule">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="2" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="2" testpasses="2"/>
            </class>
            <class name="ClassRulesTest.OrderTestRule">
               <metrics coveredelements="7" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="ClassRulesTest.UsesFieldAndMethodRule">
               <metrics coveredelements="5" complexity="2" methods="2" testruns="1" statements="3" coveredconditionals="0" coveredmethods="2" elements="5" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <class name="ClassRulesTest.MethodExampleTestWithClassRule">
               <metrics coveredelements="6" complexity="3" methods="3" testruns="2" statements="3" coveredconditionals="0" coveredmethods="3" elements="6" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="3" testpasses="2"/>
            </class>
            <class name="ClassRulesTest.MethodSubclassOfTestWithClassRule">
               <metrics coveredelements="0" complexity="0" methods="0" testruns="2" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="2"/>
            </class>
            <class name="ClassRulesTest.MethodExampleTestWithCustomClassRule">
               <metrics coveredelements="6" complexity="3" methods="3" testruns="2" statements="3" coveredconditionals="0" coveredmethods="3" elements="6" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="3" testpasses="2"/>
            </class>
            <class name="ClassRulesTest.CallMethodOnlyOnceRule">
               <metrics coveredelements="5" complexity="2" methods="2" testruns="1" statements="3" coveredconditionals="0" coveredmethods="2" elements="5" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <class name="ClassRulesTest.CallMethodOnlyOnceRule.Dummy">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="ClassRulesTest.ClassRuleOrdering">
               <metrics coveredelements="8" complexity="4" methods="4" testruns="2" statements="4" coveredconditionals="0" coveredmethods="4" elements="8" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="4" testpasses="2"/>
            </class>
            <class name="ClassRulesTest.ClassRuleOrderingDefault">
               <metrics coveredelements="8" complexity="4" methods="4" testruns="2" statements="4" coveredconditionals="0" coveredmethods="4" elements="8" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="4" testpasses="2"/>
            </class>
            <class name="ClassRulesTest.RunnerWithClassRuleAddedProgrammatically">
               <metrics coveredelements="6" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="ClassRulesTest.ClassRulesModifiableListEmpty">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="ClassRulesTest.ClassRulesModifiableList">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="1" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="protected" signature="before() : void" num="34" count="4" type="method"/>
            <line num="36" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="firstTest() : void" num="44" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="46" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="secondTest() : void" num="49" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="51" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="ruleIsAppliedOnce() : void" num="55" count="1" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ruleIsIntroducedAndEvaluatedOnSubclass() : void" num="67" count="1" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Statement,Description) : Statement" num="77" count="2" type="method"/>
            <line num="78" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : void" num="79" count="2" type="method"/>
            <line num="81" count="2" type="stmt"/>
            <line num="82" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="firstTest() : void" num="92" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="94" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="secondTest() : void" num="97" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="99" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="customRuleIsAppliedOnce() : void" num="104" count="1" type="method"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="OrderTestRule(String)" num="117" count="2" type="method"/>
            <line num="118" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Statement,Description) : Statement" num="121" count="2" type="method"/>
            <line num="122" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : void" num="123" count="2" type="method"/>
            <line num="125" count="2" type="stmt"/>
            <line num="126" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="orderMethod() : OrderTestRule" num="133" count="1" type="method"/>
            <line num="135" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="foo() : void" num="141" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="usesFieldAndMethodRule() : void" num="148" count="1" type="method"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCounter() : Counter" num="158" count="2" type="method"/>
            <line num="160" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="firstTest() : void" num="163" testsuccess="true" count="2" testduration="0.001" type="method"/>
            <line num="165" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="secondTest() : void" num="168" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="170" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="methodRuleIsAppliedOnce() : void" num="174" count="1" type="method"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="methodRuleIsIntroducedAndEvaluatedOnSubclass() : void" num="186" count="1" type="method"/>
            <line num="188" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCounter() : CustomCounter" num="196" count="1" type="method"/>
            <line num="198" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="firstTest() : void" num="201" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="203" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="secondTest() : void" num="206" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="208" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="methodCustomRuleIsAppliedOnce() : void" num="213" count="1" type="method"/>
            <line num="215" count="1" type="stmt"/>
            <line num="216" count="1" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Statement,Description) : Statement" num="225" count="1" type="method"/>
            <line num="226" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : void" num="227" count="1" type="method"/>
            <line num="229" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="both() : Dummy" num="235" count="1" type="method"/>
            <line num="237" count="1" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="onlyOnce() : void" num="241" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="243" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCallMethodOnlyOnceRule() : void" num="247" count="1" type="method"/>
            <line num="249" count="1" type="stmt"/>
            <line num="250" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="a() : TestRule" num="257" count="1" type="method"/>
            <line num="259" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="z() : TestRule" num="262" count="1" type="method"/>
            <line num="264" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="foo() : void" num="267" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="269" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="bar() : void" num="272" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="274" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="classRuleOrdering() : void" num="278" count="1" type="method"/>
            <line num="280" count="1" type="stmt"/>
            <line num="281" count="1" type="stmt"/>
            <line num="282" count="1" type="stmt"/>
            <line num="283" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="a() : TestRule" num="288" count="1" type="method"/>
            <line num="290" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="b() : TestRule" num="293" count="1" type="method"/>
            <line num="295" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="foo() : void" num="298" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="300" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="bar() : void" num="303" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="305" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="classRuleOrderingDefault() : void" num="309" count="1" type="method"/>
            <line num="311" count="1" type="stmt"/>
            <line num="312" count="1" type="stmt"/>
            <line num="313" count="1" type="stmt"/>
            <line num="314" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="RunnerWithClassRuleAddedProgrammatically(Class)" num="318" count="2" type="method"/>
            <line num="319" count="2" type="stmt"/>
            <line complexity="1" visibility="protected" signature="classRules() : List&lt;TestRule&gt;" num="322" count="2" type="method"/>
            <line num="324" count="2" type="stmt"/>
            <line num="325" count="2" type="stmt"/>
            <line num="326" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="332" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="334" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="classRulesModifiableListEmpty() : void" num="338" count="1" type="method"/>
            <line num="340" count="1" type="stmt"/>
            <line num="341" count="1" type="stmt"/>
            <line num="342" count="1" type="stmt"/>
            <line num="343" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="classRule() : TestRule" num="348" count="1" type="method"/>
            <line num="350" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="353" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="355" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="classRulesModifiableList() : void" num="359" count="1" type="method"/>
            <line num="361" count="1" type="stmt"/>
            <line num="362" count="1" type="stmt"/>
            <line num="363" count="1" type="stmt"/>
            <line num="364" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/rules/DisableOnDebugTest.java" name="DisableOnDebugTest.java">
            <metrics coveredelements="47" coveredconditionals="0" complexity="16" loc="164" coveredmethods="16" methods="16" elements="47" classes="7" ncloc="125" statements="31" conditionals="0" coveredstatements="31"/>
            <class name="DisableOnDebugTest">
               <metrics coveredelements="32" complexity="8" methods="8" testruns="5" statements="24" coveredconditionals="0" coveredmethods="8" elements="32" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="24" testpasses="5"/>
            </class>
            <class name="DisableOnDebugTest.FailOnExecution">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="DisableOnDebugTest.AbstractDisableOnDebugTest">
               <metrics coveredelements="3" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="DisableOnDebugTest.PreJava5DebugArgumentsTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="DisableOnDebugTest.PreJava5DebugArgumentsReversedTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="DisableOnDebugTest.PostJava5DebugArgumentsTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="DisableOnDebugTest.WithoutDebugArgumentsTest">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="apply(Statement,Description) : Statement" num="38" count="1" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : void" num="42" count="1" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="AbstractDisableOnDebugTest(List&lt;String&gt;)" num="56" count="4" type="method"/>
            <line num="57" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="61" count="3" type="method"/>
            <line complexity="1" visibility="public" signature="PreJava5DebugArgumentsTest()" num="69" count="1" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="PreJava5DebugArgumentsReversedTest()" num="78" count="1" type="method"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="PostJava5DebugArgumentsTest()" num="87" count="1" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="WithoutDebugArgumentsTest()" num="96" count="1" type="method"/>
            <line num="97" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenPreJava5DebugArgumentsIsDebuggingShouldReturnTrue() : void" num="102" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="104" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenPreJava5DebugArgumentsInReverseIsDebuggingShouldReturnTrue() : void" num="109" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="111" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenPostJava5DebugArgumentsIsDebuggingShouldReturnTrue() : void" num="117" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="119" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenArgumentsWithoutDebugFlagsIsDebuggingShouldReturnFalse() : void" num="124" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="126" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="whenRunWithPreJava5DebugArgumentsTestShouldFail() : void" num="131" count="1" type="method"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="whenRunWithPreJava5DebugArgumentsInReverseOrderTestShouldFail() : void" num="139" count="1" type="method"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="whenRunWithPostJava5DebugArgumentsTestShouldFail() : void" num="148" count="1" type="method"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="whenRunWithoutDebugFlagsTestShouldPass() : void" num="156" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/rules/ErrorCollectorTest.java" name="ErrorCollectorTest.java">
            <metrics coveredelements="62" coveredconditionals="0" complexity="29" loc="327" coveredmethods="28" methods="29" elements="65" classes="19" ncloc="283" statements="36" conditionals="0" coveredstatements="34"/>
            <class name="ErrorCollectorTest">
               <metrics coveredelements="8" complexity="2" methods="2" testruns="2" statements="6" coveredconditionals="0" coveredmethods="2" elements="8" testfailures="0" testduration="0.008" conditionals="0" coveredstatements="6" testpasses="2"/>
            </class>
            <class name="ErrorCollectorTest.AddSingleError">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="ErrorCollectorTest.AddTwoErrors">
               <metrics coveredelements="3" complexity="1" methods="1" testruns="1" statements="2" coveredconditionals="0" coveredmethods="1" elements="3" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <class name="ErrorCollectorTest.AddInternalAssumptionViolatedException">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="ErrorCollectorTest.CheckMatcherThatDoesNotFailWithProvidedReason">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="ErrorCollectorTest.CheckMatcherThatDoesNotFailWithoutProvidedReason">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="ErrorCollectorTest.CheckMatcherThatFailsWithoutProvidedReason">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="ErrorCollectorTest.CheckMatcherThatFailsWithProvidedReason">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="ErrorCollectorTest.CheckTwoMatchersThatFail">
               <metrics coveredelements="3" complexity="1" methods="1" testruns="1" statements="2" coveredconditionals="0" coveredmethods="1" elements="3" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <class name="ErrorCollectorTest.CheckCallableThatThrowsAnException">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="1" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <class name="ErrorCollectorTest.CheckTwoCallablesThatThrowExceptions">
               <metrics coveredelements="7" complexity="3" methods="3" testruns="1" statements="4" coveredconditionals="0" coveredmethods="3" elements="7" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="4" testpasses="1"/>
            </class>
            <class name="ErrorCollectorTest.CheckCallableThatThrowsInternalAssumptionViolatedException">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="1" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <class name="ErrorCollectorTest.CheckCallableWithFailingAssumption">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="1" statements="3" coveredconditionals="0" coveredmethods="2" elements="5" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <class name="ErrorCollectorTest.CheckCallableThatDoesNotThrowAnException">
               <metrics coveredelements="5" complexity="2" methods="2" testruns="1" statements="3" coveredconditionals="0" coveredmethods="2" elements="5" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <class name="ErrorCollectorTest.CheckRunnableThatThrowsExpectedTypeOfException">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="1" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <class name="ErrorCollectorTest.CheckRunnableThatThrowsUnexpectedTypeOfException">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="1" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <class name="ErrorCollectorTest.CheckRunnableThatThrowsNoExceptionAlthoughOneIsExpected">
               <metrics coveredelements="3" complexity="2" methods="2" testruns="1" statements="1" coveredconditionals="0" coveredmethods="2" elements="3" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="ErrorCollectorTest.ErrorCollectorNotCalledBySuccessfulTest">
               <metrics coveredelements="1" complexity="1" methods="1" testruns="1" statements="0" coveredconditionals="0" coveredmethods="1" elements="1" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="1"/>
            </class>
            <class name="ErrorCollectorTest.ErrorCollectorNotCalledByFailingTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testsWithEventMatcher() : Object[][]" num="29" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="31" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="runTestClassAndVerifyEvents() : void" num="100" count="18" type="method"/>
            <line num="102" count="18" type="stmt"/>
            <line num="103" count="18" type="stmt"/>
            <line num="104" count="18" type="stmt"/>
            <line num="105" count="18" type="stmt"/>
            <line num="106" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="example() : void" num="113" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="115" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="example() : void" num="123" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="example() : void" num="134" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="136" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="example() : void" num="144" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="146" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="example() : void" num="154" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="156" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="example() : void" num="164" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="166" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="example() : void" num="174" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="176" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="example() : void" num="184" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="example() : void" num="195" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="197" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="call() : Object" num="198" count="1" type="method"/>
            <line num="199" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="example() : void" num="209" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="211" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="call() : Object" num="212" count="1" type="method"/>
            <line num="213" count="1" type="stmt"/>
            <line num="216" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="call() : Integer" num="217" count="1" type="method"/>
            <line num="218" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="example() : void" num="228" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="230" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="call() : Object" num="231" count="1" type="method"/>
            <line num="232" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="example() : void" num="242" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="244" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="call() : Object" num="245" count="1" type="method"/>
            <line num="246" count="1" type="stmt"/>
            <line num="247" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="example() : void" num="257" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="259" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="call() : Object" num="260" count="1" type="method"/>
            <line num="261" count="1" type="stmt"/>
            <line num="264" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="example() : void" num="272" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="274" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="275" count="1" type="method"/>
            <line num="276" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="example() : void" num="286" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="288" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="289" count="1" type="method"/>
            <line num="290" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="example() : void" num="300" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="302" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="303" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="example() : void" num="313" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="example() : void" num="322" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="324" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/rules/EventCollector.java" name="EventCollector.java">
            <metrics coveredelements="36" coveredconditionals="0" complexity="29" loc="191" coveredmethods="18" methods="28" elements="77" classes="1" ncloc="157" statements="47" conditionals="2" coveredstatements="18"/>
            <class name="EventCollector">
               <metrics coveredelements="36" coveredconditionals="0" complexity="29" coveredmethods="18" methods="28" elements="77" statements="47" conditionals="2" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="package" signature="everyTestRunSuccessful() : Matcher&lt;EventCollector&gt;" num="17" count="26" type="method"/>
            <line num="18" count="26" type="stmt"/>
            <line complexity="1" visibility="package" signature="hasNumberOfFailures(int) : Matcher&lt;EventCollector&gt;" num="21" count="63" type="method"/>
            <line num="23" count="63" type="stmt"/>
            <line complexity="1" visibility="public" signature="matchesSafely(EventCollector) : boolean" num="24" count="41" type="method"/>
            <line num="26" count="41" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeTo(org.hamcrest.Description) : void" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="describeMismatchSafely(EventCollector,org.hamcrest.Description) : void" num="35" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="hasSingleFailure() : Matcher&lt;EventCollector&gt;" num="44" count="31" type="method"/>
            <line num="45" count="31" type="stmt"/>
            <line complexity="1" visibility="package" signature="hasNoFailure() : Matcher&lt;EventCollector&gt;" num="48" count="26" type="method"/>
            <line num="49" count="26" type="stmt"/>
            <line complexity="1" visibility="private" signature="hasNumberOfAssumptionFailures(int) : Matcher&lt;EventCollector&gt;" num="52" count="34" type="method"/>
            <line num="54" count="34" type="stmt"/>
            <line complexity="1" visibility="public" signature="matchesSafely(EventCollector) : boolean" num="55" count="17" type="method"/>
            <line num="57" count="17" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeTo(org.hamcrest.Description) : void" num="60" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="hasSingleAssumptionFailure() : Matcher&lt;EventCollector&gt;" num="68" count="2" type="method"/>
            <line num="69" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="hasNoAssumptionFailure() : Matcher&lt;EventCollector&gt;" num="72" count="32" type="method"/>
            <line num="73" count="32" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasSingleFailureWithMessage(String) : Matcher&lt;EventCollector&gt;" num="76" count="21" type="method"/>
            <line num="77" count="21" type="stmt"/>
            <line complexity="1" visibility="package" signature="hasSingleFailureWithMessage(Matcher&lt;String&gt;) : Matcher&lt;EventCollector&gt;" num="80" count="37" type="method"/>
            <line num="82" count="37" type="stmt"/>
            <line complexity="1" visibility="public" signature="matchesSafely(EventCollector) : boolean" num="83" count="19" type="method"/>
            <line num="85" count="19" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeTo(org.hamcrest.Description) : void" num="90" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="2" visibility="protected" signature="describeMismatchSafely(EventCollector,org.hamcrest.Description) : void" num="95" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="failureIs(Matcher&lt;? super Throwable&gt;) : Matcher&lt;EventCollector&gt;" num="115" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="matchesSafely(EventCollector) : boolean" num="117" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeTo(org.hamcrest.Description) : void" num="125" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunStarted(Description) : void" num="146" count="42" type="method"/>
            <line num="148" count="42" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunFinished(Result) : void" num="151" count="42" type="method"/>
            <line num="153" count="42" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStarted(Description) : void" num="156" count="42" type="method"/>
            <line num="158" count="42" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFinished(Description) : void" num="161" count="42" type="method"/>
            <line num="163" count="42" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFailure(Failure) : void" num="166" count="31" type="method"/>
            <line num="168" count="31" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAssumptionFailure(Failure) : void" num="171" count="1" type="method"/>
            <line num="173" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIgnored(Description) : void" num="176" count="0" type="method"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="181" count="0" type="method"/>
            <line num="183" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/rules/ExpectedExceptionTest.java" name="ExpectedExceptionTest.java">
            <metrics coveredelements="26" coveredconditionals="0" complexity="26" loc="386" coveredmethods="10" methods="26" elements="84" classes="24" ncloc="319" statements="58" conditionals="0" coveredstatements="16"/>
            <class name="ExpectedExceptionTest">
               <metrics coveredelements="11" complexity="3" methods="3" testruns="2" statements="8" coveredconditionals="0" coveredmethods="3" elements="11" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="8" testpasses="2"/>
            </class>
            <class name="ExpectedExceptionTest.EmptyTestExpectingNoException">
               <metrics coveredelements="1" complexity="1" methods="1" testruns="1" statements="0" coveredconditionals="0" coveredmethods="1" elements="1" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="1"/>
            </class>
            <class name="ExpectedExceptionTest.ThrowExceptionWithExpectedType">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="2" coveredconditionals="0" coveredmethods="0" elements="3" testfailures="1" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="ExpectedExceptionTest.ThrowExceptionWithExpectedPartOfMessage">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="3" coveredconditionals="0" coveredmethods="0" elements="4" testfailures="1" testduration="0.001" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="ExpectedExceptionTest.ThrowExceptionWithWrongType">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="2" coveredconditionals="0" coveredmethods="0" elements="3" testfailures="1" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="ExpectedExceptionTest.HasWrongMessage">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="2" coveredconditionals="0" coveredmethods="0" elements="3" testfailures="1" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="ExpectedExceptionTest.ThrowNoExceptionButExpectExceptionWithType">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="ExpectedExceptionTest.WronglyExpectsExceptionMessage">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="ExpectedExceptionTest.ExpectsSubstring">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="2" coveredconditionals="0" coveredmethods="0" elements="3" testfailures="1" testduration="0.001" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="ExpectedExceptionTest.ExpectsSubstringNullMessage">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="2" coveredconditionals="0" coveredmethods="0" elements="3" testfailures="1" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="ExpectedExceptionTest.ExpectsMessageMatcher">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="2" coveredconditionals="0" coveredmethods="0" elements="3" testfailures="1" testduration="0.001" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="ExpectedExceptionTest.ExpectedMessageMatcherFails">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="2" coveredconditionals="0" coveredmethods="0" elements="3" testfailures="1" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="ExpectedExceptionTest.ExpectsMatcher">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="2" coveredconditionals="0" coveredmethods="0" elements="3" testfailures="1" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="ExpectedExceptionTest.ExpectsMultipleMatchers">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="3" coveredconditionals="0" coveredmethods="0" elements="4" testfailures="1" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="ExpectedExceptionTest.ExpectAssertionErrorWhichIsNotThrown">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="ExpectedExceptionTest.FailBeforeExpectingException">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="2" coveredconditionals="0" coveredmethods="0" elements="3" testfailures="1" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="ExpectedExceptionTest.FailedAssumptionAndExpectException">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="2" coveredconditionals="0" coveredmethods="0" elements="3" testfailures="1" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="ExpectedExceptionTest.ThrowExceptionWithMatchingCause">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="5" coveredconditionals="0" coveredmethods="0" elements="6" testfailures="1" testduration="0.001" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="ExpectedExceptionTest.ThrowExpectedNullCause">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="4" coveredconditionals="0" coveredmethods="0" elements="5" testfailures="1" testduration="0.001" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="ExpectedExceptionTest.ThrowUnexpectedCause">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="4" coveredconditionals="0" coveredmethods="0" elements="5" testfailures="1" testduration="0.001" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="ExpectedExceptionTest.UseNoCustomMessage">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="ExpectedExceptionTest.UseCustomMessageWithPlaceHolder">
               <metrics coveredelements="3" complexity="1" methods="1" testruns="1" statements="2" coveredconditionals="0" coveredmethods="1" elements="3" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <class name="ExpectedExceptionTest.UseCustomMessageWithoutPlaceHolder">
               <metrics coveredelements="3" complexity="1" methods="1" testruns="1" statements="2" coveredconditionals="0" coveredmethods="1" elements="3" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <class name="ExpectedExceptionTest.ErrorCollectorShouldFailAlthoughExpectedExceptionDoesNot">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="3" coveredconditionals="0" coveredmethods="0" elements="4" testfailures="1" testduration="0.001" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testsWithEventMatcher() : Collection&lt;Object[]&gt;" num="34" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="36" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="ExpectedExceptionTest(Class&lt;?&gt;,Matcher&lt;EventCollector&gt;)" num="100" count="23" type="method"/>
            <line num="102" count="23" type="stmt"/>
            <line num="103" count="23" type="stmt"/>
            <line complexity="1" visibility="public" signature="runTestAndVerifyResult() : void" num="106" count="23" type="method"/>
            <line num="108" count="23" type="stmt"/>
            <line num="109" count="23" type="stmt"/>
            <line num="110" count="23" type="stmt"/>
            <line num="111" count="23" type="stmt"/>
            <line num="112" count="23" type="stmt"/>
            <line complexity="1" visibility="public" signature="throwsNothing() : void" num="119" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="throwsNullPointerException() : void" num="128" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="throwsNullPointerExceptionWithMessage() : void" num="139" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="throwsNullPointerException() : void" num="151" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="throwsNullPointerException() : void" num="162" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="doesntThrowNullPointerException() : void" num="173" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="175" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="doesntThrowAnything() : void" num="183" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="185" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="throwsMore() : void" num="193" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="throwsMore() : void" num="205" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="throwsMore() : void" num="216" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="throwsMore() : void" num="227" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="229" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="throwsMore() : void" num="238" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="throwsMore() : void" num="249" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="251" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fails() : void" num="262" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="264" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="fails() : void" num="272" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="274" count="0" type="stmt"/>
            <line num="275" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="failedAssumption() : void" num="283" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="throwExceptionWithMatchingCause() : void" num="294" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="296" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="throwExpectedNullCause() : void" num="310" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="312" count="0" type="stmt"/>
            <line num="313" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="throwWithCause() : void" num="325" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="327" count="0" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line num="329" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="noThrow() : void" num="340" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="342" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="noThrow() : void" num="351" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="353" count="1" type="stmt"/>
            <line num="354" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="noThrow() : void" num="364" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="366" count="1" type="stmt"/>
            <line num="367" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="379" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/rules/ExternalResourceRuleTest.java" name="ExternalResourceRuleTest.java">
            <metrics coveredelements="50" coveredconditionals="0" complexity="16" loc="168" coveredmethods="13" methods="14" elements="54" classes="3" ncloc="149" statements="40" conditionals="0" coveredstatements="37"/>
            <class name="ExternalResourceRuleTest">
               <metrics coveredelements="40" complexity="10" methods="8" testruns="2" statements="34" coveredconditionals="0" coveredmethods="8" elements="42" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="32" testpasses="2"/>
            </class>
            <class name="ExternalResourceRuleTest.UsesExternalResource">
               <metrics coveredelements="6" complexity="3" methods="3" testruns="1" statements="3" coveredconditionals="0" coveredmethods="3" elements="6" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <class name="ExternalResourceRuleTest.TestFailsAndTwoClosingResourcesFail">
               <metrics coveredelements="4" complexity="3" methods="3" testruns="1" statements="3" coveredconditionals="0" coveredmethods="2" elements="6" testfailures="1" testduration="0.0" conditionals="0" coveredstatements="2" testpasses="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="before() : void" num="38" count="1" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="after() : void" num="43" count="1" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFoo() : void" num="49" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="externalResourceGeneratesCorrectSequence() : void" num="55" count="1" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="shouldThrowMultipleFailureExceptionWhenTestFailsAndClosingResourceFails() : void" num="62" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="after() : void" num="66" count="1" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="after() : void" num="89" count="1" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="after() : void" num="97" count="1" type="method"/>
            <line num="99" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="failingTest() : void" num="103" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldThrowMultipleFailureExceptionWhenTestFailsAndTwoClosingResourcesFail() : void" num="109" count="1" type="method"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="3" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="shouldWrapAssumptionFailuresWhenClosingResourceFails() : void" num="124" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="after() : void" num="129" count="1" type="method"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : void" num="138" count="1" type="method"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="hasItems(Matcher&lt;? super Throwable&gt;,Matcher&lt;? super Throwable&gt;) : Matcher&lt;? super List&lt;Throwable&gt;&gt;" num="163" count="2" type="method"/>
            <line num="166" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/rules/LoggingMethodRule.java" name="LoggingMethodRule.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="2" loc="18" coveredmethods="2" methods="2" elements="5" classes="1" ncloc="14" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="LoggingMethodRule">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="package" signature="LoggingMethodRule(StringBuilder,String)" num="10" count="2" type="method"/>
            <line num="11" count="2" type="stmt"/>
            <line num="12" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Statement,FrameworkMethod,Object) : Statement" num="15" count="2" type="method"/>
            <line num="16" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/rules/LoggingStatement.java" name="LoggingStatement.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="2" loc="24" coveredmethods="2" methods="2" elements="9" classes="1" ncloc="20" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="LoggingStatement">
               <metrics coveredelements="9" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="9" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="package" signature="LoggingStatement(Statement,StringBuilder,String)" num="10" count="13" type="method"/>
            <line num="11" count="13" type="stmt"/>
            <line num="12" count="13" type="stmt"/>
            <line num="13" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : void" num="16" count="13" type="method"/>
            <line num="17" count="13" type="stmt"/>
            <line num="18" count="13" type="stmt"/>
            <line num="19" count="13" type="stmt"/>
            <line num="21" count="13" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/rules/LoggingTestRule.java" name="LoggingTestRule.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="2" loc="18" coveredmethods="2" methods="2" elements="5" classes="1" ncloc="14" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="LoggingTestRule">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="package" signature="LoggingTestRule(StringBuilder,String)" num="10" count="11" type="method"/>
            <line num="11" count="11" type="stmt"/>
            <line num="12" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Statement,Description) : Statement" num="15" count="11" type="method"/>
            <line num="16" count="11" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/rules/LoggingTestWatcher.java" name="LoggingTestWatcher.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="7" loc="42" coveredmethods="7" methods="7" elements="14" classes="1" ncloc="32" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="LoggingTestWatcher">
               <metrics coveredelements="14" coveredconditionals="0" complexity="7" coveredmethods="7" methods="7" elements="14" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <line complexity="1" visibility="package" signature="LoggingTestWatcher(StringBuilder)" num="9" count="12" type="method"/>
            <line num="10" count="12" type="stmt"/>
            <line complexity="1" visibility="protected" signature="succeeded(Description) : void" num="13" count="5" type="method"/>
            <line num="15" count="5" type="stmt"/>
            <line complexity="1" visibility="protected" signature="failed(Throwable,Description) : void" num="18" count="3" type="method"/>
            <line num="20" count="3" type="stmt"/>
            <line complexity="1" visibility="protected" signature="skipped(AssumptionViolatedException,Description) : void" num="23" count="2" type="method"/>
            <line num="25" count="2" type="stmt"/>
            <line complexity="1" visibility="protected" signature="skipped(org.junit.internal.AssumptionViolatedException,Description) : void" num="28" count="2" type="method"/>
            <line num="30" count="2" type="stmt"/>
            <line complexity="1" visibility="protected" signature="starting(Description) : void" num="33" count="12" type="method"/>
            <line num="35" count="12" type="stmt"/>
            <line complexity="1" visibility="protected" signature="finished(Description) : void" num="38" count="12" type="method"/>
            <line num="40" count="12" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/rules/MethodRulesTest.java" name="MethodRulesTest.java">
            <metrics coveredelements="111" coveredconditionals="0" complexity="51" loc="420" coveredmethods="47" methods="51" elements="117" classes="21" ncloc="318" statements="66" conditionals="0" coveredstatements="64"/>
            <class name="MethodRulesTest">
               <metrics coveredelements="49" complexity="15" methods="15" testruns="3" statements="34" coveredconditionals="0" coveredmethods="15" elements="49" testfailures="0" testduration="0.014000000000000002" conditionals="0" coveredstatements="34" testpasses="3"/>
            </class>
            <class name="MethodRulesTest.TestMethodRule">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="MethodRulesTest.ExampleTest">
               <metrics coveredelements="1" complexity="1" methods="1" testruns="1" statements="0" coveredconditionals="0" coveredmethods="1" elements="1" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="1"/>
            </class>
            <class name="MethodRulesTest.NonPublicExampleTest">
               <metrics coveredelements="1" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="MethodRulesTest.SonOfExampleTest">
               <metrics coveredelements="0" complexity="0" methods="0" testruns="1" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="1"/>
            </class>
            <class name="MethodRulesTest.SonOfNonPublicExampleTest">
               <metrics coveredelements="0" complexity="0" methods="0" testruns="1" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="1"/>
            </class>
            <class name="MethodRulesTest.Increment">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="MethodRulesTest.MultipleRuleTest">
               <metrics coveredelements="1" complexity="1" methods="1" testruns="1" statements="0" coveredconditionals="0" coveredmethods="1" elements="1" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="1"/>
            </class>
            <class name="MethodRulesTest.NoRulesTest">
               <metrics coveredelements="1" complexity="1" methods="1" testruns="1" statements="0" coveredconditionals="0" coveredmethods="1" elements="1" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="1"/>
            </class>
            <class name="MethodRulesTest.OnFailureTest">
               <metrics coveredelements="2" complexity="2" methods="2" testruns="1" statements="2" coveredconditionals="0" coveredmethods="1" elements="4" testfailures="1" testduration="0.001" conditionals="0" coveredstatements="1" testpasses="0"/>
            </class>
            <class name="MethodRulesTest.WatchmanTest">
               <metrics coveredelements="5" complexity="4" methods="4" testruns="2" statements="3" coveredconditionals="0" coveredmethods="3" elements="7" testfailures="1" testduration="0.0" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <class name="MethodRulesTest.BeforesAndAfters">
               <metrics coveredelements="12" complexity="6" methods="6" testruns="1" statements="6" coveredconditionals="0" coveredmethods="6" elements="12" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="6" testpasses="1"/>
            </class>
            <class name="MethodRulesTest.WrongTypedField">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="MethodRulesTest.SonOfWrongTypedField">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="MethodRulesTest.PrivateRule">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="MethodRulesTest.CustomTestName">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="MethodRulesTest.UsesCustomMethodRule">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="MethodRulesTest.HasMethodReturningMethodRule">
               <metrics coveredelements="8" complexity="4" methods="4" testruns="1" statements="4" coveredconditionals="0" coveredmethods="4" elements="8" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="4" testpasses="1"/>
            </class>
            <class name="MethodRulesTest.HasMultipleMethodsReturningMethodRule">
               <metrics coveredelements="5" complexity="3" methods="3" testruns="1" statements="2" coveredconditionals="0" coveredmethods="3" elements="5" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <class name="MethodRulesTest.CallsMethodReturningRuleOnlyOnce">
               <metrics coveredelements="5" complexity="2" methods="2" testruns="1" statements="3" coveredconditionals="0" coveredmethods="2" elements="5" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <class name="MethodRulesTest.CallsMethodReturningRuleOnlyOnce.Dummy">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="apply(Statement,FrameworkMethod,Object) : Statement" num="27" count="3" type="method"/>
            <line num="28" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : void" num="29" count="3" type="method"/>
            <line num="31" count="3" type="stmt"/>
            <line num="32" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="nothing() : void" num="42" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="nothing() : void" num="51" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="ruleIsIntroducedAndEvaluated() : void" num="56" count="1" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ruleIsIntroducedAndEvaluatedOnSubclass() : void" num="67" count="1" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ruleIsIntroducedAndEvaluatedOnSubclassOfNonPublicClass() : void" num="78" count="1" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Statement,FrameworkMethod,Object) : Statement" num="88" count="4" type="method"/>
            <line num="90" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : void" num="91" count="4" type="method"/>
            <line num="93" count="4" type="stmt"/>
            <line num="94" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="nothing() : void" num="108" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="multipleRulesAreRun() : void" num="114" count="1" type="method"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="nothing() : void" num="124" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="ignoreNonRules() : void" num="130" count="1" type="method"/>
            <line num="132" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="failed(Throwable,FrameworkMethod) : void" num="140" count="1" type="method"/>
            <line num="142" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="nothing() : void" num="146" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="onFailure() : void" num="152" count="1" type="method"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="failed(Throwable,FrameworkMethod) : void" num="164" count="1" type="method"/>
            <line num="166" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="succeeded(FrameworkMethod) : void" num="170" count="1" type="method"/>
            <line num="172" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="fails() : void" num="176" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="succeeds() : void" num="181" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="succeeded() : void" num="186" count="1" type="method"/>
            <line num="188" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line num="191" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="before() : void" num="197" count="1" type="method"/>
            <line num="199" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="starting(FrameworkMethod) : void" num="204" count="1" type="method"/>
            <line num="206" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="finished(FrameworkMethod) : void" num="209" count="1" type="method"/>
            <line num="211" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="succeeded(FrameworkMethod) : void" num="214" count="1" type="method"/>
            <line num="216" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="after() : void" num="220" count="1" type="method"/>
            <line num="222" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="succeeds() : void" num="225" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="227" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="beforesAndAfters() : void" num="231" count="1" type="method"/>
            <line num="233" count="1" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="foo() : void" num="242" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="validateWrongTypedField() : void" num="247" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="249" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="validateWrongTypedFieldInSuperclass() : void" num="257" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="259" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="foo() : void" num="267" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="validatePrivateRule() : void" num="272" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="274" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Statement,Description) : Statement" num="281" count="1" type="method"/>
            <line num="282" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : void" num="283" count="1" type="method"/>
            <line num="285" count="1" type="stmt"/>
            <line num="286" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="foo() : void" num="296" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="298" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="useCustomMethodRule() : void" num="302" count="1" type="method"/>
            <line num="304" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Statement,FrameworkMethod,Object) : Statement" num="309" count="1" type="method"/>
            <line num="310" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : void" num="312" count="1" type="method"/>
            <line num="314" count="1" type="stmt"/>
            <line num="315" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="methodRule() : MethodRule" num="321" count="1" type="method"/>
            <line num="323" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="doNothing() : void" num="326" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="runsMethodRuleThatIsReturnedByMethod() : void" num="340" count="1" type="method"/>
            <line num="342" count="1" type="stmt"/>
            <line num="343" count="1" type="stmt"/>
            <line num="344" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="methodRule1() : Increment" num="348" count="1" type="method"/>
            <line num="350" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="methodRule2() : Increment" num="353" count="1" type="method"/>
            <line num="355" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="doNothing() : void" num="358" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="runsAllMethodRulesThatAreReturnedByMethods() : void" num="372" count="1" type="method"/>
            <line num="374" count="1" type="stmt"/>
            <line num="375" count="1" type="stmt"/>
            <line num="376" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Statement,FrameworkMethod,Object) : Statement" num="384" count="1" type="method"/>
            <line num="385" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : void" num="387" count="1" type="method"/>
            <line num="389" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="methodRule() : MethodRule" num="396" count="1" type="method"/>
            <line num="398" count="1" type="stmt"/>
            <line num="399" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="doNothing() : void" num="402" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="404" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="callsMethodReturningRuleOnlyOnce() : void" num="416" count="1" type="method"/>
            <line num="418" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/rules/NameRulesTest.java" name="NameRulesTest.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="5" loc="50" coveredmethods="5" methods="5" elements="10" classes="3" ncloc="40" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="NameRulesTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="NameRulesTest.TestNames">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="2" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="2" testpasses="2"/>
            </class>
            <class name="NameRulesTest.BeforeAndAfterTest">
               <metrics coveredelements="6" complexity="3" methods="3" testruns="1" statements="3" coveredconditionals="0" coveredmethods="3" elements="6" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testA() : void" num="18" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="20" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testB() : void" num="23" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="25" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="setUp() : void" num="35" count="1" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="x() : void" num="40" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="45" count="1" type="method"/>
            <line num="47" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/rules/RuleChainTest.java" name="RuleChainTest.java">
            <metrics coveredelements="22" coveredconditionals="0" complexity="9" loc="96" coveredmethods="7" methods="8" elements="24" classes="4" ncloc="79" statements="16" conditionals="0" coveredstatements="15"/>
            <class name="RuleChainTest">
               <metrics coveredelements="14" complexity="4" methods="3" testruns="2" statements="12" coveredconditionals="0" coveredmethods="3" elements="15" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="11" testpasses="2"/>
            </class>
            <class name="RuleChainTest.LoggingRule">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="RuleChainTest.UseRuleChain">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="RuleChainTest.RuleChainWithNullRules">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="LoggingRule(String)" num="31" count="4" type="method"/>
            <line num="32" count="4" type="stmt"/>
            <line complexity="1" visibility="protected" signature="starting(Description) : void" num="35" count="3" type="method"/>
            <line num="37" count="3" type="stmt"/>
            <line complexity="1" visibility="protected" signature="finished(Description) : void" num="40" count="3" type="method"/>
            <line num="42" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="example() : void" num="52" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="executeRulesInCorrectOrder() : void" num="58" count="1" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="aroundShouldNotAllowNullRules() : void" num="68" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="example() : void" num="84" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="whenRuleChainHasNullRuleTheStacktraceShouldPointToIt() : void" num="88" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="90" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/rules/RuleMemberValidatorTest.java" name="RuleMemberValidatorTest.java">
            <metrics coveredelements="89" coveredconditionals="0" complexity="38" loc="356" coveredmethods="23" methods="38" elements="119" classes="23" ncloc="277" statements="81" conditionals="0" coveredstatements="66"/>
            <class name="RuleMemberValidatorTest">
               <metrics coveredelements="89" complexity="23" methods="23" testruns="21" statements="66" coveredconditionals="0" coveredmethods="23" elements="89" testfailures="0" testduration="0.02600000000000001" conditionals="0" coveredstatements="66" testpasses="21"/>
            </class>
            <class name="RuleMemberValidatorTest.TestWithProtectedClassRule">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RuleMemberValidatorTest.TestWithNonStaticClassRule">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RuleMemberValidatorTest.TestWithStaticClassAndTestRule">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RuleMemberValidatorTest.NonPublicTestWithClassRule">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RuleMemberValidatorTest.TestWithClassRuleIsImplementationOfMethodRule">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RuleMemberValidatorTest.TestWithClassRuleMethodThatReturnsMethodRule">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RuleMemberValidatorTest.TestWithClassRuleIsAnArbitraryObject">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RuleMemberValidatorTest.TestWithClassRuleMethodReturnsAnArbitraryObject">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RuleMemberValidatorTest.TestWithNonStaticTestRule">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RuleMemberValidatorTest.TestWithStaticTestRule">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RuleMemberValidatorTest.TestWithStaticMethodRule">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RuleMemberValidatorTest.TestWithMethodRule">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RuleMemberValidatorTest.TestWithArbitraryObjectWithRuleAnnotation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RuleMemberValidatorTest.MethodTestWithProtectedClassRule">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RuleMemberValidatorTest.MethodTestWithNonStaticClassRule">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RuleMemberValidatorTest.MethodTestWithStaticClassAndTestRule">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RuleMemberValidatorTest.TestMethodWithNonStaticTestRule">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RuleMemberValidatorTest.TestMethodWithStaticTestRule">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RuleMemberValidatorTest.TestMethodWithStaticMethodRule">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RuleMemberValidatorTest.MethodTestWithMethodRule">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RuleMemberValidatorTest.MethodTestWithArbitraryObjectWithRuleAnnotation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RuleMemberValidatorTest.SomeMethodRule">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="rejectProtectedClassRule() : void" num="22" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="rejectNonStaticClassRule() : void" num="34" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="acceptStaticTestRuleThatIsAlsoClassRule() : void" num="46" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="rejectClassRuleInNonPublicClass() : void" num="59" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="rejectClassRuleThatIsImplementationOfMethodRule() : void" num="78" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Statement,FrameworkMethod,Object) : Statement" num="89" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rejectClassRuleThatReturnsImplementationOfMethodRule() : void" num="102" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="methodRule() : MethodRule" num="110" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Statement,FrameworkMethod,Object) : Statement" num="114" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rejectClassRuleIsAnArbitraryObject() : void" num="128" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="rejectClassRuleMethodReturnsAnArbitraryObject() : void" num="147" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="arbitraryObject() : Object" num="155" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="acceptNonStaticTestRule() : void" num="161" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="rejectStaticTestRule() : void" num="173" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="rejectStaticMethodRule() : void" num="185" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="acceptMethodRule() : void" num="197" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="199" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Statement,FrameworkMethod,Object) : Statement" num="207" count="0" type="method"/>
            <line num="209" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rejectArbitraryObjectWithRuleAnnotation() : void" num="214" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="216" count="1" type="stmt"/>
            <line num="217" count="1" type="stmt"/>
            <line num="218" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="methodRejectProtectedClassRule() : void" num="226" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="228" count="1" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line num="230" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getTemporaryFolder() : TestRule" num="234" count="0" type="method"/>
            <line num="236" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="methodRejectNonStaticClassRule() : void" num="240" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="242" count="1" type="stmt"/>
            <line num="243" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTemporaryFolder() : TestRule" num="248" count="0" type="method"/>
            <line num="250" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="acceptMethodStaticTestRuleThatIsAlsoClassRule() : void" num="254" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="256" count="1" type="stmt"/>
            <line num="257" count="1" type="stmt"/>
            <line num="258" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTemporaryFolder() : TestRule" num="262" count="0" type="method"/>
            <line num="265" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="acceptMethodNonStaticTestRule() : void" num="269" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="271" count="1" type="stmt"/>
            <line num="272" count="1" type="stmt"/>
            <line num="273" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTemporaryFolder() : TestRule" num="277" count="0" type="method"/>
            <line num="279" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rejectMethodStaticTestRule() : void" num="283" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="285" count="1" type="stmt"/>
            <line num="286" count="1" type="stmt"/>
            <line num="287" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTemporaryFolder() : TestRule" num="291" count="0" type="method"/>
            <line num="293" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rejectMethodStaticMethodRule() : void" num="297" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="299" count="1" type="stmt"/>
            <line num="300" count="1" type="stmt"/>
            <line num="301" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSomeMethodRule() : MethodRule" num="305" count="0" type="method"/>
            <line num="306" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="methodAcceptMethodRuleMethod() : void" num="309" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="311" count="1" type="stmt"/>
            <line num="312" count="1" type="stmt"/>
            <line num="313" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTemporaryFolder() : MethodRule" num="317" count="0" type="method"/>
            <line num="319" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Statement,FrameworkMethod,Object) : Statement" num="320" count="0" type="method"/>
            <line num="322" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="methodRejectArbitraryObjectWithRuleAnnotation() : void" num="328" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="330" count="1" type="stmt"/>
            <line num="331" count="1" type="stmt"/>
            <line num="332" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getArbitraryObject() : Object" num="336" count="0" type="method"/>
            <line num="338" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertOneErrorWithMessage(String) : void" num="342" count="15" type="method"/>
            <line num="343" count="15" type="stmt"/>
            <line num="344" count="15" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertNumberOfErrors(int) : void" num="347" count="21" type="method"/>
            <line num="348" count="21" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Statement,FrameworkMethod,Object) : Statement" num="352" count="0" type="method"/>
            <line num="353" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/rules/StopwatchTest.java" name="StopwatchTest.java">
            <metrics coveredelements="79" coveredconditionals="2" complexity="25" loc="212" coveredmethods="22" methods="24" elements="83" classes="9" ncloc="173" statements="57" conditionals="2" coveredstatements="55"/>
            <class name="StopwatchTest">
               <metrics coveredelements="40" coveredconditionals="0" complexity="8" coveredmethods="8" methods="8" elements="40" statements="32" conditionals="0" coveredstatements="32"/>
            </class>
            <class name="StopwatchTest.TestStatus">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="StopwatchTest.Record">
               <metrics coveredelements="10" coveredconditionals="2" complexity="4" coveredmethods="3" methods="3" elements="10" statements="5" conditionals="2" coveredstatements="5"/>
            </class>
            <class name="StopwatchTest.AbstractStopwatchTest">
               <metrics coveredelements="16" coveredconditionals="0" complexity="7" coveredmethods="7" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="9"/>
            </class>
            <class name="StopwatchTest.SuccessfulTest">
               <metrics coveredelements="1" complexity="1" methods="1" testruns="1" statements="0" coveredconditionals="0" coveredmethods="1" elements="1" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="1"/>
            </class>
            <class name="StopwatchTest.FailedTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="StopwatchTest.SkippedTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.001" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="StopwatchTest.DurationDuringTestTest">
               <metrics coveredelements="5" complexity="1" methods="1" testruns="1" statements="4" coveredconditionals="0" coveredmethods="1" elements="5" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="4" testpasses="1"/>
            </class>
            <class name="StopwatchTest.DurationAfterTestTest">
               <metrics coveredelements="7" complexity="2" methods="2" testruns="1" statements="5" coveredconditionals="0" coveredmethods="2" elements="7" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="5" testpasses="1"/>
            </class>
            <line complexity="1" visibility="package" signature="Record()" num="37" count="10" type="method"/>
            <line num="38" count="10" type="stmt"/>
            <line complexity="1" visibility="package" signature="Record(long,Description)" num="41" count="5" type="method"/>
            <line num="42" count="5" type="stmt"/>
            <line complexity="2" visibility="package" signature="Record(long,TestStatus,Description)" num="45" count="20" type="method"/>
            <line num="46" count="20" type="stmt"/>
            <line num="47" count="20" type="stmt"/>
            <line num="48" count="20" type="stmt"/>
            <line falsecount="10" truecount="10" num="48" type="cond"/>
            <line complexity="1" visibility="public" signature="nanoTime() : long" num="59" count="13" type="method"/>
            <line num="61" count="13" type="stmt"/>
            <line complexity="1" visibility="protected" signature="succeeded(long,Description) : void" num="66" count="3" type="method"/>
            <line num="68" count="3" type="stmt"/>
            <line num="69" count="3" type="stmt"/>
            <line complexity="1" visibility="protected" signature="failed(long,Throwable,Description) : void" num="72" count="1" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="skipped(long,AssumptionViolatedException,Description) : void" num="78" count="1" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="finished(long,Description) : void" num="84" count="5" type="method"/>
            <line num="86" count="5" type="stmt"/>
            <line complexity="1" visibility="protected" signature="finished(Description) : void" num="91" count="5" type="method"/>
            <line num="93" count="5" type="stmt"/>
            <line complexity="1" visibility="protected" signature="afterStopwatchRule() : void" num="102" count="4" type="method"/>
            <line complexity="1" visibility="public" signature="successfulTest() : void" num="107" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="failedTest() : void" num="113" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="skippedTest() : void" num="120" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="duration() : void" num="127" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="duration() : void" num="137" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="afterStopwatchRule() : void" num="143" count="1" type="method"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="init() : void" num="151" count="5" type="method"/>
            <line num="153" count="5" type="stmt"/>
            <line num="154" count="5" type="stmt"/>
            <line num="155" count="5" type="stmt"/>
            <line complexity="1" visibility="private" signature="runTest(Class&lt;?&gt;) : Result" num="158" count="5" type="method"/>
            <line num="159" count="5" type="stmt"/>
            <line num="160" count="5" type="stmt"/>
            <line num="161" count="5" type="stmt"/>
            <line complexity="1" visibility="private" signature="simulateTimePassing(long) : void" num="164" count="19" type="method"/>
            <line num="165" count="19" type="stmt"/>
            <line complexity="1" visibility="public" signature="succeeded() : void" num="168" count="1" type="method"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="failed() : void" num="179" count="1" type="method"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="skipped() : void" num="190" count="1" type="method"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="runtimeDuringTestShouldReturnTimeSinceStart() : void" num="201" count="1" type="method"/>
            <line num="203" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="runtimeAfterTestShouldReturnRunDuration() : void" num="207" count="1" type="method"/>
            <line num="209" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/rules/TempFolderRuleTest.java" name="TempFolderRuleTest.java">
            <metrics coveredelements="96" coveredconditionals="4" complexity="25" loc="246" coveredmethods="18" methods="23" elements="108" classes="7" ncloc="200" statements="81" conditionals="4" coveredstatements="74"/>
            <class name="TempFolderRuleTest">
               <metrics coveredelements="44" complexity="10" methods="10" testruns="3" statements="34" coveredconditionals="0" coveredmethods="10" elements="44" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="34" testpasses="3"/>
            </class>
            <class name="TempFolderRuleTest.HasTempFolder">
               <metrics coveredelements="7" complexity="2" methods="2" testruns="2" statements="5" coveredconditionals="0" coveredmethods="2" elements="7" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="5" testpasses="2"/>
            </class>
            <class name="TempFolderRuleTest.CreatesSubFolder">
               <metrics coveredelements="28" complexity="4" methods="4" testruns="3" statements="24" coveredconditionals="0" coveredmethods="4" elements="28" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="24" testpasses="3"/>
            </class>
            <class name="TempFolderRuleTest.CreatesRandomSubFolders">
               <metrics coveredelements="9" complexity="2" methods="1" testruns="1" statements="6" coveredconditionals="2" coveredmethods="1" elements="9" testfailures="0" testduration="0.005" conditionals="2" coveredstatements="6" testpasses="1"/>
            </class>
            <class name="TempFolderRuleTest.CreatesRandomFiles">
               <metrics coveredelements="8" complexity="2" methods="1" testruns="1" statements="5" coveredconditionals="2" coveredmethods="1" elements="8" testfailures="0" testduration="0.003" conditionals="2" coveredstatements="5" testpasses="1"/>
            </class>
            <class name="TempFolderRuleTest.NameClashes">
               <metrics coveredelements="0" complexity="2" methods="2" testruns="2" statements="4" coveredconditionals="0" coveredmethods="0" elements="6" testfailures="2" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="TempFolderRuleTest.IncorrectUsage">
               <metrics coveredelements="0" complexity="3" methods="3" testruns="3" statements="3" coveredconditionals="0" coveredmethods="0" elements="6" testfailures="3" testduration="0.001" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testUsingTempFolder() : void" num="29" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTempFolderLocation() : void" num="35" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="tempFolderIsDeleted() : void" num="43" count="1" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUsingTempFolderStringReflection() : void" num="53" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUsingTempFolderString() : void" num="68" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUsingTempTreeFolders() : void" num="81" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="join(String) : String" num="95" count="3" type="method"/>
            <line num="96" count="3" type="stmt"/>
            <line num="97" count="3" type="stmt"/>
            <line num="98" count="7" type="stmt"/>
            <line num="100" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="subFolderIsDeleted() : void" num="104" count="1" type="method"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testUsingRandomTempFolders() : void" num="114" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="116" count="1" type="stmt"/>
            <line falsecount="1" truecount="20" num="116" type="cond"/>
            <line num="117" count="20" type="stmt"/>
            <line num="118" count="20" type="stmt"/>
            <line num="119" count="20" type="stmt"/>
            <line num="120" count="20" type="stmt"/>
            <line num="121" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomSubFoldersAreDeleted() : void" num="126" count="1" type="method"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="20" type="stmt"/>
            <line complexity="2" visibility="public" signature="testUsingRandomTempFiles() : void" num="138" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="140" count="1" type="stmt"/>
            <line falsecount="1" truecount="20" num="140" type="cond"/>
            <line num="141" count="20" type="stmt"/>
            <line num="142" count="20" type="stmt"/>
            <line num="143" count="20" type="stmt"/>
            <line num="144" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="randomFilesAreDeleted() : void" num="149" count="1" type="method"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="recursiveDeleteFolderWithOneElement() : void" num="157" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="recursiveDeleteFolderWithOneRandomElement() : void" num="167" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="recursiveDeleteFolderWithZeroElements() : void" num="177" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="fileWithFileClash() : void" num="189" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fileWithFolderTest() : void" num="195" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="nameClashesResultInTestFailures() : void" num="202" count="1" type="method"/>
            <line num="204" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetRoot() : void" num="216" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="218" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNewFile() : void" num="221" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="223" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNewFolder() : void" num="226" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="228" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="incorrectUsageWithoutApplyingTheRuleShouldNotPolluteTheCurrentWorkingDirectory() : void" num="232" count="1" type="method"/>
            <line num="234" count="1" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="cleanCurrentWorkingDirectory() : void" num="240" count="9" type="method"/>
            <line num="242" count="9" type="stmt"/>
            <line num="243" count="9" type="stmt"/>
            <line num="244" count="9" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/rules/TemporaryFolderRuleAssuredDeletionTest.java" name="TemporaryFolderRuleAssuredDeletionTest.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="3" loc="45" coveredmethods="3" methods="3" elements="11" classes="2" ncloc="35" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="TemporaryFolderRuleAssuredDeletionTest">
               <metrics coveredelements="9" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="9" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <class name="TemporaryFolderRuleAssuredDeletionTest.TestClass">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="2" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="alwaysPassesButDeletesRootFolder() : void" num="21" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="25" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFailsWhenCreatedFolderCannotBeDeletedButDeletionIsAssured() : void" num="29" count="1" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="byDefaultTestDoesNotFailWhenCreatedFolderCannotBeDeleted() : void" num="39" count="1" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/rules/TemporaryFolderUsageTest.java" name="TemporaryFolderUsageTest.java">
            <metrics coveredelements="107" coveredconditionals="0" complexity="36" loc="302" coveredmethods="28" methods="34" elements="150" classes="1" ncloc="243" statements="114" conditionals="2" coveredstatements="79"/>
            <class name="TemporaryFolderUsageTest">
               <metrics coveredelements="107" complexity="36" methods="34" testruns="24" statements="114" coveredconditionals="0" coveredmethods="28" elements="150" testfailures="6" testduration="0.013000000000000005" conditionals="2" coveredstatements="79" testpasses="18"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="29" count="24" type="method"/>
            <line num="31" count="24" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="34" count="24" type="method"/>
            <line num="36" count="24" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRootShouldThrowIllegalStateExceptionIfCreateWasNotInvoked() : void" num="39" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="newFileThrowsIllegalStateExceptionIfCreateWasNotInvoked() : void" num="44" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="newFileWithGivenNameThrowsIllegalStateExceptionIfCreateWasNotInvoked() : void" num="50" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="newFileWithGivenFilenameThrowsIOExceptionIfFileExists() : void" num="56" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newFolderThrowsIllegalStateExceptionIfCreateWasNotInvoked() : void" num="66" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="newFolderWithGivenPathThrowsIllegalStateExceptionIfCreateWasNotInvoked() : void" num="72" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="newFolderWithGivenFolderThrowsIOExceptionIfFolderExists() : void" num="77" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newFolderWithGivenFolderThrowsIOExceptionIfFileExists() : void" num="87" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newFolderWithGivenFolderThrowsIOExceptionWhenFolderCannotBeCreated() : void" num="98" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="newFolderWithPathStartingWithFileSeparatorThrowsIOException() : void" num="109" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newFolderWithPathContainingFileSeparatorCreatesDirectories() : void" num="125" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="newFolderWithPathContainingForwardSlashCreatesDirectories() : void" num="135" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="newFolderWithGivenPathThrowsIOExceptionIfFolderExists() : void" num="145" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newFolderWithGivenEmptyArrayThrowsIllegalArgumentException() : void" num="156" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newFolderWithPathsContainingForwardSlashCreatesFullPath() : void" num="165" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="newFolderWithPathsContainingFileSeparatorCreatesFullPath() : void" num="177" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="createInitializesRootFolder() : void" num="189" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="191" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="deleteShouldDoNothingIfRootFolderWasNotInitialized() : void" num="195" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="197" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="deleteRemovesRootFolder() : void" num="200" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="202" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="newRandomFileIsCreatedUnderRootFolder() : void" num="207" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="209" count="1" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line num="213" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="newNamedFileIsCreatedUnderRootFolder() : void" num="216" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="218" count="1" type="stmt"/>
            <line num="219" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line num="223" count="1" type="stmt"/>
            <line num="224" count="1" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="newRandomFolderIsCreatedUnderRootFolder() : void" num="228" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="230" count="1" type="stmt"/>
            <line num="232" count="1" type="stmt"/>
            <line num="233" count="1" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="newNestedFoldersCreatedUnderRootFolder() : void" num="237" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="239" count="1" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line num="242" count="1" type="stmt"/>
            <line num="243" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line num="247" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="canSetTheBaseFileForATemporaryFolder() : void" num="251" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="253" count="1" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line num="256" count="1" type="stmt"/>
            <line num="258" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="createTemporaryFolder() : File" num="261" count="1" type="method"/>
            <line num="262" count="1" type="stmt"/>
            <line num="263" count="1" type="stmt"/>
            <line num="264" count="1" type="stmt"/>
            <line num="265" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertFileDoesNotExist(File) : void" num="268" count="1" type="method"/>
            <line num="269" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="checkFileExists(String,File,boolean) : void" num="272" count="14" type="method"/>
            <line num="273" count="14" type="stmt"/>
            <line num="274" count="14" type="stmt"/>
            <line complexity="1" visibility="private" signature="checkFileIsDirectory(String,File,boolean) : void" num="278" count="13" type="method"/>
            <line num="279" count="13" type="stmt"/>
            <line num="280" count="13" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertFileExists(File) : void" num="284" count="2" type="method"/>
            <line num="285" count="2" type="stmt"/>
            <line num="286" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertFileIsDirectory(File) : void" num="289" count="11" type="method"/>
            <line num="290" count="11" type="stmt"/>
            <line num="291" count="11" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertFileCreatedUnderRootFolder(String,File) : void" num="294" count="4" type="method"/>
            <line num="295" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertParentFolderForFileIs(File,File) : void" num="298" count="6" type="method"/>
            <line num="299" count="6" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/rules/TestRuleTest.java" name="TestRuleTest.java">
            <metrics coveredelements="172" coveredconditionals="0" complexity="78" loc="614" coveredmethods="70" methods="78" elements="186" classes="33" ncloc="491" statements="108" conditionals="0" coveredstatements="102"/>
            <class name="TestRuleTest">
               <metrics coveredelements="78" complexity="25" methods="25" testruns="6" statements="53" coveredconditionals="0" coveredmethods="25" elements="78" testfailures="0" testduration="0.031" conditionals="0" coveredstatements="53" testpasses="6"/>
            </class>
            <class name="TestRuleTest.ExampleTest">
               <metrics coveredelements="6" complexity="3" methods="3" testruns="1" statements="3" coveredconditionals="0" coveredmethods="3" elements="6" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <class name="TestRuleTest.BothKindsOfRule">
               <metrics coveredelements="3" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="TestRuleTest.OneFieldTwoKindsOfRule">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="TestRuleTest.SonOfExampleTest">
               <metrics coveredelements="0" complexity="0" methods="0" testruns="1" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="1"/>
            </class>
            <class name="TestRuleTest.MultipleRuleTest">
               <metrics coveredelements="1" complexity="1" methods="1" testruns="1" statements="0" coveredconditionals="0" coveredmethods="1" elements="1" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="0" testpasses="1"/>
            </class>
            <class name="TestRuleTest.MultipleRuleTest.Increment">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="TestRuleTest.NoRulesTest">
               <metrics coveredelements="1" complexity="1" methods="1" testruns="1" statements="0" coveredconditionals="0" coveredmethods="1" elements="1" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="0" testpasses="1"/>
            </class>
            <class name="TestRuleTest.BeforesAndAfters">
               <metrics coveredelements="6" complexity="3" methods="3" testruns="1" statements="3" coveredconditionals="0" coveredmethods="3" elements="6" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <class name="TestRuleTest.WrongTypedField">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestRuleTest.SonOfWrongTypedField">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestRuleTest.PrivateRule">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestRuleTest.CustomTestName">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="TestRuleTest.UsesCustomMethodRule">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="TestRuleTest.MethodExampleTest">
               <metrics coveredelements="8" complexity="4" methods="4" testruns="1" statements="4" coveredconditionals="0" coveredmethods="4" elements="8" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="4" testpasses="1"/>
            </class>
            <class name="TestRuleTest.MethodBothKindsOfRule">
               <metrics coveredelements="3" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="TestRuleTest.MethodOneFieldTwoKindsOfRule">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="1" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <class name="TestRuleTest.MethodSonOfExampleTest">
               <metrics coveredelements="0" complexity="0" methods="0" testruns="1" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="1"/>
            </class>
            <class name="TestRuleTest.MethodMultipleRuleTest">
               <metrics coveredelements="5" complexity="3" methods="3" testruns="1" statements="2" coveredconditionals="0" coveredmethods="3" elements="5" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <class name="TestRuleTest.MethodMultipleRuleTest.Increment">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="TestRuleTest.MethodNoRulesTest">
               <metrics coveredelements="1" complexity="1" methods="1" testruns="1" statements="0" coveredconditionals="0" coveredmethods="1" elements="1" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="1"/>
            </class>
            <class name="TestRuleTest.BeforesAndAftersAreEnclosedByRule">
               <metrics coveredelements="6" complexity="3" methods="3" testruns="1" statements="3" coveredconditionals="0" coveredmethods="3" elements="6" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <class name="TestRuleTest.MethodWrongTypedField">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestRuleTest.MethodSonOfWrongTypedField">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestRuleTest.MethodPrivateRule">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestRuleTest.MethodUsesCustomMethodRule">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="1" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <class name="TestRuleTest.OrderTestRule">
               <metrics coveredelements="7" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="TestRuleTest.UsesFieldAndMethodRule">
               <metrics coveredelements="5" complexity="2" methods="2" testruns="1" statements="3" coveredconditionals="0" coveredmethods="2" elements="5" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <class name="TestRuleTest.CallMethodOnlyOnceRule">
               <metrics coveredelements="5" complexity="2" methods="2" testruns="1" statements="3" coveredconditionals="0" coveredmethods="2" elements="5" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <class name="TestRuleTest.CallMethodOnlyOnceRule.Dummy">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="TestRuleTest.TestRuleIsAroundMethodRule">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="TestRuleTest.TestRuleOrdering">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="TestRuleTest.TestRuleOrderingWithMethodRule">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="apply(Statement,Description) : Statement" num="34" count="2" type="method"/>
            <line num="35" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : void" num="36" count="2" type="method"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="nothing() : void" num="45" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="ruleIsIntroducedAndEvaluated() : void" num="51" count="1" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Statement,FrameworkMethod,Object) : Statement" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Statement,Description) : Statement" num="67" count="1" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="onlyOnce() : void" num="77" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="onlyApplyOnceEvenIfImplementsBothInterfaces() : void" num="84" count="1" type="method"/>
            <line num="86" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ruleIsIntroducedAndEvaluatedOnSubclass() : void" num="93" count="1" type="method"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Statement,Description) : Statement" num="104" count="2" type="method"/>
            <line num="105" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : void" num="106" count="2" type="method"/>
            <line num="108" count="2" type="stmt"/>
            <line num="109" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="nothing() : void" num="121" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line complexity="1" visibility="public" signature="multipleRulesAreRun() : void" num="127" count="1" type="method"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="nothing() : void" num="137" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line complexity="1" visibility="public" signature="ignoreNonRules() : void" num="143" count="1" type="method"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="before() : void" num="154" count="1" type="method"/>
            <line num="156" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="after() : void" num="162" count="1" type="method"/>
            <line num="164" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="succeeds() : void" num="167" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="169" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="beforesAndAfters() : void" num="173" count="1" type="method"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="foo() : void" num="185" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="validateWrongTypedField() : void" num="190" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="192" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="validateWrongTypedFieldInSuperclass() : void" num="200" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="202" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="foo() : void" num="210" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="validatePrivateRule() : void" num="215" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="217" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Statement,Description) : Statement" num="224" count="2" type="method"/>
            <line num="225" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : void" num="226" count="2" type="method"/>
            <line num="228" count="2" type="stmt"/>
            <line num="229" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="foo() : void" num="239" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="241" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="useCustomMethodRule() : void" num="245" count="1" type="method"/>
            <line num="247" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Statement,Description) : Statement" num="252" count="2" type="method"/>
            <line num="253" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : void" num="254" count="2" type="method"/>
            <line num="256" count="2" type="stmt"/>
            <line num="257" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExample() : TestRule" num="263" count="2" type="method"/>
            <line num="265" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="nothing() : void" num="268" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="methodRuleIsIntroducedAndEvaluated() : void" num="274" count="1" type="method"/>
            <line num="276" count="1" type="stmt"/>
            <line num="277" count="1" type="stmt"/>
            <line num="278" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Statement,FrameworkMethod,Object) : Statement" num="284" count="0" type="method"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Statement,Description) : Statement" num="290" count="1" type="method"/>
            <line num="291" count="1" type="stmt"/>
            <line num="292" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getBoth() : MethodBothKindsOfRule" num="299" count="2" type="method"/>
            <line num="301" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="onlyOnce() : void" num="304" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="306" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="methodOnlyApplyOnceEvenIfImplementsBothInterfaces() : void" num="311" count="1" type="method"/>
            <line num="313" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="methodRuleIsIntroducedAndEvaluatedOnSubclass() : void" num="320" count="1" type="method"/>
            <line num="322" count="1" type="stmt"/>
            <line num="323" count="1" type="stmt"/>
            <line num="324" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Statement,Description) : Statement" num="329" count="2" type="method"/>
            <line num="330" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : void" num="331" count="2" type="method"/>
            <line num="333" count="2" type="stmt"/>
            <line num="334" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIncrementor1() : TestRule" num="342" count="1" type="method"/>
            <line num="344" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIncrementor2() : TestRule" num="349" count="1" type="method"/>
            <line num="351" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="nothing() : void" num="354" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="methodMultipleRulesAreRun() : void" num="360" count="1" type="method"/>
            <line num="362" count="1" type="stmt"/>
            <line num="363" count="1" type="stmt"/>
            <line num="364" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="nothing() : void" num="370" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="methodIgnoreNonRules() : void" num="376" count="1" type="method"/>
            <line num="378" count="1" type="stmt"/>
            <line num="379" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="before() : void" num="388" count="1" type="method"/>
            <line num="390" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="after() : void" num="393" count="1" type="method"/>
            <line num="395" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="succeeds() : void" num="398" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="400" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="beforesAndAftersAreEnclosedByRule() : void" num="404" count="1" type="method"/>
            <line num="406" count="1" type="stmt"/>
            <line num="407" count="1" type="stmt"/>
            <line num="408" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getX() : int" num="413" count="0" type="method"/>
            <line num="415" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="foo() : void" num="418" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="methodValidateWrongTypedField() : void" num="423" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="425" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="methodValidateWrongTypedFieldInSuperclass() : void" num="433" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="435" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="getRule() : TestRule" num="440" count="0" type="method"/>
            <line num="442" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="foo() : void" num="445" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="methodValidatePrivateRule() : void" num="450" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="452" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCounter() : CustomTestName" num="459" count="1" type="method"/>
            <line num="461" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="foo() : void" num="464" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="466" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="methodUseCustomMethodRule() : void" num="470" count="1" type="method"/>
            <line num="472" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="OrderTestRule(String)" num="480" count="2" type="method"/>
            <line num="481" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Statement,Description) : Statement" num="484" count="2" type="method"/>
            <line num="485" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : void" num="486" count="2" type="method"/>
            <line num="488" count="2" type="stmt"/>
            <line num="489" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="orderMethod() : OrderTestRule" num="496" count="1" type="method"/>
            <line num="498" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="foo() : void" num="504" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="506" count="1" type="stmt"/>
            <line num="507" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="usesFieldAndMethodRule() : void" num="511" count="1" type="method"/>
            <line num="513" count="1" type="stmt"/>
            <line num="514" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Statement,Description) : Statement" num="521" count="1" type="method"/>
            <line num="522" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : void" num="523" count="1" type="method"/>
            <line num="525" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="both() : Dummy" num="531" count="1" type="method"/>
            <line num="533" count="1" type="stmt"/>
            <line num="534" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="onlyOnce() : void" num="537" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="539" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCallMethodOnlyOnceRule() : void" num="543" count="1" type="method"/>
            <line num="545" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="foo() : void" num="557" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="559" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRuleIsAroundMethodRule() : void" num="563" count="1" type="method"/>
            <line num="565" count="1" type="stmt"/>
            <line num="566" count="1" type="stmt"/>
            <line num="567" count="1" type="stmt"/>
            <line num="568" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="foo() : void" num="579" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="581" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRuleOrdering() : void" num="585" count="1" type="method"/>
            <line num="587" count="1" type="stmt"/>
            <line num="588" count="1" type="stmt"/>
            <line num="589" count="1" type="stmt"/>
            <line num="590" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="foo() : void" num="600" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="602" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRuleOrderingWithMethodRule() : void" num="606" count="1" type="method"/>
            <line num="608" count="1" type="stmt"/>
            <line num="609" count="1" type="stmt"/>
            <line num="610" count="1" type="stmt"/>
            <line num="611" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/rules/TestWatcherTest.java" name="TestWatcherTest.java">
            <metrics coveredelements="89" coveredconditionals="0" complexity="37" loc="397" coveredmethods="30" methods="37" elements="104" classes="18" ncloc="329" statements="67" conditionals="0" coveredstatements="59"/>
            <class name="TestWatcherTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestWatcherTest.Callbacks">
               <metrics coveredelements="22" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="22" statements="18" conditionals="0" coveredstatements="18"/>
            </class>
            <class name="TestWatcherTest.Callbacks.NoOpRule">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="TestWatcherTest.Callbacks.ErroneousTestWatcher">
               <metrics coveredelements="12" coveredconditionals="0" complexity="6" coveredmethods="6" methods="6" elements="12" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <class name="TestWatcherTest.Callbacks.FailingTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="4" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="4" testduration="0.001" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="TestWatcherTest.Callbacks.InternalViolatedAssumptionTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="4" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="4" testduration="0.001" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="TestWatcherTest.Callbacks.SuccessfulTest">
               <metrics coveredelements="1" complexity="1" methods="1" testruns="4" statements="0" coveredconditionals="0" coveredmethods="1" elements="1" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="4"/>
            </class>
            <class name="TestWatcherTest.Callbacks.ViolatedAssumptionTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="4" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="4" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="TestWatcherTest.CallbackArguments">
               <metrics coveredelements="24" coveredconditionals="0" complexity="6" coveredmethods="6" methods="6" elements="24" statements="18" conditionals="0" coveredstatements="18"/>
            </class>
            <class name="TestWatcherTest.CallbackArguments.Succeeded">
               <metrics coveredelements="3" complexity="2" methods="2" testruns="1" statements="1" coveredconditionals="0" coveredmethods="2" elements="3" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="TestWatcherTest.CallbackArguments.Failed">
               <metrics coveredelements="3" complexity="2" methods="2" testruns="1" statements="3" coveredconditionals="0" coveredmethods="1" elements="5" testfailures="1" testduration="0.001" conditionals="0" coveredstatements="2" testpasses="0"/>
            </class>
            <class name="TestWatcherTest.CallbackArguments.Skipped">
               <metrics coveredelements="3" complexity="2" methods="2" testruns="1" statements="3" coveredconditionals="0" coveredmethods="1" elements="5" testfailures="1" testduration="0.001" conditionals="0" coveredstatements="2" testpasses="0"/>
            </class>
            <class name="TestWatcherTest.CallbackArguments.DeprecatedSkipped">
               <metrics coveredelements="3" complexity="2" methods="2" testruns="1" statements="3" coveredconditionals="0" coveredmethods="1" elements="5" testfailures="1" testduration="0.001" conditionals="0" coveredstatements="2" testpasses="0"/>
            </class>
            <class name="TestWatcherTest.CallbackArguments.Starting">
               <metrics coveredelements="3" complexity="2" methods="2" testruns="1" statements="1" coveredconditionals="0" coveredmethods="2" elements="3" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="TestWatcherTest.CallbackArguments.Finished">
               <metrics coveredelements="3" complexity="2" methods="2" testruns="1" statements="1" coveredconditionals="0" coveredmethods="2" elements="3" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="TestWatcherTest.InterplayWithOtherRules">
               <metrics coveredelements="8" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="8" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <class name="TestWatcherTest.InterplayWithOtherRules.ExpectedExceptionTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="2" coveredconditionals="0" coveredmethods="0" elements="3" testfailures="1" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="TestWatcherTest.InterplayWithOtherRules.ErrorCollectorTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="parameters() : Object[][]" num="34" count="2" type="method"/>
            <line num="36" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="correctCallbacksCalled() : void" num="67" count="4" type="method"/>
            <line num="69" count="4" type="stmt"/>
            <line num="70" count="4" type="stmt"/>
            <line num="71" count="4" type="stmt"/>
            <line num="72" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="resultHasAllFailuresThrownByCallbacks() : void" num="75" count="4" type="method"/>
            <line num="77" count="4" type="stmt"/>
            <line num="78" count="4" type="stmt"/>
            <line num="79" count="4" type="stmt"/>
            <line num="80" count="4" type="stmt"/>
            <line num="81" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWatcherDoesNotModifyResult() : void" num="85" count="4" type="method"/>
            <line num="87" count="4" type="stmt"/>
            <line num="88" count="4" type="stmt"/>
            <line num="89" count="4" type="stmt"/>
            <line num="90" count="4" type="stmt"/>
            <line num="91" count="4" type="stmt"/>
            <line num="95" count="4" type="stmt"/>
            <line num="99" count="4" type="stmt"/>
            <line num="103" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Statement,Description) : Statement" num="110" count="4" type="method"/>
            <line num="111" count="4" type="stmt"/>
            <line complexity="1" visibility="protected" signature="succeeded(Description) : void" num="116" count="1" type="method"/>
            <line num="118" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="failed(Throwable,Description) : void" num="121" count="1" type="method"/>
            <line num="123" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="skipped(org.junit.AssumptionViolatedException,Description) : void" num="126" count="1" type="method"/>
            <line num="128" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="skipped(AssumptionViolatedException,Description) : void" num="131" count="1" type="method"/>
            <line num="134" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="starting(Description) : void" num="137" count="4" type="method"/>
            <line num="139" count="4" type="stmt"/>
            <line complexity="1" visibility="protected" signature="finished(Description) : void" num="142" count="4" type="method"/>
            <line num="144" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="152" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="162" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="173" testsuccess="true" count="4" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="test() : void" num="182" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="succeeded(Description) : void" num="196" count="1" type="method"/>
            <line num="198" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="202" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="succeeded() : void" num="207" count="1" type="method"/>
            <line num="209" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="failed(Throwable,Description) : void" num="220" count="1" type="method"/>
            <line num="222" count="1" type="stmt"/>
            <line num="223" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="227" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="229" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="failed() : void" num="233" count="1" type="method"/>
            <line num="235" count="1" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="skipped(org.junit.AssumptionViolatedException,Description) : void" num="248" count="1" type="method"/>
            <line num="250" count="1" type="stmt"/>
            <line num="251" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="255" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="257" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="skipped() : void" num="261" count="1" type="method"/>
            <line num="263" count="1" type="stmt"/>
            <line num="264" count="1" type="stmt"/>
            <line num="265" count="1" type="stmt"/>
            <line num="266" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="skipped(AssumptionViolatedException,Description) : void" num="276" count="1" type="method"/>
            <line num="279" count="1" type="stmt"/>
            <line num="280" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="284" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="287" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="deprecatedSkipped() : void" num="291" count="1" type="method"/>
            <line num="293" count="1" type="stmt"/>
            <line num="294" count="1" type="stmt"/>
            <line num="295" count="1" type="stmt"/>
            <line num="296" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="starting(Description) : void" num="305" count="1" type="method"/>
            <line num="307" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="311" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="starting() : void" num="316" count="1" type="method"/>
            <line num="318" count="1" type="stmt"/>
            <line num="319" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="finished(Description) : void" num="328" count="1" type="method"/>
            <line num="330" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="334" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="finished() : void" num="339" count="1" type="method"/>
            <line num="341" count="1" type="stmt"/>
            <line num="342" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWithExpectedException() : void" num="361" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="363" count="0" type="stmt"/>
            <line num="364" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="expectedExceptionIsSeenAsSuccessfulTest() : void" num="368" count="1" type="method"/>
            <line num="370" count="1" type="stmt"/>
            <line num="371" count="1" type="stmt"/>
            <line num="372" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="384" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="386" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIsSeenAsFailedBecauseOfCollectedError() : void" num="390" count="1" type="method"/>
            <line num="392" count="1" type="stmt"/>
            <line num="393" count="1" type="stmt"/>
            <line num="394" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/rules/TestWatchmanTest.java" name="TestWatchmanTest.java">
            <metrics coveredelements="18" coveredconditionals="0" complexity="11" loc="90" coveredmethods="8" methods="11" elements="24" classes="4" ncloc="72" statements="13" conditionals="0" coveredstatements="10"/>
            <class name="TestWatchmanTest">
               <metrics coveredelements="6" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="TestWatchmanTest.ViolatedAssumptionTest">
               <metrics coveredelements="2" complexity="2" methods="2" testruns="2" statements="2" coveredconditionals="0" coveredmethods="1" elements="4" testfailures="2" testduration="0.002" conditionals="0" coveredstatements="1" testpasses="0"/>
            </class>
            <class name="TestWatchmanTest.FailingTest">
               <metrics coveredelements="2" complexity="2" methods="2" testruns="2" statements="2" coveredconditionals="0" coveredmethods="1" elements="4" testfailures="2" testduration="0.001" conditionals="0" coveredstatements="1" testpasses="0"/>
            </class>
            <class name="TestWatchmanTest.LoggingTestWatchman">
               <metrics coveredelements="8" coveredconditionals="0" complexity="5" coveredmethods="4" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="initLog() : void" num="18" count="2" type="method"/>
            <line num="20" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="succeeds() : void" num="26" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="neitherLogSuccessNorFailedForViolatedAssumption() : void" num="32" count="2" type="method"/>
            <line num="34" count="2" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="initLog() : void" num="42" count="2" type="method"/>
            <line num="44" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="succeeds() : void" num="50" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="logFailingTest() : void" num="56" count="2" type="method"/>
            <line num="58" count="2" type="stmt"/>
            <line num="59" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="LoggingTestWatchman(StringBuilder)" num="66" count="4" type="method"/>
            <line num="67" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="succeeded(FrameworkMethod) : void" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="failed(Throwable,FrameworkMethod) : void" num="75" count="2" type="method"/>
            <line num="77" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="starting(FrameworkMethod) : void" num="80" count="4" type="method"/>
            <line num="82" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="finished(FrameworkMethod) : void" num="85" count="4" type="method"/>
            <line num="87" count="4" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/rules/TimeoutRuleTest.java" name="TimeoutRuleTest.java">
            <metrics coveredelements="37" coveredconditionals="1" complexity="13" loc="162" coveredmethods="6" methods="12" elements="66" classes="5" ncloc="134" statements="52" conditionals="2" coveredstatements="30"/>
            <class name="TimeoutRuleTest">
               <metrics coveredelements="33" complexity="5" methods="5" testruns="1" statements="28" coveredconditionals="0" coveredmethods="5" elements="33" testfailures="0" testduration="0.006" conditionals="0" coveredstatements="28" testpasses="1"/>
            </class>
            <class name="TimeoutRuleTest.AbstractTimeoutTest">
               <metrics coveredelements="4" coveredconditionals="1" complexity="7" coveredmethods="1" methods="6" elements="32" statements="24" conditionals="2" coveredstatements="2"/>
            </class>
            <class name="TimeoutRuleTest.HasGlobalLongTimeout">
               <metrics coveredelements="0" complexity="0" methods="0" testruns="5" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" testfailures="5" testduration="0.804" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="TimeoutRuleTest.HasGlobalTimeUnitTimeout">
               <metrics coveredelements="0" complexity="0" methods="0" testruns="5" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" testfailures="5" testduration="0.806" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="TimeoutRuleTest.HasNullTimeUnit">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="run1() : void" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run2() : void" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run3() : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="run4() : void" num="55" count="2" type="method"/>
            <line num="57" count="2" type="stmt"/>
            <line num="58" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="58" type="cond"/>
            <line complexity="1" visibility="public" signature="run5() : void" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run6() : void" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="wouldPass() : void" num="108" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="before() : void" num="113" count="3" type="method"/>
            <line num="115" count="3" type="stmt"/>
            <line num="116" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="after() : void" num="119" count="3" type="method"/>
            <line num="122" count="3" type="stmt"/>
            <line num="123" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="timeUnitTimeout() : void" num="126" count="1" type="method"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="longTimeout() : void" num="139" count="1" type="method"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="nullTimeUnit() : void" num="152" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/rules/VerifierRuleTest.java" name="VerifierRuleTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="3" loc="36" coveredmethods="3" methods="3" elements="8" classes="2" ncloc="29" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="VerifierRuleTest">
               <metrics coveredelements="4" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="4" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="VerifierRuleTest.UsesVerifier">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="1" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="protected" signature="verify() : void" num="18" count="1" type="method"/>
            <line num="20" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="example() : void" num="24" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="26" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="verifierRunsAfterTest() : void" num="30" count="1" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.junit.runners.model">
         <metrics coveredelements="511" complexity="186" loc="1648" methods="135" classes="40" statements="341" coveredconditionals="78" coveredmethods="120" elements="564" ncloc="1064" files="20" conditionals="88" coveredstatements="313"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runners/model/Annotatable.java" name="Annotatable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="20" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Annotatable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runners/model/FrameworkField.java" name="FrameworkField.java">
            <metrics coveredelements="31" coveredconditionals="3" complexity="15" loc="95" coveredmethods="12" methods="12" elements="33" classes="1" ncloc="61" statements="17" conditionals="4" coveredstatements="16"/>
            <class name="FrameworkField">
               <metrics coveredelements="31" coveredconditionals="3" complexity="15" coveredmethods="12" methods="12" elements="33" statements="17" conditionals="4" coveredstatements="16"/>
            </class>
            <line complexity="4" visibility="package" signature="FrameworkField(Field)" num="18" count="1120" type="method"/>
            <line num="19" count="1120" type="stmt"/>
            <line falsecount="1119" truecount="0" num="19" type="cond"/>
            <line num="20" count="0" type="stmt"/>
            <line num="23" count="1119" type="stmt"/>
            <line num="25" count="1119" type="stmt"/>
            <line falsecount="400" truecount="719" num="25" type="cond"/>
            <line num="27" count="719" type="stmt"/>
            <line num="28" count="719" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="35" count="285" type="method"/>
            <line num="37" count="285" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAnnotations() : Annotation[]" num="40" count="1566" type="method"/>
            <line num="41" count="1566" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAnnotation(Class&lt;T&gt;) : T" num="44" count="448" type="method"/>
            <line num="45" count="448" type="stmt"/>
            <line complexity="1" visibility="public" signature="isShadowedBy(FrameworkField) : boolean" num="48" count="134" type="method"/>
            <line num="50" count="134" type="stmt"/>
            <line complexity="1" visibility="package" signature="isBridgeMethod() : boolean" num="53" count="3" type="method"/>
            <line num="55" count="3" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getModifiers() : int" num="58" count="1501" type="method"/>
            <line num="60" count="1501" type="stmt"/>
            <line complexity="1" visibility="public" signature="getField() : Field" num="66" count="858" type="method"/>
            <line num="67" count="858" type="stmt"/>
            <line complexity="1" visibility="public" signature="getType() : Class&lt;?&gt;" num="74" count="521" type="method"/>
            <line num="76" count="521" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDeclaringClass() : Class&lt;?&gt;" num="79" count="18" type="method"/>
            <line num="81" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(Object) : Object" num="87" count="540" type="method"/>
            <line num="88" count="540" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="91" count="1" type="method"/>
            <line num="93" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runners/model/FrameworkMember.java" name="FrameworkMember.java">
            <metrics coveredelements="19" coveredconditionals="6" complexity="6" loc="59" coveredmethods="3" methods="3" elements="19" classes="1" ncloc="31" statements="10" conditionals="6" coveredstatements="10"/>
            <class name="FrameworkMember">
               <metrics coveredelements="19" coveredconditionals="6" complexity="6" coveredmethods="3" methods="3" elements="19" statements="10" conditionals="6" coveredstatements="10"/>
            </class>
            <line complexity="4" visibility="package" signature="handlePossibleBridgeMethod(List&lt;T&gt;) : T" num="15" count="10524" type="method"/>
            <line num="16" count="10524" type="stmt"/>
            <line falsecount="10511" truecount="29220" num="16" type="cond"/>
            <line num="17" count="29220" type="stmt"/>
            <line num="18" count="29220" type="stmt"/>
            <line falsecount="29207" truecount="13" num="18" type="cond"/>
            <line num="19" count="13" type="stmt"/>
            <line falsecount="10" truecount="3" num="19" type="cond"/>
            <line num="25" count="3" type="stmt"/>
            <line num="26" count="3" type="stmt"/>
            <line num="29" count="10" type="stmt"/>
            <line num="33" count="10511" type="stmt"/>
            <line complexity="1" visibility="public" signature="isStatic() : boolean" num="43" count="3210" type="method"/>
            <line num="44" count="3210" type="stmt"/>
            <line complexity="1" visibility="public" signature="isPublic() : boolean" num="50" count="24044" type="method"/>
            <line num="51" count="24044" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runners/model/FrameworkMethod.java" name="FrameworkMethod.java">
            <metrics coveredelements="77" coveredconditionals="19" complexity="34" loc="216" coveredmethods="20" methods="21" elements="88" classes="1" ncloc="123" statements="43" conditionals="24" coveredstatements="38"/>
            <class name="FrameworkMethod">
               <metrics coveredelements="77" coveredconditionals="19" complexity="34" coveredmethods="20" methods="21" elements="88" statements="43" conditionals="24" coveredstatements="38"/>
            </class>
            <line complexity="4" visibility="public" signature="FrameworkMethod(Method)" num="25" count="19716" type="method"/>
            <line num="26" count="19716" type="stmt"/>
            <line falsecount="19715" truecount="0" num="26" type="cond"/>
            <line num="27" count="0" type="stmt"/>
            <line num="30" count="19715" type="stmt"/>
            <line num="32" count="19715" type="stmt"/>
            <line falsecount="6200" truecount="13515" num="32" type="cond"/>
            <line num="34" count="13515" type="stmt"/>
            <line num="35" count="13515" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMethod() : Method" num="45" count="49801" type="method"/>
            <line num="46" count="49801" type="stmt"/>
            <line complexity="1" visibility="public" signature="invokeExplosively(Object,Object) : Object" num="54" count="1920" type="method"/>
            <line num="56" count="1920" type="stmt"/>
            <line complexity="1" visibility="protected" signature="runReflectiveCall() : Object" num="57" count="1920" type="method"/>
            <line num="59" count="1920" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="67" count="61039" type="method"/>
            <line num="69" count="61039" type="stmt"/>
            <line complexity="2" visibility="public" signature="validatePublicVoidNoArg(boolean,List&lt;Throwable&gt;) : void" num="82" count="2827" type="method"/>
            <line num="83" count="2827" type="stmt"/>
            <line num="84" count="2827" type="stmt"/>
            <line falsecount="2815" truecount="12" num="84" type="cond"/>
            <line num="85" count="12" type="stmt"/>
            <line complexity="5" visibility="public" signature="validatePublicVoid(boolean,List&lt;Throwable&gt;) : void" num="99" count="2936" type="method"/>
            <line num="100" count="2936" type="stmt"/>
            <line falsecount="2919" truecount="17" num="100" type="cond"/>
            <line num="101" count="17" type="stmt"/>
            <line falsecount="8" truecount="9" num="101" type="cond"/>
            <line num="102" count="17" type="stmt"/>
            <line num="104" count="2936" type="stmt"/>
            <line falsecount="2921" truecount="15" num="104" type="cond"/>
            <line num="105" count="15" type="stmt"/>
            <line num="107" count="2936" type="stmt"/>
            <line falsecount="2923" truecount="13" num="107" type="cond"/>
            <line num="108" count="13" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getModifiers() : int" num="112" count="25753" type="method"/>
            <line num="114" count="25753" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReturnType() : Class&lt;?&gt;" num="120" count="141" type="method"/>
            <line num="121" count="141" type="stmt"/>
            <line complexity="1" visibility="public" signature="getType() : Class&lt;?&gt;" num="127" count="89" type="method"/>
            <line num="129" count="89" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDeclaringClass() : Class&lt;?&gt;" num="135" count="16" type="method"/>
            <line num="137" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="validateNoTypeParametersOnArgs(List&lt;Throwable&gt;) : void" num="140" count="97" type="method"/>
            <line num="141" count="97" type="stmt"/>
            <line complexity="5" visibility="public" signature="isShadowedBy(FrameworkMethod) : boolean" num="144" count="29086" type="method"/>
            <line num="146" count="29086" type="stmt"/>
            <line falsecount="11" truecount="29075" num="146" type="cond"/>
            <line num="147" count="29075" type="stmt"/>
            <line num="149" count="11" type="stmt"/>
            <line falsecount="10" truecount="1" num="149" type="cond"/>
            <line num="150" count="1" type="stmt"/>
            <line num="152" count="10" type="stmt"/>
            <line falsecount="10" truecount="0" num="152" type="cond"/>
            <line num="153" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="153" type="cond"/>
            <line num="154" count="0" type="stmt"/>
            <line num="157" count="10" type="stmt"/>
            <line complexity="1" visibility="package" signature="isBridgeMethod() : boolean" num="160" count="10" type="method"/>
            <line num="162" count="10" type="stmt"/>
            <line complexity="2" visibility="public" signature="equals(Object) : boolean" num="165" count="179" type="method"/>
            <line num="167" count="179" type="stmt"/>
            <line falsecount="173" truecount="0" num="167" type="cond"/>
            <line num="168" count="0" type="stmt"/>
            <line num="170" count="173" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="173" count="44669" type="method"/>
            <line num="175" count="44669" type="stmt"/>
            <line complexity="1" visibility="public" signature="producesType(Type) : boolean" num="187" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParameterTypes() : Class&lt;?&gt;[]" num="193" count="32" type="method"/>
            <line num="194" count="32" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAnnotations() : Annotation[]" num="200" count="33375" type="method"/>
            <line num="201" count="33375" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAnnotation(Class&lt;T&gt;) : T" num="208" count="5500" type="method"/>
            <line num="209" count="5500" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="212" count="1" type="method"/>
            <line num="214" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runners/model/InitializationError.java" name="InitializationError.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="4" loc="47" coveredmethods="4" methods="4" elements="8" classes="1" ncloc="19" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="InitializationError">
               <metrics coveredelements="8" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="InitializationError(List&lt;Throwable&gt;)" num="25" count="72" type="method"/>
            <line num="26" count="72" type="stmt"/>
            <line complexity="1" visibility="public" signature="InitializationError(Throwable)" num="29" count="14" type="method"/>
            <line num="30" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="InitializationError(String)" num="37" count="11" type="method"/>
            <line num="38" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCauses() : List&lt;Throwable&gt;" num="44" count="24" type="method"/>
            <line num="45" count="24" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runners/model/InvalidTestClassError.java" name="InvalidTestClassError.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="3" loc="39" coveredmethods="3" methods="3" elements="12" classes="1" ncloc="23" statements="9" conditionals="0" coveredstatements="9"/>
            <class name="InvalidTestClassError">
               <metrics coveredelements="12" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="12" statements="9" conditionals="0" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="InvalidTestClassError(Class&lt;?&gt;,List&lt;Throwable&gt;)" num="17" count="53" type="method"/>
            <line num="18" count="53" type="stmt"/>
            <line num="19" count="53" type="stmt"/>
            <line complexity="1" visibility="private" signature="createMessage(Class&lt;?&gt;,List&lt;Throwable&gt;) : String" num="22" count="53" type="method"/>
            <line num="23" count="53" type="stmt"/>
            <line num="24" count="53" type="stmt"/>
            <line num="25" count="53" type="stmt"/>
            <line num="26" count="53" type="stmt"/>
            <line num="27" count="129" type="stmt"/>
            <line num="29" count="53" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMessage() : String" num="35" count="57" type="method"/>
            <line num="37" count="57" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runners/model/MemberValueConsumer.java" name="MemberValueConsumer.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="18" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="MemberValueConsumer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runners/model/MultipleFailureException.java" name="MultipleFailureException.java">
            <metrics coveredelements="29" coveredconditionals="8" complexity="11" loc="104" coveredmethods="4" methods="7" elements="38" classes="1" ncloc="66" statements="23" conditionals="8" coveredstatements="17"/>
            <class name="MultipleFailureException">
               <metrics coveredelements="29" coveredconditionals="8" complexity="11" coveredmethods="4" methods="7" elements="38" statements="23" conditionals="8" coveredstatements="17"/>
            </class>
            <line complexity="3" visibility="public" signature="MultipleFailureException(List&lt;Throwable&gt;)" num="28" count="18" type="method"/>
            <line num="29" count="18" type="stmt"/>
            <line falsecount="17" truecount="1" num="29" type="cond"/>
            <line num="30" count="1" type="stmt"/>
            <line num="33" count="17" type="stmt"/>
            <line num="34" count="17" type="stmt"/>
            <line num="35" count="41" type="stmt"/>
            <line falsecount="37" truecount="4" num="35" type="cond"/>
            <line num="36" count="4" type="stmt"/>
            <line num="38" count="41" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFailures() : List&lt;Throwable&gt;" num="42" count="18" type="method"/>
            <line num="43" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMessage() : String" num="46" count="7" type="method"/>
            <line num="48" count="7" type="stmt"/>
            <line num="50" count="7" type="stmt"/>
            <line num="51" count="14" type="stmt"/>
            <line num="53" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="printStackTrace() : void" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="printStackTrace(PrintStream) : void" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="printStackTrace(PrintWriter) : void" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="assertEmpty(List&lt;Throwable&gt;) : void" num="86" count="200" type="method"/>
            <line num="88" count="200" type="stmt"/>
            <line falsecount="70" truecount="130" num="88" type="cond"/>
            <line num="89" count="130" type="stmt"/>
            <line num="91" count="70" type="stmt"/>
            <line falsecount="16" truecount="54" num="91" type="cond"/>
            <line num="92" count="54" type="stmt"/>
            <line num="102" count="16" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runners/model/NoGenericTypeParametersValidator.java" name="NoGenericTypeParametersValidator.java">
            <metrics coveredelements="32" coveredconditionals="8" complexity="10" loc="58" coveredmethods="6" methods="6" elements="32" classes="1" ncloc="49" statements="18" conditionals="8" coveredstatements="18"/>
            <class name="NoGenericTypeParametersValidator">
               <metrics coveredelements="32" coveredconditionals="8" complexity="10" coveredmethods="6" methods="6" elements="32" statements="18" conditionals="8" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="package" signature="NoGenericTypeParametersValidator(Method)" num="14" count="97" type="method"/>
            <line num="15" count="97" type="stmt"/>
            <line complexity="1" visibility="package" signature="validate(List&lt;Throwable&gt;) : void" num="18" count="97" type="method"/>
            <line num="19" count="97" type="stmt"/>
            <line num="20" count="134" type="stmt"/>
            <line complexity="5" visibility="private" signature="validateNoTypeParameterOnType(Type,List&lt;Throwable&gt;) : void" num="24" count="162" type="method"/>
            <line num="25" count="162" type="stmt"/>
            <line falsecount="148" truecount="14" num="25" type="cond"/>
            <line num="26" count="14" type="stmt"/>
            <line num="28" count="148" type="stmt"/>
            <line falsecount="132" truecount="16" num="28" type="cond"/>
            <line num="29" count="16" type="stmt"/>
            <line num="30" count="132" type="stmt"/>
            <line falsecount="127" truecount="5" num="30" type="cond"/>
            <line num="31" count="5" type="stmt"/>
            <line num="32" count="127" type="stmt"/>
            <line falsecount="123" truecount="4" num="32" type="cond"/>
            <line num="33" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="validateNoTypeParameterOnParameterizedType(ParameterizedType,List&lt;Throwable&gt;) : void" num="37" count="16" type="method"/>
            <line num="39" count="16" type="stmt"/>
            <line num="40" count="17" type="stmt"/>
            <line complexity="1" visibility="private" signature="validateNoTypeParameterOnWildcardType(WildcardType,List&lt;Throwable&gt;) : void" num="44" count="5" type="method"/>
            <line num="46" count="5" type="stmt"/>
            <line num="47" count="5" type="stmt"/>
            <line num="49" count="5" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="validateNoTypeParameterOnGenericArrayType(GenericArrayType,List&lt;Throwable&gt;) : void" num="54" count="4" type="method"/>
            <line num="56" count="4" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runners/model/RunnerBuilder.java" name="RunnerBuilder.java">
            <metrics coveredelements="38" coveredconditionals="7" complexity="12" loc="132" coveredmethods="6" methods="7" elements="41" classes="1" ncloc="66" statements="26" conditionals="8" coveredstatements="25"/>
            <class name="RunnerBuilder">
               <metrics coveredelements="38" coveredconditionals="7" complexity="12" coveredmethods="6" methods="7" elements="41" statements="26" conditionals="8" coveredstatements="25"/>
            </class>
            <line complexity="3" visibility="public" signature="safeRunnerForClass(Class&lt;?&gt;) : Runner" num="68" count="5533" type="method"/>
            <line num="69" count="5533" type="stmt"/>
            <line num="70" count="5533" type="stmt"/>
            <line num="71" count="5471" type="stmt"/>
            <line falsecount="3359" truecount="2112" num="71" type="cond"/>
            <line num="72" count="2112" type="stmt"/>
            <line num="74" count="5471" type="stmt"/>
            <line num="76" count="62" type="stmt"/>
            <line complexity="2" visibility="private" signature="configureRunner(Runner) : void" num="80" count="2112" type="method"/>
            <line num="81" count="2112" type="stmt"/>
            <line num="82" count="2112" type="stmt"/>
            <line num="83" count="2112" type="stmt"/>
            <line falsecount="2092" truecount="20" num="83" type="cond"/>
            <line num="84" count="20" type="stmt"/>
            <line num="85" count="20" type="stmt"/>
            <line complexity="2" visibility="package" signature="addParent(Class&lt;?&gt;) : Class&lt;?&gt;" num="89" count="434" type="method"/>
            <line num="90" count="434" type="stmt"/>
            <line falsecount="429" truecount="5" num="90" type="cond"/>
            <line num="91" count="5" type="stmt"/>
            <line num="93" count="429" type="stmt"/>
            <line complexity="1" visibility="package" signature="removeParent(Class&lt;?&gt;) : void" num="96" count="429" type="method"/>
            <line num="97" count="429" type="stmt"/>
            <line complexity="1" visibility="public" signature="runners(Class&lt;?&gt;,Class&lt;?&gt;[]) : List&lt;Runner&gt;" num="106" count="434" type="method"/>
            <line num="108" count="434" type="stmt"/>
            <line num="110" count="429" type="stmt"/>
            <line num="111" count="429" type="stmt"/>
            <line num="113" count="429" type="stmt"/>
            <line complexity="1" visibility="public" signature="runners(Class&lt;?&gt;,List&lt;Class&lt;?&gt;&gt;) : List&lt;Runner&gt;" num="117" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="runners(Class&lt;?&gt;[]) : List&lt;Runner&gt;" num="122" count="429" type="method"/>
            <line num="123" count="429" type="stmt"/>
            <line num="124" count="429" type="stmt"/>
            <line num="125" count="812" type="stmt"/>
            <line num="126" count="812" type="stmt"/>
            <line falsecount="0" truecount="812" num="126" type="cond"/>
            <line num="127" count="812" type="stmt"/>
            <line num="130" count="429" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runners/model/RunnerScheduler.java" name="RunnerScheduler.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="23" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="RunnerScheduler">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runners/model/Statement.java" name="Statement.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="15" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Statement">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runners/model/TestClass.java" name="TestClass.java">
            <metrics coveredelements="148" coveredconditionals="27" complexity="49" loc="348" coveredmethods="30" methods="30" elements="156" classes="3" ncloc="239" statements="96" conditionals="30" coveredstatements="91"/>
            <class name="TestClass">
               <metrics coveredelements="144" coveredconditionals="27" complexity="47" coveredmethods="28" methods="28" elements="152" statements="94" conditionals="30" coveredstatements="89"/>
            </class>
            <class name="TestClass.FieldComparator">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="TestClass.MethodComparator">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="3" visibility="public" signature="TestClass(Class&lt;?&gt;)" num="45" count="1474" type="method"/>
            <line num="46" count="1474" type="stmt"/>
            <line num="47" count="1474" type="stmt"/>
            <line falsecount="1473" truecount="1" num="47" type="cond"/>
            <line num="48" count="1" type="stmt"/>
            <line num="52" count="1473" type="stmt"/>
            <line num="54" count="1473" type="stmt"/>
            <line num="57" count="1473" type="stmt"/>
            <line num="59" count="1473" type="stmt"/>
            <line num="60" count="1473" type="stmt"/>
            <line complexity="1" visibility="protected" signature="scanAnnotatedMembers(Map&lt;Class&lt;? extends Annotation&gt;, List&lt;FrameworkMethod&gt;&gt;,Map&lt;Class&lt;? extends Annotation&gt;, List&lt;FrameworkField&gt;&gt;) : void" num="63" count="1473" type="method"/>
            <line num="64" count="1473" type="stmt"/>
            <line num="65" count="2360" type="stmt"/>
            <line num="66" count="19709" type="stmt"/>
            <line num="70" count="2360" type="stmt"/>
            <line num="71" count="1116" type="stmt"/>
            <line complexity="1" visibility="private" signature="getSortedDeclaredFields(Class&lt;?&gt;) : Field[]" num="76" count="2360" type="method"/>
            <line num="77" count="2360" type="stmt"/>
            <line num="78" count="2360" type="stmt"/>
            <line num="79" count="2360" type="stmt"/>
            <line complexity="3" visibility="protected" signature="addToAnnotationLists(T,Map&lt;Class&lt;? extends Annotation&gt;, List&lt;T&gt;&gt;) : void" num="82" count="20825" type="method"/>
            <line num="84" count="20825" type="stmt"/>
            <line num="85" count="10524" type="stmt"/>
            <line num="86" count="10524" type="stmt"/>
            <line num="87" count="10524" type="stmt"/>
            <line num="88" count="10524" type="stmt"/>
            <line falsecount="10514" truecount="10" num="88" type="cond"/>
            <line num="89" count="10" type="stmt"/>
            <line num="91" count="10514" type="stmt"/>
            <line falsecount="10370" truecount="144" num="91" type="cond"/>
            <line num="92" count="144" type="stmt"/>
            <line num="94" count="10370" type="stmt"/>
            <line complexity="1" visibility="private" signature="makeDeeplyUnmodifiable(Map&lt;Class&lt;? extends Annotation&gt;, List&lt;T&gt;&gt;) : Map&lt;Class&lt;? extends Annotation&gt;, List&lt;T&gt;&gt;" num="99" count="2946" type="method"/>
            <line num="101" count="2946" type="stmt"/>
            <line num="103" count="2946" type="stmt"/>
            <line num="104" count="4001" type="stmt"/>
            <line num="106" count="2946" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAnnotatedMethods() : List&lt;FrameworkMethod&gt;" num="115" count="1245" type="method"/>
            <line num="116" count="1245" type="stmt"/>
            <line num="117" count="1245" type="stmt"/>
            <line num="118" count="1245" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAnnotatedMethods(Class&lt;? extends Annotation&gt;) : List&lt;FrameworkMethod&gt;" num="125" count="20996" type="method"/>
            <line num="127" count="20996" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAnnotatedFields() : List&lt;FrameworkField&gt;" num="136" count="1244" type="method"/>
            <line num="137" count="1244" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAnnotatedFields(Class&lt;? extends Annotation&gt;) : List&lt;FrameworkField&gt;" num="144" count="7653" type="method"/>
            <line num="146" count="7653" type="stmt"/>
            <line complexity="1" visibility="private" signature="collectValues(Map&lt;?, List&lt;T&gt;&gt;) : List&lt;T&gt;" num="149" count="2489" type="method"/>
            <line num="150" count="2489" type="stmt"/>
            <line num="151" count="2489" type="stmt"/>
            <line num="152" count="4472" type="stmt"/>
            <line num="154" count="2489" type="stmt"/>
            <line complexity="4" visibility="private" signature="getAnnotatedMembers(Map&lt;Class&lt;? extends Annotation&gt;, List&lt;T&gt;&gt;,Class&lt;? extends Annotation&gt;,boolean) : List&lt;T&gt;" num="157" count="39173" type="method"/>
            <line num="159" count="39173" type="stmt"/>
            <line falsecount="35172" truecount="4001" num="159" type="cond"/>
            <line num="160" count="4001" type="stmt"/>
            <line num="162" count="39173" type="stmt"/>
            <line num="163" count="39173" type="stmt"/>
            <line falsecount="15344" truecount="23829" num="163" type="cond"/>
            <line complexity="1" visibility="private" signature="runsTopToBottom(Class&lt;? extends Annotation&gt;) : boolean" num="166" count="10514" type="method"/>
            <line num="167" count="10514" type="stmt"/>
            <line complexity="2" visibility="private" signature="getSuperClasses(Class&lt;?&gt;) : List&lt;Class&lt;?&gt;&gt;" num="171" count="1473" type="method"/>
            <line num="172" count="1473" type="stmt"/>
            <line num="173" count="1473" type="stmt"/>
            <line num="174" count="1473" type="stmt"/>
            <line falsecount="1473" truecount="2360" num="174" type="cond"/>
            <line num="175" count="2360" type="stmt"/>
            <line num="176" count="2360" type="stmt"/>
            <line num="178" count="1473" type="stmt"/>
            <line complexity="1" visibility="public" signature="getJavaClass() : Class&lt;?&gt;" num="184" count="17878" type="method"/>
            <line num="185" count="17878" type="stmt"/>
            <line complexity="2" visibility="public" signature="getName() : String" num="191" count="7708" type="method"/>
            <line num="192" count="7708" type="stmt"/>
            <line falsecount="7673" truecount="35" num="192" type="cond"/>
            <line num="193" count="35" type="stmt"/>
            <line num="195" count="7673" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOnlyConstructor() : Constructor&lt;?&gt;" num="203" count="2759" type="method"/>
            <line num="204" count="2759" type="stmt"/>
            <line num="205" count="2759" type="stmt"/>
            <line num="206" count="2759" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAnnotations() : Annotation[]" num="212" count="11531" type="method"/>
            <line num="213" count="11531" type="stmt"/>
            <line falsecount="10914" truecount="617" num="213" type="cond"/>
            <line num="214" count="617" type="stmt"/>
            <line num="216" count="10914" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAnnotation(Class&lt;T&gt;) : T" num="219" count="55" type="method"/>
            <line num="220" count="55" type="stmt"/>
            <line falsecount="55" truecount="0" num="220" type="cond"/>
            <line num="221" count="0" type="stmt"/>
            <line num="223" count="55" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAnnotatedFieldValues(Object,Class&lt;? extends Annotation&gt;,Class&lt;T&gt;) : List&lt;T&gt;" num="226" count="1" type="method"/>
            <line num="228" count="1" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(FrameworkMember&lt;?&gt;,T) : void" num="231" count="1" type="method"/>
            <line num="232" count="1" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="collectAnnotatedFieldValues(Object,Class&lt;? extends Annotation&gt;,Class&lt;T&gt;,MemberValueConsumer&lt;T&gt;) : void" num="244" count="4096" type="method"/>
            <line num="247" count="4096" type="stmt"/>
            <line num="248" count="540" type="stmt"/>
            <line num="249" count="540" type="stmt"/>
            <line num="250" count="540" type="stmt"/>
            <line falsecount="266" truecount="274" num="250" type="cond"/>
            <line num="251" count="274" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAnnotatedMethodValues(Object,Class&lt;? extends Annotation&gt;,Class&lt;T&gt;) : List&lt;T&gt;" num="260" count="1" type="method"/>
            <line num="262" count="1" type="stmt"/>
            <line num="263" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(FrameworkMember&lt;?&gt;,T) : void" num="265" count="1" type="method"/>
            <line num="266" count="1" type="stmt"/>
            <line num="269" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="collectAnnotatedMethodValues(Object,Class&lt;? extends Annotation&gt;,Class&lt;T&gt;,MemberValueConsumer&lt;T&gt;) : void" num="278" count="4096" type="method"/>
            <line num="281" count="4096" type="stmt"/>
            <line num="282" count="40" type="stmt"/>
            <line num="291" count="40" type="stmt"/>
            <line falsecount="14" truecount="26" num="291" type="cond"/>
            <line num="292" count="26" type="stmt"/>
            <line num="293" count="26" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isPublic() : boolean" num="302" count="1067" type="method"/>
            <line num="303" count="1067" type="stmt"/>
            <line complexity="1" visibility="public" signature="isANonStaticInnerClass() : boolean" num="306" count="1895" type="method"/>
            <line num="307" count="1895" type="stmt"/>
            <line complexity="2" visibility="public" signature="hashCode() : int" num="310" count="5" type="method"/>
            <line num="312" count="5" type="stmt"/>
            <line falsecount="4" truecount="1" num="312" type="cond"/>
            <line complexity="4" visibility="public" signature="equals(Object) : boolean" num="315" count="6" type="method"/>
            <line num="317" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="317" type="cond"/>
            <line num="318" count="0" type="stmt"/>
            <line num="320" count="6" type="stmt"/>
            <line falsecount="5" truecount="1" num="320" type="cond"/>
            <line num="321" count="1" type="stmt"/>
            <line num="323" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="323" type="cond"/>
            <line num="324" count="0" type="stmt"/>
            <line num="326" count="5" type="stmt"/>
            <line num="327" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="compare(Field,Field) : int" num="334" count="759" type="method"/>
            <line num="335" count="759" type="stmt"/>
            <line complexity="1" visibility="public" signature="compare(FrameworkMethod,FrameworkMethod) : int" num="344" count="24618" type="method"/>
            <line num="345" count="24618" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runners/model/TestTimedOutException.java" name="TestTimedOutException.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="3" loc="44" coveredmethods="3" methods="3" elements="8" classes="1" ncloc="19" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="TestTimedOutException">
               <metrics coveredelements="8" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="TestTimedOutException(long,TimeUnit)" num="24" count="24" type="method"/>
            <line num="25" count="24" type="stmt"/>
            <line num="27" count="24" type="stmt"/>
            <line num="28" count="24" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeout() : long" num="34" count="1" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeUnit() : TimeUnit" num="41" count="1" type="method"/>
            <line num="42" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/runners/model/AllModelTests.java" name="AllModelTests.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="15" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="13" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AllModelTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/runners/model/FrameworkFieldTest.java" name="FrameworkFieldTest.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="4" loc="58" coveredmethods="3" methods="4" elements="18" classes="2" ncloc="48" statements="14" conditionals="0" coveredstatements="11"/>
            <class name="FrameworkFieldTest">
               <metrics coveredelements="14" complexity="4" methods="4" testruns="4" statements="14" coveredconditionals="0" coveredmethods="3" elements="18" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="11" testpasses="3"/>
            </class>
            <class name="FrameworkFieldTest.ClassWithDummyField">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="cannotBeCreatedWithoutUnderlyingField() : void" num="21" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasToStringWhichPrintsFieldName() : void" num="28" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="presentAnnotationIsAvailable() : void" num="35" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="missingAnnotationIsNotAvailable() : void" num="43" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/runners/model/FrameworkMethodTest.java" name="FrameworkMethodTest.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="6" loc="60" coveredmethods="3" methods="6" elements="20" classes="2" ncloc="50" statements="14" conditionals="0" coveredstatements="11"/>
            <class name="FrameworkMethodTest">
               <metrics coveredelements="14" complexity="4" methods="4" testruns="4" statements="14" coveredconditionals="0" coveredmethods="3" elements="18" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="11" testpasses="3"/>
            </class>
            <class name="FrameworkMethodTest.ClassWithDummyMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="2" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="cannotBeCreatedWithoutUnderlyingField() : void" num="21" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasToStringWhichPrintsMethodName() : void" num="28" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="presentAnnotationIsAvailable() : void" num="35" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="missingAnnotationIsNotAvailable() : void" num="43" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="dummyMethod() : void" num="52" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="annotatedDummyMethod() : void" num="56" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/runners/model/InvalidTestClassErrorTest.java" name="InvalidTestClassErrorTest.java">
            <metrics coveredelements="3" coveredconditionals="0" complexity="1" loc="23" coveredmethods="1" methods="1" elements="3" classes="2" ncloc="16" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="InvalidTestClassErrorTest">
               <metrics coveredelements="3" complexity="1" methods="1" testruns="1" statements="2" coveredconditionals="0" coveredmethods="1" elements="3" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <class name="InvalidTestClassErrorTest.SampleTestClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="invalidTestClassErrorShouldListAllValidationErrorsInItsMessage() : void" num="11" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="13" count="1" type="stmt"/>
            <line num="16" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/runners/model/RunnerBuilderStub.java" name="RunnerBuilderStub.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="11" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="8" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="RunnerBuilderStub">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="runnerForClass(Class&lt;?&gt;) : Runner" num="7" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/runners/model/TestClassTest.java" name="TestClassTest.java">
            <metrics coveredelements="78" coveredconditionals="0" complexity="27" loc="263" coveredmethods="22" methods="27" elements="86" classes="16" ncloc="215" statements="59" conditionals="0" coveredstatements="56"/>
            <class name="TestClassTest">
               <metrics coveredelements="76" complexity="21" methods="21" testruns="20" statements="55" coveredconditionals="0" coveredmethods="21" elements="76" testfailures="0" testduration="0.03500000000000001" conditionals="0" coveredstatements="55" testpasses="20"/>
            </class>
            <class name="TestClassTest.TwoConstructors">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="2" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestClassTest.SuperclassWithField">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestClassTest.SubclassWithField">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestClassTest.OuterClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestClassTest.OuterClass.NonStaticInnerClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestClassTest.OuterClass2">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestClassTest.OuterClass2.StaticInnerClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestClassTest.SimpleClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestClassTest.FieldAnnotated">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestClassTest.MethodsAnnotated">
               <metrics coveredelements="2" coveredconditionals="0" complexity="4" coveredmethods="1" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="TestClassTest.DummyClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestClassTest.AnotherDummyClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestClassTest.PublicClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestClassTest.NonPublicClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestClassTest.AnnotatedClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="TwoConstructors()" num="26" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="TwoConstructors(int)" num="29" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="complainIfMultipleConstructors() : void" num="33" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="fieldsOnSubclassesShadowSuperclasses() : void" num="48" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="identifyNonStaticInnerClass() : void" num="59" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="dontMarkStaticInnerClassAsNonStatic() : void" num="72" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="dontMarkNonInnerClassAsInnerClass() : void" num="83" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="providesAnnotatedFieldsSortedByName() : void" num="100" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="annotatedFieldValues() : void" num="109" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="methodC() : int" num="118" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="methodA() : String" num="124" count="1" type="method"/>
            <line num="127" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="methodB() : int" num="130" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="methodWithoutAnnotation() : int" num="136" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="providesAnnotatedMethodsSortedByName() : void" num="141" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAnnotatedMethodsDoesNotReturnMethodWithoutAnnotation() : void" num="150" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="extractNames(List&lt;FrameworkMethod&gt;) : List&lt;String&gt;" num="158" count="2" type="method"/>
            <line num="159" count="2" type="stmt"/>
            <line num="160" count="2" type="stmt"/>
            <line num="161" count="18" type="stmt"/>
            <line num="163" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="annotatedMethodValues() : void" num="166" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isEqualToTestClassThatWrapsSameJavaClass() : void" num="175" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isEqualToTestClassThatWrapsNoJavaClassToo() : void" num="183" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="185" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNotEqualToTestClassThatWrapsADifferentJavaClass() : void" num="190" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNotEqualToNull() : void" num="198" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="200" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasSameHashCodeAsTestClassThatWrapsSameJavaClass() : void" num="210" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="212" count="1" type="stmt"/>
            <line num="213" count="1" type="stmt"/>
            <line num="215" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasHashCodeWithoutJavaClass() : void" num="219" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="221" count="1" type="stmt"/>
            <line num="222" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="identifiesPublicModifier() : void" num="230" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="232" count="1" type="stmt"/>
            <line num="233" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="identifiesNonPublicModifier() : void" num="240" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="242" count="1" type="stmt"/>
            <line num="243" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="presentAnnotationIsAvailable() : void" num="250" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="252" count="1" type="stmt"/>
            <line num="253" count="1" type="stmt"/>
            <line num="254" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="missingAnnotationIsNotAvailable() : void" num="257" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="259" count="1" type="stmt"/>
            <line num="260" count="1" type="stmt"/>
            <line num="261" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.junit.internal">
         <metrics coveredelements="565" complexity="231" loc="1721" methods="157" classes="40" statements="420" coveredconditionals="92" coveredmethods="109" elements="685" ncloc="1222" files="17" conditionals="108" coveredstatements="364"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/ArrayComparisonFailure.java" name="ArrayComparisonFailure.java">
            <metrics coveredelements="26" coveredconditionals="3" complexity="7" loc="74" coveredmethods="5" methods="5" elements="27" classes="1" ncloc="43" statements="18" conditionals="4" coveredstatements="18"/>
            <class name="ArrayComparisonFailure">
               <metrics coveredelements="26" coveredconditionals="3" complexity="7" coveredmethods="5" methods="5" elements="27" statements="18" conditionals="4" coveredstatements="18"/>
            </class>
            <line complexity="1" visibility="public" signature="ArrayComparisonFailure(String,AssertionError,int)" num="34" count="30" type="method"/>
            <line num="35" count="30" type="stmt"/>
            <line num="36" count="30" type="stmt"/>
            <line num="37" count="30" type="stmt"/>
            <line num="38" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="addDimension(int) : void" num="41" count="40" type="method"/>
            <line num="42" count="40" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCause() : Throwable" num="45" count="35" type="method"/>
            <line num="47" count="35" type="stmt"/>
            <line falsecount="29" truecount="6" num="47" type="cond"/>
            <line complexity="2" visibility="public" signature="getMessage() : String" num="50" count="29" type="method"/>
            <line num="52" count="29" type="stmt"/>
            <line num="53" count="29" type="stmt"/>
            <line falsecount="0" truecount="29" num="53" type="cond"/>
            <line num="54" count="29" type="stmt"/>
            <line num="56" count="29" type="stmt"/>
            <line num="57" count="29" type="stmt"/>
            <line num="58" count="39" type="stmt"/>
            <line num="59" count="39" type="stmt"/>
            <line num="60" count="39" type="stmt"/>
            <line num="62" count="29" type="stmt"/>
            <line num="63" count="29" type="stmt"/>
            <line num="64" count="29" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="70" count="4" type="method"/>
            <line num="72" count="4" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/AssumptionViolatedException.java" name="AssumptionViolatedException.java">
            <metrics coveredelements="37" coveredconditionals="9" complexity="12" loc="111" coveredmethods="7" methods="7" elements="39" classes="1" ncloc="59" statements="22" conditionals="10" coveredstatements="21"/>
            <class name="AssumptionViolatedException">
               <metrics coveredelements="37" coveredconditionals="9" complexity="12" coveredmethods="7" methods="7" elements="39" statements="22" conditionals="10" coveredstatements="21"/>
            </class>
            <line complexity="2" visibility="public" signature="AssumptionViolatedException(String,boolean,Object,Matcher&lt;?&gt;)" num="31" count="112" type="method"/>
            <line num="33" count="112" type="stmt"/>
            <line num="34" count="112" type="stmt"/>
            <line num="35" count="112" type="stmt"/>
            <line num="36" count="112" type="stmt"/>
            <line num="38" count="112" type="stmt"/>
            <line falsecount="98" truecount="14" num="38" type="cond"/>
            <line num="39" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="AssumptionViolatedException(Object,Matcher&lt;?&gt;)" num="49" count="89" type="method"/>
            <line num="51" count="89" type="stmt"/>
            <line complexity="1" visibility="public" signature="AssumptionViolatedException(String,Object,Matcher&lt;?&gt;)" num="60" count="3" type="method"/>
            <line num="62" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="AssumptionViolatedException(String)" num="70" count="18" type="method"/>
            <line num="72" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="AssumptionViolatedException(String,Throwable)" num="80" count="1" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMessage() : String" num="86" count="89" type="method"/>
            <line num="88" count="89" type="stmt"/>
            <line complexity="5" visibility="public" signature="describeTo(Description) : void" num="91" count="92" type="method"/>
            <line num="92" count="92" type="stmt"/>
            <line falsecount="61" truecount="31" num="92" type="cond"/>
            <line num="93" count="31" type="stmt"/>
            <line num="96" count="92" type="stmt"/>
            <line falsecount="25" truecount="67" num="96" type="cond"/>
            <line num="98" count="67" type="stmt"/>
            <line falsecount="61" truecount="0" num="98" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line num="102" count="67" type="stmt"/>
            <line num="103" count="67" type="stmt"/>
            <line num="105" count="67" type="stmt"/>
            <line falsecount="2" truecount="65" num="105" type="cond"/>
            <line num="106" count="65" type="stmt"/>
            <line num="107" count="65" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/Checks.java" name="Checks.java">
            <metrics coveredelements="12" coveredconditionals="4" complexity="5" loc="37" coveredmethods="2" methods="3" elements="13" classes="1" ncloc="16" statements="6" conditionals="4" coveredstatements="6"/>
            <class name="Checks">
               <metrics coveredelements="12" coveredconditionals="4" complexity="5" coveredmethods="2" methods="3" elements="13" statements="6" conditionals="4" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="private" signature="Checks()" num="6" count="0" type="method"/>
            <line complexity="2" visibility="public" signature="notNull(T) : T" num="15" count="1113" type="method"/>
            <line num="16" count="1113" type="stmt"/>
            <line falsecount="1112" truecount="1" num="16" type="cond"/>
            <line num="17" count="1" type="stmt"/>
            <line num="19" count="1112" type="stmt"/>
            <line complexity="2" visibility="public" signature="notNull(T,String) : T" num="31" count="699" type="method"/>
            <line num="32" count="699" type="stmt"/>
            <line falsecount="694" truecount="5" num="32" type="cond"/>
            <line num="33" count="5" type="stmt"/>
            <line num="35" count="694" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/Classes.java" name="Classes.java">
            <metrics coveredelements="6" coveredconditionals="1" complexity="4" loc="44" coveredmethods="2" methods="3" elements="8" classes="1" ncloc="14" statements="3" conditionals="2" coveredstatements="3"/>
            <class name="Classes">
               <metrics coveredelements="6" coveredconditionals="1" complexity="4" coveredmethods="2" methods="3" elements="8" statements="3" conditionals="2" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="Classes()" num="14" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getClass(String) : Class&lt;?&gt;" num="26" count="39" type="method"/>
            <line num="27" count="39" type="stmt"/>
            <line complexity="2" visibility="public" signature="getClass(String,Class&lt;?&gt;) : Class&lt;?&gt;" num="40" count="46" type="method"/>
            <line num="41" count="46" type="stmt"/>
            <line num="42" count="46" type="stmt"/>
            <line falsecount="46" truecount="0" num="42" type="cond"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/ComparisonCriteria.java" name="ComparisonCriteria.java">
            <metrics coveredelements="75" coveredconditionals="24" complexity="25" loc="132" coveredmethods="7" methods="7" elements="76" classes="1" ncloc="94" statements="45" conditionals="24" coveredstatements="44"/>
            <class name="ComparisonCriteria">
               <metrics coveredelements="75" coveredconditionals="24" complexity="25" coveredmethods="7" methods="7" elements="76" statements="45" conditionals="24" coveredstatements="44"/>
            </class>
            <line complexity="1" visibility="public" signature="arrayEquals(String,Object,Object) : void" num="26" count="48" type="method"/>
            <line num="28" count="48" type="stmt"/>
            <line complexity="16" visibility="private" signature="arrayEquals(String,Object,Object,boolean) : void" num="31" count="69" type="method"/>
            <line num="33" count="69" type="stmt"/>
            <line falsecount="43" truecount="26" num="33" type="cond"/>
            <line num="38" count="26" type="stmt"/>
            <line num="40" count="43" type="stmt"/>
            <line falsecount="30" truecount="13" num="40" type="cond"/>
            <line num="43" count="43" type="stmt"/>
            <line falsecount="10" truecount="33" num="43" type="cond"/>
            <line num="45" count="43" type="stmt"/>
            <line falsecount="42" truecount="1" num="45" type="cond"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="42" type="stmt"/>
            <line falsecount="41" truecount="1" num="48" type="cond"/>
            <line num="49" count="1" type="stmt"/>
            <line num="52" count="41" type="stmt"/>
            <line num="53" count="41" type="stmt"/>
            <line num="54" count="41" type="stmt"/>
            <line falsecount="23" truecount="18" num="54" type="cond"/>
            <line num="55" count="18" type="stmt"/>
            <line num="58" count="41" type="stmt"/>
            <line num="60" count="41" type="stmt"/>
            <line falsecount="16" truecount="45" num="60" type="cond"/>
            <line num="61" count="45" type="stmt"/>
            <line num="62" count="45" type="stmt"/>
            <line num="64" count="45" type="stmt"/>
            <line falsecount="24" truecount="21" num="64" type="cond"/>
            <line num="65" count="21" type="stmt"/>
            <line num="66" count="21" type="stmt"/>
            <line num="68" count="10" type="stmt"/>
            <line num="69" count="10" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="75" count="24" type="stmt"/>
            <line num="76" count="24" type="stmt"/>
            <line num="78" count="15" type="stmt"/>
            <line num="83" count="16" type="stmt"/>
            <line falsecount="1" truecount="15" num="83" type="cond"/>
            <line num="84" count="15" type="stmt"/>
            <line num="85" count="15" type="stmt"/>
            <line num="86" count="15" type="stmt"/>
            <line num="87" count="15" type="stmt"/>
            <line num="89" count="15" type="stmt"/>
            <line complexity="3" visibility="private" signature="getToStringableArrayElement(Object,int,int) : Object" num="96" count="30" type="method"/>
            <line num="97" count="30" type="stmt"/>
            <line falsecount="15" truecount="15" num="97" type="cond"/>
            <line num="98" count="15" type="stmt"/>
            <line num="99" count="15" type="stmt"/>
            <line falsecount="10" truecount="5" num="99" type="cond"/>
            <line num="100" count="5" type="stmt"/>
            <line num="102" count="10" type="stmt"/>
            <line num="105" count="15" type="stmt"/>
            <line complexity="1" visibility="private" signature="objectWithToString(String) : Object" num="109" count="6" type="method"/>
            <line num="110" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="111" count="20" type="method"/>
            <line num="113" count="20" type="stmt"/>
            <line complexity="2" visibility="private" signature="componentTypeName(Class&lt;?&gt;) : String" num="118" count="6" type="method"/>
            <line num="119" count="6" type="stmt"/>
            <line num="120" count="6" type="stmt"/>
            <line falsecount="5" truecount="1" num="120" type="cond"/>
            <line num="121" count="1" type="stmt"/>
            <line num="123" count="5" type="stmt"/>
            <line complexity="1" visibility="private" signature="isArray(Object) : boolean" num="127" count="81" type="method"/>
            <line num="128" count="81" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/ExactComparisonCriteria.java" name="ExactComparisonCriteria.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="10" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="8" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ExactComparisonCriteria">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="protected" signature="assertElementsEqual(Object,Object) : void" num="6" count="21" type="method"/>
            <line num="8" count="21" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/InexactComparisonCriteria.java" name="InexactComparisonCriteria.java">
            <metrics coveredelements="10" coveredconditionals="2" complexity="4" loc="24" coveredmethods="3" methods="3" elements="10" classes="1" ncloc="18" statements="5" conditionals="2" coveredstatements="5"/>
            <class name="InexactComparisonCriteria">
               <metrics coveredelements="10" coveredconditionals="2" complexity="4" coveredmethods="3" methods="3" elements="10" statements="5" conditionals="2" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="InexactComparisonCriteria(double)" num="8" count="2" type="method"/>
            <line num="9" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="InexactComparisonCriteria(float)" num="12" count="3" type="method"/>
            <line num="13" count="3" type="stmt"/>
            <line complexity="2" visibility="protected" signature="assertElementsEqual(Object,Object) : void" num="16" count="3" type="method"/>
            <line num="18" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="18" type="cond"/>
            <line num="19" count="1" type="stmt"/>
            <line num="21" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/JUnitSystem.java" name="JUnitSystem.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="14" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="JUnitSystem">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/MethodSorter.java" name="MethodSorter.java">
            <metrics coveredelements="31" coveredconditionals="10" complexity="10" loc="72" coveredmethods="4" methods="5" elements="32" classes="1" ncloc="42" statements="17" conditionals="10" coveredstatements="17"/>
            <class name="MethodSorter">
               <metrics coveredelements="31" coveredconditionals="10" complexity="10" coveredmethods="4" methods="5" elements="32" statements="17" conditionals="10" coveredstatements="17"/>
            </class>
            <line complexity="3" visibility="public" signature="compare(Method,Method) : int" num="14" count="72502" type="method"/>
            <line num="15" count="72502" type="stmt"/>
            <line num="16" count="72502" type="stmt"/>
            <line num="17" count="72502" type="stmt"/>
            <line falsecount="12983" truecount="59519" num="17" type="cond"/>
            <line num="18" count="59519" type="stmt"/>
            <line falsecount="31605" truecount="27914" num="18" type="cond"/>
            <line num="20" count="12983" type="stmt"/>
            <line complexity="2" visibility="public" signature="compare(Method,Method) : int" num="28" count="37770" type="method"/>
            <line num="29" count="37770" type="stmt"/>
            <line num="30" count="37770" type="stmt"/>
            <line falsecount="12987" truecount="24783" num="30" type="cond"/>
            <line num="31" count="24783" type="stmt"/>
            <line num="33" count="12987" type="stmt"/>
            <line complexity="2" visibility="public" signature="getDeclaredMethods(Class&lt;?&gt;) : Method[]" num="51" count="2621" type="method"/>
            <line num="52" count="2621" type="stmt"/>
            <line num="54" count="2621" type="stmt"/>
            <line num="55" count="2621" type="stmt"/>
            <line falsecount="1" truecount="2620" num="55" type="cond"/>
            <line num="56" count="2620" type="stmt"/>
            <line num="59" count="2621" type="stmt"/>
            <line complexity="1" visibility="private" signature="MethodSorter()" num="62" count="0" type="method"/>
            <line complexity="2" visibility="private" signature="getSorter(FixMethodOrder) : Comparator&lt;Method&gt;" num="65" count="2621" type="method"/>
            <line num="66" count="2621" type="stmt"/>
            <line falsecount="14" truecount="2607" num="66" type="cond"/>
            <line num="67" count="2607" type="stmt"/>
            <line num="70" count="14" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/RealSystem.java" name="RealSystem.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="2" loc="19" coveredmethods="1" methods="2" elements="4" classes="1" ncloc="11" statements="2" conditionals="0" coveredstatements="1"/>
            <class name="RealSystem">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="exit(int) : void" num="10" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="out() : PrintStream" num="15" count="8" type="method"/>
            <line num="16" count="8" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/TextListener.java" name="TextListener.java">
            <metrics coveredelements="49" coveredconditionals="8" complexity="16" loc="101" coveredmethods="11" methods="12" elements="51" classes="1" ncloc="76" statements="31" conditionals="8" coveredstatements="30"/>
            <class name="TextListener">
               <metrics coveredelements="49" coveredconditionals="8" complexity="16" coveredmethods="11" methods="12" elements="51" statements="31" conditionals="8" coveredstatements="30"/>
            </class>
            <line complexity="1" visibility="public" signature="TextListener(JUnitSystem)" num="16" count="12" type="method"/>
            <line num="17" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="TextListener(PrintStream)" num="20" count="89" type="method"/>
            <line num="21" count="89" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunFinished(Result) : void" num="24" count="89" type="method"/>
            <line num="26" count="89" type="stmt"/>
            <line num="27" count="89" type="stmt"/>
            <line num="28" count="89" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStarted(Description) : void" num="31" count="19" type="method"/>
            <line num="33" count="19" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFailure(Failure) : void" num="36" count="4" type="method"/>
            <line num="38" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIgnored(Description) : void" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getWriter() : PrintStream" num="50" count="875" type="method"/>
            <line num="51" count="875" type="stmt"/>
            <line complexity="1" visibility="protected" signature="printHeader(long) : void" num="54" count="89" type="method"/>
            <line num="55" count="89" type="stmt"/>
            <line num="56" count="89" type="stmt"/>
            <line complexity="3" visibility="protected" signature="printFailures(Result) : void" num="59" count="89" type="method"/>
            <line num="60" count="89" type="stmt"/>
            <line num="61" count="89" type="stmt"/>
            <line falsecount="81" truecount="8" num="61" type="cond"/>
            <line num="62" count="8" type="stmt"/>
            <line num="64" count="81" type="stmt"/>
            <line falsecount="22" truecount="59" num="64" type="cond"/>
            <line num="65" count="59" type="stmt"/>
            <line num="67" count="22" type="stmt"/>
            <line num="69" count="81" type="stmt"/>
            <line num="70" count="81" type="stmt"/>
            <line num="71" count="130" type="stmt"/>
            <line complexity="1" visibility="protected" signature="printFailure(Failure,String) : void" num="75" count="130" type="method"/>
            <line num="76" count="130" type="stmt"/>
            <line num="77" count="130" type="stmt"/>
            <line complexity="3" visibility="protected" signature="printFooter(Result) : void" num="80" count="89" type="method"/>
            <line num="81" count="89" type="stmt"/>
            <line falsecount="81" truecount="8" num="81" type="cond"/>
            <line num="82" count="8" type="stmt"/>
            <line num="83" count="8" type="stmt"/>
            <line num="84" count="8" type="stmt"/>
            <line falsecount="3" truecount="5" num="84" type="cond"/>
            <line num="87" count="81" type="stmt"/>
            <line num="88" count="81" type="stmt"/>
            <line num="89" count="81" type="stmt"/>
            <line num="91" count="89" type="stmt"/>
            <line complexity="1" visibility="protected" signature="elapsedTimeAsString(long) : String" num="98" count="89" type="method"/>
            <line num="99" count="89" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/Throwables.java" name="Throwables.java">
            <metrics coveredelements="119" coveredconditionals="23" complexity="41" loc="270" coveredmethods="20" methods="22" elements="131" classes="2" ncloc="199" statements="81" conditionals="28" coveredstatements="76"/>
            <class name="Throwables">
               <metrics coveredelements="91" coveredconditionals="13" complexity="31" coveredmethods="16" methods="17" elements="101" statements="66" conditionals="18" coveredstatements="62"/>
            </class>
            <class name="Throwables.State">
               <metrics coveredelements="28" coveredconditionals="10" complexity="10" coveredmethods="4" methods="5" elements="30" statements="15" conditionals="10" coveredstatements="14"/>
            </class>
            <line complexity="1" visibility="private" signature="Throwables()" num="23" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="rethrowAsException(Throwable) : Exception" num="45" count="54" type="method"/>
            <line num="46" count="54" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="rethrow(Throwable) : void" num="50" count="54" type="method"/>
            <line num="52" count="54" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStacktrace(Throwable) : String" num="60" count="14" type="method"/>
            <line num="61" count="14" type="stmt"/>
            <line num="62" count="14" type="stmt"/>
            <line num="63" count="14" type="stmt"/>
            <line num="64" count="14" type="stmt"/>
            <line complexity="2" visibility="public" signature="getTrimmedStackTrace(Throwable) : String" num="73" count="144" type="method"/>
            <line num="74" count="144" type="stmt"/>
            <line num="75" count="144" type="stmt"/>
            <line falsecount="130" truecount="14" num="75" type="cond"/>
            <line num="76" count="14" type="stmt"/>
            <line num="79" count="130" type="stmt"/>
            <line num="80" count="130" type="stmt"/>
            <line num="81" count="130" type="stmt"/>
            <line num="82" count="130" type="stmt"/>
            <line complexity="3" visibility="private" signature="getTrimmedStackTraceLines(Throwable) : List&lt;String&gt;" num="85" count="144" type="method"/>
            <line num="86" count="144" type="stmt"/>
            <line num="87" count="144" type="stmt"/>
            <line num="89" count="144" type="stmt"/>
            <line num="90" count="144" type="stmt"/>
            <line num="91" count="9705" type="stmt"/>
            <line num="92" count="9705" type="stmt"/>
            <line falsecount="9575" truecount="130" num="92" type="cond"/>
            <line num="93" count="130" type="stmt"/>
            <line num="94" count="130" type="stmt"/>
            <line num="95" count="130" type="stmt"/>
            <line num="96" count="2344" type="stmt"/>
            <line num="98" count="130" type="stmt"/>
            <line falsecount="117" truecount="13" num="98" type="cond"/>
            <line num="99" count="13" type="stmt"/>
            <line num="101" count="130" type="stmt"/>
            <line num="103" count="9575" type="stmt"/>
            <line num="105" count="14" type="stmt"/>
            <line complexity="2" visibility="private" signature="initGetSuppressed() : Method" num="110" count="2" type="method"/>
            <line num="111" count="2" type="stmt"/>
            <line num="112" count="2" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="hasSuppressed(Throwable) : boolean" num="118" count="117" type="method"/>
            <line num="119" count="117" type="stmt"/>
            <line falsecount="117" truecount="0" num="119" type="cond"/>
            <line num="120" count="0" type="stmt"/>
            <line num="122" count="117" type="stmt"/>
            <line num="123" count="117" type="stmt"/>
            <line num="124" count="117" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="8" visibility="private" signature="getCauseStackTraceLines(Throwable) : List&lt;String&gt;" num="130" count="130" type="method"/>
            <line num="131" count="130" type="stmt"/>
            <line falsecount="116" truecount="14" num="131" type="cond"/>
            <line num="132" count="14" type="stmt"/>
            <line num="133" count="14" type="stmt"/>
            <line num="135" count="14" type="stmt"/>
            <line num="137" count="14" type="stmt"/>
            <line num="138" count="14" type="stmt"/>
            <line num="139" count="14" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="140" count="1240" type="stmt"/>
            <line falsecount="1226" truecount="14" num="140" type="cond"/>
            <line num="141" count="14" type="stmt"/>
            <line num="142" count="14" type="stmt"/>
            <line falsecount="0" truecount="0" num="142" type="cond"/>
            <line num="143" count="167" type="stmt"/>
            <line num="145" count="14" type="stmt"/>
            <line num="153" count="116" type="stmt"/>
            <line complexity="1" visibility="private" signature="getFullStackTrace(Throwable) : String" num="156" count="28" type="method"/>
            <line num="157" count="28" type="stmt"/>
            <line num="158" count="28" type="stmt"/>
            <line num="159" count="28" type="stmt"/>
            <line num="160" count="28" type="stmt"/>
            <line complexity="1" visibility="private" signature="appendStackTraceLines(List&lt;String&gt;,StringBuilder) : void" num="163" count="260" type="method"/>
            <line num="165" count="260" type="stmt"/>
            <line num="166" count="2668" type="stmt"/>
            <line complexity="1" visibility="private" signature="asReversedList(List&lt;T&gt;) : List&lt;T&gt;" num="170" count="144" type="method"/>
            <line num="171" count="144" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : T" num="173" count="9705" type="method"/>
            <line num="175" count="9705" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="178" count="9719" type="method"/>
            <line num="180" count="9719" type="stmt"/>
            <line complexity="2" visibility="public" signature="processLine(String) : State" num="187" count="1628" type="method"/>
            <line num="188" count="1628" type="stmt"/>
            <line falsecount="1471" truecount="157" num="188" type="cond"/>
            <line num="189" count="157" type="stmt"/>
            <line num="191" count="1471" type="stmt"/>
            <line complexity="3" visibility="public" signature="processLine(String) : State" num="195" count="7573" type="method"/>
            <line num="196" count="7573" type="stmt"/>
            <line falsecount="7440" truecount="133" num="196" type="cond"/>
            <line num="197" count="133" type="stmt"/>
            <line num="198" count="7440" type="stmt"/>
            <line falsecount="26" truecount="7414" num="198" type="cond"/>
            <line num="199" count="7414" type="stmt"/>
            <line num="201" count="26" type="stmt"/>
            <line complexity="3" visibility="public" signature="processLine(String) : State" num="205" count="504" type="method"/>
            <line num="206" count="504" type="stmt"/>
            <line falsecount="133" truecount="371" num="206" type="cond"/>
            <line num="207" count="371" type="stmt"/>
            <line num="208" count="133" type="stmt"/>
            <line falsecount="130" truecount="3" num="208" type="cond"/>
            <line num="210" count="3" type="stmt"/>
            <line num="212" count="130" type="stmt"/>
            <line complexity="1" visibility="public" signature="processLine(String) : State" num="216" count="0" type="method"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="processStackTraceElement(StackTraceElement) : State" num="225" count="9705" type="method"/>
            <line num="226" count="9705" type="stmt"/>
            <line complexity="1" visibility="private" signature="isTestFrameworkMethod(String) : boolean" num="242" count="9201" type="method"/>
            <line num="243" count="9201" type="stmt"/>
            <line complexity="1" visibility="private" signature="isReflectionMethod(String) : boolean" num="257" count="8077" type="method"/>
            <line num="258" count="8077" type="stmt"/>
            <line complexity="2" visibility="private" signature="isMatchingMethod(String,String[]) : boolean" num="261" count="24894" type="method"/>
            <line num="262" count="24894" type="stmt"/>
            <line num="263" count="85789" type="stmt"/>
            <line falsecount="77627" truecount="8162" num="263" type="cond"/>
            <line num="264" count="8162" type="stmt"/>
            <line num="268" count="16732" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/internal/AllInternalTests.java" name="AllInternalTests.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="27" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="25" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AllInternalTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/internal/ArrayComparisonFailureTest.java" name="ArrayComparisonFailureTest.java">
            <metrics coveredelements="15" coveredconditionals="0" complexity="5" loc="68" coveredmethods="4" methods="4" elements="16" classes="1" ncloc="40" statements="12" conditionals="0" coveredstatements="11"/>
            <class name="ArrayComparisonFailureTest">
               <metrics coveredelements="15" complexity="5" methods="4" testruns="2" statements="12" coveredconditionals="0" coveredmethods="4" elements="16" testfailures="0" testduration="0.019999999999999997" conditionals="0" coveredstatements="11" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="classShouldAccept411Version() : void" num="36" testsuccess="true" count="1" testduration="0.018" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="classShouldAccept412Version() : void" num="41" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="assertFailureSerializableFromOthers(String) : void" num="46" count="2" type="method"/>
            <line num="48" count="2" type="stmt"/>
            <line num="49" count="2" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="52" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="deserializeFailureFromFile(String) : ArrayComparisonFailure" num="61" count="2" type="method"/>
            <line num="63" count="2" type="stmt"/>
            <line num="64" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/internal/ChecksTest.java" name="ChecksTest.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="8" loc="60" coveredmethods="5" methods="5" elements="23" classes="1" ncloc="48" statements="18" conditionals="0" coveredstatements="15"/>
            <class name="ChecksTest">
               <metrics coveredelements="20" complexity="8" methods="5" testruns="5" statements="18" coveredconditionals="0" coveredmethods="5" elements="23" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="15" testpasses="5"/>
            </class>
            <line complexity="1" visibility="public" signature="notNullShouldReturnNonNullValues() : void" num="13" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="15" count="1" type="stmt"/>
            <line num="17" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="notNullShouldThrowOnNullValues() : void" num="22" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="notNullWithMessageShouldReturnNonNullValues() : void" num="32" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="notNullWithMessageShouldThrowOnNullValues() : void" num="41" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="notNullWithNullMessageShouldThrowOnNullValues() : void" num="51" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/internal/MethodSorterTest.java" name="MethodSorterTest.java">
            <metrics coveredelements="32" coveredconditionals="1" complexity="34" loc="182" coveredmethods="7" methods="33" elements="67" classes="7" ncloc="141" statements="32" conditionals="2" coveredstatements="24"/>
            <class name="MethodSorterTest">
               <metrics coveredelements="32" complexity="8" methods="7" testruns="6" statements="24" coveredconditionals="1" coveredmethods="7" elements="33" testfailures="0" testduration="0.007" conditionals="2" coveredstatements="24" testpasses="6"/>
            </class>
            <class name="MethodSorterTest.DummySortWithoutAnnotation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="8" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="MethodSorterTest.Super">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="MethodSorterTest.Sub">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="MethodSorterTest.DummySortWithDefault">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="8" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="MethodSorterTest.DummySortJvm">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="8" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="MethodSorterTest.DummySortWithNameAsc">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="8" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="alpha(int,double,Thread) : Object" num="26" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="beta(int[][]) : void" num="30" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="gamma() : int" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="gamma(boolean) : void" num="37" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="delta() : void" num="40" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="epsilon() : void" num="43" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="superMario() : void" num="48" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="subBowser() : void" num="53" count="0" type="method"/>
            <line complexity="2" visibility="private" signature="getDeclaredMethodNames(Class&lt;?&gt;) : List&lt;String&gt;" num="57" count="5" type="method"/>
            <line num="58" count="5" type="stmt"/>
            <line num="61" count="5" type="stmt"/>
            <line num="62" count="5" type="stmt"/>
            <line num="64" count="20" type="stmt"/>
            <line falsecount="0" truecount="20" num="64" type="cond"/>
            <line num="65" count="20" type="stmt"/>
            <line num="69" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMethodsNullSorterSelf() : void" num="72" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMethodsNullSorterSuper() : void" num="79" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMethodsNullSorterSub() : void" num="86" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="alpha(int,double,Thread) : Object" num="95" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="beta(int[][]) : void" num="99" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="gamma() : int" num="102" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="gamma(boolean) : void" num="106" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="delta() : void" num="109" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="epsilon() : void" num="112" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="testDefaultMethodSorter() : void" num="116" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="alpha(int,double,Thread) : Object" num="125" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="beta(int[][]) : void" num="129" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="gamma() : int" num="132" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="gamma(boolean) : void" num="136" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="delta() : void" num="139" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="epsilon() : void" num="142" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="testJvmMethodSorter() : void" num="146" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="alpha(int,double,Thread) : Object" num="155" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="beta(int[][]) : void" num="159" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="gamma() : int" num="162" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="gamma(boolean) : void" num="166" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="delta() : void" num="169" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="epsilon() : void" num="172" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="testAscendingMethodSorter() : void" num="176" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="178" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/internal/StackTracesTest.java" name="StackTracesTest.java">
            <metrics coveredelements="129" coveredconditionals="7" complexity="57" loc="476" coveredmethods="30" methods="45" elements="186" classes="17" ncloc="381" statements="127" conditionals="14" coveredstatements="92"/>
            <class name="StackTracesTest">
               <metrics coveredelements="94" complexity="24" methods="18" testruns="4" statements="83" coveredconditionals="4" coveredmethods="18" elements="107" testfailures="0" testduration="0.032" conditionals="6" coveredstatements="72" testpasses="4"/>
            </class>
            <class name="StackTracesTest.StringMatcher">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="StackTracesTest.ExceptionMessageMatcher">
               <metrics coveredelements="4" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="StackTracesTest.StackTraceLineMatcher">
               <metrics coveredelements="13" coveredconditionals="3" complexity="5" coveredmethods="2" methods="3" elements="17" statements="10" conditionals="4" coveredstatements="8"/>
            </class>
            <class name="StackTracesTest.FramesRemovedMatcher">
               <metrics coveredelements="2" coveredconditionals="0" complexity="5" coveredmethods="1" methods="3" elements="16" statements="9" conditionals="4" coveredstatements="1"/>
            </class>
            <class name="StackTracesTest.TestWithOneThrowingTestMethod">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="StackTracesTest.JUnit3TestWithOneThrowingTestMethod">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="StackTracesTest.TestWithOneThrowingTestMethodWithCause">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="StackTracesTest.TestWithThrowingBeforeMethod">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="StackTracesTest.JUnit3TestWithThrowingSetUpMethod">
               <metrics coveredelements="3" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="StackTracesTest.ThrowingTestRule">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="StackTracesTest.TestWithThrowingTestRule">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="StackTracesTest.TestWithThrowingClassRule">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="StackTracesTest.ThrowingMethodRule">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="StackTracesTest.TestWithThrowingMethodRule">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="StackTracesTest.FakeClassUnderTest">
               <metrics coveredelements="4" coveredconditionals="0" complexity="5" coveredmethods="2" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="StackTracesTest.TestWithSuppressedException">
               <metrics coveredelements="3" complexity="3" methods="2" testruns="1" statements="6" coveredconditionals="0" coveredmethods="1" elements="8" testfailures="1" testduration="0.0" conditionals="0" coveredstatements="2" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="startExecutorService() : void" num="41" count="1" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shutDownExecutorService() : void" num="46" count="1" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTrimmedStackForJUnit4TestFailingInTestMethod() : void" num="52" count="1" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTrimmedStackForJUnit4TestFailingInTestMethodWithCause() : void" num="67" count="1" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTrimmedStackForJUnit4TestFailingInBeforeMethod() : void" num="88" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTrimmedStackForJUnit3TestFailingInTestMethod() : void" num="103" count="1" type="method"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTrimmedStackForJUnit3TestFailingInSetupMethod() : void" num="118" count="1" type="method"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTrimmedStackForJUnit4TestFailingInTestRule() : void" num="133" testsuccess="true" count="1" testduration="0.018" type="method"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTrimmedStackForJUnit4TestFailingInClassRule() : void" num="148" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTrimmedStackForJUnit4TestFailingInMethodRule() : void" num="163" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTrimmedStackWithSuppressedExceptions() : void" num="178" count="1" type="method"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line num="183" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line num="186" count="1" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ExceptionMessageMatcher(String)" num="204" count="11" type="method"/>
            <line num="205" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeTo(Description) : void" num="208" count="0" type="method"/>
            <line num="209" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="matchesSafely(String) : boolean" num="212" count="9" type="method"/>
            <line num="214" count="9" type="stmt"/>
            <line complexity="1" visibility="private" signature="message(String) : StringMatcher" num="219" count="11" type="method"/>
            <line num="220" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="StackTraceLineMatcher(String)" num="232" count="29" type="method"/>
            <line num="233" count="29" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeTo(Description) : void" num="236" count="0" type="method"/>
            <line num="237" count="0" type="stmt"/>
            <line complexity="3" visibility="protected" signature="matchesSafely(String) : boolean" num="240" count="25" type="method"/>
            <line num="242" count="25" type="stmt"/>
            <line falsecount="25" truecount="0" num="242" type="cond"/>
            <line num="243" count="0" type="stmt"/>
            <line num="246" count="25" type="stmt"/>
            <line num="247" count="25" type="stmt"/>
            <line num="248" count="25" type="stmt"/>
            <line falsecount="21" truecount="4" num="248" type="cond"/>
            <line num="249" count="4" type="stmt"/>
            <line num="251" count="21" type="stmt"/>
            <line num="252" count="21" type="stmt"/>
            <line complexity="1" visibility="private" signature="at(String) : StringMatcher" num="257" count="29" type="method"/>
            <line num="258" count="29" type="stmt"/>
            <line complexity="1" visibility="public" signature="FramesRemovedMatcher(String)" num="270" count="3" type="method"/>
            <line num="271" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeTo(Description) : void" num="274" count="0" type="method"/>
            <line num="275" count="0" type="stmt"/>
            <line complexity="3" visibility="protected" signature="matchesSafely(String) : boolean" num="278" count="0" type="method"/>
            <line num="280" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="280" type="cond"/>
            <line num="281" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line num="286" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="286" type="cond"/>
            <line num="287" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="framesInCommon() : StringMatcher" num="294" count="2" type="method"/>
            <line num="295" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="framesTrimmed() : StringMatcher" num="299" count="1" type="method"/>
            <line num="300" count="1" type="stmt"/>
            <line complexity="3" visibility="private" signature="runTest(Class&lt;?&gt;) : Result" num="303" count="9" type="method"/>
            <line num="304" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="call() : Result" num="305" count="9" type="method"/>
            <line num="306" count="9" type="stmt"/>
            <line num="307" count="9" type="stmt"/>
            <line num="311" count="9" type="stmt"/>
            <line num="312" count="9" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="assertHasTrimmedTrace(Failure,StringMatcher) : void" num="320" count="9" type="method"/>
            <line num="321" count="9" type="stmt"/>
            <line num="322" count="9" type="stmt"/>
            <line num="324" count="9" type="stmt"/>
            <line num="325" count="9" type="stmt"/>
            <line falsecount="5" truecount="34" num="325" type="cond"/>
            <line num="326" count="34" type="stmt"/>
            <line num="327" count="34" type="stmt"/>
            <line num="328" count="34" type="stmt"/>
            <line num="330" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="330" type="cond"/>
            <line num="331" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line num="333" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="333" type="cond"/>
            <line num="334" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line num="336" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="alwaysThrows() : void" num="342" testsuccess="false" count="0" testduration="0.002" type="method"/>
            <line num="344" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAlwaysThrows() : void" num="350" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="351" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="alwaysThrows() : void" num="357" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="359" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="alwaysThrows() : void" num="365" count="1" type="method"/>
            <line num="367" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="alwaysPasses() : void" num="370" count="0" type="method"/>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="377" count="1" type="method"/>
            <line num="379" count="1" type="stmt"/>
            <line num="380" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAlwaysPasses() : void" num="383" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="apply(Statement,org.junit.runner.Description) : Statement" num="389" count="2" type="method"/>
            <line num="391" count="2" type="stmt"/>
            <line num="392" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="alwaysPasses() : void" num="401" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="alwaysPasses() : void" num="411" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="apply(Statement,FrameworkMethod,Object) : Statement" num="418" count="1" type="method"/>
            <line num="420" count="1" type="stmt"/>
            <line num="421" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="alwaysPasses() : void" num="430" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="throwsExceptionWithCause() : void" num="437" count="0" type="method"/>
            <line num="438" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="throwsExceptionWithoutCause() : void" num="441" count="8" type="method"/>
            <line num="442" count="8" type="stmt"/>
            <line complexity="2" visibility="private" signature="doThrowExceptionWithCause() : void" num="445" count="0" type="method"/>
            <line num="446" count="0" type="stmt"/>
            <line num="447" count="0" type="stmt"/>
            <line num="449" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="doThrowExceptionWithoutCause() : void" num="453" count="8" type="method"/>
            <line num="454" count="8" type="stmt"/>
            <line complexity="2" visibility="package" signature="initAddSuppressed() : Method" num="461" count="1" type="method"/>
            <line num="462" count="1" type="stmt"/>
            <line num="463" count="1" type="stmt"/>
            <line num="465" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="alwaysThrows() : void" num="469" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="471" count="0" type="stmt"/>
            <line num="472" count="0" type="stmt"/>
            <line num="473" count="0" type="stmt"/>
         </file>
      </package>
      <package name="junit.runner">
         <metrics coveredelements="88" complexity="59" loc="369" methods="29" classes="3" statements="112" coveredconditionals="16" coveredmethods="13" elements="179" ncloc="263" files="3" conditionals="38" coveredstatements="59"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/junit/runner/BaseTestRunner.java" name="BaseTestRunner.java">
            <metrics coveredelements="86" coveredconditionals="16" complexity="56" loc="326" coveredmethods="12" methods="26" elements="174" classes="1" ncloc="241" statements="110" conditionals="38" coveredstatements="58"/>
            <class name="BaseTestRunner">
               <metrics coveredelements="86" coveredconditionals="16" complexity="56" coveredmethods="12" methods="26" elements="174" statements="110" conditionals="38" coveredstatements="58"/>
            </class>
            <line complexity="1" visibility="public" signature="startTest(Test) : void" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="setPreferences(Properties) : void" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="2" visibility="protected" signature="getPreferences() : Properties" num="48" count="6" type="method"/>
            <line num="49" count="6" type="stmt"/>
            <line falsecount="2" truecount="4" num="49" type="cond"/>
            <line num="50" count="4" type="stmt"/>
            <line num="51" count="4" type="stmt"/>
            <line num="52" count="4" type="stmt"/>
            <line num="53" count="4" type="stmt"/>
            <line num="55" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="savePreferences() : void" num="58" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setPreference(String,String) : void" num="67" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="endTest(Test) : void" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addError(Test,Throwable) : void" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addFailure(Test,AssertionFailedError) : void" num="79" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="10" visibility="public" signature="getTest(String) : Test" num="95" count="5" type="method"/>
            <line num="96" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="100" count="5" type="stmt"/>
            <line num="101" count="5" type="stmt"/>
            <line num="102" count="5" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="105" type="cond"/>
            <line num="106" count="0" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="114" count="4" type="stmt"/>
            <line num="115" count="4" type="stmt"/>
            <line num="116" count="4" type="stmt"/>
            <line num="119" count="2" type="stmt"/>
            <line num="120" count="2" type="stmt"/>
            <line num="122" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="122" type="cond"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="129" type="cond"/>
            <line num="130" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="elapsedTimeAsString(long) : String" num="147" count="0" type="method"/>
            <line num="148" count="0" type="stmt"/>
            <line complexity="6" visibility="protected" signature="processArguments(String[]) : String" num="155" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="157" type="cond"/>
            <line num="158" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="158" type="cond"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="160" type="cond"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="162" type="cond"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="164" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setLoading(boolean) : void" num="179" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="extractClassName(String) : String" num="186" count="0" type="method"/>
            <line num="187" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="187" type="cond"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="truncate(String) : String" num="196" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="197" type="cond"/>
            <line num="198" count="0" type="stmt"/>
            <line num="200" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="loadSuiteClass(String) : Class&lt;?&gt;" num="212" count="6" type="method"/>
            <line num="213" count="6" type="stmt"/>
            <line complexity="1" visibility="protected" signature="clearStatus() : void" num="219" count="3" type="method"/>
            <line complexity="1" visibility="protected" signature="useReloadingTestSuiteLoader() : boolean" num="222" count="0" type="method"/>
            <line num="223" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getPreferencesFile() : File" num="226" count="4" type="method"/>
            <line num="227" count="4" type="stmt"/>
            <line num="228" count="4" type="stmt"/>
            <line complexity="5" visibility="private" signature="readPreferences() : void" num="231" count="4" type="method"/>
            <line num="232" count="4" type="stmt"/>
            <line num="233" count="4" type="stmt"/>
            <line num="234" count="4" type="stmt"/>
            <line num="235" count="0" type="stmt"/>
            <line num="236" count="0" type="stmt"/>
            <line num="240" count="4" type="stmt"/>
            <line num="241" count="4" type="stmt"/>
            <line falsecount="4" truecount="0" num="241" type="cond"/>
            <line num="242" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPreference(String) : String" num="249" count="6" type="method"/>
            <line num="250" count="6" type="stmt"/>
            <line complexity="3" visibility="public" signature="getPreference(String,int) : int" num="253" count="4" type="method"/>
            <line num="254" count="4" type="stmt"/>
            <line num="255" count="4" type="stmt"/>
            <line num="256" count="4" type="stmt"/>
            <line falsecount="0" truecount="4" num="256" type="cond"/>
            <line num="257" count="4" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line num="263" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFilteredTrace(Throwable) : String" num="269" count="0" type="method"/>
            <line num="270" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="getFilteredTrace(String) : String" num="276" count="2" type="method"/>
            <line num="277" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="277" type="cond"/>
            <line num="278" count="0" type="stmt"/>
            <line num="281" count="2" type="stmt"/>
            <line num="282" count="2" type="stmt"/>
            <line num="283" count="2" type="stmt"/>
            <line num="284" count="2" type="stmt"/>
            <line num="286" count="2" type="stmt"/>
            <line num="287" count="2" type="stmt"/>
            <line num="288" count="2" type="stmt"/>
            <line falsecount="0" truecount="0" num="288" type="cond"/>
            <line num="289" count="30" type="stmt"/>
            <line falsecount="26" truecount="4" num="289" type="cond"/>
            <line num="290" count="4" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line num="296" count="2" type="stmt"/>
            <line complexity="1" visibility="protected" signature="showStackRaw() : boolean" num="299" count="2" type="method"/>
            <line num="300" count="2" type="stmt"/>
            <line complexity="3" visibility="package" signature="filterLine(String) : boolean" num="303" count="30" type="method"/>
            <line num="304" count="30" type="stmt"/>
            <line num="314" count="30" type="stmt"/>
            <line falsecount="4" truecount="115" num="314" type="cond"/>
            <line num="315" count="115" type="stmt"/>
            <line falsecount="89" truecount="26" num="315" type="cond"/>
            <line num="316" count="26" type="stmt"/>
            <line num="319" count="4" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;clinit&gt;, line 322()" num="322" count="4" type="method"/>
            <line num="323" count="4" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/junit/runner/TestRunListener.java" name="TestRunListener.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="25" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TestRunListener">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/junit/runner/Version.java" name="Version.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="3" loc="18" coveredmethods="1" methods="3" elements="5" classes="1" ncloc="11" statements="2" conditionals="0" coveredstatements="1"/>
            <class name="Version">
               <metrics coveredelements="2" coveredconditionals="0" complexity="3" coveredmethods="1" methods="3" elements="5" statements="2" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="private" signature="Version()" num="7" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="id() : String" num="11" count="9" type="method"/>
            <line num="12" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="15" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.junit.runner">
         <metrics coveredelements="532" complexity="194" loc="2049" methods="163" classes="49" statements="359" coveredconditionals="41" coveredmethods="148" elements="566" ncloc="1191" files="22" conditionals="44" coveredstatements="343"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runner/Computer.java" name="Computer.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="5" loc="52" coveredmethods="5" methods="5" elements="10" classes="1" ncloc="26" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="Computer">
               <metrics coveredelements="10" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="serial() : Computer" num="18" count="2" type="method"/>
            <line num="19" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSuite(RunnerBuilder,Class&lt;?&gt;[]) : Runner" num="26" count="291" type="method"/>
            <line num="28" count="291" type="stmt"/>
            <line complexity="1" visibility="public" signature="runnerForClass(Class&lt;?&gt;) : Runner" num="29" count="312" type="method"/>
            <line num="31" count="312" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getName() : String" num="34" count="582" type="method"/>
            <line num="41" count="582" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getRunner(RunnerBuilder,Class&lt;?&gt;) : Runner" num="49" count="312" type="method"/>
            <line num="50" count="312" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runner/Describable.java" name="Describable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="14" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Describable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runner/Description.java" name="Description.java">
            <metrics coveredelements="97" coveredconditionals="16" complexity="39" loc="327" coveredmethods="28" methods="28" elements="101" classes="1" ncloc="148" statements="55" conditionals="18" coveredstatements="53"/>
            <class name="Description">
               <metrics coveredelements="97" coveredconditionals="16" complexity="39" coveredmethods="28" methods="28" elements="101" statements="55" conditionals="18" coveredstatements="53"/>
            </class>
            <line complexity="1" visibility="public" signature="createSuiteDescription(String,Annotation) : Description" num="44" count="3604" type="method"/>
            <line num="45" count="3604" type="stmt"/>
            <line complexity="1" visibility="public" signature="createSuiteDescription(String,Serializable,Annotation) : Description" num="57" count="2" type="method"/>
            <line num="58" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="createTestDescription(String,String,Annotation) : Description" num="72" count="292" type="method"/>
            <line num="73" count="292" type="stmt"/>
            <line complexity="1" visibility="public" signature="createTestDescription(Class&lt;?&gt;,String,Annotation) : Description" num="85" count="6731" type="method"/>
            <line num="86" count="6731" type="stmt"/>
            <line complexity="1" visibility="public" signature="createTestDescription(Class&lt;?&gt;,String) : Description" num="98" count="474" type="method"/>
            <line num="99" count="474" type="stmt"/>
            <line complexity="1" visibility="public" signature="createTestDescription(String,String,Serializable) : Description" num="109" count="3" type="method"/>
            <line num="110" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="formatDisplayName(String,String) : String" num="113" count="7500" type="method"/>
            <line num="114" count="7500" type="stmt"/>
            <line complexity="1" visibility="public" signature="createSuiteDescription(Class&lt;?&gt;) : Description" num="123" count="249" type="method"/>
            <line num="124" count="249" type="stmt"/>
            <line complexity="1" visibility="public" signature="createSuiteDescription(Class&lt;?&gt;,Annotation) : Description" num="134" count="7663" type="method"/>
            <line num="135" count="7663" type="stmt"/>
            <line complexity="1" visibility="private" signature="Description(Class&lt;?&gt;,String,Annotation)" num="161" count="19737" type="method"/>
            <line num="162" count="19737" type="stmt"/>
            <line complexity="4" visibility="private" signature="Description(Class&lt;?&gt;,String,Serializable,Annotation)" num="165" count="19744" type="method"/>
            <line num="166" count="19744" type="stmt"/>
            <line falsecount="19742" truecount="2" num="166" type="cond"/>
            <line num="167" count="2" type="stmt"/>
            <line num="170" count="19742" type="stmt"/>
            <line falsecount="19742" truecount="0" num="170" type="cond"/>
            <line num="171" count="0" type="stmt"/>
            <line num="174" count="19742" type="stmt"/>
            <line num="175" count="19742" type="stmt"/>
            <line num="176" count="19742" type="stmt"/>
            <line num="177" count="19742" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDisplayName() : String" num="183" count="3019" type="method"/>
            <line num="184" count="3019" type="stmt"/>
            <line complexity="1" visibility="public" signature="addChild(Description) : void" num="192" count="38415" type="method"/>
            <line num="193" count="38415" type="stmt"/>
            <line complexity="1" visibility="public" signature="getChildren() : ArrayList&lt;Description&gt;" num="200" count="1051" type="method"/>
            <line num="201" count="1051" type="stmt"/>
            <line complexity="1" visibility="public" signature="isSuite() : boolean" num="207" count="161" type="method"/>
            <line num="208" count="161" type="stmt"/>
            <line complexity="1" visibility="public" signature="isTest() : boolean" num="214" count="3182" type="method"/>
            <line num="215" count="3182" type="stmt"/>
            <line complexity="2" visibility="public" signature="testCount() : int" num="221" count="2838" type="method"/>
            <line num="222" count="2838" type="stmt"/>
            <line falsecount="624" truecount="2214" num="222" type="cond"/>
            <line num="223" count="2214" type="stmt"/>
            <line num="225" count="624" type="stmt"/>
            <line num="226" count="624" type="stmt"/>
            <line num="227" count="2817" type="stmt"/>
            <line num="229" count="624" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="232" count="1147" type="method"/>
            <line num="234" count="1147" type="stmt"/>
            <line complexity="2" visibility="public" signature="equals(Object) : boolean" num="237" count="892" type="method"/>
            <line num="239" count="892" type="stmt"/>
            <line falsecount="890" truecount="2" num="239" type="cond"/>
            <line num="240" count="2" type="stmt"/>
            <line num="242" count="890" type="stmt"/>
            <line num="243" count="890" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="246" count="446" type="method"/>
            <line num="248" count="446" type="stmt"/>
            <line complexity="1" visibility="public" signature="isEmpty() : boolean" num="254" count="669" type="method"/>
            <line num="255" count="669" type="stmt"/>
            <line complexity="1" visibility="public" signature="childlessCopy() : Description" num="262" count="724" type="method"/>
            <line num="263" count="724" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAnnotation(Class&lt;T&gt;) : T" num="270" count="3404" type="method"/>
            <line num="271" count="3404" type="stmt"/>
            <line num="272" count="1968" type="stmt"/>
            <line falsecount="1698" truecount="270" num="272" type="cond"/>
            <line num="273" count="270" type="stmt"/>
            <line num="276" count="3134" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAnnotations() : Collection&lt;Annotation&gt;" num="282" count="11" type="method"/>
            <line num="283" count="11" type="stmt"/>
            <line complexity="4" visibility="public" signature="getTestClass() : Class&lt;?&gt;" num="290" count="3591" type="method"/>
            <line num="291" count="3591" type="stmt"/>
            <line falsecount="12" truecount="3579" num="291" type="cond"/>
            <line num="292" count="3579" type="stmt"/>
            <line num="294" count="12" type="stmt"/>
            <line num="295" count="12" type="stmt"/>
            <line falsecount="12" truecount="0" num="295" type="cond"/>
            <line num="296" count="0" type="stmt"/>
            <line num="298" count="12" type="stmt"/>
            <line num="299" count="12" type="stmt"/>
            <line num="300" count="4" type="stmt"/>
            <line num="302" count="8" type="stmt"/>
            <line complexity="2" visibility="public" signature="getClassName() : String" num="310" count="2946" type="method"/>
            <line num="311" count="2946" type="stmt"/>
            <line falsecount="13" truecount="2933" num="311" type="cond"/>
            <line complexity="1" visibility="public" signature="getMethodName() : String" num="318" count="127" type="method"/>
            <line num="319" count="127" type="stmt"/>
            <line complexity="2" visibility="private" signature="methodAndClassNamePatternGroupOrDefault(int,String) : String" num="322" count="140" type="method"/>
            <line num="324" count="140" type="stmt"/>
            <line num="325" count="140" type="stmt"/>
            <line falsecount="15" truecount="125" num="325" type="cond"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runner/FilterFactories.java" name="FilterFactories.java">
            <metrics coveredelements="24" coveredconditionals="2" complexity="8" loc="82" coveredmethods="5" methods="5" elements="25" classes="1" ncloc="44" statements="18" conditionals="2" coveredstatements="17"/>
            <class name="FilterFactories">
               <metrics coveredelements="24" coveredconditionals="2" complexity="8" coveredmethods="5" methods="5" elements="25" statements="18" conditionals="2" coveredstatements="17"/>
            </class>
            <line complexity="2" visibility="public" signature="createFilterFromFilterSpec(Request,String) : Filter" num="21" count="9" type="method"/>
            <line num="23" count="9" type="stmt"/>
            <line num="24" count="9" type="stmt"/>
            <line num="26" count="9" type="stmt"/>
            <line falsecount="4" truecount="5" num="26" type="cond"/>
            <line num="27" count="5" type="stmt"/>
            <line num="29" count="4" type="stmt"/>
            <line num="32" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="createFilter(String,FilterFactoryParams) : Filter" num="41" count="9" type="method"/>
            <line num="43" count="9" type="stmt"/>
            <line num="45" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="createFilter(Class&lt;? extends FilterFactory&gt;,FilterFactoryParams) : Filter" num="55" count="1" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="2" visibility="package" signature="createFilterFactory(String) : FilterFactory" num="62" count="10" type="method"/>
            <line num="63" count="10" type="stmt"/>
            <line num="65" count="10" type="stmt"/>
            <line num="66" count="10" type="stmt"/>
            <line num="68" count="2" type="stmt"/>
            <line num="71" count="8" type="stmt"/>
            <line complexity="2" visibility="package" signature="createFilterFactory(Class&lt;? extends FilterFactory&gt;) : FilterFactory" num="74" count="10" type="method"/>
            <line num="76" count="10" type="stmt"/>
            <line num="77" count="10" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runner/FilterFactory.java" name="FilterFactory.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="25" coveredmethods="1" methods="1" elements="2" classes="2" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="FilterFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="FilterFactory.FilterNotCreatedException">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="FilterNotCreatedException(Exception)" num="21" count="5" type="method"/>
            <line num="22" count="5" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runner/FilterFactoryParams.java" name="FilterFactoryParams.java">
            <metrics coveredelements="9" coveredconditionals="1" complexity="5" loc="23" coveredmethods="3" methods="3" elements="11" classes="1" ncloc="18" statements="6" conditionals="2" coveredstatements="5"/>
            <class name="FilterFactoryParams">
               <metrics coveredelements="9" coveredconditionals="1" complexity="5" coveredmethods="3" methods="3" elements="11" statements="6" conditionals="2" coveredstatements="5"/>
            </class>
            <line complexity="3" visibility="public" signature="FilterFactoryParams(Description,String)" num="7" count="12" type="method"/>
            <line num="8" count="12" type="stmt"/>
            <line falsecount="12" truecount="0" num="8" type="cond"/>
            <line num="9" count="0" type="stmt"/>
            <line num="12" count="12" type="stmt"/>
            <line num="13" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="getArgs() : String" num="16" count="7" type="method"/>
            <line num="17" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTopLevelDescription() : Description" num="20" count="3" type="method"/>
            <line num="21" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runner/JUnitCommandLineParseResult.java" name="JUnitCommandLineParseResult.java">
            <metrics coveredelements="72" coveredconditionals="16" complexity="23" loc="147" coveredmethods="12" methods="12" elements="72" classes="2" ncloc="103" statements="44" conditionals="16" coveredstatements="44"/>
            <class name="JUnitCommandLineParseResult">
               <metrics coveredelements="70" coveredconditionals="16" complexity="22" coveredmethods="11" methods="11" elements="70" statements="43" conditionals="16" coveredstatements="43"/>
            </class>
            <class name="JUnitCommandLineParseResult.CommandLineParserError">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="package" signature="JUnitCommandLineParseResult()" num="20" count="19" type="method"/>
            <line complexity="1" visibility="public" signature="getFilterSpecs() : List&lt;String&gt;" num="25" count="2" type="method"/>
            <line num="26" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getClasses() : List&lt;Class&lt;?&gt;&gt;" num="32" count="1" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="parse(String[]) : JUnitCommandLineParseResult" num="41" count="9" type="method"/>
            <line num="42" count="9" type="stmt"/>
            <line num="44" count="9" type="stmt"/>
            <line num="46" count="9" type="stmt"/>
            <line complexity="1" visibility="private" signature="parseArgs(String[]) : void" num="49" count="9" type="method"/>
            <line num="50" count="9" type="stmt"/>
            <line complexity="8" visibility="package" signature="parseOptions(String) : String[]" num="53" count="17" type="method"/>
            <line num="54" count="17" type="stmt"/>
            <line falsecount="5" truecount="25" num="54" type="cond"/>
            <line num="55" count="25" type="stmt"/>
            <line num="57" count="25" type="stmt"/>
            <line falsecount="24" truecount="1" num="57" type="cond"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="24" type="stmt"/>
            <line falsecount="10" truecount="14" num="59" type="cond"/>
            <line num="60" count="14" type="stmt"/>
            <line falsecount="5" truecount="9" num="60" type="cond"/>
            <line num="61" count="9" type="stmt"/>
            <line num="62" count="9" type="stmt"/>
            <line falsecount="7" truecount="2" num="62" type="cond"/>
            <line num="63" count="2" type="stmt"/>
            <line num="65" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="65" type="cond"/>
            <line num="66" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="72" count="7" type="stmt"/>
            <line num="75" count="8" type="stmt"/>
            <line num="77" count="5" type="stmt"/>
            <line num="80" count="10" type="stmt"/>
            <line num="84" count="6" type="stmt"/>
            <line complexity="2" visibility="private" signature="copyArray(String[],int,int) : String[]" num="87" count="11" type="method"/>
            <line num="88" count="11" type="stmt"/>
            <line num="89" count="11" type="stmt"/>
            <line falsecount="11" truecount="29" num="89" type="cond"/>
            <line num="90" count="29" type="stmt"/>
            <line num="92" count="11" type="stmt"/>
            <line complexity="2" visibility="package" signature="parseParameters(String[]) : void" num="95" count="11" type="method"/>
            <line num="96" count="11" type="stmt"/>
            <line num="97" count="27" type="stmt"/>
            <line num="98" count="27" type="stmt"/>
            <line num="100" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="errorReport(Throwable) : Request" num="105" count="7" type="method"/>
            <line num="106" count="7" type="stmt"/>
            <line complexity="2" visibility="public" signature="createRequest(Computer) : Request" num="114" count="14" type="method"/>
            <line num="115" count="14" type="stmt"/>
            <line falsecount="5" truecount="9" num="115" type="cond"/>
            <line num="116" count="9" type="stmt"/>
            <line num="118" count="9" type="stmt"/>
            <line num="120" count="5" type="stmt"/>
            <line complexity="2" visibility="private" signature="applyFilterSpecs(Request) : Request" num="124" count="9" type="method"/>
            <line num="125" count="9" type="stmt"/>
            <line num="126" count="9" type="stmt"/>
            <line num="127" count="6" type="stmt"/>
            <line num="129" count="4" type="stmt"/>
            <line num="131" count="7" type="stmt"/>
            <line num="133" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="CommandLineParserError(String)" num="143" count="6" type="method"/>
            <line num="144" count="6" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runner/JUnitCore.java" name="JUnitCore.java">
            <metrics coveredelements="39" coveredconditionals="2" complexity="14" loc="167" coveredmethods="12" methods="13" elements="41" classes="1" ncloc="65" statements="26" conditionals="2" coveredstatements="25"/>
            <class name="JUnitCore">
               <metrics coveredelements="39" coveredconditionals="2" complexity="14" coveredmethods="12" methods="13" elements="41" statements="26" conditionals="2" coveredstatements="25"/>
            </class>
            <line complexity="2" visibility="public" signature="main(String) : void" num="35" count="4" type="method"/>
            <line num="36" count="4" type="stmt"/>
            <line num="37" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="37" type="cond"/>
            <line complexity="1" visibility="public" signature="runClasses(Class&lt;?&gt;) : Result" num="48" count="144" type="method"/>
            <line num="49" count="144" type="stmt"/>
            <line complexity="1" visibility="public" signature="runClasses(Computer,Class&lt;?&gt;) : Result" num="61" count="146" type="method"/>
            <line num="62" count="146" type="stmt"/>
            <line complexity="1" visibility="package" signature="runMain(JUnitSystem,String) : Result" num="69" count="9" type="method"/>
            <line num="70" count="9" type="stmt"/>
            <line num="72" count="9" type="stmt"/>
            <line num="74" count="9" type="stmt"/>
            <line num="75" count="9" type="stmt"/>
            <line num="77" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="getVersion() : String" num="83" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Class&lt;?&gt;) : Result" num="93" count="131" type="method"/>
            <line num="94" count="131" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Computer,Class&lt;?&gt;) : Result" num="104" count="278" type="method"/>
            <line num="105" count="278" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Request) : Result" num="114" count="431" type="method"/>
            <line num="115" count="431" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(junit.framework.Test) : Result" num="124" count="1" type="method"/>
            <line num="125" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(Runner) : Result" num="131" count="454" type="method"/>
            <line num="132" count="454" type="stmt"/>
            <line num="133" count="454" type="stmt"/>
            <line num="134" count="454" type="stmt"/>
            <line num="135" count="454" type="stmt"/>
            <line num="136" count="454" type="stmt"/>
            <line num="137" count="453" type="stmt"/>
            <line num="138" count="453" type="stmt"/>
            <line num="140" count="454" type="stmt"/>
            <line num="142" count="453" type="stmt"/>
            <line complexity="1" visibility="public" signature="addListener(RunListener) : void" num="151" count="86" type="method"/>
            <line num="152" count="86" type="stmt"/>
            <line complexity="1" visibility="public" signature="removeListener(RunListener) : void" num="160" count="454" type="method"/>
            <line num="161" count="454" type="stmt"/>
            <line complexity="1" visibility="package" signature="defaultComputer() : Computer" num="164" count="287" type="method"/>
            <line num="165" count="287" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runner/OrderWith.java" name="OrderWith.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="28" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="15" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="OrderWith">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runner/OrderWithValidator.java" name="OrderWithValidator.java">
            <metrics coveredelements="6" coveredconditionals="2" complexity="2" loc="38" coveredmethods="1" methods="1" elements="6" classes="1" ncloc="17" statements="3" conditionals="2" coveredstatements="3"/>
            <class name="OrderWithValidator">
               <metrics coveredelements="6" coveredconditionals="2" complexity="2" coveredmethods="1" methods="1" elements="6" statements="3" conditionals="2" coveredstatements="3"/>
            </class>
            <line complexity="2" visibility="public" signature="validateAnnotatedClass(TestClass) : List&lt;Exception&gt;" num="30" count="10" type="method"/>
            <line num="32" count="10" type="stmt"/>
            <line falsecount="9" truecount="1" num="32" type="cond"/>
            <line num="33" count="1" type="stmt"/>
            <line num="36" count="9" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runner/Request.java" name="Request.java">
            <metrics coveredelements="29" coveredconditionals="0" complexity="13" loc="202" coveredmethods="12" methods="12" elements="29" classes="1" ncloc="59" statements="17" conditionals="0" coveredstatements="17"/>
            <class name="Request">
               <metrics coveredelements="29" coveredconditionals="0" complexity="13" coveredmethods="12" methods="12" elements="29" statements="17" conditionals="0" coveredstatements="17"/>
            </class>
            <line complexity="1" visibility="public" signature="method(Class&lt;?&gt;,String) : Request" num="39" count="51" type="method"/>
            <line num="40" count="51" type="stmt"/>
            <line num="41" count="51" type="stmt"/>
            <line complexity="1" visibility="public" signature="aClass(Class&lt;?&gt;) : Request" num="51" count="233" type="method"/>
            <line num="52" count="233" type="stmt"/>
            <line complexity="1" visibility="public" signature="classWithoutSuiteMethod(Class&lt;?&gt;) : Request" num="62" count="42" type="method"/>
            <line num="63" count="42" type="stmt"/>
            <line complexity="2" visibility="public" signature="classes(Computer,Class&lt;?&gt;) : Request" num="74" count="292" type="method"/>
            <line num="75" count="292" type="stmt"/>
            <line num="76" count="292" type="stmt"/>
            <line num="77" count="292" type="stmt"/>
            <line num="78" count="291" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="classes(Class&lt;?&gt;) : Request" num="91" count="3" type="method"/>
            <line num="92" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="errorReport(Class&lt;?&gt;,Throwable) : Request" num="100" count="7" type="method"/>
            <line num="101" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="runner(Runner) : Request" num="108" count="300" type="method"/>
            <line num="109" count="300" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRunner() : Runner" num="110" count="306" type="method"/>
            <line num="112" count="306" type="stmt"/>
            <line complexity="1" visibility="public" signature="filterWith(Filter) : Request" num="131" count="68" type="method"/>
            <line num="132" count="68" type="stmt"/>
            <line complexity="1" visibility="public" signature="filterWith(Description) : Request" num="145" count="52" type="method"/>
            <line num="146" count="52" type="stmt"/>
            <line complexity="1" visibility="public" signature="sortWith(Comparator&lt;Description&gt;) : Request" num="171" count="10" type="method"/>
            <line num="172" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="orderWith(Ordering) : Request" num="199" count="11" type="method"/>
            <line num="200" count="11" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runner/Result.java" name="Result.java">
            <metrics coveredelements="80" coveredconditionals="2" complexity="24" loc="217" coveredmethods="23" methods="23" elements="80" classes="3" ncloc="151" statements="55" conditionals="2" coveredstatements="55"/>
            <class name="Result">
               <metrics coveredelements="41" coveredconditionals="2" complexity="14" coveredmethods="13" methods="13" elements="41" statements="26" conditionals="2" coveredstatements="26"/>
            </class>
            <class name="Result.Listener">
               <metrics coveredelements="13" coveredconditionals="0" complexity="6" coveredmethods="6" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <class name="Result.SerializedForm">
               <metrics coveredelements="26" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="26" statements="22" conditionals="0" coveredstatements="22"/>
            </class>
            <line complexity="1" visibility="public" signature="Result()" num="39" count="467" type="method"/>
            <line num="40" count="467" type="stmt"/>
            <line num="41" count="467" type="stmt"/>
            <line num="42" count="467" type="stmt"/>
            <line num="43" count="467" type="stmt"/>
            <line num="44" count="467" type="stmt"/>
            <line num="45" count="467" type="stmt"/>
            <line complexity="1" visibility="private" signature="Result(SerializedForm)" num="48" count="8" type="method"/>
            <line num="49" count="8" type="stmt"/>
            <line num="50" count="8" type="stmt"/>
            <line num="51" count="8" type="stmt"/>
            <line num="52" count="8" type="stmt"/>
            <line num="53" count="8" type="stmt"/>
            <line num="54" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRunCount() : int" num="60" count="190" type="method"/>
            <line num="61" count="190" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFailureCount() : int" num="67" count="354" type="method"/>
            <line num="68" count="354" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRunTime() : long" num="74" count="97" type="method"/>
            <line num="75" count="97" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFailures() : List&lt;Failure&gt;" num="81" count="319" type="method"/>
            <line num="82" count="319" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIgnoreCount() : int" num="88" count="42" type="method"/>
            <line num="89" count="42" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAssumptionFailureCount() : int" num="98" count="16" type="method"/>
            <line num="99" count="16" type="stmt"/>
            <line falsecount="13" truecount="3" num="99" type="cond"/>
            <line num="100" count="3" type="stmt"/>
            <line num="103" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="wasSuccessful() : boolean" num="109" count="142" type="method"/>
            <line num="110" count="142" type="stmt"/>
            <line complexity="1" visibility="private" signature="writeObject(ObjectOutputStream) : void" num="113" count="3" type="method"/>
            <line num="114" count="3" type="stmt"/>
            <line num="115" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="readObject(ObjectInputStream) : void" num="118" count="11" type="method"/>
            <line num="120" count="11" type="stmt"/>
            <line complexity="1" visibility="private" signature="readResolve() : Object" num="123" count="8" type="method"/>
            <line num="124" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunStarted(Description) : void" num="129" count="455" type="method"/>
            <line num="131" count="455" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunFinished(Result) : void" num="134" count="454" type="method"/>
            <line num="136" count="454" type="stmt"/>
            <line num="137" count="454" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFinished(Description) : void" num="140" count="1711" type="method"/>
            <line num="142" count="1711" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFailure(Failure) : void" num="145" count="248" type="method"/>
            <line num="147" count="248" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIgnored(Description) : void" num="150" count="11" type="method"/>
            <line num="152" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAssumptionFailure(Failure) : void" num="155" count="26" type="method"/>
            <line num="157" count="26" type="stmt"/>
            <line complexity="1" visibility="public" signature="createListener() : RunListener" num="164" count="461" type="method"/>
            <line num="165" count="461" type="stmt"/>
            <line complexity="1" visibility="public" signature="SerializedForm(Result)" num="181" count="3" type="method"/>
            <line num="182" count="3" type="stmt"/>
            <line num="183" count="3" type="stmt"/>
            <line num="184" count="3" type="stmt"/>
            <line num="185" count="3" type="stmt"/>
            <line num="186" count="3" type="stmt"/>
            <line num="187" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="SerializedForm(ObjectInputStream.GetField)" num="190" count="11" type="method"/>
            <line num="192" count="11" type="stmt"/>
            <line num="193" count="11" type="stmt"/>
            <line num="194" count="11" type="stmt"/>
            <line num="195" count="11" type="stmt"/>
            <line num="196" count="11" type="stmt"/>
            <line num="197" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="serialize(ObjectOutputStream) : void" num="200" count="3" type="method"/>
            <line num="201" count="3" type="stmt"/>
            <line num="202" count="3" type="stmt"/>
            <line num="203" count="3" type="stmt"/>
            <line num="204" count="3" type="stmt"/>
            <line num="205" count="3" type="stmt"/>
            <line num="206" count="3" type="stmt"/>
            <line num="207" count="3" type="stmt"/>
            <line num="208" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="deserialize(ObjectInputStream) : SerializedForm" num="211" count="11" type="method"/>
            <line num="213" count="11" type="stmt"/>
            <line num="214" count="11" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runner/RunWith.java" name="RunWith.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="36" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="RunWith">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/runner/Runner.java" name="Runner.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="43" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="Runner">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testCount() : int" num="40" count="15" type="method"/>
            <line num="41" count="15" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/runner/AllRunnerTests.java" name="AllRunnerTests.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="18" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="15" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AllRunnerTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/runner/FilterFactoriesTest.java" name="FilterFactoriesTest.java">
            <metrics coveredelements="24" coveredconditionals="0" complexity="15" loc="137" coveredmethods="8" methods="15" elements="38" classes="8" ncloc="107" statements="23" conditionals="0" coveredstatements="16"/>
            <class name="FilterFactoriesTest">
               <metrics coveredelements="18" complexity="7" methods="7" testruns="6" statements="17" coveredconditionals="0" coveredmethods="5" elements="24" testfailures="2" testduration="0.028" conditionals="0" coveredstatements="13" testpasses="4"/>
            </class>
            <class name="FilterFactoriesTest.NonFilterFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="FilterFactoriesTest.NonInstantiableFilterFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="FilterFactoriesTest.FilterFactoryStub">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="FilterFactoriesTest.DummyFilter">
               <metrics coveredelements="4" coveredconditionals="0" complexity="4" coveredmethods="2" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="FilterFactoriesTest.DummyCategory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="FilterFactoriesTest.DummySuite">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="FilterFactoriesTest.DummyTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="createSuiteRequest() : Request" num="24" count="3" type="method"/>
            <line num="25" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldCreateFilterWithArguments() : void" num="28" testsuccess="true" count="1" testduration="0.012" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldCreateFilterWithNoArguments() : void" num="37" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldPassOnDescriptionToFilterFactory() : void" num="45" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldCreateFilter() : void" num="59" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldThrowExceptionIfNotFilterFactory() : void" num="70" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldThrowExceptionIfNotInstantiable() : void" num="77" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="NonInstantiableFilterFactory()" num="88" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="createFilter(FilterFactoryParams) : Filter" num="91" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createFilter(FilterFactoryParams) : Filter" num="97" count="3" type="method"/>
            <line num="98" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="DummyFilter(Description)" num="105" count="3" type="method"/>
            <line num="106" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTopLevelDescription() : Description" num="109" count="1" type="method"/>
            <line num="110" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldRun(Description) : boolean" num="113" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="describe() : String" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="passes() : void" num="133" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/runner/FilterOptionIntegrationTest.java" name="FilterOptionIntegrationTest.java">
            <metrics coveredelements="59" coveredconditionals="0" complexity="18" loc="190" coveredmethods="18" methods="18" elements="59" classes="9" ncloc="160" statements="41" conditionals="0" coveredstatements="41"/>
            <class name="FilterOptionIntegrationTest">
               <metrics coveredelements="44" coveredconditionals="0" complexity="8" coveredmethods="8" methods="8" elements="44" statements="36" conditionals="0" coveredstatements="36"/>
            </class>
            <class name="FilterOptionIntegrationTest.TestListener">
               <metrics coveredelements="10" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <class name="FilterOptionIntegrationTest.DummyTestClass">
               <metrics coveredelements="1" complexity="1" methods="1" testruns="2" statements="0" coveredconditionals="0" coveredmethods="1" elements="1" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="2"/>
            </class>
            <class name="FilterOptionIntegrationTest.DummyTestClass0">
               <metrics coveredelements="1" complexity="1" methods="1" testruns="4" statements="0" coveredconditionals="0" coveredmethods="1" elements="1" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="4"/>
            </class>
            <class name="FilterOptionIntegrationTest.DummyTestClass1">
               <metrics coveredelements="1" complexity="1" methods="1" testruns="1" statements="0" coveredconditionals="0" coveredmethods="1" elements="1" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="1"/>
            </class>
            <class name="FilterOptionIntegrationTest.DummyTestClass01">
               <metrics coveredelements="1" complexity="1" methods="1" testruns="2" statements="0" coveredconditionals="0" coveredmethods="1" elements="1" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="2"/>
            </class>
            <class name="FilterOptionIntegrationTest.DummyTestClass0TestMethod1">
               <metrics coveredelements="1" complexity="1" methods="1" testruns="2" statements="0" coveredconditionals="0" coveredmethods="1" elements="1" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="2"/>
            </class>
            <class name="FilterOptionIntegrationTest.DummyCategory0">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="FilterOptionIntegrationTest.DummyCategory1">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="28" count="4" type="method"/>
            <line num="30" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldRunAllTests() : void" num="33" count="1" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldExcludeSomeTests() : void" num="51" count="1" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldIncludeSomeTests() : void" num="70" count="1" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldCombineFilters() : void" num="89" count="1" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="runJUnit(String) : Result" num="109" count="4" type="method"/>
            <line num="110" count="4" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertWasRun(Class&lt;?&gt;) : void" num="113" count="11" type="method"/>
            <line num="114" count="11" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertWasNotRun(Class&lt;?&gt;) : void" num="117" count="9" type="method"/>
            <line num="118" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFinished(Description) : void" num="127" count="11" type="method"/>
            <line num="129" count="11" type="stmt"/>
            <line complexity="1" visibility="private" signature="testFinished(Class&lt;?&gt;) : boolean" num="132" count="11" type="method"/>
            <line num="133" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStarted(Description) : void" num="136" count="11" type="method"/>
            <line num="138" count="11" type="stmt"/>
            <line complexity="1" visibility="private" signature="testStarted(Class&lt;?&gt;) : boolean" num="141" count="20" type="method"/>
            <line num="142" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="wasRun(Class&lt;?&gt;) : boolean" num="145" count="20" type="method"/>
            <line num="146" count="20" type="stmt"/>
            <line complexity="1" visibility="public" signature="dummyTest() : void" num="151" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="dummyTest() : void" num="158" testsuccess="true" count="4" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="dummyTest() : void" num="165" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="dummyTest() : void" num="172" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="dummyTest() : void" num="179" testsuccess="true" count="2" testduration="0.0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/runner/JUnitCommandLineParseResultTest.java" name="JUnitCommandLineParseResultTest.java">
            <metrics coveredelements="51" coveredconditionals="0" complexity="12" loc="146" coveredmethods="11" methods="12" elements="52" classes="4" ncloc="110" statements="40" conditionals="0" coveredstatements="40"/>
            <class name="JUnitCommandLineParseResultTest">
               <metrics coveredelements="49" complexity="10" methods="10" testruns="10" statements="39" coveredconditionals="0" coveredmethods="10" elements="49" testfailures="0" testduration="0.007" conditionals="0" coveredstatements="39" testpasses="10"/>
            </class>
            <class name="JUnitCommandLineParseResultTest.FilterFactoryStub">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="JUnitCommandLineParseResultTest.DummyCategory0">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="JUnitCommandLineParseResultTest.DummyTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="shouldStopParsingOptionsUponDoubleHyphenArg() : void" num="22" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="24" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldParseFilterArgWithEqualsSyntax() : void" num="30" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldCreateFailureUponBaldFilterOptionNotFollowedByValue() : void" num="40" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldParseFilterArgInWhichValueIsASeparateArg() : void" num="50" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldStopParsingOptionsUponNonOption() : void" num="60" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldCreateFailureUponUnknownOption() : void" num="69" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldCreateFailureUponUncreatedFilter() : void" num="82" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldCreateFailureUponUnfoundFilterFactory() : void" num="94" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldAddToClasses() : void" num="107" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="109" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldCreateFailureUponUnknownTestClass() : void" num="119" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="createFilter(FilterFactoryParams) : Filter" num="133" count="1" type="method"/>
            <line num="134" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="dummyTest() : void" num="142" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/runner/JUnitCoreTest.java" name="JUnitCoreTest.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="1" loc="20" coveredmethods="1" methods="1" elements="5" classes="1" ncloc="15" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="JUnitCoreTest">
               <metrics coveredelements="5" complexity="1" methods="1" testruns="1" statements="4" coveredconditionals="0" coveredmethods="1" elements="5" testfailures="0" testduration="0.006" conditionals="0" coveredstatements="4" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="shouldAddFailuresToResult() : void" num="11" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="13" count="1" type="stmt"/>
            <line num="15" count="1" type="stmt"/>
            <line num="17" count="1" type="stmt"/>
            <line num="18" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/runner/OrderWithValidatorTest.java" name="OrderWithValidatorTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="4" loc="50" coveredmethods="2" methods="4" elements="10" classes="3" ncloc="40" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="OrderWithValidatorTest">
               <metrics coveredelements="8" complexity="2" methods="2" testruns="2" statements="6" coveredconditionals="0" coveredmethods="2" elements="8" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="6" testpasses="2"/>
            </class>
            <class name="OrderWithValidatorTest.TestWithNoValidationErrors">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="OrderWithValidatorTest.TestAnnotatedWithFixMethodOrder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="passes() : void" num="21" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="passes() : void" num="29" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="noErrorIsAddedForTestWithoutValdationErrors() : void" num="33" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="errorIsAddedWhenTestAnnotatedWithFixMethodOrder() : void" num="41" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/runner/RequestTest.java" name="RequestTest.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="3" loc="50" coveredmethods="3" methods="3" elements="11" classes="4" ncloc="36" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="RequestTest">
               <metrics coveredelements="9" complexity="2" methods="2" testruns="2" statements="7" coveredconditionals="0" coveredmethods="2" elements="9" testfailures="0" testduration="0.01" conditionals="0" coveredstatements="7" testpasses="2"/>
            </class>
            <class name="RequestTest.FailingComputer">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="RequestTest.FooTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RequestTest.BarTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="createsADescriptionWithANameForClasses() : void" num="18" testsuccess="true" count="1" testduration="0.008" type="method"/>
            <line num="20" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsInitializationErrorThrownWhileCreatingSuite() : void" num="26" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSuite(RunnerBuilder,Class&lt;?&gt;[]) : Runner" num="38" count="1" type="method"/>
            <line num="41" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/runner/RunnerSpy.java" name="RunnerSpy.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="6" loc="37" coveredmethods="2" methods="6" elements="12" classes="1" ncloc="27" statements="6" conditionals="0" coveredstatements="2"/>
            <class name="RunnerSpy">
               <metrics coveredelements="4" coveredconditionals="0" complexity="6" coveredmethods="2" methods="6" elements="12" statements="6" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="RunnerSpy(Class&lt;?&gt;)" num="12" count="5" type="method"/>
            <line num="13" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="RunnerSpy(Class&lt;?&gt;,RunnerBuilder)" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescription() : Description" num="21" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(RunNotifier) : void" num="26" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getInvokedRunnerBuilder() : RunnerBuilder" num="30" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getInvokedTestClass() : Class&lt;?&gt;" num="34" count="5" type="method"/>
            <line num="35" count="5" type="stmt"/>
         </file>
      </package>
      <package name="org.junit">
         <metrics coveredelements="375" complexity="157" loc="2091" methods="110" classes="18" statements="216" coveredconditionals="75" coveredmethods="99" elements="408" ncloc="702" files="15" conditionals="82" coveredstatements="201"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/After.java" name="After.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="41" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="After">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/AfterClass.java" name="AfterClass.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="42" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AfterClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/Assert.java" name="Assert.java">
            <metrics coveredelements="259" coveredconditionals="59" complexity="106" loc="1034" coveredmethods="68" methods="71" elements="271" classes="1" ncloc="359" statements="138" conditionals="62" coveredstatements="132"/>
            <class name="Assert">
               <metrics coveredelements="259" coveredconditionals="59" complexity="106" coveredmethods="68" methods="71" elements="271" statements="138" conditionals="62" coveredstatements="132"/>
            </class>
            <line complexity="1" visibility="protected" signature="Assert()" num="29" count="0" type="method"/>
            <line complexity="2" visibility="public" signature="assertTrue(String,boolean) : void" num="40" count="308" type="method"/>
            <line num="41" count="308" type="stmt"/>
            <line falsecount="306" truecount="0" num="41" type="cond"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertTrue(boolean) : void" num="52" count="179" type="method"/>
            <line num="53" count="179" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertFalse(String,boolean) : void" num="64" count="84" type="method"/>
            <line num="65" count="84" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertFalse(boolean) : void" num="74" count="70" type="method"/>
            <line num="75" count="70" type="stmt"/>
            <line complexity="2" visibility="public" signature="fail(String) : void" num="85" count="140" type="method"/>
            <line num="86" count="140" type="stmt"/>
            <line falsecount="94" truecount="46" num="86" type="cond"/>
            <line num="87" count="46" type="stmt"/>
            <line num="89" count="94" type="stmt"/>
            <line complexity="1" visibility="public" signature="fail() : void" num="95" count="43" type="method"/>
            <line num="96" count="43" type="stmt"/>
            <line complexity="5" visibility="public" signature="assertEquals(String,Object,Object) : void" num="110" count="362" type="method"/>
            <line num="112" count="362" type="stmt"/>
            <line falsecount="45" truecount="317" num="112" type="cond"/>
            <line num="113" count="317" type="stmt"/>
            <line num="115" count="45" type="stmt"/>
            <line falsecount="39" truecount="6" num="115" type="cond"/>
            <line num="116" count="6" type="stmt"/>
            <line falsecount="1" truecount="5" num="116" type="cond"/>
            <line num="117" count="6" type="stmt"/>
            <line num="120" count="39" type="stmt"/>
            <line complexity="2" visibility="private" signature="equalsRegardingNull(Object,Object) : boolean" num="124" count="453" type="method"/>
            <line num="125" count="453" type="stmt"/>
            <line falsecount="449" truecount="4" num="125" type="cond"/>
            <line num="126" count="4" type="stmt"/>
            <line num="129" count="449" type="stmt"/>
            <line complexity="1" visibility="private" signature="isEquals(Object,Object) : boolean" num="132" count="449" type="method"/>
            <line num="133" count="449" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(Object,Object) : void" num="145" count="331" type="method"/>
            <line num="146" count="331" type="stmt"/>
            <line complexity="2" visibility="public" signature="assertNotEquals(String,Object,Object) : void" num="160" count="18" type="method"/>
            <line num="162" count="18" type="stmt"/>
            <line falsecount="15" truecount="3" num="162" type="cond"/>
            <line num="163" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertNotEquals(Object,Object) : void" num="176" count="17" type="method"/>
            <line num="177" count="17" type="stmt"/>
            <line complexity="2" visibility="private" signature="failEquals(String,Object) : void" num="180" count="7" type="method"/>
            <line num="181" count="7" type="stmt"/>
            <line num="182" count="7" type="stmt"/>
            <line falsecount="6" truecount="1" num="182" type="cond"/>
            <line num="183" count="1" type="stmt"/>
            <line num="186" count="7" type="stmt"/>
            <line num="187" count="7" type="stmt"/>
            <line complexity="2" visibility="public" signature="assertNotEquals(String,long,long) : void" num="199" count="3" type="method"/>
            <line num="200" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="200" type="cond"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertNotEquals(long,long) : void" num="212" count="2" type="method"/>
            <line num="213" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="assertNotEquals(String,double,double,double) : void" num="231" count="4" type="method"/>
            <line num="233" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="233" type="cond"/>
            <line num="234" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertNotEquals(double,double,double) : void" num="250" count="3" type="method"/>
            <line num="251" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertNotEquals(float,float,float) : void" num="266" count="3" type="method"/>
            <line num="267" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertArrayEquals(String,Object[],Object[]) : void" num="283" count="34" type="method"/>
            <line num="285" count="34" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertArrayEquals(Object[],Object[]) : void" num="299" count="11" type="method"/>
            <line num="300" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertArrayEquals(String,boolean[],boolean[]) : void" num="314" count="2" type="method"/>
            <line num="316" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertArrayEquals(boolean[],boolean[]) : void" num="328" count="2" type="method"/>
            <line num="329" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertArrayEquals(String,byte[],byte[]) : void" num="341" count="1" type="method"/>
            <line num="343" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertArrayEquals(byte[],byte[]) : void" num="353" count="1" type="method"/>
            <line num="354" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertArrayEquals(String,char[],char[]) : void" num="366" count="1" type="method"/>
            <line num="368" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertArrayEquals(char[],char[]) : void" num="378" count="1" type="method"/>
            <line num="379" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertArrayEquals(String,short[],short[]) : void" num="391" count="1" type="method"/>
            <line num="393" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertArrayEquals(short[],short[]) : void" num="403" count="1" type="method"/>
            <line num="404" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertArrayEquals(String,int[],int[]) : void" num="416" count="3" type="method"/>
            <line num="418" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertArrayEquals(int[],int[]) : void" num="428" count="3" type="method"/>
            <line num="429" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertArrayEquals(String,long[],long[]) : void" num="441" count="1" type="method"/>
            <line num="443" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertArrayEquals(long[],long[]) : void" num="453" count="1" type="method"/>
            <line num="454" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertArrayEquals(String,double[],double[],double) : void" num="469" count="2" type="method"/>
            <line num="471" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertArrayEquals(double[],double[],double) : void" num="484" count="2" type="method"/>
            <line num="485" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertArrayEquals(String,float[],float[],float) : void" num="500" count="3" type="method"/>
            <line num="502" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertArrayEquals(float[],float[],float) : void" num="515" count="3" type="method"/>
            <line num="516" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="internalArrayEquals(String,Object,Object) : void" num="532" count="43" type="method"/>
            <line num="534" count="43" type="stmt"/>
            <line complexity="2" visibility="public" signature="assertEquals(String,double,double,double) : void" num="552" count="7" type="method"/>
            <line num="554" count="7" type="stmt"/>
            <line falsecount="4" truecount="3" num="554" type="cond"/>
            <line num="555" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="assertEquals(String,float,float,float) : void" num="574" count="3" type="method"/>
            <line num="576" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="576" type="cond"/>
            <line num="577" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="assertNotEquals(String,float,float,float) : void" num="596" count="4" type="method"/>
            <line num="598" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="598" type="cond"/>
            <line num="599" count="2" type="stmt"/>
            <line complexity="3" visibility="private" signature="doubleIsDifferent(double,double,double) : boolean" num="603" count="11" type="method"/>
            <line num="604" count="11" type="stmt"/>
            <line falsecount="6" truecount="5" num="604" type="cond"/>
            <line num="605" count="5" type="stmt"/>
            <line num="607" count="6" type="stmt"/>
            <line falsecount="5" truecount="1" num="607" type="cond"/>
            <line num="608" count="1" type="stmt"/>
            <line num="611" count="5" type="stmt"/>
            <line complexity="3" visibility="private" signature="floatIsDifferent(float,float,float) : boolean" num="614" count="7" type="method"/>
            <line num="615" count="7" type="stmt"/>
            <line falsecount="5" truecount="2" num="615" type="cond"/>
            <line num="616" count="2" type="stmt"/>
            <line num="618" count="5" type="stmt"/>
            <line falsecount="3" truecount="2" num="618" type="cond"/>
            <line num="619" count="2" type="stmt"/>
            <line num="622" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(long,long) : void" num="632" count="3059" type="method"/>
            <line num="633" count="3059" type="stmt"/>
            <line complexity="2" visibility="public" signature="assertEquals(String,long,long) : void" num="645" count="3128" type="method"/>
            <line num="646" count="3128" type="stmt"/>
            <line falsecount="3122" truecount="6" num="646" type="cond"/>
            <line num="647" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(double,double) : void" num="656" count="1" type="method"/>
            <line num="658" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(String,double,double) : void" num="666" count="1" type="method"/>
            <line num="669" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(double,double,double) : void" num="684" count="7" type="method"/>
            <line num="685" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(float,float,float) : void" num="700" count="3" type="method"/>
            <line num="701" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertNotNull(String,Object) : void" num="712" count="23" type="method"/>
            <line num="713" count="23" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertNotNull(Object) : void" num="722" count="9" type="method"/>
            <line num="723" count="9" type="stmt"/>
            <line complexity="2" visibility="public" signature="assertNull(String,Object) : void" num="734" count="11" type="method"/>
            <line num="735" count="11" type="stmt"/>
            <line falsecount="2" truecount="9" num="735" type="cond"/>
            <line num="736" count="9" type="stmt"/>
            <line num="738" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertNull(Object) : void" num="747" count="8" type="method"/>
            <line num="748" count="8" type="stmt"/>
            <line complexity="2" visibility="private" signature="failNotNull(String,Object) : void" num="751" count="2" type="method"/>
            <line num="752" count="2" type="stmt"/>
            <line num="753" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="753" type="cond"/>
            <line num="754" count="1" type="stmt"/>
            <line num="756" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="assertSame(String,Object,Object) : void" num="768" count="21" type="method"/>
            <line num="769" count="21" type="stmt"/>
            <line falsecount="3" truecount="18" num="769" type="cond"/>
            <line num="770" count="18" type="stmt"/>
            <line num="772" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertSame(Object,Object) : void" num="782" count="20" type="method"/>
            <line num="783" count="20" type="stmt"/>
            <line complexity="2" visibility="public" signature="assertNotSame(String,Object,Object) : void" num="796" count="5" type="method"/>
            <line num="798" count="5" type="stmt"/>
            <line falsecount="2" truecount="3" num="798" type="cond"/>
            <line num="799" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertNotSame(Object,Object) : void" num="811" count="4" type="method"/>
            <line num="812" count="4" type="stmt"/>
            <line complexity="2" visibility="private" signature="failSame(String) : void" num="815" count="3" type="method"/>
            <line num="816" count="3" type="stmt"/>
            <line num="817" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="817" type="cond"/>
            <line num="818" count="1" type="stmt"/>
            <line num="820" count="3" type="stmt"/>
            <line complexity="2" visibility="private" signature="failNotSame(String,Object,Object) : void" num="823" count="3" type="method"/>
            <line num="825" count="3" type="stmt"/>
            <line num="826" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="826" type="cond"/>
            <line num="827" count="1" type="stmt"/>
            <line num="829" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="failNotEquals(String,Object,Object) : void" num="833" count="49" type="method"/>
            <line num="835" count="49" type="stmt"/>
            <line complexity="4" visibility="package" signature="format(String,Object,Object) : String" num="838" count="73" type="method"/>
            <line num="839" count="73" type="stmt"/>
            <line num="840" count="73" type="stmt"/>
            <line falsecount="63" truecount="10" num="840" type="cond"/>
            <line num="841" count="10" type="stmt"/>
            <line num="843" count="73" type="stmt"/>
            <line num="844" count="73" type="stmt"/>
            <line num="845" count="73" type="stmt"/>
            <line falsecount="68" truecount="5" num="845" type="cond"/>
            <line num="846" count="5" type="stmt"/>
            <line num="850" count="68" type="stmt"/>
            <line complexity="2" visibility="private" signature="formatClass(Class&lt;?&gt;) : String" num="855" count="19" type="method"/>
            <line num="856" count="19" type="stmt"/>
            <line num="857" count="19" type="stmt"/>
            <line falsecount="18" truecount="1" num="857" type="cond"/>
            <line complexity="2" visibility="private" signature="formatClassAndValue(Object,String) : String" num="860" count="10" type="method"/>
            <line num="861" count="10" type="stmt"/>
            <line falsecount="8" truecount="2" num="861" type="cond"/>
            <line num="862" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(String,Object[],Object[]) : void" num="879" count="0" type="method"/>
            <line num="882" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(Object[],Object[]) : void" num="897" count="0" type="method"/>
            <line num="899" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertThat(T,Matcher&lt;? super T&gt;) : void" num="928" count="36" type="method"/>
            <line num="930" count="36" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertThat(String,T,Matcher&lt;? super T&gt;) : void" num="961" count="63" type="method"/>
            <line num="964" count="63" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertThrows(Class&lt;T&gt;,ThrowingRunnable) : T" num="979" count="18" type="method"/>
            <line num="981" count="18" type="stmt"/>
            <line complexity="4" visibility="public" signature="assertThrows(String,Class&lt;T&gt;,ThrowingRunnable) : T" num="998" count="20" type="method"/>
            <line num="1000" count="20" type="stmt"/>
            <line num="1001" count="20" type="stmt"/>
            <line num="1003" count="15" type="stmt"/>
            <line falsecount="7" truecount="8" num="1003" type="cond"/>
            <line num="1004" count="8" type="stmt"/>
            <line num="1005" count="8" type="stmt"/>
            <line num="1007" count="7" type="stmt"/>
            <line num="1008" count="7" type="stmt"/>
            <line num="1009" count="7" type="stmt"/>
            <line num="1010" count="7" type="stmt"/>
            <line falsecount="7" truecount="0" num="1010" type="cond"/>
            <line num="1013" count="0" type="stmt"/>
            <line num="1014" count="0" type="stmt"/>
            <line num="1016" count="7" type="stmt"/>
            <line num="1020" count="7" type="stmt"/>
            <line num="1021" count="7" type="stmt"/>
            <line num="1022" count="7" type="stmt"/>
            <line num="1025" count="5" type="stmt"/>
            <line num="1028" count="5" type="stmt"/>
            <line complexity="3" visibility="private" signature="buildPrefix(String) : String" num="1031" count="12" type="method"/>
            <line num="1032" count="12" type="stmt"/>
            <line falsecount="10" truecount="2" num="1032" type="cond"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/Assume.java" name="Assume.java">
            <metrics coveredelements="17" coveredconditionals="3" complexity="13" loc="169" coveredmethods="6" methods="10" elements="29" classes="1" ncloc="44" statements="13" conditionals="6" coveredstatements="8"/>
            <class name="Assume">
               <metrics coveredelements="17" coveredconditionals="3" complexity="13" coveredmethods="6" methods="10" elements="29" statements="13" conditionals="6" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="Assume()" num="42" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="assumeTrue(boolean) : void" num="49" count="31" type="method"/>
            <line num="50" count="31" type="stmt"/>
            <line complexity="1" visibility="public" signature="assumeFalse(boolean) : void" num="56" count="3" type="method"/>
            <line num="57" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="assumeTrue(String,boolean) : void" num="67" count="4" type="method"/>
            <line num="68" count="4" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line falsecount="2" truecount="0" num="68" type="cond"/>
            <line complexity="1" visibility="public" signature="assumeFalse(String,boolean) : void" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assumeNotNull(Object) : void" num="82" count="82" type="method"/>
            <line num="83" count="82" type="stmt"/>
            <line num="84" count="81" type="stmt"/>
            <line complexity="2" visibility="public" signature="assumeThat(T,Matcher&lt;T&gt;) : void" num="104" count="271" type="method"/>
            <line num="105" count="271" type="stmt"/>
            <line falsecount="190" truecount="81" num="105" type="cond"/>
            <line num="106" count="81" type="stmt"/>
            <line complexity="2" visibility="public" signature="assumeThat(String,T,Matcher&lt;T&gt;) : void" num="127" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assumeNoException(Throwable) : void" num="152" count="1" type="method"/>
            <line num="153" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="assumeNoException(String,Throwable) : void" num="166" count="0" type="method"/>
            <line num="167" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/AssumptionViolatedException.java" name="AssumptionViolatedException.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="4" loc="46" coveredmethods="3" methods="4" elements="8" classes="1" ncloc="18" statements="4" conditionals="0" coveredstatements="3"/>
            <class name="AssumptionViolatedException">
               <metrics coveredelements="6" coveredconditionals="0" complexity="4" coveredmethods="3" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="3"/>
            </class>
            <line complexity="1" visibility="public" signature="AssumptionViolatedException(T,Matcher&lt;T&gt;)" num="21" count="88" type="method"/>
            <line num="22" count="88" type="stmt"/>
            <line complexity="1" visibility="public" signature="AssumptionViolatedException(String,T,Matcher&lt;T&gt;)" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="AssumptionViolatedException(String)" num="36" count="4" type="method"/>
            <line num="37" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="AssumptionViolatedException(String,Throwable)" num="43" count="1" type="method"/>
            <line num="44" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/Before.java" name="Before.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="39" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Before">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/BeforeClass.java" name="BeforeClass.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="37" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="BeforeClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/ClassRule.java" name="ClassRule.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="118" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ClassRule">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/ComparisonFailure.java" name="ComparisonFailure.java">
            <metrics coveredelements="59" coveredconditionals="13" complexity="23" loc="171" coveredmethods="12" methods="14" elements="65" classes="3" ncloc="98" statements="37" conditionals="14" coveredstatements="34"/>
            <class name="ComparisonFailure">
               <metrics coveredelements="6" coveredconditionals="0" complexity="4" coveredmethods="2" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="ComparisonFailure.ComparisonCompactor">
               <metrics coveredelements="32" coveredconditionals="9" complexity="11" coveredmethods="4" methods="4" elements="34" statements="20" conditionals="10" coveredstatements="19"/>
            </class>
            <class name="ComparisonFailure.ComparisonCompactor.DiffExtractor">
               <metrics coveredelements="21" coveredconditionals="4" complexity="8" coveredmethods="6" methods="6" elements="21" statements="11" conditionals="4" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="ComparisonFailure(String,String,String)" num="36" count="18" type="method"/>
            <line num="37" count="18" type="stmt"/>
            <line num="38" count="18" type="stmt"/>
            <line num="39" count="18" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMessage() : String" num="47" count="17" type="method"/>
            <line num="49" count="17" type="stmt"/>
            <line complexity="1" visibility="public" signature="getActual() : String" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExpected() : String" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ComparisonCompactor(int,String,String)" num="89" count="17" type="method"/>
            <line num="90" count="17" type="stmt"/>
            <line num="91" count="17" type="stmt"/>
            <line num="92" count="17" type="stmt"/>
            <line complexity="4" visibility="public" signature="compact(String) : String" num="95" count="17" type="method"/>
            <line num="96" count="17" type="stmt"/>
            <line falsecount="17" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="17" type="stmt"/>
            <line num="100" count="17" type="stmt"/>
            <line num="101" count="17" type="stmt"/>
            <line num="102" count="17" type="stmt"/>
            <line complexity="3" visibility="private" signature="sharedPrefix() : String" num="108" count="17" type="method"/>
            <line num="109" count="17" type="stmt"/>
            <line num="110" count="17" type="stmt"/>
            <line falsecount="4" truecount="58" num="110" type="cond"/>
            <line num="111" count="58" type="stmt"/>
            <line falsecount="45" truecount="13" num="111" type="cond"/>
            <line num="112" count="13" type="stmt"/>
            <line num="115" count="4" type="stmt"/>
            <line complexity="3" visibility="private" signature="sharedSuffix(String) : String" num="118" count="17" type="method"/>
            <line num="119" count="17" type="stmt"/>
            <line num="120" count="17" type="stmt"/>
            <line num="122" count="17" type="stmt"/>
            <line falsecount="7" truecount="87" num="122" type="cond"/>
            <line num="123" count="87" type="stmt"/>
            <line falsecount="77" truecount="10" num="123" type="cond"/>
            <line num="125" count="10" type="stmt"/>
            <line num="128" count="17" type="stmt"/>
            <line complexity="1" visibility="private" signature="DiffExtractor()" num="138" count="17" type="method"/>
            <line num="139" count="17" type="stmt"/>
            <line num="140" count="17" type="stmt"/>
            <line complexity="1" visibility="public" signature="expectedDiff() : String" num="143" count="17" type="method"/>
            <line num="144" count="17" type="stmt"/>
            <line complexity="1" visibility="public" signature="actualDiff() : String" num="147" count="17" type="method"/>
            <line num="148" count="17" type="stmt"/>
            <line complexity="2" visibility="public" signature="compactPrefix() : String" num="151" count="17" type="method"/>
            <line num="152" count="17" type="stmt"/>
            <line falsecount="1" truecount="16" num="152" type="cond"/>
            <line num="153" count="16" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="compactSuffix() : String" num="158" count="17" type="method"/>
            <line num="159" count="17" type="stmt"/>
            <line falsecount="2" truecount="15" num="159" type="cond"/>
            <line num="160" count="15" type="stmt"/>
            <line num="162" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="extractDiff(String) : String" num="165" count="34" type="method"/>
            <line num="166" count="34" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/FixMethodOrder.java" name="FixMethodOrder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="41" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FixMethodOrder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/Ignore.java" name="Ignore.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="40" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Ignore">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/Rule.java" name="Rule.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="101" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Rule">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/Test.java" name="Test.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="98" coveredmethods="0" methods="1" elements="1" classes="2" ncloc="16" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Test">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Test.None">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="None()" num="74" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/TestCouldNotBeSkippedException.java" name="TestCouldNotBeSkippedException.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="19" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="7" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="TestCouldNotBeSkippedException">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="TestCouldNotBeSkippedException(org.junit.internal.AssumptionViolatedException)" num="16" count="4" type="method"/>
            <line num="17" count="4" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/AssumptionViolatedExceptionTest.java" name="AssumptionViolatedExceptionTest.java">
            <metrics coveredelements="32" coveredconditionals="0" complexity="9" loc="95" coveredmethods="9" methods="9" elements="32" classes="1" ncloc="82" statements="23" conditionals="0" coveredstatements="23"/>
            <class name="AssumptionViolatedExceptionTest">
               <metrics coveredelements="32" complexity="9" methods="9" testruns="7" statements="23" coveredconditionals="0" coveredmethods="9" elements="32" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="23" testpasses="7"/>
            </class>
            <line complexity="1" visibility="public" signature="toStringReportsMatcher(Integer,Matcher&lt;Integer&gt;) : void" num="26" count="4" type="method"/>
            <line num="28" count="4" type="stmt"/>
            <line num="29" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="toStringReportsValue(Integer,Matcher&lt;Integer&gt;) : void" num="33" count="4" type="method"/>
            <line num="35" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="assumptionViolatedExceptionWithMatcherDescribesItself() : void" num="39" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="simpleAssumptionViolatedExceptionDescribesItself() : void" num="45" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="canInitCauseWithInstanceCreatedWithString() : void" num="51" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="canSetCauseWithInstanceCreatedWithObjectAndMatcher() : void" num="59" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="canSetCauseWithInstanceCreatedWithAssumptionObjectAndMatcher() : void" num="69" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="canSetCauseWithInstanceCreatedWithMainConstructor() : void" num="79" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="canSetCauseWithInstanceCreatedWithExplicitThrowableConstructor() : void" num="89" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.junit.validator">
         <metrics coveredelements="84" complexity="33" loc="495" methods="29" classes="25" statements="64" coveredconditionals="6" coveredmethods="22" elements="99" ncloc="323" files="10" conditionals="6" coveredstatements="56"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/validator/AnnotationValidator.java" name="AnnotationValidator.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="3" loc="60" coveredmethods="1" methods="3" elements="6" classes="1" ncloc="18" statements="3" conditionals="0" coveredstatements="1"/>
            <class name="AnnotationValidator">
               <metrics coveredelements="2" coveredconditionals="0" complexity="3" coveredmethods="1" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="validateAnnotatedClass(TestClass) : List&lt;Exception&gt;" num="32" count="33" type="method"/>
            <line num="33" count="33" type="stmt"/>
            <line complexity="1" visibility="public" signature="validateAnnotatedField(FrameworkField) : List&lt;Exception&gt;" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="validateAnnotatedMethod(FrameworkMethod) : List&lt;Exception&gt;" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/validator/AnnotationValidatorFactory.java" name="AnnotationValidatorFactory.java">
            <metrics coveredelements="11" coveredconditionals="2" complexity="3" loc="39" coveredmethods="1" methods="1" elements="12" classes="1" ncloc="20" statements="9" conditionals="2" coveredstatements="8"/>
            <class name="AnnotationValidatorFactory">
               <metrics coveredelements="11" coveredconditionals="2" complexity="3" coveredmethods="1" methods="1" elements="12" statements="9" conditionals="2" coveredstatements="8"/>
            </class>
            <line complexity="3" visibility="public" signature="createAnnotationValidator(ValidateWith) : AnnotationValidator" num="23" count="124" type="method"/>
            <line num="24" count="124" type="stmt"/>
            <line num="25" count="124" type="stmt"/>
            <line falsecount="5" truecount="119" num="25" type="cond"/>
            <line num="26" count="119" type="stmt"/>
            <line num="29" count="5" type="stmt"/>
            <line num="30" count="5" type="stmt"/>
            <line num="31" count="5" type="stmt"/>
            <line num="32" count="4" type="stmt"/>
            <line num="33" count="4" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/validator/AnnotationsValidator.java" name="AnnotationsValidator.java">
            <metrics coveredelements="36" coveredconditionals="2" complexity="10" loc="120" coveredmethods="9" methods="9" elements="36" classes="5" ncloc="90" statements="25" conditionals="2" coveredstatements="25"/>
            <class name="AnnotationsValidator">
               <metrics coveredelements="6" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="6" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <class name="AnnotationsValidator.AnnotatableValidator">
               <metrics coveredelements="18" coveredconditionals="2" complexity="3" coveredmethods="2" methods="2" elements="18" statements="14" conditionals="2" coveredstatements="14"/>
            </class>
            <class name="AnnotationsValidator.ClassValidator">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="AnnotationsValidator.MethodValidator">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="AnnotationsValidator.FieldValidator">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="validateTestClass(TestClass) : List&lt;Exception&gt;" num="33" count="1243" type="method"/>
            <line num="34" count="1243" type="stmt"/>
            <line num="35" count="1243" type="stmt"/>
            <line num="36" count="3729" type="stmt"/>
            <line num="38" count="3729" type="stmt"/>
            <line num="40" count="1243" type="stmt"/>
            <line complexity="1" visibility="public" signature="validateTestClass(TestClass) : List&lt;Exception&gt;" num="51" count="3729" type="method"/>
            <line num="52" count="3729" type="stmt"/>
            <line num="53" count="3729" type="stmt"/>
            <line num="54" count="12466" type="stmt"/>
            <line num="55" count="12466" type="stmt"/>
            <line num="57" count="3729" type="stmt"/>
            <line complexity="2" visibility="private" signature="validateAnnotatable(T) : List&lt;Exception&gt;" num="60" count="12466" type="method"/>
            <line num="61" count="12466" type="stmt"/>
            <line num="62" count="12466" type="stmt"/>
            <line num="63" count="12029" type="stmt"/>
            <line num="65" count="12029" type="stmt"/>
            <line num="67" count="12029" type="stmt"/>
            <line falsecount="11907" truecount="122" num="67" type="cond"/>
            <line num="68" count="122" type="stmt"/>
            <line num="70" count="122" type="stmt"/>
            <line num="72" count="122" type="stmt"/>
            <line num="75" count="12466" type="stmt"/>
            <line complexity="1" visibility="package" signature="getAnnotatablesForTestClass(TestClass) : Iterable&lt;TestClass&gt;" num="80" count="1243" type="method"/>
            <line num="82" count="1243" type="stmt"/>
            <line complexity="1" visibility="package" signature="validateAnnotatable(AnnotationValidator,TestClass) : List&lt;Exception&gt;" num="85" count="42" type="method"/>
            <line num="88" count="42" type="stmt"/>
            <line complexity="1" visibility="package" signature="getAnnotatablesForTestClass(TestClass) : Iterable&lt;FrameworkMethod&gt;" num="94" count="1243" type="method"/>
            <line num="97" count="1243" type="stmt"/>
            <line complexity="1" visibility="package" signature="validateAnnotatable(AnnotationValidator,FrameworkMethod) : List&lt;Exception&gt;" num="100" count="79" type="method"/>
            <line num="103" count="79" type="stmt"/>
            <line complexity="1" visibility="package" signature="getAnnotatablesForTestClass(TestClass) : Iterable&lt;FrameworkField&gt;" num="109" count="1243" type="method"/>
            <line num="111" count="1243" type="stmt"/>
            <line complexity="1" visibility="package" signature="validateAnnotatable(AnnotationValidator,FrameworkField) : List&lt;Exception&gt;" num="114" count="1" type="method"/>
            <line num="117" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/validator/PublicClassValidator.java" name="PublicClassValidator.java">
            <metrics coveredelements="6" coveredconditionals="2" complexity="2" loc="33" coveredmethods="1" methods="1" elements="6" classes="1" ncloc="16" statements="3" conditionals="2" coveredstatements="3"/>
            <class name="PublicClassValidator">
               <metrics coveredelements="6" coveredconditionals="2" complexity="2" coveredmethods="1" methods="1" elements="6" statements="3" conditionals="2" coveredstatements="3"/>
            </class>
            <line complexity="2" visibility="public" signature="validateTestClass(TestClass) : List&lt;Exception&gt;" num="25" count="1065" type="method"/>
            <line num="26" count="1065" type="stmt"/>
            <line falsecount="5" truecount="1060" num="26" type="cond"/>
            <line num="27" count="1060" type="stmt"/>
            <line num="29" count="5" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/validator/TestClassValidator.java" name="TestClassValidator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="21" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TestClassValidator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/validator/ValidateWith.java" name="ValidateWith.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="22" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ValidateWith">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/validator/AllValidatorTests.java" name="AllValidatorTests.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="14" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AllValidatorTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/validator/AnnotationValidatorFactoryTest.java" name="AnnotationValidatorFactoryTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="3" loc="47" coveredmethods="1" methods="3" elements="11" classes="5" ncloc="38" statements="8" conditionals="0" coveredstatements="3"/>
            <class name="AnnotationValidatorFactoryTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="2" statements="7" coveredconditionals="0" coveredmethods="1" elements="9" testfailures="1" testduration="0.009999999999999998" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <class name="AnnotationValidatorFactoryTest.SampleAnnotationWithValidator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="AnnotationValidatorFactoryTest.Validator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="AnnotationValidatorFactoryTest.SampleAnnotationWithValidatorThatThrowsException">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="AnnotationValidatorFactoryTest.ValidatorThatThrowsException">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="createAnnotationValidator() : void" num="15" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="17" count="1" type="stmt"/>
            <line num="18" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="exceptionWhenAnnotationValidatorCantBeCreated() : void" num="29" testsuccess="false" count="0" testduration="0.009" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ValidatorThatThrowsException()" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/validator/AnnotationsValidatorTest.java" name="AnnotationsValidatorTest.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="10" loc="98" coveredmethods="7" methods="10" elements="20" classes="6" ncloc="80" statements="10" conditionals="0" coveredstatements="10"/>
            <class name="AnnotationsValidatorTest">
               <metrics coveredelements="11" complexity="4" methods="4" testruns="3" statements="7" coveredconditionals="0" coveredmethods="4" elements="11" testfailures="0" testduration="0.018000000000000002" conditionals="0" coveredstatements="7" testpasses="3"/>
            </class>
            <class name="AnnotationsValidatorTest.ExampleAnnotationValidator">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="AnnotationsValidatorTest.ExampleAnnotationWithValidator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="AnnotationsValidatorTest.AnnotationValidatorMethodTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="AnnotationsValidatorTest.AnnotationValidatorFieldTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="AnnotationsValidatorTest.AnnotationValidatorClassTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="validateAnnotatedClass(TestClass) : List&lt;Exception&gt;" num="26" count="1" type="method"/>
            <line num="28" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="validateAnnotatedField(FrameworkField) : List&lt;Exception&gt;" num="31" count="1" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="validateAnnotatedMethod(FrameworkMethod) : List&lt;Exception&gt;" num="36" count="1" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="49" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="test() : void" num="59" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="test() : void" num="66" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="validatorIsCalledForAClass() : void" num="71" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="validatorIsCalledForAMethod() : void" num="77" testsuccess="true" count="1" testduration="0.008" type="method"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="validatorIsCalledForAField() : void" num="83" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertClassHasFailureMessage(Class&lt;?&gt;,String) : void" num="89" count="3" type="method"/>
            <line num="91" count="3" type="stmt"/>
            <line num="92" count="3" type="stmt"/>
            <line num="94" count="3" type="stmt"/>
            <line num="95" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/validator/PublicClassValidatorTest.java" name="PublicClassValidatorTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="2" loc="41" coveredmethods="2" methods="2" elements="8" classes="3" ncloc="31" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="PublicClassValidatorTest">
               <metrics coveredelements="8" complexity="2" methods="2" testruns="2" statements="6" coveredconditionals="0" coveredmethods="2" elements="8" testfailures="0" testduration="0.006" conditionals="0" coveredstatements="6" testpasses="2"/>
            </class>
            <class name="PublicClassValidatorTest.PublicClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="PublicClassValidatorTest.NonPublicClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="acceptsPublicClass() : void" num="20" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="22" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="rejectsNonPublicClass() : void" num="33" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
         </file>
      </package>
      <package name="junit.framework">
         <metrics coveredelements="521" complexity="252" loc="1845" methods="183" classes="14" statements="355" coveredconditionals="81" coveredmethods="144" elements="632" ncloc="929" files="14" conditionals="94" coveredstatements="296"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/junit/framework/Assert.java" name="Assert.java">
            <metrics coveredelements="113" coveredconditionals="29" complexity="61" loc="339" coveredmethods="30" methods="39" elements="138" classes="1" ncloc="161" statements="65" conditionals="34" coveredstatements="54"/>
            <class name="Assert">
               <metrics coveredelements="113" coveredconditionals="29" complexity="61" coveredmethods="30" methods="39" elements="138" statements="65" conditionals="34" coveredstatements="54"/>
            </class>
            <line complexity="1" visibility="protected" signature="Assert()" num="13" count="880" type="method"/>
            <line complexity="2" visibility="public" signature="assertTrue(String,boolean) : void" num="20" count="303" type="method"/>
            <line num="21" count="303" type="stmt"/>
            <line falsecount="298" truecount="5" num="21" type="cond"/>
            <line num="22" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertTrue(boolean) : void" num="30" count="83" type="method"/>
            <line num="31" count="83" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertFalse(String,boolean) : void" num="38" count="9" type="method"/>
            <line num="39" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertFalse(boolean) : void" num="46" count="9" type="method"/>
            <line num="47" count="9" type="stmt"/>
            <line complexity="2" visibility="public" signature="fail(String) : void" num="53" count="39" type="method"/>
            <line num="54" count="39" type="stmt"/>
            <line falsecount="24" truecount="15" num="54" type="cond"/>
            <line num="55" count="15" type="stmt"/>
            <line num="57" count="24" type="stmt"/>
            <line complexity="1" visibility="public" signature="fail() : void" num="63" count="12" type="method"/>
            <line num="64" count="12" type="stmt"/>
            <line complexity="5" visibility="public" signature="assertEquals(String,Object,Object) : void" num="71" count="107" type="method"/>
            <line num="72" count="107" type="stmt"/>
            <line falsecount="106" truecount="1" num="72" type="cond"/>
            <line num="73" count="1" type="stmt"/>
            <line num="75" count="106" type="stmt"/>
            <line falsecount="2" truecount="104" num="75" type="cond"/>
            <line num="76" count="104" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(Object,Object) : void" num="85" count="8" type="method"/>
            <line num="86" count="8" type="stmt"/>
            <line complexity="6" visibility="public" signature="assertEquals(String,String,String) : void" num="92" count="56" type="method"/>
            <line num="93" count="56" type="stmt"/>
            <line falsecount="54" truecount="2" num="93" type="cond"/>
            <line num="94" count="2" type="stmt"/>
            <line num="96" count="54" type="stmt"/>
            <line falsecount="5" truecount="49" num="96" type="cond"/>
            <line num="97" count="49" type="stmt"/>
            <line num="99" count="5" type="stmt"/>
            <line falsecount="1" truecount="4" num="99" type="cond"/>
            <line num="100" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(String,String) : void" num="106" count="53" type="method"/>
            <line num="107" count="53" type="stmt"/>
            <line complexity="3" visibility="public" signature="assertEquals(String,double,double,double) : void" num="115" count="14" type="method"/>
            <line num="116" count="14" type="stmt"/>
            <line falsecount="8" truecount="6" num="116" type="cond"/>
            <line num="117" count="6" type="stmt"/>
            <line num="119" count="8" type="stmt"/>
            <line falsecount="0" truecount="8" num="119" type="cond"/>
            <line num="120" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(double,double,double) : void" num="128" count="14" type="method"/>
            <line num="129" count="14" type="stmt"/>
            <line complexity="3" visibility="public" signature="assertEquals(String,float,float,float) : void" num="137" count="1" type="method"/>
            <line num="138" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="138" type="cond"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="141" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(float,float,float) : void" num="150" count="1" type="method"/>
            <line num="151" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(String,long,long) : void" num="158" count="8" type="method"/>
            <line num="159" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(long,long) : void" num="165" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(String,boolean,boolean) : void" num="173" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(boolean,boolean) : void" num="180" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(String,byte,byte) : void" num="188" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(byte,byte) : void" num="195" count="0" type="method"/>
            <line num="196" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(String,char,char) : void" num="203" count="0" type="method"/>
            <line num="204" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(char,char) : void" num="210" count="0" type="method"/>
            <line num="211" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(String,short,short) : void" num="218" count="0" type="method"/>
            <line num="219" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(short,short) : void" num="225" count="0" type="method"/>
            <line num="226" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(String,int,int) : void" num="233" count="87" type="method"/>
            <line num="234" count="87" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(int,int) : void" num="240" count="58" type="method"/>
            <line num="241" count="58" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertNotNull(Object) : void" num="247" count="10" type="method"/>
            <line num="248" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertNotNull(String,Object) : void" num="255" count="210" type="method"/>
            <line num="256" count="210" type="stmt"/>
            <line complexity="2" visibility="public" signature="assertNull(Object) : void" num="266" count="3" type="method"/>
            <line num="267" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="267" type="cond"/>
            <line num="268" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertNull(String,Object) : void" num="276" count="1" type="method"/>
            <line num="277" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="assertSame(String,Object,Object) : void" num="284" count="4" type="method"/>
            <line num="285" count="4" type="stmt"/>
            <line falsecount="1" truecount="3" num="285" type="cond"/>
            <line num="286" count="3" type="stmt"/>
            <line num="288" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertSame(Object,Object) : void" num="295" count="4" type="method"/>
            <line num="296" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="assertNotSame(String,Object,Object) : void" num="304" count="5" type="method"/>
            <line num="305" count="5" type="stmt"/>
            <line falsecount="3" truecount="2" num="305" type="cond"/>
            <line num="306" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertNotSame(Object,Object) : void" num="314" count="5" type="method"/>
            <line num="315" count="5" type="stmt"/>
            <line complexity="2" visibility="public" signature="failSame(String) : void" num="318" count="2" type="method"/>
            <line num="319" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="319" type="cond"/>
            <line num="320" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="failNotSame(String,Object,Object) : void" num="323" count="1" type="method"/>
            <line num="324" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="324" type="cond"/>
            <line num="325" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="failNotEquals(String,Object,Object) : void" num="328" count="10" type="method"/>
            <line num="329" count="10" type="stmt"/>
            <line complexity="3" visibility="public" signature="format(String,Object,Object) : String" num="332" count="33" type="method"/>
            <line num="333" count="33" type="stmt"/>
            <line num="334" count="33" type="stmt"/>
            <line falsecount="30" truecount="3" num="334" type="cond"/>
            <line num="335" count="3" type="stmt"/>
            <line num="337" count="33" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/junit/framework/AssertionFailedError.java" name="AssertionFailedError.java">
            <metrics coveredelements="7" coveredconditionals="2" complexity="4" loc="29" coveredmethods="3" methods="3" elements="7" classes="1" ncloc="11" statements="2" conditionals="2" coveredstatements="2"/>
            <class name="AssertionFailedError">
               <metrics coveredelements="7" coveredconditionals="2" complexity="4" coveredmethods="3" methods="3" elements="7" statements="2" conditionals="2" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="AssertionFailedError()" num="13" count="18" type="method"/>
            <line complexity="1" visibility="public" signature="AssertionFailedError(String)" num="22" count="32" type="method"/>
            <line num="23" count="32" type="stmt"/>
            <line complexity="2" visibility="private" signature="defaultString(String) : String" num="26" count="32" type="method"/>
            <line num="27" count="32" type="stmt"/>
            <line falsecount="31" truecount="1" num="27" type="cond"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/junit/framework/ComparisonCompactor.java" name="ComparisonCompactor.java">
            <metrics coveredelements="56" coveredconditionals="17" complexity="20" loc="78" coveredmethods="8" methods="8" elements="57" classes="1" ncloc="66" statements="31" conditionals="18" coveredstatements="31"/>
            <class name="ComparisonCompactor">
               <metrics coveredelements="56" coveredconditionals="17" complexity="20" coveredmethods="8" methods="8" elements="57" statements="31" conditionals="18" coveredstatements="31"/>
            </class>
            <line complexity="1" visibility="public" signature="ComparisonCompactor(int,String,String)" num="15" count="23" type="method"/>
            <line num="16" count="23" type="stmt"/>
            <line num="17" count="23" type="stmt"/>
            <line num="18" count="23" type="stmt"/>
            <line complexity="4" visibility="public" signature="compact(String) : String" num="21" count="23" type="method"/>
            <line num="23" count="23" type="stmt"/>
            <line falsecount="17" truecount="6" num="23" type="cond"/>
            <line num="24" count="6" type="stmt"/>
            <line num="27" count="17" type="stmt"/>
            <line num="28" count="17" type="stmt"/>
            <line num="29" count="17" type="stmt"/>
            <line num="30" count="17" type="stmt"/>
            <line num="31" count="17" type="stmt"/>
            <line complexity="3" visibility="private" signature="compactString(String) : String" num="34" count="34" type="method"/>
            <line num="35" count="34" type="stmt"/>
            <line num="36" count="34" type="stmt"/>
            <line falsecount="14" truecount="20" num="36" type="cond"/>
            <line num="37" count="20" type="stmt"/>
            <line num="39" count="34" type="stmt"/>
            <line falsecount="0" truecount="34" num="39" type="cond"/>
            <line num="40" count="34" type="stmt"/>
            <line num="42" count="34" type="stmt"/>
            <line complexity="3" visibility="private" signature="findCommonPrefix() : void" num="45" count="17" type="method"/>
            <line num="46" count="17" type="stmt"/>
            <line num="47" count="17" type="stmt"/>
            <line num="48" count="17" type="stmt"/>
            <line falsecount="1" truecount="44" num="48" type="cond"/>
            <line num="49" count="44" type="stmt"/>
            <line falsecount="28" truecount="16" num="49" type="cond"/>
            <line num="50" count="16" type="stmt"/>
            <line complexity="4" visibility="private" signature="findCommonSuffix() : void" num="55" count="17" type="method"/>
            <line num="56" count="17" type="stmt"/>
            <line num="57" count="17" type="stmt"/>
            <line num="58" count="17" type="stmt"/>
            <line falsecount="8" truecount="35" num="58" type="cond"/>
            <line num="59" count="35" type="stmt"/>
            <line falsecount="26" truecount="9" num="59" type="cond"/>
            <line num="60" count="9" type="stmt"/>
            <line num="63" count="17" type="stmt"/>
            <line complexity="2" visibility="private" signature="computeCommonPrefix() : String" num="66" count="20" type="method"/>
            <line num="67" count="20" type="stmt"/>
            <line falsecount="10" truecount="10" num="67" type="cond"/>
            <line complexity="2" visibility="private" signature="computeCommonSuffix() : String" num="70" count="34" type="method"/>
            <line num="71" count="34" type="stmt"/>
            <line num="72" count="34" type="stmt"/>
            <line falsecount="24" truecount="10" num="72" type="cond"/>
            <line complexity="1" visibility="private" signature="areStringsEqual() : boolean" num="75" count="18" type="method"/>
            <line num="76" count="18" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/junit/framework/ComparisonFailure.java" name="ComparisonFailure.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="4" loc="56" coveredmethods="2" methods="4" elements="10" classes="1" ncloc="21" statements="6" conditionals="0" coveredstatements="4"/>
            <class name="ComparisonFailure">
               <metrics coveredelements="6" coveredconditionals="0" complexity="4" coveredmethods="2" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="ComparisonFailure(String,String,String)" num="22" count="6" type="method"/>
            <line num="23" count="6" type="stmt"/>
            <line num="24" count="6" type="stmt"/>
            <line num="25" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMessage() : String" num="34" count="4" type="method"/>
            <line num="36" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getActual() : String" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getExpected() : String" num="53" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/junit/framework/JUnit4TestAdapter.java" name="JUnit4TestAdapter.java">
            <metrics coveredelements="38" coveredconditionals="4" complexity="15" loc="107" coveredmethods="12" methods="13" elements="40" classes="1" ncloc="71" statements="23" conditionals="4" coveredstatements="22"/>
            <class name="JUnit4TestAdapter">
               <metrics coveredelements="38" coveredconditionals="4" complexity="15" coveredmethods="12" methods="13" elements="40" statements="23" conditionals="4" coveredstatements="22"/>
            </class>
            <line complexity="1" visibility="public" signature="JUnit4TestAdapter(Class&lt;?&gt;)" num="35" count="42" type="method"/>
            <line num="36" count="42" type="stmt"/>
            <line complexity="1" visibility="public" signature="JUnit4TestAdapter(Class&lt;?&gt;,JUnit4TestAdapterCache)" num="39" count="42" type="method"/>
            <line num="40" count="42" type="stmt"/>
            <line num="41" count="42" type="stmt"/>
            <line num="42" count="42" type="stmt"/>
            <line complexity="1" visibility="public" signature="countTestCases() : int" num="45" count="2" type="method"/>
            <line num="46" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(TestResult) : void" num="49" count="30" type="method"/>
            <line num="50" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTests() : List&lt;Test&gt;" num="54" count="6" type="method"/>
            <line num="55" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTestClass() : Class&lt;?&gt;" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescription() : Description" num="63" count="84" type="method"/>
            <line num="64" count="84" type="stmt"/>
            <line num="65" count="84" type="stmt"/>
            <line complexity="3" visibility="private" signature="removeIgnored(Description) : Description" num="68" count="753" type="method"/>
            <line num="69" count="753" type="stmt"/>
            <line falsecount="722" truecount="31" num="69" type="cond"/>
            <line num="70" count="31" type="stmt"/>
            <line num="72" count="722" type="stmt"/>
            <line num="73" count="722" type="stmt"/>
            <line num="74" count="669" type="stmt"/>
            <line num="75" count="669" type="stmt"/>
            <line falsecount="31" truecount="638" num="75" type="cond"/>
            <line num="76" count="638" type="stmt"/>
            <line num="79" count="722" type="stmt"/>
            <line complexity="1" visibility="private" signature="isIgnored(Description) : boolean" num="82" count="753" type="method"/>
            <line num="83" count="753" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="86" count="2" type="method"/>
            <line num="88" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="filter(Filter) : void" num="91" count="3" type="method"/>
            <line num="92" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="sort(Sorter) : void" num="95" count="2" type="method"/>
            <line num="96" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="order(Orderer) : void" num="104" count="6" type="method"/>
            <line num="105" count="6" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/junit/framework/JUnit4TestAdapterCache.java" name="JUnit4TestAdapterCache.java">
            <metrics coveredelements="38" coveredconditionals="7" complexity="12" loc="77" coveredmethods="8" methods="8" elements="40" classes="1" ncloc="65" statements="24" conditionals="8" coveredstatements="23"/>
            <class name="JUnit4TestAdapterCache">
               <metrics coveredelements="38" coveredconditionals="7" complexity="12" coveredmethods="8" methods="8" elements="40" statements="24" conditionals="8" coveredstatements="23"/>
            </class>
            <line complexity="1" visibility="public" signature="getDefault() : JUnit4TestAdapterCache" num="17" count="42" type="method"/>
            <line num="18" count="42" type="stmt"/>
            <line complexity="3" visibility="public" signature="asTest(Description) : Test" num="21" count="156" type="method"/>
            <line num="22" count="156" type="stmt"/>
            <line falsecount="154" truecount="2" num="22" type="cond"/>
            <line num="23" count="2" type="stmt"/>
            <line num="25" count="154" type="stmt"/>
            <line falsecount="95" truecount="59" num="25" type="cond"/>
            <line num="26" count="59" type="stmt"/>
            <line num="28" count="154" type="stmt"/>
            <line complexity="2" visibility="package" signature="createTest(Description) : Test" num="32" count="61" type="method"/>
            <line num="33" count="61" type="stmt"/>
            <line falsecount="2" truecount="59" num="33" type="cond"/>
            <line num="34" count="59" type="stmt"/>
            <line num="36" count="2" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getNotifier(TestResult,JUnit4TestAdapter) : RunNotifier" num="44" count="30" type="method"/>
            <line num="45" count="30" type="stmt"/>
            <line num="46" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFailure(Failure) : void" num="47" count="11" type="method"/>
            <line num="49" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFinished(Description) : void" num="52" count="68" type="method"/>
            <line num="54" count="68" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStarted(Description) : void" num="57" count="68" type="method"/>
            <line num="59" count="68" type="stmt"/>
            <line num="62" count="30" type="stmt"/>
            <line complexity="2" visibility="public" signature="asTestList(Description) : List&lt;Test&gt;" num="65" count="6" type="method"/>
            <line num="66" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="6" type="stmt"/>
            <line num="70" count="6" type="stmt"/>
            <line num="71" count="7" type="stmt"/>
            <line num="73" count="6" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/junit/framework/JUnit4TestCaseFacade.java" name="JUnit4TestCaseFacade.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="5" loc="30" coveredmethods="4" methods="5" elements="10" classes="1" ncloc="22" statements="5" conditionals="0" coveredstatements="4"/>
            <class name="JUnit4TestCaseFacade">
               <metrics coveredelements="8" coveredconditionals="0" complexity="5" coveredmethods="4" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="package" signature="JUnit4TestCaseFacade(Description)" num="9" count="59" type="method"/>
            <line num="10" count="59" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="13" count="4" type="method"/>
            <line num="15" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="countTestCases() : int" num="18" count="68" type="method"/>
            <line num="19" count="68" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(TestResult) : void" num="22" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescription() : Description" num="27" count="103" type="method"/>
            <line num="28" count="103" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/junit/framework/Protectable.java" name="Protectable.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="14" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Protectable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/junit/framework/Test.java" name="Test.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="18" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Test">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/junit/framework/TestCase.java" name="TestCase.java">
            <metrics coveredelements="86" coveredconditionals="5" complexity="59" loc="509" coveredmethods="31" methods="51" elements="130" classes="1" ncloc="193" statements="73" conditionals="6" coveredstatements="50"/>
            <class name="TestCase">
               <metrics coveredelements="86" coveredconditionals="5" complexity="59" coveredmethods="31" methods="51" elements="130" statements="73" conditionals="6" coveredstatements="50"/>
            </class>
            <line complexity="1" visibility="public" signature="TestCase()" num="87" count="814" type="method"/>
            <line num="88" count="814" type="stmt"/>
            <line complexity="1" visibility="public" signature="TestCase(String)" num="94" count="54" type="method"/>
            <line num="95" count="54" type="stmt"/>
            <line complexity="1" visibility="public" signature="countTestCases() : int" num="101" count="956" type="method"/>
            <line num="102" count="956" type="stmt"/>
            <line complexity="1" visibility="protected" signature="createResult() : TestResult" num="110" count="10" type="method"/>
            <line num="111" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : TestResult" num="120" count="10" type="method"/>
            <line num="121" count="10" type="stmt"/>
            <line num="122" count="10" type="stmt"/>
            <line num="123" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(TestResult) : void" num="129" count="937" type="method"/>
            <line num="130" count="937" type="stmt"/>
            <line complexity="5" visibility="public" signature="runBare() : void" num="138" count="940" type="method"/>
            <line num="139" count="940" type="stmt"/>
            <line num="140" count="940" type="stmt"/>
            <line num="141" count="937" type="stmt"/>
            <line num="142" count="937" type="stmt"/>
            <line num="144" count="25" type="stmt"/>
            <line num="146" count="936" type="stmt"/>
            <line num="147" count="936" type="stmt"/>
            <line num="149" count="4" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line falsecount="3" truecount="1" num="149" type="cond"/>
            <line num="152" count="935" type="stmt"/>
            <line num="152" count="26" type="stmt"/>
            <line falsecount="911" truecount="26" num="152" type="cond"/>
            <line complexity="5" visibility="protected" signature="runTest() : void" num="160" count="195" type="method"/>
            <line num="161" count="195" type="stmt"/>
            <line num="162" count="194" type="stmt"/>
            <line num="163" count="194" type="stmt"/>
            <line num="168" count="194" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="172" count="193" type="stmt"/>
            <line falsecount="193" truecount="0" num="172" type="cond"/>
            <line num="173" count="0" type="stmt"/>
            <line num="176" count="193" type="stmt"/>
            <line num="177" count="193" type="stmt"/>
            <line num="179" count="2" type="stmt"/>
            <line num="180" count="2" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertTrue(String,boolean) : void" num="191" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertTrue(boolean) : void" num="199" count="83" type="method"/>
            <line num="200" count="83" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertFalse(String,boolean) : void" num="207" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertFalse(boolean) : void" num="215" count="9" type="method"/>
            <line num="216" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="fail(String) : void" num="222" count="9" type="method"/>
            <line num="223" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="fail() : void" num="229" count="8" type="method"/>
            <line num="230" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(String,Object,Object) : void" num="237" count="4" type="method"/>
            <line num="238" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(Object,Object) : void" num="245" count="8" type="method"/>
            <line num="246" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(String,String,String) : void" num="252" count="3" type="method"/>
            <line num="253" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(String,String) : void" num="259" count="53" type="method"/>
            <line num="260" count="53" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(String,double,double,double) : void" num="268" count="0" type="method"/>
            <line num="269" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(double,double,double) : void" num="276" count="14" type="method"/>
            <line num="277" count="14" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(String,float,float,float) : void" num="285" count="0" type="method"/>
            <line num="286" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(float,float,float) : void" num="293" count="1" type="method"/>
            <line num="294" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(String,long,long) : void" num="301" count="8" type="method"/>
            <line num="302" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(long,long) : void" num="308" count="0" type="method"/>
            <line num="309" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(String,boolean,boolean) : void" num="316" count="0" type="method"/>
            <line num="317" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(boolean,boolean) : void" num="323" count="0" type="method"/>
            <line num="324" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(String,byte,byte) : void" num="331" count="0" type="method"/>
            <line num="332" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(byte,byte) : void" num="338" count="0" type="method"/>
            <line num="339" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(String,char,char) : void" num="346" count="0" type="method"/>
            <line num="347" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(char,char) : void" num="353" count="0" type="method"/>
            <line num="354" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(String,short,short) : void" num="361" count="0" type="method"/>
            <line num="362" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(short,short) : void" num="368" count="0" type="method"/>
            <line num="369" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(String,int,int) : void" num="376" count="29" type="method"/>
            <line num="377" count="29" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertEquals(int,int) : void" num="383" count="58" type="method"/>
            <line num="384" count="58" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertNotNull(Object) : void" num="390" count="10" type="method"/>
            <line num="391" count="10" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertNotNull(String,Object) : void" num="398" count="200" type="method"/>
            <line num="399" count="200" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertNull(Object) : void" num="409" count="3" type="method"/>
            <line num="410" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertNull(String,Object) : void" num="417" count="0" type="method"/>
            <line num="418" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertSame(String,Object,Object) : void" num="425" count="0" type="method"/>
            <line num="426" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertSame(Object,Object) : void" num="433" count="4" type="method"/>
            <line num="434" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertNotSame(String,Object,Object) : void" num="442" count="0" type="method"/>
            <line num="443" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertNotSame(Object,Object) : void" num="450" count="5" type="method"/>
            <line num="451" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="failSame(String) : void" num="454" count="0" type="method"/>
            <line num="455" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="failNotSame(String,Object,Object) : void" num="458" count="0" type="method"/>
            <line num="459" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="failNotEquals(String,Object,Object) : void" num="462" count="0" type="method"/>
            <line num="463" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="format(String,Object,Object) : String" num="466" count="0" type="method"/>
            <line num="467" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="474" count="884" type="method"/>
            <line complexity="1" visibility="protected" signature="tearDown() : void" num="481" count="932" type="method"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="487" count="6" type="method"/>
            <line num="489" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="497" count="8197" type="method"/>
            <line num="498" count="8197" type="stmt"/>
            <line complexity="1" visibility="public" signature="setName(String) : void" num="506" count="380" type="method"/>
            <line num="507" count="380" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/junit/framework/TestFailure.java" name="TestFailure.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="7" loc="69" coveredmethods="5" methods="7" elements="15" classes="1" ncloc="28" statements="8" conditionals="0" coveredstatements="6"/>
            <class name="TestFailure">
               <metrics coveredelements="11" coveredconditionals="0" complexity="7" coveredmethods="5" methods="7" elements="15" statements="8" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="TestFailure(Test,Throwable)" num="19" count="41" type="method"/>
            <line num="20" count="41" type="stmt"/>
            <line num="21" count="41" type="stmt"/>
            <line complexity="1" visibility="public" signature="failedTest() : Test" num="27" count="1" type="method"/>
            <line num="28" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="thrownException() : Throwable" num="34" count="5" type="method"/>
            <line num="35" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="trace() : String" num="50" count="1" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="exceptionMessage() : String" num="57" count="2" type="method"/>
            <line num="58" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="isFailure() : boolean" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/junit/framework/TestListener.java" name="TestListener.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="26" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TestListener">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/junit/framework/TestResult.java" name="TestResult.java">
            <metrics coveredelements="55" coveredconditionals="0" complexity="22" loc="185" coveredmethods="17" methods="19" elements="60" classes="1" ncloc="101" statements="41" conditionals="0" coveredstatements="38"/>
            <class name="TestResult">
               <metrics coveredelements="55" coveredconditionals="0" complexity="22" coveredmethods="17" methods="19" elements="60" statements="41" conditionals="0" coveredstatements="38"/>
            </class>
            <line complexity="1" visibility="public" signature="TestResult()" num="24" count="109" type="method"/>
            <line num="25" count="109" type="stmt"/>
            <line num="26" count="109" type="stmt"/>
            <line num="27" count="109" type="stmt"/>
            <line num="28" count="109" type="stmt"/>
            <line num="29" count="109" type="stmt"/>
            <line complexity="1" visibility="public" signature="addError(Test,Throwable) : void" num="36" count="24" type="method"/>
            <line num="37" count="24" type="stmt"/>
            <line num="38" count="24" type="stmt"/>
            <line num="39" count="9" type="stmt"/>
            <line complexity="1" visibility="public" signature="addFailure(Test,AssertionFailedError) : void" num="47" count="17" type="method"/>
            <line num="48" count="17" type="stmt"/>
            <line num="49" count="17" type="stmt"/>
            <line num="50" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="addListener(TestListener) : void" num="57" count="58" type="method"/>
            <line num="58" count="58" type="stmt"/>
            <line complexity="1" visibility="public" signature="removeListener(TestListener) : void" num="64" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="cloneListeners() : List&lt;TestListener&gt;" num="71" count="2053" type="method"/>
            <line num="72" count="2053" type="stmt"/>
            <line num="73" count="2053" type="stmt"/>
            <line num="74" count="2053" type="stmt"/>
            <line complexity="1" visibility="public" signature="endTest(Test) : void" num="80" count="1006" type="method"/>
            <line num="81" count="1005" type="stmt"/>
            <line num="82" count="258" type="stmt"/>
            <line complexity="1" visibility="public" signature="errorCount() : int" num="89" count="49" type="method"/>
            <line num="90" count="49" type="stmt"/>
            <line complexity="1" visibility="public" signature="errors() : Enumeration&lt;TestFailure&gt;" num="96" count="15" type="method"/>
            <line num="97" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="failureCount() : int" num="104" count="59" type="method"/>
            <line num="105" count="59" type="stmt"/>
            <line complexity="1" visibility="public" signature="failures() : Enumeration&lt;TestFailure&gt;" num="111" count="10" type="method"/>
            <line num="112" count="10" type="stmt"/>
            <line complexity="1" visibility="protected" signature="run(TestCase) : void" num="118" count="937" type="method"/>
            <line num="119" count="937" type="stmt"/>
            <line num="120" count="937" type="stmt"/>
            <line complexity="1" visibility="public" signature="protect() : void" num="121" count="937" type="method"/>
            <line num="122" count="937" type="stmt"/>
            <line num="125" count="937" type="stmt"/>
            <line num="127" count="936" type="stmt"/>
            <line complexity="1" visibility="public" signature="runCount() : int" num="133" count="46" type="method"/>
            <line num="134" count="46" type="stmt"/>
            <line complexity="4" visibility="public" signature="runProtected(Test,Protectable) : void" num="140" count="942" type="method"/>
            <line num="141" count="942" type="stmt"/>
            <line num="142" count="942" type="stmt"/>
            <line num="144" count="17" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="148" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldStop() : boolean" num="155" count="955" type="method"/>
            <line num="156" count="955" type="stmt"/>
            <line complexity="1" visibility="public" signature="startTest(Test) : void" num="162" count="1006" type="method"/>
            <line num="163" count="1006" type="stmt"/>
            <line num="164" count="1006" type="stmt"/>
            <line num="165" count="1006" type="stmt"/>
            <line num="167" count="1006" type="stmt"/>
            <line num="168" count="258" type="stmt"/>
            <line complexity="1" visibility="public" signature="stop() : void" num="175" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="wasSuccessful() : boolean" num="182" count="22" type="method"/>
            <line num="183" count="22" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/junit/framework/TestSuite.java" name="TestSuite.java">
            <metrics coveredelements="103" coveredconditionals="17" complexity="43" loc="308" coveredmethods="24" methods="26" elements="125" classes="1" ncloc="176" statements="77" conditionals="22" coveredstatements="62"/>
            <class name="TestSuite">
               <metrics coveredelements="103" complexity="43" methods="26" testruns="274" statements="77" coveredconditionals="17" coveredmethods="24" elements="125" testfailures="0" testduration="0.027000000000000007" conditionals="22" coveredstatements="62" testpasses="274"/>
            </class>
            <line complexity="7" visibility="public" signature="createTest(Class&lt;?&gt;,String) : Test" num="49" count="388" type="method"/>
            <line num="50" count="388" type="stmt"/>
            <line num="51" count="388" type="stmt"/>
            <line num="52" count="388" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="388" type="stmt"/>
            <line num="57" count="388" type="stmt"/>
            <line num="58" count="388" type="stmt"/>
            <line falsecount="8" truecount="380" num="58" type="cond"/>
            <line num="59" count="380" type="stmt"/>
            <line num="60" count="380" type="stmt"/>
            <line falsecount="0" truecount="380" num="60" type="cond"/>
            <line num="61" count="380" type="stmt"/>
            <line num="64" count="8" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="388" type="stmt"/>
            <line complexity="2" visibility="public" signature="getTestConstructor(Class&lt;?&gt;) : Constructor&lt;?&gt;" num="80" count="486" type="method"/>
            <line num="81" count="486" type="stmt"/>
            <line num="82" count="486" type="stmt"/>
            <line num="86" count="476" type="stmt"/>
            <line complexity="1" visibility="public" signature="warning(String) : Test" num="92" count="11" type="method"/>
            <line num="93" count="11" type="stmt"/>
            <line complexity="1" visibility="protected" signature="runTest() : void" num="94" count="7" type="method"/>
            <line num="96" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="TestSuite()" num="108" count="27" type="method"/>
            <line complexity="1" visibility="public" signature="TestSuite(Class&lt;?&gt;)" num="117" count="98" type="method"/>
            <line num="118" count="98" type="stmt"/>
            <line complexity="5" visibility="private" signature="addTestsFromTestCase(Class&lt;?&gt;) : void" num="121" count="98" type="method"/>
            <line num="122" count="98" type="stmt"/>
            <line num="123" count="98" type="stmt"/>
            <line num="124" count="98" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="130" count="98" type="stmt"/>
            <line falsecount="98" truecount="0" num="130" type="cond"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="135" count="98" type="stmt"/>
            <line num="136" count="98" type="stmt"/>
            <line num="137" count="98" type="stmt"/>
            <line falsecount="98" truecount="197" num="137" type="cond"/>
            <line num="138" count="197" type="stmt"/>
            <line num="139" count="5600" type="stmt"/>
            <line num="141" count="197" type="stmt"/>
            <line num="143" count="98" type="stmt"/>
            <line falsecount="95" truecount="3" num="143" type="cond"/>
            <line num="144" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="TestSuite(Class&lt;? extends TestCase&gt;,String)" num="153" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="TestSuite(String)" num="161" count="28" type="method"/>
            <line num="162" count="28" type="stmt"/>
            <line complexity="1" visibility="public" signature="TestSuite(Class&lt;?&gt;)" num="170" count="1" type="method"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="2" type="stmt"/>
            <line complexity="2" visibility="private" signature="testCaseForClass(Class&lt;?&gt;) : Test" num="176" count="2" type="method"/>
            <line num="177" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="177" type="cond"/>
            <line num="178" count="2" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="TestSuite(Class&lt;? extends TestCase&gt;[],String)" num="189" count="0" type="method"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addTest(Test) : void" num="197" count="960" type="method"/>
            <line num="198" count="960" type="stmt"/>
            <line complexity="1" visibility="public" signature="addTestSuite(Class&lt;? extends TestCase&gt;) : void" num="204" count="42" type="method"/>
            <line num="205" count="42" type="stmt"/>
            <line complexity="1" visibility="public" signature="countTestCases() : int" num="211" count="22" type="method"/>
            <line num="212" count="22" type="stmt"/>
            <line num="213" count="22" type="stmt"/>
            <line num="214" count="26" type="stmt"/>
            <line num="216" count="22" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="224" count="1469" type="method"/>
            <line num="225" count="1469" type="stmt"/>
            <line complexity="2" visibility="public" signature="run(TestResult) : void" num="231" count="83" type="method"/>
            <line num="232" count="83" type="stmt"/>
            <line num="233" count="945" type="stmt"/>
            <line falsecount="945" truecount="0" num="233" type="cond"/>
            <line num="234" count="0" type="stmt"/>
            <line num="236" count="945" type="stmt"/>
            <line complexity="1" visibility="public" signature="runTest(Test,TestResult) : void" num="240" count="245" type="method"/>
            <line num="241" count="245" type="stmt"/>
            <line complexity="1" visibility="public" signature="setName(String) : void" num="249" count="28" type="method"/>
            <line num="250" count="28" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAt(int) : Test" num="256" count="4398" type="method"/>
            <line num="257" count="4398" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCount() : int" num="263" testsuccess="true" count="777" testduration="0.0" type="method"/>
            <line num="264" count="777" type="stmt"/>
            <line complexity="1" visibility="public" signature="tests() : Enumeration&lt;Test&gt;" num="270" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="271" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="276" count="6" type="method"/>
            <line num="278" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="278" type="cond"/>
            <line num="279" count="6" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="addTestMethod(Method,List&lt;String&gt;,Class&lt;?&gt;) : void" num="284" count="5600" type="method"/>
            <line num="285" count="5600" type="stmt"/>
            <line num="286" count="5600" type="stmt"/>
            <line falsecount="5594" truecount="6" num="286" type="cond"/>
            <line num="287" count="6" type="stmt"/>
            <line num="289" count="5594" type="stmt"/>
            <line falsecount="387" truecount="5207" num="289" type="cond"/>
            <line num="290" count="5207" type="stmt"/>
            <line falsecount="5199" truecount="8" num="290" type="cond"/>
            <line num="291" count="8" type="stmt"/>
            <line num="293" count="5207" type="stmt"/>
            <line num="295" count="387" type="stmt"/>
            <line num="296" count="387" type="stmt"/>
            <line complexity="1" visibility="private" signature="isPublicTestMethod(Method) : boolean" num="299" count="5594" type="method"/>
            <line num="300" count="5594" type="stmt"/>
            <line complexity="1" visibility="private" signature="isTestMethod(Method) : boolean" num="303" count="10801" type="method"/>
            <line num="304" count="10801" type="stmt"/>
         </file>
      </package>
      <package name="org.junit.internal.runners">
         <metrics coveredelements="443" complexity="189" loc="1135" methods="111" classes="14" statements="356" coveredconditionals="65" coveredmethods="98" elements="571" ncloc="911" files="12" conditionals="104" coveredstatements="280"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/runners/ClassRoadie.java" name="ClassRoadie.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="12" loc="81" coveredmethods="5" methods="6" elements="31" classes="1" ncloc="67" statements="25" conditionals="0" coveredstatements="15"/>
            <class name="ClassRoadie">
               <metrics coveredelements="20" coveredconditionals="0" complexity="12" coveredmethods="5" methods="6" elements="31" statements="25" conditionals="0" coveredstatements="15"/>
            </class>
            <line complexity="1" visibility="public" signature="ClassRoadie(RunNotifier,TestClass,Description,Runnable)" num="25" count="2" type="method"/>
            <line num="27" count="2" type="stmt"/>
            <line num="28" count="2" type="stmt"/>
            <line num="29" count="2" type="stmt"/>
            <line num="30" count="2" type="stmt"/>
            <line complexity="1" visibility="protected" signature="runUnprotected() : void" num="33" count="2" type="method"/>
            <line num="34" count="2" type="stmt"/>
            <line complexity="1" visibility="protected" signature="addFailure(Throwable) : void" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="runProtected() : void" num="41" count="2" type="method"/>
            <line num="42" count="2" type="stmt"/>
            <line num="43" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line complexity="4" visibility="private" signature="runBefores() : void" num="51" count="2" type="method"/>
            <line num="52" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line num="55" count="2" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="runAfters() : void" num="69" count="2" type="method"/>
            <line num="70" count="2" type="stmt"/>
            <line num="71" count="2" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/runners/ErrorReportingRunner.java" name="ErrorReportingRunner.java">
            <metrics coveredelements="56" coveredconditionals="14" complexity="16" loc="92" coveredmethods="8" methods="8" elements="56" classes="1" ncloc="79" statements="34" conditionals="14" coveredstatements="34"/>
            <class name="ErrorReportingRunner">
               <metrics coveredelements="56" coveredconditionals="14" complexity="16" coveredmethods="8" methods="8" elements="56" statements="34" conditionals="14" coveredstatements="34"/>
            </class>
            <line complexity="1" visibility="public" signature="ErrorReportingRunner(Class&lt;?&gt;,Throwable)" num="20" count="72" type="method"/>
            <line num="21" count="72" type="stmt"/>
            <line complexity="4" visibility="public" signature="ErrorReportingRunner(Throwable,Class&lt;?&gt;)" num="24" count="77" type="method"/>
            <line num="25" count="77" type="stmt"/>
            <line falsecount="75" truecount="2" num="25" type="cond"/>
            <line num="26" count="2" type="stmt"/>
            <line num="28" count="75" type="stmt"/>
            <line num="29" count="76" type="stmt"/>
            <line falsecount="74" truecount="2" num="29" type="cond"/>
            <line num="30" count="2" type="stmt"/>
            <line num="33" count="73" type="stmt"/>
            <line num="34" count="73" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescription() : Description" num="37" count="215" type="method"/>
            <line num="39" count="215" type="stmt"/>
            <line num="40" count="215" type="stmt"/>
            <line num="41" count="215" type="stmt"/>
            <line num="43" count="215" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(RunNotifier) : void" num="46" count="64" type="method"/>
            <line num="48" count="64" type="stmt"/>
            <line num="49" count="64" type="stmt"/>
            <line complexity="2" visibility="private" signature="getClassNames(Class&lt;?&gt;) : String" num="53" count="73" type="method"/>
            <line num="54" count="73" type="stmt"/>
            <line num="55" count="73" type="stmt"/>
            <line num="56" count="74" type="stmt"/>
            <line falsecount="73" truecount="1" num="56" type="cond"/>
            <line num="57" count="1" type="stmt"/>
            <line num="59" count="74" type="stmt"/>
            <line num="61" count="73" type="stmt"/>
            <line complexity="5" visibility="private" signature="getCauses(Throwable) : List&lt;Throwable&gt;" num="64" count="110" type="method"/>
            <line num="66" count="110" type="stmt"/>
            <line falsecount="73" truecount="37" num="66" type="cond"/>
            <line num="67" count="37" type="stmt"/>
            <line num="69" count="73" type="stmt"/>
            <line falsecount="31" truecount="42" num="69" type="cond"/>
            <line num="70" count="42" type="stmt"/>
            <line num="72" count="31" type="stmt"/>
            <line falsecount="12" truecount="19" num="72" type="cond"/>
            <line num="73" count="19" type="stmt"/>
            <line num="75" count="12" type="stmt"/>
            <line falsecount="11" truecount="1" num="75" type="cond"/>
            <line num="76" count="1" type="stmt"/>
            <line num="79" count="11" type="stmt"/>
            <line complexity="1" visibility="private" signature="describeCause() : Description" num="82" count="279" type="method"/>
            <line num="83" count="279" type="stmt"/>
            <line complexity="1" visibility="private" signature="runCause(Throwable,RunNotifier) : void" num="86" count="64" type="method"/>
            <line num="87" count="64" type="stmt"/>
            <line num="88" count="64" type="stmt"/>
            <line num="89" count="64" type="stmt"/>
            <line num="90" count="64" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/runners/FailedBefore.java" name="FailedBefore.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="13" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FailedBefore">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/runners/InitializationError.java" name="InitializationError.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="4" loc="37" coveredmethods="2" methods="4" elements="8" classes="1" ncloc="20" statements="4" conditionals="0" coveredstatements="2"/>
            <class name="InitializationError">
               <metrics coveredelements="4" coveredconditionals="0" complexity="4" coveredmethods="2" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="InitializationError(List&lt;Throwable&gt;)" num="22" count="1" type="method"/>
            <line num="23" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="InitializationError(Throwable)" num="26" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="InitializationError(String)" num="30" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCauses() : List&lt;Throwable&gt;" num="34" count="1" type="method"/>
            <line num="35" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java" name="JUnit38ClassRunner.java">
            <metrics coveredelements="115" coveredconditionals="26" complexity="39" loc="196" coveredmethods="21" methods="21" elements="123" classes="2" ncloc="160" statements="70" conditionals="32" coveredstatements="68"/>
            <class name="JUnit38ClassRunner">
               <metrics coveredelements="91" coveredconditionals="23" complexity="29" coveredmethods="13" methods="13" elements="97" statements="56" conditionals="28" coveredstatements="55"/>
            </class>
            <class name="JUnit38ClassRunner.OldTestClassAdaptingListener">
               <metrics coveredelements="24" coveredconditionals="3" complexity="10" coveredmethods="8" methods="8" elements="26" statements="14" conditionals="4" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="private" signature="OldTestClassAdaptingListener(RunNotifier)" num="32" count="43" type="method"/>
            <line num="33" count="43" type="stmt"/>
            <line complexity="1" visibility="public" signature="endTest(Test) : void" num="36" count="243" type="method"/>
            <line num="37" count="243" type="stmt"/>
            <line complexity="1" visibility="public" signature="startTest(Test) : void" num="40" count="243" type="method"/>
            <line num="41" count="243" type="stmt"/>
            <line complexity="1" visibility="public" signature="addError(Test,Throwable) : void" num="45" count="9" type="method"/>
            <line num="46" count="9" type="stmt"/>
            <line num="47" count="9" type="stmt"/>
            <line complexity="2" visibility="private" signature="asDescription(Test) : Description" num="50" count="495" type="method"/>
            <line num="51" count="495" type="stmt"/>
            <line falsecount="396" truecount="99" num="51" type="cond"/>
            <line num="52" count="99" type="stmt"/>
            <line num="53" count="99" type="stmt"/>
            <line num="55" count="396" type="stmt"/>
            <line complexity="1" visibility="private" signature="getEffectiveClass(Test) : Class&lt;? extends Test&gt;" num="58" count="396" type="method"/>
            <line num="59" count="396" type="stmt"/>
            <line complexity="2" visibility="private" signature="getName(Test) : String" num="62" count="396" type="method"/>
            <line num="63" count="396" type="stmt"/>
            <line falsecount="0" truecount="396" num="63" type="cond"/>
            <line num="64" count="396" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addFailure(Test,AssertionFailedError) : void" num="70" count="6" type="method"/>
            <line num="71" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="JUnit38ClassRunner(Class&lt;?&gt;)" num="77" count="37" type="method"/>
            <line num="78" count="37" type="stmt"/>
            <line complexity="1" visibility="public" signature="JUnit38ClassRunner(Test)" num="81" count="67" type="method"/>
            <line num="82" count="67" type="stmt"/>
            <line num="83" count="67" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(RunNotifier) : void" num="86" count="42" type="method"/>
            <line num="88" count="42" type="stmt"/>
            <line num="89" count="42" type="stmt"/>
            <line num="90" count="42" type="stmt"/>
            <line complexity="1" visibility="public" signature="createAdaptingListener(RunNotifier) : TestListener" num="93" count="43" type="method"/>
            <line num="94" count="43" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescription() : Description" num="97" count="313" type="method"/>
            <line num="99" count="313" type="stmt"/>
            <line complexity="7" visibility="private" signature="makeDescription(Test) : Description" num="102" count="4699" type="method"/>
            <line num="103" count="4699" type="stmt"/>
            <line falsecount="804" truecount="3895" num="103" type="cond"/>
            <line num="104" count="3895" type="stmt"/>
            <line num="105" count="3895" type="stmt"/>
            <line num="107" count="804" type="stmt"/>
            <line falsecount="79" truecount="725" num="107" type="cond"/>
            <line num="108" count="725" type="stmt"/>
            <line num="109" count="725" type="stmt"/>
            <line falsecount="714" truecount="11" num="109" type="cond"/>
            <line num="110" count="725" type="stmt"/>
            <line num="111" count="725" type="stmt"/>
            <line num="112" count="725" type="stmt"/>
            <line falsecount="725" truecount="4308" num="112" type="cond"/>
            <line num="113" count="4308" type="stmt"/>
            <line num="114" count="4308" type="stmt"/>
            <line num="116" count="725" type="stmt"/>
            <line num="117" count="79" type="stmt"/>
            <line falsecount="1" truecount="78" num="117" type="cond"/>
            <line num="118" count="78" type="stmt"/>
            <line num="119" count="78" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="120" type="cond"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getAnnotations(TestCase) : Annotation[]" num="133" count="3895" type="method"/>
            <line num="134" count="3895" type="stmt"/>
            <line num="135" count="3895" type="stmt"/>
            <line num="136" count="3874" type="stmt"/>
            <line num="140" count="21" type="stmt"/>
            <line complexity="2" visibility="private" signature="createSuiteDescription(TestSuite) : String" num="143" count="11" type="method"/>
            <line num="144" count="11" type="stmt"/>
            <line num="145" count="11" type="stmt"/>
            <line falsecount="11" truecount="0" num="145" type="cond"/>
            <line num="146" count="11" type="stmt"/>
            <line complexity="6" visibility="public" signature="filter(Filter) : void" num="149" count="19" type="method"/>
            <line num="150" count="19" type="stmt"/>
            <line falsecount="16" truecount="3" num="150" type="cond"/>
            <line num="151" count="3" type="stmt"/>
            <line num="152" count="3" type="stmt"/>
            <line num="153" count="16" type="stmt"/>
            <line falsecount="0" truecount="16" num="153" type="cond"/>
            <line num="154" count="16" type="stmt"/>
            <line num="155" count="16" type="stmt"/>
            <line num="156" count="16" type="stmt"/>
            <line num="157" count="16" type="stmt"/>
            <line falsecount="16" truecount="77" num="157" type="cond"/>
            <line num="158" count="77" type="stmt"/>
            <line num="159" count="77" type="stmt"/>
            <line falsecount="17" truecount="60" num="159" type="cond"/>
            <line num="160" count="60" type="stmt"/>
            <line num="163" count="16" type="stmt"/>
            <line num="164" count="16" type="stmt"/>
            <line falsecount="15" truecount="1" num="164" type="cond"/>
            <line num="165" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="sort(Sorter) : void" num="170" count="2" type="method"/>
            <line num="171" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="171" type="cond"/>
            <line num="172" count="2" type="stmt"/>
            <line num="173" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="order(Orderer) : void" num="182" count="6" type="method"/>
            <line num="183" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="183" type="cond"/>
            <line num="184" count="6" type="stmt"/>
            <line num="185" count="6" type="stmt"/>
            <line complexity="1" visibility="private" signature="setTest(Test) : void" num="189" count="83" type="method"/>
            <line num="190" count="83" type="stmt"/>
            <line complexity="1" visibility="private" signature="getTest() : Test" num="193" count="425" type="method"/>
            <line num="194" count="425" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/runners/JUnit4ClassRunner.java" name="JUnit4ClassRunner.java">
            <metrics coveredelements="52" coveredconditionals="0" complexity="25" loc="147" coveredmethods="17" methods="20" elements="71" classes="1" ncloc="120" statements="45" conditionals="6" coveredstatements="35"/>
            <class name="JUnit4ClassRunner">
               <metrics coveredelements="52" coveredconditionals="0" complexity="25" coveredmethods="17" methods="20" elements="71" statements="45" conditionals="6" coveredstatements="35"/>
            </class>
            <line complexity="1" visibility="public" signature="JUnit4ClassRunner(Class&lt;?&gt;)" num="32" count="3" type="method"/>
            <line num="33" count="3" type="stmt"/>
            <line num="34" count="3" type="stmt"/>
            <line num="35" count="3" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getTestMethods() : List&lt;Method&gt;" num="38" count="3" type="method"/>
            <line num="39" count="3" type="stmt"/>
            <line complexity="1" visibility="protected" signature="validate() : void" num="42" count="3" type="method"/>
            <line num="43" count="3" type="stmt"/>
            <line num="44" count="3" type="stmt"/>
            <line num="45" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(RunNotifier) : void" num="48" count="2" type="method"/>
            <line num="50" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="51" count="2" type="method"/>
            <line num="52" count="2" type="stmt"/>
            <line complexity="1" visibility="protected" signature="runMethods(RunNotifier) : void" num="57" count="2" type="method"/>
            <line num="58" count="2" type="stmt"/>
            <line num="59" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescription() : Description" num="63" count="10" type="method"/>
            <line num="65" count="10" type="stmt"/>
            <line num="66" count="10" type="stmt"/>
            <line num="67" count="10" type="stmt"/>
            <line num="68" count="20" type="stmt"/>
            <line num="70" count="10" type="stmt"/>
            <line complexity="1" visibility="protected" signature="classAnnotations() : Annotation[]" num="73" count="10" type="method"/>
            <line num="74" count="10" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getName() : String" num="77" count="10" type="method"/>
            <line num="78" count="10" type="stmt"/>
            <line complexity="1" visibility="protected" signature="createTest() : Object" num="81" count="4" type="method"/>
            <line num="82" count="4" type="stmt"/>
            <line complexity="3" visibility="protected" signature="invokeTestMethod(Method,RunNotifier) : void" num="85" count="4" type="method"/>
            <line num="86" count="4" type="stmt"/>
            <line num="87" count="4" type="stmt"/>
            <line num="88" count="4" type="stmt"/>
            <line num="89" count="4" type="stmt"/>
            <line num="91" count="2" type="stmt"/>
            <line num="92" count="2" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="98" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="testAborted(RunNotifier,Description,Throwable) : void" num="101" count="2" type="method"/>
            <line num="103" count="2" type="stmt"/>
            <line num="104" count="2" type="stmt"/>
            <line num="105" count="2" type="stmt"/>
            <line complexity="1" visibility="protected" signature="wrapMethod(Method) : TestMethod" num="108" count="2" type="method"/>
            <line num="109" count="2" type="stmt"/>
            <line complexity="1" visibility="protected" signature="testName(Method) : String" num="112" count="24" type="method"/>
            <line num="113" count="24" type="stmt"/>
            <line complexity="1" visibility="protected" signature="methodDescription(Method) : Description" num="116" count="24" type="method"/>
            <line num="117" count="24" type="stmt"/>
            <line complexity="1" visibility="protected" signature="testAnnotations(Method) : Annotation[]" num="120" count="24" type="method"/>
            <line num="121" count="24" type="stmt"/>
            <line complexity="4" visibility="public" signature="filter(Filter) : void" num="124" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="127" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="131" type="cond"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sort(Sorter) : void" num="136" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compare(Method,Method) : int" num="138" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getTestClass() : TestClass" num="144" count="38" type="method"/>
            <line num="145" count="38" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/runners/MethodRoadie.java" name="MethodRoadie.java">
            <metrics coveredelements="45" coveredconditionals="5" complexity="30" loc="163" coveredmethods="9" methods="12" elements="90" classes="1" ncloc="144" statements="64" conditionals="14" coveredstatements="31"/>
            <class name="MethodRoadie">
               <metrics coveredelements="45" coveredconditionals="5" complexity="30" coveredmethods="9" methods="12" elements="90" statements="64" conditionals="14" coveredstatements="31"/>
            </class>
            <line complexity="1" visibility="public" signature="MethodRoadie(Object,TestMethod,RunNotifier,Description)" num="32" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
            <line num="34" count="2" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line num="36" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="run() : void" num="39" count="2" type="method"/>
            <line num="40" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="40" type="cond"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line num="45" count="2" type="stmt"/>
            <line num="46" count="2" type="stmt"/>
            <line num="47" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="47" type="cond"/>
            <line num="48" count="0" type="stmt"/>
            <line num="50" count="2" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line complexity="1" visibility="private" signature="runWithTimeout(long) : void" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="run() : void" num="60" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="call() : Object" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="runTest() : void" num="86" count="2" type="method"/>
            <line num="87" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="88" count="2" type="method"/>
            <line num="89" count="2" type="stmt"/>
            <line complexity="3" visibility="public" signature="runBeforesThenTestThenAfters(Runnable) : void" num="94" count="2" type="method"/>
            <line num="95" count="2" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line num="97" count="2" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line complexity="7" visibility="protected" signature="runTestMethod() : void" num="106" count="2" type="method"/>
            <line num="107" count="2" type="stmt"/>
            <line num="108" count="2" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="109" type="cond"/>
            <line num="110" count="0" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="114" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="116" type="cond"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="runBefores() : void" num="128" count="2" type="method"/>
            <line num="129" count="2" type="stmt"/>
            <line num="130" count="2" type="stmt"/>
            <line num="131" count="2" type="stmt"/>
            <line num="132" count="2" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="runAfters() : void" num="146" count="2" type="method"/>
            <line num="147" count="2" type="stmt"/>
            <line num="148" count="2" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="addFailure(Throwable) : void" num="159" count="1" type="method"/>
            <line num="160" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/runners/MethodValidator.java" name="MethodValidator.java">
            <metrics coveredelements="40" coveredconditionals="9" complexity="16" loc="97" coveredmethods="7" methods="7" elements="54" classes="1" ncloc="78" statements="31" conditionals="16" coveredstatements="24"/>
            <class name="MethodValidator">
               <metrics coveredelements="40" coveredconditionals="9" complexity="16" coveredmethods="7" methods="7" elements="54" statements="31" conditionals="16" coveredstatements="24"/>
            </class>
            <line complexity="1" visibility="public" signature="MethodValidator(TestClass)" num="28" count="3" type="method"/>
            <line num="29" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="validateInstanceMethods() : void" num="32" count="3" type="method"/>
            <line num="33" count="3" type="stmt"/>
            <line num="34" count="3" type="stmt"/>
            <line num="35" count="3" type="stmt"/>
            <line num="37" count="3" type="stmt"/>
            <line num="38" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="38" type="cond"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="validateStaticMethods() : void" num="43" count="3" type="method"/>
            <line num="44" count="3" type="stmt"/>
            <line num="45" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="validateMethodsForDefaultRunner() : List&lt;Throwable&gt;" num="48" count="3" type="method"/>
            <line num="49" count="3" type="stmt"/>
            <line num="50" count="3" type="stmt"/>
            <line num="51" count="3" type="stmt"/>
            <line num="52" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="assertValid() : void" num="55" count="3" type="method"/>
            <line num="56" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="56" type="cond"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="validateNoArgConstructor() : void" num="61" count="3" type="method"/>
            <line num="62" count="3" type="stmt"/>
            <line num="63" count="3" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="7" visibility="private" signature="validateTestMethods(Class&lt;? extends Annotation&gt;,boolean) : void" num="69" count="15" type="method"/>
            <line num="71" count="15" type="stmt"/>
            <line num="73" count="15" type="stmt"/>
            <line num="74" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="74" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="79" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line num="83" count="6" type="stmt"/>
            <line falsecount="5" truecount="1" num="83" type="cond"/>
            <line num="84" count="1" type="stmt"/>
            <line num="87" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="91" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/runners/SuiteMethod.java" name="SuiteMethod.java">
            <metrics coveredelements="12" coveredconditionals="1" complexity="4" loc="41" coveredmethods="2" methods="2" elements="14" classes="1" ncloc="24" statements="10" conditionals="2" coveredstatements="9"/>
            <class name="SuiteMethod">
               <metrics coveredelements="12" coveredconditionals="1" complexity="4" coveredmethods="2" methods="2" elements="14" statements="10" conditionals="2" coveredstatements="9"/>
            </class>
            <line complexity="1" visibility="public" signature="SuiteMethod(Class&lt;?&gt;)" num="23" count="24" type="method"/>
            <line num="24" count="24" type="stmt"/>
            <line complexity="3" visibility="public" signature="testFromSuiteMethod(Class&lt;?&gt;) : Test" num="27" count="26" type="method"/>
            <line num="28" count="26" type="stmt"/>
            <line num="29" count="26" type="stmt"/>
            <line num="30" count="26" type="stmt"/>
            <line num="31" count="26" type="stmt"/>
            <line num="32" count="26" type="stmt"/>
            <line falsecount="26" truecount="0" num="32" type="cond"/>
            <line num="33" count="0" type="stmt"/>
            <line num="35" count="26" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line num="39" count="24" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/runners/TestClass.java" name="TestClass.java">
            <metrics coveredelements="49" coveredconditionals="8" complexity="21" loc="109" coveredmethods="12" methods="12" elements="64" classes="1" ncloc="88" statements="36" conditionals="16" coveredstatements="29"/>
            <class name="TestClass">
               <metrics coveredelements="49" coveredconditionals="8" complexity="21" coveredmethods="12" methods="12" elements="64" statements="36" conditionals="16" coveredstatements="29"/>
            </class>
            <line complexity="1" visibility="public" signature="TestClass(Class&lt;?&gt;)" num="26" count="3" type="method"/>
            <line num="27" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTestMethods() : List&lt;Method&gt;" num="30" count="3" type="method"/>
            <line num="31" count="3" type="stmt"/>
            <line complexity="1" visibility="package" signature="getBefores() : List&lt;Method&gt;" num="34" count="2" type="method"/>
            <line num="35" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="getAfters() : List&lt;Method&gt;" num="38" count="2" type="method"/>
            <line num="39" count="2" type="stmt"/>
            <line complexity="4" visibility="public" signature="getAnnotatedMethods(Class&lt;? extends Annotation&gt;) : List&lt;Method&gt;" num="42" count="29" type="method"/>
            <line num="43" count="29" type="stmt"/>
            <line num="44" count="29" type="stmt"/>
            <line num="45" count="58" type="stmt"/>
            <line num="46" count="58" type="stmt"/>
            <line num="47" count="457" type="stmt"/>
            <line num="48" count="457" type="stmt"/>
            <line falsecount="441" truecount="16" num="48" type="cond"/>
            <line num="49" count="16" type="stmt"/>
            <line num="53" count="29" type="stmt"/>
            <line falsecount="19" truecount="10" num="53" type="cond"/>
            <line num="54" count="10" type="stmt"/>
            <line num="56" count="29" type="stmt"/>
            <line complexity="1" visibility="private" signature="runsTopToBottom(Class&lt;? extends Annotation&gt;) : boolean" num="59" count="29" type="method"/>
            <line num="60" count="29" type="stmt"/>
            <line complexity="2" visibility="private" signature="isShadowed(Method,List&lt;Method&gt;) : boolean" num="63" count="16" type="method"/>
            <line num="64" count="16" type="stmt"/>
            <line num="65" count="6" type="stmt"/>
            <line falsecount="6" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="69" count="16" type="stmt"/>
            <line complexity="5" visibility="private" signature="isShadowed(Method,Method) : boolean" num="72" count="6" type="method"/>
            <line num="73" count="6" type="stmt"/>
            <line falsecount="0" truecount="6" num="73" type="cond"/>
            <line num="74" count="6" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="79" type="cond"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getSuperClasses(Class&lt;?&gt;) : List&lt;Class&lt;?&gt;&gt;" num="87" count="29" type="method"/>
            <line num="88" count="29" type="stmt"/>
            <line num="89" count="29" type="stmt"/>
            <line num="90" count="29" type="stmt"/>
            <line falsecount="29" truecount="58" num="90" type="cond"/>
            <line num="91" count="58" type="stmt"/>
            <line num="92" count="58" type="stmt"/>
            <line num="94" count="29" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConstructor() : Constructor&lt;?&gt;" num="97" count="7" type="method"/>
            <line num="98" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="getJavaClass() : Class&lt;?&gt;" num="101" count="34" type="method"/>
            <line num="102" count="34" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="105" count="10" type="method"/>
            <line num="106" count="10" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/org/junit/internal/runners/TestMethod.java" name="TestMethod.java">
            <metrics coveredelements="24" coveredconditionals="2" complexity="12" loc="71" coveredmethods="8" methods="9" elements="30" classes="1" ncloc="53" statements="17" conditionals="4" coveredstatements="14"/>
            <class name="TestMethod">
               <metrics coveredelements="24" coveredconditionals="2" complexity="12" coveredmethods="8" methods="9" elements="30" statements="17" conditionals="4" coveredstatements="14"/>
            </class>
            <line complexity="1" visibility="public" signature="TestMethod(Method,TestClass)" num="24" count="2" type="method"/>
            <line num="25" count="2" type="stmt"/>
            <line num="26" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="isIgnored() : boolean" num="29" count="2" type="method"/>
            <line num="30" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="getTimeout() : long" num="33" count="2" type="method"/>
            <line num="34" count="2" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line falsecount="2" truecount="0" num="35" type="cond"/>
            <line num="36" count="0" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line complexity="3" visibility="protected" signature="getExpectedException() : Class&lt;? extends Throwable&gt;" num="42" count="2" type="method"/>
            <line num="43" count="2" type="stmt"/>
            <line num="44" count="2" type="stmt"/>
            <line falsecount="0" truecount="2" num="44" type="cond"/>
            <line num="45" count="2" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="isUnexpected(Throwable) : boolean" num="51" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="expectsException() : boolean" num="55" count="2" type="method"/>
            <line num="56" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="getBefores() : List&lt;Method&gt;" num="59" count="2" type="method"/>
            <line num="60" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="getAfters() : List&lt;Method&gt;" num="63" count="2" type="method"/>
            <line num="64" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="invoke(Object) : void" num="67" count="2" type="method"/>
            <line num="68" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/internal/runners/ErrorReportingRunnerTest.java" name="ErrorReportingRunnerTest.java">
            <metrics coveredelements="26" coveredconditionals="0" complexity="10" loc="88" coveredmethods="7" methods="10" elements="30" classes="2" ncloc="73" statements="20" conditionals="0" coveredstatements="19"/>
            <class name="ErrorReportingRunnerTest">
               <metrics coveredelements="26" complexity="7" methods="7" testruns="6" statements="19" coveredconditionals="0" coveredmethods="7" elements="26" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="19" testpasses="6"/>
            </class>
            <class name="ErrorReportingRunnerTest.TestClassWithErrors">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="4" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="cannotCreateWithNullClass() : void" num="25" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="27" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="cannotCreateWithNullClass2() : void" num="30" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="cannotCreateWithNullClasses() : void" num="35" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="cannotCreateWithoutClass() : void" num="40" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenInvalidTestClassErrorAsCause() : void" num="45" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="fireTestFailure(Failure) : void" num="53" count="1" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenInvalidTestClass_integrationTest() : void" num="66" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="staticBeforeMethod() : void" num="81" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="staticAfterMethod() : void" num="82" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="testMethodReturningString() : String" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.junit.tests.running.classes.parent">
         <metrics coveredelements="41" complexity="13" loc="138" methods="11" classes="4" statements="31" coveredconditionals="1" coveredmethods="10" elements="46" ncloc="107" files="2" conditionals="4" coveredstatements="30"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/running/classes/parent/ParentRunnerClassLoaderTest.java" name="ParentRunnerClassLoaderTest.java">
            <metrics coveredelements="32" coveredconditionals="0" complexity="9" loc="96" coveredmethods="8" methods="8" elements="34" classes="2" ncloc="75" statements="24" conditionals="2" coveredstatements="24"/>
            <class name="ParentRunnerClassLoaderTest">
               <metrics coveredelements="28" complexity="7" methods="6" testruns="3" statements="22" coveredconditionals="0" coveredmethods="6" elements="30" testfailures="0" testduration="0.017" conditionals="2" coveredstatements="22" testpasses="3"/>
            </class>
            <class name="ParentRunnerClassLoaderTest.VisibleClassLoader">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="testClassRuleAccessToClassInAnotherClassLoader() : void" num="20" testsuccess="true" count="1" testduration="0.009" type="method"/>
            <line num="22" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDescriptionContainCorrectTestClass() : void" num="36" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBackwardCompatibilityWithOverrideGetName() : void" num="49" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getName() : String" num="55" count="2" type="method"/>
            <line num="57" count="2" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="runTestWithParentRunner(Class&lt;?&gt;) : void" num="70" count="1" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="wrapToClassLoader(Class&lt;?&gt;) : Class&lt;?&gt;" num="75" count="2" type="method"/>
            <line num="76" count="2" type="stmt"/>
            <line num="77" count="2" type="stmt"/>
            <line num="78" count="2" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="82" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="VisibleClassLoader(URL[],ClassLoader)" num="87" count="2" type="method"/>
            <line num="88" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="findClass(String) : Class&lt;?&gt;" num="91" count="2" type="method"/>
            <line num="93" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/running/classes/parent/TestWithClassRule.java" name="TestWithClassRule.java">
            <metrics coveredelements="9" coveredconditionals="1" complexity="4" loc="42" coveredmethods="2" methods="3" elements="12" classes="2" ncloc="32" statements="7" conditionals="2" coveredstatements="6"/>
            <class name="TestWithClassRule">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestWithClassRule.CustomRule">
               <metrics coveredelements="9" coveredconditionals="1" complexity="3" coveredmethods="2" methods="2" elements="10" statements="6" conditionals="2" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="testClassRuleExecuted() : void" num="21" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Statement,Description) : Statement" num="28" count="1" type="method"/>
            <line num="29" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="evaluate() : void" num="30" count="1" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="33" type="cond"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.junit.tests.description">
         <metrics coveredelements="47" complexity="21" loc="223" methods="21" classes="10" statements="31" coveredconditionals="0" coveredmethods="17" elements="52" ncloc="178" files="5" conditionals="0" coveredstatements="30"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/description/AllDescriptionTests.java" name="AllDescriptionTests.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="15" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="13" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AllDescriptionTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/description/AnnotatedDescriptionTest.java" name="AnnotatedDescriptionTest.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="12" loc="96" coveredmethods="8" methods="12" elements="24" classes="6" ncloc="78" statements="12" conditionals="0" coveredstatements="11"/>
            <class name="AnnotatedDescriptionTest">
               <metrics coveredelements="19" complexity="9" methods="9" testruns="6" statements="12" coveredconditionals="0" coveredmethods="8" elements="21" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="11" testpasses="6"/>
            </class>
            <class name="AnnotatedDescriptionTest.MyOwnAnnotation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="AnnotatedDescriptionTest.AnnotatedClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="AnnotatedDescriptionTest.IgnoredClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="AnnotatedDescriptionTest.ValuedAnnotation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="AnnotatedDescriptionTest.ValueAnnotatedClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="a() : void" num="23" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="annotationsExistOnDescriptionsOfClasses() : void" num="28" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAnnotationsReturnsAllAnnotations() : void" num="34" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="a() : void" num="42" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="annotationsExistOnDescriptionsOfIgnoredClass() : void" num="47" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="a() : void" num="59" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="descriptionOfTestClassHasValuedAnnotation() : void" num="64" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="childlessCopyOfDescriptionStillHasAnnotations() : void" num="71" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="characterizeCreatingMyOwnAnnotation() : void" num="78" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="value() : String" num="81" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="annotationType() : Class&lt;? extends Annotation&gt;" num="85" count="1" type="method"/>
            <line num="86" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="describe(Class&lt;?&gt;) : Description" num="93" count="5" type="method"/>
            <line num="94" count="5" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/description/SuiteDescriptionTest.java" name="SuiteDescriptionTest.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="3" loc="38" coveredmethods="3" methods="3" elements="14" classes="1" ncloc="31" statements="11" conditionals="0" coveredstatements="11"/>
            <class name="SuiteDescriptionTest">
               <metrics coveredelements="14" complexity="3" methods="3" testruns="2" statements="11" coveredconditionals="0" coveredmethods="3" elements="14" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="11" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="equalsIsCorrect() : void" num="17" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="19" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCodeIsReasonable() : void" num="26" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="descriptionWithTwoKids(String,String) : Description" num="32" count="4" type="method"/>
            <line num="33" count="4" type="stmt"/>
            <line num="34" count="4" type="stmt"/>
            <line num="35" count="4" type="stmt"/>
            <line num="36" count="4" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/description/TestDescriptionMethodNameTest.java" name="TestDescriptionMethodNameTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="3" loc="50" coveredmethods="3" methods="3" elements="8" classes="1" ncloc="38" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="TestDescriptionMethodNameTest">
               <metrics coveredelements="8" complexity="3" methods="3" testruns="9" statements="5" coveredconditionals="0" coveredmethods="3" elements="8" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="5" testpasses="9"/>
            </class>
            <line complexity="1" visibility="public" signature="TestDescriptionMethodNameTest(String)" num="23" count="11" type="method"/>
            <line num="24" count="11" type="stmt"/>
            <line complexity="1" visibility="public" signature="getMethodNames() : Collection&lt;Object[]&gt;" num="27" count="2" type="method"/>
            <line num="29" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="methodNameTest() : void" num="44" testsuccess="true" count="11" testduration="0.0" type="method"/>
            <line num="46" count="11" type="stmt"/>
            <line num="47" count="11" type="stmt"/>
            <line num="48" count="11" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/description/TestDescriptionTest.java" name="TestDescriptionTest.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="3" loc="24" coveredmethods="3" methods="3" elements="6" classes="1" ncloc="18" statements="3" conditionals="0" coveredstatements="3"/>
            <class name="TestDescriptionTest">
               <metrics coveredelements="6" complexity="3" methods="3" testruns="3" statements="3" coveredconditionals="0" coveredmethods="3" elements="6" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="3" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="equalsIsFalseForNonTestDescription() : void" num="10" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="12" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="equalsIsTrueForSameNameAndNoExplicitUniqueId() : void" num="15" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="17" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="equalsIsFalseForSameNameAndDifferentUniqueId() : void" num="20" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="22" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.junit.tests.validation.anotherpackage">
         <metrics coveredelements="0" complexity="1" loc="14" methods="1" classes="2" statements="0" coveredconditionals="0" coveredmethods="0" elements="1" ncloc="10" files="2" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/validation/anotherpackage/Sub.java" name="Sub.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="5" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Sub">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/validation/anotherpackage/Super.java" name="Super.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="9" coveredmethods="0" methods="1" elements="1" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Super">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="a() : void" num="6" count="0" type="method"/>
         </file>
      </package>
      <package name="junit.tests">
         <metrics coveredelements="8" complexity="3" loc="38" methods="3" classes="2" statements="7" coveredconditionals="0" coveredmethods="2" elements="10" ncloc="22" files="2" conditionals="0" coveredstatements="6"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/junit/tests/AllTests.java" name="AllTests.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="2" loc="22" coveredmethods="1" methods="2" elements="8" classes="1" ncloc="14" statements="6" conditionals="0" coveredstatements="5"/>
            <class name="AllTests">
               <metrics coveredelements="6" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="8" statements="6" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="11" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="suite() : Test" num="15" count="2" type="method"/>
            <line num="16" count="2" type="stmt"/>
            <line num="17" count="2" type="stmt"/>
            <line num="18" count="2" type="stmt"/>
            <line num="19" count="2" type="stmt"/>
            <line num="20" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/junit/tests/WasRun.java" name="WasRun.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="16" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="8" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="WasRun">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="protected" signature="runTest() : void" num="12" count="1" type="method"/>
            <line num="14" count="1" type="stmt"/>
         </file>
      </package>
      <package name="junit.tests.extensions">
         <metrics coveredelements="113" complexity="27" loc="252" methods="25" classes="7" statements="91" coveredconditionals="2" coveredmethods="23" elements="118" ncloc="193" files="4" conditionals="2" coveredstatements="88"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/junit/tests/extensions/ActiveTestTest.java" name="ActiveTestTest.java">
            <metrics coveredelements="36" coveredconditionals="2" complexity="7" loc="64" coveredmethods="6" methods="6" elements="36" classes="2" ncloc="51" statements="28" conditionals="2" coveredstatements="28"/>
            <class name="ActiveTestTest">
               <metrics coveredelements="35" complexity="6" methods="5" testruns="1" statements="28" coveredconditionals="2" coveredmethods="5" elements="35" testfailures="0" testduration="0.002" conditionals="2" coveredstatements="28" testpasses="1"/>
            </class>
            <class name="ActiveTestTest.SuccessTest">
               <metrics coveredelements="1" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="runTest() : void" num="15" count="699" type="method"/>
            <line complexity="1" visibility="public" signature="testActiveTest() : void" num="20" count="1" type="method"/>
            <line num="21" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testActiveRepeatedTest() : void" num="29" count="1" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testActiveRepeatedTest0() : void" num="38" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testActiveRepeatedTest1() : void" num="47" count="1" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="2" visibility="package" signature="createActiveTestSuite() : ActiveTestSuite" num="56" count="4" type="method"/>
            <line num="57" count="4" type="stmt"/>
            <line num="58" count="4" type="stmt"/>
            <line falsecount="4" truecount="400" num="58" type="cond"/>
            <line num="59" count="400" type="stmt"/>
            <line num="61" count="4" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/junit/tests/extensions/AllTests.java" name="AllTests.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="2" loc="22" coveredmethods="1" methods="2" elements="8" classes="1" ncloc="14" statements="6" conditionals="0" coveredstatements="5"/>
            <class name="AllTests">
               <metrics coveredelements="6" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="8" statements="6" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="11" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="suite() : Test" num="15" count="2" type="method"/>
            <line num="16" count="2" type="stmt"/>
            <line num="17" count="2" type="stmt"/>
            <line num="18" count="2" type="stmt"/>
            <line num="19" count="2" type="stmt"/>
            <line num="20" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/junit/tests/extensions/ExtensionTest.java" name="ExtensionTest.java">
            <metrics coveredelements="42" coveredconditionals="0" complexity="11" loc="104" coveredmethods="10" methods="11" elements="44" classes="2" ncloc="79" statements="33" conditionals="0" coveredstatements="32"/>
            <class name="ExtensionTest">
               <metrics coveredelements="40" complexity="9" methods="9" testruns="4" statements="31" coveredconditionals="0" coveredmethods="9" elements="40" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="31" testpasses="4"/>
            </class>
            <class name="ExtensionTest.TornDown">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="package" signature="TornDown(Test)" num="17" count="1" type="method"/>
            <line num="18" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="tearDown() : void" num="21" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunningErrorInTestSetup() : void" num="27" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="28" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="runTest() : void" num="29" count="1" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunningErrorsInTestSetup() : void" num="42" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="runTest() : void" num="44" count="1" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="runTest() : void" num="51" count="1" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetupErrorDontTearDown() : void" num="70" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="setUp() : void" num="74" count="1" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetupErrorInTestSetup() : void" num="87" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="setUp() : void" num="91" count="1" type="method"/>
            <line num="94" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/junit/tests/extensions/RepeatedTestTest.java" name="RepeatedTestTest.java">
            <metrics coveredelements="29" coveredconditionals="0" complexity="7" loc="62" coveredmethods="6" methods="6" elements="30" classes="2" ncloc="49" statements="24" conditionals="0" coveredstatements="23"/>
            <class name="RepeatedTestTest">
               <metrics coveredelements="28" complexity="6" methods="5" testruns="4" statements="24" coveredconditionals="0" coveredmethods="5" elements="29" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="23" testpasses="4"/>
            </class>
            <class name="RepeatedTestTest.SuccessTest">
               <metrics coveredelements="1" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="runTest() : void" num="17" count="8" type="method"/>
            <line complexity="1" visibility="public" signature="RepeatedTestTest(String)" num="22" count="8" type="method"/>
            <line num="23" count="8" type="stmt"/>
            <line num="24" count="8" type="stmt"/>
            <line num="25" count="8" type="stmt"/>
            <line num="26" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRepeatedOnce() : void" num="29" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRepeatedMoreThanOnce() : void" num="37" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRepeatedZero() : void" num="45" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testRepeatedNegative() : void" num="53" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
         </file>
      </package>
      <package name="junit.samples.money">
         <metrics coveredelements="140" complexity="72" loc="464" methods="55" classes="4" statements="154" coveredconditionals="29" coveredmethods="30" elements="243" ncloc="321" files="4" conditionals="34" coveredstatements="81"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/junit/samples/money/IMoney.java" name="IMoney.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="51" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="IMoney">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/junit/samples/money/Money.java" name="Money.java">
            <metrics coveredelements="48" coveredconditionals="9" complexity="19" loc="92" coveredmethods="14" methods="14" elements="49" classes="1" ncloc="66" statements="25" conditionals="10" coveredstatements="25"/>
            <class name="Money">
               <metrics coveredelements="48" coveredconditionals="9" complexity="19" coveredmethods="14" methods="14" elements="49" statements="25" conditionals="10" coveredstatements="25"/>
            </class>
            <line complexity="1" visibility="public" signature="Money(int,String)" num="14" count="162" type="method"/>
            <line num="15" count="162" type="stmt"/>
            <line num="16" count="162" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(IMoney) : IMoney" num="22" count="19" type="method"/>
            <line num="23" count="19" type="stmt"/>
            <line complexity="2" visibility="public" signature="addMoney(Money) : IMoney" num="26" count="17" type="method"/>
            <line num="27" count="17" type="stmt"/>
            <line falsecount="2" truecount="15" num="27" type="cond"/>
            <line num="28" count="15" type="stmt"/>
            <line num="30" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="addMoneyBag(MoneyBag) : IMoney" num="33" count="2" type="method"/>
            <line num="34" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="amount() : int" num="37" count="347" type="method"/>
            <line num="38" count="347" type="stmt"/>
            <line complexity="1" visibility="public" signature="currency() : String" num="41" count="421" type="method"/>
            <line num="42" count="421" type="stmt"/>
            <line complexity="4" visibility="public" signature="equals(Object) : boolean" num="45" count="28" type="method"/>
            <line num="47" count="28" type="stmt"/>
            <line falsecount="27" truecount="1" num="47" type="cond"/>
            <line num="48" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="48" type="cond"/>
            <line num="49" count="1" type="stmt"/>
            <line num="52" count="27" type="stmt"/>
            <line falsecount="3" truecount="24" num="52" type="cond"/>
            <line num="53" count="24" type="stmt"/>
            <line num="54" count="24" type="stmt"/>
            <line num="57" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="hashCode() : int" num="60" count="10" type="method"/>
            <line num="62" count="10" type="stmt"/>
            <line falsecount="8" truecount="2" num="62" type="cond"/>
            <line num="63" count="2" type="stmt"/>
            <line num="65" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="isZero() : boolean" num="68" count="208" type="method"/>
            <line num="69" count="208" type="stmt"/>
            <line complexity="1" visibility="public" signature="multiply(int) : IMoney" num="72" count="5" type="method"/>
            <line num="73" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="negate() : IMoney" num="76" count="13" type="method"/>
            <line num="77" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="subtract(IMoney) : IMoney" num="80" count="2" type="method"/>
            <line num="81" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="84" count="1" type="method"/>
            <line num="86" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="appendTo(MoneyBag) : void" num="89" count="128" type="method"/>
            <line num="90" count="128" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/junit/samples/money/MoneyBag.java" name="MoneyBag.java">
            <metrics coveredelements="92" coveredconditionals="20" complexity="29" loc="155" coveredmethods="16" methods="17" elements="106" classes="1" ncloc="122" statements="65" conditionals="24" coveredstatements="56"/>
            <class name="MoneyBag">
               <metrics coveredelements="92" coveredconditionals="20" complexity="29" coveredmethods="16" methods="17" elements="106" statements="65" conditionals="24" coveredstatements="56"/>
            </class>
            <line complexity="1" visibility="public" signature="create(IMoney,IMoney) : IMoney" num="20" count="70" type="method"/>
            <line num="21" count="70" type="stmt"/>
            <line num="22" count="70" type="stmt"/>
            <line num="23" count="70" type="stmt"/>
            <line num="24" count="70" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(IMoney) : IMoney" num="27" count="6" type="method"/>
            <line num="28" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="addMoney(Money) : IMoney" num="31" count="4" type="method"/>
            <line num="32" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="addMoneyBag(MoneyBag) : IMoney" num="35" count="4" type="method"/>
            <line num="36" count="4" type="stmt"/>
            <line complexity="1" visibility="package" signature="appendBag(MoneyBag) : void" num="39" count="12" type="method"/>
            <line num="40" count="12" type="stmt"/>
            <line num="41" count="24" type="stmt"/>
            <line complexity="4" visibility="package" signature="appendMoney(Money) : void" num="45" count="166" type="method"/>
            <line num="46" count="166" type="stmt"/>
            <line num="46" count="2" type="stmt"/>
            <line falsecount="164" truecount="2" num="46" type="cond"/>
            <line num="47" count="164" type="stmt"/>
            <line num="48" count="164" type="stmt"/>
            <line falsecount="13" truecount="151" num="48" type="cond"/>
            <line num="49" count="151" type="stmt"/>
            <line num="50" count="151" type="stmt"/>
            <line num="52" count="13" type="stmt"/>
            <line num="53" count="13" type="stmt"/>
            <line num="54" count="13" type="stmt"/>
            <line falsecount="8" truecount="5" num="54" type="cond"/>
            <line num="55" count="5" type="stmt"/>
            <line num="57" count="8" type="stmt"/>
            <line complexity="6" visibility="public" signature="equals(Object) : boolean" num="60" count="14" type="method"/>
            <line num="62" count="14" type="stmt"/>
            <line falsecount="14" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="68" count="14" type="stmt"/>
            <line falsecount="2" truecount="12" num="68" type="cond"/>
            <line num="69" count="12" type="stmt"/>
            <line num="70" count="12" type="stmt"/>
            <line falsecount="12" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line num="74" count="12" type="stmt"/>
            <line num="75" count="22" type="stmt"/>
            <line falsecount="20" truecount="2" num="75" type="cond"/>
            <line num="76" count="2" type="stmt"/>
            <line num="79" count="10" type="stmt"/>
            <line num="81" count="2" type="stmt"/>
            <line complexity="2" visibility="private" signature="findMoney(String) : Money" num="84" count="186" type="method"/>
            <line num="85" count="186" type="stmt"/>
            <line num="86" count="119" type="stmt"/>
            <line falsecount="85" truecount="34" num="86" type="cond"/>
            <line num="87" count="34" type="stmt"/>
            <line num="90" count="152" type="stmt"/>
            <line complexity="2" visibility="private" signature="contains(Money) : boolean" num="93" count="22" type="method"/>
            <line num="94" count="22" type="stmt"/>
            <line num="95" count="22" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line falsecount="21" truecount="1" num="95" type="cond"/>
            <line num="96" count="21" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="99" count="2" type="method"/>
            <line num="101" count="2" type="stmt"/>
            <line num="102" count="2" type="stmt"/>
            <line num="103" count="4" type="stmt"/>
            <line num="105" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="isZero() : boolean" num="108" count="17" type="method"/>
            <line num="109" count="17" type="stmt"/>
            <line complexity="2" visibility="public" signature="multiply(int) : IMoney" num="112" count="3" type="method"/>
            <line num="113" count="3" type="stmt"/>
            <line num="114" count="3" type="stmt"/>
            <line falsecount="1" truecount="2" num="114" type="cond"/>
            <line num="115" count="2" type="stmt"/>
            <line num="116" count="4" type="stmt"/>
            <line num="119" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="negate() : IMoney" num="122" count="5" type="method"/>
            <line num="123" count="5" type="stmt"/>
            <line num="124" count="5" type="stmt"/>
            <line num="125" count="10" type="stmt"/>
            <line num="127" count="5" type="stmt"/>
            <line complexity="2" visibility="private" signature="simplify() : IMoney" num="130" count="70" type="method"/>
            <line num="131" count="70" type="stmt"/>
            <line falsecount="66" truecount="4" num="131" type="cond"/>
            <line num="132" count="4" type="stmt"/>
            <line num="134" count="66" type="stmt"/>
            <line complexity="1" visibility="public" signature="subtract(IMoney) : IMoney" num="137" count="4" type="method"/>
            <line num="138" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="141" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="appendTo(MoneyBag) : void" num="152" count="12" type="method"/>
            <line num="153" count="12" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/junit/samples/money/MoneyTest.java" name="MoneyTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="24" loc="166" coveredmethods="0" methods="24" elements="88" classes="1" ncloc="122" statements="64" conditionals="0" coveredstatements="0"/>
            <class name="MoneyTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="24" coveredmethods="0" methods="24" elements="88" statements="64" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="14" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="18" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line num="21" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBagMultiply() : void" num="29" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBagNegate() : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBagSimpleAdd() : void" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBagSubtract() : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBagSumAdd() : void" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIsZero() : void" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMixedSimpleAdd() : void" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBagNotEquals() : void" num="72" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMoneyBagEquals() : void" num="77" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMoneyBagHash() : void" num="88" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMoneyEquals() : void" num="93" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMoneyHash() : void" num="102" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSimplify() : void" num="108" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNormalize2() : void" num="113" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNormalize3() : void" num="119" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNormalize4() : void" num="126" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrint() : void" num="133" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSimpleAdd() : void" num="137" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSimpleBagAdd() : void" num="143" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSimpleMultiply() : void" num="149" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSimpleNegate() : void" num="155" count="0" type="method"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSimpleSubtract() : void" num="161" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.junit.tests.running.methods">
         <metrics coveredelements="502" complexity="264" loc="1758" methods="255" classes="77" statements="396" coveredconditionals="4" coveredmethods="156" elements="657" ncloc="1459" files="7" conditionals="6" coveredstatements="342"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/running/methods/AllMethodsTests.java" name="AllMethodsTests.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="17" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="15" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AllMethodsTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/running/methods/AnnotationTest.java" name="AnnotationTest.java">
            <metrics coveredelements="305" coveredconditionals="0" complexity="127" loc="842" coveredmethods="105" methods="127" elements="343" classes="37" ncloc="704" statements="216" conditionals="0" coveredstatements="200"/>
            <class name="AnnotationTest">
               <metrics coveredelements="159" complexity="31" methods="31" testruns="5" statements="128" coveredconditionals="0" coveredmethods="31" elements="159" testfailures="0" testduration="0.049" conditionals="0" coveredstatements="128" testpasses="5"/>
            </class>
            <class name="AnnotationTest.SimpleTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="AnnotationTest.SimpleTestWithFutureProofExplicitRunner">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="AnnotationTest.SetupTest">
               <metrics coveredelements="3" complexity="2" methods="2" testruns="1" statements="1" coveredconditionals="0" coveredmethods="2" elements="3" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="AnnotationTest.TeardownTest">
               <metrics coveredelements="3" complexity="2" methods="2" testruns="1" statements="1" coveredconditionals="0" coveredmethods="2" elements="3" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="AnnotationTest.FailureTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="3" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="3" testduration="0.001" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="AnnotationTest.SetupFailureTest">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="AnnotationTest.TeardownFailureTest">
               <metrics coveredelements="3" complexity="2" methods="2" testruns="1" statements="1" coveredconditionals="0" coveredmethods="2" elements="3" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="AnnotationTest.TestAndTeardownFailureTest">
               <metrics coveredelements="2" complexity="2" methods="2" testruns="1" statements="2" coveredconditionals="0" coveredmethods="1" elements="4" testfailures="1" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="0"/>
            </class>
            <class name="AnnotationTest.TeardownAfterFailureTest">
               <metrics coveredelements="2" complexity="2" methods="2" testruns="1" statements="2" coveredconditionals="0" coveredmethods="1" elements="4" testfailures="1" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="0"/>
            </class>
            <class name="AnnotationTest.TwoTests">
               <metrics coveredelements="6" complexity="2" methods="2" testruns="2" statements="4" coveredconditionals="0" coveredmethods="2" elements="6" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="4" testpasses="2"/>
            </class>
            <class name="AnnotationTest.OldTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="AnnotationTest.OldSuiteTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="AnnotationTest.ExceptionTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="AnnotationTest.NoExceptionTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="0" coveredconditionals="0" coveredmethods="0" elements="1" testfailures="1" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="AnnotationTest.OneTimeSetup">
               <metrics coveredelements="4" complexity="3" methods="3" testruns="2" statements="1" coveredconditionals="0" coveredmethods="3" elements="4" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="1" testpasses="2"/>
            </class>
            <class name="AnnotationTest.OneTimeTeardown">
               <metrics coveredelements="4" complexity="3" methods="3" testruns="2" statements="1" coveredconditionals="0" coveredmethods="3" elements="4" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="2"/>
            </class>
            <class name="AnnotationTest.OrderTest">
               <metrics coveredelements="10" complexity="5" methods="5" testruns="1" statements="5" coveredconditionals="0" coveredmethods="5" elements="10" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="5" testpasses="1"/>
            </class>
            <class name="AnnotationTest.NonStaticOneTimeSetup">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="2" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="AnnotationTest.ErrorInBeforeClass">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="AnnotationTest.ErrorInAfterClass">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="1" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <class name="AnnotationTest.SuperInheritance">
               <metrics coveredelements="8" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="AnnotationTest.SubInheritance">
               <metrics coveredelements="10" complexity="5" methods="5" testruns="1" statements="5" coveredconditionals="0" coveredmethods="5" elements="10" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="5" testpasses="1"/>
            </class>
            <class name="AnnotationTest.SuperShadowing">
               <metrics coveredelements="4" coveredconditionals="0" complexity="5" coveredmethods="2" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="AnnotationTest.SubShadowing">
               <metrics coveredelements="18" complexity="8" methods="8" testruns="1" statements="10" coveredconditionals="0" coveredmethods="8" elements="18" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="10" testpasses="1"/>
            </class>
            <class name="AnnotationTest.SuperStaticMethodShadowing">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="AnnotationTest.SubStaticMethodShadowing">
               <metrics coveredelements="8" complexity="4" methods="4" testruns="1" statements="4" coveredconditionals="0" coveredmethods="4" elements="8" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="4" testpasses="1"/>
            </class>
            <class name="AnnotationTest.SuperFieldShadowing">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="AnnotationTest.SubFieldShadowing">
               <metrics coveredelements="6" complexity="3" methods="3" testruns="1" statements="3" coveredconditionals="0" coveredmethods="3" elements="6" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <class name="AnnotationTest.SuperStaticFieldShadowing">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="AnnotationTest.SubStaticFieldShadowing">
               <metrics coveredelements="6" complexity="3" methods="3" testruns="1" statements="3" coveredconditionals="0" coveredmethods="3" elements="6" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <class name="AnnotationTest.SuperTest">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="AnnotationTest.SubTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="2" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="1" testpasses="2"/>
            </class>
            <class name="AnnotationTest.RunAllAfters">
               <metrics coveredelements="7" coveredconditionals="0" complexity="5" coveredmethods="4" methods="5" elements="8" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="AnnotationTest.RunAllAftersRegardless">
               <metrics coveredelements="7" complexity="3" methods="3" testruns="1" statements="4" coveredconditionals="0" coveredmethods="3" elements="7" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="4" testpasses="1"/>
            </class>
            <class name="AnnotationTest.RunAllAfterClasses">
               <metrics coveredelements="6" coveredconditionals="0" complexity="5" coveredmethods="3" methods="5" elements="8" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="AnnotationTest.RunAllAfterClassesRegardless">
               <metrics coveredelements="7" complexity="3" methods="3" testruns="1" statements="4" coveredconditionals="0" coveredmethods="3" elements="7" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="4" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="32" count="30" type="method"/>
            <line num="34" count="30" type="stmt"/>
            <line complexity="1" visibility="public" signature="success() : void" num="38" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAnnotatedMethod() : void" num="44" count="1" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="success() : void" num="52" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAnnotatedMethodWithFutureProofExplicitRunner() : void" num="58" count="1" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="before() : void" num="65" count="1" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="success() : void" num="70" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="testSetup() : void" num="75" count="1" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="after() : void" num="82" count="1" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="success() : void" num="87" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="testTeardown() : void" num="92" count="1" type="method"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="error() : void" num="99" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunFailure() : void" num="105" count="1" type="method"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="before() : void" num="114" count="1" type="method"/>
            <line num="116" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="119" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetupFailure() : void" num="125" testsuccess="true" count="1" testduration="0.012" type="method"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="after() : void" num="135" count="1" type="method"/>
            <line num="137" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="140" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="testTeardownFailure() : void" num="145" count="1" type="method"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line num="150" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="after() : void" num="154" count="1" type="method"/>
            <line num="156" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="159" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTestAndTeardownFailure() : void" num="165" count="1" type="method"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="after() : void" num="174" count="1" type="method"/>
            <line num="176" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="179" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTeardownAfterFailure() : void" num="185" count="1" type="method"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="one() : void" num="195" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="197" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="two() : void" num="201" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="203" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTwoTests() : void" num="208" count="1" type="method"/>
            <line num="209" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line num="213" count="1" type="stmt"/>
            <line num="214" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="218" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="219" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOldTest() : void" num="223" count="1" type="method"/>
            <line num="224" count="1" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOne() : void" num="230" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="231" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOldSuiteTest() : void" num="235" count="1" type="method"/>
            <line num="236" count="1" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line num="238" count="1" type="stmt"/>
            <line num="239" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="expectedException() : void" num="243" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="245" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testException() : void" num="249" count="1" type="method"/>
            <line num="250" count="1" type="stmt"/>
            <line num="251" count="1" type="stmt"/>
            <line num="252" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="expectedException() : void" num="256" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="testExceptionNotThrown() : void" num="261" count="1" type="method"/>
            <line num="262" count="1" type="stmt"/>
            <line num="263" count="1" type="stmt"/>
            <line num="264" count="1" type="stmt"/>
            <line num="265" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="once() : void" num="269" count="1" type="method"/>
            <line num="271" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="one() : void" num="274" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line complexity="1" visibility="public" signature="two() : void" num="278" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="testOneTimeSetup() : void" num="283" count="1" type="method"/>
            <line num="284" count="1" type="stmt"/>
            <line num="285" count="1" type="stmt"/>
            <line num="286" count="1" type="stmt"/>
            <line num="287" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="once() : void" num="291" count="1" type="method"/>
            <line num="293" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="one() : void" num="296" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="two() : void" num="300" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="testOneTimeTeardown() : void" num="305" count="1" type="method"/>
            <line num="306" count="1" type="stmt"/>
            <line num="307" count="1" type="stmt"/>
            <line num="308" count="1" type="stmt"/>
            <line num="309" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="onceBefore() : void" num="315" count="1" type="method"/>
            <line num="317" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="before() : void" num="320" count="1" type="method"/>
            <line num="322" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="325" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="327" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="after() : void" num="330" count="1" type="method"/>
            <line num="332" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="onceAfter() : void" num="335" count="1" type="method"/>
            <line num="337" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOrder() : void" num="341" count="1" type="method"/>
            <line num="342" count="1" type="stmt"/>
            <line num="343" count="1" type="stmt"/>
            <line num="344" count="1" type="stmt"/>
            <line num="345" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="once() : void" num="349" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="aTest() : void" num="353" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="testNonStaticOneTimeSetup() : void" num="358" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="359" count="1" type="stmt"/>
            <line num="360" count="1" type="stmt"/>
            <line num="361" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="before() : void" num="365" count="1" type="method"/>
            <line num="367" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="370" count="0" type="method"/>
            <line num="372" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testErrorInBeforeClass() : void" num="376" testsuccess="true" count="1" testduration="0.008" type="method"/>
            <line num="377" count="1" type="stmt"/>
            <line num="378" count="1" type="stmt"/>
            <line num="379" count="1" type="stmt"/>
            <line num="380" count="1" type="stmt"/>
            <line num="381" count="1" type="stmt"/>
            <line num="382" count="1" type="stmt"/>
            <line num="383" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="387" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="389" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="after() : void" num="392" count="1" type="method"/>
            <line num="394" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testErrorInAfterClass() : void" num="398" count="1" type="method"/>
            <line num="399" count="1" type="stmt"/>
            <line num="400" count="1" type="stmt"/>
            <line num="401" count="1" type="stmt"/>
            <line num="402" count="1" type="stmt"/>
            <line num="403" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="beforeClassSuper() : void" num="407" count="1" type="method"/>
            <line num="409" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="afterClassSuper() : void" num="412" count="1" type="method"/>
            <line num="414" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="beforeSuper() : void" num="417" count="1" type="method"/>
            <line num="419" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="afterSuper() : void" num="422" count="1" type="method"/>
            <line num="424" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="beforeClassSub() : void" num="429" count="1" type="method"/>
            <line num="431" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="afterClassSub() : void" num="434" count="1" type="method"/>
            <line num="436" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="beforeSub() : void" num="439" count="1" type="method"/>
            <line num="441" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="afterSub() : void" num="444" count="1" type="method"/>
            <line num="446" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="449" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="451" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOrderingOfInheritance() : void" num="455" count="1" type="method"/>
            <line num="456" count="1" type="stmt"/>
            <line num="457" count="1" type="stmt"/>
            <line num="458" count="1" type="stmt"/>
            <line num="459" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="rule() : TestRule" num="464" count="0" type="method"/>
            <line num="466" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="before() : void" num="467" count="0" type="method"/>
            <line num="469" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="after() : void" num="472" count="0" type="method"/>
            <line num="474" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="before() : void" num="479" count="1" type="method"/>
            <line num="481" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="after() : void" num="484" count="1" type="method"/>
            <line num="486" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="rule() : TestRule" num="492" count="1" type="method"/>
            <line num="495" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="before() : void" num="496" count="1" type="method"/>
            <line num="498" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="after() : void" num="501" count="1" type="method"/>
            <line num="503" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="before() : void" num="508" count="1" type="method"/>
            <line num="511" count="1" type="stmt"/>
            <line num="512" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="anotherBefore() : void" num="515" count="1" type="method"/>
            <line num="517" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="after() : void" num="520" count="1" type="method"/>
            <line num="523" count="1" type="stmt"/>
            <line num="524" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="anotherAfter() : void" num="527" count="1" type="method"/>
            <line num="529" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="532" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="534" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testShadowing() : void" num="538" count="1" type="method"/>
            <line num="539" count="1" type="stmt"/>
            <line num="540" count="1" type="stmt"/>
            <line num="541" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="rule() : TestRule" num="550" count="0" type="method"/>
            <line num="552" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="before() : void" num="553" count="0" type="method"/>
            <line num="555" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="after() : void" num="558" count="0" type="method"/>
            <line num="560" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rule() : TestRule" num="568" count="1" type="method"/>
            <line num="570" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="before() : void" num="571" count="1" type="method"/>
            <line num="573" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="after() : void" num="576" count="1" type="method"/>
            <line num="578" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="583" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="585" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStaticMethodsCanBeTreatedAsShadowed() : void" num="589" count="1" type="method"/>
            <line num="590" count="1" type="stmt"/>
            <line num="591" count="1" type="stmt"/>
            <line num="592" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="before() : void" num="603" count="0" type="method"/>
            <line num="605" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="after() : void" num="608" count="0" type="method"/>
            <line num="610" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="before() : void" num="619" count="1" type="method"/>
            <line num="621" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="after() : void" num="624" count="1" type="method"/>
            <line num="626" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="630" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="632" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFieldsShadowFieldsFromParent() : void" num="636" count="1" type="method"/>
            <line num="637" count="1" type="stmt"/>
            <line num="638" count="1" type="stmt"/>
            <line num="639" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="before() : void" num="650" count="0" type="method"/>
            <line num="652" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="after() : void" num="655" count="0" type="method"/>
            <line num="657" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="before() : void" num="666" count="1" type="method"/>
            <line num="668" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="after() : void" num="671" count="1" type="method"/>
            <line num="673" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="677" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="679" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStaticFieldsCanBeTreatedAsShadowed() : void" num="683" count="1" type="method"/>
            <line num="684" count="1" type="stmt"/>
            <line num="685" count="1" type="stmt"/>
            <line num="686" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="one() : void" num="694" count="0" type="method"/>
            <line num="696" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="two() : void" num="699" count="1" type="method"/>
            <line num="701" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="one() : void" num="706" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="709" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTestInheritance() : void" num="713" count="1" type="method"/>
            <line num="714" count="1" type="stmt"/>
            <line num="715" count="1" type="stmt"/>
            <line num="716" count="1" type="stmt"/>
            <line num="718" count="1" type="stmt"/>
            <line num="719" count="1" type="stmt"/>
            <line num="720" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="good() : void" num="724" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="bad() : void" num="728" count="1" type="method"/>
            <line num="730" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="empty() : void" num="733" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="one() : void" num="737" count="1" type="method"/>
            <line num="739" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="two() : void" num="742" count="1" type="method"/>
            <line num="744" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunAllAfters() : void" num="748" testsuccess="true" count="1" testduration="0.012" type="method"/>
            <line num="749" count="1" type="stmt"/>
            <line num="750" count="1" type="stmt"/>
            <line num="751" count="1" type="stmt"/>
            <line num="752" count="1" type="stmt"/>
            <line num="753" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="empty() : void" num="757" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="one() : void" num="761" count="1" type="method"/>
            <line num="763" count="1" type="stmt"/>
            <line num="764" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="two() : void" num="767" count="1" type="method"/>
            <line num="769" count="1" type="stmt"/>
            <line num="770" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunAllAftersRegardless() : void" num="774" count="1" type="method"/>
            <line num="775" count="1" type="stmt"/>
            <line num="776" count="1" type="stmt"/>
            <line num="777" count="1" type="stmt"/>
            <line num="778" count="1" type="stmt"/>
            <line num="779" count="1" type="stmt"/>
            <line num="780" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="good() : void" num="784" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="bad() : void" num="788" count="1" type="method"/>
            <line num="790" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="empty() : void" num="793" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="one() : void" num="797" count="1" type="method"/>
            <line num="799" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="two() : void" num="802" count="1" type="method"/>
            <line num="804" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunAllAfterClasses() : void" num="808" testsuccess="true" count="1" testduration="0.01" type="method"/>
            <line num="809" count="1" type="stmt"/>
            <line num="810" count="1" type="stmt"/>
            <line num="811" count="1" type="stmt"/>
            <line num="812" count="1" type="stmt"/>
            <line num="813" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="empty() : void" num="817" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="one() : void" num="821" count="1" type="method"/>
            <line num="823" count="1" type="stmt"/>
            <line num="824" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="two() : void" num="827" count="1" type="method"/>
            <line num="829" count="1" type="stmt"/>
            <line num="830" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunAllAfterClassesRegardless() : void" num="834" count="1" type="method"/>
            <line num="835" count="1" type="stmt"/>
            <line num="836" count="1" type="stmt"/>
            <line num="837" count="1" type="stmt"/>
            <line num="838" count="1" type="stmt"/>
            <line num="839" count="1" type="stmt"/>
            <line num="840" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/running/methods/ExpectedTest.java" name="ExpectedTest.java">
            <metrics coveredelements="26" coveredconditionals="0" complexity="10" loc="83" coveredmethods="8" methods="10" elements="29" classes="6" ncloc="70" statements="19" conditionals="0" coveredstatements="18"/>
            <class name="ExpectedTest">
               <metrics coveredelements="20" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="20" statements="15" conditionals="0" coveredstatements="15"/>
            </class>
            <class name="ExpectedTest.Expected">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="ExpectedTest.Unexpected">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="ExpectedTest.NoneThrown">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="0" coveredconditionals="0" coveredmethods="0" elements="1" testfailures="1" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="ExpectedTest.ExpectSuperclass">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="ExpectedTest.ExpectAssumptionViolatedException">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="expected() : void" num="16" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="18" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="expected() : void" num="22" count="1" type="method"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="expected() : void" num="30" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unexpected() : void" num="36" count="1" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="nothing() : void" num="46" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="noneThrown() : void" num="51" count="1" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="throwsSubclass() : void" num="61" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="expectsSuperclass() : void" num="67" count="1" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="throwsAssumptionViolatedException() : void" num="73" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="expectsAssumptionViolatedException() : void" num="79" count="1" type="method"/>
            <line num="81" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/running/methods/InheritedTestTest.java" name="InheritedTestTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="4" loc="39" coveredmethods="4" methods="4" elements="8" classes="4" ncloc="32" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="InheritedTestTest">
               <metrics coveredelements="5" complexity="2" methods="2" testruns="1" statements="3" coveredconditionals="0" coveredmethods="2" elements="5" testfailures="0" testduration="0.011" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <class name="InheritedTestTest.Super">
               <metrics coveredelements="1" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="InheritedTestTest.Sub">
               <metrics coveredelements="0" complexity="0" methods="0" testruns="1" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="1"/>
            </class>
            <class name="InheritedTestTest.SubWithBefore">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="nothing() : void" num="14" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="subclassWithOnlyInheritedTestsRuns() : void" num="22" count="1" type="method"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="gack() : void" num="29" count="1" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="subclassWithInheritedTestAndOwnBeforeRunsBefore() : void" num="35" testsuccess="true" count="1" testduration="0.011" type="method"/>
            <line num="37" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/running/methods/ParameterizedTestMethodTest.java" name="ParameterizedTestMethodTest.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="35" loc="188" coveredmethods="4" methods="34" elements="49" classes="5" ncloc="149" statements="15" conditionals="0" coveredstatements="9"/>
            <class name="ParameterizedTestMethodTest">
               <metrics coveredelements="13" complexity="6" methods="5" testruns="3" statements="10" coveredconditionals="0" coveredmethods="4" elements="15" testfailures="0" testduration="0.029" conditionals="0" coveredstatements="9" testpasses="3"/>
            </class>
            <class name="ParameterizedTestMethodTest.EverythingWrong">
               <metrics coveredelements="0" coveredconditionals="0" complexity="26" coveredmethods="0" methods="26" elements="31" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ParameterizedTestMethodTest.SuperWrong">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ParameterizedTestMethodTest.SubWrong">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ParameterizedTestMethodTest.SubShadows">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="EverythingWrong()" num="27" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="notStaticBC() : void" num="30" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="notPublicBC() : void" num="34" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="nonVoidBC() : int" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="argumentsBC(int) : void" num="43" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="fineBC() : void" num="47" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="notStaticAC() : void" num="51" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="notPublicAC() : void" num="55" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="nonVoidAC() : int" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="argumentsAC(int) : void" num="64" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="fineAC() : void" num="68" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="staticA() : void" num="72" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="notPublicA() : void" num="76" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="nonVoidA() : int" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="argumentsA(int) : void" num="85" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="fineA() : void" num="89" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="staticB() : void" num="93" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="notPublicB() : void" num="97" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="nonVoidB() : int" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="argumentsB(int) : void" num="106" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="fineB() : void" num="110" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="staticT() : void" num="114" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="notPublicT() : void" num="118" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="nonVoidT() : int" num="122" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="argumentsT(int) : void" num="127" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="fineT() : void" num="131" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="notPublic() : void" num="140" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="justFine() : void" num="146" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="notPublic() : void" num="152" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="ParameterizedTestMethodTest(Class&lt;?&gt;,int)" num="158" count="3" type="method"/>
            <line num="159" count="3" type="stmt"/>
            <line num="160" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="params() : Collection&lt;Object[]&gt;" num="163" count="2" type="method"/>
            <line num="165" count="2" type="stmt"/>
            <line complexity="2" visibility="private" signature="validateAllMethods(Class&lt;?&gt;) : List&lt;Throwable&gt;" num="170" count="3" type="method"/>
            <line num="171" count="3" type="stmt"/>
            <line num="172" count="3" type="stmt"/>
            <line num="174" count="2" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFailures() : void" num="179" testsuccess="true" count="3" testduration="0.005" type="method"/>
            <line num="181" count="3" type="stmt"/>
            <line num="182" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="suite() : junit.framework.Test" num="185" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/running/methods/TestMethodTest.java" name="TestMethodTest.java">
            <metrics coveredelements="33" coveredconditionals="0" complexity="47" loc="255" coveredmethods="10" methods="46" elements="74" classes="9" ncloc="205" statements="28" conditionals="0" coveredstatements="23"/>
            <class name="TestMethodTest">
               <metrics coveredelements="32" complexity="10" methods="9" testruns="6" statements="23" coveredconditionals="0" coveredmethods="9" elements="32" testfailures="0" testduration="0.051" conditionals="0" coveredstatements="23" testpasses="6"/>
            </class>
            <class name="TestMethodTest.EverythingWrong">
               <metrics coveredelements="0" coveredconditionals="0" complexity="26" coveredmethods="0" methods="26" elements="31" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestMethodTest.SuperWrong">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestMethodTest.SubWrong">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestMethodTest.SubShadows">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestMethodTest.IgnoredTest">
               <metrics coveredelements="1" complexity="3" methods="3" testruns="2" statements="0" coveredconditionals="0" coveredmethods="1" elements="3" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="2"/>
            </class>
            <class name="TestMethodTest.Confused">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="2" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestMethodTest.ConstructorParameter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="2" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestMethodTest.OnlyTestIsIgnored">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="EverythingWrong()" num="26" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="notStaticBC() : void" num="29" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="notPublicBC() : void" num="33" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="nonVoidBC() : int" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="argumentsBC(int) : void" num="42" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="fineBC() : void" num="46" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="notStaticAC() : void" num="50" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="notPublicAC() : void" num="54" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="nonVoidAC() : int" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="argumentsAC(int) : void" num="63" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="fineAC() : void" num="67" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="staticA() : void" num="71" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="notPublicA() : void" num="75" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="nonVoidA() : int" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="argumentsA(int) : void" num="84" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="fineA() : void" num="88" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="staticB() : void" num="92" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="notPublicB() : void" num="96" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="nonVoidB() : int" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="argumentsB(int) : void" num="105" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="fineB() : void" num="109" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="staticT() : void" num="113" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="notPublicT() : void" num="117" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="nonVoidT() : int" num="121" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="argumentsT(int) : void" num="126" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="fineT() : void" num="130" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="testFailures() : void" num="135" testsuccess="true" count="1" testduration="0.02" type="method"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line num="139" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="notPublic() : void" num="143" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="justFine() : void" num="149" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="validateInheritedMethods() : void" num="154" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="notPublic() : void" num="161" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="dontValidateShadowedMethods() : void" num="167" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="validateAllMethods(Class&lt;?&gt;) : List&lt;Throwable&gt;" num="173" count="3" type="method"/>
            <line num="174" count="3" type="stmt"/>
            <line num="175" count="3" type="stmt"/>
            <line num="177" count="2" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="valid() : void" num="183" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="ignored() : void" num="187" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="withReason() : void" num="192" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="ignoreRunner() : void" num="198" count="1" type="method"/>
            <line num="200" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="compatibility() : void" num="206" count="1" type="method"/>
            <line num="208" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="a(Object) : void" num="214" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="a() : void" num="218" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="overloaded() : void" num="223" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="225" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ConstructorParameter(Object)" num="229" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="a() : void" num="232" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="constructorParameter() : void" num="237" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="239" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ignored() : void" num="243" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="onlyIgnoredMethodsIsStillFineTestClass() : void" num="249" testsuccess="true" count="1" testduration="0.009" type="method"/>
            <line num="251" count="1" type="stmt"/>
            <line num="252" count="1" type="stmt"/>
            <line num="253" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/running/methods/TimeoutTest.java" name="TimeoutTest.java">
            <metrics coveredelements="117" coveredconditionals="4" complexity="41" loc="334" coveredmethods="25" methods="34" elements="154" classes="15" ncloc="284" statements="114" conditionals="6" coveredstatements="88"/>
            <class name="TimeoutTest">
               <metrics coveredelements="74" complexity="16" methods="15" testruns="5" statements="75" coveredconditionals="2" coveredmethods="12" elements="92" testfailures="0" testduration="0.505" conditionals="2" coveredstatements="60" testpasses="5"/>
            </class>
            <class name="TimeoutTest.FailureWithTimeoutTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="TimeoutTest.FailureWithTimeoutRunTimeExceptionTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="TimeoutTest.SuccessWithTimeoutTest">
               <metrics coveredelements="1" complexity="1" methods="1" testruns="1" statements="0" coveredconditionals="0" coveredmethods="1" elements="1" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="1"/>
            </class>
            <class name="TimeoutTest.TimeoutFailureTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TimeoutTest.InfiniteLoopTest">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="2" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="TimeoutTest.ImpatientLoopTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TimeoutTest.InfiniteLoopMultithreaded">
               <metrics coveredelements="11" coveredconditionals="1" complexity="2" coveredmethods="1" methods="1" elements="15" statements="12" conditionals="2" coveredstatements="9"/>
            </class>
            <class name="TimeoutTest.InfiniteLoopMultithreaded.ThreadTest">
               <metrics coveredelements="8" coveredconditionals="1" complexity="4" coveredmethods="2" methods="2" elements="10" statements="6" conditionals="2" coveredstatements="5"/>
            </class>
            <class name="TimeoutTest.InfiniteLoopWithStuckThreadTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.104" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="TimeoutTest.InfiniteLoopStuckInMainThreadTest">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="TimeoutTest.WillTimeOut">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="2" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="TimeoutTest.TimeOutZero">
               <metrics coveredelements="3" complexity="2" methods="1" testruns="1" statements="2" coveredconditionals="0" coveredmethods="1" elements="3" testfailures="0" testduration="0.2" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <class name="TimeoutTest.TimeoutSubclass">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="TimeoutTest.TimeOutOneSecond">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="failure() : void" num="30" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="failureWithTimeout() : void" num="36" count="1" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="failure() : void" num="46" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="failureWithTimeoutRunTimeException() : void" num="52" count="1" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="success() : void" num="62" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="successWithTimeout() : void" num="67" count="1" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="success() : void" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="timeoutFailure() : void" num="82" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="failure() : void" num="93" count="3" type="method"/>
            <line num="95" count="3" type="stmt"/>
            <line complexity="2" visibility="private" signature="infiniteLoop() : void" num="98" count="3" type="method"/>
            <line num="99" count="3" type="stmt"/>
            <line num="100" count="208" type="stmt"/>
            <line num="101" count="208" type="stmt"/>
            <line complexity="1" visibility="public" signature="infiniteLoop() : void" num="108" testsuccess="true" count="1" testduration="0.117" type="method"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="failure() : void" num="119" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="infiniteLoop() : void" num="124" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="infiniteLoopRunsForApproximatelyLengthOfTimeout() : void" num="129" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="runAndTime(Class&lt;?&gt;) : long" num="141" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="stackForException(Throwable) : String" num="149" count="2" type="method"/>
            <line num="150" count="2" type="stmt"/>
            <line num="151" count="2" type="stmt"/>
            <line num="152" count="2" type="stmt"/>
            <line num="153" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="stalledThreadAppearsInStackTrace() : void" num="156" testsuccess="true" count="1" testduration="0.116" type="method"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ThreadTest(boolean)" num="171" count="6" type="method"/>
            <line num="172" count="6" type="stmt"/>
            <line complexity="3" visibility="public" signature="run() : void" num="175" count="6" type="method"/>
            <line num="176" count="6" type="stmt"/>
            <line falsecount="5" truecount="0" num="176" type="cond"/>
            <line num="177" count="0" type="stmt"/>
            <line num="177" count="483204" type="stmt"/>
            <line num="178" count="5" type="stmt"/>
            <line num="179" count="5" type="stmt"/>
            <line complexity="2" visibility="public" signature="failure(boolean) : void" num="185" count="2" type="method"/>
            <line num="186" count="2" type="stmt"/>
            <line num="187" count="2" type="stmt"/>
            <line num="188" count="2" type="stmt"/>
            <line num="189" count="2" type="stmt"/>
            <line num="190" count="2" type="stmt"/>
            <line num="191" count="2" type="stmt"/>
            <line num="192" count="2" type="stmt"/>
            <line falsecount="0" truecount="1" num="192" type="cond"/>
            <line num="193" count="1" type="stmt"/>
            <line num="193" count="661477" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="196" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="failure() : void" num="207" testsuccess="false" count="0" testduration="0.104" type="method"/>
            <line num="209" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="failure() : void" num="220" count="1" type="method"/>
            <line num="222" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="timeoutFailureMultithreaded() : void" num="226" count="1" type="method"/>
            <line num="228" count="1" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line num="230" count="1" type="stmt"/>
            <line num="231" count="1" type="stmt"/>
            <line num="232" count="1" type="stmt"/>
            <line num="233" count="1" type="stmt"/>
            <line falsecount="1" truecount="2" num="233" type="cond"/>
            <line num="234" count="2" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="timeoutFailureMultithreadedStuckInMain() : void" num="240" testsuccess="true" count="1" testduration="0.144" type="method"/>
            <line num="242" count="1" type="stmt"/>
            <line num="243" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line num="246" count="1" type="stmt"/>
            <line num="247" count="1" type="stmt"/>
            <line num="248" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="compatibility() : void" num="251" testsuccess="true" count="1" testduration="0.113" type="method"/>
            <line num="253" count="1" type="stmt"/>
            <line num="254" count="1" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="test() : void" num="261" count="1" type="method"/>
            <line num="263" count="1" type="stmt"/>
            <line num="264" count="2" type="stmt"/>
            <line num="265" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="after() : void" num="272" count="1" type="method"/>
            <line num="274" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="makeSureAfterIsCalledAfterATimeout() : void" num="278" testsuccess="true" count="1" testduration="0.015" type="method"/>
            <line num="280" count="1" type="stmt"/>
            <line num="281" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="test() : void" num="288" testsuccess="true" count="1" testduration="0.2" type="method"/>
            <line num="290" count="1" type="stmt"/>
            <line num="291" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testZeroTimeoutIsIgnored() : void" num="298" count="1" type="method"/>
            <line num="300" count="1" type="stmt"/>
            <line num="301" count="1" type="stmt"/>
            <line num="302" count="1" type="stmt"/>
            <line num="303" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="TimeoutSubclass(long,TimeUnit)" num="308" count="1" type="method"/>
            <line num="309" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTimeoutFromSuperclass(TimeUnit) : long" num="312" count="1" type="method"/>
            <line num="313" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="321" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="323" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGetTimeout() : void" num="327" count="1" type="method"/>
            <line num="329" count="1" type="stmt"/>
            <line num="330" count="1" type="stmt"/>
            <line num="331" count="1" type="stmt"/>
            <line num="332" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.junit.samples">
         <metrics coveredelements="34" complexity="16" loc="152" methods="14" classes="3" statements="40" coveredconditionals="2" coveredmethods="8" elements="58" ncloc="116" files="3" conditionals="4" coveredstatements="24"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/samples/AllSamplesTests.java" name="AllSamplesTests.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="14" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AllSamplesTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/samples/ListTest.java" name="ListTest.java">
            <metrics coveredelements="34" coveredconditionals="2" complexity="12" loc="91" coveredmethods="8" methods="10" elements="43" classes="1" ncloc="73" statements="29" conditionals="4" coveredstatements="24"/>
            <class name="ListTest">
               <metrics coveredelements="34" complexity="12" methods="10" testruns="5" statements="29" coveredconditionals="2" coveredmethods="8" elements="43" testfailures="0" testduration="0.001" conditionals="4" coveredstatements="24" testpasses="5"/>
            </class>
            <line complexity="1" visibility="public" signature="main(String) : void" num="22" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="setUpOnce() : void" num="26" count="1" type="method"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line falsecount="1" truecount="1000" num="29" type="cond"/>
            <line num="30" count="1000" type="stmt"/>
            <line complexity="1" visibility="public" signature="setUp() : void" num="34" count="5" type="method"/>
            <line num="36" count="5" type="stmt"/>
            <line num="37" count="5" type="stmt"/>
            <line num="38" count="5" type="stmt"/>
            <line num="39" count="5" type="stmt"/>
            <line num="40" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="suite() : junit.framework.Test" num="43" count="2" type="method"/>
            <line num="44" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="capacity() : void" num="47" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCopy() : void" num="57" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="contains() : void" num="65" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="elementAt() : void" num="71" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="removeAll() : void" num="78" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="removeElement() : void" num="86" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/samples/SimpleTest.java" name="SimpleTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="47" coveredmethods="0" methods="4" elements="15" classes="1" ncloc="31" statements="11" conditionals="0" coveredstatements="0"/>
            <class name="SimpleTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="15" statements="11" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="18" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="suite() : junit.framework.Test" num="24" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="divideByZero() : void" num="30" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.junit.tests.running.core">
         <metrics coveredelements="72" complexity="26" loc="237" methods="23" classes="12" statements="53" coveredconditionals="2" coveredmethods="22" elements="80" ncloc="184" files="5" conditionals="4" coveredstatements="48"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/running/core/AllCoreTests.java" name="AllCoreTests.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="14" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AllCoreTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/running/core/CommandLineTest.java" name="CommandLineTest.java">
            <metrics coveredelements="28" coveredconditionals="0" complexity="9" loc="78" coveredmethods="9" methods="9" elements="28" classes="3" ncloc="65" statements="19" conditionals="0" coveredstatements="19"/>
            <class name="CommandLineTest">
               <metrics coveredelements="24" coveredconditionals="0" complexity="7" coveredmethods="7" methods="7" elements="24" statements="17" conditionals="0" coveredstatements="17"/>
            </class>
            <class name="CommandLineTest.Example">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="2" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="1" testpasses="2"/>
            </class>
            <class name="CommandLineTest.Count">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="4" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="before() : void" num="19" count="4" type="method"/>
            <line num="21" count="4" type="stmt"/>
            <line num="22" count="4" type="stmt"/>
            <line num="23" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="after() : void" num="26" count="4" type="method"/>
            <line num="28" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="32" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="34" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="runATest() : void" num="38" count="1" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="42" count="1" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="runAClass() : void" num="49" count="1" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="increment() : void" num="59" testsuccess="true" count="4" testduration="0.0" type="method"/>
            <line num="61" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="runTwoClassesAsArray() : void" num="65" count="1" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="runTwoClasses() : void" num="72" count="1" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/running/core/JUnitCoreReturnsCorrectExitCodeTest.java" name="JUnitCoreReturnsCorrectExitCodeTest.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="7" loc="47" coveredmethods="6" methods="7" elements="14" classes="3" ncloc="38" statements="7" conditionals="0" coveredstatements="6"/>
            <class name="JUnitCoreReturnsCorrectExitCodeTest">
               <metrics coveredelements="11" complexity="5" methods="5" testruns="1" statements="6" coveredconditionals="0" coveredmethods="5" elements="11" testfailures="0" testduration="0.01" conditionals="0" coveredstatements="6" testpasses="1"/>
            </class>
            <class name="JUnitCoreReturnsCorrectExitCodeTest.Fail">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="JUnitCoreReturnsCorrectExitCodeTest.Succeed">
               <metrics coveredelements="1" complexity="1" methods="1" testruns="1" statements="0" coveredconditionals="0" coveredmethods="1" elements="1" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="kaboom() : void" num="12" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="14" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="failureCausesExitCodeOf1() : void" num="18" count="1" type="method"/>
            <line num="20" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="missingClassCausesExitCodeOf1() : void" num="23" testsuccess="true" count="1" testduration="0.01" type="method"/>
            <line num="25" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="peacefulSilence() : void" num="29" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="successCausesExitCodeOf0() : void" num="34" count="1" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="runClass(String,int) : void" num="39" count="3" type="method"/>
            <line num="40" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="41" count="3" type="method"/>
            <line num="42" count="3" type="stmt"/>
            <line num="45" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/running/core/MainRunner.java" name="MainRunner.java">
            <metrics coveredelements="21" coveredconditionals="1" complexity="7" loc="67" coveredmethods="5" methods="5" elements="25" classes="3" ncloc="46" statements="18" conditionals="2" coveredstatements="15"/>
            <class name="MainRunner">
               <metrics coveredelements="11" coveredconditionals="0" complexity="2" coveredmethods="1" methods="1" elements="13" statements="12" conditionals="0" coveredstatements="10"/>
            </class>
            <class name="MainRunner.ExitException">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="MainRunner.NoExitSecurityManager">
               <metrics coveredelements="5" coveredconditionals="1" complexity="3" coveredmethods="2" methods="2" elements="7" statements="3" conditionals="2" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="ExitException(int)" num="13" count="4" type="method"/>
            <line num="14" count="4" type="stmt"/>
            <line num="15" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStatus() : int" num="18" count="8" type="method"/>
            <line num="19" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="checkExit(int) : void" num="29" count="4" type="method"/>
            <line num="31" count="4" type="stmt"/>
            <line complexity="2" visibility="public" signature="checkPermission(Permission) : void" num="34" count="78" type="method"/>
            <line num="36" count="78" type="stmt"/>
            <line falsecount="78" truecount="0" num="36" type="cond"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="runWithCheckForSystemExit(Runnable) : Integer" num="49" count="4" type="method"/>
            <line num="50" count="4" type="stmt"/>
            <line num="51" count="4" type="stmt"/>
            <line num="52" count="4" type="stmt"/>
            <line num="54" count="4" type="stmt"/>
            <line num="55" count="4" type="stmt"/>
            <line num="56" count="4" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="4" type="stmt"/>
            <line num="61" count="4" type="stmt"/>
            <line num="63" count="4" type="stmt"/>
            <line num="64" count="4" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/running/core/SystemExitTest.java" name="SystemExitTest.java">
            <metrics coveredelements="11" coveredconditionals="1" complexity="3" loc="31" coveredmethods="2" methods="2" elements="13" classes="2" ncloc="23" statements="9" conditionals="2" coveredstatements="8"/>
            <class name="SystemExitTest">
               <metrics coveredelements="9" complexity="2" methods="1" testruns="1" statements="8" coveredconditionals="1" coveredmethods="1" elements="11" testfailures="0" testduration="0.12" conditionals="2" coveredstatements="7" testpasses="1"/>
            </class>
            <class name="SystemExitTest.Exit">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="16" count="1" type="method"/>
            <line num="17" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="failureCausesExitCodeOf1() : void" num="21" testsuccess="true" count="1" testduration="0.12" type="method"/>
            <line num="23" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line falsecount="1" truecount="0" num="28" type="cond"/>
            <line num="29" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.junit.samples.money">
         <metrics coveredelements="93" complexity="25" loc="205" methods="25" classes="1" statements="68" coveredconditionals="0" coveredmethods="25" elements="93" ncloc="159" files="1" conditionals="0" coveredstatements="68"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/samples/money/MoneyTest.java" name="MoneyTest.java">
            <metrics coveredelements="93" coveredconditionals="0" complexity="25" loc="205" coveredmethods="25" methods="25" elements="93" classes="1" ncloc="159" statements="68" conditionals="0" coveredstatements="68"/>
            <class name="MoneyTest">
               <metrics coveredelements="93" complexity="25" methods="25" testruns="23" statements="68" coveredconditionals="0" coveredmethods="25" elements="93" testfailures="0" testduration="0.02600000000000001" conditionals="0" coveredstatements="68" testpasses="23"/>
            </class>
            <line complexity="1" visibility="public" signature="suite() : junit.framework.Test" num="23" count="2" type="method"/>
            <line num="24" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="setUp() : void" num="27" count="23" type="method"/>
            <line num="29" count="23" type="stmt"/>
            <line num="30" count="23" type="stmt"/>
            <line num="31" count="23" type="stmt"/>
            <line num="32" count="23" type="stmt"/>
            <line num="34" count="23" type="stmt"/>
            <line num="35" count="23" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBagMultiply() : void" num="38" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBagNegate() : void" num="47" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBagSimpleAdd() : void" num="54" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBagSubtract() : void" num="61" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBagSumAdd() : void" num="68" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIsZero() : void" num="75" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMixedSimpleAdd() : void" num="81" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBagNotEquals() : void" num="88" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMoneyBagEquals() : void" num="94" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="96" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMoneyBagHash() : void" num="106" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMoneyEquals() : void" num="112" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="zeroMoniesAreEqualRegardlessOfCurrency() : void" num="122" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMoneyHash() : void" num="131" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="135" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSimplify() : void" num="138" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNormalize2() : void" num="144" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNormalize3() : void" num="151" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNormalize4() : void" num="159" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPrint() : void" num="166" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="168" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSimpleAdd() : void" num="171" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="174" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSimpleBagAdd() : void" num="178" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSimpleMultiply() : void" num="185" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="188" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSimpleNegate() : void" num="192" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="195" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSimpleSubtract() : void" num="199" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="202" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.junit.tests.experimental.theories.runner">
         <metrics coveredelements="264" complexity="170" loc="1625" methods="169" classes="80" statements="180" coveredconditionals="0" coveredmethods="110" elements="349" ncloc="1287" files="14" conditionals="0" coveredstatements="154"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/theories/runner/AllTheoriesRunnerTests.java" name="AllTheoriesRunnerTests.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="24" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="22" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AllTheoriesRunnerTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/theories/runner/FailingDataPointMethods.java" name="FailingDataPointMethods.java">
            <metrics coveredelements="26" coveredconditionals="0" complexity="18" loc="136" coveredmethods="15" methods="18" elements="30" classes="7" ncloc="109" statements="12" conditionals="0" coveredstatements="11"/>
            <class name="FailingDataPointMethods">
               <metrics coveredelements="12" coveredconditionals="0" complexity="6" coveredmethods="6" methods="6" elements="12" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <class name="FailingDataPointMethods.HasFailingSingleDataPointMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="FailingDataPointMethods.HasFailingDataPointArrayMethod">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="FailingDataPointMethods.HasIgnoredFailingSingleDataPointMethod">
               <metrics coveredelements="3" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="FailingDataPointMethods.HasIgnoredFailingMultipleDataPointMethod">
               <metrics coveredelements="3" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="FailingDataPointMethods.HasWronglyIgnoredFailingSingleDataPointMethod">
               <metrics coveredelements="3" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="FailingDataPointMethods.HasWronglyIgnoredFailingMultipleDataPointMethod">
               <metrics coveredelements="3" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="failingDataPoint() : int" num="21" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="theory(int) : void" num="26" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="shouldFailFromExceptionsInSingleDataPointMethods() : void" num="31" count="1" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="failingDataPoints() : int[]" num="41" count="1" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="theory(int) : void" num="46" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="shouldFailFromExceptionsInDataPointArrayMethods() : void" num="51" count="1" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="failingDataPoint() : int" num="61" count="1" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="theory(int) : void" num="66" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="shouldIgnoreSingleDataPointMethodExceptionsOnRequest() : void" num="71" count="1" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="failingDataPoint() : int[]" num="81" count="1" type="method"/>
            <line num="83" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="theory(int) : void" num="86" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="shouldIgnoreMultipleDataPointMethodExceptionsOnRequest() : void" num="91" count="1" type="method"/>
            <line num="93" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="failingDataPoint() : int" num="101" count="2" type="method"/>
            <line num="103" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="theory(int) : void" num="106" count="2" type="method"/>
            <line complexity="1" visibility="public" signature="shouldNotIgnoreNonMatchingSingleDataPointExceptions() : void" num="111" count="1" type="method"/>
            <line num="113" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="failingDataPoint() : int" num="121" count="1" type="method"/>
            <line num="123" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="theory(int) : void" num="126" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="shouldNotIgnoreNonMatchingMultipleDataPointExceptions() : void" num="131" count="1" type="method"/>
            <line num="133" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/theories/runner/SuccessfulWithDataPointFields.java" name="SuccessfulWithDataPointFields.java">
            <metrics coveredelements="42" coveredconditionals="0" complexity="20" loc="211" coveredmethods="20" methods="20" elements="42" classes="11" ncloc="164" statements="22" conditionals="0" coveredstatements="22"/>
            <class name="SuccessfulWithDataPointFields">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SuccessfulWithDataPointFields.HasATwoParameterTheory">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="SuccessfulWithDataPointFields.BeforeAndAfterOnSameInstance">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="SuccessfulWithDataPointFields.NewObjectEachTime">
               <metrics coveredelements="3" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="SuccessfulWithDataPointFields.PositiveInts">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="SuccessfulWithDataPointFields.PositiveIntsWithNegativeField">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="SuccessfulWithDataPointFields.PositiveIntsWithMethodParams">
               <metrics coveredelements="6" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="SuccessfulWithDataPointFields.DifferentTypesInConstructor">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="2" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SuccessfulWithDataPointFields.BeforeAndAfterEachTime">
               <metrics coveredelements="7" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="7" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="SuccessfulWithDataPointFields.OneTestTwoAnnotations">
               <metrics coveredelements="6" complexity="3" methods="3" testruns="1" statements="3" coveredconditionals="0" coveredmethods="3" elements="6" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <class name="SuccessfulWithDataPointFields.StaticPublicNonDataPoints">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="allIntsAreEqual(int,int) : void" num="29" count="1" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="incrementBefore() : void" num="42" count="1" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="stringsAreOK(String) : void" num="47" count="1" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="addToEmptyList(String) : void" num="63" count="2" type="method"/>
            <line num="65" count="2" type="stmt"/>
            <line num="66" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="PositiveInts(int)" num="77" count="1" type="method"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="haveAPostiveSquare() : void" num="82" count="1" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="PositiveIntsWithNegativeField(int)" num="97" count="2" type="method"/>
            <line num="98" count="2" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="haveAPostiveSquare() : void" num="102" count="1" type="method"/>
            <line num="104" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="PositiveIntsWithMethodParams(int)" num="115" count="1" type="method"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="haveAPostiveSquare(int) : void" num="120" count="1" type="method"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="DifferentTypesInConstructor(int)" num="135" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="yesIndeed(String) : void" num="138" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="incrementBefore() : void" num="153" count="2" type="method"/>
            <line num="155" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="resetCalls() : void" num="158" count="1" type="method"/>
            <line num="160" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="stringsAreOK(String) : void" num="163" count="2" type="method"/>
            <line complexity="1" visibility="public" signature="calledTwice() : void" num="167" count="1" type="method"/>
            <line num="169" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="resetCalls() : void" num="180" count="1" type="method"/>
            <line num="182" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="stringsAreOK(String) : void" num="185" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="188" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="calledTwice() : void" num="191" count="1" type="method"/>
            <line num="193" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="onlyAnnotatedFields(int) : void" num="206" count="1" type="method"/>
            <line num="208" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/theories/runner/TheoriesPerformanceTest.java" name="TheoriesPerformanceTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="38" coveredmethods="0" methods="2" elements="4" classes="2" ncloc="26" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="TheoriesPerformanceTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="2" coveredconditionals="0" coveredmethods="0" elements="3" testfailures="1" testduration="0.001" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="TheoriesPerformanceTest.UpToTen">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="threeInts(int,int,int) : void" num="20" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="tryCombinationsQuickly() : void" num="33" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/theories/runner/TypeMatchingBetweenMultiDataPointsMethod.java" name="TypeMatchingBetweenMultiDataPointsMethod.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="6" loc="57" coveredmethods="5" methods="6" elements="10" classes="3" ncloc="46" statements="4" conditionals="0" coveredstatements="3"/>
            <class name="TypeMatchingBetweenMultiDataPointsMethod">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="TypeMatchingBetweenMultiDataPointsMethod.WithWrongfullyTypedDataPointsMethod">
               <metrics coveredelements="1" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TypeMatchingBetweenMultiDataPointsMethod.WithCorrectlyTypedDataPointsMethod">
               <metrics coveredelements="3" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="wrongfullyTyped() : String[]" num="21" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTheory(String[]) : void" num="26" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="ignoreWrongTypedDataPointsMethod() : void" num="31" count="1" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="anotherCorrectlyTyped() : String[][]" num="41" count="1" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTheory(String[]) : void" num="48" count="2" type="method"/>
            <line complexity="1" visibility="public" signature="pickUpMultiPointDataPointMethods() : void" num="53" count="1" type="method"/>
            <line num="55" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/theories/runner/UnsuccessfulWithDataPointFields.java" name="UnsuccessfulWithDataPointFields.java">
            <metrics coveredelements="28" coveredconditionals="0" complexity="26" loc="243" coveredmethods="13" methods="26" elements="49" classes="9" ncloc="196" statements="23" conditionals="0" coveredstatements="15"/>
            <class name="UnsuccessfulWithDataPointFields">
               <metrics coveredelements="22" coveredconditionals="0" complexity="10" coveredmethods="10" methods="10" elements="22" statements="12" conditionals="0" coveredstatements="12"/>
            </class>
            <class name="UnsuccessfulWithDataPointFields.HasAFailingTheory">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="UnsuccessfulWithDataPointFields.DoesntUseParams">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="UnsuccessfulWithDataPointFields.NullsOK">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="UnsuccessfulWithDataPointFields.TheoriesMustBePublic">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="UnsuccessfulWithDataPointFields.DataPointFieldsMustBeStatic">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="UnsuccessfulWithDataPointFields.DataPointMethodsMustBeStatic">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="5" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="UnsuccessfulWithDataPointFields.DataPointFieldsMustBePublic">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="UnsuccessfulWithDataPointFields.DataPointMethodsMustBePublic">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="13" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="everythingIsZero(int) : void" num="25" count="1" type="method"/>
            <line num="27" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="theoryClassMethodsShowUp() : void" num="31" count="1" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="theoryAnnotationsAreRetained() : void" num="37" count="1" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="canRunTheories() : void" num="43" count="1" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="everythingIsZero(int,int) : void" num="54" count="1" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportBadParams() : void" num="60" count="1" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="everythingIsA(String) : void" num="74" count="2" type="method"/>
            <line num="76" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="nullsUsedUnlessProhibited() : void" num="80" count="1" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="numbers(int) : void" num="91" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="theoriesMustBePublic() : void" num="97" count="1" type="method"/>
            <line num="99" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="numbers(int) : void" num="112" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="dataPointFieldsMustBeStatic() : void" num="118" count="1" type="method"/>
            <line num="120" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="singleDataPointMethod() : int" num="128" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dataPointArrayMethod() : int[]" num="133" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numbers(int) : void" num="138" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="dataPointMethodsMustBeStatic() : void" num="144" count="1" type="method"/>
            <line num="146" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="numbers(int) : void" num="174" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="dataPointFieldsMustBePublic() : void" num="180" count="1" type="method"/>
            <line num="182" count="1" type="stmt"/>
            <line num="184" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="three() : int" num="195" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="threes() : int[]" num="200" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="four() : int" num="205" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="fours() : int[]" num="210" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="five() : int" num="215" count="0" type="method"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="fives() : int[]" num="220" count="0" type="method"/>
            <line num="222" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numbers(int) : void" num="225" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="dataPointMethodsMustBePublic() : void" num="231" count="1" type="method"/>
            <line num="233" count="1" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/theories/runner/WhenNoParametersMatch.java" name="WhenNoParametersMatch.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="2" loc="51" coveredmethods="2" methods="2" elements="9" classes="2" ncloc="40" statements="7" conditionals="0" coveredstatements="7"/>
            <class name="WhenNoParametersMatch">
               <metrics coveredelements="7" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="7" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <class name="WhenNoParametersMatch.AssumptionsFail">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="nonZeroIntsAreFun(int) : void" num="33" count="5" type="method"/>
            <line num="35" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="showFailedAssumptionsWhenNoParametersFound(int,Matcher&lt;Integer&gt;) : void" num="39" count="10" type="method"/>
            <line num="42" count="10" type="stmt"/>
            <line num="43" count="5" type="stmt"/>
            <line num="44" count="5" type="stmt"/>
            <line num="46" count="5" type="stmt"/>
            <line num="48" count="5" type="stmt"/>
            <line num="49" count="5" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/theories/runner/WithAutoGeneratedDataPoints.java" name="WithAutoGeneratedDataPoints.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="8" loc="71" coveredmethods="4" methods="8" elements="12" classes="5" ncloc="51" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="WithAutoGeneratedDataPoints">
               <metrics coveredelements="8" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="WithAutoGeneratedDataPoints.ENUM">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="WithAutoGeneratedDataPoints.TheoryTestClassWithAutogeneratedParameterValues">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="2" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="WithAutoGeneratedDataPoints.TheoryTestClassWithSpecificEnumDataPoint">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="WithAutoGeneratedDataPoints.TheoryTestClassWithSpecificBooleanDataPoint">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="theory(ENUM) : void" num="17" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="theory(boolean) : void" num="20" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="shouldAutomaticallyGenerateEnumDataPoints() : void" num="25" count="1" type="method"/>
            <line num="27" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldAutomaticallyGenerateBooleanDataPoints() : void" num="31" count="1" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="theory(ENUM) : void" num="43" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="shouldNotAutogenerateEnumDataPointsWhenSpecificDataPointGiven() : void" num="48" count="1" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="theory(boolean) : void" num="60" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="shouldNotAutogenerateBooleanDataPointsWhenSpecificDataPointGiven() : void" num="65" count="1" type="method"/>
            <line num="67" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/theories/runner/WithDataPointMethod.java" name="WithDataPointMethod.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="15" loc="114" coveredmethods="10" methods="15" elements="27" classes="4" ncloc="94" statements="12" conditionals="0" coveredstatements="10"/>
            <class name="WithDataPointMethod">
               <metrics coveredelements="12" coveredconditionals="0" complexity="6" coveredmethods="6" methods="6" elements="12" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <class name="WithDataPointMethod.HasDataPointMethod">
               <metrics coveredelements="3" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="WithDataPointMethod.DataPointMethodReturnsMutableObject">
               <metrics coveredelements="5" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="WithDataPointMethod.HasDateMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="7" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="oneHundred() : int" num="29" count="1" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="allIntsOk(int) : void" num="34" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="pickUpDataPointMethods() : void" num="39" count="1" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="empty() : List&lt;Object&gt;" num="46" count="2" type="method"/>
            <line num="48" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="everythingsEmpty(List&lt;Object&gt;,int) : void" num="57" count="2" type="method"/>
            <line num="59" count="2" type="stmt"/>
            <line num="60" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="mutableObjectsAreCreatedAfresh() : void" num="64" count="1" type="method"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="oneHundred() : int" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="notADataPoint() : Date" num="76" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="allIntsOk(int) : void" num="80" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="onlyStringsOk(String) : void" num="84" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="onlyDatesOk(Date) : void" num="88" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="ignoreDataPointMethodsWithWrongTypes() : void" num="93" count="1" type="method"/>
            <line num="95" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ignoreDataPointMethodsWithoutAnnotation() : void" num="100" count="1" type="method"/>
            <line num="102" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="failures(Class&lt;?&gt;) : List&lt;Failure&gt;" num="107" count="1" type="method"/>
            <line num="108" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="empty() : Matcher&lt;Iterable&lt;Failure&gt;&gt;" num="111" count="1" type="method"/>
            <line num="112" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/theories/runner/WithExtendedParameterSources.java" name="WithExtendedParameterSources.java">
            <metrics coveredelements="38" coveredconditionals="0" complexity="20" loc="180" coveredmethods="15" methods="20" elements="47" classes="9" ncloc="146" statements="27" conditionals="0" coveredstatements="23"/>
            <class name="WithExtendedParameterSources">
               <metrics coveredelements="24" coveredconditionals="0" complexity="8" coveredmethods="8" methods="8" elements="24" statements="16" conditionals="0" coveredstatements="16"/>
            </class>
            <class name="WithExtendedParameterSources.ParameterAnnotations">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="WithExtendedParameterSources.ShouldFilterOutNullSingleDataPoints">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="WithExtendedParameterSources.ShouldFilterOutNullElementsFromDataPointArrays">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="WithExtendedParameterSources.ShouldRejectTheoriesWithOnlyDisallowedNullData">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="WithExtendedParameterSources.DataPointArrays">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="WithExtendedParameterSources.DataPointArrayMethod">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="WithExtendedParameterSources.DataPointMalformedArrayMethods">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="WithExtendedParameterSources.DataPointArrayToBeUsedForWholeParameter">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="everythingIsOne(int) : void" num="23" count="1" type="method"/>
            <line num="26" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testedOnLimitsParameters() : void" num="30" count="1" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="allStringsAreNonNull(String) : void" num="45" count="1" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldFilterOutNullSingleDataPoints() : void" num="51" count="1" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="allStringsAreNonNull(String) : void" num="61" count="1" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldFilterOutNullElementsFromDataPointArrays() : void" num="67" count="1" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="allStringsAreNonNull(String) : void" num="77" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="ShouldRejectTheoriesWithOnlyDisallowedNullData() : void" num="82" count="1" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="addToLog(String) : void" num="94" count="2" type="method"/>
            <line num="96" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDataPointsFromArray() : void" num="100" count="1" type="method"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="STRINGS() : String[]" num="111" count="2" type="method"/>
            <line num="113" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="addToLog(String) : void" num="116" count="4" type="method"/>
            <line num="118" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDataPointsFromArrayMethod() : void" num="122" count="1" type="method"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="STRINGS() : String[]" num="133" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="STRING() : String" num="138" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="INTS() : int[]" num="143" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addToLog(String) : void" num="148" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDataPointsFromArrayMethodInSpiteOfMalformedness() : void" num="154" count="1" type="method"/>
            <line num="156" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="addToLog(String[]) : void" num="168" count="1" type="method"/>
            <line num="170" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="dataPointCanBeArray() : void" num="174" count="1" type="method"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/theories/runner/WithNamedDataPoints.java" name="WithNamedDataPoints.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="6" loc="73" coveredmethods="3" methods="6" elements="14" classes="2" ncloc="55" statements="8" conditionals="0" coveredstatements="6"/>
            <class name="WithNamedDataPoints">
               <metrics coveredelements="5" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="5" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="WithNamedDataPoints.HasSpecificDatapointsParameters">
               <metrics coveredelements="4" coveredconditionals="0" complexity="5" coveredmethods="2" methods="5" elements="9" statements="4" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="methodStrings() : String[]" num="36" count="1" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="methodString() : String" num="41" count="1" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="otherMethod() : String[]" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="otherSingleValueMethod() : String" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="theory(String) : void" num="56" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="onlyUseSpecificDataPointsIfSpecified() : void" num="62" count="1" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="5" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/theories/runner/WithOnlyTestAnnotations.java" name="WithOnlyTestAnnotations.java">
            <metrics coveredelements="18" coveredconditionals="0" complexity="9" loc="82" coveredmethods="6" methods="8" elements="20" classes="5" ncloc="68" statements="12" conditionals="0" coveredstatements="12"/>
            <class name="WithOnlyTestAnnotations">
               <metrics coveredelements="12" complexity="4" methods="4" testruns="2" statements="8" coveredconditionals="0" coveredmethods="4" elements="12" testfailures="0" testduration="0.011" conditionals="0" coveredstatements="8" testpasses="2"/>
            </class>
            <class name="WithOnlyTestAnnotations.HonorExpectedException">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="0" coveredconditionals="0" coveredmethods="0" elements="1" testfailures="1" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="WithOnlyTestAnnotations.HonorExpectedExceptionPasses">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="WithOnlyTestAnnotations.HonorTimeout">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="1" methods="1" elements="4" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="WithOnlyTestAnnotations.ErrorWhenTestHasParametersDespiteTheories">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="shouldThrow() : void" num="21" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="honorExpected() : void" num="27" count="1" type="method"/>
            <line num="29" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldThrow() : void" num="34" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="honorExpectedPassing() : void" num="40" count="1" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="shouldStop() : void" num="47" count="1" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="16" type="stmt"/>
            <line num="51" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="honorTimeout() : void" num="59" testsuccess="true" count="1" testduration="0.01" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMethod(int) : void" num="69" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="testErrorWhenTestHasParametersDespiteTheories() : void" num="74" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/theories/runner/WithParameterSupplier.java" name="WithParameterSupplier.java">
            <metrics coveredelements="23" coveredconditionals="0" complexity="18" loc="165" coveredmethods="7" methods="18" elements="38" classes="10" ncloc="120" statements="20" conditionals="0" coveredstatements="16"/>
            <class name="WithParameterSupplier">
               <metrics coveredelements="13" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="13" statements="9" conditionals="0" coveredstatements="9"/>
            </class>
            <class name="WithParameterSupplier.SimplePotentialAssignment">
               <metrics coveredelements="5" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="WithParameterSupplier.SimpleSupplier">
               <metrics coveredelements="5" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="5" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="WithParameterSupplier.TestClassUsingParameterSupplier">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="WithParameterSupplier.SupplierWithUnknownConstructor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="WithParameterSupplier.TestClassUsingSupplierWithUnknownConstructor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="WithParameterSupplier.SupplierWithTwoConstructors">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="WithParameterSupplier.TestClassUsingSupplierWithTwoConstructors">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="WithParameterSupplier.SupplierWithTestClassConstructor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="WithParameterSupplier.TestClassUsingSupplierWithTestClassConstructor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SimplePotentialAssignment(Object,String)" num="32" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
            <line num="34" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : Object" num="37" count="2" type="method"/>
            <line num="39" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescription() : String" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValueSources(ParameterSignature) : List&lt;PotentialAssignment&gt;" num="52" count="1" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="2" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="theoryMethod(String) : void" num="69" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="shouldPickUpDataPointsFromParameterSupplier() : void" num="75" count="1" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="SupplierWithUnknownConstructor(String)" num="87" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getValueSources(ParameterSignature) : List&lt;PotentialAssignment&gt;" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="theory(String) : void" num="100" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="shouldRejectSuppliersWithUnknownConstructors() : void" num="106" count="1" type="method"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="SupplierWithTwoConstructors(String)" num="114" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getValueSources(ParameterSignature) : List&lt;PotentialAssignment&gt;" num="117" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="theory(String) : void" num="127" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="shouldRejectSuppliersWithTwoConstructors() : void" num="133" count="1" type="method"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="SupplierWithTestClassConstructor(TestClass)" num="141" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getValueSources(ParameterSignature) : List&lt;PotentialAssignment&gt;" num="144" count="0" type="method"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="theory(String) : void" num="154" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="shouldAcceptSuppliersWithTestClassConstructor() : void" num="160" count="1" type="method"/>
            <line num="162" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/theories/runner/WithUnresolvedGenericTypeVariablesOnTheoryParms.java" name="WithUnresolvedGenericTypeVariablesOnTheoryParms.java">
            <metrics coveredelements="35" coveredconditionals="0" complexity="20" loc="180" coveredmethods="10" methods="20" elements="47" classes="10" ncloc="150" statements="27" conditionals="0" coveredstatements="25"/>
            <class name="WithUnresolvedGenericTypeVariablesOnTheoryParms">
               <metrics coveredelements="34" coveredconditionals="0" complexity="9" coveredmethods="9" methods="9" elements="34" statements="25" conditionals="0" coveredstatements="25"/>
            </class>
            <class name="WithUnresolvedGenericTypeVariablesOnTheoryParms.TypeVariableOnTheoryOnly">
               <metrics coveredelements="1" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="WithUnresolvedGenericTypeVariablesOnTheoryParms.TypeVariableOnTheoryParm">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="WithUnresolvedGenericTypeVariablesOnTheoryParms.TypeVariableOnParameterizedTheoryParm">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="WithUnresolvedGenericTypeVariablesOnTheoryParms.TypeVariableOnWildcardUpperBoundOnTheoryParm">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="WithUnresolvedGenericTypeVariablesOnTheoryParms.TypeVariableOnWildcardLowerBoundOnTheoryParm">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="WithUnresolvedGenericTypeVariablesOnTheoryParms.TypeVariableOnArrayTypeOnTheoryParm">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="WithUnresolvedGenericTypeVariablesOnTheoryParms.TypeVariableOnComponentOfArrayTypeOnTheoryParm">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="WithUnresolvedGenericTypeVariablesOnTheoryParms.TypeVariableOnTheoryClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="WithUnresolvedGenericTypeVariablesOnTheoryParms.TypeVariablesAbound">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="whereTypeVariableIsOnTheTheory() : void" num="24" count="1" type="method"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="forItems(Collection&lt;?&gt;) : void" num="35" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="whereTypeVariableIsOnTheoryParm() : void" num="40" count="1" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="forItem(T) : void" num="51" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="whereTypeVariableIsOnParameterizedTheoryParm() : void" num="56" count="1" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="forItems(Collection&lt;T&gt;) : void" num="67" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="whereTypeVariableIsOnWildcardUpperBoundOnTheoryParm() : void" num="72" count="1" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="forItems(Collection&lt;? extends U&gt;) : void" num="83" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="whereTypeVariableIsOnWildcardLowerBoundOnTheoryParm() : void" num="88" count="1" type="method"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="forItems(Collection&lt;? super V&gt;) : void" num="99" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="whereTypeVariableIsOnArrayTypeOnTheoryParm() : void" num="104" count="1" type="method"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="items() : String[][]" num="112" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="forItems(T[]) : void" num="117" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="whereTypeVariableIsOnComponentOfArrayTypeOnTheoryParm() : void" num="122" count="1" type="method"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="items() : List&lt;?&gt;[][]" num="130" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="forItems(Collection&lt;U&gt;[]) : void" num="138" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="whereTypeVariableIsOnTheoryClass() : void" num="143" count="1" type="method"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="forItem(T) : void" num="154" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="whereTypeVariablesAbound() : void" num="159" count="1" type="method"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="forItem(A,Collection&lt;B&gt;,Map&lt;C, ? extends D&gt;,List&lt;? super E&gt;,F[],Collection&lt;G&gt;[]) : void" num="174" count="0" type="method"/>
         </file>
      </package>
      <package name="org.junit.tests.manipulation">
         <metrics coveredelements="365" complexity="166" loc="1288" methods="166" classes="70" statements="222" coveredconditionals="0" coveredmethods="149" elements="388" ncloc="1019" files="12" conditionals="0" coveredstatements="216"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/manipulation/AllManipulationTests.java" name="AllManipulationTests.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="17" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="15" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AllManipulationTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/manipulation/AlphanumericOrdering.java" name="AlphanumericOrdering.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="15" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="AlphanumericOrdering">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="create(Ordering.Context) : Ordering" num="12" count="8" type="method"/>
            <line num="13" count="8" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/manipulation/ComparatorBasedOrdering.java" name="ComparatorBasedOrdering.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="2" loc="28" coveredmethods="2" methods="2" elements="6" classes="1" ncloc="20" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="ComparatorBasedOrdering">
               <metrics coveredelements="6" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="protected" signature="ComparatorBasedOrdering(Comparator&lt;Description&gt;)" num="18" count="14" type="method"/>
            <line num="19" count="14" type="stmt"/>
            <line complexity="1" visibility="protected" signature="orderItems(Collection&lt;Description&gt;) : List&lt;Description&gt;" num="22" count="36" type="method"/>
            <line num="24" count="36" type="stmt"/>
            <line num="25" count="36" type="stmt"/>
            <line num="26" count="36" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/manipulation/Comparators.java" name="Comparators.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="2" loc="19" coveredmethods="1" methods="2" elements="3" classes="1" ncloc="11" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="Comparators">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="private" signature="Comparators()" num="14" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="alphanumeric() : Comparator&lt;Description&gt;" num="16" count="26" type="method"/>
            <line num="17" count="26" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/manipulation/FilterTest.java" name="FilterTest.java">
            <metrics coveredelements="17" coveredconditionals="0" complexity="6" loc="50" coveredmethods="5" methods="6" elements="19" classes="2" ncloc="41" statements="13" conditionals="0" coveredstatements="12"/>
            <class name="FilterTest">
               <metrics coveredelements="13" complexity="3" methods="3" testruns="3" statements="10" coveredconditionals="0" coveredmethods="3" elements="13" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="10" testpasses="3"/>
            </class>
            <class name="FilterTest.NamedFilter">
               <metrics coveredelements="4" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="NamedFilter(String)" num="14" count="4" type="method"/>
            <line num="15" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldRun(Description) : boolean" num="18" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="describe() : String" num="23" count="4" type="method"/>
            <line num="25" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="intersectionText() : void" num="29" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="intersectSelf() : void" num="37" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="intersectAll() : void" num="43" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/manipulation/FilterableTest.java" name="FilterableTest.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="8" loc="62" coveredmethods="6" methods="8" elements="16" classes="3" ncloc="51" statements="8" conditionals="0" coveredstatements="6"/>
            <class name="FilterableTest">
               <metrics coveredelements="3" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="FilterableTest.FilteredRunner">
               <metrics coveredelements="5" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="FilterableTest.FilteredTest">
               <metrics coveredelements="4" complexity="4" methods="4" testruns="2" statements="2" coveredconditionals="0" coveredmethods="3" elements="6" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="FilteredRunner(Class&lt;?&gt;)" num="20" count="1" type="method"/>
            <line num="21" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldRun(Description) : boolean" num="24" count="6" type="method"/>
            <line num="26" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="describe() : String" num="29" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parameters() : List&lt;Object[]&gt;" num="39" count="1" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="FilteredTest(int)" num="44" count="2" type="method"/>
            <line complexity="1" visibility="public" signature="skipThis() : void" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="runThis() : void" num="52" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="testFilterInRunnerConstructor() : void" num="57" count="1" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/manipulation/OrderWithTest.java" name="OrderWithTest.java">
            <metrics coveredelements="79" coveredconditionals="0" complexity="33" loc="268" coveredmethods="32" methods="33" elements="80" classes="21" ncloc="214" statements="47" conditionals="0" coveredstatements="47"/>
            <class name="OrderWithTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="OrderWithTest.TestClassRunnerIsOrderableViaOrderWith">
               <metrics coveredelements="18" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="18" statements="13" conditionals="0" coveredstatements="13"/>
            </class>
            <class name="OrderWithTest.TestClassRunnerIsOrderableViaOrderWith.Unordered">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="OrderWithTest.TestClassRunnerIsOrderableViaOrderWith.OrderedAlphanumerically">
               <metrics coveredelements="0" complexity="0" methods="0" testruns="3" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="3"/>
            </class>
            <class name="OrderWithTest.TestClassRunnerIsOrderableViaOrderWith.OrderedReverseAlphanumerically">
               <metrics coveredelements="0" complexity="0" methods="0" testruns="3" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="3"/>
            </class>
            <class name="OrderWithTest.TestClassRunnerIsOrderableViaOrderWith.UnorderedSuite">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="OrderWithTest.TestClassRunnerIsOrderableViaOrderWith.UnorderedSuite.A">
               <metrics coveredelements="6" complexity="3" methods="3" testruns="6" statements="3" coveredconditionals="0" coveredmethods="3" elements="6" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="3" testpasses="6"/>
            </class>
            <class name="OrderWithTest.TestClassRunnerIsOrderableViaOrderWith.UnorderedSuite.B">
               <metrics coveredelements="6" complexity="3" methods="3" testruns="6" statements="3" coveredconditionals="0" coveredmethods="3" elements="6" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="3" testpasses="6"/>
            </class>
            <class name="OrderWithTest.TestClassRunnerIsOrderableViaOrderWith.SuiteOrderedAlphanumerically">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="OrderWithTest.TestClassRunnerIsOrderableViaOrderWith.SuiteOrderedReverseAlphanumerically">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="OrderWithTest.TestClassRunnerIsSortableViaOrderWith">
               <metrics coveredelements="10" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="10" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <class name="OrderWithTest.TestClassRunnerIsSortableViaOrderWith.Unordered">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="OrderWithTest.TestClassRunnerIsSortableViaOrderWith.SortedAlphanumerically">
               <metrics coveredelements="0" complexity="0" methods="0" testruns="3" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="3"/>
            </class>
            <class name="OrderWithTest.TestClassRunnerIsSortableViaOrderWith.SortedReverseAlphanumerically">
               <metrics coveredelements="0" complexity="0" methods="0" testruns="3" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="3"/>
            </class>
            <class name="OrderWithTest.TestClassRunnerIsOrderableWithSuiteMethod">
               <metrics coveredelements="10" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="10" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <class name="OrderWithTest.TestClassRunnerIsOrderableWithSuiteMethod.Unordered">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="OrderWithTest.TestClassRunnerIsOrderableWithSuiteMethod.OrderedAlphanumerically">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="3" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="1" testpasses="3"/>
            </class>
            <class name="OrderWithTest.TestClassRunnerIsOrderableWithSuiteMethod.OrderedReverseAlphanumerically">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="3" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="1" testpasses="3"/>
            </class>
            <class name="OrderWithTest.UnOrderableRunnersAreHandledWithoutCrashing">
               <metrics coveredelements="3" complexity="1" methods="1" testruns="1" statements="2" coveredconditionals="0" coveredmethods="1" elements="3" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <class name="OrderWithTest.UnOrderableRunnersAreHandledWithoutCrashing.UnOrderableRunner">
               <metrics coveredelements="4" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="4" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="OrderWithTest.UnOrderableRunnersAreHandledWithoutCrashing.UnOrderable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="a() : void" num="24" count="2" type="method"/>
            <line num="26" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="b() : void" num="29" count="2" type="method"/>
            <line num="31" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="c() : void" num="34" count="2" type="method"/>
            <line num="36" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="resetLog() : void" num="48" count="4" type="method"/>
            <line num="50" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="orderingForwardWorksOnTestClassRunner() : void" num="53" count="1" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="orderingBackwardWorksOnTestClassRunner() : void" num="61" count="1" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="a() : void" num="72" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="74" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="b() : void" num="77" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="79" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="c() : void" num="82" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="84" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="a() : void" num="89" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="91" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="b() : void" num="94" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="96" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="c() : void" num="99" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="101" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="orderingForwardWorksOnSuite() : void" num="114" count="1" type="method"/>
            <line num="116" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="orderingBackwardWorksOnSuite() : void" num="122" count="1" type="method"/>
            <line num="124" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="a() : void" num="135" count="2" type="method"/>
            <line num="137" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="b() : void" num="140" count="2" type="method"/>
            <line num="142" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="c() : void" num="145" count="2" type="method"/>
            <line num="147" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="resetLog() : void" num="151" count="2" type="method"/>
            <line num="153" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="sortingForwardWorksOnTestClassRunner() : void" num="164" count="1" type="method"/>
            <line num="166" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="sortingBackwardWorksOnTestClassRunner() : void" num="172" count="1" type="method"/>
            <line num="174" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="177" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="a() : void" num="185" count="2" type="method"/>
            <line num="187" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="b() : void" num="190" count="2" type="method"/>
            <line num="192" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="c() : void" num="195" count="2" type="method"/>
            <line num="197" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="suite() : junit.framework.Test" num="204" count="1" type="method"/>
            <line num="205" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="suite() : junit.framework.Test" num="212" count="1" type="method"/>
            <line num="213" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="resetLog() : void" num="217" count="2" type="method"/>
            <line num="219" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="orderingForwardWorksOnTestClassRunner() : void" num="222" count="1" type="method"/>
            <line num="224" count="1" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="orderingBackwardWorksOnTestClassRunner() : void" num="230" count="1" type="method"/>
            <line num="232" count="1" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="UnOrderableRunner(Class&lt;?&gt;)" num="241" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="getDescription() : Description" num="244" count="3" type="method"/>
            <line num="246" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(RunNotifier) : void" num="249" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="a() : void" num="256" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="unOrderablesAreHandledWithoutCrashing() : void" num="261" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="263" count="1" type="stmt"/>
            <line num="265" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/manipulation/OrderableTest.java" name="OrderableTest.java">
            <metrics coveredelements="95" coveredconditionals="0" complexity="41" loc="301" coveredmethods="39" methods="41" elements="98" classes="15" ncloc="242" statements="57" conditionals="0" coveredstatements="56"/>
            <class name="OrderableTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="OrderableTest.TestClassRunnerIsOrderable">
               <metrics coveredelements="22" coveredconditionals="0" complexity="6" coveredmethods="6" methods="6" elements="22" statements="16" conditionals="0" coveredstatements="16"/>
            </class>
            <class name="OrderableTest.TestClassRunnerIsOrderable.OrderMe">
               <metrics coveredelements="6" complexity="3" methods="3" testruns="6" statements="3" coveredconditionals="0" coveredmethods="3" elements="6" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="3" testpasses="6"/>
            </class>
            <class name="OrderableTest.TestClassRunnerIsOrderable.DoNotOrderMe">
               <metrics coveredelements="6" complexity="3" methods="3" testruns="3" statements="3" coveredconditionals="0" coveredmethods="3" elements="6" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="3" testpasses="3"/>
            </class>
            <class name="OrderableTest.TestClassRunnerIsOrderable.Enclosing">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="OrderableTest.TestClassRunnerIsOrderable.Enclosing.A">
               <metrics coveredelements="6" complexity="3" methods="3" testruns="6" statements="3" coveredconditionals="0" coveredmethods="3" elements="6" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="3" testpasses="6"/>
            </class>
            <class name="OrderableTest.TestClassRunnerIsOrderable.Enclosing.B">
               <metrics coveredelements="6" complexity="3" methods="3" testruns="6" statements="3" coveredconditionals="0" coveredmethods="3" elements="6" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="3" testpasses="6"/>
            </class>
            <class name="OrderableTest.TestOrderableClassRunnerIsSortable">
               <metrics coveredelements="10" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="10" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <class name="OrderableTest.TestOrderableClassRunnerIsSortable.OrderableRunner">
               <metrics coveredelements="8" coveredconditionals="0" complexity="5" coveredmethods="4" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="OrderableTest.TestOrderableClassRunnerIsSortable.OrderMe">
               <metrics coveredelements="6" complexity="3" methods="3" testruns="6" statements="3" coveredconditionals="0" coveredmethods="3" elements="6" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="3" testpasses="6"/>
            </class>
            <class name="OrderableTest.TestClassRunnerIsOrderableWithSuiteMethod">
               <metrics coveredelements="10" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="10" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <class name="OrderableTest.TestClassRunnerIsOrderableWithSuiteMethod.OrderMe">
               <metrics coveredelements="8" complexity="4" methods="4" testruns="6" statements="4" coveredconditionals="0" coveredmethods="4" elements="8" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="4" testpasses="6"/>
            </class>
            <class name="OrderableTest.UnOrderableRunnersAreHandledWithoutCrashing">
               <metrics coveredelements="3" complexity="1" methods="1" testruns="1" statements="2" coveredconditionals="0" coveredmethods="1" elements="3" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <class name="OrderableTest.UnOrderableRunnersAreHandledWithoutCrashing.UnOrderableRunner">
               <metrics coveredelements="4" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="4" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="OrderableTest.UnOrderableRunnersAreHandledWithoutCrashing.UnOrderable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="a() : void" num="29" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="31" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="b() : void" num="34" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="36" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="c() : void" num="39" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="41" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="a() : void" num="47" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="b() : void" num="52" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="c() : void" num="57" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="resetLog() : void" num="63" count="5" type="method"/>
            <line num="65" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="orderingForwardWorksOnTestClassRunner() : void" num="68" count="1" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="orderingBackwardWorksOnTestClassRunner() : void" num="77" count="1" type="method"/>
            <line num="79" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="orderingBackwardDoesNothingOnTestClassRunnerWithFixMethodOrder() : void" num="86" count="1" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="a() : void" num="98" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="100" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="b() : void" num="103" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="105" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="c() : void" num="108" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="110" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="a() : void" num="115" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="117" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="b() : void" num="120" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="122" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="c() : void" num="125" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="127" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="orderingForwardWorksOnSuite() : void" num="132" count="1" type="method"/>
            <line num="134" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line num="138" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="orderingBackwardWorksOnSuite() : void" num="141" count="1" type="method"/>
            <line num="143" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="OrderableRunner(Class&lt;?&gt;)" num="160" count="2" type="method"/>
            <line num="161" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(RunNotifier) : void" num="164" count="2" type="method"/>
            <line num="166" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescription() : Description" num="169" count="6" type="method"/>
            <line num="171" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="order(Orderer) : void" num="174" count="2" type="method"/>
            <line num="175" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="sort(Sorter) : void" num="178" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="a() : void" num="185" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="187" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="b() : void" num="190" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="192" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="c() : void" num="195" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="197" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="resetLog() : void" num="201" count="2" type="method"/>
            <line num="203" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="orderingorwardWorksOnTestClassRunner() : void" num="206" count="1" type="method"/>
            <line num="208" count="1" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="orderedBackwardWorksOnTestClassRunner() : void" num="215" count="1" type="method"/>
            <line num="217" count="1" type="stmt"/>
            <line num="220" count="1" type="stmt"/>
            <line num="221" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="a() : void" num="229" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="231" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="b() : void" num="234" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="236" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="c() : void" num="239" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="241" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="suite() : junit.framework.Test" num="244" count="2" type="method"/>
            <line num="245" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="resetLog() : void" num="249" count="2" type="method"/>
            <line num="251" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="orderingForwardWorksOnTestClassRunner() : void" num="254" count="1" type="method"/>
            <line num="256" count="1" type="stmt"/>
            <line num="258" count="1" type="stmt"/>
            <line num="259" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="orderingBackwardWorksOnTestClassRunner() : void" num="262" count="1" type="method"/>
            <line num="264" count="1" type="stmt"/>
            <line num="267" count="1" type="stmt"/>
            <line num="268" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="UnOrderableRunner(Class&lt;?&gt;)" num="274" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="getDescription() : Description" num="277" count="3" type="method"/>
            <line num="279" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(RunNotifier) : void" num="282" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="a() : void" num="289" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="unOrderablesAreHandledWithoutCrashing() : void" num="294" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="296" count="1" type="stmt"/>
            <line num="298" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/manipulation/ReverseAlphanumericOrdering.java" name="ReverseAlphanumericOrdering.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="2" loc="20" coveredmethods="2" methods="2" elements="4" classes="1" ncloc="12" statements="2" conditionals="0" coveredstatements="2"/>
            <class name="ReverseAlphanumericOrdering">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="ReverseAlphanumericOrdering()" num="13" count="13" type="method"/>
            <line num="14" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(Context) : Ordering" num="17" count="8" type="method"/>
            <line num="18" count="8" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/manipulation/ReverseAlphanumericSorter.java" name="ReverseAlphanumericSorter.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="16" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="9" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ReverseAlphanumericSorter">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="create(Ordering.Context) : Ordering" num="13" count="2" type="method"/>
            <line num="14" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/manipulation/SingleMethodTest.java" name="SingleMethodTest.java">
            <metrics coveredelements="47" coveredconditionals="0" complexity="27" loc="190" coveredmethods="19" methods="27" elements="56" classes="8" ncloc="155" statements="29" conditionals="0" coveredstatements="28"/>
            <class name="SingleMethodTest">
               <metrics coveredelements="32" complexity="10" methods="10" testruns="5" statements="24" coveredconditionals="0" coveredmethods="9" elements="34" testfailures="0" testduration="0.01" conditionals="0" coveredstatements="23" testpasses="5"/>
            </class>
            <class name="SingleMethodTest.OneTimeSetup">
               <metrics coveredelements="3" complexity="3" methods="3" testruns="1" statements="1" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="SingleMethodTest.ParameterizedOneTimeSetup">
               <metrics coveredelements="4" complexity="3" methods="3" testruns="1" statements="1" coveredconditionals="0" coveredmethods="3" elements="4" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="SingleMethodTest.ParameterizedOneTimeBeforeClass">
               <metrics coveredelements="6" complexity="4" methods="4" testruns="1" statements="2" coveredconditionals="0" coveredmethods="4" elements="6" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <class name="SingleMethodTest.TestOne">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="2" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SingleMethodTest.TestTwo">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="2" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SingleMethodTest.OneTwoSuite">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SingleMethodTest.HasSuiteMethod">
               <metrics coveredelements="2" coveredconditionals="0" complexity="3" coveredmethods="1" methods="3" elements="4" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="once() : void" num="31" count="1" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="one() : void" num="36" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="two() : void" num="40" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="oneTimeSetup() : void" num="45" count="1" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="params() : List&lt;Object[]&gt;" num="57" count="1" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ParameterizedOneTimeSetup(int)" num="62" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="one() : void" num="65" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="parameterizedFilterToSingleMethod() : void" num="70" count="1" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="params() : List&lt;Object[]&gt;" num="82" count="1" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ParameterizedOneTimeBeforeClass(int)" num="87" count="2" type="method"/>
            <line complexity="1" visibility="public" signature="once() : void" num="90" count="1" type="method"/>
            <line num="92" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="one() : void" num="95" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="parameterizedBeforeClass() : void" num="101" count="1" type="method"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="filteringAffectsPlan() : void" num="108" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="nonexistentMethodCreatesFailure() : void" num="114" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="116" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="filteringAwayEverythingThrowsException() : void" num="121" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldRun(Description) : boolean" num="125" count="2" type="method"/>
            <line num="127" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="describe() : String" num="130" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="a() : void" num="138" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="b() : void" num="142" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="a() : void" num="148" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="b() : void" num="152" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="eliminateUnnecessaryTreeBranches() : void" num="162" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="164" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="a() : void" num="172" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="b() : void" num="176" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="suite() : junit.framework.Test" num="180" count="1" type="method"/>
            <line num="181" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="classesWithSuiteMethodsAreFiltered() : void" num="185" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/manipulation/SortableTest.java" name="SortableTest.java">
            <metrics coveredelements="99" coveredconditionals="0" complexity="43" loc="302" coveredmethods="41" methods="43" elements="102" classes="15" ncloc="240" statements="59" conditionals="0" coveredstatements="58"/>
            <class name="SortableTest">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="SortableTest.TestClassRunnerIsSortable">
               <metrics coveredelements="22" coveredconditionals="0" complexity="6" coveredmethods="6" methods="6" elements="22" statements="16" conditionals="0" coveredstatements="16"/>
            </class>
            <class name="SortableTest.TestClassRunnerIsSortable.SortMe">
               <metrics coveredelements="6" complexity="3" methods="3" testruns="6" statements="3" coveredconditionals="0" coveredmethods="3" elements="6" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="3" testpasses="6"/>
            </class>
            <class name="SortableTest.TestClassRunnerIsSortable.DoNotSortMe">
               <metrics coveredelements="6" complexity="3" methods="3" testruns="3" statements="3" coveredconditionals="0" coveredmethods="3" elements="6" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="3" testpasses="3"/>
            </class>
            <class name="SortableTest.TestClassRunnerIsSortable.Enclosing">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SortableTest.TestClassRunnerIsSortable.Enclosing.A">
               <metrics coveredelements="6" complexity="3" methods="3" testruns="6" statements="3" coveredconditionals="0" coveredmethods="3" elements="6" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="3" testpasses="6"/>
            </class>
            <class name="SortableTest.TestClassRunnerIsSortable.Enclosing.B">
               <metrics coveredelements="6" complexity="3" methods="3" testruns="6" statements="3" coveredconditionals="0" coveredmethods="3" elements="6" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="3" testpasses="6"/>
            </class>
            <class name="SortableTest.TestClassRunnerIsSortableWithSuiteMethod">
               <metrics coveredelements="10" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="10" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <class name="SortableTest.TestClassRunnerIsSortableWithSuiteMethod.SortMe">
               <metrics coveredelements="8" complexity="4" methods="4" testruns="6" statements="4" coveredconditionals="0" coveredmethods="4" elements="8" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="4" testpasses="6"/>
            </class>
            <class name="SortableTest.UnsortableRunnersAreHandledWithoutCrashing">
               <metrics coveredelements="3" complexity="1" methods="1" testruns="1" statements="2" coveredconditionals="0" coveredmethods="1" elements="3" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <class name="SortableTest.UnsortableRunnersAreHandledWithoutCrashing.UnsortableRunner">
               <metrics coveredelements="4" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="4" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="SortableTest.UnsortableRunnersAreHandledWithoutCrashing.Unsortable">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SortableTest.TestOnlySortableClassRunnerIsSortable">
               <metrics coveredelements="10" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="10" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <class name="SortableTest.TestOnlySortableClassRunnerIsSortable.SortableRunner">
               <metrics coveredelements="8" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="SortableTest.TestOnlySortableClassRunnerIsSortable.SortMe">
               <metrics coveredelements="6" complexity="4" methods="4" testruns="6" statements="4" coveredconditionals="0" coveredmethods="3" elements="8" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="3" testpasses="6"/>
            </class>
            <line complexity="1" visibility="private" signature="forward() : Comparator&lt;Description&gt;" num="27" count="5" type="method"/>
            <line num="28" count="5" type="stmt"/>
            <line complexity="1" visibility="private" signature="backward() : Comparator&lt;Description&gt;" num="31" count="5" type="method"/>
            <line num="32" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="a() : void" num="39" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="41" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="b() : void" num="44" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="46" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="c() : void" num="49" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="51" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="a() : void" num="57" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="b() : void" num="62" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="c() : void" num="67" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="resetLog() : void" num="73" count="5" type="method"/>
            <line num="75" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="sortingForwardWorksOnTestClassRunner() : void" num="78" count="1" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="sortingBackwardWorksOnTestClassRunner() : void" num="86" count="1" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="sortingBackwardDoesNothingOnTestClassRunnerWithFixMethodOrder() : void" num="94" count="1" type="method"/>
            <line num="96" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="a() : void" num="105" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="107" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="b() : void" num="110" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="112" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="c() : void" num="115" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="117" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="a() : void" num="122" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="124" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="b() : void" num="127" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="129" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="c() : void" num="132" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="134" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="sortingForwardWorksOnSuite() : void" num="139" count="1" type="method"/>
            <line num="141" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="sortingBackwardWorksOnSuite() : void" num="147" count="1" type="method"/>
            <line num="149" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="a() : void" num="160" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="162" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="b() : void" num="165" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="167" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="c() : void" num="170" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="172" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="suite() : junit.framework.Test" num="175" count="2" type="method"/>
            <line num="176" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="resetLog() : void" num="180" count="2" type="method"/>
            <line num="182" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="sortingForwardWorksOnTestClassRunner() : void" num="185" count="1" type="method"/>
            <line num="187" count="1" type="stmt"/>
            <line num="189" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="sortingBackwardWorksOnTestClassRunner() : void" num="193" count="1" type="method"/>
            <line num="195" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="UnsortableRunner(Class&lt;?&gt;)" num="204" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="getDescription() : Description" num="207" count="3" type="method"/>
            <line num="209" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(RunNotifier) : void" num="212" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="a() : void" num="219" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="unsortablesAreHandledWithoutCrashing() : void" num="224" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="226" count="1" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="SortableRunner(Class&lt;?&gt;)" num="240" count="2" type="method"/>
            <line num="241" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(RunNotifier) : void" num="244" count="2" type="method"/>
            <line num="246" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescription() : Description" num="249" count="6" type="method"/>
            <line num="251" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="sort(Sorter) : void" num="254" count="2" type="method"/>
            <line num="255" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="a() : void" num="261" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="263" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="b() : void" num="266" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="268" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="c() : void" num="271" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="273" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="suite() : junit.framework.Test" num="276" count="0" type="method"/>
            <line num="277" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="resetLog() : void" num="281" count="2" type="method"/>
            <line num="283" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="sortingForwardWorksOnTestClassRunner() : void" num="286" count="1" type="method"/>
            <line num="288" count="1" type="stmt"/>
            <line num="290" count="1" type="stmt"/>
            <line num="291" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="sortingBackwardWorksOnTestClassRunner() : void" num="294" count="1" type="method"/>
            <line num="296" count="1" type="stmt"/>
            <line num="298" count="1" type="stmt"/>
            <line num="299" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.junit.tests.experimental.theories.internal">
         <metrics coveredelements="102" complexity="52" loc="474" methods="52" classes="15" statements="79" coveredconditionals="0" coveredmethods="30" elements="131" ncloc="372" files="4" conditionals="0" coveredstatements="72"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/theories/internal/AllMembersSupplierTest.java" name="AllMembersSupplierTest.java">
            <metrics coveredelements="35" coveredconditionals="0" complexity="25" loc="209" coveredmethods="12" methods="25" elements="53" classes="11" ncloc="166" statements="28" conditionals="0" coveredstatements="23"/>
            <class name="AllMembersSupplierTest">
               <metrics coveredelements="31" complexity="11" methods="11" testruns="10" statements="24" coveredconditionals="0" coveredmethods="10" elements="35" testfailures="1" testduration="0.010000000000000002" conditionals="0" coveredstatements="21" testpasses="9"/>
            </class>
            <class name="AllMembersSupplierTest.HasDataPointsArrayField">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="AllMembersSupplierTest.HasDataPointsArrayWithMatchingButInaccurateTypes">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="AllMembersSupplierTest.HasDataPointMethodWithOverlyGeneralTypes">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="AllMembersSupplierTest.HasDataPointsWithObjectParameter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="AllMembersSupplierTest.HasDataPointsFieldWithNullValue">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="AllMembersSupplierTest.HasDataPointsMethodWithNullValue">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="AllMembersSupplierTest.HasFailingDataPointsArrayMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="AllMembersSupplierTest.HasDataPointsListField">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="AllMembersSupplierTest.HasDataPointsListMethod">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="AllMembersSupplierTest.HasDataPointsListFieldWithOverlyGenericTypes">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="theory(String) : void" num="31" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="dataPointsArrayShouldBeRecognized() : void" num="36" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="theory(Integer) : void" num="48" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="dataPointsArrayShouldBeRecognizedOnValueTypeNotFieldType() : void" num="53" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="object() : Integer" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="theory(Object) : void" num="67" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="dataPointMethodShouldBeRecognizedForOverlyGeneralParameters() : void" num="72" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="theory(Object) : void" num="84" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="dataPointsAnnotationMeansTreatAsArrayOnly() : void" num="89" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="HasDataPointsFieldWithNullValue(Object)" num="104" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="dataPointsArrayFieldMayContainNullValue() : void" num="108" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="110" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getObjects() : Integer[]" num="116" count="1" type="method"/>
            <line num="118" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="HasDataPointsMethodWithNullValue(Integer)" num="121" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="dataPointsArrayMethodMayContainNullValue() : void" num="125" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="127" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="objects() : Object[]" num="133" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="HasFailingDataPointsArrayMethod(Object)" num="138" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="allMembersFailsOnFailingDataPointsArrayMethod() : void" num="142" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="allMemberValuesFor(Class&lt;?&gt;,Class&lt;?&gt;) : List&lt;PotentialAssignment&gt;" num="149" count="3" type="method"/>
            <line num="151" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="theory(String) : void" num="161" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="dataPointsCollectionFieldsShouldBeRecognized() : void" num="166" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="168" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getList() : List&lt;String&gt;" num="175" count="1" type="method"/>
            <line num="177" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="theory(String) : void" num="180" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="dataPointsCollectionMethodShouldBeRecognized() : void" num="185" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="187" count="1" type="stmt"/>
            <line num="190" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="theory(String) : void" num="197" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="dataPointsCollectionShouldBeRecognizedIgnoringStrangeTypes() : void" num="202" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="204" count="1" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/theories/internal/AllTheoriesInternalTests.java" name="AllTheoriesInternalTests.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="14" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AllTheoriesInternalTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/theories/internal/ParameterizedAssertionErrorTest.java" name="ParameterizedAssertionErrorTest.java">
            <metrics coveredelements="21" coveredconditionals="0" complexity="8" loc="95" coveredmethods="8" methods="8" elements="21" classes="1" ncloc="79" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="ParameterizedAssertionErrorTest">
               <metrics coveredelements="21" complexity="8" methods="8" testruns="1" statements="13" coveredconditionals="0" coveredmethods="8" elements="21" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="13" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="equalParameterizedAssertionErrorsHaveSameToString(ParameterizedAssertionError,ParameterizedAssertionError) : void" num="40" count="9" type="method"/>
            <line num="43" count="9" type="stmt"/>
            <line num="44" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="differentParameterizedAssertionErrorsHaveDifferentToStrings(ParameterizedAssertionError,ParameterizedAssertionError) : void" num="47" count="9" type="method"/>
            <line num="50" count="9" type="stmt"/>
            <line num="51" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="equalsReturnsTrue(Throwable,String,Object[]) : void" num="54" count="4" type="method"/>
            <line num="57" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="sameHashCodeWhenEquals(Throwable,String,Object[]) : void" num="62" count="4" type="method"/>
            <line num="65" count="4" type="stmt"/>
            <line num="67" count="4" type="stmt"/>
            <line num="69" count="4" type="stmt"/>
            <line num="71" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="buildParameterizedAssertionError(String,String) : void" num="74" count="1" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="isNotEqualToNull(ParameterizedAssertionError) : void" num="81" count="3" type="method"/>
            <line num="83" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="canJoinWhenToStringFails() : void" num="86" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="89" count="1" type="method"/>
            <line num="91" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/theories/internal/SpecificDataPointsSupplierTest.java" name="SpecificDataPointsSupplierTest.java">
            <metrics coveredelements="46" coveredconditionals="0" complexity="19" loc="156" coveredmethods="10" methods="19" elements="57" classes="2" ncloc="115" statements="38" conditionals="0" coveredstatements="36"/>
            <class name="SpecificDataPointsSupplierTest">
               <metrics coveredelements="42" complexity="15" methods="15" testruns="6" statements="34" coveredconditionals="0" coveredmethods="8" elements="49" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="34" testpasses="6"/>
            </class>
            <class name="SpecificDataPointsSupplierTest.TestClassWithNamedDataPoints">
               <metrics coveredelements="4" coveredconditionals="0" complexity="4" coveredmethods="2" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="getValues() : String[]" num="31" count="2" type="method"/>
            <line num="33" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSingleValue() : String" num="42" count="2" type="method"/>
            <line num="44" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getSingleOtherValue() : String" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getOtherValues() : String[]" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldReturnOnlyTheNamedDataPoints() : void" num="58" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldReturnOnlyTheNamedFieldDataPoints() : void" num="69" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldReturnOnlyTheNamedMethodDataPoints() : void" num="80" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldReturnOnlyTheNamedSingleFieldDataPoints() : void" num="91" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="93" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldReturnOnlyTheNamedSingleMethodDataPoints() : void" num="102" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="104" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldReturnNothingIfTheNamedDataPointsAreMissing() : void" num="113" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="115" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="getStringValuesFromAssignments(List&lt;PotentialAssignment&gt;) : List&lt;String&gt;" num="123" count="6" type="method"/>
            <line num="124" count="6" type="stmt"/>
            <line num="125" count="6" type="stmt"/>
            <line num="126" count="8" type="stmt"/>
            <line num="128" count="6" type="stmt"/>
            <line complexity="1" visibility="private" signature="signature(String) : ParameterSignature" num="131" count="6" type="method"/>
            <line num="132" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="methodWantingAnyString(String) : void" num="135" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="methodWantingNamedFieldString(String) : void" num="138" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="methodWantingNamedMethodString(String) : void" num="141" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="methodWantingNamedSingleFieldString(String) : void" num="144" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="methodWantingNamedSingleMethodString(String) : void" num="147" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="methodWantingAllNamedStrings(String) : void" num="150" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="methodWantingWrongNamedString(String) : void" num="153" count="0" type="method"/>
         </file>
      </package>
      <package name="org.junit.tests.listening">
         <metrics coveredelements="93" complexity="30" loc="300" methods="30" classes="18" statements="66" coveredconditionals="0" coveredmethods="28" elements="96" ncloc="250" files="6" conditionals="0" coveredstatements="65"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/listening/AllListeningTests.java" name="AllListeningTests.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="16" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="14" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AllListeningTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/listening/ListenerTest.java" name="ListenerTest.java">
            <metrics coveredelements="12" coveredconditionals="0" complexity="4" loc="38" coveredmethods="4" methods="4" elements="12" classes="2" ncloc="33" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="ListenerTest">
               <metrics coveredelements="11" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="11" statements="8" conditionals="0" coveredstatements="8"/>
            </class>
            <class name="ListenerTest.OneTest">
               <metrics coveredelements="1" complexity="1" methods="1" testruns="1" statements="0" coveredconditionals="0" coveredmethods="1" elements="1" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="nothing() : void" num="14" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="notifyListenersInTheOrderInWhichTheyAreAdded() : void" num="19" count="1" type="method"/>
            <line num="21" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunStarted(Description) : void" num="24" count="1" type="method"/>
            <line num="26" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunStarted(Description) : void" num="30" count="1" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/listening/RunnerTest.java" name="RunnerTest.java">
            <metrics coveredelements="26" coveredconditionals="0" complexity="8" loc="75" coveredmethods="8" methods="8" elements="26" classes="5" ncloc="62" statements="18" conditionals="0" coveredstatements="18"/>
            <class name="RunnerTest">
               <metrics coveredelements="21" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="21" statements="17" conditionals="0" coveredstatements="17"/>
            </class>
            <class name="RunnerTest.MyListener">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="RunnerTest.Example">
               <metrics coveredelements="1" complexity="1" methods="1" testruns="1" statements="0" coveredconditionals="0" coveredmethods="1" elements="1" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="1"/>
            </class>
            <class name="RunnerTest.ExampleTest">
               <metrics coveredelements="1" complexity="1" methods="1" testruns="1" statements="0" coveredconditionals="0" coveredmethods="1" elements="1" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="1"/>
            </class>
            <class name="RunnerTest.NewExample">
               <metrics coveredelements="1" complexity="1" methods="1" testruns="1" statements="0" coveredconditionals="0" coveredmethods="1" elements="1" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testRunStarted(Description) : void" num="20" count="3" type="method"/>
            <line num="22" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="empty() : void" num="27" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="newTestCount() : void" num="32" count="1" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmpty() : void" num="42" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="oldTestCount() : void" num="46" count="1" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="empty() : void" num="56" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="testFinished() : void" num="61" count="1" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFinished(Description) : void" num="66" count="1" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/listening/TestListenerTest.java" name="TestListenerTest.java">
            <metrics coveredelements="24" coveredconditionals="0" complexity="6" loc="65" coveredmethods="6" methods="6" elements="24" classes="4" ncloc="54" statements="18" conditionals="0" coveredstatements="18"/>
            <class name="TestListenerTest">
               <metrics coveredelements="18" complexity="3" methods="3" testruns="1" statements="15" coveredconditionals="0" coveredmethods="3" elements="18" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="15" testpasses="1"/>
            </class>
            <class name="TestListenerTest.ErrorListener">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="TestListenerTest.OneTest">
               <metrics coveredelements="1" complexity="1" methods="1" testruns="3" statements="0" coveredconditionals="0" coveredmethods="1" elements="1" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="3"/>
            </class>
            <class name="TestListenerTest.ExceptionListener">
               <metrics coveredelements="3" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="public" signature="testRunStarted(Description) : void" num="18" count="1" type="method"/>
            <line num="20" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="nothing() : void" num="25" testsuccess="true" count="3" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="failingListener() : void" num="30" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunStarted(Description) : void" num="38" count="1" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="reportsFailureOfListener() : void" num="45" count="1" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="freshResultEachTime() : void" num="58" count="1" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/listening/TextListenerTest.java" name="TextListenerTest.java">
            <metrics coveredelements="24" coveredconditionals="0" complexity="8" loc="73" coveredmethods="7" methods="8" elements="26" classes="4" ncloc="60" statements="18" conditionals="0" coveredstatements="17"/>
            <class name="TextListenerTest">
               <metrics coveredelements="22" coveredconditionals="0" complexity="5" coveredmethods="5" methods="5" elements="22" statements="17" conditionals="0" coveredstatements="17"/>
            </class>
            <class name="TextListenerTest.OneTest">
               <metrics coveredelements="1" complexity="1" methods="1" testruns="1" statements="0" coveredconditionals="0" coveredmethods="1" elements="1" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="1"/>
            </class>
            <class name="TextListenerTest.ErrorTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="TextListenerTest.Time">
               <metrics coveredelements="1" complexity="1" methods="1" testruns="1" statements="0" coveredconditionals="0" coveredmethods="1" elements="1" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="setUp() : void" num="22" count="3" type="method"/>
            <line num="24" count="3" type="stmt"/>
            <line num="25" count="3" type="stmt"/>
            <line num="26" count="3" type="stmt"/>
            <line num="27" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="one() : void" num="31" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="testSuccess() : void" num="36" count="1" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="error() : void" num="43" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testError() : void" num="49" count="1" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="time() : void" num="56" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="testTime() : void" num="61" count="1" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="convert(String) : String" num="67" count="5" type="method"/>
            <line num="68" count="5" type="stmt"/>
            <line num="69" count="5" type="stmt"/>
            <line num="70" count="5" type="stmt"/>
            <line num="71" count="5" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/listening/UserStopTest.java" name="UserStopTest.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="4" loc="33" coveredmethods="3" methods="4" elements="8" classes="2" ncloc="27" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="UserStopTest">
               <metrics coveredelements="7" complexity="3" methods="3" testruns="2" statements="4" coveredconditionals="0" coveredmethods="3" elements="7" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="4" testpasses="2"/>
            </class>
            <class name="UserStopTest.OneTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="createNotifier() : void" num="12" count="2" type="method"/>
            <line num="14" count="2" type="stmt"/>
            <line num="15" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="userStop() : void" num="18" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="20" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="foo() : void" num="24" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="stopClassRunner() : void" num="29" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="31" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.junit.tests.assertion">
         <metrics coveredelements="465" complexity="156" loc="1215" methods="115" classes="7" statements="391" coveredconditionals="0" coveredmethods="115" elements="506" ncloc="1019" files="4" conditionals="0" coveredstatements="350"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/assertion/AllAssertionTests.java" name="AllAssertionTests.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="14" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AllAssertionTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/assertion/AssertionTest.java" name="AssertionTest.java">
            <metrics coveredelements="410" coveredconditionals="0" complexity="141" loc="1005" coveredmethods="105" methods="105" elements="446" classes="3" ncloc="864" statements="341" conditionals="0" coveredstatements="305"/>
            <class name="AssertionTest">
               <metrics coveredelements="408" complexity="140" methods="104" testruns="98" statements="340" coveredconditionals="0" coveredmethods="104" elements="444" testfailures="0" testduration="0.017000000000000005" conditionals="0" coveredstatements="304" testpasses="98"/>
            </class>
            <class name="AssertionTest.NullToString">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="AssertionTest.NestedException">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="fails() : void" num="39" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="failWithNoMessageToString() : void" num="44" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="failWithMessageToString() : void" num="55" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="arraysNotEqual() : void" num="66" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="arraysNotEqualWithMessage() : void" num="74" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="arraysExpectedNullMessage() : void" num="83" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="arraysActualNullMessage() : void" num="94" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="arraysDifferentLengthDifferingAtStartMessage() : void" num="105" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="107" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="arraysDifferentLengthDifferingAtEndMessage() : void" num="114" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="116" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="arraysDifferentLengthDifferingAtEndAndExpectedArrayLongerMessage() : void" num="123" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="125" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="arraysElementsDiffer() : void" num="132" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="134" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="arraysDifferAtElement0nullMessage() : void" num="141" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="143" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="arraysDifferAtElement1nullMessage() : void" num="150" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="152" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="arraysDifferAtElement0withMessage() : void" num="159" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="161" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="arraysDifferAtElement1withMessage() : void" num="169" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="171" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="multiDimensionalArraysAreEqual() : void" num="179" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="181" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="multiDimensionalIntArraysAreEqual() : void" num="184" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="186" count="1" type="stmt"/>
            <line num="187" count="1" type="stmt"/>
            <line num="188" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="oneDimensionalPrimitiveArraysAreEqual() : void" num="191" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="193" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line num="198" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="oneDimensionalDoubleArraysAreNotEqual() : void" num="203" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="205" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="oneDimensionalFloatArraysAreNotEqual() : void" num="208" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="210" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="oneDimensionalBooleanArraysAreNotEqual() : void" num="213" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="215" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="IntegerDoesNotEqualLong() : void" num="218" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="220" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="intsEqualLongs() : void" num="223" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="225" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="multiDimensionalArraysDeclaredAsOneDimensionalAreEqual() : void" num="228" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="230" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="multiDimensionalArraysAreNotEqual() : void" num="233" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="235" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="multiDimensionalArraysAreNotEqualNoMessage() : void" num="242" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="244" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="twoDimensionalArraysDifferentOuterLengthNotEqual() : void" num="250" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="252" count="1" type="stmt"/>
            <line num="257" count="1" type="stmt"/>
            <line num="262" count="1" type="stmt"/>
            <line num="267" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="primitiveArraysConvertedToStringCorrectly() : void" num="274" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="276" count="1" type="stmt"/>
            <line num="281" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="twoDimensionalArraysConvertedToStringCorrectly() : void" num="288" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="290" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="twoDimensionalArraysDifferentInnerLengthNotEqual() : void" num="297" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="299" count="1" type="stmt"/>
            <line num="304" count="1" type="stmt"/>
            <line num="309" count="1" type="stmt"/>
            <line num="314" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="assertArrayEqualsFailure(Object[],Object[],String) : void" num="321" count="4" type="method"/>
            <line num="322" count="4" type="stmt"/>
            <line num="323" count="4" type="stmt"/>
            <line num="325" count="4" type="stmt"/>
            <line num="326" count="4" type="stmt"/>
            <line num="328" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="assertArrayEqualsFailure(String,Object[],Object[],String) : void" num="331" count="19" type="method"/>
            <line num="332" count="19" type="stmt"/>
            <line num="333" count="19" type="stmt"/>
            <line num="335" count="19" type="stmt"/>
            <line num="336" count="19" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="multiDimensionalArraysDifferentLengthMessage() : void" num="341" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="343" count="1" type="stmt"/>
            <line num="344" count="1" type="stmt"/>
            <line num="346" count="1" type="stmt"/>
            <line num="347" count="1" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="multiDimensionalArraysDifferentLengthNoMessage() : void" num="353" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="355" count="1" type="stmt"/>
            <line num="356" count="1" type="stmt"/>
            <line num="358" count="1" type="stmt"/>
            <line num="359" count="1" type="stmt"/>
            <line num="362" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="arraysWithNullElementEqual() : void" num="365" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="367" count="1" type="stmt"/>
            <line num="368" count="1" type="stmt"/>
            <line num="369" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="stringsDifferWithUserMessage() : void" num="372" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="374" count="1" type="stmt"/>
            <line num="375" count="1" type="stmt"/>
            <line num="377" count="1" type="stmt"/>
            <line num="378" count="1" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="arraysEqual() : void" num="383" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="385" count="1" type="stmt"/>
            <line num="386" count="1" type="stmt"/>
            <line num="387" count="1" type="stmt"/>
            <line num="388" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="arraysEqualWithMessage() : void" num="391" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="393" count="1" type="stmt"/>
            <line num="394" count="1" type="stmt"/>
            <line num="395" count="1" type="stmt"/>
            <line num="396" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals() : void" num="399" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="401" count="1" type="stmt"/>
            <line num="402" count="1" type="stmt"/>
            <line num="403" count="1" type="stmt"/>
            <line num="404" count="1" type="stmt"/>
            <line num="405" count="1" type="stmt"/>
            <line num="406" count="1" type="stmt"/>
            <line num="407" count="1" type="stmt"/>
            <line num="408" count="1" type="stmt"/>
            <line num="409" count="1" type="stmt"/>
            <line num="410" count="1" type="stmt"/>
            <line num="411" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="notEqualsObjectWithNull() : void" num="414" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="416" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="notEqualsNullWithObject() : void" num="419" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="421" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="notEqualsObjectWithNullWithMessage() : void" num="424" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="426" count="1" type="stmt"/>
            <line num="427" count="1" type="stmt"/>
            <line num="428" count="1" type="stmt"/>
            <line num="430" count="1" type="stmt"/>
            <line num="431" count="1" type="stmt"/>
            <line num="433" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="notEqualsNullWithObjectWithMessage() : void" num="436" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="438" count="1" type="stmt"/>
            <line num="439" count="1" type="stmt"/>
            <line num="440" count="1" type="stmt"/>
            <line num="442" count="1" type="stmt"/>
            <line num="443" count="1" type="stmt"/>
            <line num="445" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="objectsNotEquals() : void" num="448" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="450" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="stringsNotEqual() : void" num="453" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="455" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="booleansNotEqual() : void" num="458" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="460" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="bytesNotEqual() : void" num="463" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="465" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="charsNotEqual() : void" num="468" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="470" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shortsNotEqual() : void" num="473" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="475" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="intsNotEqual() : void" num="478" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="480" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="longsNotEqual() : void" num="483" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="485" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="floatsNotEqual() : void" num="488" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="490" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="floatsNotEqualWithoutDelta() : void" num="493" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="496" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="floatsNotDoublesInArrays() : void" num="499" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="501" count="1" type="stmt"/>
            <line num="502" count="1" type="stmt"/>
            <line num="503" count="1" type="stmt"/>
            <line num="504" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="bigDecimalsNotEqual() : void" num="507" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="509" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="doublesNotEqual() : void" num="513" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="515" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="naNsAreEqual() : void" num="518" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="520" count="1" type="stmt"/>
            <line num="521" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="nullNullmessage() : void" num="524" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="527" count="1" type="stmt"/>
            <line num="528" count="1" type="stmt"/>
            <line num="530" count="1" type="stmt"/>
            <line num="531" count="1" type="stmt"/>
            <line num="533" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="nullWithMessage() : void" num="536" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="539" count="1" type="stmt"/>
            <line num="540" count="1" type="stmt"/>
            <line num="542" count="1" type="stmt"/>
            <line num="543" count="1" type="stmt"/>
            <line num="545" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="same() : void" num="548" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="550" count="1" type="stmt"/>
            <line num="551" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="notSame() : void" num="554" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="556" count="1" type="stmt"/>
            <line num="557" count="1" type="stmt"/>
            <line num="558" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="objectsNotSame() : void" num="561" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="563" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="objectsAreSame() : void" num="566" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="568" count="1" type="stmt"/>
            <line num="569" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="sameWithMessage() : void" num="572" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="574" count="1" type="stmt"/>
            <line num="575" count="1" type="stmt"/>
            <line num="577" count="1" type="stmt"/>
            <line num="579" count="1" type="stmt"/>
            <line num="581" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="sameNullMessage() : void" num="584" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="586" count="1" type="stmt"/>
            <line num="587" count="1" type="stmt"/>
            <line num="589" count="1" type="stmt"/>
            <line num="590" count="1" type="stmt"/>
            <line num="592" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="notSameWithMessage() : void" num="595" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="597" count="1" type="stmt"/>
            <line num="598" count="1" type="stmt"/>
            <line num="599" count="1" type="stmt"/>
            <line num="601" count="1" type="stmt"/>
            <line num="602" count="1" type="stmt"/>
            <line num="604" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="notSameNullMessage() : void" num="607" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="609" count="1" type="stmt"/>
            <line num="610" count="1" type="stmt"/>
            <line num="611" count="1" type="stmt"/>
            <line num="613" count="1" type="stmt"/>
            <line num="614" count="1" type="stmt"/>
            <line num="616" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="nullMessage() : void" num="619" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="621" count="1" type="stmt"/>
            <line num="622" count="1" type="stmt"/>
            <line num="625" count="1" type="stmt"/>
            <line num="626" count="1" type="stmt"/>
            <line num="628" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="nullMessageDisappearsWithStringAssertEquals() : void" num="631" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="633" count="1" type="stmt"/>
            <line num="634" count="1" type="stmt"/>
            <line num="636" count="1" type="stmt"/>
            <line num="637" count="1" type="stmt"/>
            <line num="639" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="nullMessageDisappearsWithAssertEquals() : void" num="642" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="644" count="1" type="stmt"/>
            <line num="645" count="1" type="stmt"/>
            <line num="647" count="1" type="stmt"/>
            <line num="648" count="1" type="stmt"/>
            <line num="650" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="arraysDeclaredAsObjectAreComparedAsObjects() : void" num="653" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="655" count="1" type="stmt"/>
            <line num="656" count="1" type="stmt"/>
            <line num="657" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="implicitTypecastEquality() : void" num="660" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="662" count="1" type="stmt"/>
            <line num="663" count="1" type="stmt"/>
            <line num="664" count="1" type="stmt"/>
            <line num="665" count="1" type="stmt"/>
            <line num="666" count="1" type="stmt"/>
            <line num="667" count="1" type="stmt"/>
            <line num="669" count="1" type="stmt"/>
            <line num="670" count="1" type="stmt"/>
            <line num="671" count="1" type="stmt"/>
            <line num="672" count="1" type="stmt"/>
            <line num="673" count="1" type="stmt"/>
            <line num="674" count="1" type="stmt"/>
            <line num="675" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="errorMessageDistinguishesDifferentValuesWithSameToString() : void" num="678" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="680" count="1" type="stmt"/>
            <line num="681" count="1" type="stmt"/>
            <line num="683" count="1" type="stmt"/>
            <line num="684" count="1" type="stmt"/>
            <line num="686" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="assertThatIncludesDescriptionOfTestedValueInErrorMessage() : void" num="689" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="691" count="1" type="stmt"/>
            <line num="692" count="1" type="stmt"/>
            <line num="694" count="1" type="stmt"/>
            <line num="696" count="1" type="stmt"/>
            <line num="697" count="1" type="stmt"/>
            <line num="699" count="1" type="stmt"/>
            <line num="700" count="1" type="stmt"/>
            <line num="702" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="assertThatIncludesAdvancedMismatch() : void" num="705" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="707" count="1" type="stmt"/>
            <line num="709" count="1" type="stmt"/>
            <line num="710" count="1" type="stmt"/>
            <line num="712" count="1" type="stmt"/>
            <line num="713" count="1" type="stmt"/>
            <line num="715" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="assertThatDescriptionCanBeElided() : void" num="718" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="720" count="1" type="stmt"/>
            <line num="721" count="1" type="stmt"/>
            <line num="723" count="1" type="stmt"/>
            <line num="725" count="1" type="stmt"/>
            <line num="726" count="1" type="stmt"/>
            <line num="728" count="1" type="stmt"/>
            <line num="729" count="1" type="stmt"/>
            <line num="731" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="nullAndStringNullPrintCorrectError() : void" num="734" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="736" count="1" type="stmt"/>
            <line num="737" count="1" type="stmt"/>
            <line num="739" count="1" type="stmt"/>
            <line num="740" count="1" type="stmt"/>
            <line num="742" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="stringNullAndNullWorksToo() : void" num="745" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="747" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="751" count="2" type="method"/>
            <line num="753" count="2" type="stmt"/>
            <line complexity="2" visibility="public" signature="nullToString() : void" num="757" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="759" count="1" type="stmt"/>
            <line num="760" count="1" type="stmt"/>
            <line num="762" count="1" type="stmt"/>
            <line num="765" count="1" type="stmt"/>
            <line num="768" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compareBigDecimalAndInteger() : void" num="771" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="773" count="1" type="stmt"/>
            <line num="774" count="1" type="stmt"/>
            <line num="775" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="sameObjectIsNotEqual() : void" num="778" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="780" count="1" type="stmt"/>
            <line num="781" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="objectsWithDifferentReferencesAreNotEqual() : void" num="784" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="786" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="assertNotEqualsIncludesCorrectMessage() : void" num="789" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="791" count="1" type="stmt"/>
            <line num="792" count="1" type="stmt"/>
            <line num="793" count="1" type="stmt"/>
            <line num="795" count="1" type="stmt"/>
            <line num="796" count="1" type="stmt"/>
            <line num="798" count="1" type="stmt"/>
            <line num="799" count="1" type="stmt"/>
            <line num="802" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="assertNotEqualsIncludesTheValueBeingTested() : void" num="805" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="807" count="1" type="stmt"/>
            <line num="808" count="1" type="stmt"/>
            <line num="810" count="1" type="stmt"/>
            <line num="811" count="1" type="stmt"/>
            <line num="813" count="1" type="stmt"/>
            <line num="814" count="1" type="stmt"/>
            <line num="817" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertNotEqualsWorksWithPrimitiveTypes() : void" num="820" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="822" count="1" type="stmt"/>
            <line num="823" count="1" type="stmt"/>
            <line num="824" count="1" type="stmt"/>
            <line num="825" count="1" type="stmt"/>
            <line num="826" count="1" type="stmt"/>
            <line num="827" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertNotEqualsConsidersDeltaCorrectly() : void" num="830" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="832" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertNotEqualsConsidersFloatDeltaCorrectly() : void" num="835" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="837" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertNotEqualsIgnoresDeltaOnNaN() : void" num="840" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="842" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertNotEqualsIgnoresFloatDeltaOnNaN() : void" num="845" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="847" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertThrowsRequiresAnExceptionToBeThrown() : void" num="850" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="852" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="assertThrowsIncludesAnInformativeDefaultMessage() : void" num="855" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="857" count="1" type="stmt"/>
            <line num="858" count="1" type="stmt"/>
            <line num="860" count="1" type="stmt"/>
            <line num="861" count="1" type="stmt"/>
            <line num="863" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="assertThrowsIncludesTheSpecifiedMessage() : void" num="866" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="868" count="1" type="stmt"/>
            <line num="869" count="1" type="stmt"/>
            <line num="871" count="1" type="stmt"/>
            <line num="874" count="1" type="stmt"/>
            <line num="876" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertThrowsReturnsTheSameObjectThrown() : void" num="879" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="881" count="1" type="stmt"/>
            <line num="883" count="1" type="stmt"/>
            <line num="885" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertThrowsDetectsTypeMismatchesViaExplicitTypeHint() : void" num="888" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="890" count="1" type="stmt"/>
            <line num="892" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="assertThrowsWrapsAndPropagatesUnexpectedExceptions() : void" num="895" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="897" count="1" type="stmt"/>
            <line num="899" count="1" type="stmt"/>
            <line num="900" count="1" type="stmt"/>
            <line num="902" count="1" type="stmt"/>
            <line num="903" count="1" type="stmt"/>
            <line num="904" count="1" type="stmt"/>
            <line num="906" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="assertThrowsSuppliesACoherentErrorMessageUponTypeMismatch() : void" num="909" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="911" count="1" type="stmt"/>
            <line num="913" count="1" type="stmt"/>
            <line num="914" count="1" type="stmt"/>
            <line num="916" count="1" type="stmt"/>
            <line num="918" count="1" type="stmt"/>
            <line num="919" count="1" type="stmt"/>
            <line num="921" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="assertThrowsSuppliesTheSpecifiedMessageUponTypeMismatch() : void" num="924" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="926" count="1" type="stmt"/>
            <line num="928" count="1" type="stmt"/>
            <line num="929" count="1" type="stmt"/>
            <line num="931" count="1" type="stmt"/>
            <line num="933" count="1" type="stmt"/>
            <line num="934" count="1" type="stmt"/>
            <line num="936" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="assertThrowsUsesCanonicalNameUponTypeMismatch() : void" num="939" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="941" count="1" type="stmt"/>
            <line num="943" count="1" type="stmt"/>
            <line num="944" count="1" type="stmt"/>
            <line num="946" count="1" type="stmt"/>
            <line num="950" count="1" type="stmt"/>
            <line num="951" count="1" type="stmt"/>
            <line num="953" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="assertThrowsUsesNameUponTypeMismatchWithAnonymousClass() : void" num="956" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="958" count="1" type="stmt"/>
            <line num="961" count="1" type="stmt"/>
            <line num="962" count="1" type="stmt"/>
            <line num="964" count="1" type="stmt"/>
            <line num="968" count="1" type="stmt"/>
            <line num="969" count="1" type="stmt"/>
            <line num="971" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="assertThrowsUsesCanonicalNameWhenRequiredExceptionNotThrown() : void" num="974" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="976" count="1" type="stmt"/>
            <line num="977" count="1" type="stmt"/>
            <line num="979" count="1" type="stmt"/>
            <line num="982" count="1" type="stmt"/>
            <line num="984" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="nonThrowingRunnable() : ThrowingRunnable" num="991" count="4" type="method"/>
            <line num="992" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="993" count="4" type="method"/>
            <line complexity="1" visibility="private" signature="throwingRunnable(Throwable) : ThrowingRunnable" num="998" count="7" type="method"/>
            <line num="999" count="7" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="1000" count="7" type="method"/>
            <line num="1001" count="7" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/assertion/ComparisonFailureTest.java" name="ComparisonFailureTest.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="3" loc="78" coveredmethods="3" methods="3" elements="9" classes="1" ncloc="45" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="ComparisonFailureTest">
               <metrics coveredelements="9" complexity="3" methods="3" testruns="7" statements="6" coveredconditionals="0" coveredmethods="3" elements="9" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="6" testpasses="7"/>
            </class>
            <line complexity="1" visibility="public" signature="ComparisonFailureTest(String,String,String)" num="19" count="12" type="method"/>
            <line num="20" count="12" type="stmt"/>
            <line num="21" count="12" type="stmt"/>
            <line num="22" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="data() : Collection&lt;Object[]&gt;" num="25" count="2" type="method"/>
            <line num="27" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="compactFailureMessage() : void" num="72" count="12" type="method"/>
            <line num="74" count="12" type="stmt"/>
            <line num="75" count="12" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/assertion/MultipleFailureExceptionTest.java" name="MultipleFailureExceptionTest.java">
            <metrics coveredelements="46" coveredconditionals="0" complexity="12" loc="118" coveredmethods="7" methods="7" elements="51" classes="2" ncloc="98" statements="44" conditionals="0" coveredstatements="39"/>
            <class name="MultipleFailureExceptionTest">
               <metrics coveredelements="44" complexity="11" methods="6" testruns="6" statements="43" coveredconditionals="0" coveredmethods="6" elements="49" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="38" testpasses="6"/>
            </class>
            <class name="MultipleFailureExceptionTest.ExpectedException">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="assertEmptyDoesNotThrowForEmptyList() : void" num="31" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="assertEmptyRethrowsSingleRuntimeException() : void" num="36" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="assertEmptyRethrowsSingleError() : void" num="48" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="assertEmptyThrowsMultipleFailureExceptionForManyThrowables() : void" num="60" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="assertEmptyErrorListConstructorFailure() : void" num="77" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="assertEmptyWrapsAssumptionFailuresForManyThrowables() : void" num="88" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ExpectedException(String)" num="114" count="2" type="method"/>
            <line num="115" count="2" type="stmt"/>
         </file>
      </package>
      <package name="org.junit.tests.experimental.theories">
         <metrics coveredelements="62" complexity="25" loc="275" methods="25" classes="7" statements="45" coveredconditionals="0" coveredmethods="18" elements="70" ncloc="216" files="6" conditionals="0" coveredstatements="44"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/theories/AllTheoriesTests.java" name="AllTheoriesTests.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="19" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="17" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AllTheoriesTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/theories/AssumingInTheoriesTest.java" name="AssumingInTheoriesTest.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="3" loc="42" coveredmethods="2" methods="3" elements="7" classes="2" ncloc="31" statements="4" conditionals="0" coveredstatements="3"/>
            <class name="AssumingInTheoriesTest">
               <metrics coveredelements="3" complexity="2" methods="2" testruns="2" statements="3" coveredconditionals="0" coveredmethods="1" elements="5" testfailures="1" testduration="0.003" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <class name="AssumingInTheoriesTest.TheoryWithNoUnassumedParameters">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="noTheoryAnnotationMeansAssumeShouldIgnore() : void" num="17" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="theoryMeansOnlyAssumeShouldFail() : void" num="22" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="theoryWithNoUnassumedParameters(boolean) : void" num="36" count="1" type="method"/>
            <line num="38" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/theories/ParameterSignatureTest.java" name="ParameterSignatureTest.java">
            <metrics coveredelements="21" coveredconditionals="0" complexity="10" loc="92" coveredmethods="6" methods="10" elements="25" classes="1" ncloc="74" statements="15" conditionals="0" coveredstatements="15"/>
            <class name="ParameterSignatureTest">
               <metrics coveredelements="21" complexity="10" methods="10" testruns="4" statements="15" coveredconditionals="0" coveredmethods="6" elements="25" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="15" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="getType() : Method" num="24" count="2" type="method"/>
            <line num="27" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getType(Method,int) : void" num="37" count="2" type="method"/>
            <line num="39" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="foo(int) : void" num="44" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getAnnotations() : void" num="47" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="intMethod(int) : void" num="57" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="integerMethod(Integer) : void" num="60" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="numberMethod(Number) : void" num="63" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="primitiveTypesShouldBeAcceptedAsWrapperTypes() : void" num="66" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="primitiveTypesShouldBeAcceptedAsWrapperTypeAssignables() : void" num="75" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="wrapperTypesShouldBeAcceptedAsPrimitiveTypes() : void" num="84" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="86" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/theories/PotentialAssignmentTest.java" name="PotentialAssignmentTest.java">
            <metrics coveredelements="23" coveredconditionals="0" complexity="6" loc="57" coveredmethods="6" methods="6" elements="23" classes="1" ncloc="44" statements="17" conditionals="0" coveredstatements="17"/>
            <class name="PotentialAssignmentTest">
               <metrics coveredelements="23" complexity="6" methods="6" testruns="4" statements="17" coveredconditionals="0" coveredmethods="6" elements="23" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="17" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="shouldUseQuotedValueInDescription() : void" num="10" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="12" count="1" type="stmt"/>
            <line num="13" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="14" count="1" type="method"/>
            <line num="16" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldNotUseQuotesForNullValueDescriptions() : void" num="25" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldIncludeFailureInDescriptionIfToStringFails() : void" num="35" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="39" count="1" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldReturnGivenValue() : void" num="50" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/theories/TestedOnSupplierTest.java" name="TestedOnSupplierTest.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="3" loc="32" coveredmethods="2" methods="3" elements="8" classes="1" ncloc="24" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="TestedOnSupplierTest">
               <metrics coveredelements="7" complexity="3" methods="3" testruns="1" statements="5" coveredconditionals="0" coveredmethods="2" elements="8" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="5" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="foo(int) : void" num="17" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="descriptionStatesParameterName() : void" num="20" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="22" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="signatureOfFoo() : ParameterSignature" num="27" count="1" type="method"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/theories/TheoryTestUtils.java" name="TheoryTestUtils.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="3" loc="33" coveredmethods="2" methods="3" elements="7" classes="1" ncloc="26" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="TheoryTestUtils">
               <metrics coveredelements="6" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="private" signature="TheoryTestUtils()" num="18" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="potentialAssignments(Method) : List&lt;PotentialAssignment&gt;" num="20" count="15" type="method"/>
            <line num="22" count="15" type="stmt"/>
            <line complexity="1" visibility="public" signature="runTheoryClass(Class&lt;?&gt;) : Result" num="27" count="1" type="method"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.junit.tests.experimental.results">
         <metrics coveredelements="17" complexity="7" loc="109" methods="7" classes="3" statements="12" coveredconditionals="0" coveredmethods="6" elements="19" ncloc="89" files="3" conditionals="0" coveredstatements="11"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/results/AllResultsTests.java" name="AllResultsTests.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="13" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AllResultsTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/results/PrintableResultTest.java" name="PrintableResultTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="3" loc="50" coveredmethods="3" methods="3" elements="8" classes="1" ncloc="42" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="PrintableResultTest">
               <metrics coveredelements="8" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <line complexity="1" visibility="public" signature="backTraceHasGoodToString(String,String) : void" num="20" count="1" type="method"/>
            <line num="23" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getStackTrace() : StackTraceElement[]" num="27" count="1" type="method"/>
            <line num="29" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="includeMultipleFailures(String) : void" num="41" count="1" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/results/ResultMatchersTest.java" name="ResultMatchersTest.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="4" loc="46" coveredmethods="3" methods="4" elements="11" classes="1" ncloc="36" statements="7" conditionals="0" coveredstatements="6"/>
            <class name="ResultMatchersTest">
               <metrics coveredelements="9" complexity="4" methods="4" testruns="3" statements="7" coveredconditionals="0" coveredmethods="3" elements="11" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="6" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="hasFailuresHasGoodDescription() : void" num="19" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="21" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasFailuresDescriptionReflectsInput(int) : void" num="25" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasFailureContaining_givenResultWithNoFailures() : void" num="31" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasFailureContaining_givenResultWithOneFailure() : void" num="38" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.junit.tests.validation">
         <metrics coveredelements="27" complexity="16" loc="155" methods="16" classes="10" statements="19" coveredconditionals="0" coveredmethods="9" elements="35" ncloc="125" files="4" conditionals="0" coveredstatements="18"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/validation/AllValidationTests.java" name="AllValidationTests.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="14" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AllValidationTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/validation/BadlyFormedClassesTest.java" name="BadlyFormedClassesTest.java">
            <metrics coveredelements="15" coveredconditionals="0" complexity="8" loc="71" coveredmethods="5" methods="8" elements="18" classes="4" ncloc="54" statements="10" conditionals="0" coveredstatements="10"/>
            <class name="BadlyFormedClassesTest">
               <metrics coveredelements="13" complexity="4" methods="4" testruns="3" statements="9" coveredconditionals="0" coveredmethods="4" elements="13" testfailures="0" testduration="0.037" conditionals="0" coveredstatements="9" testpasses="3"/>
            </class>
            <class name="BadlyFormedClassesTest.FaultyConstructor">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="BadlyFormedClassesTest.BadBeforeMethodWithLegacyRunner">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="2" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="BadlyFormedClassesTest.NoTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="FaultyConstructor()" num="18" count="1" type="method"/>
            <line num="19" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="someTest() : void" num="22" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="before() : void" num="33" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="someTest() : void" num="38" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="constructorException() : void" num="47" testsuccess="true" count="1" testduration="0.013" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="noRunnableMethods() : void" num="53" testsuccess="true" count="1" testduration="0.011" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="badBeforeMethodWithLegacyRunner() : void" num="58" testsuccess="true" count="1" testduration="0.013" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="exceptionMessageFrom(Class&lt;?&gt;) : String" num="64" count="3" type="method"/>
            <line num="65" count="3" type="stmt"/>
            <line num="66" count="3" type="stmt"/>
            <line num="67" count="3" type="stmt"/>
            <line num="68" count="3" type="stmt"/>
            <line num="69" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/validation/FailedConstructionTest.java" name="FailedConstructionTest.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="3" loc="28" coveredmethods="2" methods="3" elements="8" classes="2" ncloc="24" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="FailedConstructionTest">
               <metrics coveredelements="5" complexity="1" methods="1" testruns="1" statements="4" coveredconditionals="0" coveredmethods="1" elements="5" testfailures="0" testduration="0.012" conditionals="0" coveredstatements="4" testpasses="1"/>
            </class>
            <class name="FailedConstructionTest.CantConstruct">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="CantConstruct()" num="12" count="1" type="method"/>
            <line num="13" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="foo() : void" num="16" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="failedConstructionIsTestFailure() : void" num="21" testsuccess="true" count="1" testduration="0.012" type="method"/>
            <line num="23" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/validation/ValidationTest.java" name="ValidationTest.java">
            <metrics coveredelements="5" coveredconditionals="0" complexity="5" loc="42" coveredmethods="2" methods="5" elements="9" classes="3" ncloc="35" statements="4" conditionals="0" coveredstatements="3"/>
            <class name="ValidationTest">
               <metrics coveredelements="5" complexity="2" methods="2" testruns="2" statements="3" coveredconditionals="0" coveredmethods="2" elements="5" testfailures="0" testduration="0.017" conditionals="0" coveredstatements="3" testpasses="2"/>
            </class>
            <class name="ValidationTest.WrongBeforeClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ValidationTest.NonStaticBeforeClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="2" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="a() : int" num="15" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="initializationErrorIsOnCorrectClass() : void" num="21" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="23" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="before() : void" num="28" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="hereBecauseEveryTestClassNeedsATest() : void" num="32" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="nonStaticBeforeClass() : void" num="37" testsuccess="true" count="1" testduration="0.01" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.junit.tests">
         <metrics coveredelements="14" complexity="17" loc="178" methods="14" classes="7" statements="22" coveredconditionals="0" coveredmethods="5" elements="36" ncloc="144" files="4" conditionals="0" coveredstatements="9"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/AllTests.java" name="AllTests.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="49" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="47" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="AllTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="suite() : Test" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/ObjectContractTest.java" name="ObjectContractTest.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="5" loc="46" coveredmethods="2" methods="3" elements="11" classes="1" ncloc="39" statements="8" conditionals="0" coveredstatements="5"/>
            <class name="ObjectContractTest">
               <metrics coveredelements="7" complexity="5" methods="3" testruns="16" statements="8" coveredconditionals="0" coveredmethods="2" elements="11" testfailures="16" testduration="0.007" conditionals="0" coveredstatements="5" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="equalsThrowsNoException(Object,Object) : void" num="24" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equalsMeansEqualHashCodes(Object,Object) : void" num="31" count="16" type="method"/>
            <line num="33" count="16" type="stmt"/>
            <line num="34" count="9" type="stmt"/>
            <line num="35" count="5" type="stmt"/>
            <line complexity="3" visibility="private" signature="toStringMethod() : Method" num="38" count="2" type="method"/>
            <line num="39" count="2" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/SampleJUnit4Tests.java" name="SampleJUnit4Tests.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="48" coveredmethods="0" methods="6" elements="14" classes="4" ncloc="34" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="SampleJUnit4Tests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SampleJUnit4Tests.TestWithOneThrowingTestMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SampleJUnit4Tests.TestWithOneThrowingTestMethodWithCause">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SampleJUnit4Tests.FakeClassUnderTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="alwaysThrows() : void" num="12" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="alwaysThrows() : void" num="20" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="throwsExceptionWithCause() : void" num="28" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="throwsExceptionWithoutCause() : void" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="doThrowExceptionWithCause() : void" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="doThrowExceptionWithoutCause() : void" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/TestSystem.java" name="TestSystem.java">
            <metrics coveredelements="7" coveredconditionals="0" complexity="4" loc="35" coveredmethods="3" methods="4" elements="9" classes="1" ncloc="24" statements="5" conditionals="0" coveredstatements="4"/>
            <class name="TestSystem">
               <metrics coveredelements="7" coveredconditionals="0" complexity="4" coveredmethods="3" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="TestSystem()" num="14" count="8" type="method"/>
            <line num="15" count="8" type="stmt"/>
            <line num="16" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="exit(int) : void" num="22" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="out() : PrintStream" num="27" count="13" type="method"/>
            <line num="28" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="outContents() : OutputStream" num="31" count="3" type="method"/>
            <line num="32" count="3" type="stmt"/>
         </file>
      </package>
      <package name="org.junit.tests.experimental.theories.extendingwithstubs">
         <metrics coveredelements="96" complexity="54" loc="380" methods="43" classes="12" statements="86" coveredconditionals="10" coveredmethods="29" elements="149" ncloc="301" files="9" conditionals="20" coveredstatements="57"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/Correspondent.java" name="Correspondent.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="7" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Correspondent">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/Guesser.java" name="Guesser.java">
            <metrics coveredelements="50" coveredconditionals="6" complexity="22" loc="126" coveredmethods="15" methods="16" elements="59" classes="2" ncloc="102" statements="33" conditionals="10" coveredstatements="29"/>
            <class name="Guesser">
               <metrics coveredelements="28" coveredconditionals="2" complexity="11" coveredmethods="9" methods="10" elements="30" statements="18" conditionals="2" coveredstatements="17"/>
            </class>
            <class name="Guesser.GuessMap">
               <metrics coveredelements="22" coveredconditionals="4" complexity="11" coveredmethods="6" methods="6" elements="29" statements="15" conditionals="8" coveredstatements="12"/>
            </class>
            <line complexity="1" visibility="public" signature="GuessMap(GuessMap)" num="21" count="1" type="method"/>
            <line num="22" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="GuessMap()" num="25" count="1" type="method"/>
            <line complexity="2" visibility="package" signature="replaceGuess(Object,Object) : GuessMap" num="28" count="1" type="method"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="31" type="cond"/>
            <line num="32" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line complexity="4" visibility="protected" signature="generateGuess(Class&lt;?&gt;) : Object" num="38" count="1" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="39" type="cond"/>
            <line num="40" count="1" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="42" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="getGuess(MethodCall) : Object" num="49" count="2" type="method"/>
            <line num="50" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="50" type="cond"/>
            <line num="51" count="1" type="stmt"/>
            <line num="53" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="invoke(Object,Method,Object[]) : Object" num="56" count="2" type="method"/>
            <line num="58" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="Guesser(Class&lt;? extends T&gt;)" num="66" count="1" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="Guesser(Class&lt;? extends T&gt;,GuessMap)" num="70" count="2" type="method"/>
            <line num="71" count="2" type="stmt"/>
            <line num="72" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getProxy() : T" num="75" count="2" type="method"/>
            <line num="77" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="reguesses(AssumptionViolatedException) : List&lt;ReguessableValue&gt;" num="81" count="1" type="method"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="append(char) : void" num="85" count="42" type="method"/>
            <line complexity="1" visibility="public" signature="appendValue(Object) : Description" num="92" count="2" type="method"/>
            <line num="94" count="2" type="stmt"/>
            <line num="95" count="2" type="stmt"/>
            <line complexity="2" visibility="private" signature="noteValue(Object) : void" num="98" count="2" type="method"/>
            <line num="99" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="99" type="cond"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : Object" num="112" count="2" type="method"/>
            <line num="114" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="getType() : Class&lt;? extends T&gt;" num="117" count="3" type="method"/>
            <line num="118" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescription() : String" num="121" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/GuesserQueue.java" name="GuesserQueue.java">
            <metrics coveredelements="7" coveredconditionals="1" complexity="8" loc="58" coveredmethods="2" methods="7" elements="21" classes="2" ncloc="47" statements="12" conditionals="2" coveredstatements="4"/>
            <class name="GuesserQueue">
               <metrics coveredelements="7" coveredconditionals="1" complexity="4" coveredmethods="2" methods="3" elements="13" statements="8" conditionals="2" coveredstatements="4"/>
            </class>
            <class name="GuesserQueue.ReguessableDecorator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ReguessableDecorator(PotentialAssignment)" num="14" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reguesses(AssumptionViolatedException) : List&lt;ReguessableValue&gt;" num="18" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getValue() : Object" num="23" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescription() : String" num="28" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="forSingleValues(List&lt;PotentialAssignment&gt;) : GuesserQueue" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="update(AssumptionViolatedException) : void" num="47" count="1" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="48" type="cond"/>
            <line num="49" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove(int) : ReguessableValue" num="53" count="2" type="method"/>
            <line num="55" count="2" type="stmt"/>
            <line num="56" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/MethodCall.java" name="MethodCall.java">
            <metrics coveredelements="10" coveredconditionals="0" complexity="9" loc="55" coveredmethods="4" methods="8" elements="25" classes="1" ncloc="45" statements="15" conditionals="2" coveredstatements="6"/>
            <class name="MethodCall">
               <metrics coveredelements="10" coveredconditionals="0" complexity="9" coveredmethods="4" methods="8" elements="25" statements="15" conditionals="2" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="MethodCall(Method,Object)" num="12" count="2" type="method"/>
            <line num="13" count="2" type="stmt"/>
            <line num="14" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="17" count="2" type="method"/>
            <line num="19" count="2" type="stmt"/>
            <line num="20" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="23" count="6" type="method"/>
            <line num="25" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="getReturnType() : Class&lt;?&gt;" num="28" count="1" type="method"/>
            <line num="29" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="argListString() : String" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="38" type="cond"/>
            <line num="39" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="argList() : List&lt;Object&gt;" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="stringableObject(Object) : Object" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/ReguessableValue.java" name="ReguessableValue.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="16" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="ReguessableValue">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="ReguessableValue()" num="10" count="2" type="method"/>
            <line num="11" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/StringableObject.java" name="StringableObject.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="29" coveredmethods="0" methods="4" elements="13" classes="1" ncloc="22" statements="7" conditionals="2" coveredstatements="0"/>
            <class name="StringableObject">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="4" elements="13" statements="7" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="StringableObject(Object)" num="8" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="stringableObject() : Object" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="13" type="cond"/>
            <line num="14" count="0" type="stmt"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isListableArray() : boolean" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="25" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/Stub.java" name="Stub.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="8" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Stub">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/StubbedTheories.java" name="StubbedTheories.java">
            <metrics coveredelements="25" coveredconditionals="3" complexity="8" loc="65" coveredmethods="6" methods="6" elements="27" classes="2" ncloc="52" statements="17" conditionals="4" coveredstatements="16"/>
            <class name="StubbedTheories">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="StubbedTheories.StubbedTheoryAnchor">
               <metrics coveredelements="21" coveredconditionals="3" complexity="6" coveredmethods="4" methods="4" elements="23" statements="15" conditionals="4" coveredstatements="14"/>
            </class>
            <line complexity="1" visibility="public" signature="StubbedTheories(Class&lt;?&gt;)" num="17" count="2" type="method"/>
            <line num="18" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="methodBlock(FrameworkMethod) : Statement" num="21" count="1" type="method"/>
            <line num="23" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="StubbedTheoryAnchor(FrameworkMethod,TestClass)" num="27" count="1" type="method"/>
            <line num="28" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="handleAssumptionViolation(AssumptionViolatedException) : void" num="33" count="1" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line complexity="2" visibility="protected" signature="runWithIncompleteAssignment(Assignments) : void" num="41" count="1" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line falsecount="1" truecount="2" num="46" type="cond"/>
            <line num="47" count="2" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="createGuesserQueue(Assignments) : GuesserQueue" num="51" count="1" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="55" type="cond"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/StubbedTheoriesTest.java" name="StubbedTheoriesTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="16" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="StubbedTheoriesTest">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="ask(Correspondent) : void" num="11" count="2" type="method"/>
            <line num="13" count="2" type="stmt"/>
         </file>
      </package>
      <package name="org.junit.tests.junit3compatibility">
         <metrics coveredelements="311" complexity="116" loc="986" methods="114" classes="52" statements="232" coveredconditionals="4" coveredmethods="90" elements="350" ncloc="816" files="11" conditionals="4" coveredstatements="217"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/junit3compatibility/AllJUnit3CompatibilityTests.java" name="AllJUnit3CompatibilityTests.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="21" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="19" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AllJUnit3CompatibilityTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/junit3compatibility/AllTestsTest.java" name="AllTestsTest.java">
            <metrics coveredelements="28" coveredconditionals="0" complexity="10" loc="87" coveredmethods="9" methods="10" elements="30" classes="6" ncloc="73" statements="20" conditionals="0" coveredstatements="19"/>
            <class name="AllTestsTest">
               <metrics coveredelements="16" complexity="5" methods="5" testruns="1" statements="11" coveredconditionals="0" coveredmethods="5" elements="16" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="11" testpasses="1"/>
            </class>
            <class name="AllTestsTest.OneTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="AllTestsTest.All">
               <metrics coveredelements="4" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="4" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="AllTestsTest.JUnit4Test">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="AllTestsTest.AllJUnit4">
               <metrics coveredelements="4" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="4" statements="3" conditionals="0" coveredstatements="3"/>
            </class>
            <class name="AllTestsTest.BadSuiteMethod">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testSomething() : void" num="20" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="21" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="suite() : junit.framework.Test" num="27" count="3" type="method"/>
            <line num="28" count="3" type="stmt"/>
            <line num="29" count="3" type="stmt"/>
            <line num="30" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="ensureTestIsRun() : void" num="34" count="1" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="correctTestCount() : void" num="42" count="1" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="someUsefulDescription() : void" num="48" count="1" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSomething() : void" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="suite() : junit.framework.Test" num="63" count="1" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="correctTestCountAdapted() : void" num="70" count="1" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="suite() : junit.framework.Test" num="78" count="1" type="method"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="exceptionThrownWhenSuiteIsBad() : void" num="83" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="85" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/junit3compatibility/ClassRequestTest.java" name="ClassRequestTest.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="2" loc="20" coveredmethods="1" methods="2" elements="4" classes="2" ncloc="16" statements="2" conditionals="0" coveredstatements="1"/>
            <class name="ClassRequestTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="ClassRequestTest.PrivateSuiteMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="suite() : junit.framework.Test" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="noSuiteMethodIfMethodPrivate() : void" num="15" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="17" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/junit3compatibility/ForwardCompatibilityPrintingTest.java" name="ForwardCompatibilityPrintingTest.java">
            <metrics coveredelements="36" coveredconditionals="2" complexity="10" loc="91" coveredmethods="8" methods="9" elements="38" classes="3" ncloc="78" statements="27" conditionals="2" coveredstatements="26"/>
            <class name="ForwardCompatibilityPrintingTest">
               <metrics coveredelements="32" complexity="7" methods="6" testruns="1" statements="24" coveredconditionals="2" coveredmethods="6" elements="32" testfailures="0" testduration="0.003" conditionals="2" coveredstatements="24" testpasses="1"/>
            </class>
            <class name="ForwardCompatibilityPrintingTest.TestResultPrinter">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="ForwardCompatibilityPrintingTest.ATest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="package" signature="TestResultPrinter(PrintStream)" num="18" count="4" type="method"/>
            <line num="19" count="4" type="stmt"/>
            <line complexity="1" visibility="protected" signature="elapsedTimeAsString(long) : String" num="25" count="2" type="method"/>
            <line num="27" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testError() : void" num="31" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="printErrors(TestResult) : void" num="40" count="1" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="runTest() : void" num="48" count="1" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="error() : void" num="58" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testErrorAdapted() : void" num="64" count="1" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="printErrors(TestResult) : void" num="73" count="1" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="expected(String[]) : String" num="83" count="2" type="method"/>
            <line num="84" count="2" type="stmt"/>
            <line num="85" count="2" type="stmt"/>
            <line num="86" count="2" type="stmt"/>
            <line falsecount="2" truecount="14" num="86" type="cond"/>
            <line num="87" count="14" type="stmt"/>
            <line num="89" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/junit3compatibility/ForwardCompatibilityTest.java" name="ForwardCompatibilityTest.java">
            <metrics coveredelements="97" coveredconditionals="0" complexity="37" loc="254" coveredmethods="29" methods="37" elements="109" classes="11" ncloc="210" statements="72" conditionals="0" coveredstatements="68"/>
            <class name="ForwardCompatibilityTest">
               <metrics coveredelements="70" complexity="16" methods="16" testruns="6" statements="56" coveredconditionals="0" coveredmethods="15" elements="72" testfailures="0" testduration="0.005" conditionals="0" coveredstatements="55" testpasses="6"/>
            </class>
            <class name="ForwardCompatibilityTest.NewTest">
               <metrics coveredelements="6" complexity="3" methods="3" testruns="1" statements="3" coveredconditionals="0" coveredmethods="3" elements="6" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <class name="ForwardCompatibilityTest.ErrorTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="2" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="2" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="ForwardCompatibilityTest.NoExceptionTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="0" coveredconditionals="0" coveredmethods="0" elements="1" testfailures="1" testduration="0.001" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="ForwardCompatibilityTest.ExpectedTest">
               <metrics coveredelements="2" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <class name="ForwardCompatibilityTest.UnExpectedExceptionTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ForwardCompatibilityTest.BeforeClassTest">
               <metrics coveredelements="12" complexity="6" methods="6" testruns="2" statements="6" coveredconditionals="0" coveredmethods="6" elements="12" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="6" testpasses="2"/>
            </class>
            <class name="ForwardCompatibilityTest.ExceptionInBeforeTest">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="ForwardCompatibilityTest.InvalidMethodTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="2" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ForwardCompatibilityTest.MarkerRunner">
               <metrics coveredelements="5" coveredconditionals="0" complexity="4" coveredmethods="3" methods="4" elements="7" statements="3" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="ForwardCompatibilityTest.NoTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="before() : void" num="23" count="1" type="method"/>
            <line num="25" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="after() : void" num="28" count="1" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="33" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCompatibility() : void" num="39" count="1" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToString() : void" num="47" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testUseGlobalCache() : void" num="53" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="error() : void" num="62" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testException() : void" num="68" count="1" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNotifyResult() : void" num="75" count="1" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="startTest(junit.framework.Test) : void" num="81" count="1" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="endTest(junit.framework.Test) : void" num="85" count="1" type="method"/>
            <line num="86" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="addFailure(junit.framework.Test,AssertionFailedError) : void" num="89" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addError(junit.framework.Test,Throwable) : void" num="93" count="1" type="method"/>
            <line num="94" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="succeed() : void" num="104" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line complexity="1" visibility="public" signature="testNoException() : void" num="109" count="1" type="method"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="expected() : void" num="117" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="119" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExpected() : void" num="123" count="1" type="method"/>
            <line num="124" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="expected() : void" num="131" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="beforeClass() : void" num="140" count="1" type="method"/>
            <line num="142" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="before() : void" num="145" count="2" type="method"/>
            <line num="147" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="one() : void" num="150" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="152" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="two() : void" num="155" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="157" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="after() : void" num="160" count="2" type="method"/>
            <line num="162" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="afterClass() : void" num="165" count="1" type="method"/>
            <line num="167" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBeforeAndAfterClass() : void" num="171" count="1" type="method"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="error() : void" num="180" count="1" type="method"/>
            <line num="182" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="nothing() : void" num="185" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="testExceptionInBefore() : void" num="190" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="191" count="1" type="stmt"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldBeStatic() : void" num="198" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="aTest() : void" num="202" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="testInvalidMethod() : void" num="207" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="208" count="1" type="stmt"/>
            <line num="209" count="1" type="stmt"/>
            <line num="210" count="1" type="stmt"/>
            <line num="211" count="1" type="stmt"/>
            <line num="212" count="1" type="stmt"/>
            <line num="213" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="MarkerRunner(Class&lt;?&gt;)" num="219" count="2" type="method"/>
            <line complexity="1" visibility="public" signature="run(RunNotifier) : void" num="222" count="1" type="method"/>
            <line num="224" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCount() : int" num="227" count="0" type="method"/>
            <line num="229" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescription() : Description" num="232" count="4" type="method"/>
            <line num="234" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunWithClass() : void" num="242" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="243" count="1" type="stmt"/>
            <line num="244" count="1" type="stmt"/>
            <line num="245" count="1" type="stmt"/>
            <line num="246" count="1" type="stmt"/>
            <line num="247" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testToStringSuite() : void" num="250" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="251" count="1" type="stmt"/>
            <line num="252" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/junit3compatibility/InitializationErrorForwardCompatibilityTest.java" name="InitializationErrorForwardCompatibilityTest.java">
            <metrics coveredelements="25" coveredconditionals="0" complexity="13" loc="102" coveredmethods="9" methods="13" elements="32" classes="5" ncloc="83" statements="19" conditionals="0" coveredstatements="16"/>
            <class name="InitializationErrorForwardCompatibilityTest">
               <metrics coveredelements="17" complexity="4" methods="4" testruns="3" statements="13" coveredconditionals="0" coveredmethods="4" elements="17" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="13" testpasses="3"/>
            </class>
            <class name="InitializationErrorForwardCompatibilityTest.CantInitialize">
               <metrics coveredelements="2" coveredconditionals="0" complexity="3" coveredmethods="1" methods="3" elements="5" statements="2" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="InitializationErrorForwardCompatibilityTest.CantInitializeTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="InitializationErrorForwardCompatibilityTest.ErrorRememberingListener">
               <metrics coveredelements="6" coveredconditionals="0" complexity="5" coveredmethods="4" methods="5" elements="7" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="InitializationErrorForwardCompatibilityTest.InitializesWithError">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CantInitialize(Class&lt;?&gt;)" num="23" count="3" type="method"/>
            <line num="24" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescription() : Description" num="27" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(RunNotifier) : void" num="32" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="createAdapter() : void" num="43" count="3" type="method"/>
            <line num="45" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="initializationErrorsShowUpAsWarnings() : void" num="49" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="initializationErrorsAreThrownAtRuntime() : void" num="54" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="addError(junit.framework.Test,Throwable) : void" num="66" count="1" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="addFailure(junit.framework.Test,AssertionFailedError) : void" num="70" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="endTest(junit.framework.Test) : void" num="74" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="startTest(junit.framework.Test) : void" num="77" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="getError() : junit.framework.Test" num="80" count="2" type="method"/>
            <line num="81" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="generatedErrorTestsMatchUp() : void" num="85" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="InitializesWithError(Class&lt;?&gt;)" num="97" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/junit3compatibility/JUnit38ClassRunnerTest.java" name="JUnit38ClassRunnerTest.java">
            <metrics coveredelements="45" coveredconditionals="2" complexity="18" loc="155" coveredmethods="11" methods="17" elements="53" classes="9" ncloc="129" statements="34" conditionals="2" coveredstatements="32"/>
            <class name="JUnit38ClassRunnerTest">
               <metrics coveredelements="42" coveredconditionals="2" complexity="10" coveredmethods="9" methods="9" elements="42" statements="31" conditionals="2" coveredstatements="31"/>
            </class>
            <class name="JUnit38ClassRunnerTest.MyTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="JUnit38ClassRunnerTest.AnnotatedTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.001" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="JUnit38ClassRunnerTest.OneTest">
               <metrics coveredelements="1" complexity="1" methods="1" testruns="1" statements="0" coveredconditionals="0" coveredmethods="1" elements="1" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="1"/>
            </class>
            <class name="JUnit38ClassRunnerTest.ClassWithInvalidMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="JUnit38ClassRunnerTest.MyAnnotation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="JUnit38ClassRunnerTest.JUnit3ClassWithAnnotatedMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="2" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="JUnit38ClassRunnerTest.DerivedAnnotatedMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="JUnit38ClassRunnerTest.RejectAllTestsFilter">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testA() : void" num="28" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="plansDecoratorCorrectly() : void" num="33" count="1" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="foo() : void" num="40" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="canUnadaptAnAdapter() : void" num="46" count="1" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOne() : void" num="57" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="testListener() : void" num="61" count="1" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStarted(Description) : void" num="65" count="1" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="testInvalid() : void" num="81" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="invalidTestMethodReportedCorrectly() : void" num="86" count="1" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAnnotated() : void" num="100" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="testNotAnnotated() : void" num="104" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="getDescriptionWithAnnotation() : void" num="111" count="1" type="method"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescriptionWithAnnotationInSuper() : void" num="117" count="1" type="method"/>
            <line num="119" count="1" type="stmt"/>
            <line num="120" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="assertAnnotationFiltering(JUnit38ClassRunner) : void" num="123" count="2" type="method"/>
            <line num="124" count="2" type="stmt"/>
            <line num="125" count="2" type="stmt"/>
            <line num="126" count="2" type="stmt"/>
            <line num="127" count="4" type="stmt"/>
            <line falsecount="2" truecount="2" num="127" type="cond"/>
            <line num="128" count="2" type="stmt"/>
            <line num="130" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldRun(Description) : boolean" num="136" count="1" type="method"/>
            <line num="138" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="describe() : String" num="141" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="filterNoTestsRemain() : void" num="150" count="1" type="method"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/junit3compatibility/JUnit4TestAdapterTest.java" name="JUnit4TestAdapterTest.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="7" loc="82" coveredmethods="7" methods="7" elements="20" classes="7" ncloc="63" statements="13" conditionals="0" coveredstatements="13"/>
            <class name="JUnit4TestAdapterTest">
               <metrics coveredelements="16" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="16" statements="12" conditionals="0" coveredstatements="12"/>
            </class>
            <class name="JUnit4TestAdapterTest.Test4">
               <metrics coveredelements="1" complexity="1" methods="1" testruns="2" statements="0" coveredconditionals="0" coveredmethods="1" elements="1" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="2"/>
            </class>
            <class name="JUnit4TestAdapterTest.TestSuiteFor4">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="JUnit4TestAdapterTest.Test3">
               <metrics coveredelements="1" complexity="1" methods="1" testruns="4" statements="0" coveredconditionals="0" coveredmethods="1" elements="1" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="4"/>
            </class>
            <class name="JUnit4TestAdapterTest.TestSuiteFor3">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="JUnit4TestAdapterTest.TestSuite3">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="JUnit4TestAdapterTest.TestSuite4ForTestSuite3">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="doTest(Class&lt;?&gt;) : void" num="19" count="3" type="method"/>
            <line num="21" count="3" type="stmt"/>
            <line num="22" count="3" type="stmt"/>
            <line num="23" count="3" type="stmt"/>
            <line num="24" count="3" type="stmt"/>
            <line num="27" count="3" type="stmt"/>
            <line num="28" count="3" type="stmt"/>
            <line num="29" count="3" type="stmt"/>
            <line num="30" count="3" type="stmt"/>
            <line num="31" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="pass() : void" num="35" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="testJUnit4Suite() : void" num="46" count="1" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testPass() : void" num="52" testsuccess="true" count="4" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="testJUnit3Suite() : void" num="62" count="1" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="suite() : junit.framework.Test" num="68" count="2" type="method"/>
            <line num="69" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testJUnit4SuiteThatContainsJUnit3SuiteClass() : void" num="78" count="1" type="method"/>
            <line num="80" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/junit3compatibility/OldTestClassAdaptingListenerTest.java" name="OldTestClassAdaptingListenerTest.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="1" loc="28" coveredmethods="1" methods="1" elements="9" classes="1" ncloc="25" statements="8" conditionals="0" coveredstatements="8"/>
            <class name="OldTestClassAdaptingListenerTest">
               <metrics coveredelements="9" complexity="1" methods="1" testruns="1" statements="8" coveredconditionals="0" coveredmethods="1" elements="9" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="8" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="addFailureDelegatesToNotifier() : void" num="15" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="17" count="1" type="stmt"/>
            <line num="18" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/junit3compatibility/OldTests.java" name="OldTests.java">
            <metrics coveredelements="2" coveredconditionals="0" complexity="1" loc="12" coveredmethods="1" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="1"/>
            <class name="OldTests">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="suite() : Test" num="9" count="2" type="method"/>
            <line num="10" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/junit3compatibility/SuiteMethodTest.java" name="SuiteMethodTest.java">
            <metrics coveredelements="47" coveredconditionals="0" complexity="17" loc="134" coveredmethods="14" methods="17" elements="53" classes="6" ncloc="110" statements="36" conditionals="0" coveredstatements="33"/>
            <class name="SuiteMethodTest">
               <metrics coveredelements="27" complexity="5" methods="5" testruns="2" statements="22" coveredconditionals="0" coveredmethods="5" elements="27" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="22" testpasses="2"/>
            </class>
            <class name="SuiteMethodTest.OldTest">
               <metrics coveredelements="8" coveredconditionals="0" complexity="3" coveredmethods="3" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="5"/>
            </class>
            <class name="SuiteMethodTest.NewTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="1" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <class name="SuiteMethodTest.CompatibilityTest">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="SuiteMethodTest.NewTestSuiteFails">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="SuiteMethodTest.NewTestSuiteNotUsed">
               <metrics coveredelements="4" complexity="3" methods="3" testruns="1" statements="3" coveredconditionals="0" coveredmethods="2" elements="6" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="OldTest(String)" num="22" count="1" type="method"/>
            <line num="23" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="suite() : junit.framework.Test" num="26" count="1" type="method"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="notObviouslyATest() : void" num="32" count="1" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="makeSureSuiteIsCalled() : void" num="37" count="1" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="sample() : void" num="45" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="suite() : junit.framework.Test" num="50" count="1" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="makeSureSuiteWorksWithJUnit4Classes() : void" num="55" count="1" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ignored() : void" num="64" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="suite() : junit.framework.Test" num="69" count="2" type="method"/>
            <line num="70" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="descriptionAndRunNotificationsAreConsistent() : void" num="75" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="sample() : void" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="suite() : junit.framework.Test" num="90" count="1" type="method"/>
            <line num="91" count="1" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="suiteIsUsedWithJUnit4Classes() : void" num="96" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="sample() : void" num="107" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="109" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ignore() : void" num="112" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="suite() : junit.framework.Test" num="118" count="1" type="method"/>
            <line num="119" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="makeSureSuiteNotUsedWithJUnit4Classes2() : void" num="123" count="1" type="method"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.junit.tests.experimental">
         <metrics coveredelements="97" complexity="46" loc="381" methods="38" classes="12" statements="87" coveredconditionals="0" coveredmethods="29" elements="125" ncloc="315" files="3" conditionals="0" coveredstatements="68"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/AllExperimentalTests.java" name="AllExperimentalTests.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="25" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="23" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AllExperimentalTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/AssumptionTest.java" name="AssumptionTest.java">
            <metrics coveredelements="91" coveredconditionals="0" complexity="44" loc="312" coveredmethods="27" methods="36" elements="119" classes="10" ncloc="256" statements="83" conditionals="0" coveredstatements="64"/>
            <class name="AssumptionTest">
               <metrics coveredelements="85" complexity="32" methods="24" testruns="13" statements="68" coveredconditionals="0" coveredmethods="24" elements="92" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="61" testpasses="13"/>
            </class>
            <class name="AssumptionTest.HasFailingAssumption">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="2" statements="2" coveredconditionals="0" coveredmethods="0" elements="3" testfailures="2" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="AssumptionTest.HasPassingAssumption">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="2" coveredconditionals="0" coveredmethods="0" elements="3" testfailures="1" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="AssumptionTest.HasFailingAssumeInBefore">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="AssumptionTest.HasFailingAssumeInBeforeClass">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="AssumptionTest.AssumptionFailureInConstructor">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="AssumptionTest.TestClassWithAssumptionFailure">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="AssumptionTest.HasAssumeWithMessage">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="AssumptionTest.HasAssumeWithMessageAndCause">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="AssumptionTest.HasFailingAssumptionWithMessage">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="2" coveredconditionals="0" coveredmethods="0" elements="3" testfailures="1" testduration="0.001" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <line complexity="1" visibility="public" signature="assumptionsFail() : void" num="32" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="failedAssumptionsMeanPassing() : void" num="39" count="1" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="failedAssumptionsCanBeDetectedByListeners() : void" num="49" count="1" type="method"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAssumptionFailure(Failure) : void" num="54" count="1" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="assumptionsFail() : void" num="65" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="passingAssumptionsScootThrough() : void" num="72" count="1" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="assumeThatWorks() : void" num="80" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assumeThatPasses() : void" num="90" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="assumeThatPassesOnStrings() : void" num="96" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="assumeNotNullThrowsException() : void" num="102" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="assumeNotNullThrowsExceptionForNullArray() : void" num="113" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assumeNotNullPasses() : void" num="123" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="125" count="1" type="stmt"/>
            <line num="126" count="1" type="stmt"/>
            <line num="127" count="1" type="stmt"/>
            <line complexity="3" visibility="public" signature="assumeNotNullIncludesParameterList() : void" num="130" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="assumeNoExceptionThrows() : void" num="142" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertCompletesNormally() : void" num="153" count="3" type="method"/>
            <line complexity="2" visibility="public" signature="assumeTrueWorks() : void" num="156" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="assumeFalseWorks() : void" num="166" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="checkForSomethingThatIsntThere() : void" num="177" count="1" type="method"/>
            <line num="179" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="failing() : void" num="182" count="0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="failingAssumptionInBeforePreventsTestRun() : void" num="188" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="190" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="checkForSomethingThatIsntThere() : void" num="194" count="1" type="method"/>
            <line num="196" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="failing() : void" num="199" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="failingAssumptionInBeforeClassIgnoresClass() : void" num="205" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="207" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="AssumptionFailureInConstructor()" num="211" count="1" type="method"/>
            <line num="212" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldFail() : void" num="215" count="0" type="method"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="failingAssumptionInConstructorIgnoresClass() : void" num="221" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="223" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="assumeWithExpectedException() : void" num="228" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="230" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assumeWithExpectedExceptionShouldThrowAssumptionViolatedException() : void" num="234" count="1" type="method"/>
            <line num="236" count="1" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMethod() : void" num="247" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="249" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assumptionsWithMessage() : void" num="253" count="1" type="method"/>
            <line num="255" count="1" type="stmt"/>
            <line num="258" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMethod() : void" num="265" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="267" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assumptionsWithMessageAndCause() : void" num="271" count="1" type="method"/>
            <line num="273" count="1" type="stmt"/>
            <line num="275" count="1" type="stmt"/>
            <line num="276" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="assumptionsFail() : void" num="280" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="282" count="0" type="stmt"/>
            <line num="283" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="failedAssumptionsWithMessage() : void" num="287" count="1" type="method"/>
            <line num="289" count="1" type="stmt"/>
            <line num="292" count="1" type="stmt"/>
            <line num="293" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="runAndGetAssumptionFailures(Class&lt;?&gt;) : List&lt;Failure&gt;" num="300" count="3" type="method"/>
            <line num="301" count="3" type="stmt"/>
            <line num="302" count="3" type="stmt"/>
            <line num="303" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAssumptionFailure(Failure) : void" num="304" count="3" type="method"/>
            <line num="306" count="3" type="stmt"/>
            <line num="309" count="3" type="stmt"/>
            <line num="310" count="3" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/MatcherTest.java" name="MatcherTest.java">
            <metrics coveredelements="6" coveredconditionals="0" complexity="2" loc="44" coveredmethods="2" methods="2" elements="6" classes="1" ncloc="36" statements="4" conditionals="0" coveredstatements="4"/>
            <class name="MatcherTest">
               <metrics coveredelements="6" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <line complexity="1" visibility="public" signature="differentMatchersHaveDifferentDescriptions(Matcher,Matcher,Object) : void" num="32" count="12" type="method"/>
            <line num="36" count="12" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="failure(String) : Failure" num="41" count="2" type="method"/>
            <line num="42" count="2" type="stmt"/>
         </file>
      </package>
      <package name="junit.tests.runner">
         <metrics coveredelements="227" complexity="63" loc="546" methods="58" classes="15" statements="180" coveredconditionals="8" coveredmethods="48" elements="246" ncloc="441" files="7" conditionals="8" coveredstatements="171"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/junit/tests/runner/AllTests.java" name="AllTests.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="3" loc="30" coveredmethods="1" methods="3" elements="14" classes="1" ncloc="22" statements="11" conditionals="0" coveredstatements="8"/>
            <class name="AllTests">
               <metrics coveredelements="9" coveredconditionals="0" complexity="3" coveredmethods="1" methods="3" elements="14" statements="11" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="11" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="suite() : Test" num="15" count="2" type="method"/>
            <line num="16" count="2" type="stmt"/>
            <line num="17" count="2" type="stmt"/>
            <line num="18" count="2" type="stmt"/>
            <line num="19" count="2" type="stmt"/>
            <line num="20" count="2" type="stmt"/>
            <line num="21" count="2" type="stmt"/>
            <line num="22" count="2" type="stmt"/>
            <line num="23" count="2" type="stmt"/>
            <line complexity="1" visibility="package" signature="isJDK11() : boolean" num="26" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/junit/tests/runner/BaseTestRunnerTest.java" name="BaseTestRunnerTest.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="8" loc="52" coveredmethods="4" methods="8" elements="16" classes="4" ncloc="42" statements="8" conditionals="0" coveredstatements="7"/>
            <class name="BaseTestRunnerTest">
               <metrics coveredelements="7" complexity="2" methods="2" testruns="2" statements="5" coveredconditionals="0" coveredmethods="2" elements="7" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="5" testpasses="2"/>
            </class>
            <class name="BaseTestRunnerTest.MockRunner">
               <metrics coveredelements="2" coveredconditionals="0" complexity="4" coveredmethods="1" methods="4" elements="5" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="BaseTestRunnerTest.NonStatic">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="BaseTestRunnerTest.DoesntExtendTestCase">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="protected" signature="runFailed(String) : void" num="12" count="1" type="method"/>
            <line num="14" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEnded(String) : void" num="17" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="testFailed(int,Test,Throwable) : void" num="21" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="testStarted(String) : void" num="25" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="suite() : Test" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInvokeNonStaticSuite() : void" num="36" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="suite() : Test" num="42" count="1" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInvokeSuiteOnNonSubclassOfTestCase() : void" num="47" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/junit/tests/runner/ResultTest.java" name="ResultTest.java">
            <metrics coveredelements="81" coveredconditionals="2" complexity="21" loc="191" coveredmethods="17" methods="19" elements="86" classes="4" ncloc="153" statements="65" conditionals="2" coveredstatements="62"/>
            <class name="ResultTest">
               <metrics coveredelements="69" coveredconditionals="2" complexity="13" coveredmethods="11" methods="11" elements="70" statements="57" conditionals="2" coveredstatements="56"/>
            </class>
            <class name="ResultTest.SerializationFormat">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ResultTest.AssumptionFailedTest">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="3" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="3" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="ResultTest.ResultWithFixedRunTime">
               <metrics coveredelements="12" coveredconditionals="0" complexity="7" coveredmethods="6" methods="7" elements="14" statements="7" conditionals="0" coveredstatements="6"/>
            </class>
            <line complexity="1" visibility="public" signature="testRunFailureResultCanBeSerialised() : void" num="25" count="1" type="method"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunFailureResultCanBeReserialised_v4_12() : void" num="31" count="1" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunAssumptionFailedResultCanBeSerialised() : void" num="37" count="1" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunAssumptionFailedResultCanBeReserialised_v4_12() : void" num="43" count="1" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunAssumptionFailedResultCanBeReserialised_v4_13() : void" num="49" count="1" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunSuccessResultCanBeSerialised() : void" num="55" count="1" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunSuccessResultCanBeReserialised_v4_12() : void" num="61" count="1" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunSuccessResultCanBeReserialised_v4_13() : void" num="67" count="1" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertResultSerializable(Result) : void" num="78" count="3" type="method"/>
            <line num="79" count="3" type="stmt"/>
            <line num="80" count="3" type="stmt"/>
            <line num="81" count="3" type="stmt"/>
            <line num="82" count="3" type="stmt"/>
            <line num="83" count="3" type="stmt"/>
            <line num="84" count="3" type="stmt"/>
            <line num="85" count="3" type="stmt"/>
            <line num="86" count="3" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertResultReserializable(Result,SerializationFormat) : void" num="89" count="5" type="method"/>
            <line num="91" count="5" type="stmt"/>
            <line num="92" count="5" type="stmt"/>
            <line num="93" count="5" type="stmt"/>
            <line num="94" count="5" type="stmt"/>
            <line num="95" count="5" type="stmt"/>
            <line num="97" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="assumptionFailed() : void" num="102" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ResultWithFixedRunTime(Result)" num="118" count="5" type="method"/>
            <line num="119" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRunCount() : int" num="122" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFailureCount() : int" num="127" count="8" type="method"/>
            <line num="129" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRunTime() : long" num="132" count="8" type="method"/>
            <line num="134" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFailures() : List&lt;Failure&gt;" num="137" count="13" type="method"/>
            <line num="139" count="13" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIgnoreCount() : int" num="142" count="8" type="method"/>
            <line num="144" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAssumptionFailureCount() : int" num="147" count="5" type="method"/>
            <line num="149" count="5" type="stmt"/>
            <line complexity="3" visibility="private" signature="assertSerializedCorrectly(Result,Result,SerializationFormat) : void" num="153" count="8" type="method"/>
            <line num="155" count="8" type="stmt"/>
            <line num="158" count="8" type="stmt"/>
            <line num="159" count="8" type="stmt"/>
            <line num="161" count="8" type="stmt"/>
            <line falsecount="3" truecount="5" num="161" type="cond"/>
            <line num="163" count="5" type="stmt"/>
            <line num="168" count="3" type="stmt"/>
            <line num="169" count="3" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="175" count="8" type="stmt"/>
            <line num="176" count="8" type="stmt"/>
            <line num="177" count="8" type="stmt"/>
            <line num="178" count="8" type="stmt"/>
            <line num="179" count="2" type="stmt"/>
            <line num="180" count="2" type="stmt"/>
            <line num="181" count="2" type="stmt"/>
            <line num="183" count="2" type="stmt"/>
            <line num="184" count="2" type="stmt"/>
            <line num="185" count="2" type="stmt"/>
            <line num="187" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/junit/tests/runner/StackFilterTest.java" name="StackFilterTest.java">
            <metrics coveredelements="28" coveredconditionals="0" complexity="2" loc="46" coveredmethods="2" methods="2" elements="28" classes="1" ncloc="39" statements="26" conditionals="0" coveredstatements="26"/>
            <class name="StackFilterTest">
               <metrics coveredelements="28" complexity="2" methods="2" testruns="1" statements="26" coveredconditionals="0" coveredmethods="2" elements="28" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="26" testpasses="1"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="13" count="1" type="method"/>
            <line num="15" count="1" type="stmt"/>
            <line num="16" count="1" type="stmt"/>
            <line num="17" count="1" type="stmt"/>
            <line num="18" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFilter() : void" num="43" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/junit/tests/runner/TextFeedbackTest.java" name="TextFeedbackTest.java">
            <metrics coveredelements="59" coveredconditionals="2" complexity="18" loc="126" coveredmethods="16" methods="17" elements="61" classes="2" ncloc="109" statements="42" conditionals="2" coveredstatements="41"/>
            <class name="TextFeedbackTest">
               <metrics coveredelements="55" complexity="16" methods="15" testruns="5" statements="40" coveredconditionals="2" coveredmethods="14" elements="57" testfailures="0" testduration="0.004" conditionals="2" coveredstatements="39" testpasses="5"/>
            </class>
            <class name="TextFeedbackTest.TestResultPrinter">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="package" signature="TestResultPrinter(PrintStream)" num="19" count="7" type="method"/>
            <line num="20" count="7" type="stmt"/>
            <line complexity="1" visibility="protected" signature="elapsedTimeAsString(long) : String" num="25" count="5" type="method"/>
            <line num="27" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setUp() : void" num="35" count="5" type="method"/>
            <line num="37" count="5" type="stmt"/>
            <line num="38" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEmptySuite() : void" num="41" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOneTest() : void" num="48" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="runTest() : void" num="52" count="1" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTwoTests() : void" num="60" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="runTest() : void" num="64" count="1" type="method"/>
            <line num="68" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="runTest() : void" num="69" count="1" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFailure() : void" num="77" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="printFailures(TestResult) : void" num="80" count="1" type="method"/>
            <line num="82" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="runTest() : void" num="88" count="1" type="method"/>
            <line num="90" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testError() : void" num="97" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="printErrors(TestResult) : void" num="100" count="1" type="method"/>
            <line num="102" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="runTest() : void" num="108" count="1" type="method"/>
            <line num="110" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line complexity="2" visibility="private" signature="expected(String[]) : String" num="117" count="5" type="method"/>
            <line num="118" count="5" type="stmt"/>
            <line num="119" count="5" type="stmt"/>
            <line num="120" count="5" type="stmt"/>
            <line falsecount="5" truecount="29" num="120" type="cond"/>
            <line num="121" count="29" type="stmt"/>
            <line num="123" count="5" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/junit/tests/runner/TextRunnerSingleMethodTest.java" name="TextRunnerSingleMethodTest.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="3" loc="39" coveredmethods="2" methods="3" elements="11" classes="2" ncloc="26" statements="8" conditionals="0" coveredstatements="7"/>
            <class name="TextRunnerSingleMethodTest">
               <metrics coveredelements="7" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="7" statements="6" conditionals="0" coveredstatements="6"/>
            </class>
            <class name="TextRunnerSingleMethodTest.InvocationTest">
               <metrics coveredelements="2" complexity="2" methods="2" testruns="1" statements="2" coveredconditionals="0" coveredmethods="1" elements="4" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testWasInvoked() : void" num="19" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="20" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNotInvoked() : void" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSingle() : void" num="28" count="1" type="method"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/junit/tests/runner/TextRunnerTest.java" name="TextRunnerTest.java">
            <metrics coveredelements="30" coveredconditionals="4" complexity="8" loc="62" coveredmethods="6" methods="6" elements="30" classes="1" ncloc="50" statements="20" conditionals="4" coveredstatements="20"/>
            <class name="TextRunnerTest">
               <metrics coveredelements="30" complexity="8" methods="6" testruns="4" statements="20" coveredconditionals="4" coveredmethods="6" elements="30" testfailures="0" testduration="0.434" conditionals="4" coveredstatements="20" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="testFailure() : void" num="15" testsuccess="true" count="1" testduration="0.174" type="method"/>
            <line num="16" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSuccess() : void" num="19" testsuccess="true" count="1" testduration="0.148" type="method"/>
            <line num="20" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testError() : void" num="23" testsuccess="true" count="1" testduration="0.112" type="method"/>
            <line num="24" count="1" type="stmt"/>
            <line complexity="3" visibility="package" signature="execTest(String,boolean) : void" num="27" count="3" type="method"/>
            <line num="28" count="3" type="stmt"/>
            <line num="29" count="3" type="stmt"/>
            <line num="31" count="3" type="stmt"/>
            <line num="32" count="3" type="stmt"/>
            <line num="33" count="3" type="stmt"/>
            <line num="34" count="3" type="stmt"/>
            <line falsecount="3" truecount="242" num="34" type="cond"/>
            <line num="35" count="242" type="stmt"/>
            <line num="36" count="3" type="stmt"/>
            <line num="37" count="3" type="stmt"/>
            <line falsecount="2" truecount="1" num="37" type="cond"/>
            <line num="38" count="1" type="stmt"/>
            <line num="40" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunReturnsResult() : void" num="44" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(int) : void" num="48" count="24" type="method"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.junit.tests.running">
         <metrics coveredelements="0" complexity="0" loc="17" methods="0" classes="1" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="15" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/running/AllRunningTests.java" name="AllRunningTests.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="17" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="15" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AllRunningTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="org.junit.tests.running.classes">
         <metrics coveredelements="571" complexity="262" loc="2067" methods="251" classes="93" statements="413" coveredconditionals="9" coveredmethods="191" elements="680" ncloc="1702" files="12" conditionals="16" coveredstatements="371"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/running/classes/AllClassesTests.java" name="AllClassesTests.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="24" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="22" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AllClassesTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/running/classes/BlockJUnit4ClassRunnerTest.java" name="BlockJUnit4ClassRunnerTest.java">
            <metrics coveredelements="20" coveredconditionals="0" complexity="8" loc="68" coveredmethods="6" methods="7" elements="21" classes="4" ncloc="58" statements="14" conditionals="0" coveredstatements="14"/>
            <class name="BlockJUnit4ClassRunnerTest">
               <metrics coveredelements="16" complexity="5" methods="4" testruns="1" statements="12" coveredconditionals="0" coveredmethods="4" elements="16" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="12" testpasses="1"/>
            </class>
            <class name="BlockJUnit4ClassRunnerTest.OuterClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="BlockJUnit4ClassRunnerTest.OuterClass.Enclosed">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="BlockJUnit4ClassRunnerTest.MethodBlockAfterFireTestStarted">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="1" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="2" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="17" count="0" type="method"/>
            <line complexity="2" visibility="public" signature="detectNonStaticEnclosedClass() : void" num="23" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="MethodBlockAfterFireTestStarted()" num="40" count="1" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="44" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="methodBlockAfterFireTestStarted() : void" num="50" count="1" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStarted(Description) : void" num="55" count="1" type="method"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFinished(Description) : void" num="60" count="1" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/running/classes/ClassLevelMethodsWithIgnoredTestsTest.java" name="ClassLevelMethodsWithIgnoredTestsTest.java">
            <metrics coveredelements="19" coveredconditionals="1" complexity="21" loc="165" coveredmethods="8" methods="19" elements="48" classes="9" ncloc="133" statements="25" conditionals="4" coveredstatements="10"/>
            <class name="ClassLevelMethodsWithIgnoredTestsTest">
               <metrics coveredelements="18" complexity="10" methods="8" testruns="4" statements="15" coveredconditionals="1" coveredmethods="7" elements="27" testfailures="0" testduration="0.020000000000000004" conditionals="4" coveredstatements="10" testpasses="4"/>
            </class>
            <class name="ClassLevelMethodsWithIgnoredTestsTest.BeforeClassWithIgnoredTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ClassLevelMethodsWithIgnoredTestsTest.BeforeClassWithIgnoredClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ClassLevelMethodsWithIgnoredTestsTest.AfterClassWithIgnoredTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ClassLevelMethodsWithIgnoredTestsTest.FilteredTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ClassLevelMethodsWithIgnoredTestsTest.BeforeClassWithFilteredTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ClassLevelMethodsWithIgnoredTestsTest.HasUnfilteredTest">
               <metrics coveredelements="1" complexity="1" methods="1" testruns="1" statements="0" coveredconditionals="0" coveredmethods="1" elements="1" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="1"/>
            </class>
            <class name="ClassLevelMethodsWithIgnoredTestsTest.BrokenRule">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ClassLevelMethodsWithIgnoredTestsTest.ClassRuleWithIgnoredTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="beforeClass() : void" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="37" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="beforeClassShouldNotRunWhenAllTestsAreIgnored() : void" num="44" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="beforeClass() : void" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="beforeClassShouldNotRunWhenWholeClassIsIgnored() : void" num="63" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="71" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="afterClass() : void" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="afterClassShouldNotRunWhenAllTestsAreIgnored() : void" num="83" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="setUpClass() : void" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="98" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unfilteredTest() : void" num="106" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="beforeClassShouldNotRunWhenAllTestsAreFiltered() : void" num="112" count="1" type="method"/>
            <line num="114" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="apply(Statement,Description) : Statement" num="123" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="132" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="classRuleShouldNotBeAppliedWhenAllTestsAreIgnored() : void" num="139" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="141" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="runClassAndVerifyNoFailures(Class&lt;?&gt;,String) : void" num="145" count="4" type="method"/>
            <line num="147" count="4" type="stmt"/>
            <line num="148" count="4" type="stmt"/>
            <line complexity="2" visibility="private" signature="analyseResult(Result,String) : void" num="151" count="5" type="method"/>
            <line num="152" count="5" type="stmt"/>
            <line num="153" count="5" type="stmt"/>
            <line falsecount="5" truecount="0" num="153" type="cond"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="analyzeFailure(Failure,String) : void" num="158" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="160" type="cond"/>
            <line num="161" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/running/classes/EnclosedTest.java" name="EnclosedTest.java">
            <metrics coveredelements="13" coveredconditionals="0" complexity="9" loc="55" coveredmethods="8" methods="9" elements="14" classes="5" ncloc="46" statements="5" conditionals="0" coveredstatements="5"/>
            <class name="EnclosedTest">
               <metrics coveredelements="8" complexity="3" methods="3" testruns="2" statements="5" coveredconditionals="0" coveredmethods="3" elements="8" testfailures="0" testduration="0.024" conditionals="0" coveredstatements="5" testpasses="2"/>
            </class>
            <class name="EnclosedTest.Enclosing">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="EnclosedTest.Enclosing.A">
               <metrics coveredelements="2" complexity="2" methods="2" testruns="2" statements="0" coveredconditionals="0" coveredmethods="2" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="2"/>
            </class>
            <class name="EnclosedTest.Enclosing.B">
               <metrics coveredelements="3" complexity="3" methods="3" testruns="3" statements="0" coveredconditionals="0" coveredmethods="3" elements="3" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="3"/>
            </class>
            <class name="EnclosedTest.Enclosing.C">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="a() : void" num="17" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="b() : void" num="20" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="a() : void" num="24" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="b() : void" num="27" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="c() : void" num="30" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="a() : void" num="34" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="enclosedRunnerPlansConcreteEnclosedClasses() : void" num="38" testsuccess="true" count="1" testduration="0.012" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="enclosedRunnerRunsConcreteEnclosedClasses() : void" num="44" count="1" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="enclosedRunnerIsNamedForEnclosingClass() : void" num="50" testsuccess="true" count="1" testduration="0.012" type="method"/>
            <line num="52" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/running/classes/IgnoreClassTest.java" name="IgnoreClassTest.java">
            <metrics coveredelements="4" coveredconditionals="0" complexity="3" loc="31" coveredmethods="1" methods="3" elements="8" classes="2" ncloc="26" statements="5" conditionals="0" coveredstatements="3"/>
            <class name="IgnoreClassTest">
               <metrics coveredelements="4" complexity="1" methods="1" testruns="1" statements="3" coveredconditionals="0" coveredmethods="1" elements="4" testfailures="0" testduration="0.003" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <class name="IgnoreClassTest.IgnoreMe">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="iFail() : void" num="14" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iFailToo() : void" num="19" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ignoreClass() : void" num="25" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="29" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/running/classes/ParameterizedTestTest.java" name="ParameterizedTestTest.java">
            <metrics coveredelements="232" coveredconditionals="2" complexity="119" loc="809" coveredmethods="90" methods="117" elements="272" classes="28" ncloc="663" statements="151" conditionals="4" coveredstatements="140"/>
            <class name="ParameterizedTestTest">
               <metrics coveredelements="113" complexity="29" methods="29" testruns="15" statements="84" coveredconditionals="0" coveredmethods="29" elements="113" testfailures="0" testduration="0.132" conditionals="0" coveredstatements="84" testpasses="15"/>
            </class>
            <class name="ParameterizedTestTest.AdditionTest">
               <metrics coveredelements="8" complexity="3" methods="3" testruns="4" statements="5" coveredconditionals="0" coveredmethods="3" elements="8" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="5" testpasses="4"/>
            </class>
            <class name="ParameterizedTestTest.ThreeFailures">
               <metrics coveredelements="2" complexity="2" methods="2" testruns="6" statements="2" coveredconditionals="0" coveredmethods="1" elements="4" testfailures="6" testduration="0.002" conditionals="0" coveredstatements="1" testpasses="0"/>
            </class>
            <class name="ParameterizedTestTest.ParameterizedWithoutSpecialTestname">
               <metrics coveredelements="2" coveredconditionals="0" complexity="3" coveredmethods="1" methods="3" elements="4" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="ParameterizedTestTest.AdditionTestWithAnnotatedFields">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="4" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="2" testpasses="4"/>
            </class>
            <class name="ParameterizedTestTest.BadIndexForAnnotatedFieldTest">
               <metrics coveredelements="2" coveredconditionals="0" complexity="3" coveredmethods="1" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="ParameterizedTestTest.BadNumberOfAnnotatedFieldTest">
               <metrics coveredelements="2" coveredconditionals="0" complexity="3" coveredmethods="1" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="ParameterizedTestTest.BeforeAndAfter">
               <metrics coveredelements="8" complexity="5" methods="5" testruns="1" statements="3" coveredconditionals="0" coveredmethods="5" elements="8" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="3" testpasses="1"/>
            </class>
            <class name="ParameterizedTestTest.BeforeParamAndAfterParam">
               <metrics coveredelements="16" complexity="8" methods="8" testruns="4" statements="8" coveredconditionals="0" coveredmethods="8" elements="16" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="8" testpasses="4"/>
            </class>
            <class name="ParameterizedTestTest.MultipleBeforeParamAndAfterParam">
               <metrics coveredelements="16" complexity="8" methods="8" testruns="4" statements="8" coveredconditionals="0" coveredmethods="8" elements="16" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="8" testpasses="4"/>
            </class>
            <class name="ParameterizedTestTest.MultipleParametersBeforeParamAndAfterParam">
               <metrics coveredelements="13" complexity="6" methods="6" testruns="4" statements="7" coveredconditionals="0" coveredmethods="6" elements="13" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="7" testpasses="4"/>
            </class>
            <class name="ParameterizedTestTest.BeforeParamAndAfterParamError">
               <metrics coveredelements="2" coveredconditionals="0" complexity="5" coveredmethods="1" methods="5" elements="6" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="ParameterizedTestTest.BeforeParamAndAfterParamErrorNumberOfParameters">
               <metrics coveredelements="2" coveredconditionals="0" complexity="5" coveredmethods="1" methods="5" elements="6" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="ParameterizedTestTest.EmptyTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ParameterizedTestTest.IncorrectTest">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="ParameterizedTestTest.ProtectedParametersTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ParameterizedTestTest.ParametersNotIterable">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="ParameterizedTestTest.PrivateConstructor">
               <metrics coveredelements="2" coveredconditionals="0" complexity="3" coveredmethods="1" methods="3" elements="4" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="ParameterizedTestTest.AdditionTestWithArray">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="4" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="2" testpasses="4"/>
            </class>
            <class name="ParameterizedTestTest.SingleArgumentTestWithArray">
               <metrics coveredelements="4" complexity="3" methods="3" testruns="2" statements="1" coveredconditionals="0" coveredmethods="3" elements="4" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="2"/>
            </class>
            <class name="ParameterizedTestTest.SingleArgumentTestWithIterable">
               <metrics coveredelements="6" complexity="4" methods="3" testruns="2" statements="3" coveredconditionals="1" coveredmethods="3" elements="8" testfailures="0" testduration="0.0" conditionals="2" coveredstatements="2" testpasses="2"/>
            </class>
            <class name="ParameterizedTestTest.OneShotIterable">
               <metrics coveredelements="6" coveredconditionals="1" complexity="3" coveredmethods="2" methods="2" elements="8" statements="4" conditionals="2" coveredstatements="3"/>
            </class>
            <class name="ParameterizedTestTest.SingleArgumentTestWithCollection">
               <metrics coveredelements="4" complexity="3" methods="3" testruns="2" statements="1" coveredconditionals="0" coveredmethods="3" elements="4" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="2"/>
            </class>
            <class name="ParameterizedTestTest.ExceptionThrowingRunnerFactory">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="ParameterizedTestTest.TestWithUseParametersRunnerFactoryAnnotation">
               <metrics coveredelements="2" coveredconditionals="0" complexity="3" coveredmethods="1" methods="3" elements="4" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="ParameterizedTestTest.UseParameterizedFactoryAbstractTest">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="ParameterizedTestTest.UseParameterizedFactoryTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="2" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ParameterizedTestTest.AssumptionInParametersMethod">
               <metrics coveredelements="6" complexity="4" methods="4" testruns="2" statements="2" coveredconditionals="0" coveredmethods="4" elements="6" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="2" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="data() : Iterable&lt;Object[]&gt;" num="43" count="3" type="method"/>
            <line num="45" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="AdditionTest(int,int,int)" num="55" count="4" type="method"/>
            <line num="56" count="4" type="stmt"/>
            <line num="57" count="4" type="stmt"/>
            <line num="58" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="61" count="4" type="method"/>
            <line num="63" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="countsRuns() : void" num="67" count="1" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="countBeforeRun() : void" num="73" testsuccess="true" count="1" testduration="0.015" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="plansNamedCorrectly() : void" num="79" testsuccess="true" count="1" testduration="0.015" type="method"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="data() : Collection&lt;Integer&gt;" num="89" count="2" type="method"/>
            <line num="91" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSomething() : void" num="97" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="countsFailures() : void" num="103" count="1" type="method"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="failuresNamedCorrectly() : void" num="109" count="1" type="method"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="data() : Collection&lt;Object[]&gt;" num="119" count="1" type="method"/>
            <line num="121" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ParameterizedWithoutSpecialTestname(Object)" num="124" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="testSomething() : void" num="127" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="usesIndexAsTestName() : void" num="132" testsuccess="true" count="1" testduration="0.013" type="method"/>
            <line num="134" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="data() : Iterable&lt;Object[]&gt;" num="142" count="1" type="method"/>
            <line num="144" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="157" count="4" type="method"/>
            <line num="159" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="providesDataByAnnotatedFields() : void" num="163" count="1" type="method"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="data() : Collection&lt;Object[]&gt;" num="172" count="1" type="method"/>
            <line num="174" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="182" count="0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="fib(int) : int" num="187" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="failureOnInitialization() : void" num="192" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="194" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line num="197" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="data() : Collection&lt;Object[]&gt;" num="204" count="1" type="method"/>
            <line num="206" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="214" count="0" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="fib(int) : int" num="219" count="0" type="method"/>
            <line num="220" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numberOfFieldsAndParametersShouldMatch() : void" num="224" testsuccess="true" count="1" testduration="0.012" type="method"/>
            <line num="226" count="1" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line num="228" count="1" type="stmt"/>
            <line num="229" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="before() : void" num="236" count="1" type="method"/>
            <line num="238" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="after() : void" num="241" count="1" type="method"/>
            <line num="243" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="BeforeAndAfter(int)" num="246" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="data() : Collection&lt;Object[]&gt;" num="250" count="1" type="method"/>
            <line num="252" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="aTest() : void" num="255" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="beforeAndAfterClassAreRun() : void" num="260" count="1" type="method"/>
            <line num="262" count="1" type="stmt"/>
            <line num="263" count="1" type="stmt"/>
            <line num="264" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="before() : void" num="270" count="1" type="method"/>
            <line num="272" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="beforeParam(String) : void" num="275" count="2" type="method"/>
            <line num="277" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="afterParam() : void" num="280" count="2" type="method"/>
            <line num="282" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="after() : void" num="285" count="1" type="method"/>
            <line num="287" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="BeforeParamAndAfterParam(String)" num="292" count="4" type="method"/>
            <line num="293" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="data() : Collection&lt;String&gt;" num="296" count="1" type="method"/>
            <line num="298" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="first() : void" num="301" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="303" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="second() : void" num="306" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="308" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="beforeParamAndAfterParamAreRun() : void" num="312" count="1" type="method"/>
            <line num="314" count="1" type="stmt"/>
            <line num="315" count="1" type="stmt"/>
            <line num="316" count="1" type="stmt"/>
            <line num="317" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="before1() : void" num="324" count="2" type="method"/>
            <line num="326" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="before2(String) : void" num="329" count="2" type="method"/>
            <line num="331" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="after2() : void" num="334" count="2" type="method"/>
            <line num="336" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="after1(String) : void" num="339" count="2" type="method"/>
            <line num="341" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="MultipleBeforeParamAndAfterParam(String)" num="346" count="4" type="method"/>
            <line num="347" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="data() : Collection&lt;String&gt;" num="350" count="1" type="method"/>
            <line num="352" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="first() : void" num="355" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="357" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="second() : void" num="360" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="362" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="multipleBeforeParamAndAfterParamAreRun() : void" num="366" count="1" type="method"/>
            <line num="368" count="1" type="stmt"/>
            <line num="369" count="1" type="stmt"/>
            <line num="370" count="1" type="stmt"/>
            <line num="371" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="before(String,int) : void" num="378" count="2" type="method"/>
            <line num="380" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="after(String,int) : void" num="383" count="2" type="method"/>
            <line num="385" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="MultipleParametersBeforeParamAndAfterParam(String,int)" num="391" count="4" type="method"/>
            <line num="392" count="4" type="stmt"/>
            <line num="393" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="data() : Collection&lt;Object[]&gt;" num="396" count="1" type="method"/>
            <line num="398" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="first() : void" num="401" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="403" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="second() : void" num="406" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line num="408" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="multipleParametersBeforeParamAndAfterParamAreRun() : void" num="412" count="1" type="method"/>
            <line num="414" count="1" type="stmt"/>
            <line num="415" count="1" type="stmt"/>
            <line num="416" count="1" type="stmt"/>
            <line num="417" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="beforeParam(String) : void" num="423" count="0" type="method"/>
            <line complexity="1" visibility="private" signature="afterParam() : void" num="427" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="BeforeParamAndAfterParamError(String)" num="431" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="data() : Collection&lt;String&gt;" num="434" count="1" type="method"/>
            <line num="436" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="439" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="beforeParamAndAfterParamValidation() : void" num="444" testsuccess="true" count="1" testduration="0.011" type="method"/>
            <line num="446" count="1" type="stmt"/>
            <line num="447" count="1" type="stmt"/>
            <line num="448" count="1" type="stmt"/>
            <line num="449" count="1" type="stmt"/>
            <line num="450" count="1" type="stmt"/>
            <line num="451" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="beforeParam(String,String) : void" num="456" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="afterParam(String,String,String) : void" num="460" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="BeforeParamAndAfterParamErrorNumberOfParameters(String)" num="464" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="data() : Collection&lt;String&gt;" num="467" count="1" type="method"/>
            <line num="469" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="472" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="beforeParamAndAfterParamValidationNumberOfParameters() : void" num="477" testsuccess="true" count="1" testduration="0.012" type="method"/>
            <line num="479" count="1" type="stmt"/>
            <line num="480" count="1" type="stmt"/>
            <line num="481" count="1" type="stmt"/>
            <line num="482" count="1" type="stmt"/>
            <line num="483" count="1" type="stmt"/>
            <line num="485" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="before() : void" num="491" count="0" type="method"/>
            <line num="493" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="after() : void" num="496" count="0" type="method"/>
            <line num="498" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="validateClassCatchesNoParameters() : void" num="502" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="504" count="1" type="stmt"/>
            <line num="505" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : int" num="510" count="0" type="method"/>
            <line num="512" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="data() : Collection&lt;Object[]&gt;" num="515" count="1" type="method"/>
            <line num="517" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="failuresAddedForBadTestMethod() : void" num="521" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="523" count="1" type="stmt"/>
            <line num="524" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="data() : Collection&lt;Object[]&gt;" num="529" count="0" type="method"/>
            <line num="531" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="aTest() : void" num="534" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="meaningfulFailureWhenParametersNotPublic() : void" num="539" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="541" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="data() : String" num="548" count="1" type="method"/>
            <line num="550" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="aTest() : void" num="553" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="meaningfulFailureWhenParametersAreNotAnIterable() : void" num="558" testsuccess="true" count="1" testduration="0.008" type="method"/>
            <line num="560" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="PrivateConstructor(int)" num="567" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="data() : Collection&lt;Object[]&gt;" num="571" count="1" type="method"/>
            <line num="573" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="aTest() : void" num="576" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="exceptionWhenPrivateConstructor() : void" num="581" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="583" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="data() : Object[][]" num="588" count="1" type="method"/>
            <line num="590" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="603" count="4" type="method"/>
            <line num="605" count="4" type="stmt"/>
            <line complexity="1" visibility="public" signature="runsEveryTestOfArray() : void" num="609" count="1" type="method"/>
            <line num="611" count="1" type="stmt"/>
            <line num="612" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="data() : Object[]" num="617" count="1" type="method"/>
            <line num="619" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="SingleArgumentTestWithArray(Object)" num="622" count="2" type="method"/>
            <line complexity="1" visibility="public" signature="aTest() : void" num="625" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="runsForEverySingleArgumentOfArray() : void" num="630" count="1" type="method"/>
            <line num="632" count="1" type="stmt"/>
            <line num="633" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="data() : Iterable&lt;? extends Object&gt;" num="640" count="1" type="method"/>
            <line num="642" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="642" type="cond"/>
            <line num="643" count="0" type="stmt"/>
            <line num="645" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="SingleArgumentTestWithIterable(Object)" num="648" count="2" type="method"/>
            <line complexity="1" visibility="public" signature="aTest() : void" num="651" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line complexity="1" visibility="package" signature="OneShotIterable(Iterable&lt;T&gt;)" num="660" count="1" type="method"/>
            <line num="661" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="iterator() : Iterator&lt;T&gt;" num="664" count="1" type="method"/>
            <line num="665" count="1" type="stmt"/>
            <line falsecount="0" truecount="1" num="665" type="cond"/>
            <line num="666" count="1" type="stmt"/>
            <line num="668" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="runsForEverySingleArgumentOfIterable() : void" num="672" count="1" type="method"/>
            <line num="674" count="1" type="stmt"/>
            <line num="676" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="data() : Iterable&lt;? extends Object&gt;" num="681" count="1" type="method"/>
            <line num="683" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="SingleArgumentTestWithCollection(Object)" num="686" count="2" type="method"/>
            <line complexity="1" visibility="public" signature="aTest() : void" num="689" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="runsForEverySingleArgumentOfCollection() : void" num="694" count="1" type="method"/>
            <line num="696" count="1" type="stmt"/>
            <line num="698" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRunnerForTestWithParameters(TestWithParameters) : Runner" num="704" count="2" type="method"/>
            <line num="706" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="data() : Iterable&lt;? extends Object&gt;" num="714" count="1" type="method"/>
            <line num="716" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="TestWithUseParametersRunnerFactoryAnnotation(Object)" num="719" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="aTest() : void" num="722" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="usesParametersRunnerFactoryThatWasSpecifiedByAnnotation() : void" num="727" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="729" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertTestCreatesSingleFailureWithMessage(Class&lt;?&gt;,String) : void" num="734" count="3" type="method"/>
            <line num="735" count="3" type="stmt"/>
            <line num="736" count="3" type="stmt"/>
            <line num="737" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="data() : Iterable&lt;? extends Object&gt;" num="743" count="1" type="method"/>
            <line num="745" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="UseParameterizedFactoryTest(String)" num="752" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="parameterizedTest() : void" num="756" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="usesParametersRunnerFactoryThatWasSpecifiedByAnnotationInSuperClass() : void" num="761" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="763" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="data() : Iterable&lt;String&gt;" num="772" count="2" type="method"/>
            <line num="774" count="2" type="stmt"/>
            <line num="775" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="AssumptionInParametersMethod(String)" num="778" count="2" type="method"/>
            <line complexity="1" visibility="public" signature="test1() : void" num="781" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="test2() : void" num="785" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="testsAreExecutedWhenAssumptionInParametersMethodDoesNotFail() : void" num="790" count="1" type="method"/>
            <line num="792" count="1" type="stmt"/>
            <line num="793" count="1" type="stmt"/>
            <line num="794" count="1" type="stmt"/>
            <line num="795" count="1" type="stmt"/>
            <line num="796" count="1" type="stmt"/>
            <line num="797" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testsAreNotExecutedWhenAssumptionInParametersMethodFails() : void" num="800" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="802" count="1" type="stmt"/>
            <line num="803" count="1" type="stmt"/>
            <line num="804" count="1" type="stmt"/>
            <line num="805" count="1" type="stmt"/>
            <line num="806" count="1" type="stmt"/>
            <line num="807" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/running/classes/ParentRunnerFilteringTest.java" name="ParentRunnerFilteringTest.java">
            <metrics coveredelements="61" coveredconditionals="2" complexity="18" loc="171" coveredmethods="13" methods="14" elements="69" classes="6" ncloc="145" statements="51" conditionals="4" coveredstatements="46"/>
            <class name="ParentRunnerFilteringTest">
               <metrics coveredelements="46" complexity="10" methods="8" testruns="3" statements="40" coveredconditionals="0" coveredmethods="8" elements="48" testfailures="0" testduration="0.025" conditionals="0" coveredstatements="38" testpasses="3"/>
            </class>
            <class name="ParentRunnerFilteringTest.CountingFilter">
               <metrics coveredelements="10" coveredconditionals="2" complexity="5" coveredmethods="2" methods="3" elements="16" statements="9" conditionals="4" coveredstatements="6"/>
            </class>
            <class name="ParentRunnerFilteringTest.ExampleTest">
               <metrics coveredelements="1" complexity="1" methods="1" testruns="2" statements="0" coveredconditionals="0" coveredmethods="1" elements="1" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="2"/>
            </class>
            <class name="ParentRunnerFilteringTest.ExampleSuite">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ParentRunnerFilteringTest.SuiteWithUnmodifiableChildList">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="ParentRunnerFilteringTest.ExampleSuiteWithUnmodifiableChildList">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="notThisMethodName(String) : Filter" num="31" count="3" type="method"/>
            <line num="32" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldRun(Description) : boolean" num="33" count="6" type="method"/>
            <line num="35" count="6" type="stmt"/>
            <line complexity="1" visibility="public" signature="describe() : String" num="39" count="1" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="shouldRun(Description) : boolean" num="49" count="3" type="method"/>
            <line num="51" count="3" type="stmt"/>
            <line num="52" count="3" type="stmt"/>
            <line falsecount="0" truecount="3" num="52" type="cond"/>
            <line num="53" count="3" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="describe() : String" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getCount(Description) : int" num="65" count="3" type="method"/>
            <line num="66" count="3" type="stmt"/>
            <line falsecount="3" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="70" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="test1() : void" num="75" testsuccess="true" count="2" testduration="0.0" type="method"/>
            <line complexity="2" visibility="public" signature="testSuiteFiltering() : void" num="86" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="SuiteWithUnmodifiableChildList(Class&lt;?&gt;,RunnerBuilder)" num="100" count="1" type="method"/>
            <line num="103" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getChildren() : List&lt;Runner&gt;" num="106" count="1" type="method"/>
            <line num="108" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testSuiteFilteringWithUnmodifiableChildList() : void" num="117" testsuccess="true" count="1" testduration="0.006" type="method"/>
            <line num="119" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="125" count="1" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunSuiteFiltering() : void" num="130" testsuccess="true" count="1" testduration="0.013" type="method"/>
            <line num="132" count="1" type="stmt"/>
            <line num="133" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCountClassFiltering() : void" num="138" count="1" type="method"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="149" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCountSuiteFiltering() : void" num="152" count="1" type="method"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="157" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="159" count="1" type="stmt"/>
            <line num="160" count="1" type="stmt"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="166" count="1" type="stmt"/>
            <line num="168" count="1" type="stmt"/>
            <line num="169" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/running/classes/ParentRunnerTest.java" name="ParentRunnerTest.java">
            <metrics coveredelements="112" coveredconditionals="4" complexity="42" loc="310" coveredmethods="29" methods="40" elements="127" classes="9" ncloc="261" statements="83" conditionals="4" coveredstatements="79"/>
            <class name="ParentRunnerTest">
               <metrics coveredelements="76" complexity="15" methods="15" testruns="5" statements="63" coveredconditionals="0" coveredmethods="14" elements="78" testfailures="0" testduration="0.02" conditionals="0" coveredstatements="62" testpasses="5"/>
            </class>
            <class name="ParentRunnerTest.FruitTest">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="2" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="2" testpasses="2"/>
            </class>
            <class name="ParentRunnerTest.Exclude">
               <metrics coveredelements="4" coveredconditionals="0" complexity="3" coveredmethods="2" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="ParentRunnerTest.ExampleTest">
               <metrics coveredelements="1" complexity="3" methods="3" testruns="1" statements="0" coveredconditionals="0" coveredmethods="1" elements="3" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="1"/>
            </class>
            <class name="ParentRunnerTest.NonPublicTestClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="2" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ParentRunnerTest.AssertionErrorAtParentLevelTest">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="ParentRunnerTest.AssumptionViolatedAtParentLevelTest">
               <metrics coveredelements="2" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="ParentRunnerTest.TestTest">
               <metrics coveredelements="1" complexity="4" methods="4" testruns="3" statements="2" coveredconditionals="0" coveredmethods="1" elements="6" testfailures="2" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="1"/>
            </class>
            <class name="ParentRunnerTest.CountingRunListener">
               <metrics coveredelements="22" coveredconditionals="4" complexity="9" coveredmethods="7" methods="7" elements="22" statements="11" conditionals="4" coveredstatements="11"/>
            </class>
            <line complexity="1" visibility="public" signature="apple() : void" num="36" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="Banana() : void" num="41" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="useChildHarvester() : void" num="47" count="1" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="schedule(Runnable) : void" num="52" count="2" type="method"/>
            <line num="53" count="2" type="stmt"/>
            <line num="54" count="2" type="stmt"/>
            <line num="55" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="finished() : void" num="58" count="1" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMultipleFilters() : void" num="67" count="1" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="isEmpty() : Matcher&lt;List&lt;?&gt;&gt;" num="79" count="1" type="method"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeTo(org.hamcrest.Description) : void" num="81" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="matchesSafely(List&lt;?&gt;) : boolean" num="85" count="1" type="method"/>
            <line num="87" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="Exclude(String)" num="95" count="2" type="method"/>
            <line num="96" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldRun(Description) : boolean" num="99" count="5" type="method"/>
            <line num="101" count="5" type="stmt"/>
            <line complexity="1" visibility="public" signature="describe() : String" num="104" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test1() : void" num="111" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="test2() : void" num="115" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="test3() : void" num="119" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="failWithHelpfulMessageForProtectedClassRule() : void" num="124" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="126" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="failWithHelpfulMessageForNonStaticClassRule() : void" num="130" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="132" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="NonPublicTestClass()" num="137" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="alwaysPasses() : void" num="140" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="cannotBeCreatedWithNonPublicTestClass() : void" num="144" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="146" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertClassHasFailureMessage(Class&lt;?&gt;,String) : void" num="151" count="3" type="method"/>
            <line num="152" count="3" type="stmt"/>
            <line num="153" count="3" type="stmt"/>
            <line num="154" count="3" type="stmt"/>
            <line num="155" count="3" type="stmt"/>
            <line num="156" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="beforeClass() : void" num="161" count="1" type="method"/>
            <line num="163" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="166" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="assertionErrorAtParentLevelTest() : void" num="170" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line num="176" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line num="179" count="1" type="stmt"/>
            <line num="180" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="beforeClass() : void" num="186" count="1" type="method"/>
            <line num="189" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="192" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="assumptionViolatedAtParentLevel() : void" num="196" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="198" count="1" type="stmt"/>
            <line num="199" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="204" count="1" type="stmt"/>
            <line num="205" count="1" type="stmt"/>
            <line num="206" count="1" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
            <line num="208" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="pass() : void" num="212" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="fail() : void" num="215" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ignore() : void" num="220" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="assumptionFail() : void" num="224" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="227" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parentRunnerTestMethods() : void" num="231" count="1" type="method"/>
            <line num="233" count="1" type="stmt"/>
            <line num="234" count="1" type="stmt"/>
            <line num="235" count="1" type="stmt"/>
            <line num="236" count="1" type="stmt"/>
            <line num="237" count="1" type="stmt"/>
            <line num="239" count="1" type="stmt"/>
            <line num="240" count="1" type="stmt"/>
            <line num="241" count="1" type="stmt"/>
            <line num="242" count="1" type="stmt"/>
            <line num="243" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="runTestWithParentRunner(Class&lt;?&gt;) : CountingRunListener" num="246" count="3" type="method"/>
            <line num="247" count="3" type="stmt"/>
            <line num="248" count="3" type="stmt"/>
            <line num="249" count="3" type="stmt"/>
            <line num="250" count="3" type="stmt"/>
            <line num="251" count="3" type="stmt"/>
            <line num="252" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSuiteStarted(Description) : void" num="267" count="3" type="method"/>
            <line num="269" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSuiteFinished(Description) : void" num="272" count="3" type="method"/>
            <line num="274" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStarted(Description) : void" num="277" count="3" type="method"/>
            <line num="279" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFinished(Description) : void" num="282" count="3" type="method"/>
            <line num="284" count="3" type="stmt"/>
            <line complexity="2" visibility="public" signature="testFailure(Failure) : void" num="287" count="2" type="method"/>
            <line num="289" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="289" type="cond"/>
            <line num="290" count="1" type="stmt"/>
            <line num="292" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testAssumptionFailure(Failure) : void" num="296" count="2" type="method"/>
            <line num="298" count="2" type="stmt"/>
            <line falsecount="1" truecount="1" num="298" type="cond"/>
            <line num="299" count="1" type="stmt"/>
            <line num="301" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testIgnored(Description) : void" num="305" count="1" type="method"/>
            <line num="307" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/running/classes/RunWithTest.java" name="RunWithTest.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="9" loc="88" coveredmethods="6" methods="9" elements="25" classes="6" ncloc="69" statements="16" conditionals="0" coveredstatements="13"/>
            <class name="RunWithTest">
               <metrics coveredelements="12" complexity="3" methods="3" testruns="3" statements="9" coveredconditionals="0" coveredmethods="3" elements="12" testfailures="0" testduration="0.007" conditionals="0" coveredstatements="9" testpasses="3"/>
            </class>
            <class name="RunWithTest.ExampleRunner">
               <metrics coveredelements="7" coveredconditionals="0" complexity="4" coveredmethods="3" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="RunWithTest.ExampleTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RunWithTest.SubExampleTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RunWithTest.BadRunner">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RunWithTest.Empty">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ExampleRunner(Class&lt;?&gt;)" num="18" count="2" type="method"/>
            <line num="19" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(RunNotifier) : void" num="22" count="2" type="method"/>
            <line num="24" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCount() : int" num="27" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescription() : Description" num="33" count="8" type="method"/>
            <line num="35" count="8" type="stmt"/>
            <line num="36" count="8" type="stmt"/>
            <line complexity="1" visibility="public" signature="run() : void" num="44" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="46" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="runWithExtendsToSubclasses() : void" num="57" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="getDescription() : Description" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(RunNotifier) : void" num="71" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="characterizeErrorMessageFromBadRunner() : void" num="81" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="83" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/running/classes/SuiteTest.java" name="SuiteTest.java">
            <metrics coveredelements="61" coveredconditionals="0" complexity="21" loc="218" coveredmethods="19" methods="21" elements="64" classes="15" ncloc="178" statements="43" conditionals="0" coveredstatements="42"/>
            <class name="SuiteTest">
               <metrics coveredelements="55" complexity="15" methods="15" testruns="9" statements="40" coveredconditionals="0" coveredmethods="15" elements="55" testfailures="0" testduration="0.068" conditionals="0" coveredstatements="40" testpasses="9"/>
            </class>
            <class name="SuiteTest.TestA">
               <metrics coveredelements="1" complexity="1" methods="1" testruns="6" statements="0" coveredconditionals="0" coveredmethods="1" elements="1" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="0" testpasses="6"/>
            </class>
            <class name="SuiteTest.TestB">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="4" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="4" testduration="0.002" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="SuiteTest.All">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SuiteTest.NonPublicSuite">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SuiteTest.NonPublicSuiteWithBeforeClass">
               <metrics coveredelements="1" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SuiteTest.InheritsAll">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SuiteTest.AllWithBeforeAndAfterClass">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="SuiteTest.AllWithOutAnnotation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SuiteTest.InfiniteLoop">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SuiteTest.BiInfiniteLoop">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SuiteTest.Hydra">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SuiteTest.Hercules">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SuiteTest.WithoutDefaultConstructor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SuiteTest.NoSuiteClassesAnnotation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="pass() : void" num="28" testsuccess="true" count="6" testduration="0.001" type="method"/>
            <line complexity="1" visibility="public" signature="fail() : void" num="34" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="doesNothing() : void" num="53" count="1" type="method"/>
            <line complexity="1" visibility="public" signature="ensureTestIsRun() : void" num="60" count="1" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ensureInheritedTestIsRun() : void" num="68" count="1" type="method"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="suiteTestCountIsCorrect() : void" num="76" testsuccess="true" count="1" testduration="0.01" type="method"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="suiteClassDoesNotNeedToBePublic() : void" num="82" count="1" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="nonPublicSuiteClassWithBeforeClassPasses() : void" num="90" count="1" type="method"/>
            <line num="92" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ensureSuitesWorkWithForwardCompatibility() : void" num="95" count="1" type="method"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="forwardCompatibilityWorksWithGetTests() : void" num="103" testsuccess="true" count="1" testduration="0.011" type="method"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="forwardCompatibilityWorksWithTestCount() : void" num="110" testsuccess="true" count="1" testduration="0.01" type="method"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="before() : void" num="122" count="1" type="method"/>
            <line num="124" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="after() : void" num="127" count="1" type="method"/>
            <line num="129" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="beforeAndAfterClassRunOnSuite() : void" num="133" count="1" type="method"/>
            <line num="135" count="1" type="stmt"/>
            <line num="136" count="1" type="stmt"/>
            <line num="137" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="withoutSuiteClassAnnotationProducesFailure() : void" num="144" testsuccess="true" count="1" testduration="0.003" type="method"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line num="148" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="whatHappensWhenASuiteHasACycle() : void" num="159" testsuccess="true" count="1" testduration="0.005" type="method"/>
            <line num="161" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="whatHappensWhenASuiteHasAForkingCycle() : void" num="170" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="whatHappensWhenASuiteContainsItselfIndirectly() : void" num="190" testsuccess="true" count="1" testduration="0.011" type="method"/>
            <line num="192" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="WithoutDefaultConstructor(int)" num="199" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="suiteShouldBeOKwithNonDefaultConstructor() : void" num="204" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line num="206" count="1" type="stmt"/>
            <line num="207" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="suiteShouldComplainAboutNoSuiteClassesAnnotation() : void" num="214" testsuccess="true" count="1" testduration="0.007" type="method"/>
            <line num="216" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/running/classes/ThreadsTest.java" name="ThreadsTest.java">
            <metrics coveredelements="22" coveredconditionals="0" complexity="8" loc="83" coveredmethods="8" methods="8" elements="22" classes="3" ncloc="64" statements="14" conditionals="0" coveredstatements="14"/>
            <class name="ThreadsTest">
               <metrics coveredelements="15" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="15" statements="11" conditionals="0" coveredstatements="11"/>
            </class>
            <class name="ThreadsTest.TestWithInterrupt">
               <metrics coveredelements="4" complexity="2" methods="2" testruns="2" statements="2" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="2" testpasses="2"/>
            </class>
            <class name="ThreadsTest.TestWithInterruptFromAfterClass">
               <metrics coveredelements="3" complexity="2" methods="2" testruns="1" statements="1" coveredconditionals="0" coveredmethods="2" elements="3" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="1" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="interruptCurrentThread() : void" num="27" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="29" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="otherTestCaseInterruptingCurrentThread() : void" num="32" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="currentThreadInterruptedStatusIsClearedAfterEachTestExecution() : void" num="39" count="1" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFinished(Description) : void" num="42" count="2" type="method"/>
            <line num="44" count="2" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="interruptCurrentThread() : void" num="56" count="1" type="method"/>
            <line num="58" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="61" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="currentThreadInterruptStatusIsClearedAfterSuiteExecution() : void" num="67" count="1" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSuiteFinished(Description) : void" num="70" count="1" type="method"/>
            <line num="72" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="81" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/running/classes/UseSuiteAsASuperclassTest.java" name="UseSuiteAsASuperclassTest.java">
            <metrics coveredelements="8" coveredconditionals="0" complexity="4" loc="45" coveredmethods="3" methods="4" elements="10" classes="5" ncloc="37" statements="6" conditionals="0" coveredstatements="5"/>
            <class name="UseSuiteAsASuperclassTest">
               <metrics coveredelements="5" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="5" statements="4" conditionals="0" coveredstatements="4"/>
            </class>
            <class name="UseSuiteAsASuperclassTest.TestA">
               <metrics coveredelements="1" complexity="1" methods="1" testruns="1" statements="0" coveredconditionals="0" coveredmethods="1" elements="1" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="0" testpasses="1"/>
            </class>
            <class name="UseSuiteAsASuperclassTest.TestB">
               <metrics coveredelements="0" complexity="1" methods="1" testruns="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" testfailures="1" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="UseSuiteAsASuperclassTest.MySuite">
               <metrics coveredelements="2" coveredconditionals="0" complexity="1" coveredmethods="1" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="1"/>
            </class>
            <class name="UseSuiteAsASuperclassTest.AllWithMySuite">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="pass() : void" num="16" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line complexity="1" visibility="public" signature="dontPass() : void" num="22" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MySuite(Class&lt;?&gt;)" num="29" count="1" type="method"/>
            <line num="30" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="ensureTestsAreRun() : void" num="38" count="1" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.junit.tests.deprecated">
         <metrics coveredelements="11" complexity="7" loc="77" methods="7" classes="4" statements="9" coveredconditionals="0" coveredmethods="4" elements="16" ncloc="60" files="2" conditionals="0" coveredstatements="7"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/deprecated/AllDeprecatedTests.java" name="AllDeprecatedTests.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="13" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AllDeprecatedTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/deprecated/JUnit4ClassRunnerTest.java" name="JUnit4ClassRunnerTest.java">
            <metrics coveredelements="11" coveredconditionals="0" complexity="7" loc="64" coveredmethods="4" methods="7" elements="16" classes="3" ncloc="49" statements="9" conditionals="0" coveredstatements="7"/>
            <class name="JUnit4ClassRunnerTest">
               <metrics coveredelements="8" complexity="2" methods="2" testruns="1" statements="6" coveredconditionals="0" coveredmethods="2" elements="8" testfailures="0" testduration="0.002" conditionals="0" coveredstatements="6" testpasses="1"/>
            </class>
            <class name="JUnit4ClassRunnerTest.Example">
               <metrics coveredelements="1" complexity="2" methods="2" testruns="2" statements="1" coveredconditionals="0" coveredmethods="1" elements="3" testfailures="1" testduration="0.001" conditionals="0" coveredstatements="0" testpasses="1"/>
            </class>
            <class name="JUnit4ClassRunnerTest.UnconstructableExample">
               <metrics coveredelements="2" coveredconditionals="0" complexity="3" coveredmethods="1" methods="3" elements="5" statements="2" conditionals="0" coveredstatements="1"/>
            </class>
            <line complexity="1" visibility="public" signature="success() : void" num="23" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="failure() : void" num="27" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="runWithOldJUnit4ClassRunner() : void" num="33" count="1" type="method"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="UnconstructableExample()" num="43" count="2" type="method"/>
            <line num="44" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="success() : void" num="47" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="failure() : void" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="runWithOldJUnit4ClassRunnerAndBadConstructor() : void" num="58" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
         </file>
      </package>
      <package name="org.junit.tests.experimental.parallel">
         <metrics coveredelements="51" complexity="11" loc="153" methods="11" classes="6" statements="40" coveredconditionals="0" coveredmethods="11" elements="51" ncloc="131" files="3" conditionals="0" coveredstatements="40"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/parallel/AllParallelTests.java" name="AllParallelTests.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="13" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AllParallelTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/parallel/ParallelClassTest.java" name="ParallelClassTest.java">
            <metrics coveredelements="32" coveredconditionals="0" complexity="6" loc="79" coveredmethods="6" methods="6" elements="32" classes="3" ncloc="69" statements="26" conditionals="0" coveredstatements="26"/>
            <class name="ParallelClassTest">
               <metrics coveredelements="16" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="16" statements="14" conditionals="0" coveredstatements="14"/>
            </class>
            <class name="ParallelClassTest.Example1">
               <metrics coveredelements="8" complexity="2" methods="2" testruns="2" statements="6" coveredconditionals="0" coveredmethods="2" elements="8" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="6" testpasses="2"/>
            </class>
            <class name="ParallelClassTest.Example2">
               <metrics coveredelements="8" complexity="2" methods="2" testruns="1" statements="6" coveredconditionals="0" coveredmethods="2" elements="8" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="6" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="one() : void" num="27" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="two() : void" num="34" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="one() : void" num="43" count="1" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="two() : void" num="50" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="init() : void" num="58" count="1" type="method"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testsRunInParallel() : void" num="67" count="1" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line num="72" count="1" type="stmt"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/parallel/ParallelMethodTest.java" name="ParallelMethodTest.java">
            <metrics coveredelements="19" coveredconditionals="0" complexity="5" loc="61" coveredmethods="5" methods="5" elements="19" classes="2" ncloc="51" statements="14" conditionals="0" coveredstatements="14"/>
            <class name="ParallelMethodTest">
               <metrics coveredelements="9" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="9" statements="7" conditionals="0" coveredstatements="7"/>
            </class>
            <class name="ParallelMethodTest.Example">
               <metrics coveredelements="10" complexity="3" methods="3" testruns="1" statements="7" coveredconditionals="0" coveredmethods="3" elements="10" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="7" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="init() : void" num="27" count="1" type="method"/>
            <line num="29" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="one() : void" num="32" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="two() : void" num="39" count="1" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="init() : void" num="47" count="1" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testsRunInParallel() : void" num="53" count="1" type="method"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
         </file>
      </package>
      <package name="junit.tests.framework">
         <metrics coveredelements="443" complexity="170" loc="1088" methods="141" classes="24" statements="345" coveredconditionals="2" coveredmethods="126" elements="490" ncloc="830" files="22" conditionals="4" coveredstatements="315"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/junit/tests/framework/AllTests.java" name="AllTests.java">
            <metrics coveredelements="14" coveredconditionals="0" complexity="2" loc="31" coveredmethods="1" methods="2" elements="16" classes="1" ncloc="22" statements="14" conditionals="0" coveredstatements="13"/>
            <class name="AllTests">
               <metrics coveredelements="14" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="16" statements="14" conditionals="0" coveredstatements="13"/>
            </class>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="11" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="suite() : Test" num="15" count="2" type="method"/>
            <line num="16" count="2" type="stmt"/>
            <line num="17" count="2" type="stmt"/>
            <line num="18" count="2" type="stmt"/>
            <line num="19" count="2" type="stmt"/>
            <line num="20" count="2" type="stmt"/>
            <line num="21" count="2" type="stmt"/>
            <line num="22" count="2" type="stmt"/>
            <line num="23" count="2" type="stmt"/>
            <line num="24" count="2" type="stmt"/>
            <line num="25" count="2" type="stmt"/>
            <line num="26" count="2" type="stmt"/>
            <line num="27" count="2" type="stmt"/>
            <line num="28" count="2" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/junit/tests/framework/AssertTest.java" name="AssertTest.java">
            <metrics coveredelements="74" coveredconditionals="0" complexity="30" loc="171" coveredmethods="16" methods="16" elements="88" classes="1" ncloc="137" statements="72" conditionals="0" coveredstatements="58"/>
            <class name="AssertTest">
               <metrics coveredelements="74" complexity="30" methods="16" testruns="16" statements="72" coveredconditionals="0" coveredmethods="16" elements="88" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="58" testpasses="16"/>
            </class>
            <line complexity="2" visibility="public" signature="testFail() : void" num="18" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="21" count="1" type="stmt"/>
            <line num="22" count="1" type="stmt"/>
            <line num="24" count="1" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testAssertionFailedErrorToStringWithNoMessage() : void" num="29" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line num="36" count="1" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testAssertionFailedErrorToStringWithMessage() : void" num="41" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testAssertEquals() : void" num="53" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAssertEqualsNull() : void" num="64" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAssertStringEquals() : void" num="68" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testAssertNullNotEqualsString() : void" num="72" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="73" count="1" type="stmt"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testAssertStringNotEqualsNull() : void" num="80" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testAssertNullNotEqualsNull() : void" num="89" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testAssertNull() : void" num="99" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testAssertNotNull() : void" num="109" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testAssertTrue() : void" num="119" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="120" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testAssertFalse() : void" num="129" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="130" count="1" type="stmt"/>
            <line num="131" count="1" type="stmt"/>
            <line num="132" count="1" type="stmt"/>
            <line num="134" count="1" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testAssertSame() : void" num="139" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="140" count="1" type="stmt"/>
            <line num="141" count="1" type="stmt"/>
            <line num="142" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testAssertNotSame() : void" num="150" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="151" count="1" type="stmt"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line num="156" count="1" type="stmt"/>
            <line num="158" count="1" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testAssertNotSameFailsNull() : void" num="163" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="164" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line num="167" count="1" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/junit/tests/framework/AssertionFailedErrorTest.java" name="AssertionFailedErrorTest.java">
            <metrics coveredelements="9" coveredconditionals="0" complexity="3" loc="23" coveredmethods="3" methods="3" elements="9" classes="1" ncloc="18" statements="6" conditionals="0" coveredstatements="6"/>
            <class name="AssertionFailedErrorTest">
               <metrics coveredelements="9" complexity="3" methods="3" testruns="3" statements="6" coveredconditionals="0" coveredmethods="3" elements="9" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="6" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="testCreateErrorWithoutMessage() : void" num="9" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="10" count="1" type="stmt"/>
            <line num="11" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCreateErrorWithMessage() : void" num="14" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="15" count="1" type="stmt"/>
            <line num="16" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCreateErrorWithoutMessageInsteadOfNull() : void" num="19" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/junit/tests/framework/ComparisonCompactorTest.java" name="ComparisonCompactorTest.java">
            <metrics coveredelements="57" coveredconditionals="0" complexity="19" loc="102" coveredmethods="19" methods="19" elements="57" classes="1" ncloc="81" statements="38" conditionals="0" coveredstatements="38"/>
            <class name="ComparisonCompactorTest">
               <metrics coveredelements="57" complexity="19" methods="19" testruns="19" statements="38" coveredconditionals="0" coveredmethods="19" elements="57" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="38" testpasses="19"/>
            </class>
            <line complexity="1" visibility="public" signature="testMessage() : void" num="8" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="9" count="1" type="stmt"/>
            <line num="10" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStartSame() : void" num="13" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="14" count="1" type="stmt"/>
            <line num="15" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEndSame() : void" num="18" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="19" count="1" type="stmt"/>
            <line num="20" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSame() : void" num="23" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNoContextStartAndEndSame() : void" num="28" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="29" count="1" type="stmt"/>
            <line num="30" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStartAndEndContext() : void" num="33" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="34" count="1" type="stmt"/>
            <line num="35" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStartAndEndContextWithEllipses() : void" num="38" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="39" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testComparisonErrorStartSameComplete() : void" num="43" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testComparisonErrorEndSameComplete() : void" num="48" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testComparisonErrorEndSameCompleteContext() : void" num="53" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testComparisonErrorOverlappingMatches() : void" num="58" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testComparisonErrorOverlappingMatchesContext() : void" num="63" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testComparisonErrorOverlappingMatches2() : void" num="68" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testComparisonErrorOverlappingMatches2Context() : void" num="73" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line num="75" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testComparisonErrorWithActualNull() : void" num="78" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testComparisonErrorWithActualNullContext() : void" num="83" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line num="85" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testComparisonErrorWithExpectedNull() : void" num="88" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testComparisonErrorWithExpectedNullContext() : void" num="93" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testBug609972() : void" num="98" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/junit/tests/framework/ComparisonFailureTest.java" name="ComparisonFailureTest.java">
            <metrics coveredelements="19" coveredconditionals="2" complexity="9" loc="47" coveredmethods="4" methods="4" elements="26" classes="1" ncloc="39" statements="18" conditionals="4" coveredstatements="13"/>
            <class name="ComparisonFailureTest">
               <metrics coveredelements="19" complexity="9" methods="4" testruns="4" statements="18" coveredconditionals="2" coveredmethods="4" elements="26" testfailures="0" testduration="0.0" conditionals="4" coveredstatements="13" testpasses="4"/>
            </class>
            <line complexity="1" visibility="public" signature="testConnection() : void" num="9" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="10" count="1" type="stmt"/>
            <line num="11" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testThrowing() : void" num="15" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="16" count="1" type="stmt"/>
            <line num="17" count="1" type="stmt"/>
            <line num="19" count="1" type="stmt"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testExceptionToStringWithMessage() : void" num="24" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="25" count="1" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="28" type="cond"/>
            <line num="29" count="0" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="testExceptionToStringWithoutMessage() : void" num="36" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line num="38" count="1" type="stmt"/>
            <line num="40" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="40" type="cond"/>
            <line num="41" count="0" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/junit/tests/framework/DoublePrecisionAssertTest.java" name="DoublePrecisionAssertTest.java">
            <metrics coveredelements="18" coveredconditionals="0" complexity="11" loc="55" coveredmethods="7" methods="7" elements="22" classes="1" ncloc="42" statements="15" conditionals="0" coveredstatements="11"/>
            <class name="DoublePrecisionAssertTest">
               <metrics coveredelements="18" complexity="11" methods="7" testruns="7" statements="15" coveredconditionals="0" coveredmethods="7" elements="22" testfailures="0" testduration="0.001" conditionals="0" coveredstatements="11" testpasses="7"/>
            </class>
            <line complexity="2" visibility="public" signature="testAssertEqualsNaNFails() : void" num="11" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="12" count="1" type="stmt"/>
            <line num="13" count="1" type="stmt"/>
            <line num="14" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testAssertNaNEqualsFails() : void" num="19" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAssertNaNEqualsNaN() : void" num="27" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="28" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testAssertPosInfinityNotEqualsNegInfinity() : void" num="31" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testAssertPosInfinityNotEquals() : void" num="39" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAssertPosInfinityEqualsInfinity() : void" num="47" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAssertNegInfinityEqualsInfinity() : void" num="51" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="52" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/junit/tests/framework/Failure.java" name="Failure.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="13" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="7" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="Failure">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="runTest() : void" num="9" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/junit/tests/framework/FloatAssertTest.java" name="FloatAssertTest.java">
            <metrics coveredelements="22" coveredconditionals="0" complexity="13" loc="63" coveredmethods="8" methods="8" elements="26" classes="1" ncloc="49" statements="18" conditionals="0" coveredstatements="14"/>
            <class name="FloatAssertTest">
               <metrics coveredelements="22" complexity="13" methods="8" testruns="8" statements="18" coveredconditionals="0" coveredmethods="8" elements="26" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="14" testpasses="8"/>
            </class>
            <line complexity="2" visibility="public" signature="testAssertEqualsNaNFails() : void" num="11" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="12" count="1" type="stmt"/>
            <line num="13" count="1" type="stmt"/>
            <line num="14" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testAssertNaNEqualsFails() : void" num="19" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="20" count="1" type="stmt"/>
            <line num="21" count="1" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAssertNaNEqualsNaN() : void" num="27" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="28" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testAssertPosInfinityNotEqualsNegInfinity() : void" num="31" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="32" count="1" type="stmt"/>
            <line num="33" count="1" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testAssertPosInfinityNotEquals() : void" num="39" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="41" count="1" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAssertPosInfinityEqualsInfinity() : void" num="47" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAssertNegInfinityEqualsInfinity() : void" num="51" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testAllInfinities() : void" num="55" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="58" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/junit/tests/framework/InheritedTestCase.java" name="InheritedTestCase.java">
            <metrics coveredelements="1" coveredconditionals="0" complexity="1" loc="9" coveredmethods="1" methods="1" elements="1" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="InheritedTestCase">
               <metrics coveredelements="1" complexity="1" methods="1" testruns="2" statements="0" coveredconditionals="0" coveredmethods="1" elements="1" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="test2() : void" num="7" testsuccess="true" count="1" testduration="0.0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/junit/tests/framework/NoArgTestCaseTest.java" name="NoArgTestCaseTest.java">
            <metrics coveredelements="1" coveredconditionals="0" complexity="1" loc="8" coveredmethods="1" methods="1" elements="1" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="NoArgTestCaseTest">
               <metrics coveredelements="1" complexity="1" methods="1" testruns="2" statements="0" coveredconditionals="0" coveredmethods="1" elements="1" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="testNothing() : void" num="6" testsuccess="true" count="2" testduration="0.0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/junit/tests/framework/NoTestCaseClass.java" name="NoTestCaseClass.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="9" coveredmethods="0" methods="1" elements="1" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="NoTestCaseClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testSuccess() : void" num="7" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/junit/tests/framework/NoTestCases.java" name="NoTestCases.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="11" coveredmethods="0" methods="1" elements="1" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="NoTestCases">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="noTestCase() : void" num="9" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/junit/tests/framework/NotPublicTestCase.java" name="NotPublicTestCase.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="14" coveredmethods="0" methods="2" elements="2" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="NotPublicTestCase">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="2" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="testNotPublic() : void" num="9" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="testPublic() : void" num="12" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/junit/tests/framework/NotVoidTestCase.java" name="NotVoidTestCase.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="15" coveredmethods="0" methods="2" elements="3" classes="1" ncloc="8" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="NotVoidTestCase">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testNotVoid() : int" num="9" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testVoid() : void" num="13" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/junit/tests/framework/OneTestCase.java" name="OneTestCase.java">
            <metrics coveredelements="1" coveredconditionals="0" complexity="3" loc="17" coveredmethods="1" methods="3" elements="3" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="OneTestCase">
               <metrics coveredelements="1" complexity="3" methods="3" testruns="2" statements="0" coveredconditionals="0" coveredmethods="1" elements="3" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="2"/>
            </class>
            <line complexity="1" visibility="public" signature="noTestCase() : void" num="9" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="testCase() : void" num="12" testsuccess="true" count="3" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="testCase(int) : void" num="15" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/junit/tests/framework/OverrideTestCase.java" name="OverrideTestCase.java">
            <metrics coveredelements="1" coveredconditionals="0" complexity="1" loc="10" coveredmethods="1" methods="1" elements="1" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="OverrideTestCase">
               <metrics coveredelements="1" complexity="1" methods="1" testruns="1" statements="0" coveredconditionals="0" coveredmethods="1" elements="1" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="1"/>
            </class>
            <line complexity="1" visibility="public" signature="testCase() : void" num="7" testsuccess="true" count="1" testduration="0.0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/junit/tests/framework/Success.java" name="Success.java">
            <metrics coveredelements="1" coveredconditionals="0" complexity="2" loc="16" coveredmethods="1" methods="2" elements="2" classes="1" ncloc="8" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Success">
               <metrics coveredelements="1" coveredconditionals="0" complexity="2" coveredmethods="1" methods="2" elements="2" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="runTest() : void" num="10" count="4" type="method"/>
            <line complexity="1" visibility="public" signature="testSuccess() : void" num="14" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/junit/tests/framework/SuiteTest.java" name="SuiteTest.java">
            <metrics coveredelements="70" coveredconditionals="0" complexity="14" loc="118" coveredmethods="14" methods="14" elements="70" classes="1" ncloc="93" statements="56" conditionals="0" coveredstatements="56"/>
            <class name="SuiteTest">
               <metrics coveredelements="70" complexity="14" methods="14" testruns="5" statements="56" coveredconditionals="0" coveredmethods="14" elements="70" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="56" testpasses="5"/>
            </class>
            <line complexity="1" visibility="public" signature="SuiteTest(String)" num="16" count="23" type="method"/>
            <line num="17" count="23" type="stmt"/>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="20" count="12" type="method"/>
            <line num="22" count="12" type="stmt"/>
            <line complexity="1" visibility="public" signature="suite() : Test" num="25" count="2" type="method"/>
            <line num="26" count="2" type="stmt"/>
            <line num="29" count="2" type="stmt"/>
            <line num="30" count="2" type="stmt"/>
            <line num="31" count="2" type="stmt"/>
            <line num="32" count="2" type="stmt"/>
            <line num="33" count="2" type="stmt"/>
            <line num="34" count="2" type="stmt"/>
            <line num="35" count="2" type="stmt"/>
            <line num="36" count="2" type="stmt"/>
            <line num="37" count="2" type="stmt"/>
            <line num="38" count="2" type="stmt"/>
            <line num="39" count="2" type="stmt"/>
            <line num="41" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInheritedTests() : void" num="44" count="1" type="method"/>
            <line num="45" count="1" type="stmt"/>
            <line num="46" count="1" type="stmt"/>
            <line num="47" count="1" type="stmt"/>
            <line num="48" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNoTestCaseClass() : void" num="51" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="52" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNoTestCases() : void" num="58" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line num="61" count="1" type="stmt"/>
            <line num="62" count="1" type="stmt"/>
            <line num="63" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNotExistingTestCase() : void" num="66" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line num="68" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNotPublicTestCase() : void" num="74" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="75" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNotVoidTestCase() : void" num="80" testsuccess="true" count="1" testduration="0.002" type="method"/>
            <line num="81" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOneTestCase() : void" num="85" count="1" type="method"/>
            <line num="86" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="91" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOneTestCaseEclipseSeesSameStructureAs381() : void" num="94" count="1" type="method"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testShadowedTests() : void" num="99" count="1" type="method"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="102" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAddTestSuite() : void" num="105" count="1" type="method"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCreateSuiteFromArray() : void" num="112" count="1" type="method"/>
            <line num="113" count="1" type="stmt"/>
            <line num="114" count="1" type="stmt"/>
            <line num="115" count="1" type="stmt"/>
            <line num="116" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/junit/tests/framework/TestCaseTest.java" name="TestCaseTest.java">
            <metrics coveredelements="98" coveredconditionals="0" complexity="33" loc="205" coveredmethods="31" methods="32" elements="99" classes="2" ncloc="169" statements="67" conditionals="0" coveredstatements="67"/>
            <class name="TestCaseTest">
               <metrics coveredelements="94" complexity="31" methods="30" testruns="13" statements="65" coveredconditionals="0" coveredmethods="29" elements="95" testfailures="0" testduration="0.004" conditionals="0" coveredstatements="65" testpasses="13"/>
            </class>
            <class name="TestCaseTest.TornDown">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <line complexity="1" visibility="protected" signature="tearDown() : void" num="18" count="2" type="method"/>
            <line num="20" count="2" type="stmt"/>
            <line complexity="1" visibility="protected" signature="runTest() : void" num="23" count="2" type="method"/>
            <line num="25" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCaseToString() : void" num="29" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="33" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testError() : void" num="36" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="37" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="runTest() : void" num="38" count="1" type="method"/>
            <line num="40" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunAndTearDownFails() : void" num="46" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="tearDown() : void" num="48" count="1" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="runTest() : void" num="54" count="1" type="method"/>
            <line num="56" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
            <line num="60" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSetupFails() : void" num="63" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="64" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="65" count="1" type="method"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="runTest() : void" num="70" count="0" type="method"/>
            <line num="74" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSuccess() : void" num="77" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="78" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="runTest() : void" num="79" count="1" type="method"/>
            <line num="83" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFailure() : void" num="86" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="87" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="runTest() : void" num="88" count="1" type="method"/>
            <line num="90" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTearDownAfterError() : void" num="96" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="97" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTearDownFails() : void" num="102" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="103" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="tearDown() : void" num="104" count="1" type="method"/>
            <line num="106" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="runTest() : void" num="109" count="1" type="method"/>
            <line num="113" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testTearDownSetupFails() : void" num="116" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="117" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="118" count="1" type="method"/>
            <line num="120" count="1" type="stmt"/>
            <line num="123" count="1" type="stmt"/>
            <line num="124" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testWasRun() : void" num="127" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="128" count="1" type="stmt"/>
            <line num="129" count="1" type="stmt"/>
            <line num="130" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testExceptionRunningAndTearDown() : void" num="133" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="137" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="tearDown() : void" num="138" count="1" type="method"/>
            <line num="140" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="145" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line complexity="2" visibility="public" signature="testErrorTearingDownDoesntMaskErrorRunning() : void" num="149" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="150" count="1" type="stmt"/>
            <line num="151" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="runTest() : void" num="152" count="1" type="method"/>
            <line num="154" count="1" type="stmt"/>
            <line complexity="1" visibility="protected" signature="tearDown() : void" num="157" count="1" type="method"/>
            <line num="159" count="1" type="stmt"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="165" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNoArgTestCasePasses() : void" num="169" count="1" type="method"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line num="172" count="1" type="stmt"/>
            <line num="173" count="1" type="stmt"/>
            <line num="174" count="1" type="stmt"/>
            <line num="175" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testNamelessTestCase() : void" num="178" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="179" count="1" type="stmt"/>
            <line num="181" count="1" type="stmt"/>
            <line num="182" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="verifyError(TestCase) : void" num="185" count="6" type="method"/>
            <line num="186" count="6" type="stmt"/>
            <line num="187" count="6" type="stmt"/>
            <line num="188" count="6" type="stmt"/>
            <line num="189" count="6" type="stmt"/>
            <line complexity="1" visibility="package" signature="verifyFailure(TestCase) : void" num="192" count="1" type="method"/>
            <line num="193" count="1" type="stmt"/>
            <line num="194" count="1" type="stmt"/>
            <line num="195" count="1" type="stmt"/>
            <line num="196" count="1" type="stmt"/>
            <line complexity="1" visibility="package" signature="verifySuccess(TestCase) : void" num="199" count="1" type="method"/>
            <line num="200" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/junit/tests/framework/TestImplementorTest.java" name="TestImplementorTest.java">
            <metrics coveredelements="22" coveredconditionals="0" complexity="7" loc="54" coveredmethods="7" methods="7" elements="22" classes="2" ncloc="43" statements="15" conditionals="0" coveredstatements="15"/>
            <class name="TestImplementorTest">
               <metrics coveredelements="10" complexity="3" methods="3" testruns="1" statements="7" coveredconditionals="0" coveredmethods="3" elements="10" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="7" testpasses="1"/>
            </class>
            <class name="TestImplementorTest.DoubleTestCase">
               <metrics coveredelements="12" coveredconditionals="0" complexity="4" coveredmethods="4" methods="4" elements="12" statements="8" conditionals="0" coveredstatements="8"/>
            </class>
            <line complexity="1" visibility="public" signature="DoubleTestCase(TestCase)" num="15" count="2" type="method"/>
            <line num="16" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="countTestCases() : int" num="19" count="2" type="method"/>
            <line num="20" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="run(TestResult) : void" num="23" count="1" type="method"/>
            <line num="24" count="1" type="stmt"/>
            <line num="25" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="protect() : void" num="26" count="1" type="method"/>
            <line num="27" count="1" type="stmt"/>
            <line num="28" count="1" type="stmt"/>
            <line num="31" count="1" type="stmt"/>
            <line num="32" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="TestImplementorTest()" num="38" count="2" type="method"/>
            <line num="39" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="runTest() : void" num="40" count="2" type="method"/>
            <line num="44" count="2" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSuccessfulRun() : void" num="47" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="48" count="1" type="stmt"/>
            <line num="49" count="1" type="stmt"/>
            <line num="50" count="1" type="stmt"/>
            <line num="51" count="1" type="stmt"/>
            <line num="52" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/junit/tests/framework/TestListenerTest.java" name="TestListenerTest.java">
            <metrics coveredelements="35" coveredconditionals="0" complexity="11" loc="80" coveredmethods="11" methods="11" elements="35" classes="1" ncloc="65" statements="24" conditionals="0" coveredstatements="24"/>
            <class name="TestListenerTest">
               <metrics coveredelements="35" complexity="11" methods="11" testruns="3" statements="24" coveredconditionals="0" coveredmethods="11" elements="35" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="24" testpasses="3"/>
            </class>
            <line complexity="1" visibility="public" signature="addError(Test,Throwable) : void" num="19" count="1" type="method"/>
            <line num="20" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="addFailure(Test,AssertionFailedError) : void" num="23" count="1" type="method"/>
            <line num="24" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="endTest(Test) : void" num="27" count="3" type="method"/>
            <line num="28" count="3" type="stmt"/>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="31" count="3" type="method"/>
            <line num="33" count="3" type="stmt"/>
            <line num="34" count="3" type="stmt"/>
            <line num="36" count="3" type="stmt"/>
            <line num="37" count="3" type="stmt"/>
            <line num="38" count="3" type="stmt"/>
            <line num="39" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="startTest(Test) : void" num="42" count="3" type="method"/>
            <line num="43" count="3" type="stmt"/>
            <line complexity="1" visibility="public" signature="testError() : void" num="46" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="47" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="runTest() : void" num="48" count="1" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testFailure() : void" num="58" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="59" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="runTest() : void" num="60" count="1" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testStartStop() : void" num="70" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="runTest() : void" num="72" count="1" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/junit/tests/framework/ThreeTestCases.java" name="ThreeTestCases.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="17" coveredmethods="0" methods="3" elements="3" classes="1" ncloc="9" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ThreeTestCases">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="3" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testCase() : void" num="9" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="testCase2() : void" num="12" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="testCase3thisTimeItsPersonal() : void" num="15" count="0" type="method"/>
         </file>
      </package>
      <package name="junit.samples">
         <metrics coveredelements="0" complexity="17" loc="161" methods="15" classes="3" statements="44" coveredconditionals="0" coveredmethods="0" elements="61" ncloc="100" files="3" conditionals="2" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/junit/samples/AllTests.java" name="AllTests.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="22" coveredmethods="0" methods="2" elements="8" classes="1" ncloc="14" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="AllTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="8" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="11" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="suite() : Test" num="15" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line num="17" count="0" type="stmt"/>
            <line num="18" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
            <line num="20" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/junit/samples/ListTest.java" name="ListTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="67" coveredmethods="0" methods="7" elements="33" classes="1" ncloc="51" statements="24" conditionals="2" coveredstatements="0"/>
            <class name="ListTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="7" elements="33" statements="24" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="18" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line num="21" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="suite() : Test" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testCapacity() : void" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="33" type="cond"/>
            <line num="34" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testContains() : void" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="testElementAt() : void" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemoveAll() : void" num="56" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRemoveElement() : void" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/junit/samples/SimpleTest.java" name="SimpleTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="72" coveredmethods="0" methods="6" elements="20" classes="1" ncloc="35" statements="14" conditionals="0" coveredstatements="0"/>
            <class name="SimpleTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="20" statements="14" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="setUp() : void" num="14" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="suite() : Test" num="20" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testAdd() : void" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testDivideByZero() : void" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testEquals() : void" num="60" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String[]) : void" num="69" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
         </file>
      </package>
      <package name="org.junit.tests.experimental.max">
         <metrics coveredelements="184" complexity="54" loc="491" methods="52" classes="14" statements="148" coveredconditionals="2" coveredmethods="42" elements="204" ncloc="408" files="4" conditionals="4" coveredstatements="140"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/max/AllMaxTests.java" name="AllMaxTests.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="14" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="12" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AllMaxTests">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/max/DescriptionTest.java" name="DescriptionTest.java">
            <metrics coveredelements="54" coveredconditionals="0" complexity="12" loc="123" coveredmethods="11" methods="12" elements="55" classes="3" ncloc="99" statements="43" conditionals="0" coveredstatements="43"/>
            <class name="DescriptionTest">
               <metrics coveredelements="50" complexity="9" methods="9" testruns="9" statements="41" coveredconditionals="0" coveredmethods="9" elements="50" testfailures="0" testduration="0.006" conditionals="0" coveredstatements="41" testpasses="9"/>
            </class>
            <class name="DescriptionTest.URLClassLoader2">
               <metrics coveredelements="4" coveredconditionals="0" complexity="2" coveredmethods="2" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="2"/>
            </class>
            <class name="DescriptionTest.Sweet">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="parseClass_whenCantParse() : void" num="19" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="21" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="parseMethod_whenCantParse() : void" num="24" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="26" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="createSuiteDescription_whenZeroLength() : void" num="29" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="createSuiteDescription_whenNull() : void" num="34" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="36" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="parseClassAndMethodNoAnnotations() : void" num="39" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="41" count="1" type="stmt"/>
            <line num="43" count="1" type="stmt"/>
            <line num="44" count="1" type="stmt"/>
            <line num="45" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="parseClassAndMethodWithAnnotations() : void" num="48" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="50" count="1" type="stmt"/>
            <line num="53" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="parseClassNameAndMethodUniqueId() : void" num="60" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line num="62" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="66" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="sameNamesButDifferentUniqueIdAreNotEqual() : void" num="69" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="usesPassedInClassObject() : void" num="75" testsuccess="true" count="1" testduration="0.004" type="method"/>
            <line complexity="1" visibility="package" signature="URLClassLoader2(URL)" num="78" count="1" type="method"/>
            <line num="79" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="findClass(String) : Class&lt;?&gt;" num="82" count="1" type="method"/>
            <line num="84" count="1" type="stmt"/>
            <line num="87" count="1" type="stmt"/>
            <line num="88" count="1" type="stmt"/>
            <line num="89" count="1" type="stmt"/>
            <line num="90" count="1" type="stmt"/>
            <line num="92" count="1" type="stmt"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="98" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line num="101" count="1" type="stmt"/>
            <line num="103" count="1" type="stmt"/>
            <line num="104" count="1" type="stmt"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="109" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line num="111" count="1" type="stmt"/>
            <line num="112" count="1" type="stmt"/>
            <line num="113" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="tessed() : void" num="118" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/max/JUnit38SortingTest.java" name="JUnit38SortingTest.java">
            <metrics coveredelements="16" coveredconditionals="1" complexity="8" loc="62" coveredmethods="6" methods="7" elements="20" classes="3" ncloc="50" statements="11" conditionals="2" coveredstatements="9"/>
            <class name="JUnit38SortingTest">
               <metrics coveredelements="13" coveredconditionals="1" complexity="4" coveredmethods="3" methods="3" elements="15" statements="10" conditionals="2" coveredstatements="9"/>
            </class>
            <class name="JUnit38SortingTest.JUnit4Test">
               <metrics coveredelements="1" complexity="1" methods="1" testruns="1" statements="0" coveredconditionals="0" coveredmethods="1" elements="1" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="1"/>
            </class>
            <class name="JUnit38SortingTest.JUnit38Test">
               <metrics coveredelements="2" complexity="3" methods="3" testruns="3" statements="1" coveredconditionals="0" coveredmethods="2" elements="4" testfailures="1" testduration="0.001" conditionals="0" coveredstatements="0" testpasses="2"/>
            </class>
            <line complexity="2" visibility="public" signature="createMax() : void" num="20" count="1" type="method"/>
            <line num="22" count="1" type="stmt"/>
            <line num="23" count="1" type="stmt"/>
            <line falsecount="1" truecount="0" num="23" type="cond"/>
            <line num="24" count="0" type="stmt"/>
            <line num="26" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="forgetMax() : void" num="29" count="1" type="method"/>
            <line num="31" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="pass() : void" num="35" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="testFails() : void" num="41" testsuccess="false" count="0" testduration="0.001" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSucceeds() : void" num="45" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="testSucceedsToo() : void" num="48" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="preferRecentlyFailed38Test() : void" num="52" count="1" type="method"/>
            <line num="54" count="1" type="stmt"/>
            <line num="55" count="1" type="stmt"/>
            <line num="56" count="1" type="stmt"/>
            <line num="57" count="1" type="stmt"/>
            <line num="59" count="1" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java" name="MaxStarterTest.java">
            <metrics coveredelements="114" coveredconditionals="1" complexity="34" loc="292" coveredmethods="25" methods="33" elements="129" classes="7" ncloc="247" statements="94" conditionals="2" coveredstatements="88"/>
            <class name="MaxStarterTest">
               <metrics coveredelements="110" complexity="23" methods="22" testruns="2" statements="90" coveredconditionals="1" coveredmethods="21" elements="114" testfailures="0" testduration="0.002" conditionals="2" coveredstatements="88" testpasses="2"/>
            </class>
            <class name="MaxStarterTest.TwoTests">
               <metrics coveredelements="1" complexity="2" methods="2" testruns="12" statements="1" coveredconditionals="0" coveredmethods="1" elements="3" testfailures="6" testduration="0.001" conditionals="0" coveredstatements="0" testpasses="6"/>
            </class>
            <class name="MaxStarterTest.TwoUnEqualTests">
               <metrics coveredelements="0" complexity="2" methods="2" testruns="6" statements="3" coveredconditionals="0" coveredmethods="0" elements="5" testfailures="6" testduration="0.30100000000000005" conditionals="0" coveredstatements="0" testpasses="0"/>
            </class>
            <class name="MaxStarterTest.TwoOldTests">
               <metrics coveredelements="2" complexity="2" methods="2" testruns="2" statements="0" coveredconditionals="0" coveredmethods="2" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="2"/>
            </class>
            <class name="MaxStarterTest.MalformedJUnit38Test">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="2" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="MaxStarterTest.MalformedJUnit38TestMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="MaxStarterTest.HalfMalformedJUnit38TestMethod">
               <metrics coveredelements="1" complexity="2" methods="2" testruns="3" statements="0" coveredconditionals="0" coveredmethods="1" elements="2" testfailures="0" testduration="0.0" conditionals="0" coveredstatements="0" testpasses="3"/>
            </class>
            <line complexity="2" visibility="public" signature="createMax() : void" num="36" count="16" type="method"/>
            <line num="38" count="16" type="stmt"/>
            <line num="39" count="16" type="stmt"/>
            <line falsecount="16" truecount="0" num="39" type="cond"/>
            <line num="40" count="0" type="stmt"/>
            <line num="42" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="forgetMax() : void" num="45" count="16" type="method"/>
            <line num="47" count="16" type="stmt"/>
            <line complexity="1" visibility="public" signature="succeed() : void" num="51" testsuccess="true" count="6" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="dontSucceed() : void" num="55" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="twoTestsNotRunComeBackInRandomOrder() : void" num="61" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="63" count="1" type="stmt"/>
            <line num="64" count="1" type="stmt"/>
            <line num="65" count="1" type="stmt"/>
            <line num="67" count="1" type="stmt"/>
            <line num="69" count="1" type="stmt"/>
            <line num="70" count="1" type="stmt"/>
            <line num="71" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="preferNewTests() : void" num="74" count="1" type="method"/>
            <line num="76" count="1" type="stmt"/>
            <line num="77" count="1" type="stmt"/>
            <line num="78" count="1" type="stmt"/>
            <line num="79" count="1" type="stmt"/>
            <line num="80" count="1" type="stmt"/>
            <line num="82" count="1" type="stmt"/>
            <line num="83" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="preferNewTestsOverTestsThatFailed() : void" num="91" count="1" type="method"/>
            <line num="93" count="1" type="stmt"/>
            <line num="94" count="1" type="stmt"/>
            <line num="95" count="1" type="stmt"/>
            <line num="96" count="1" type="stmt"/>
            <line num="97" count="1" type="stmt"/>
            <line num="99" count="1" type="stmt"/>
            <line num="100" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="preferRecentlyFailed() : void" num="103" count="1" type="method"/>
            <line num="105" count="1" type="stmt"/>
            <line num="106" count="1" type="stmt"/>
            <line num="107" count="1" type="stmt"/>
            <line num="108" count="1" type="stmt"/>
            <line num="110" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="sortTestsInMultipleClasses() : void" num="113" count="1" type="method"/>
            <line num="115" count="1" type="stmt"/>
            <line num="117" count="1" type="stmt"/>
            <line num="118" count="1" type="stmt"/>
            <line num="119" count="1" type="stmt"/>
            <line num="121" count="1" type="stmt"/>
            <line num="122" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="slow() : void" num="126" testsuccess="false" count="0" testduration="0.101" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fast() : void" num="132" testsuccess="false" count="0" testduration="0.0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rememberOldRuns() : void" num="139" count="1" type="method"/>
            <line num="141" count="1" type="stmt"/>
            <line num="143" count="1" type="stmt"/>
            <line num="144" count="1" type="stmt"/>
            <line num="146" count="1" type="stmt"/>
            <line num="147" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="preferFast() : void" num="150" count="1" type="method"/>
            <line num="152" count="1" type="stmt"/>
            <line num="153" count="1" type="stmt"/>
            <line num="154" count="1" type="stmt"/>
            <line num="155" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="listenersAreCalledCorrectlyInTheFaceOfFailures() : void" num="159" count="1" type="method"/>
            <line num="162" count="1" type="stmt"/>
            <line num="163" count="1" type="stmt"/>
            <line num="164" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testRunFinished(Result) : void" num="165" count="1" type="method"/>
            <line num="167" count="1" type="stmt"/>
            <line num="170" count="1" type="stmt"/>
            <line num="171" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testsAreOnlyIncludedOnceWhenExpandingForSorting() : void" num="174" count="1" type="method"/>
            <line num="177" count="1" type="stmt"/>
            <line num="178" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testOne() : void" num="182" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="testTwo() : void" num="185" testsuccess="true" count="1" testduration="0.0" type="method"/>
            <line complexity="1" visibility="public" signature="junit3TestsAreRunOnce() : void" num="189" count="1" type="method"/>
            <line num="191" count="1" type="stmt"/>
            <line num="193" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="filterSingleMethodFromOldTestClass() : void" num="196" count="1" type="method"/>
            <line num="198" count="1" type="stmt"/>
            <line num="200" count="1" type="stmt"/>
            <line num="201" count="1" type="stmt"/>
            <line num="202" count="1" type="stmt"/>
            <line num="203" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCountsStandUpToFiltration() : void" num="206" count="1" type="method"/>
            <line num="208" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertFilterLeavesTestUnscathed(Class&lt;?&gt;) : void" num="211" count="1" type="method"/>
            <line num="212" count="1" type="stmt"/>
            <line num="213" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldRun(Description) : boolean" num="214" count="1246" type="method"/>
            <line num="216" count="1246" type="stmt"/>
            <line complexity="1" visibility="public" signature="describe() : String" num="219" count="0" type="method"/>
            <line num="221" count="0" type="stmt"/>
            <line num="225" count="1" type="stmt"/>
            <line num="226" count="1" type="stmt"/>
            <line num="227" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="MalformedJUnit38Test()" num="231" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="testSucceeds() : void" num="234" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="maxShouldSkipMalformedJUnit38Classes() : void" num="239" testsuccess="true" count="1" testduration="0.001" type="method"/>
            <line num="241" count="1" type="stmt"/>
            <line num="242" count="1" type="stmt"/>
            <line complexity="1" visibility="private" signature="testNothing() : void" num="246" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="correctErrorFromMalformedTest() : void" num="251" count="1" type="method"/>
            <line num="253" count="1" type="stmt"/>
            <line num="254" count="1" type="stmt"/>
            <line num="255" count="1" type="stmt"/>
            <line num="256" count="1" type="stmt"/>
            <line num="257" count="1" type="stmt"/>
            <line num="258" count="1" type="stmt"/>
            <line num="259" count="1" type="stmt"/>
            <line num="260" count="1" type="stmt"/>
            <line num="261" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="testSomething() : void" num="265" testsuccess="true" count="3" testduration="0.0" type="method"/>
            <line complexity="1" visibility="private" signature="testNothing() : void" num="268" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="halfMalformed() : void" num="273" count="1" type="method"/>
            <line num="275" count="1" type="stmt"/>
            <line complexity="1" visibility="public" signature="correctErrorFromHalfMalformedTest() : void" num="280" count="1" type="method"/>
            <line num="282" count="1" type="stmt"/>
            <line num="283" count="1" type="stmt"/>
            <line num="284" count="1" type="stmt"/>
            <line num="285" count="1" type="stmt"/>
            <line num="286" count="1" type="stmt"/>
            <line num="287" count="1" type="stmt"/>
            <line num="288" count="1" type="stmt"/>
            <line num="289" count="1" type="stmt"/>
            <line num="290" count="1" type="stmt"/>
         </file>
      </package>
   </project>
   <testproject name="JUnit 4.14-SNAPSHOT" timestamp="1594343483485">
      <metrics coveredelements="0" complexity="0" loc="0" methods="0" classes="0" statements="0" packages="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="0" files="0" conditionals="0" coveredstatements="0"/>
   </testproject>
</coverage>