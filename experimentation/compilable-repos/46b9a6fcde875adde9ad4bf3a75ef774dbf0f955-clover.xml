<?xml version="1.0" encoding="UTF-8"?>
<coverage generated="1594144044837" clover="4.4.1">
   <project name="jcunit 0.8.18-SNAPSHOT" timestamp="0">
      <metrics coveredelements="0" complexity="2080" loc="18981" methods="1715" classes="388" statements="3441" packages="67" coveredconditionals="0" coveredmethods="0" elements="5724" ncloc="15150" files="218" conditionals="568" coveredstatements="0"/>
      <package name="com.github.dakusui.jcunit8.factorspace.fsm">
         <metrics coveredelements="0" complexity="113" loc="852" methods="93" classes="15" statements="161" coveredconditionals="0" coveredmethods="0" elements="290" ncloc="726" files="8" conditionals="36" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/factorspace/fsm/Edge.java" name="Edge.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="12" loc="70" coveredmethods="0" methods="10" elements="32" classes="2" ncloc="57" statements="18" conditionals="4" coveredstatements="0"/>
            <class name="Edge">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="13" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Edge.Builder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="5" elements="19" statements="10" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="Edge(State&lt;SUT&gt;,Action&lt;SUT&gt;,Args,State&lt;SUT&gt;)" num="11" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line num="13" count="0" type="stmt"/>
            <line num="14" count="0" type="stmt"/>
            <line num="15" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isPossible() : boolean" num="18" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isValid() : boolean" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(Player&lt;SUT&gt;) : void" num="27" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="Builder(State&lt;SUT&gt;)" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="from(State&lt;SUT&gt;) : Builder&lt;SUT&gt;" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="with(Action&lt;SUT&gt;,Args) : Builder&lt;SUT&gt;" num="51" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="to(State&lt;SUT&gt;) : Builder&lt;SUT&gt;" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="build() : Edge&lt;SUT&gt;" num="62" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="64" type="cond"/>
            <line num="65" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/factorspace/fsm/FsmComposer.java" name="FsmComposer.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="82" coveredmethods="0" methods="7" elements="31" classes="1" ncloc="73" statements="18" conditionals="6" coveredstatements="0"/>
            <class name="FsmComposer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="7" elements="31" statements="18" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="FsmComposer(String,FiniteStateMachine&lt;SUT&gt;,int)" num="15" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="composeValueFrom(Tuple) : Scenario&lt;SUT&gt;" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="composeScenarioToBringUpFsmTo(State&lt;SUT&gt;) : Sequence&lt;SUT&gt;" num="28" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="29" type="cond"/>
            <line num="30" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="findRoute(State&lt;SUT&gt;,State&lt;SUT&gt;,List&lt;Edge&lt;SUT&gt;&gt;,List&lt;State&lt;SUT&gt;&gt;) : List&lt;Edge&lt;SUT&gt;&gt;" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="44" type="cond"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 54()" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 57()" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="composeScenarioFromTuple(Tuple) : Sequence&lt;SUT&gt;" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/factorspace/fsm/FsmDecomposer.java" name="FsmDecomposer.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="39" loc="245" coveredmethods="0" methods="30" elements="99" classes="1" ncloc="214" statements="51" conditionals="18" coveredstatements="0"/>
            <class name="FsmDecomposer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="39" coveredmethods="0" methods="30" elements="99" statements="51" conditionals="18" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="FsmDecomposer(String,FiniteStateMachine&lt;SUT&gt;,int)" num="25" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactors() : List&lt;Factor&gt;" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConstraints() : List&lt;Constraint&gt;" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="buildFactors() : List&lt;Factor&gt;" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="createFactorForState(String,int) : Factor" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="createFactorForAction(String,int) : Factor" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="createFactorsForActionParams(String,int) : List&lt;Factor&gt;" num="68" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="70" type="cond"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 77()" num="77" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="union(List&lt;Parameters&gt;,int) : List&lt;Object&gt;" num="85" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="buildConstraints() : List&lt;Constraint&gt;" num="94" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="createConstraintForActionArgs(int) : Constraint" num="106" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="test(Tuple) : boolean" num="113" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="116" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="involvedKeys() : List&lt;String&gt;" num="131" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="139" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="createConstraintForStateActionValidity(int) : Constraint" num="146" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="148" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Tuple) : boolean" num="153" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="involvedKeys() : List&lt;String&gt;" num="162" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="170" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="createConstraintForNormality(int) : Constraint" num="177" count="0" type="method"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="179" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="test(Tuple) : boolean" num="184" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="190" type="cond"/>
            <line num="191" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="involvedKeys() : List&lt;String&gt;" num="195" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="206" count="0" type="method"/>
            <line num="208" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="createConstraintForActionStateValidity(int) : Constraint" num="213" count="0" type="method"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="215" count="0" type="method"/>
            <line num="217" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="test(Tuple) : boolean" num="220" count="0" type="method"/>
            <line num="223" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="226" type="cond"/>
            <line complexity="2" visibility="public" signature="involvedKeys() : List&lt;String&gt;" num="232" count="0" type="method"/>
            <line num="234" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="234" type="cond"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="239" count="0" type="method"/>
            <line num="241" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/factorspace/fsm/FsmTupleAccessor.java" name="FsmTupleAccessor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="125" coveredmethods="0" methods="13" elements="32" classes="1" ncloc="108" statements="17" conditionals="2" coveredstatements="0"/>
            <class name="FsmTupleAccessor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="13" elements="32" statements="17" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="FsmTupleAccessor(String,FiniteStateMachine&lt;SUT&gt;,int)" num="22" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="composeStateFactorName(String,int) : String" num="28" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="composeActionFactorName(String,int) : String" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="composeActionParamFactorName(String,int,int) : String" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getStateFromTuple(Tuple,int) : State&lt;SUT&gt;" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getActionFromTuple(Tuple,int) : Action&lt;SUT&gt;" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getActionArgsFromTuple(Tuple,int) : Args" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getActionArgFromTuple(Tuple,int,int) : Object" num="58" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="allPossibleEdges(Predicate&lt;State&lt;SUT&gt;&gt;,Predicate&lt;Action&lt;SUT&gt;&gt;,Predicate&lt;State&lt;SUT&gt;&gt;) : Stream&lt;Edge&lt;SUT&gt;&gt;" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="allPossibleEdges(State&lt;SUT&gt;,Action&lt;SUT&gt;,State&lt;SUT&gt;) : Stream&lt;Edge&lt;SUT&gt;&gt;" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="actionAndArgsList(Action&lt;SUT&gt;) : List&lt;List&lt;Object&gt;&gt;" num="109" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="111" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="get(int) : List&lt;Object&gt;" num="116" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/factorspace/fsm/Player.java" name="Player.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="99" coveredmethods="0" methods="10" elements="32" classes="3" ncloc="80" statements="20" conditionals="2" coveredstatements="0"/>
            <class name="Player">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Player.Base">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="5" elements="16" statements="9" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="Player.Simple">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="5" elements="16" statements="11" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Base(SUT)" num="25" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visit(Stimulus&lt;SUT&gt;) : void" num="29" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visit(Sequence&lt;SUT&gt;) : void" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visit(Scenario&lt;SUT&gt;) : void" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="play(Scenario&lt;SUT&gt;) : void" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Simple(SUT)" num="56" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="visit(Edge&lt;SUT&gt;) : void" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="checkState(Expectation&lt;SUT&gt;) : void" num="80" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getOutputChecker(SUT,State&lt;SUT&gt;,Action&lt;SUT&gt;,Args) : Predicate&lt;Object&gt;" num="91" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getExceptionChecker(SUT,State&lt;SUT&gt;,Action&lt;SUT&gt;,Args) : Predicate&lt;Throwable&gt;" num="95" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/factorspace/fsm/Scenario.java" name="Scenario.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="17" loc="173" coveredmethods="0" methods="15" elements="46" classes="3" ncloc="149" statements="27" conditionals="4" coveredstatements="0"/>
            <class name="Scenario">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Scenario.Impl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="14" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Scenario.Builder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="8" elements="30" statements="18" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="builder(String,Class&lt;SPEC&gt;) : Scenario.Builder&lt;SUT, SPEC&gt;" num="21" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Impl(String,Sequence&lt;SUT&gt;,Sequence&lt;SUT&gt;)" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setUp() : Sequence&lt;SUT&gt;" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="main() : Sequence&lt;SUT&gt;" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(Player&lt;SUT&gt;) : void" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Builder(String,Class&lt;SPEC&gt;)" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="startFrom(SPEC) : Builder&lt;SUT, SPEC&gt;" num="78" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="doAction(String,Object) : Builder&lt;SUT, SPEC&gt;" num="83" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : Scenario&lt;SUT&gt;" num="91" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="findAction(String) : Action&lt;SUT&gt;" num="113" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="doAction(Action&lt;SUT&gt;,Args) : Builder&lt;SUT, SPEC&gt;" num="135" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="findState(SPEC) : State&lt;SUT&gt;" num="143" count="0" type="method"/>
            <line num="144" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line complexity="2" visibility="private" signature="currentState() : State&lt;SUT&gt;" num="167" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="168" type="cond"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/factorspace/fsm/Sequence.java" name="Sequence.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="53" coveredmethods="0" methods="8" elements="18" classes="3" ncloc="41" statements="10" conditionals="0" coveredstatements="0"/>
            <class name="Sequence">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Sequence.Impl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Sequence.Builder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="Impl(List&lt;Edge&lt;SUT&gt;&gt;)" num="11" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : Edge&lt;SUT&gt;" num="15" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="20" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(Player&lt;SUT&gt;) : void" num="25" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Builder()" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(Edge&lt;SUT&gt;) : Builder&lt;SUT&gt;" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addAll(List&lt;Edge&lt;SUT&gt;&gt;) : Builder&lt;SUT&gt;" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : Sequence&lt;SUT&gt;" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/factorspace/fsm/Stimulus.java" name="Stimulus.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="5" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Stimulus">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.runners.helpers">
         <metrics coveredelements="0" complexity="7" loc="45" methods="7" classes="1" statements="7" coveredconditionals="0" coveredmethods="0" elements="14" ncloc="33" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/runners/helpers/ParameterUtils.java" name="ParameterUtils.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="45" coveredmethods="0" methods="7" elements="14" classes="1" ncloc="33" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="ParameterUtils">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="14" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="simple(T) : Parameter.Simple.Factory&lt;T&gt;" num="16" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="regex(String,Function&lt;String, T&gt;) : Parameter.Regex.Factory&lt;T&gt;" num="21" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="regex(String) : Parameter.Regex.Factory&lt;String&gt;" num="25" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fsm(Class&lt;? extends FsmSpec&lt;T&gt;&gt;,int) : Parameter.Fsm.Factory&lt;T&gt;" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sequence(T) : SequenceParameterFactoryBuilder&lt;T&gt;" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="grouped(Function&lt;Tuple, T&gt;) : GroupedParameterFactoryBuilder&lt;T&gt;" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="grouped() : GroupedParameterFactoryBuilder&lt;Tuple&gt;" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.factorspace.regex">
         <metrics coveredelements="0" complexity="24" loc="134" methods="10" classes="1" statements="50" coveredconditionals="0" coveredmethods="0" elements="80" ncloc="119" files="1" conditionals="20" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/factorspace/regex/RegexDecomposer.java" name="RegexDecomposer.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="24" loc="134" coveredmethods="0" methods="10" elements="80" classes="1" ncloc="119" statements="50" conditionals="20" coveredstatements="0"/>
            <class name="RegexDecomposer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="24" coveredmethods="0" methods="10" elements="80" statements="50" conditionals="20" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RegexDecomposer(String,Expr)" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decompose() : FactorSpace" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="8" visibility="private" signature="buildFactors() : List&lt;? extends Factor&gt;" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="37" type="cond"/>
            <line num="38" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="38" type="cond"/>
            <line num="39" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="42" type="cond"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="53" type="cond"/>
            <line num="54" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="buildConstraints(List&lt;? extends Factor&gt;) : List&lt;Constraint&gt;" num="60" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="test(Tuple) : boolean" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="involvedKeys() : List&lt;String&gt;" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="isReferencedBy(Object) : boolean" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="getReferringFactors(Factor,List&lt;? extends Factor&gt;) : List&lt;Factor&gt;" num="112" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="116" type="cond"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="119" type="cond"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="121" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit.regex">
         <metrics coveredelements="0" complexity="167" loc="951" methods="96" classes="24" statements="339" coveredconditionals="0" coveredmethods="0" elements="523" ncloc="787" files="7" conditionals="88" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit/regex/Expr.java" name="Expr.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="40" loc="223" coveredmethods="0" methods="30" elements="102" classes="11" ncloc="177" statements="52" conditionals="20" coveredstatements="0"/>
            <class name="Expr">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Expr.Utils">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="1" elements="4" statements="1" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="Expr.Base">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Expr.Empty">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Expr.Leaf">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Expr.Cat">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Expr.Alt">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Expr.Rep">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="5" elements="36" statements="19" conditionals="12" coveredstatements="0"/>
            </class>
            <class name="Expr.Composite">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Expr.Visitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Expr.Factory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="5" elements="22" statements="11" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="package" signature="str(Object) : String" num="18" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="19" type="cond"/>
            <line complexity="1" visibility="package" signature="Base(AtomicInteger)" num="28" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="composeId(AtomicInteger) : String" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="composeName() : String" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="id() : String" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="Empty(AtomicInteger)" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(Visitor) : void" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="Leaf(AtomicInteger,Object)" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(Visitor) : void" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="value() : Object" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="Cat(AtomicInteger,List&lt;Expr&gt;)" num="86" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(Visitor) : void" num="90" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="Alt(AtomicInteger,List&lt;Expr&gt;)" num="96" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(Visitor) : void" num="100" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="Rep(AtomicInteger,Expr,int,int)" num="111" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="117" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="121" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="createChildren(AtomicInteger,Expr,int,int) : List&lt;Expr&gt;" num="126" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="128" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="129" type="cond"/>
            <line num="130" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="136" type="cond"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="140" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="cloneIfAlt(AtomicInteger,Expr) : Expr" num="149" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="Composite(AtomicInteger,List&lt;Expr&gt;)" num="160" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getChildren() : List&lt;Expr&gt;" num="165" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="169" count="0" type="method"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="173" count="0" type="method"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Factory()" num="191" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="leaf(Object) : Expr" num="195" count="0" type="method"/>
            <line num="196" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="cat(List) : Expr" num="199" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="202" type="cond"/>
            <line num="203" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="alt(List) : Expr" num="209" count="0" type="method"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="212" type="cond"/>
            <line num="213" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="rep(Object,int,int) : Expr" num="219" count="0" type="method"/>
            <line num="220" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="220" type="cond"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit/regex/Immediate.java" name="Immediate.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="32" coveredmethods="0" methods="4" elements="10" classes="1" ncloc="24" statements="4" conditionals="2" coveredstatements="0"/>
            <class name="Immediate">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="4" elements="10" statements="4" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="Immediate(Object)" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="hashCode() : int" num="14" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="16" type="cond"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="21" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="28" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit/regex/Parser.java" name="Parser.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="74" loc="371" coveredmethods="0" methods="24" elements="257" classes="5" ncloc="320" statements="185" conditionals="48" coveredstatements="0"/>
            <class name="Parser">
               <metrics coveredelements="0" coveredconditionals="0" complexity="65" coveredmethods="0" methods="18" elements="231" statements="171" conditionals="42" coveredstatements="0"/>
            </class>
            <class name="Parser.Type">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Parser.SymbolType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="1" elements="15" statements="8" conditionals="6" coveredstatements="0"/>
            </class>
            <class name="Parser.PreprocessingState">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Parser.Context">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Parser()" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parse(String) : Expr" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="Type(String)" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="asString() : String" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="56" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="preprocess(String) : List&lt;String&gt;" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="4" visibility="package" signature="determine(String) : SymbolType" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="29" visibility="private" signature="preprocess(List&lt;String&gt;,List&lt;String&gt;,Iterator&lt;String&gt;,boolean) : void" num="94" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="198" type="cond"/>
            <line num="199" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="201" type="cond"/>
            <line num="202" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="205" type="cond"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="syntaxError(String,List&lt;String&gt;) : RuntimeException" num="211" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="inputShouldNotEndHere(PreprocessingState) : RuntimeException" num="220" count="0" type="method"/>
            <line num="221" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="tokenizer(String) : Iterator&lt;String&gt;" num="224" count="0" type="method"/>
            <line num="225" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="228" count="0" type="method"/>
            <line num="230" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="next() : String" num="233" count="0" type="method"/>
            <line num="235" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="235" type="cond"/>
            <line num="236" count="0" type="stmt"/>
            <line num="237" count="0" type="stmt"/>
            <line num="238" count="0" type="stmt"/>
            <line num="240" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="remove() : void" num="244" count="0" type="method"/>
            <line num="246" count="0" type="stmt"/>
            <line complexity="7" visibility="private" signature="nextToken(String) : String[]" num="251" count="0" type="method"/>
            <line num="252" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="252" type="cond"/>
            <line num="253" count="0" type="stmt"/>
            <line num="254" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="255" type="cond"/>
            <line num="256" count="0" type="stmt"/>
            <line num="259" count="0" type="stmt"/>
            <line num="260" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="260" type="cond"/>
            <line num="269" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="274" type="cond"/>
            <line num="275" count="0" type="stmt"/>
            <line num="279" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="parse(List&lt;String&gt;) : Expr" num="282" count="0" type="method"/>
            <line num="283" count="0" type="stmt"/>
            <line num="284" count="0" type="stmt"/>
            <line num="285" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="readTerm(List&lt;String&gt;) : Context" num="288" count="0" type="method"/>
            <line num="289" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line num="291" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="291" type="cond"/>
            <line num="292" count="0" type="stmt"/>
            <line num="293" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="293" type="cond"/>
            <line num="294" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="298" count="0" type="stmt"/>
            <line num="299" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="299" type="cond"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="301" type="cond"/>
            <line num="302" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="readLeaf(List&lt;String&gt;) : Context" num="310" count="0" type="method"/>
            <line num="311" count="0" type="stmt"/>
            <line num="312" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="312" type="cond"/>
            <line num="313" count="0" type="stmt"/>
            <line num="314" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="readAlt(List&lt;String&gt;) : Context" num="317" count="0" type="method"/>
            <line num="318" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="319" type="cond"/>
            <line num="320" count="0" type="stmt"/>
            <line num="321" count="0" type="stmt"/>
            <line num="322" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="322" type="cond"/>
            <line num="323" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="327" type="cond"/>
            <line num="328" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="readCat(List&lt;String&gt;) : Context" num="333" count="0" type="method"/>
            <line num="334" count="0" type="stmt"/>
            <line num="335" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="335" type="cond"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="338" type="cond"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="head(List&lt;String&gt;) : String" num="346" count="0" type="method"/>
            <line num="347" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="347" type="cond"/>
            <line num="348" count="0" type="stmt"/>
            <line num="350" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="tail(List&lt;String&gt;) : List&lt;String&gt;" num="353" count="0" type="method"/>
            <line num="354" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="Context(Expr,List&lt;String&gt;)" num="362" count="0" type="method"/>
            <line num="363" count="0" type="stmt"/>
            <line num="364" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="hasNext() : boolean" num="367" count="0" type="method"/>
            <line num="368" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit/regex/Reference.java" name="Reference.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="28" coveredmethods="0" methods="4" elements="8" classes="1" ncloc="22" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="Reference">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="Reference(String)" num="9" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="13" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="equals(Object) : boolean" num="18" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="24" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit/regex/RegexComposer.java" name="RegexComposer.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="17" loc="121" coveredmethods="0" methods="14" elements="58" classes="2" ncloc="100" statements="38" conditionals="6" coveredstatements="0"/>
            <class name="RegexComposer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="9" elements="37" statements="26" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="RegexComposer.ComposerVisitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="5" elements="21" statements="12" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RegexComposer(String,Expr)" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line num="18" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compose(Tuple) : List&lt;String&gt;" num="22" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="splitOnWhiteSpaces(List&lt;Object&gt;) : List&lt;String&gt;" num="28" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="34" type="cond"/>
            <line num="35" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="createMap(Expr) : Map&lt;String, Expr&gt;" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visit(Expr.Alt) : void" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visit(Expr.Cat) : void" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visit(Expr.Leaf) : void" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visit(Expr.Empty) : void" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="composeKey(Expr) : String" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="ComposerVisitor(Tuple,Map&lt;String, Expr&gt;)" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="visit(Expr.Alt) : void" num="89" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="93" type="cond"/>
            <line num="94" count="0" type="stmt"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visit(Expr.Cat) : void" num="104" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visit(Expr.Leaf) : void" num="111" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visit(Expr.Empty) : void" num="116" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit/regex/RegexTranslator.java" name="RegexTranslator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="27" loc="172" coveredmethods="0" methods="20" elements="88" classes="3" ncloc="141" statements="56" conditionals="12" coveredstatements="0"/>
            <class name="RegexTranslator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="21" coveredmethods="0" methods="15" elements="70" statements="45" conditionals="10" coveredstatements="0"/>
            </class>
            <class name="RegexTranslator.Context">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RegexTranslator.Context.Impl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="5" elements="18" statements="11" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RegexTranslator(Expr,String)" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="composeKey(String,String) : String" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visit(Expr.Alt) : void" num="31" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visit(Expr.Cat) : void" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visit(Expr.Leaf) : void" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visit(Expr.Empty) : void" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="isTopLevel(String) : boolean" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="createContext(String) : Context" num="75" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="isAlt(String) : boolean" num="79" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="4" visibility="protected" signature="isReferencedByAltDirectlyOrIndirectly(String) : boolean" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="87" type="cond"/>
            <line num="88" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="2" visibility="protected" signature="resolveIfImmediate(Value) : List&lt;Object&gt;" num="95" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="96" type="cond"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="resolve(Value) : List&lt;Object&gt;" num="101" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="resolveImmediate(Value) : List&lt;Object&gt;" num="105" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="resolve(List&lt;Object&gt;,Value) : List&lt;Object&gt;" num="109" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="114" type="cond"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isCat(String) : boolean" num="125" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="Impl(String,String)" num="142" count="0" type="method"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="toValue(Expr) : Value" num="148" count="0" type="method"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="150" type="cond"/>
            <line num="151" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="values() : List&lt;Value&gt;" num="158" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="163" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(Expr) : void" num="167" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit/regex/Value.java" name="Value.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="4" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Value">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.core">
         <metrics coveredelements="0" complexity="48" loc="325" methods="43" classes="8" statements="76" coveredconditionals="0" coveredmethods="0" elements="127" ncloc="258" files="5" conditionals="8" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/core/Cursor.java" name="Cursor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="71" coveredmethods="0" methods="8" elements="20" classes="4" ncloc="54" statements="12" conditionals="0" coveredstatements="0"/>
            <class name="Cursor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Cursor.Base">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Cursor.Impl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Cursor.ForTuple">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="11" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="Base(long)" num="17" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="stream() : Stream&lt;E&gt;" num="22" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Impl(long,Enumerator&lt;T&gt;)" num="30" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : java.util.Iterator&lt;List&lt;T&gt;&gt;" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="ForTuple(long,StreamableTupleCartesianator)" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;Tuple&gt;" num="49" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasNext() : boolean" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="next() : Tuple" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/core/StreamableCartesianator.java" name="StreamableCartesianator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="29" coveredmethods="0" methods="4" elements="8" classes="1" ncloc="21" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="StreamableCartesianator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="StreamableCartesianator(List&lt;? extends List&lt;? extends E&gt;&gt;)" num="13" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="StreamableCartesianator(List&lt;? extends E&gt;)" num="17" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cursor(List&lt;E&gt;) : Cursor&lt;List&lt;E&gt;&gt;" num="22" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="stream() : Stream&lt;List&lt;E&gt;&gt;" num="26" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/core/StreamableCombinator.java" name="StreamableCombinator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="17" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="13" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="StreamableCombinator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="StreamableCombinator(List&lt;? extends T&gt;,int)" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="stream() : Stream&lt;List&lt;T&gt;&gt;" num="14" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/core/StreamableTupleCartesianator.java" name="StreamableTupleCartesianator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="50" coveredmethods="0" methods="8" elements="18" classes="1" ncloc="41" statements="10" conditionals="0" coveredstatements="0"/>
            <class name="StreamableTupleCartesianator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="8" elements="18" statements="10" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="StreamableTupleCartesianator(List&lt;Factor&gt;)" num="14" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cursor(Tuple) : Cursor&lt;Tuple&gt;" num="18" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="stream() : Stream&lt;Tuple&gt;" num="22" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="asList() : List&lt;Tuple&gt;" num="26" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : Tuple" num="28" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="createMap() : Tuple" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="buildDomains(List&lt;Factor&gt;) : Domains&lt;String, Object&gt;" num="45" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/core/Utils.java" name="Utils.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="26" loc="158" coveredmethods="0" methods="21" elements="77" classes="1" ncloc="129" statements="48" conditionals="8" coveredstatements="0"/>
            <class name="Utils">
               <metrics coveredelements="0" coveredconditionals="0" complexity="26" coveredmethods="0" methods="21" elements="77" statements="48" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="printer() : Function&lt;T, T&gt;" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="printer(Function&lt;T, String&gt;) : Function&lt;T, T&gt;" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="print(T) : T" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unique(List&lt;T&gt;) : List&lt;T&gt;" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="sizeOfIntersection(Set&lt;T&gt;,Set&lt;T&gt;) : int" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="project(List&lt;String&gt;,Tuple) : Tuple" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createTestClassMock(TestClass) : TestClass" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getAnnotatedMethods(Class&lt;? extends Annotation&gt;) : List&lt;FrameworkMethod&gt;" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="createDummyFrameworkMethod() : FrameworkMethod" num="81" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isStatic() : boolean" num="83" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invokeExplosively(Object,Object) : Object" num="87" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAnnotation(Class&lt;T&gt;) : T" num="92" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="annotationType() : Class&lt;? extends Annotation&gt;" num="97" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="name() : String" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getDummyMethod() : Method" num="111" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getToStringMethod(Class&lt;?&gt;) : Method" num="117" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="className(Class) : String" num="121" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="className(Class,String) : String" num="125" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="127" type="cond"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createInstanceOf(TestClass) : Object" num="138" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="conjunct(Iterable&lt;T&gt;) : Predicate&lt;E&gt;" num="146" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="memoize(Function&lt;T, R&gt;) : Function&lt;T, R&gt;" num="154" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.pipeline.stages.generators">
         <metrics coveredelements="0" complexity="64" loc="711" methods="48" classes="5" statements="122" coveredconditionals="0" coveredmethods="0" elements="200" ncloc="514" files="4" conditionals="30" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/pipeline/stages/generators/Cartesian.java" name="Cartesian.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="29" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="25" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="Cartesian">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Cartesian(FactorSpace,Requirement)" num="13" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="generateCore() : List&lt;Tuple&gt;" num="17" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/pipeline/stages/generators/IpoGplus.java" name="IpoGplus.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="42" loc="534" coveredmethods="0" methods="30" elements="137" classes="2" ncloc="365" statements="85" conditionals="22" coveredstatements="0"/>
            <class name="IpoGplus">
               <metrics coveredelements="0" coveredconditionals="0" complexity="40" coveredmethods="0" methods="28" elements="133" statements="83" conditionals="22" coveredstatements="0"/>
            </class>
            <class name="IpoGplus.Session">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="chooseAssignmentsFor(List&lt;Factor&gt;) : Map&lt;String, Object&gt;" num="39" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 40()" num="40" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="IpoGplus(FactorSpace,Requirement,List&lt;Tuple&gt;)" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="6" visibility="public" signature="generateCore() : List&lt;Tuple&gt;" num="116" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="119" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="141" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="151" type="cond"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="179" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="194" type="cond"/>
            <line num="195" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="217" type="cond"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="validate() : void" num="234" count="0" type="method"/>
            <line num="236" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="prepare_π(List&lt;Factor&gt;,List&lt;Factor&gt;,List&lt;Constraint&gt;,int) : TupleSet" num="248" count="0" type="method"/>
            <line num="253" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="chooseLevelThatCoversMostTuples(Tuple,Factor,TupleSet,int,List&lt;Factor&gt;,List&lt;Constraint&gt;,Session) : Optional&lt;Object&gt;" num="270" count="0" type="method"/>
            <line num="271" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="modifyTupleWith(Tuple,String,Object) : Tuple" num="281" count="0" type="method"/>
            <line num="282" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="countCoveredTuplesBy(Tuple,TupleSet,int) : long" num="292" count="0" type="method"/>
            <line num="293" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="createTupleFrom(List&lt;String&gt;,Tuple) : Tuple" num="304" count="0" type="method"/>
            <line num="305" count="0" type="stmt"/>
            <line num="306" count="0" type="stmt"/>
            <line num="307" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="replaceDontCareValuesWithActualLevels(List&lt;Factor&gt;,List&lt;Constraint&gt;,Session) : Function&lt;Tuple, Tuple&gt;" num="313" count="0" type="method"/>
            <line num="314" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="apply(Tuple) : Tuple" num="321" count="0" type="method"/>
            <line num="323" count="0" type="stmt"/>
            <line num="324" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="324" type="cond"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="327" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="chooseAssignment(Stream&lt;Tuple&gt;,int) : Optional&lt;Tuple&gt;" num="342" count="0" type="method"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="344" type="cond"/>
            <line complexity="1" visibility="private" signature="dontCareFactors(Tuple,List&lt;Factor&gt;) : List&lt;Factor&gt;" num="352" count="0" type="method"/>
            <line num="353" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="removeDontCares(Tuple) : Tuple" num="361" count="0" type="method"/>
            <line num="362" count="0" type="stmt"/>
            <line num="363" count="0" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="streamAllPossibleTuples(List&lt;Factor&gt;,int) : Stream&lt;Tuple&gt;" num="369" count="0" type="method"/>
            <line num="370" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 373()" num="373" count="0" type="method"/>
            <line num="373" count="0" type="stmt"/>
            <line num="374" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="streamIncompleteTestsToCoverGivenTuple(List&lt;Tuple&gt;,Tuple) : Stream&lt;Tuple&gt;" num="405" count="0" type="method"/>
            <line num="407" count="0" type="stmt"/>
            <line num="410" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="410" type="cond"/>
            <line num="411" count="0" type="stmt"/>
            <line num="412" count="0" type="stmt"/>
            <line num="413" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="streamAssignmentsForDontCaresUnderConstraints(Tuple,List&lt;Factor&gt;,List&lt;Constraint&gt;,Session) : Stream&lt;Tuple&gt;" num="417" count="0" type="method"/>
            <line num="423" count="0" type="stmt"/>
            <line num="424" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="424" type="cond"/>
            <line num="425" count="0" type="stmt"/>
            <line num="426" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="streamAssignmentsAllowedByConstraints(Tuple,List&lt;Factor&gt;,List&lt;Constraint&gt;,Session) : Stream&lt;Tuple&gt;" num="435" count="0" type="method"/>
            <line num="441" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="443" type="cond"/>
            <line num="448" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="streamTuplesUnderConstraints(List&lt;Constraint&gt;) : Function&lt;List&lt;Factor&gt;, Stream&lt;Tuple&gt;&gt;" num="451" count="0" type="method"/>
            <line num="452" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="satisfiesAllOf(List&lt;Constraint&gt;) : Predicate&lt;Tuple&gt;" num="460" count="0" type="method"/>
            <line num="461" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFullyInvolvedConstraints(Collection&lt;String&gt;,List&lt;Constraint&gt;) : List&lt;Constraint&gt;" num="467" count="0" type="method"/>
            <line num="468" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getPartiallyInvolvedConstraints(Collection&lt;String&gt;,List&lt;Constraint&gt;) : List&lt;Constraint&gt;" num="473" count="0" type="method"/>
            <line num="474" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="_streamAssignmentsAllowedByConstraints(Tuple,List&lt;Constraint&gt;,List&lt;Factor&gt;,Session) : Stream&lt;Tuple&gt;" num="481" count="0" type="method"/>
            <line num="487" count="0" type="stmt"/>
            <line num="488" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="488" type="cond"/>
            <line num="489" count="0" type="stmt"/>
            <line num="492" count="0" type="stmt"/>
            <line num="501" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="functionToFindFirstTupleUnderConstraints() : Function&lt;List&lt;Constraint&gt;, Function&lt;List&lt;Factor&gt;, Optional&lt;Tuple&gt;&gt;&gt;" num="504" count="0" type="method"/>
            <line num="505" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="findFirstTupleUnderConstraints(List&lt;Constraint&gt;) : Function&lt;List&lt;Factor&gt;, Optional&lt;Tuple&gt;&gt;" num="508" count="0" type="method"/>
            <line num="509" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="satisfies(List&lt;Constraint&gt;) : Predicate&lt;Tuple&gt;" num="513" count="0" type="method"/>
            <line num="514" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="factorsUnderConstrains(List&lt;Factor&gt;,List&lt;Constraint&gt;) : List&lt;Factor&gt;" num="517" count="0" type="method"/>
            <line num="518" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isAllowedTuple(List&lt;Factor&gt;,List&lt;Constraint&gt;,Session) : Predicate&lt;Tuple&gt;" num="526" count="0" type="method"/>
            <line num="527" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/pipeline/stages/generators/Negative.java" name="Negative.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="18" loc="126" coveredmethods="0" methods="14" elements="54" classes="1" ncloc="107" statements="32" conditionals="8" coveredstatements="0"/>
            <class name="Negative">
               <metrics coveredelements="0" coveredconditionals="0" complexity="18" coveredmethods="0" methods="14" elements="54" statements="32" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Negative(List&lt;Tuple&gt;,List&lt;Tuple&gt;,FactorSpace,Requirement)" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="generateCore() : List&lt;Tuple&gt;" num="26" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="generateNegativeTests(List&lt;Tuple&gt;,FactorSpace,List&lt;Tuple&gt;) : List&lt;Tuple&gt;" num="31" count="0" type="method"/>
            <line complexity="2" visibility="package" signature="&lt;init&gt;, line 32()" num="32" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="47" type="cond"/>
            <line complexity="1" visibility="private" signature="exclude(Constraint,List&lt;Constraint&gt;) : List&lt;Constraint&gt;" num="69" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 70()" num="70" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="composeFactorMap(FactorSpace) : Map&lt;String, List&lt;Object&gt;&gt;" num="75" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 76()" num="76" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="createNegativeTestForConstraint(Constraint,List&lt;Constraint&gt;,Map&lt;String, List&lt;Object&gt;&gt;,List&lt;Tuple&gt;) : Optional&lt;Tuple&gt;" num="81" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="88" type="cond"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="92" type="cond"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="composeValues(List&lt;String&gt;,List&lt;Object&gt;) : Tuple" num="105" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 106()" num="106" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="modifyTupleWithValues(Tuple,Tuple) : Tuple" num="112" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 115()" num="115" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="createCartesianator(Constraint,Map&lt;String, List&lt;Object&gt;&gt;) : Cartesianator&lt;Object&gt;" num="121" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/pipeline/stages/generators/Passthrough.java" name="Passthrough.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="22" coveredmethods="0" methods="2" elements="5" classes="1" ncloc="17" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="Passthrough">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Passthrough(List&lt;Tuple&gt;,FactorSpace,Requirement)" num="13" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
            <line num="15" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="generateCore() : List&lt;Tuple&gt;" num="18" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.testsuite">
         <metrics coveredelements="0" complexity="54" loc="467" methods="51" classes="17" statements="79" coveredconditionals="0" coveredmethods="0" elements="132" ncloc="354" files="7" conditionals="2" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/testsuite/SchemafulTupleSet.java" name="SchemafulTupleSet.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="110" coveredmethods="0" methods="13" elements="37" classes="3" ncloc="78" statements="24" conditionals="0" coveredstatements="0"/>
            <class name="SchemafulTupleSet">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SchemafulTupleSet.Builder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="14" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SchemafulTupleSet.Builder.Impl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="17" statements="11" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="fromTuples(List&lt;Tuple&gt;) : SchemafulTupleSet" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="empty(List&lt;String&gt;) : SchemafulTupleSet" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Builder(List&lt;String&gt;)" num="43" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 44()" num="44" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(Tuple) : Builder" num="50" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addAll(List&lt;Tuple&gt;) : Builder" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : SchemafulTupleSet" num="64" count="0" type="method"/>
            <line complexity="1" visibility="private" signature="Impl(List&lt;String&gt;,List&lt;Tuple&gt;)" num="69" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : Tuple" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAttributeNames() : List&lt;String&gt;" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="width() : int" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subtuplesOf(int) : TupleSet" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/testsuite/TestCase.java" name="TestCase.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="45" coveredmethods="0" methods="5" elements="10" classes="2" ncloc="34" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="TestCase">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestCase.Category">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="createTestCase(Tuple,List&lt;Constraint&gt;) : TestCase" num="14" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTestInput() : Tuple" num="16" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getCategory() : Category" num="21" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="violatedConstraints() : List&lt;Constraint&gt;" num="26" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="31" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/testsuite/TestOracle.java" name="TestOracle.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="99" coveredmethods="0" methods="13" elements="31" classes="4" ncloc="82" statements="16" conditionals="2" coveredstatements="0"/>
            <class name="TestOracle">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestOracle.Result">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="7" elements="16" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestOracle.Result.Exit">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestOracle.Assertion">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="1" elements="5" statements="2" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="toString() : String" num="16" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="22" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="thrown(Throwable) : Result" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="exitedWith() : Exit" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="value() : V" num="40" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="returned(Object) : Result" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="exitedWith() : Exit" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="value() : V" num="55" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="formatTo(Formatter,int,int,int) : void" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="assertThat(V,Predicate&lt;V&gt;) : void" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getName() : String" num="86" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="accept(Tuple) : void" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="assertion() : Assertion" num="95" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/testsuite/TestScenario.java" name="TestScenario.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="19" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="TestScenario">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/testsuite/TestSuite.java" name="TestSuite.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="12" loc="104" coveredmethods="0" methods="12" elements="29" classes="3" ncloc="76" statements="17" conditionals="0" coveredstatements="0"/>
            <class name="TestSuite">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestSuite.Builder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="17" statements="11" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestSuite.Builder.Impl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="12" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Builder(ParameterSpace,TestScenario)" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addAllToSeedTuples(Collection&lt;? extends Tuple&gt;) : Builder&lt;T&gt;" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addAllToRegularTuples(Collection&lt;? extends Tuple&gt;) : Builder&lt;T&gt;" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addAllToNegativeTuples(Collection&lt;? extends Tuple&gt;) : Builder&lt;T&gt;" num="49" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="toTestCase(TestCase.Category,Tuple) : TestCase" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : TestSuite" num="63" count="0" type="method"/>
            <line complexity="1" visibility="private" signature="Impl()" num="67" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 69()" num="69" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : TestCase" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterSpace() : ParameterSpace" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getScenario() : TestScenario" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/testsuite/TupleConsumer.java" name="TupleConsumer.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="22" coveredmethods="0" methods="1" elements="4" classes="1" ncloc="18" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="TupleConsumer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="1" elements="4" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="package" signature="formatTo(Formatter,int,int,int) : void" num="14" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line num="17" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/testsuite/TupleSet.java" name="TupleSet.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="68" coveredmethods="0" methods="7" elements="21" classes="3" ncloc="55" statements="14" conditionals="0" coveredstatements="0"/>
            <class name="TupleSet">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TupleSet.Impl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="11" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TupleSet.Builder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Impl(Collection&lt;Tuple&gt;)" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cartesianProduct(TupleSet) : TupleSet" num="20" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="streamCartesianProduct(TupleSet) : Stream&lt;Tuple&gt;" num="31" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Builder()" num="49" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addAll(Collection&lt;Tuple&gt;) : Builder" num="53" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(Tuple) : Builder" num="58" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : TupleSet" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit.core.tuples">
         <metrics coveredelements="0" complexity="21" loc="164" methods="14" classes="6" statements="60" coveredconditionals="0" coveredmethods="0" elements="88" ncloc="139" files="2" conditionals="14" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit/core/tuples/Tuple.java" name="Tuple.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="12" loc="98" coveredmethods="0" methods="9" elements="42" classes="5" ncloc="82" statements="27" conditionals="6" coveredstatements="0"/>
            <class name="Tuple">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Tuple.Builder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="5" elements="23" statements="16" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="Tuple.Utils">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="1" elements="13" statements="8" conditionals="4" coveredstatements="0"/>
            </class>
            <class name="Tuple.Impl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Tuple.Sorted">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="put(String,Object) : Builder" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="putAll(Map&lt;String, Object&gt;) : Builder" num="25" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="putRegex(String,String) : Builder" num="30" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="putFsm(Scenario&lt;SUT&gt;) : Builder" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="build() : Tuple" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="builder() : Builder" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="3" visibility="package" signature="isSubtupleOf(Tuple,Tuple) : boolean" num="69" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isSubtupleOf(Tuple) : boolean" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isSubtupleOf(Tuple) : boolean" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit/core/tuples/TupleUtils.java" name="TupleUtils.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="66" coveredmethods="0" methods="5" elements="46" classes="1" ncloc="57" statements="33" conditionals="8" coveredstatements="0"/>
            <class name="TupleUtils">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="5" elements="46" statements="33" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="subtuplesOf(Tuple,int) : Set&lt;Tuple&gt;" num="13" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
            <line num="16" count="0" type="stmt"/>
            <line num="17" count="0" type="stmt"/>
            <line num="18" count="0" type="stmt"/>
            <line num="20" count="0" type="stmt"/>
            <line num="21" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="subtuplesOf(Tuple) : Set&lt;Tuple&gt;" num="30" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="34" type="cond"/>
            <line num="35" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="connectingSubtuplesOf(Tuple,Tuple,int) : Set&lt;Tuple&gt;" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="46" type="cond"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="project(Tuple,List&lt;String&gt;) : Tuple" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="copy(Tuple) : Tuple" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit.core.reflect">
         <metrics coveredelements="0" complexity="6" loc="49" methods="4" classes="1" statements="8" coveredconditionals="0" coveredmethods="0" elements="12" ncloc="32" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit/core/reflect/ReflectionUtils.java" name="ReflectionUtils.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="49" coveredmethods="0" methods="4" elements="12" classes="1" ncloc="32" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="ReflectionUtils">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="4" elements="12" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="getMethods(Class&lt;?&gt;) : List&lt;Method&gt;" num="17" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFields(Class&lt;?&gt;) : List&lt;Field&gt;" num="21" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getFieldValue(Object,Field) : T" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="getMethod(Class&lt;?&gt;,String,Class&lt;?&gt;) : Method" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.runners.junit4">
         <metrics coveredelements="0" complexity="88" loc="647" methods="66" classes="7" statements="149" coveredconditionals="0" coveredmethods="0" elements="249" ncloc="549" files="5" conditionals="34" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/runners/junit4/ITestCaseRunner.java" name="ITestCaseRunner.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="7" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ITestCaseRunner">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/runners/junit4/JCUnit8.java" name="JCUnit8.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="59" loc="411" coveredmethods="0" methods="41" elements="162" classes="2" ncloc="352" statements="95" conditionals="26" coveredstatements="0"/>
            <class name="JCUnit8">
               <metrics coveredelements="0" coveredconditionals="0" complexity="32" coveredmethods="0" methods="22" elements="83" statements="47" conditionals="14" coveredstatements="0"/>
            </class>
            <class name="JCUnit8.TestCaseRunner">
               <metrics coveredelements="0" coveredconditionals="0" complexity="27" coveredmethods="0" methods="19" elements="79" statements="48" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="JCUnit8(Class&lt;?&gt;)" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="createValidatorsFor(TestClass) : TestClassValidator[]" num="63" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="validateTestClass(TestClass) : List&lt;Exception&gt;" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 71()" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="validateAtLeastOneTestMethod(TestClass,LinkedList&lt;Exception&gt;) : void" num="83" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="84" type="cond"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="validateFromAnnotationsAreReferencingExistingParameterSourceMethods(Class&lt;? extends Annotation&gt;,TestClass,List&lt;Exception&gt;) : void" num="89" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="buildParameterSpace(List&lt;com.github.dakusui.jcunit8.factorspace.Parameter&gt;,List&lt;Constraint&gt;) : ParameterSpace" num="115" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="buildTestSuite(Config,ParameterSpace,TestScenario) : TestSuite" num="122" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="buildParameterMap(TestClass) : SortedMap&lt;String, com.github.dakusui.jcunit8.factorspace.Parameter&gt;" num="126" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 128()" num="128" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="buildParameterFactoryCreatorFrom(FrameworkMethod) : Function&lt;Object, com.github.dakusui.jcunit8.factorspace.Parameter.Factory&gt;" num="139" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="createTestClass(Class&lt;?&gt;) : TestClass" num="152" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getChildren() : List&lt;Runner&gt;" num="157" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="collectInitializationErrors(List&lt;Throwable&gt;) : void" num="162" count="0" type="method"/>
            <line num="164" count="0" type="stmt"/>
            <line complexity="2" visibility="protected" signature="withBeforeClasses(Statement) : Statement" num="167" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="168" type="cond"/>
            <line complexity="2" visibility="protected" signature="withAfterClasses(Statement) : Statement" num="178" count="0" type="method"/>
            <line num="179" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="179" type="cond"/>
            <line complexity="1" visibility="public" signature="buildTestSuite(TestClass,TestClass,ConfigFactory) : TestSuite" num="189" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line num="195" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="createRunners(TestSuite) : List&lt;Runner&gt;" num="215" count="0" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line num="220" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="applyValidators(List&lt;Throwable&gt;) : void" num="231" count="0" type="method"/>
            <line num="232" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="232" type="cond"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getConfigFactory() : ConfigFactory" num="239" count="0" type="method"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="createParameterSpaceDefinitionTestClass() : TestClass" num="247" count="0" type="method"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="249" type="cond"/>
            <line complexity="2" visibility="private" signature="getConfigureWithAnnotation() : ConfigureWith" num="254" count="0" type="method"/>
            <line num="255" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="256" type="cond"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="TestCaseRunner(Class&lt;?&gt;,int,TestSuite)" num="271" count="0" type="method"/>
            <line num="272" count="0" type="stmt"/>
            <line num="273" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getName() : String" num="277" count="0" type="method"/>
            <line num="279" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="getChildren() : List&lt;TestOracle&gt;" num="282" count="0" type="method"/>
            <line num="284" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="describeChild(TestOracle) : Description" num="287" count="0" type="method"/>
            <line num="289" count="0" type="stmt"/>
            <line complexity="2" visibility="protected" signature="runChild(TestOracle,RunNotifier) : void" num="296" count="0" type="method"/>
            <line num="298" count="0" type="stmt"/>
            <line num="300" count="0" type="stmt"/>
            <line num="301" count="0" type="stmt"/>
            <line num="302" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="302" type="cond"/>
            <line num="303" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="collectInitializationErrors(List&lt;Throwable&gt;) : void" num="309" count="0" type="method"/>
            <line complexity="2" visibility="protected" signature="classBlock(RunNotifier) : Statement" num="313" count="0" type="method"/>
            <line num="315" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="316" type="cond"/>
            <line num="317" count="0" type="stmt"/>
            <line num="318" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="withBeforeTestCases(Statement) : Statement" num="323" count="0" type="method"/>
            <line num="324" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="324" type="cond"/>
            <line complexity="2" visibility="private" signature="withAfterTestCases(Statement) : Statement" num="329" count="0" type="method"/>
            <line num="330" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="331" type="cond"/>
            <line complexity="2" visibility="private" signature="checkIfAllChildrenAreIgnored() : boolean" num="335" count="0" type="method"/>
            <line num="336" count="0" type="stmt"/>
            <line num="337" count="0" type="stmt"/>
            <line num="338" count="0" type="stmt"/>
            <line num="339" count="0" type="stmt"/>
            <line num="340" count="0" type="stmt"/>
            <line num="341" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="composeTestInput(Tuple) : Tuple" num="350" count="0" type="method"/>
            <line num="351" count="0" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="oracleBlock(TestOracle,Tuple) : Statement" num="362" count="0" type="method"/>
            <line num="363" count="0" type="stmt"/>
            <line num="364" count="0" type="stmt"/>
            <line num="365" count="0" type="stmt"/>
            <line num="366" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="oracleInvoker(TestOracle,Tuple) : Statement" num="369" count="0" type="method"/>
            <line num="370" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="evaluate() : void" num="371" count="0" type="method"/>
            <line num="373" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="withBeforesForTestOracle(Tuple,Statement) : Statement" num="378" count="0" type="method"/>
            <line num="379" count="0" type="stmt"/>
            <line num="380" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="380" type="cond"/>
            <line complexity="1" visibility="public" signature="evaluate() : void" num="383" count="0" type="method"/>
            <line num="385" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line num="387" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="withAftersForTestOracle(Tuple,Statement) : Statement" num="392" count="0" type="method"/>
            <line num="393" count="0" type="stmt"/>
            <line num="394" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="394" type="cond"/>
            <line complexity="1" visibility="public" signature="evaluate() : void" num="397" count="0" type="method"/>
            <line num="399" count="0" type="stmt"/>
            <line num="400" count="0" type="stmt"/>
            <line num="401" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getTestCase() : TestCase" num="406" count="0" type="method"/>
            <line num="408" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/runners/junit4/JUnit4Runner.java" name="JUnit4Runner.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="20" loc="146" coveredmethods="0" methods="16" elements="68" classes="2" ncloc="122" statements="44" conditionals="8" coveredstatements="0"/>
            <class name="JUnit4Runner">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="7" elements="33" statements="18" conditionals="8" coveredstatements="0"/>
            </class>
            <class name="JUnit4Runner.Builder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="9" elements="35" statements="26" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="run() : Result" num="21" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRequest() : Request" num="25" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="JUnit4Runner(Class,String,int,int)" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="createFilter(String,int,int) : Filter" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="shouldRun(Description) : boolean" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="39" type="cond"/>
            <line num="40" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="describe() : String" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line complexity="2" visibility="private" signature="createPredicate(String,int,int) : Predicate&lt;Description&gt;" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="72" type="cond"/>
            <line num="73" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Builder(Class)" num="88" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="methodName(String) : Builder" num="92" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="allMethods() : Builder" num="97" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCase(int) : Builder" num="102" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCasesInRange(int,int) : Builder" num="109" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCasesFrom(int) : Builder" num="118" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testCasesUntil(int) : Builder" num="125" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="128" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="allTestCases() : Builder" num="132" count="0" type="method"/>
            <line num="133" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : JUnit4Runner" num="137" count="0" type="method"/>
            <line num="138" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/runners/junit4/JUnit4Utils.java" name="JUnit4Utils.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="5" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="JUnit4Utils">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/runners/junit4/TestScenarioFactoryForJUnit4.java" name="TestScenarioFactoryForJUnit4.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="78" coveredmethods="0" methods="9" elements="19" classes="1" ncloc="66" statements="10" conditionals="0" coveredstatements="0"/>
            <class name="TestScenarioFactoryForJUnit4">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="9" elements="19" statements="10" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="create(TestClass) : TestScenario" num="25" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="preSuiteProcedures() : List&lt;TupleConsumer&gt;" num="28" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="preTestInputProcedures() : List&lt;TupleConsumer&gt;" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="preOracleProcedures() : List&lt;TupleConsumer&gt;" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="oracles() : List&lt;TestOracle&gt;" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="postOracleProcedures() : List&lt;TupleConsumer&gt;" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="postTestInputProcedures() : List&lt;TupleConsumer&gt;" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="postSuiteProcedures() : List&lt;TupleConsumer&gt;" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="toTupleConsumer(TestClass,Class&lt;? extends Annotation&gt;) : List&lt;TupleConsumer&gt;" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.factorspace">
         <metrics coveredelements="0" complexity="112" loc="849" methods="103" classes="22" statements="156" coveredconditionals="0" coveredmethods="0" elements="275" ncloc="691" files="9" conditionals="16" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/factorspace/Constraint.java" name="Constraint.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="40" coveredmethods="0" methods="6" elements="12" classes="1" ncloc="32" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="Constraint">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="12" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="create(String,Predicate&lt;Tuple&gt;,List&lt;String&gt;) : Constraint" num="13" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="15" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Tuple) : boolean" num="20" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="involvedKeys() : List&lt;String&gt;" num="25" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="30" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="create(String,Predicate&lt;Tuple&gt;,String) : Constraint" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/factorspace/Factor.java" name="Factor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="32" coveredmethods="0" methods="4" elements="8" classes="1" ncloc="24" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="Factor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="create(String,Object[]) : Factor" num="8" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="12" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLevels() : List&lt;Object&gt;" num="17" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="22" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/factorspace/FactorSpace.java" name="FactorSpace.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="58" coveredmethods="0" methods="8" elements="17" classes="1" ncloc="45" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="FactorSpace">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="8" elements="17" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="create(List&lt;? extends Factor&gt;,List&lt;Constraint&gt;) : FactorSpace" num="15" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 18()" num="18" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactors() : List&lt;Factor&gt;" num="22" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactor(String) : Factor" num="28" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConstraints() : List&lt;Constraint&gt;" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="stream() : Stream&lt;Tuple&gt;" num="51" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getFactorNames() : List&lt;String&gt;" num="55" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/factorspace/FactorUtils.java" name="FactorUtils.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="13" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="FactorUtils">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="toFactorNames(Collection&lt;Factor&gt;) : List&lt;String&gt;" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/factorspace/GroupedParameterFactoryBuilder.java" name="GroupedParameterFactoryBuilder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="65" coveredmethods="0" methods="7" elements="19" classes="1" ncloc="56" statements="12" conditionals="0" coveredstatements="0"/>
            <class name="GroupedParameterFactoryBuilder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="19" statements="12" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="GroupedParameterFactoryBuilder(Function&lt;Tuple, T&gt;)" num="25" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="factor(String,Object,Object) : GroupedParameterFactoryBuilder&lt;T&gt;" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 32()" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="constraint(String,Predicate&lt;Tuple&gt;,String,String) : GroupedParameterFactoryBuilder&lt;T&gt;" num="40" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 41()" num="41" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="strength(int) : GroupedParameterFactoryBuilder&lt;T&gt;" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : Parameter.Simple.Factory&lt;T&gt;" num="53" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/factorspace/Parameter.java" name="Parameter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="36" loc="305" coveredmethods="0" methods="35" elements="86" classes="13" ncloc="239" statements="51" conditionals="0" coveredstatements="0"/>
            <class name="Parameter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Parameter.Base">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="11" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Parameter.Factory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Parameter.Factory.Base">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Parameter.Simple">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Parameter.Simple.Impl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="13" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Parameter.Simple.Factory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="5" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Parameter.Regex">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Parameter.Regex.Impl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="17" statements="11" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Parameter.Regex.Factory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="11" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Parameter.Fsm">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Parameter.Fsm.Impl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="5" elements="16" statements="11" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Parameter.Fsm.Factory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="7" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="Base(String,List&lt;T&gt;)" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toFactorSpace() : FactorSpace" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getKnownValues() : List&lt;T&gt;" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="_decomposeValue(V,Stream&lt;Tuple&gt;,Function&lt;Tuple, V&gt;,Predicate&lt;Tuple&gt;) : Optional&lt;Tuple&gt;" num="72" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addActualValue(T) : F" num="93" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addActualValues(List&lt;T&gt;) : F" num="100" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Impl(String,List&lt;T&gt;)" num="113" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="decompose() : List&lt;Factor&gt;" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="generateConstraints() : List&lt;Constraint&gt;" num="123" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="composeValue(Tuple) : T" num="128" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decomposeValue(T) : Optional&lt;Tuple&gt;" num="134" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="139" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="Factory()" num="147" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="of(List&lt;U&gt;) : Factory&lt;U&gt;" num="150" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(String) : Parameter&lt;T&gt;" num="154" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Impl(String,String,List&lt;List&lt;U&gt;&gt;,Function&lt;String, U&gt;)" num="168" count="0" type="method"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line num="173" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decomposeValue(List&lt;U&gt;) : Optional&lt;Tuple&gt;" num="177" count="0" type="method"/>
            <line num="178" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="composeValue(Tuple) : List&lt;U&gt;" num="186" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="decompose() : List&lt;Factor&gt;" num="191" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="generateConstraints() : List&lt;Constraint&gt;" num="196" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="composeStringValueFrom(Tuple) : List&lt;String&gt;" num="201" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(String) : Regex&lt;T&gt;" num="210" count="0" type="method"/>
            <line num="212" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(String,Function&lt;String, T&gt;) : Factory&lt;T&gt;" num="215" count="0" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(String) : Factory&lt;String&gt;" num="219" count="0" type="method"/>
            <line num="220" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="Factory(String,Function&lt;String, T&gt;)" num="223" count="0" type="method"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="create(String,String,List&lt;List&lt;U&gt;&gt;,Function&lt;String, U&gt;) : Regex&lt;U&gt;" num="228" count="0" type="method"/>
            <line num="229" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="Impl(String,FiniteStateMachine&lt;SUT&gt;,List&lt;Scenario&lt;SUT&gt;&gt;,int)" num="239" count="0" type="method"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="242" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="decomposeValue(Scenario&lt;SUT&gt;) : Optional&lt;Tuple&gt;" num="246" count="0" type="method"/>
            <line num="248" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line num="253" count="0" type="stmt"/>
            <line num="255" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="composeValue(Tuple) : Scenario&lt;SUT&gt;" num="262" count="0" type="method"/>
            <line num="264" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="decompose() : List&lt;Factor&gt;" num="267" count="0" type="method"/>
            <line num="269" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="generateConstraints() : List&lt;Constraint&gt;" num="272" count="0" type="method"/>
            <line num="274" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(String) : Fsm&lt;SUT&gt;" num="282" count="0" type="method"/>
            <line num="284" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Factory(Class&lt;? extends FsmSpec&lt;SUT&gt;&gt;,int)" num="292" count="0" type="method"/>
            <line num="293" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="of(Class&lt;? extends FsmSpec&lt;SUT_&gt;&gt;,int) : Factory&lt;SUT_&gt;" num="297" count="0" type="method"/>
            <line num="298" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/factorspace/ParameterSpace.java" name="ParameterSpace.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="97" coveredmethods="0" methods="11" elements="28" classes="2" ncloc="79" statements="17" conditionals="0" coveredstatements="0"/>
            <class name="ParameterSpace">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ParameterSpace.Builder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="9" elements="22" statements="13" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="encodeTuple(Tuple) : Tuple" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="encodeSeedTuples(ParameterSpace,List&lt;Tuple&gt;) : List&lt;Tuple&gt;" num="28" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addParameter(Parameter) : Builder" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addAllParameters(Collection&lt;? extends Parameter&gt;) : Builder" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addConstraint(Constraint) : Builder" num="51" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addAllConstraints(Collection&lt;? extends Constraint&gt;) : Builder" num="56" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : ParameterSpace" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterNames() : List&lt;String&gt;" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameter(String) : Parameter&lt;P&gt;" num="68" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConstraints() : List&lt;Constraint&gt;" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/factorspace/SequenceParameterFactoryBuilder.java" name="SequenceParameterFactoryBuilder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="34" loc="198" coveredmethods="0" methods="26" elements="93" classes="1" ncloc="174" statements="51" conditionals="16" coveredstatements="0"/>
            <class name="SequenceParameterFactoryBuilder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="34" coveredmethods="0" methods="26" elements="93" statements="51" conditionals="16" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="SequenceParameterFactoryBuilder(List&lt;? extends T&gt;)" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size(int,int) : SequenceParameterFactoryBuilder&lt;T&gt;" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size(int) : SequenceParameterFactoryBuilder&lt;T&gt;" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="withRepetition() : SequenceParameterFactoryBuilder&lt;T&gt;" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="withRepetition(boolean) : SequenceParameterFactoryBuilder&lt;T&gt;" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="withoutRepetition() : SequenceParameterFactoryBuilder&lt;T&gt;" num="49" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : Parameter.Factory&lt;List&lt;T&gt;&gt;" num="53" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(String) : Parameter&lt;List&lt;T&gt;&gt;" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="decompose() : List&lt;Factor&gt;" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="&lt;init&gt;, line 61()" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="generateConstraints() : List&lt;Constraint&gt;" num="85" count="0" type="method"/>
            <line complexity="2" visibility="package" signature="&lt;init&gt;, line 87()" num="87" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="test(Tuple) : boolean" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="97" type="cond"/>
            <line num="98" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="98" type="cond"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="involvedKeys() : List&lt;String&gt;" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="112" type="cond"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Tuple) : boolean" num="119" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="involvedKeys() : List&lt;String&gt;" num="128" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="composeValue(Tuple) : List&lt;T&gt;" num="137" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="decomposeValue(List&lt;T&gt;) : Optional&lt;Tuple&gt;" num="143" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="148" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="149" type="cond"/>
            <line num="150" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="composeInvolvedKeys(int,int) : List&lt;String&gt;" num="160" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="composeListFrom(Tuple,int) : List&lt;Object&gt;" num="170" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getValueFromTuple(Tuple,int) : U" num="178" count="0" type="method"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getSizeFromTuple(Tuple) : int" num="183" count="0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="composeValueFactorName(int) : String" num="187" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="composeSizeFactorName() : String" num="191" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/factorspace/TestPredicate.java" name="TestPredicate.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="41" coveredmethods="0" methods="5" elements="10" classes="1" ncloc="32" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="TestPredicate">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="toString(TestPredicate) : String" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="of(String,List&lt;String&gt;,Predicate&lt;Tuple&gt;) : TestPredicate" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="25" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Tuple) : boolean" num="30" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="involvedKeys() : List&lt;String&gt;" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.runners.junit4.utils">
         <metrics coveredelements="0" complexity="37" loc="261" methods="23" classes="1" statements="57" coveredconditionals="0" coveredmethods="0" elements="98" ncloc="235" files="1" conditionals="18" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/runners/junit4/utils/InternalUtils.java" name="InternalUtils.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="37" loc="261" coveredmethods="0" methods="23" elements="98" classes="1" ncloc="235" statements="57" conditionals="18" coveredstatements="0"/>
            <class name="InternalUtils">
               <metrics coveredelements="0" coveredconditionals="0" complexity="37" coveredmethods="0" methods="23" elements="98" statements="57" conditionals="18" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 34()" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="involvedParameters(TestClass) : List&lt;String&gt;" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invokeExplosivelyWithArgumentsFromTestInput(FrameworkMethod,Tuple) : Object" num="69" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRunAftersForTestInput(Statement,List&lt;TupleConsumer&gt;,Tuple) : RunAfters" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createRunBeforesForTestInput(Statement,List&lt;TupleConsumer&gt;,Tuple) : RunBefores" num="95" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="frameworkMethodInvokingArgumentsFromTestCase(Tuple) : Function&lt;TupleConsumer, FrameworkMethod&gt;" num="105" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invokeExplosively(Object,Object) : Object" num="109" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="7" visibility="public" signature="validateArguments(FrameworkMethod,Class[],Object[]) : Object[]" num="121" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line num="127" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="130" type="cond"/>
            <line num="131" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="composeErrorMessageForTypeMismatch(Object,FrameworkMethod,int) : String" num="138" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toTupleConsumer(FrameworkMethod) : TupleConsumer" num="149" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="151" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="accept(Tuple) : void" num="156" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toTestOracle(FrameworkMethod,SortedMap&lt;String, TestPredicate&gt;) : TestOracle" num="167" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="169" count="0" type="method"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="shouldInvoke() : Predicate&lt;Tuple&gt;" num="174" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="when() : Function&lt;Tuple, Result&gt;" num="179" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="apply(Tuple) : Result" num="182" count="0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line num="185" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="191" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="then() : Predicate&lt;Result&gt;" num="198" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line complexity="5" visibility="public" signature="test(Result) : boolean" num="201" count="0" type="method"/>
            <line num="203" count="0" type="stmt"/>
            <line num="204" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="204" type="cond"/>
            <line num="205" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="205" type="cond"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="207" type="cond"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="209" type="cond"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="217" count="0" type="method"/>
            <line num="219" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="shouldInvoke(FrameworkMethod,SortedMap&lt;String, TestPredicate&gt;) : Predicate&lt;Tuple&gt;" num="226" count="0" type="method"/>
            <line num="227" count="0" type="stmt"/>
            <line num="229" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="229" type="cond"/>
            <line num="230" count="0" type="stmt"/>
            <line num="231" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getParameterAnnotationsFrom(FrameworkMethod,Class&lt;A&gt;) : List&lt;A&gt;" num="240" count="0" type="method"/>
            <line num="242" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit.core.utils">
         <metrics coveredelements="0" complexity="36" loc="358" methods="31" classes="6" statements="57" coveredconditionals="0" coveredmethods="0" elements="98" ncloc="208" files="4" conditionals="10" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit/core/utils/Checks.java" name="Checks.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="123" coveredmethods="0" methods="10" elements="35" classes="1" ncloc="46" statements="17" conditionals="8" coveredstatements="0"/>
            <class name="Checks">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="10" elements="35" statements="17" conditionals="8" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="checknotnull(T) : T" num="30" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="checknotnull(T,String,Object) : T" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="62" type="cond"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="checkcond(boolean) : void" num="68" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="checkcond(boolean,String,Object) : void" num="72" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="checktest(boolean,String,Object) : void" num="81" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="82" type="cond"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="wrap(Throwable,String,Object) : RuntimeException" num="95" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="wrap(Throwable) : RuntimeException" num="105" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="wraptesterror(Throwable,String,Object) : RuntimeException" num="109" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="composeMessage(String,Object) : String" num="114" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="115" type="cond"/>
            <line num="116" count="0" type="stmt"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fail() : IllegalStateException" num="120" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit/core/utils/StringUtils.java" name="StringUtils.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="71" coveredmethods="0" methods="6" elements="12" classes="2" ncloc="40" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="StringUtils">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="12" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="StringUtils.Formatter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="join(String,Formatter&lt;T&gt;,T) : String" num="23" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="join(String,Object) : String" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="join(String,List&lt;?&gt;) : String" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="appendLine(StringBuilder,int,String) : void" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="indent(int) : String" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="newLine() : String" num="58" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit/core/utils/Utils.java" name="Utils.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="61" coveredmethods="0" methods="4" elements="21" classes="1" ncloc="36" statements="17" conditionals="0" coveredstatements="0"/>
            <class name="Utils">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="21" statements="17" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="concatenate(T[],T[]) : T[]" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="concatenate(List&lt;T&gt;,T) : List&lt;T&gt;" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sort(List&lt;E&gt;,Comparator&lt;? super E&gt;) : List&lt;E&gt;" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toMap(List&lt;V&gt;,Function&lt;V, K&gt;) : Map&lt;K, V&gt;" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit/core/utils/ProcessStreamerUtils.java" name="ProcessStreamerUtils.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="12" loc="103" coveredmethods="0" methods="11" elements="30" classes="2" ncloc="86" statements="17" conditionals="2" coveredstatements="0"/>
            <class name="ProcessStreamerUtils">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="7" elements="21" statements="12" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="ProcessStreamerUtils.StandardChecker">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="createStreamChecker(String) : Checker.StreamChecker" num="28" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getAsBoolean() : boolean" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="accept(String) : void" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="44" type="cond"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="streamFile(File) : Stream&lt;String&gt;" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="processStreamer(String,Checker) : ProcessStreamer" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="writeTo(File,String) : void" num="72" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="StandardChecker(String)" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="forStdOut() : StreamChecker" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="forStdErr() : StreamChecker" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="exitCodeChecker() : Predicate&lt;Integer&gt;" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit.exceptions">
         <metrics coveredelements="0" complexity="6" loc="40" methods="4" classes="2" statements="8" coveredconditionals="0" coveredmethods="0" elements="16" ncloc="21" files="2" conditionals="4" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit/exceptions/InvalidTestException.java" name="InvalidTestException.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="15" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="9" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="InvalidTestException">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="InvalidTestException(String,Throwable)" num="8" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="InvalidTestException(String)" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit/exceptions/JCUnitException.java" name="JCUnitException.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="25" coveredmethods="0" methods="2" elements="12" classes="1" ncloc="12" statements="6" conditionals="4" coveredstatements="0"/>
            <class name="JCUnitException">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="2" elements="12" statements="6" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="JCUnitException(String,Throwable)" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="formatMessage(String,Throwable) : String" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line num="21" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="21" type="cond"/>
            <line num="22" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="22" type="cond"/>
            <line num="23" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit.fsm">
         <metrics coveredelements="0" complexity="99" loc="967" methods="79" classes="17" statements="191" coveredconditionals="0" coveredmethods="0" elements="294" ncloc="673" files="10" conditionals="24" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit/fsm/Action.java" name="Action.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="157" coveredmethods="0" methods="10" elements="38" classes="2" ncloc="97" statements="26" conditionals="2" coveredstatements="0"/>
            <class name="Action">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Action.Base">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="10" elements="38" statements="26" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Base(Method,Parameters)" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="perform(SUT,Args) : Object" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parameters() : Parameters" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numParameterFactors() : int" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="id() : String" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="119" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="124" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="equals(Object) : boolean" num="129" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="131" type="cond"/>
            <line num="132" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="chooseMethod(Class&lt;?&gt;,String) : Method" num="139" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParameterTypes() : List&lt;Class&lt;?&gt;&gt;" num="152" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit/fsm/Args.java" name="Args.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="48" coveredmethods="0" methods="6" elements="15" classes="1" ncloc="38" statements="7" conditionals="2" coveredstatements="0"/>
            <class name="Args">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="6" elements="15" statements="7" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Args(Object[])" num="18" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="values() : Object[]" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="types() : Type[]" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="33" type="cond"/>
            <line complexity="1" visibility="public" signature="containsVoid() : boolean" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit/fsm/Expectation.java" name="Expectation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="123" coveredmethods="0" methods="12" elements="48" classes="2" ncloc="91" statements="34" conditionals="2" coveredstatements="0"/>
            <class name="Expectation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="11" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Expectation.Builder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="9" elements="37" statements="26" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="Expectation(String,OutputType,State&lt;SUT&gt;,OutputChecker)" num="31" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getType() : OutputType" num="45" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="Builder(String,FiniteStateMachine&lt;SUT&gt;)" num="61" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invalid(FsmSpec&lt;SUT&gt;) : Builder&lt;SUT&gt;" num="69" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="invalid(FsmSpec&lt;SUT&gt;,Class&lt;? extends Throwable&gt;) : Builder&lt;SUT&gt;" num="73" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="valid(FsmSpec&lt;SUT&gt;) : Builder&lt;SUT&gt;" num="81" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="valid(FsmSpec&lt;SUT&gt;,Object) : Builder&lt;SUT&gt;" num="85" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="valid(FsmSpec&lt;SUT&gt;,Matcher) : Builder&lt;SUT&gt;" num="89" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="valid(FsmSpec&lt;SUT&gt;,OutputChecker) : Builder&lt;SUT&gt;" num="94" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="chooseState(StateChecker&lt;SUT&gt;) : State&lt;SUT&gt;" num="103" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : Expectation&lt;SUT&gt;" num="114" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit/fsm/FiniteStateMachine.java" name="FiniteStateMachine.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="25" loc="227" coveredmethods="0" methods="16" elements="100" classes="2" ncloc="180" statements="70" conditionals="14" coveredstatements="0"/>
            <class name="FiniteStateMachine">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="FiniteStateMachine.Impl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="24" coveredmethods="0" methods="15" elements="98" statements="69" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="create(String,Class&lt;? extends FsmSpec&lt;SUT&gt;&gt;) : FiniteStateMachine&lt;SUT&gt;" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="Impl(String,Class&lt;? extends FsmSpec&lt;SUT&gt;&gt;)" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line num="72" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="80" type="cond"/>
            <line num="81" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="initialState() : State&lt;SUT&gt;" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="states() : List&lt;State&lt;SUT&gt;&gt;" num="97" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="actions() : List&lt;Action&lt;SUT&gt;&gt;" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getStateFields(Class&lt;? extends FsmSpec&lt;SUT&gt;&gt;) : List&lt;Field&gt;" num="107" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="getParamsFields(Class&lt;? extends FsmSpec&lt;SUT&gt;&gt;) : List&lt;Field&gt;" num="117" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="120" type="cond"/>
            <line num="121" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isAlreadyAddedIn(Field,List&lt;Field&gt;) : boolean" num="126" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getActionMethods(Class&lt;? extends FsmSpec&lt;SUT&gt;&gt;) : List&lt;Method&gt;" num="130" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="createAction(Method,Field) : Action&lt;SUT&gt;" num="143" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line num="147" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getParamsFactors(Field) : Parameters" num="159" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="validateParamsField(Field) : Field" num="180" count="0" type="method"/>
            <line num="181" count="0" type="stmt"/>
            <line num="182" count="0" type="stmt"/>
            <line num="183" count="0" type="stmt"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="createState(String,FiniteStateMachine&lt;SUT&gt;,Field,Map&lt;String, Method&gt;) : State&lt;SUT&gt;" num="191" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getStateSpecValue(Field) : FsmSpec&lt;SUT&gt;" num="196" count="0" type="method"/>
            <line num="198" count="0" type="stmt"/>
            <line num="199" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="validateStateSpecField(Field) : Field" num="205" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="generateMethodId(Method) : String" num="216" count="0" type="method"/>
            <line num="217" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit/fsm/OutputChecker.java" name="OutputChecker.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="40" coveredmethods="0" methods="3" elements="7" classes="3" ncloc="23" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="OutputChecker">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="OutputChecker.Base">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="OutputChecker.MatcherBased">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Base(OutputType)" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getType() : OutputType" num="20" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="MatcherBased(OutputType,Matcher)" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit/fsm/OutputType.java" name="OutputType.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="109" coveredmethods="0" methods="13" elements="27" classes="1" ncloc="75" statements="14" conditionals="0" coveredstatements="0"/>
            <class name="OutputType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="13" elements="27" statements="14" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="entityType() : String" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnedValueMatcher(Predicate&lt;Object&gt;) : Matcher&lt;Object&gt;" num="27" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="thrownExceptionMatcher(Predicate&lt;Throwable&gt;) : Matcher&lt;Throwable&gt;" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeTo(Description) : void" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="matches(Object) : boolean" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="entityType() : String" num="58" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="returnedValueMatcher(Predicate&lt;Object&gt;) : Matcher&lt;Object&gt;" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeTo(Description) : void" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="matches(Object) : boolean" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="thrownExceptionMatcher(Predicate&lt;Throwable&gt;) : Matcher&lt;Throwable&gt;" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="OutputType(String)" num="85" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeExpectation(Object) : String" num="96" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit/fsm/Parameters.java" name="Parameters.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="79" coveredmethods="0" methods="11" elements="23" classes="2" ncloc="62" statements="12" conditionals="0" coveredstatements="0"/>
            <class name="Parameters">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Parameters.Builder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="15" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="values() : List&lt;List&gt;" num="12" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="17" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : Factor" num="22" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;Factor&gt;" num="27" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Builder(String)" num="43" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="add(Object) : Builder" num="47" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : Parameters" num="55" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="iterator() : Iterator&lt;Factor&gt;" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="values() : List&lt;List&gt;" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : Factor" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit/fsm/Stage.java" name="Stage.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="8" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Stage">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit/fsm/State.java" name="State.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="139" coveredmethods="0" methods="8" elements="36" classes="2" ncloc="99" statements="24" conditionals="4" coveredstatements="0"/>
            <class name="State">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="State.Base">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="8" elements="36" statements="24" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Base(String,FiniteStateMachine&lt;SUT&gt;,FsmSpec&lt;SUT&gt;,Map&lt;String, Method&gt;,Field)" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="check(SUT) : boolean" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="expectation(Action&lt;SUT&gt;,Args) : Expectation&lt;SUT&gt;" num="65" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="buildExpectation(Method,Args) : Expectation&lt;SUT&gt;" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="spec() : SPEC" num="110" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hashCode() : int" num="116" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="equals(Object) : boolean" num="121" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="toString() : String" num="130" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="133" type="cond"/>
            <line num="134" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit/fsm/StateChecker.java" name="StateChecker.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="37" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="StateChecker">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.runners.junit4.annotations">
         <metrics coveredelements="0" complexity="17" loc="254" methods="9" classes="10" statements="26" coveredconditionals="0" coveredmethods="0" elements="51" ncloc="163" files="7" conditionals="16" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/runners/junit4/annotations/AfterTestCase.java" name="AfterTestCase.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="8" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="AfterTestCase">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/runners/junit4/annotations/BeforeTestCase.java" name="BeforeTestCase.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="8" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="BeforeTestCase">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/runners/junit4/annotations/Condition.java" name="Condition.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="87" coveredmethods="0" methods="1" elements="16" classes="2" ncloc="42" statements="9" conditionals="6" coveredstatements="0"/>
            <class name="Condition">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Condition.Validator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="1" elements="16" statements="9" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="4" visibility="public" signature="validateAnnotatedMethod(FrameworkMethod) : List&lt;Exception&gt;" num="31" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="35" type="cond"/>
            <line num="36" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="40" type="cond"/>
            <line num="41" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/runners/junit4/annotations/ConfigureWith.java" name="ConfigureWith.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="46" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="26" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="ConfigureWith">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="annotationType() : Class&lt;? extends Annotation&gt;" num="16" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="value() : Class&lt;? extends ConfigFactory&gt;" num="21" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parameterSpace() : Class&lt;?&gt;" num="26" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/runners/junit4/annotations/From.java" name="From.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="14" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="From">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/runners/junit4/annotations/Given.java" name="Given.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="56" coveredmethods="0" methods="3" elements="14" classes="2" ncloc="41" statements="7" conditionals="4" coveredstatements="0"/>
            <class name="Given">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Given.Validator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="3" elements="14" statements="7" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="validateAnnotatedMethod(FrameworkMethod) : List&lt;Exception&gt;" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="validate(Given,TestClass) : List&lt;Exception&gt;" num="39" count="0" type="method"/>
            <line complexity="3" visibility="package" signature="&lt;init&gt;, line 40()" num="40" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="44" type="cond"/>
            <line num="45" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="47" type="cond"/>
            <line num="49" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/runners/junit4/annotations/ParameterSource.java" name="ParameterSource.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="35" coveredmethods="0" methods="2" elements="15" classes="2" ncloc="32" statements="7" conditionals="6" coveredstatements="0"/>
            <class name="ParameterSource">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ParameterSource.Validator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="2" elements="15" statements="7" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="validateAnnotatedMethod(FrameworkMethod) : List&lt;Exception&gt;" num="16" count="0" type="method"/>
            <line complexity="4" visibility="package" signature="&lt;init&gt;, line 17()" num="17" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line num="18" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="18" type="cond"/>
            <line num="19" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="22" type="cond"/>
            <line num="23" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="27" type="cond"/>
            <line num="28" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.pipeline">
         <metrics coveredelements="0" complexity="43" loc="463" methods="36" classes="8" statements="72" coveredconditionals="0" coveredmethods="0" elements="120" ncloc="373" files="4" conditionals="12" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/pipeline/Config.java" name="Config.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="159" coveredmethods="0" methods="13" elements="36" classes="3" ncloc="127" statements="23" conditionals="0" coveredstatements="0"/>
            <class name="Config">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Config.Builder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="18" statements="12" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Config.Impl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="18" statements="11" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="forTuple(Requirement) : Builder" num="45" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Builder(Requirement)" num="49" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="withGeneratorFactory(Generator.Factory) : Builder" num="56" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="withJoiner(Joiner) : Builder" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="withPartitioner(Partitioner) : Builder" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : Config" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Impl(Requirement,Generator.Factory,Joiner,Partitioner)" num="83" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="encoder() : Function&lt;ParameterSpace, FactorSpace&gt;" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="partitioner() : Function&lt;FactorSpace, List&lt;FactorSpace&gt;&gt;" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="generator(ParameterSpace,Requirement) : Function&lt;FactorSpace, SchemafulTupleSet&gt;" num="101" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="joiner() : BinaryOperator&lt;SchemafulTupleSet&gt;" num="119" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRequirement() : Requirement" num="124" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="optimizer() : Function&lt;? super FactorSpace, ? extends FactorSpace&gt;" num="133" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/pipeline/Pipeline.java" name="Pipeline.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="20" loc="204" coveredmethods="0" methods="13" elements="59" classes="2" ncloc="166" statements="34" conditionals="12" coveredstatements="0"/>
            <class name="Pipeline">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Pipeline.Standard">
               <metrics coveredelements="0" coveredconditionals="0" complexity="20" coveredmethods="0" methods="13" elements="59" statements="34" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="execute(Config,ParameterSpace,TestScenario) : TestSuite" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="generateTestSuite(Config,ParameterSpace,TestScenario) : TestSuite" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="validateSeeds(List&lt;Tuple&gt;,ParameterSpace) : void" num="58" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 62()" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="69" type="cond"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 71()" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="preprocess(Config,ParameterSpace) : ParameterSpace" num="94" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="engine(Config,ParameterSpace) : SchemafulTupleSet" num="108" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="toFactorSpaceForNegativeTestGeneration(ParameterSpace) : FactorSpace" num="139" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="negativeTestGenerator(boolean,FactorSpace,List&lt;Tuple&gt;,List&lt;Tuple&gt;,Requirement) : Generator" num="155" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="156" type="cond"/>
            <line complexity="3" visibility="private" signature="toSimpleParameterIfNecessary(Config,Parameter,List&lt;Constraint&gt;) : Parameter" num="161" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="164" count="0" type="stmt"/>
            <line num="174" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isInvolvedByAnyConstraint(Parameter&lt;?&gt;,List&lt;Constraint&gt;) : boolean" num="192" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isReferencedBy(Parameter,List&lt;Constraint&gt;) : boolean" num="196" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create() : Pipeline" num="200" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/pipeline/PipelineException.java" name="PipelineException.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="42" coveredmethods="0" methods="3" elements="8" classes="1" ncloc="36" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="PipelineException">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="PipelineException(String)" num="17" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="checkIfStrengthIsInRange(int,List&lt;String&gt;) : void" num="21" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="checkIfNoNonSimpleParameterIsInvolvedByAnyConstraint(ParameterSpace) : void" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/pipeline/Requirement.java" name="Requirement.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="58" coveredmethods="0" methods="7" elements="17" classes="2" ncloc="44" statements="10" conditionals="0" coveredstatements="0"/>
            <class name="Requirement">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Requirement.Builder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="17" statements="10" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="withStrength(int) : Builder" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="withNegativeTestGeneration(boolean) : Builder" num="28" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addSeed(Tuple) : Builder" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : Requirement" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="strength() : int" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="generateNegativeTests() : boolean" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="seeds() : List&lt;Tuple&gt;" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.pipeline.stages">
         <metrics coveredelements="0" complexity="89" loc="678" methods="55" classes="19" statements="206" coveredconditionals="0" coveredmethods="0" elements="323" ncloc="576" files="5" conditionals="62" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/pipeline/stages/ConfigFactory.java" name="ConfigFactory.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="40" coveredmethods="0" methods="5" elements="10" classes="3" ncloc="31" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="ConfigFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ConfigFactory.Base">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ConfigFactory.Default">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="requirement() : Requirement" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create() : Config" num="14" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="generatorFactory() : Generator.Factory" num="21" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="defaultValues() : Requirement.Builder" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="defineRequirement(Requirement.Builder) : Requirement" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/pipeline/stages/Encoder.java" name="Encoder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="49" coveredmethods="0" methods="2" elements="8" classes="2" ncloc="38" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="Encoder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Encoder.Standard">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="8" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="apply(ParameterSpace) : FactorSpace" num="20" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="streamParameters(ParameterSpace) : Stream&lt;Parameter&gt;" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/pipeline/stages/Generator.java" name="Generator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="66" coveredmethods="0" methods="6" elements="21" classes="4" ncloc="53" statements="11" conditionals="4" coveredstatements="0"/>
            <class name="Generator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Generator.Base">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="3" elements="11" statements="6" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="Generator.Factory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Generator.Factory.Standard">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="1" elements="6" statements="3" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="toString() : String" num="17" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="23" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="Base(FactorSpace,Requirement)" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="generate() : List&lt;Tuple&gt;" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="42" type="cond"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="validate() : void" num="47" count="0" type="method"/>
            <line complexity="2" visibility="public" signature="create(FactorSpace,Requirement,List&lt;Tuple&gt;) : Generator" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/pipeline/stages/Joiner.java" name="Joiner.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="53" loc="370" coveredmethods="0" methods="28" elements="200" classes="7" ncloc="322" statements="128" conditionals="44" coveredstatements="0"/>
            <class name="Joiner">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Joiner.Base">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="5" elements="20" statements="11" conditionals="4" coveredstatements="0"/>
            </class>
            <class name="Joiner.Standard">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="4" elements="36" statements="24" conditionals="8" coveredstatements="0"/>
            </class>
            <class name="Joiner.Standard.Session">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="2" elements="36" statements="22" conditionals="12" coveredstatements="0"/>
            </class>
            <class name="Joiner.WeakenProduct">
               <metrics coveredelements="0" coveredconditionals="0" complexity="16" coveredmethods="0" methods="8" elements="58" statements="38" conditionals="12" coveredstatements="0"/>
            </class>
            <class name="Joiner.WeakenProduct2">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="5" elements="27" statements="18" conditionals="4" coveredstatements="0"/>
            </class>
            <class name="Joiner.JoinerUtils">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="4" elements="23" statements="15" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="Base(Requirement)" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="apply(SchemafulTupleSet,SchemafulTupleSet) : SchemafulTupleSet" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="36" type="cond"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="38" type="cond"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="emptyTupleSet(SchemafulTupleSet,SchemafulTupleSet) : SchemafulTupleSet" num="43" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 44()" num="44" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="requirement() : Requirement" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Standard(Requirement)" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="4" visibility="protected" signature="doJoin(SchemafulTupleSet,SchemafulTupleSet) : SchemafulTupleSet" num="63" count="0" type="method"/>
            <line complexity="4" visibility="private" signature="findBestCombinationFor(Tuple,List&lt;Tuple&gt;,TupleSet) : Optional&lt;Tuple&gt;" num="81" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line num="94" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="98" type="cond"/>
            <line complexity="4" visibility="private" signature="findBestRhsFor(Tuple,List&lt;Tuple&gt;,List&lt;Tuple&gt;,TupleSet) : Optional&lt;Tuple&gt;" num="103" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="107" type="cond"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="113" type="cond"/>
            <line num="114" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="118" type="cond"/>
            <line num="124" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="135" type="cond"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="137" type="cond"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line num="144" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="148" type="cond"/>
            <line num="149" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="findCoveringTuplesIn(Tuple,SchemafulTupleSet) : List&lt;Tuple&gt;" num="175" count="0" type="method"/>
            <line num="176" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="computeTuplesToBeCovered(SchemafulTupleSet,SchemafulTupleSet,int) : TupleSet" num="185" count="0" type="method"/>
            <line num="186" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="187" type="cond"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line num="190" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="WeakenProduct(Requirement)" num="198" count="0" type="method"/>
            <line num="199" count="0" type="stmt"/>
            <line complexity="4" visibility="protected" signature="doJoin(SchemafulTupleSet,SchemafulTupleSet) : SchemafulTupleSet" num="202" count="0" type="method"/>
            <line num="204" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="204" type="cond"/>
            <line num="205" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 207()" num="207" count="0" type="method"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="215" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="221" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="221" type="cond"/>
            <line num="222" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="226" count="0" type="stmt"/>
            <line num="230" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="addConnectedTuples(LinkedHashSet&lt;Tuple&gt;,SchemafulTupleSet,SchemafulTupleSet) : void" num="237" count="0" type="method"/>
            <line num="238" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="ensureLeftoversArePresent(LinkedHashSet&lt;Tuple&gt;,Set&lt;Tuple&gt;,Set&lt;Tuple&gt;,Tuple,Tuple) : void" num="244" count="0" type="method"/>
            <line num="249" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="249" type="cond"/>
            <line num="250" count="0" type="stmt"/>
            <line num="252" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="252" type="cond"/>
            <line num="253" count="0" type="stmt"/>
            <line num="257" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="ensureLeftoversArePresent_(LinkedHashSet&lt;Tuple&gt;,Set&lt;Tuple&gt;,Set&lt;Tuple&gt;,Tuple) : void" num="262" count="0" type="method"/>
            <line num="266" count="0" type="stmt"/>
            <line num="267" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 268()" num="268" count="0" type="method"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 271()" num="271" count="0" type="method"/>
            <line num="271" count="0" type="stmt"/>
            <line num="272" count="0" type="stmt"/>
            <line num="274" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="274" type="cond"/>
            <line num="275" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="275" type="cond"/>
            <line num="276" count="0" type="stmt"/>
            <line num="278" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="WeakenProduct2(Requirement)" num="287" count="0" type="method"/>
            <line num="288" count="0" type="stmt"/>
            <line num="289" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="addConnectedTuples(LinkedHashSet&lt;Tuple&gt;,SchemafulTupleSet,SchemafulTupleSet) : void" num="292" count="0" type="method"/>
            <line num="293" count="0" type="stmt"/>
            <line num="294" count="0" type="stmt"/>
            <line num="295" count="0" type="stmt"/>
            <line num="296" count="0" type="stmt"/>
            <line num="297" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="297" type="cond"/>
            <line num="298" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="crossingTuplets(Tuple,Tuple,int) : Collection&lt;? extends Tuple&gt;" num="303" count="0" type="method"/>
            <line num="304" count="0" type="stmt"/>
            <line num="305" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="composeColumnSelections(int,List&lt;String&gt;,List&lt;String&gt;) : Set&lt;List&lt;String&gt;&gt;" num="314" count="0" type="method"/>
            <line num="315" count="0" type="stmt"/>
            <line num="316" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="316" type="cond"/>
            <line num="317" count="0" type="stmt"/>
            <line num="319" count="0" type="stmt"/>
            <line num="320" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 324()" num="324" count="0" type="method"/>
            <line num="325" count="0" type="stmt"/>
            <line num="326" count="0" type="stmt"/>
            <line num="330" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="connect(Tuple,Tuple) : Tuple" num="337" count="0" type="method"/>
            <line num="338" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="weakenTo(SchemafulTupleSet,int,Function&lt;SchemafulTupleSet, Function&lt;Integer, Set&lt;Tuple&gt;&gt;&gt;) : SchemafulTupleSet" num="341" count="0" type="method"/>
            <line num="342" count="0" type="stmt"/>
            <line num="343" count="0" type="stmt"/>
            <line num="344" count="0" type="stmt"/>
            <line num="345" count="0" type="stmt"/>
            <line num="346" count="0" type="stmt"/>
            <line num="347" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="347" type="cond"/>
            <line num="348" count="0" type="stmt"/>
            <line num="349" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="349" type="cond"/>
            <line num="350" count="0" type="stmt"/>
            <line num="352" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="tupletsCoveredBy(SchemafulTupleSet,int) : Set&lt;Tuple&gt;" num="355" count="0" type="method"/>
            <line num="356" count="0" type="stmt"/>
            <line num="357" count="0" type="stmt"/>
            <line num="358" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="cartesianProduct(List&lt;Tuple&gt;,List&lt;Tuple&gt;) : List&lt;Tuple&gt;" num="361" count="0" type="method"/>
            <line num="362" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/pipeline/stages/Partitioner.java" name="Partitioner.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="21" loc="153" coveredmethods="0" methods="14" elements="84" classes="3" ncloc="132" statements="56" conditionals="14" coveredstatements="0"/>
            <class name="Partitioner">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Partitioner.Standard">
               <metrics coveredelements="0" coveredconditionals="0" complexity="17" coveredmethods="0" methods="10" elements="72" statements="48" conditionals="14" coveredstatements="0"/>
            </class>
            <class name="Partitioner.ConnectedConstraintFinder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="12" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Standard(Requirement)" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="apply(FactorSpace) : List&lt;FactorSpace&gt;" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="37" type="cond"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 39()" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="51" type="cond"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="pack(int,List&lt;FactorSpace&gt;) : List&lt;FactorSpace&gt;" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="75" type="cond"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 77()" num="77" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="81" type="cond"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="85" type="cond"/>
            <line num="86" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="add(FactorSpace,FactorSpace) : FactorSpace" num="96" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 98()" num="98" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 102()" num="102" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="findConnectedConstraints(Constraint,List&lt;Constraint&gt;) : List&lt;Constraint&gt;" num="109" count="0" type="method"/>
            <line falsecount="0" truecount="0" num="110" type="cond"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line num="113" count="0" type="stmt"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="findDirectlyConnectedConstraints(Constraint,List&lt;Constraint&gt;) : List&lt;Constraint&gt;" num="118" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="121" type="cond"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ConnectedConstraintFinder(List&lt;Constraint&gt;)" num="134" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="find(Constraint) : List&lt;Constraint&gt;" num="138" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 139()" num="139" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="findAll(List&lt;Constraint&gt;) : List&lt;Constraint&gt;" num="144" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit.fsm.spec">
         <metrics coveredelements="0" complexity="0" loc="62" methods="0" classes="5" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="38" files="5" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit/fsm/spec/ActionSpec.java" name="ActionSpec.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="14" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="11" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ActionSpec">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit/fsm/spec/Alias.java" name="Alias.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="17" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Alias">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit/fsm/spec/FsmSpec.java" name="FsmSpec.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="14" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FsmSpec">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit/fsm/spec/ParametersSpec.java" name="ParametersSpec.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="8" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ParametersSpec">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit/fsm/spec/StateSpec.java" name="StateSpec.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="9" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="7" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="StateSpec">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.exceptions">
         <metrics coveredelements="0" complexity="30" loc="139" methods="24" classes="3" statements="36" coveredconditionals="0" coveredmethods="0" elements="72" ncloc="104" files="3" conditionals="12" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/exceptions/BaseException.java" name="BaseException.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="11" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="9" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="BaseException">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="BaseException(String)" num="4" count="0" type="method"/>
            <line num="5" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="BaseException(String,Throwable)" num="8" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/exceptions/FrameworkException.java" name="FrameworkException.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="60" coveredmethods="0" methods="10" elements="39" classes="1" ncloc="46" statements="19" conditionals="10" coveredstatements="0"/>
            <class name="FrameworkException">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="10" elements="39" statements="19" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="FrameworkException(String)" num="11" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="FrameworkException(String,Throwable)" num="15" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="checkCondition(boolean,Function&lt;String, ? extends FrameworkException&gt;,Supplier&lt;String&gt;) : void" num="19" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="21" type="cond"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="check(T,Predicate&lt;T&gt;) : T" num="25" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="26" type="cond"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="check(T,Predicate&lt;T&gt;,Supplier&lt;String&gt;) : T" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="32" type="cond"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="checkCondition(boolean,Function&lt;String, ? extends FrameworkException&gt;) : void" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="checkCondition(boolean) : void" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unexpectedByDesign() : FrameworkException" num="45" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="unexpectedByDesign(Throwable) : FrameworkException" num="49" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="52" type="cond"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unexpectedByDesign(String) : FrameworkException" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/exceptions/TestDefinitionException.java" name="TestDefinitionException.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="68" coveredmethods="0" methods="12" elements="29" classes="1" ncloc="49" statements="15" conditionals="2" coveredstatements="0"/>
            <class name="TestDefinitionException">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="12" elements="29" statements="15" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="TestDefinitionException(String)" num="17" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="TestDefinitionException(String,Throwable)" num="21" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="wrap(Throwable) : TestDefinitionException" num="25" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="impossibleConstraint(List&lt;Constraint&gt;) : TestDefinitionException" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="fsmDoesNotHaveRouteToSpecifiedState(Object,String,Object) : TestDefinitionException" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="failedToCover(String,List&lt;Object&gt;,Tuple) : TestDefinitionException" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="checkValue(T,Predicate&lt;T&gt;) : T" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="checkValue(T,Predicate&lt;T&gt;,Supplier&lt;String&gt;) : T" num="45" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="46" type="cond"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="checkValue(T,Predicate&lt;T&gt;,String,Object) : T" num="51" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sutDoesNotHaveSpecifiedMethod(Class&lt;?&gt;,String,List) : Supplier&lt;TestDefinitionException&gt;" num="55" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parameterWithoutAnnotation(String) : TestDefinitionException" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="noParameterFound() : TestDefinitionException" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.runners.core">
         <metrics coveredelements="0" complexity="62" loc="398" methods="44" classes="15" statements="80" coveredconditionals="0" coveredmethods="0" elements="158" ncloc="333" files="2" conditionals="34" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/runners/core/Node.java" name="Node.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="20" loc="145" coveredmethods="0" methods="18" elements="41" classes="13" ncloc="114" statements="19" conditionals="4" coveredstatements="0"/>
            <class name="Node">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Node.Visitor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Node.Visitor.Base">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Node.Leaf">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Node.Leaf.Impl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="6" elements="17" statements="7" conditionals="4" coveredstatements="0"/>
            </class>
            <class name="Node.Not">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Node.Not.Impl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Node.Internal">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Node.Internal.Base">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Node.And">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Node.And.Impl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Node.Or">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Node.Or.Impl">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="visitAnd(And) : void" num="20" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitOr(Or) : void" num="25" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitNot(Not) : void" num="30" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="Impl(String)" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="id() : String" num="51" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="args() : String[]" num="56" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(Visitor) : void" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="head(String) : String" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="67" type="cond"/>
            <line complexity="2" visibility="private" signature="tail(String) : String[]" num="72" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="73" type="cond"/>
            <line complexity="1" visibility="public" signature="Impl(Node)" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(Visitor) : void" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="target() : Node" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="Base(List&lt;Node&gt;)" num="109" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="children() : List&lt;Node&gt;" num="113" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="Impl(List&lt;Node&gt;)" num="122" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(Visitor) : void" num="126" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="Impl(List&lt;Node&gt;)" num="135" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="accept(Visitor) : void" num="139" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/main/java/com/github/dakusui/jcunit8/runners/core/NodeUtils.java" name="NodeUtils.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="42" loc="253" coveredmethods="0" methods="26" elements="117" classes="2" ncloc="219" statements="61" conditionals="30" coveredstatements="0"/>
            <class name="NodeUtils">
               <metrics coveredelements="0" coveredconditionals="0" complexity="28" coveredmethods="0" methods="18" elements="72" statements="36" conditionals="18" coveredstatements="0"/>
            </class>
            <class name="NodeUtils.Builder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="8" elements="45" statements="25" conditionals="12" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="buildPredicate(String[],SortedMap&lt;String, TestPredicate&gt;) : TestPredicate" num="28" count="0" type="method"/>
            <line complexity="2" visibility="public" signature="visitLeaf(Node.Leaf) : void" num="34" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="39" type="cond"/>
            <line num="40" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="appendArgs(Tuple,Node.Leaf) : Tuple" num="45" count="0" type="method"/>
            <line complexity="2" visibility="package" signature="&lt;init&gt;, line 46()" num="46" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="48" type="cond"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="expandFactorValueIfNecessary(Tuple,String) : Object" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="55" type="cond"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitAnd(Node.And) : void" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="visitOr(Node.Or) : void" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="78" type="cond"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitNot(Node.Not) : void" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="lookupTestPredicate(String) : Optional&lt;TestPredicate&gt;" num="90" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="91" type="cond"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="allLeaves(String[]) : List&lt;String&gt;" num="105" count="0" type="method"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 107()" num="107" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visitLeaf(Node.Leaf) : void" num="110" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="allTestPredicates(TestClass) : SortedMap&lt;String, TestPredicate&gt;" num="119" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="127" type="cond"/>
            <line complexity="3" visibility="private" signature="getParameterSpaceDefinitionClass(TestClass) : Class" num="141" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="143" type="cond"/>
            <line num="146" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="146" type="cond"/>
            <line complexity="1" visibility="private" signature="streamTestPredicatesIn(Class) : Stream&lt;TestPredicate&gt;" num="151" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="createTestPredicate(Object,FrameworkMethod) : TestPredicate" num="160" count="0" type="method"/>
            <line num="161" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="171" type="cond"/>
            <line num="174" count="0" type="stmt"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="apply(String) : Object" num="182" count="0" type="method"/>
            <line num="184" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="184" type="cond"/>
            <line num="185" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="185" type="cond"/>
            <line num="188" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getArg() : Object" num="191" count="0" type="method"/>
            <line num="192" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="getVarArgs() : Object" num="195" count="0" type="method"/>
            <line num="197" count="0" type="stmt"/>
            <line num="198" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="198" type="cond"/>
            <line num="199" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="isVarArgs(int) : boolean" num="204" count="0" type="method"/>
            <line num="205" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="key(int) : String" num="208" count="0" type="method"/>
            <line num="209" count="0" type="stmt"/>
            <line num="214" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="217" type="cond"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="220" count="0" type="method"/>
            <line num="222" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Tuple) : boolean" num="225" count="0" type="method"/>
            <line num="227" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="involvedKeys() : List&lt;String&gt;" num="230" count="0" type="method"/>
            <line num="232" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parse(String[]) : Node" num="237" count="0" type="method"/>
            <line num="238" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="parseLine(String) : Node" num="243" count="0" type="method"/>
            <line num="244" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="246" type="cond"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.tests.components.regex">
         <metrics coveredelements="0" complexity="26" loc="269" methods="23" classes="5" statements="60" coveredconditionals="0" coveredmethods="0" elements="89" ncloc="222" files="3" conditionals="6" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/components/regex/ParserTest.java" name="ParserTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="12" loc="153" coveredmethods="0" methods="12" elements="35" classes="1" ncloc="124" statements="23" conditionals="0" coveredstatements="0"/>
            <class name="ParserTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="12" coveredmethods="0" methods="12" elements="35" statements="23" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="data() : String[]" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ParserTest(String)" num="73" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="before() : void" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parseTreePrintingWithId() : void" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parseTreePrintingWithName() : void" num="90" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="printGeneratedList() : void" num="96" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line num="104" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testInterpret() : void" num="115" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="input() : String" num="128" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="generatedStringsMatcher() : Matcher" num="132" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="possibleStrings(String) : Set&lt;String&gt;" num="140" count="0" type="method"/>
            <line num="141" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="143" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="expectationForGeneratedStrings() : String" num="146" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="expectationForTokenizedStrings() : String" num="150" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/components/regex/Printer.java" name="Printer.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="52" coveredmethods="0" methods="5" elements="27" classes="1" ncloc="44" statements="18" conditionals="4" coveredstatements="0"/>
            <class name="Printer">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="5" elements="27" statements="18" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Printer(PrintStream)" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="visit(Expr.Alt) : void" num="14" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line num="17" count="0" type="stmt"/>
            <line num="18" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
            <line num="20" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="20" type="cond"/>
            <line num="21" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="visit(Expr.Cat) : void" num="31" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="35" type="cond"/>
            <line num="36" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visit(Expr.Leaf) : void" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visit(Expr.Empty) : void" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/components/regex/RegexTestUtils.java" name="RegexTestUtils.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="64" coveredmethods="0" methods="6" elements="27" classes="3" ncloc="54" statements="19" conditionals="2" coveredstatements="0"/>
            <class name="RegexTestUtils">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="RegexTestUtils.ExprTreePrinter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="6" elements="27" statements="19" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="RegexTestUtils.ExprTreePrinter.InternalNodeFormatter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="ExprTreePrinter(InternalNodeFormatter)" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visit(Expr.Alt) : void" num="16" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
            <line num="20" count="0" type="stmt"/>
            <line num="21" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visit(Expr.Cat) : void" num="29" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visit(Expr.Leaf) : void" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="visit(Expr.Empty) : void" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="indentString() : String" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="54" type="cond"/>
            <line num="55" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.tests.usecases.parametersource">
         <metrics coveredelements="0" complexity="2" loc="32" methods="2" classes="2" statements="2" coveredconditionals="0" coveredmethods="0" elements="4" ncloc="26" files="2" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/usecases/parametersource/SeparatedParameterSource.java" name="SeparatedParameterSource.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="13" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="10" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="SeparatedParameterSource">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="a() : Parameter.Simple.Factory&lt;Integer&gt;" num="9" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/usecases/parametersource/SeparatedParameterSpaceExample.java" name="SeparatedParameterSpaceExample.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="19" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="16" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="SeparatedParameterSpaceExample">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test(int) : void" num="13" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.extras.generators">
         <metrics coveredelements="0" complexity="64" loc="678" methods="52" classes="8" statements="156" coveredconditionals="0" coveredmethods="0" elements="224" ncloc="442" files="5" conditionals="16" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/extras/generators/Acts.java" name="Acts.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="20" loc="198" coveredmethods="0" methods="15" elements="71" classes="2" ncloc="127" statements="50" conditionals="6" coveredstatements="0"/>
            <class name="Acts">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="9" elements="54" statements="39" conditionals="6" coveredstatements="0"/>
            </class>
            <class name="Acts.Builder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="17" statements="11" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="runActs(File,FactorSpace,int) : List&lt;Tuple&gt;" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="Acts(FactorSpace,int,File,String,String)" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="readTestSuiteFromCsv(Stream&lt;String&gt;) : List&lt;Tuple&gt;" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="60" type="cond"/>
            <line num="61" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="66" type="cond"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="outFile(File) : File" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="inFile(File) : File" num="78" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="actsJar() : String" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="generateWithActs(File,FactorSpace,int) : List&lt;Tuple&gt;" num="86" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="run() : List&lt;Tuple&gt;" num="90" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 120()" num="120" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : Acts" num="144" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="baseDir(File) : Builder" num="150" count="0" type="method"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="strength(int) : Builder" num="155" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="constraintHandler(String) : Builder" num="167" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="algorithm(String) : Builder" num="187" count="0" type="method"/>
            <line num="188" count="0" type="stmt"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="factorSpace(FactorSpace) : Builder" num="192" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line num="194" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/extras/generators/ActsGenerator.java" name="ActsGenerator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="19" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="15" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="ActsGenerator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="ActsGenerator(FactorSpace,Requirement)" num="11" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="generateCore() : List&lt;Tuple&gt;" num="15" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/extras/generators/ActsPredicate.java" name="ActsPredicate.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="8" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="5" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="ActsPredicate">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/extras/generators/ActsUtils.java" name="ActsUtils.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="40" loc="433" coveredmethods="0" methods="33" elements="145" classes="3" ncloc="280" statements="102" conditionals="10" coveredstatements="0"/>
            <class name="ActsUtils">
               <metrics coveredelements="0" coveredconditionals="0" complexity="32" coveredmethods="0" methods="25" elements="121" statements="86" conditionals="10" coveredstatements="0"/>
            </class>
            <class name="ActsUtils.FactorSpaceAdapter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="9" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ActsUtils.Comp">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="15" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="buildActsModel(FactorSpace,String) : String" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="FactorSpaceAdapter(Function&lt;Integer, String&gt;,Function&lt;Integer, String&gt;,Function&lt;Integer, Factor&gt;,Function&lt;Integer, Function&lt;Integer, Object&gt;&gt;,Function&lt;String, Integer&gt;,int)" num="56" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="FactorSpaceAdapter(FactorSpace)" num="72" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="renderParameters(StringBuilder,int,FactorSpaceAdapter) : void" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="86" type="cond"/>
            <line num="87" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="renderParameter(StringBuilder,int,int,FactorSpaceAdapter) : int" num="151" count="0" type="method"/>
            <line num="152" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="163" type="cond"/>
            <line num="164" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line num="167" count="0" type="stmt"/>
            <line num="168" count="0" type="stmt"/>
            <line num="169" count="0" type="stmt"/>
            <line num="170" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="renderConstraints(StringBuilder,int,FactorSpaceAdapter,List&lt;Constraint&gt;) : void" num="204" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="206" type="cond"/>
            <line num="207" count="0" type="stmt"/>
            <line num="208" count="0" type="stmt"/>
            <line num="209" count="0" type="stmt"/>
            <line num="210" count="0" type="stmt"/>
            <line num="211" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="211" type="cond"/>
            <line num="212" count="0" type="stmt"/>
            <line num="213" count="0" type="stmt"/>
            <line num="216" count="0" type="stmt"/>
            <line num="217" count="0" type="stmt"/>
            <line num="218" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line num="223" count="0" type="stmt"/>
            <line num="224" count="0" type="stmt"/>
            <line num="225" count="0" type="stmt"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createConstraint(List&lt;String&gt;) : NormalizedConstraint" num="256" count="0" type="method"/>
            <line num="257" count="0" type="stmt"/>
            <line num="258" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createConstraint(int) : Function&lt;List&lt;String&gt;, NormalizedConstraint&gt;" num="266" count="0" type="method"/>
            <line num="267" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="or(NormalizedConstraint) : NormalizedConstraint" num="270" count="0" type="method"/>
            <line num="271" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toText(Function&lt;String, String&gt;) : String" num="272" count="0" type="method"/>
            <line num="274" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="279" count="0" type="method"/>
            <line num="281" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="test(Tuple) : boolean" num="284" count="0" type="method"/>
            <line num="286" count="0" type="stmt"/>
            <line num="287" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="287" type="cond"/>
            <line num="288" count="0" type="stmt"/>
            <line num="290" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="involvedKeys() : List&lt;String&gt;" num="293" count="0" type="method"/>
            <line num="295" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="gt(String,String) : NormalizedConstraint" num="303" count="0" type="method"/>
            <line num="304" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="306" count="0" type="method"/>
            <line num="308" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="ge(String,String) : NormalizedConstraint" num="313" count="0" type="method"/>
            <line num="314" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toText(Function&lt;String, String&gt;) : String" num="315" count="0" type="method"/>
            <line num="319" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="322" count="0" type="method"/>
            <line num="324" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Tuple) : boolean" num="327" count="0" type="method"/>
            <line num="330" count="0" type="stmt"/>
            <line num="331" count="0" type="stmt"/>
            <line num="332" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="involvedKeys() : List&lt;String&gt;" num="335" count="0" type="method"/>
            <line num="337" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="eq(String,String) : NormalizedConstraint" num="342" count="0" type="method"/>
            <line num="343" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toText(Function&lt;String, String&gt;) : String" num="344" count="0" type="method"/>
            <line num="348" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="351" count="0" type="method"/>
            <line num="353" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Tuple) : boolean" num="356" count="0" type="method"/>
            <line num="359" count="0" type="stmt"/>
            <line num="360" count="0" type="stmt"/>
            <line num="361" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="involvedKeys() : List&lt;String&gt;" num="364" count="0" type="method"/>
            <line num="366" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="generateAndReport(File,int,int,int,Function&lt;List&lt;String&gt;, NormalizedConstraint&gt;) : void" num="372" count="0" type="method"/>
            <line num="374" count="0" type="stmt"/>
            <line num="375" count="0" type="stmt"/>
            <line num="376" count="0" type="stmt"/>
            <line num="377" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="generateWithActs(File,int,int,int,Function&lt;List&lt;String&gt;, NormalizedConstraint&gt;) : List&lt;Tuple&gt;" num="380" count="0" type="method"/>
            <line num="382" count="0" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line num="385" count="0" type="stmt"/>
            <line num="386" count="0" type="stmt"/>
            <line num="390" count="0" type="stmt"/>
            <line num="391" count="0" type="stmt"/>
            <line num="391" count="0" type="stmt"/>
            <line num="392" count="0" type="stmt"/>
            <line num="394" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Comp(String,String)" num="401" count="0" type="method"/>
            <line num="402" count="0" type="stmt"/>
            <line num="403" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toText(Function&lt;String, String&gt;) : String" num="406" count="0" type="method"/>
            <line num="410" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toText(String,String) : String" num="413" count="0" type="method"/>
            <line num="414" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Tuple) : boolean" num="417" count="0" type="method"/>
            <line num="419" count="0" type="stmt"/>
            <line num="420" count="0" type="stmt"/>
            <line num="421" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compare(Comparable,Comparable) : boolean" num="424" count="0" type="method"/>
            <line num="425" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="involvedKeys() : List&lt;String&gt;" num="428" count="0" type="method"/>
            <line num="430" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/extras/generators/MemoizingGenerator.java" name="MemoizingGenerator.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="20" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="15" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="MemoizingGenerator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="MemoizingGenerator(FactorSpace,Requirement)" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="generateCore() : List&lt;Tuple&gt;" num="16" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.sandbox">
         <metrics coveredelements="0" complexity="16" loc="135" methods="16" classes="2" statements="16" coveredconditionals="0" coveredmethods="0" elements="32" ncloc="116" files="2" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/sandbox/JCUnit8Example.java" name="JCUnit8Example.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="63" coveredmethods="0" methods="10" elements="20" classes="1" ncloc="52" statements="10" conditionals="0" coveredstatements="0"/>
            <class name="JCUnit8Example">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="10" elements="20" statements="10" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="aIsGreaterThanOrEqualTo$b(int,int) : boolean" num="14" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="beforeClass(TestSuite) : void" num="19" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="beforeTestCase(int,int,int) : void" num="24" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="before(int) : void" num="29" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="whenRunTest1$thenLooksGood(int,int,int) : void" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="whenRunTest2$thenLooksGood(int,int) : void" num="39" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="after(int,int) : void" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="afterTestCase(int,int) : void" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="afterClass(TestSuite) : void" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String) : void" num="60" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/sandbox/JCUnit8Test.java" name="JCUnit8Test.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="72" coveredmethods="0" methods="6" elements="12" classes="1" ncloc="64" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="JCUnit8Test">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="12" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="givenTestClass$whenBuildTestSuite$thenTestCasesBuilt() : void" num="24" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenTestClass$whenBuildTestSuite$thenConsumersRunBeforeTestOracleBuilt() : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="toList(Function&lt;I, List&lt;?&gt;&gt;) : Function&lt;I, List&lt;O&gt;&gt;" num="54" count="0" type="method"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 56()" num="56" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="buildTestSuite() : TestSuite" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="buildTestSuite(Class,Class) : TestSuite" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.tests.components.fsm">
         <metrics coveredelements="0" complexity="22" loc="162" methods="18" classes="7" statements="24" coveredconditionals="0" coveredmethods="0" elements="50" ncloc="140" files="4" conditionals="8" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/components/fsm/Turnstile.java" name="Turnstile.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="27" coveredmethods="0" methods="3" elements="14" classes="2" ncloc="23" statements="7" conditionals="4" coveredstatements="0"/>
            <class name="Turnstile">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="2" elements="12" statements="6" conditionals="4" coveredstatements="0"/>
            </class>
            <class name="Turnstile.Broken">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="coin() : void" num="6" count="0" type="method"/>
            <line num="8" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="8" type="cond"/>
            <line num="9" count="0" type="stmt"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="pass() : void" num="14" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="16" type="cond"/>
            <line num="17" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="coin() : void" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/components/fsm/TurnstileExamples.java" name="TurnstileExamples.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="56" coveredmethods="0" methods="6" elements="18" classes="3" ncloc="50" statements="8" conditionals="4" coveredstatements="0"/>
            <class name="TurnstileExamples">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TurnstileExamples.Normal">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="3" elements="9" statements="4" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="TurnstileExamples.Broken">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="3" elements="9" statements="4" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="turnstile() : Parameter.Factory" num="16" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="performScenario(Scenario&lt;Turnstile&gt;) : void" num="21" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="visit(Edge&lt;Turnstile&gt;) : void" num="26" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="28" type="cond"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="turnstile() : Parameter.Factory" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="performScenario(Scenario&lt;Turnstile&gt;) : void" num="42" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="visit(Edge&lt;Turnstile&gt;) : void" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="49" type="cond"/>
            <line num="50" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/components/fsm/TurnstileSpec.java" name="TurnstileSpec.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="42" coveredmethods="0" methods="6" elements="12" classes="1" ncloc="35" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="TurnstileSpec">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="12" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="coin(Expectation.Builder&lt;Turnstile&gt;) : Expectation&lt;Turnstile&gt;" num="10" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="check(Turnstile) : boolean" num="15" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="pass(Expectation.Builder&lt;Turnstile&gt;) : Expectation&lt;Turnstile&gt;" num="21" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="check(Turnstile) : boolean" num="27" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="coin(Expectation.Builder&lt;Turnstile&gt;) : Expectation&lt;Turnstile&gt;" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="pass(Expectation.Builder&lt;Turnstile&gt;) : Expectation&lt;Turnstile&gt;" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/components/fsm/TurnstileTest.java" name="TurnstileTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="37" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="32" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="TurnstileTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="before() : void" num="11" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenNormalTurnstile$whenPerform$thenAllPass() : void" num="16" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenBrokenTurnstile$whenPerform$thenAllFail() : void" num="27" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.testutils">
         <metrics coveredelements="0" complexity="95" loc="782" methods="87" classes="12" statements="133" coveredconditionals="0" coveredmethods="0" elements="232" ncloc="647" files="10" conditionals="12" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/testutils/CustomParameter.java" name="CustomParameter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="96" coveredmethods="0" methods="14" elements="30" classes="2" ncloc="78" statements="16" conditionals="0" coveredstatements="0"/>
            <class name="CustomParameter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="12" coveredmethods="0" methods="12" elements="25" statements="13" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CustomParameter.ValuePair">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CustomParameter(String,List&lt;String&gt;)" num="21" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="composeValue(Tuple) : ValuePair" num="26" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="decomposeValue(ValuePair) : Optional&lt;Tuple&gt;" num="31" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="decompose() : List&lt;Factor&gt;" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="composeKey(String) : String" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="getValue(Tuple,String) : String" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="generateConstraints() : List&lt;Constraint&gt;" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Tuple) : boolean" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="involvedKeys() : List&lt;String&gt;" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="ValuePair(String,String)" num="86" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/testutils/FactorSpaceUtils.java" name="FactorSpaceUtils.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="63" coveredmethods="0" methods="4" elements="12" classes="1" ncloc="55" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="FactorSpaceUtils">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="12" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="sizeOfFactorsIs(String,Predicate&lt;Integer&gt;) : TestOracle&lt;FactorSpace, Integer&gt;" num="15" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sizeOfConstraintsIs(String,Predicate&lt;Integer&gt;) : TestOracle&lt;FactorSpace, Integer&gt;" num="24" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="factorSatisfies(String,String,Predicate&lt;Factor&gt;) : TestOracle&lt;FactorSpace, Factor&gt;" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="validateFactorSpace(FactorSpace,Matcher&lt;FactorSpace&gt;) : void" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/testutils/JUnit4TestUtils.java" name="JUnit4TestUtils.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="85" coveredmethods="0" methods="14" elements="28" classes="1" ncloc="67" statements="14" conditionals="0" coveredstatements="0"/>
            <class name="JUnit4TestUtils">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="14" elements="28" statements="14" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="runClasses(Class&lt;?&gt;) : Result" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="toString(Result) : String" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="makePrintable(Result) : Result" num="30" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRunCount() : int" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFailureCount() : int" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRunTime() : long" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFailures() : List&lt;Failure&gt;" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getIgnoreCount() : int" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="wasSuccessful() : boolean" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="funcGetFailureCount() : Function&lt;Result, Integer&gt;" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="funcGetIgnoreCount() : Function&lt;Result, Integer&gt;" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="funcGetRunCount() : Function&lt;Result, Integer&gt;" num="78" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="funcWasSuccessful() : Function&lt;Result, Boolean&gt;" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/testutils/ParameterSpaceUtils.java" name="ParameterSpaceUtils.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="95" coveredmethods="0" methods="8" elements="20" classes="1" ncloc="83" statements="12" conditionals="0" coveredstatements="0"/>
            <class name="ParameterSpaceUtils">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="8" elements="20" statements="12" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="allKnownValuesOfParameterSatisfy(String,Predicate&lt;Object&gt;) : TestOracle&lt;ParameterSpace, List&lt;Object&gt;&gt;" num="18" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sizeOfParameterKnownValuesSatisfies(String,Predicate&lt;Integer&gt;) : TestOracle&lt;ParameterSpace, Integer&gt;" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="knownValuesOfParameterAre(String,Object) : Predicate&lt;ParameterSpace&gt;" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasConstraints(int) : TestOracle&lt;ParameterSpace, Integer&gt;" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hasParameters(int) : TestOracle&lt;ParameterSpace, Integer&gt;" num="52" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parametersAreAllInstancesOf(Class&lt;? extends Parameter&gt;) : TestOracle&lt;ParameterSpace, List&lt;Class&gt;&gt;" num="61" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parameterIsInstanceOf(String,Class&lt;? extends Parameter&gt;) : TestOracle&lt;ParameterSpace, Class&gt;" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="validateParameterSpace(ParameterSpace,Matcher&lt;ParameterSpace&gt;) : void" num="83" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line num="89" count="0" type="stmt"/>
            <line num="90" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/testutils/PipelineTestBase.java" name="PipelineTestBase.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="109" coveredmethods="0" methods="15" elements="31" classes="1" ncloc="90" statements="16" conditionals="0" coveredstatements="0"/>
            <class name="PipelineTestBase">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="15" elements="31" statements="16" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="generateTestSuite(Parameter) : TestSuite" num="18" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="generateTestSuite(List&lt;Parameter&gt;,List&lt;Constraint&gt;) : TestSuite" num="25" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="preprocess(Parameter) : ParameterSpace" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="preprocess(List&lt;Parameter&gt;,List&lt;Constraint&gt;) : ParameterSpace" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="engine(List&lt;Parameter&gt;,List&lt;Constraint&gt;) : SchemafulTupleSet" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="encode(List&lt;Parameter&gt;,List&lt;Constraint&gt;) : FactorSpace" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="partition(FactorSpace) : List&lt;FactorSpace&gt;" num="51" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="customParameterFactory() : Parameter.Factory&lt;CustomParameter.ValuePair&gt;" num="55" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="create(String) : Parameter&lt;CustomParameter.ValuePair&gt;" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="simpleParameterFactory(String) : Parameter.Factory&lt;String&gt;" num="64" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="simpleParameterFactoryWithDefaultValues() : Parameter.Factory&lt;String&gt;" num="68" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="buildConfig() : Config" num="72" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="requirement() : Requirement" num="79" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="buildSimpleFactorSpaceWithImpossibleConstraint() : FactorSpace" num="85" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="buildSimpleFactorSpaceWithoutConstraint() : FactorSpace" num="98" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/testutils/SchemafulTupleSetUtils.java" name="SchemafulTupleSetUtils.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="15" coveredmethods="0" methods="1" elements="4" classes="1" ncloc="12" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="SchemafulTupleSetUtils">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="4" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="validateSchemafulTupleSet(SchemafulTupleSet,Matcher&lt;SchemafulTupleSet&gt;) : void" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line num="12" count="0" type="stmt"/>
            <line num="13" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/testutils/TestClassTestBase.java" name="TestClassTestBase.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="49" coveredmethods="0" methods="3" elements="25" classes="1" ncloc="40" statements="16" conditionals="6" coveredstatements="0"/>
            <class name="TestClassTestBase">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="3" elements="25" statements="16" conditionals="6" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="verifyTestClass(Class&lt;?&gt;) : void" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line num="21" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="formatResult(boolean) : String" num="38" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="39" type="cond"/>
            <line complexity="3" visibility="private" signature="shouldPass(String) : boolean" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="43" type="cond"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/testutils/TestOracle.java" name="TestOracle.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="111" coveredmethods="0" methods="12" elements="36" classes="2" ncloc="95" statements="20" conditionals="4" coveredstatements="0"/>
            <class name="TestOracle">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestOracle.Builder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="12" elements="36" statements="20" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="withTransformer(Function&lt;T, U&gt;) : Builder&lt;T, U&gt;" num="24" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="26" type="cond"/>
            <line complexity="1" visibility="public" signature="withTransformer(String,Function&lt;T, U&gt;) : Builder&lt;T, U&gt;" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="withTester(Predicate&lt;U&gt;) : Builder&lt;T, U&gt;" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="41" type="cond"/>
            <line complexity="1" visibility="public" signature="withTester(String,Predicate&lt;U&gt;) : Builder&lt;T, U&gt;" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : TestOracle&lt;T, U&gt;" num="54" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="transformer() : Function&lt;T, U&gt;" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="tester() : Predicate&lt;U&gt;" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(T) : boolean" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toMatcher() : Matcher&lt;T&gt;" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="matches(Object) : boolean" num="78" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeTo(Description) : void" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="describeMismatch(Object,Description) : void" num="95" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/testutils/TestSuiteUtils.java" name="TestSuiteUtils.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="17" coveredmethods="0" methods="1" elements="3" classes="1" ncloc="13" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="TestSuiteUtils">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="3" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="validateTestSuite(TestSuite,Matcher&lt;TestSuite&gt;) : void" num="11" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line num="15" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/testutils/UTUtils.java" name="UTUtils.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="18" loc="142" coveredmethods="0" methods="15" elements="43" classes="1" ncloc="114" statements="26" conditionals="2" coveredstatements="0"/>
            <class name="UTUtils">
               <metrics coveredelements="0" coveredconditionals="0" complexity="18" coveredmethods="0" methods="15" elements="43" statements="26" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="isToStringOverridden(Class) : boolean" num="30" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sizeIs(String,Predicate&lt;Integer&gt;) : TestOracle&lt;C, Integer&gt;" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="allSatisfy(Predicate&lt;E&gt;) : Predicate&lt;C&gt;" num="48" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isRunByMaven() : boolean" num="55" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="configureStdIOs() : void" num="60" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setSilent() : void" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setVerbose() : void" num="74" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="write(int) : void" num="79" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="print(T) : T" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="oracle(String,Predicate&lt;T&gt;) : TestOracle&lt;T, T&gt;" num="98" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="oracle(String,Function&lt;T, U&gt;,String,Predicate&lt;U&gt;) : TestOracle&lt;T, U&gt;" num="102" count="0" type="method"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="matcherFromPredicates(Predicate&lt;T&gt;) : Matcher&lt;T&gt;" num="109" count="0" type="method"/>
            <line num="111" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="matcher(TestOracle&lt;T, ?&gt;) : Matcher&lt;T&gt;" num="120" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="matcher(List&lt;TestOracle&lt;T, ?&gt;&gt;) : Matcher&lt;T&gt;" num="125" count="0" type="method"/>
            <line num="126" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="createTempDirectory(String) : File" num="133" count="0" type="method"/>
            <line num="134" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="136" count="0" type="stmt"/>
            <line num="137" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.examples.executionsequence">
         <metrics coveredelements="0" complexity="15" loc="94" methods="15" classes="2" statements="15" coveredconditionals="0" coveredmethods="0" elements="30" ncloc="76" files="2" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/examples/executionsequence/Example.java" name="Example.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="65" coveredmethods="0" methods="11" elements="22" classes="1" ncloc="53" statements="11" conditionals="0" coveredstatements="0"/>
            <class name="Example">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="11" elements="22" statements="11" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Example()" num="12" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="aIsGreaterThanOrEqualTo$b(int,int) : boolean" num="16" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="beforeClass() : void" num="21" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="beforeTestCase(int,int,int) : void" num="26" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="before(int) : void" num="31" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="whenRunTest1$thenLooksGood(int,int,int) : void" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="whenRunTest2$thenLooksGood(int,int) : void" num="41" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="after(int,int) : void" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="afterTestCase(int,int) : void" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="afterClass() : void" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String) : void" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/examples/executionsequence/ExampleParameterSpace.java" name="ExampleParameterSpace.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="29" coveredmethods="0" methods="4" elements="8" classes="1" ncloc="23" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="ExampleParameterSpace">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="bIsGreaterThanC(int,int) : boolean" num="10" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="a() : Parameter.Factory" num="15" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="b() : Parameter.Factory" num="20" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="c() : Parameter.Factory" num="25" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.experiments.generation">
         <metrics coveredelements="0" complexity="10" loc="57" methods="10" classes="1" statements="10" coveredconditionals="0" coveredmethods="0" elements="20" ncloc="46" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/experiments/generation/GenerationExperiment.java" name="GenerationExperiment.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="10" loc="57" coveredmethods="0" methods="10" elements="20" classes="1" ncloc="46" statements="10" conditionals="0" coveredstatements="0"/>
            <class name="GenerationExperiment">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="10" elements="20" statements="10" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="generate2_10() : void" num="8" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="generate2_20() : void" num="13" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="generate2_30() : void" num="18" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="generate2_40() : void" num="23" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="generate2_50() : void" num="28" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="generate2_60() : void" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="generate2_70() : void" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="generate2_80() : void" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="generate2_90() : void" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="generate2_100() : void" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.tests.features.pipeline.parameters">
         <metrics coveredelements="0" complexity="25" loc="470" methods="24" classes="4" statements="31" coveredconditionals="0" coveredmethods="0" elements="57" ncloc="420" files="4" conditionals="2" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/features/pipeline/parameters/CustomParameterTest.java" name="CustomParameterTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="150" coveredmethods="0" methods="8" elements="16" classes="1" ncloc="129" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="CustomParameterTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="8" elements="16" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="givenOneCustomParameter$whenBuildFactorSpace$thenBuilt() : void" num="18" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenOneCustomParameter$whenGenerateWithIpoG$thenTupleSetGenerated() : void" num="30" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenOneCustomParameter$whenBuildTestSuite$thenBuilt() : void" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenOneSimpleAndOneCustomParameters$whenBuildTestSuite$thenBuilt() : void" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="whenPreprocess$thenNonSimpleParameterInvolvedInConstraintWillBeSimplified() : void" num="77" count="0" type="method"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenOneCustomParameterWithConstraints$whenPreprocess$thenNonSimpleParameterInvolvedInConstraintWillBeRemoved() : void" num="97" count="0" type="method"/>
            <line num="99" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenCustomParameter$whenEngine$thenSchemafulTupleSetGenerated() : void" num="118" count="0" type="method"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="given1Simple1CustomParameters$whenEngine$thenSchemafulTupleSetGenerated() : void" num="133" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/features/pipeline/parameters/FsmTest.java" name="FsmTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="133" coveredmethods="0" methods="7" elements="15" classes="1" ncloc="123" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="FsmTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="15" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="givenFlyingSpaghttiMonster$whenBuildFactorSpace$thenBuilt() : void" num="21" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenFlyingSpaghettiMonster$whenGenerateWithCartesian$thenGenerated() : void" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenFlyingSpaghettiMonster$whenGenerateTestSuite$thenGenerated() : void" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenFlyingSpaghettiMonster$whenGenerateTestSuiteFromFactorsWithConstraints() : void" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenFlyingSpaghettiMonster$whenEncodeParameterSpace$thenFactorSpaceGenerated() : void" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenFlyingSpaghettiMonsteWithNoConstraint$whenPreprocess$thenFsmParameterWillBeKept() : void" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenFlyingSpaghettiMonsterWithConstraint$whenPreprocess$thenParameterSpaceWithSimpleParameterAndConstraintIsGenerated() : void" num="110" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/features/pipeline/parameters/RegexTest.java" name="RegexTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="150" coveredmethods="0" methods="7" elements="21" classes="1" ncloc="135" statements="12" conditionals="2" coveredstatements="0"/>
            <class name="RegexTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="7" elements="21" statements="12" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="whenBuildFactorSpace() : void" num="21" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenRegex$whenGenerateWithIpoG$thenNonEmptyTupleSetGenerated() : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenRegex$whenBuildTestSuite$thenNonEmptyTestSuiteBuilt() : void" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="whenPreprocess$thenNonSimpleParameterInvolvedInConstraintWillBeRemoved() : void" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="whenPreprocessWithConstraints$thenNonSimpleParameterInvolvedInConstraintWillBeRemoved() : void" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="whenEngine$thenSchemafulTupleSetGenerated() : void" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="122" type="cond"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="whenEncode$thenFactorSpaceCreated() : void" num="130" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/features/pipeline/parameters/SimpleTest.java" name="SimpleTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="37" coveredmethods="0" methods="2" elements="5" classes="1" ncloc="33" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="SimpleTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="14" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="whenBuildTestSuite3() : void" num="24" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.tests.components.utils">
         <metrics coveredelements="0" complexity="12" loc="170" methods="12" classes="3" statements="15" coveredconditionals="0" coveredmethods="0" elements="27" ncloc="149" files="3" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/components/utils/JUnit4RunnerTest.java" name="JUnit4RunnerTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="95" coveredmethods="0" methods="8" elements="16" classes="1" ncloc="85" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="JUnit4RunnerTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="8" elements="16" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="beforeClass() : void" num="14" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="whenRunSpecificMethodForSpecificTestCase$thenOnlyTheMethodIsExecutedForTheTestCase() : void" num="19" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="whenRunSpecificMethodForAnyTestCase$thenOnlyTheMethodIsExecutedForAllTestCases() : void" num="30" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="whenRunSpecificMethodForAnyTestCaseInRange$thenOnlyTheMethodIsExecutedForTheTestCasesInRange() : void" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="whenRunSpecificMethodForAnyTestCaseFrom$thenOnlyTheMethodIsExecutedForTheTestCasesFrom() : void" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="whenRunSpecificMethodForAnyTestCaseUntil$thenOnlyTheMethodIsExecutedForTheTestCasesUntil() : void" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="whenRunAllMethodsForSpecificTestCase$thenAllMethodsAreExecutedForTheTestCase() : void" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="whenRunAllMethodsForAnyTestCase$thenAllMethodsAreExecutedForAllTestCases() : void" num="85" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/components/utils/StreamableTupleCartesianatorTest.java" name="StreamableTupleCartesianatorTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="54" coveredmethods="0" methods="2" elements="6" classes="1" ncloc="47" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="StreamableTupleCartesianatorTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="13" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="reproduce() : void" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/components/utils/UtilsTest.java" name="UtilsTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="21" coveredmethods="0" methods="2" elements="5" classes="1" ncloc="17" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="UtilsTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="before() : void" num="11" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenString$whenPrint$thenNotBroken() : void" num="16" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.examples.config">
         <metrics coveredelements="0" complexity="7" loc="55" methods="7" classes="1" statements="7" coveredconditionals="0" coveredmethods="0" elements="14" ncloc="46" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/examples/config/ConfigExample.java" name="ConfigExample.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="55" coveredmethods="0" methods="7" elements="14" classes="1" ncloc="46" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="ConfigExample">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="14" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="platform() : Parameter.Factory&lt;String&gt;" num="14" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="java() : Parameter.Factory&lt;String&gt;" num="19" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="browser() : Parameter.Factory&lt;String&gt;" num="24" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dbms() : Parameter.Factory&lt;String&gt;" num="29" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="applicationServer() : Parameter.Factory&lt;String&gt;" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="webServer() : Parameter.Factory&lt;String&gt;" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="print(String,String,String,String,String,String) : void" num="44" count="0" type="method"/>
            <line num="53" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.tests.components.condition">
         <metrics coveredelements="0" complexity="3" loc="44" methods="3" classes="1" statements="3" coveredconditionals="0" coveredmethods="0" elements="6" ncloc="39" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/components/condition/NodeTest.java" name="NodeTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="44" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="39" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="NodeTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="before() : void" num="17" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenTokens$whenAllLeaves$thenCorrectlyTokenized() : void" num="22" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenQuadraticEquationExampleClass$whenAllTestPredicates$thenKnownConstraintsAreReturned() : void" num="30" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.extras.normalizer">
         <metrics coveredelements="0" complexity="27" loc="217" methods="26" classes="6" statements="40" coveredconditionals="0" coveredmethods="0" elements="68" ncloc="170" files="4" conditionals="2" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/extras/normalizer/FactorSpaceSpec.java" name="FactorSpaceSpec.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="94" coveredmethods="0" methods="13" elements="34" classes="1" ncloc="76" statements="21" conditionals="0" coveredstatements="0"/>
            <class name="FactorSpaceSpec">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="13" elements="34" statements="21" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="addFactor(Factor) : FactorSpaceSpec" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createAdapterFor(String) : Factor" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLevels() : List&lt;Object&gt;" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get(int) : Object" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="size() : int" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="numLevelsOfNormalizedFactor(String) : int" num="64" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="addConstraint(NormalizableConstraint) : FactorSpaceSpec" num="68" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="normalizeRawFactorName(String) : String" num="73" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="denormalizeFactorName(String) : String" num="77" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createSignature() : String" num="81" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="87" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="numFactors() : int" num="91" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/extras/normalizer/NormalizableConstraint.java" name="NormalizableConstraint.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="6" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="NormalizableConstraint">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/extras/normalizer/NormalizedFactor.java" name="NormalizedFactor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="64" coveredmethods="0" methods="6" elements="17" classes="3" ncloc="49" statements="9" conditionals="2" coveredstatements="0"/>
            <class name="NormalizedFactor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="NormalizedFactor.Utils">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="11" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="NormalizedFactor.Utils.Internal">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="1" elements="6" statements="3" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="normalizeNumberFactor(String,Factor,Class&lt;T&gt;) : NormalizedFactor" num="21" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="denormalizer() : Function&lt;Integer, Integer&gt;" num="30" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getRawLevelFor(int) : Object" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getLevels() : List&lt;Object&gt;" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="validateValues(Iterable&lt;Object&gt;,Predicate&lt;Object&gt;) : void" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="59" type="cond"/>
            <line num="60" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/extras/normalizer/NormalizedFactorSpace.java" name="NormalizedFactorSpace.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="53" coveredmethods="0" methods="7" elements="17" classes="1" ncloc="41" statements="10" conditionals="0" coveredstatements="0"/>
            <class name="NormalizedFactorSpace">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="17" statements="10" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="normalize(FactorSpace) : NormalizedFactorSpace" num="15" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line num="17" count="0" type="stmt"/>
            <line num="18" count="0" type="stmt"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConstraints() : List&lt;Constraint&gt;" num="21" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactors() : List&lt;Factor&gt;" num="26" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactor(String) : Factor" num="31" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="signature() : String" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rawFactorSpace() : FactorSpace" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.tests.validation.testclassesundertest">
         <metrics coveredelements="0" complexity="1" loc="16" methods="1" classes="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" ncloc="13" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/validation/testclassesundertest/NoTestMethod.java" name="NoTestMethod.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="16" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="NoTestMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="simple() : Parameter.Simple.Factory&lt;String&gt;" num="12" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.tests.examples">
         <metrics coveredelements="0" complexity="11" loc="140" methods="11" classes="1" statements="11" coveredconditionals="0" coveredmethods="0" elements="22" ncloc="122" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/examples/ExamplesTest.java" name="ExamplesTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="140" coveredmethods="0" methods="11" elements="22" classes="1" ncloc="122" statements="11" conditionals="0" coveredstatements="0"/>
            <class name="ExamplesTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="11" elements="22" statements="11" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="before() : void" num="22" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="quadraticEquationSolver() : void" num="27" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="flyingSpaghettiMonster() : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bankAccount() : void" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="quadraticEquationSolverWithSeeds() : void" num="61" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="config() : void" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bankAccountWithSeeds() : void" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="helper() : void" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="beforeAfterTest() : void" num="105" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unusedParameterTest() : void" num="116" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parameterizedConstraint() : void" num="127" count="0" type="method"/>
            <line num="129" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.experiments.join.basic">
         <metrics coveredelements="0" complexity="22" loc="152" methods="15" classes="7" statements="38" coveredconditionals="0" coveredmethods="0" elements="67" ncloc="129" files="3" conditionals="14" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/experiments/join/basic/JoinExperimentBase.java" name="JoinExperimentBase.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="45" coveredmethods="0" methods="4" elements="9" classes="1" ncloc="38" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="JoinExperimentBase">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="createExperiment(int,int,int,Function&lt;Requirement, Joiner&gt;) : JoinExperiment" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="JoinExperimentBase(JoinExperiment)" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="exercise() : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="joinAndPrint() : void" num="42" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/experiments/join/basic/WeakenAndProduct.java" name="WeakenAndProduct.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="83" coveredmethods="0" methods="9" elements="45" classes="5" ncloc="71" statements="26" conditionals="10" coveredstatements="0"/>
            <class name="WeakenAndProduct">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="WeakenAndProduct.RunthroughStrength2and3">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="2" elements="15" statements="7" conditionals="6" coveredstatements="0"/>
            </class>
            <class name="WeakenAndProduct.HigherStrength">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="11" statements="7" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="WeakenAndProduct.HigherStrengthWithStandardJoiner">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="11" statements="7" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="WeakenAndProduct.Smallest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="RunthroughStrength2and3(JoinExperiment)" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="experiments() : List&lt;JoinExperiment&gt;" num="20" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="23" type="cond"/>
            <line num="24" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="24" type="cond"/>
            <line num="25" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="25" type="cond"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="HigherStrength(JoinExperiment)" num="32" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="experiments() : List&lt;JoinExperiment&gt;" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="39" type="cond"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="HigherStrengthWithStandardJoiner(JoinExperiment)" num="49" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="experiments() : List&lt;JoinExperiment&gt;" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Smallest(JoinExperiment)" num="67" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="experiments() : List&lt;JoinExperiment&gt;" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="joinAndPrint() : void" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/experiments/join/basic/WeakenAndProduct2.java" name="WeakenAndProduct2.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="24" coveredmethods="0" methods="2" elements="13" classes="1" ncloc="20" statements="7" conditionals="4" coveredstatements="0"/>
            <class name="WeakenAndProduct2">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="2" elements="13" statements="7" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="WeakenAndProduct2(JoinExperiment)" num="11" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="experiments() : List&lt;JoinExperiment&gt;" num="15" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line num="18" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="19" type="cond"/>
            <line num="20" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="20" type="cond"/>
            <line num="21" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.tests.features.pipeline.constraints">
         <metrics coveredelements="0" complexity="5" loc="129" methods="5" classes="1" statements="7" coveredconditionals="0" coveredmethods="0" elements="12" ncloc="121" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/features/pipeline/constraints/ImpossibleConstraintTest.java" name="ImpossibleConstraintTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="129" coveredmethods="0" methods="5" elements="12" classes="1" ncloc="121" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="ImpossibleConstraintTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="12" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="test() : void" num="27" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="whenGenerateSchemafulTupleSet() : void" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenSimpleParametersAndImpossibleConstraint$whenPreprocess$thenParameterSpaceIsStillPrepared() : void" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenImpossibleConstraint$whenGenerateWithIpoGplus$thenEmptyTupleSetGenerated() : void" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenImpossibleConstraint$whenGenerateWithCartesian$thenExceptionThrown() : void" num="113" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.tests.validation.testresources.seedfeature">
         <metrics coveredelements="0" complexity="6" loc="105" methods="6" classes="7" statements="5" coveredconditionals="0" coveredmethods="0" elements="11" ncloc="94" files="4" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/validation/testresources/seedfeature/MissingParameter.java" name="MissingParameter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="23" coveredmethods="0" methods="1" elements="2" classes="2" ncloc="21" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="MissingParameter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="MissingParameter.Config">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="defineRequirement(Requirement.Builder) : Requirement" num="11" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/validation/testresources/seedfeature/SeedBase.java" name="SeedBase.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="30" coveredmethods="0" methods="3" elements="5" classes="1" ncloc="25" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="SeedBase">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="5" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="parameter1() : Parameter.Simple.Factory&lt;String&gt;" num="14" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parameter2() : Parameter.Simple.Factory&lt;String&gt;" num="19" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(String,String) : void" num="24" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/validation/testresources/seedfeature/TypeMismatch.java" name="TypeMismatch.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="25" coveredmethods="0" methods="1" elements="2" classes="2" ncloc="23" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="TypeMismatch">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TypeMismatch.Config">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="defineRequirement(Requirement.Builder) : Requirement" num="11" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/validation/testresources/seedfeature/UnknownParameter.java" name="UnknownParameter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="27" coveredmethods="0" methods="1" elements="2" classes="2" ncloc="25" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="UnknownParameter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="UnknownParameter.Config">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="defineRequirement(Requirement.Builder) : Requirement" num="11" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.examples.parameterizedconstraint">
         <metrics coveredelements="0" complexity="6" loc="52" methods="6" classes="1" statements="6" coveredconditionals="0" coveredmethods="0" elements="12" ncloc="43" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/examples/parameterizedconstraint/ParameterizedConstraintExample.java" name="ParameterizedConstraintExample.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="52" coveredmethods="0" methods="6" elements="12" classes="1" ncloc="43" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="ParameterizedConstraintExample">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="12" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="a() : Parameter.Factory" num="17" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="b() : Parameter.Factory" num="22" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="c() : Parameter.Factory" num="27" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="isOneOf(int,Object) : boolean" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="littleThan(int,String) : boolean" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="whenRunTest$thenWorks(int,int,int) : void" num="42" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.tests.validation.testresources">
         <metrics coveredelements="0" complexity="32" loc="329" methods="32" classes="15" statements="19" coveredconditionals="0" coveredmethods="0" elements="51" ncloc="265" files="11" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/validation/testresources/ConstraintThatNeverBecomesTrue.java" name="ConstraintThatNeverBecomesTrue.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="31" coveredmethods="0" methods="3" elements="5" classes="1" ncloc="25" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="ConstraintThatNeverBecomesTrue">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="5" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="a() : Parameter.Simple.Factory&lt;Integer&gt;" num="15" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="neverTrue(int) : boolean" num="20" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(int) : void" num="27" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/validation/testresources/IncompatibleParameters.java" name="IncompatibleParameters.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="66" coveredmethods="0" methods="8" elements="12" classes="5" ncloc="54" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="IncompatibleParameters">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="IncompatibleParameters.IncompatibleType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="IncompatibleParameters.CompatibleNullValue">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="IncompatibleParameters.IncompatiblePrimitiveType">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="IncompatibleParameters.IncompatibleNullValue">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="a() : Simple.Factory&lt;Integer&gt;" num="15" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMethod(String) : void" num="20" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="a() : Simple.Factory&lt;Integer&gt;" num="28" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMethod(Integer) : void" num="33" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="a() : Simple.Factory&lt;Integer&gt;" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMethod(boolean) : void" num="46" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="a() : Simple.Factory&lt;Integer&gt;" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMethod(int) : void" num="60" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/validation/testresources/InvalidConditionMethods.java" name="InvalidConditionMethods.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="38" coveredmethods="0" methods="5" elements="9" classes="1" ncloc="31" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="InvalidConditionMethods">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="9" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="a() : Parameter.Simple.Factory&lt;Integer&gt;" num="15" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="nonPublic() : boolean" num="20" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="staticMethod() : boolean" num="25" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="wrongType() : int" num="30" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(int) : void" num="35" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/validation/testresources/InvalidParameterSourceMethods.java" name="InvalidParameterSourceMethods.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="40" coveredmethods="0" methods="4" elements="7" classes="1" ncloc="34" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="InvalidParameterSourceMethods">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="7" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="a(int) : Parameter.Simple.Factory&lt;Integer&gt;" num="14" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="b() : Parameter.Simple.Factory&lt;Integer&gt;" num="20" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="c() : Parameter.Simple.Factory&lt;Integer&gt;" num="26" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(int,int,int) : void" num="32" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/validation/testresources/InvalidTestClass.java" name="InvalidTestClass.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="4" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="3" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="InvalidTestClass">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/validation/testresources/NoParameter.java" name="NoParameter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="12" coveredmethods="0" methods="1" elements="1" classes="1" ncloc="10" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="NoParameter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="1" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testMethod() : void" num="9" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/validation/testresources/NoTestMethod.java" name="NoTestMethod.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="17" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="13" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="NoTestMethod">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="a() : Parameter.Simple.Factory&lt;Integer&gt;" num="12" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/validation/testresources/ParameterSourceOverloaded.java" name="ParameterSourceOverloaded.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="33" coveredmethods="0" methods="3" elements="5" classes="1" ncloc="25" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="ParameterSourceOverloaded">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="5" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="a() : Parameter.Simple.Factory&lt;Integer&gt;" num="17" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="a(int) : Parameter.Simple.Factory&lt;Integer&gt;" num="22" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="performScenario1(int) : void" num="27" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/validation/testresources/ParameterWithoutFromAnnotation.java" name="ParameterWithoutFromAnnotation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="24" coveredmethods="0" methods="2" elements="3" classes="1" ncloc="20" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="ParameterWithoutFromAnnotation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="a() : Simple.Factory&lt;Integer&gt;" num="13" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMethod(int) : void" num="18" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/validation/testresources/UndefinedConstraint.java" name="UndefinedConstraint.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="37" coveredmethods="0" methods="3" elements="4" classes="1" ncloc="31" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="UndefinedConstraint">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="4" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="a() : Parameter.Simple.Factory&lt;Integer&gt;" num="15" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test1(int) : void" num="21" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="test2(int) : void" num="29" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/validation/testresources/UndefinedParameterReferenced.java" name="UndefinedParameterReferenced.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="27" coveredmethods="0" methods="2" elements="3" classes="1" ncloc="19" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="UndefinedParameterReferenced">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="a() : Parameter.Simple.Factory&lt;Integer&gt;" num="17" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="performScenario1(int) : void" num="21" count="0" type="method"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.examples.quadraticequation">
         <metrics coveredelements="0" complexity="13" loc="100" methods="13" classes="1" statements="17" coveredconditionals="0" coveredmethods="0" elements="30" ncloc="85" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/examples/quadraticequation/QuadraticEquationExample.java" name="QuadraticEquationExample.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="100" coveredmethods="0" methods="13" elements="30" classes="1" ncloc="85" statements="17" conditionals="0" coveredstatements="0"/>
            <class name="QuadraticEquationExample">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="13" elements="30" statements="17" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="a() : Simple.Factory&lt;Integer&gt;" num="18" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="b() : Simple.Factory&lt;Integer&gt;" num="23" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="c() : Simple.Factory&lt;Integer&gt;" num="28" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="discriminantIsNonNegative(int,int,int) : boolean" num="33" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="aIsNonZero(int) : boolean" num="42" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="beforeClass() : void" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="before() : void" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="performScenario1(int,int,int) : void" num="57" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="performScenario2(int,int,int) : void" num="69" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="after() : void" num="81" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="afterClass() : void" num="86" count="0" type="method"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="sut1(int,int,int) : double" num="91" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="sut2(int,int,int) : double" num="96" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.tests.features.seed">
         <metrics coveredelements="0" complexity="24" loc="334" methods="24" classes="14" statements="29" coveredconditionals="0" coveredmethods="0" elements="53" ncloc="246" files="3" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/features/seed/SeedFeatureTestBase.java" name="SeedFeatureTestBase.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="12" loc="143" coveredmethods="0" methods="12" elements="26" classes="7" ncloc="118" statements="14" conditionals="0" coveredstatements="0"/>
            <class name="SeedFeatureTestBase">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="10" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SeedFeatureTestBase.T00">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SeedFeatureTestBase.T01">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SeedFeatureTestBase.T02">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SeedFeatureTestBase.T03">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SeedFeatureTestBase.T04">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="SeedFeatureTestBase.T05">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="a() : Parameter.Simple.Factory&lt;Integer&gt;" num="23" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="b() : Parameter.Simple.Factory&lt;Integer&gt;" num="28" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="c() : Parameter.Simple.Factory&lt;Integer&gt;" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(int,int,int) : void" num="38" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="aIsEqualToB(int,int) : boolean" num="56" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bIsNotEqualToC(int,int) : boolean" num="65" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="aIsEqualToB(int,int) : boolean" num="77" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="aIsEqualToB(int,int) : boolean" num="90" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bIsNotEqualToC(int,int) : boolean" num="102" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="aIsEqualToB(int,int) : boolean" num="114" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bIsNotEqualToC(int,int) : boolean" num="123" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bIsNotEqualToC(int,int) : boolean" num="135" count="0" type="method"/>
            <line num="140" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/features/seed/SeedTest.java" name="SeedTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="129" coveredmethods="0" methods="7" elements="17" classes="1" ncloc="72" statements="10" conditionals="0" coveredstatements="0"/>
            <class name="SeedTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="17" statements="10" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="runT00() : void" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="runT01() : void" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="runT02() : void" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="runT03() : void" num="92" count="0" type="method"/>
            <line num="94" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="runT04() : void" num="102" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="runT05() : void" num="112" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="generateTestCasesByRunningTestClass(Class) : List&lt;Tuple&gt;" num="122" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/features/seed/TestConfig.java" name="TestConfig.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="62" coveredmethods="0" methods="5" elements="10" classes="6" ncloc="56" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="TestConfig">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestConfig.SeedNone$NegativeTestEnabled">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestConfig.SeedSa$NegativeTestDisabled">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestConfig.SeedSa$NegativeTestEnabled">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestConfig.SeedSaAndSb$NegativeEnabled">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="TestConfig.SeedSb$NegativeEnabled">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="defineRequirement(Requirement.Builder) : Requirement" num="9" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="defineRequirement(Requirement.Builder) : Requirement" num="18" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="defineRequirement(Requirement.Builder) : Requirement" num="29" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="defineRequirement(Requirement.Builder) : Requirement" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="defineRequirement(Requirement.Builder) : Requirement" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.tests.validation">
         <metrics coveredelements="0" complexity="16" loc="304" methods="16" classes="1" statements="17" coveredconditionals="0" coveredmethods="0" elements="33" ncloc="282" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/validation/ValidationTest.java" name="ValidationTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="16" loc="304" coveredmethods="0" methods="16" elements="33" classes="1" ncloc="282" statements="17" conditionals="0" coveredstatements="0"/>
            <class name="ValidationTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="16" coveredmethods="0" methods="16" elements="33" statements="17" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="exceptionMessageAt(int) : Function&lt;Result, String&gt;" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenUndefinedParameterReferenced$whenRunTestClass$thenAppropriateExceptionThrown() : void" num="30" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenOverloadedParameterSourceMethod$whenRunTestClass$thenAppropriateExceptionThrown() : void" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenInvalidParameterSourceMethods$whenRunTestClass$thenAppropriateExceptionThrown() : void" num="82" count="0" type="method"/>
            <line num="84" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenInvalidReferencesToConstraints$whenRunTestClass$thenAppropriateExceptionThrown() : void" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenInvalidConditions$whenRunTestClass$thenAppropriateExceptionThrown() : void" num="108" count="0" type="method"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenNonAnnotatedParameterInTestMethod$whenRunTest$thenAppropriateExceptionIsThrown() : void" num="128" count="0" type="method"/>
            <line num="130" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenNoParameterTestClass$whenRunTest$thenTestDefinitionExceptionThrown() : void" num="151" count="0" type="method"/>
            <line num="153" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="typeCompatibilityTest1() : void" num="164" count="0" type="method"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="typeCompatibilityTest2() : void" num="187" count="0" type="method"/>
            <line num="189" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="typeCompatibilityTest3() : void" num="202" count="0" type="method"/>
            <line num="204" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="typeCompatibilityTest4() : void" num="223" count="0" type="method"/>
            <line num="225" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="noTest() : void" num="246" count="0" type="method"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="missingParameterInSeed() : void" num="255" count="0" type="method"/>
            <line num="257" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="unknownParameterInSeed() : void" num="270" count="0" type="method"/>
            <line num="272" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="typeMismatchInSeed() : void" num="287" count="0" type="method"/>
            <line num="289" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.testutils.testsuitequality">
         <metrics coveredelements="0" complexity="52" loc="557" methods="47" classes="7" statements="75" coveredconditionals="0" coveredmethods="0" elements="132" ncloc="489" files="4" conditionals="10" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/testutils/testsuitequality/CombinatorialCoverageTest.java" name="CombinatorialCoverageTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="166" coveredmethods="0" methods="7" elements="15" classes="1" ncloc="154" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="CombinatorialCoverageTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="15" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="before() : void" num="27" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="given3ParametersWith1ConstraintStrength2$whenBuildTestSuite$thenValidTestSuiteBuilt() : void" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="given4ParametersWith1ConstraintStrength2$whenBuildTestSuite$thenValidTestSuiteBuilt() : void" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="given4ParametersWithNoConstraintStrength3$whenBuildTestSuite$thenValidTestSuiteBuilt() : void" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="given3ParametersWith2ConstraintThatMake1LevelInvalidStrength2$whenBuildTestSuite$thenValidTestSuiteBuilt() : void" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="givenParameterSpaceAndStrength$whenBuildTestSuite$thenCombinatorialCoverageFineAndNoConstraintIsViolated(List&lt;Parameter&gt;,List&lt;Constraint&gt;,int) : void" num="95" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="assertTestSuite(TestSuite,List&lt;Parameter&gt;,int,boolean) : void" num="113" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/testutils/testsuitequality/CompatFactorSpaceSpecForExperiments.java" name="CompatFactorSpaceSpecForExperiments.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="16" coveredmethods="0" methods="2" elements="4" classes="1" ncloc="12" statements="2" conditionals="0" coveredstatements="0"/>
            <class name="CompatFactorSpaceSpecForExperiments">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CompatFactorSpaceSpecForExperiments(String)" num="8" count="0" type="method"/>
            <line num="9" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="prefix() : String" num="12" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/testutils/testsuitequality/CoveringArrayGenerationUtils.java" name="CoveringArrayGenerationUtils.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="36" loc="313" coveredmethods="0" methods="32" elements="92" classes="3" ncloc="272" statements="52" conditionals="8" coveredstatements="0"/>
            <class name="CoveringArrayGenerationUtils">
               <metrics coveredelements="0" coveredconditionals="0" complexity="27" coveredmethods="0" methods="23" elements="68" statements="37" conditionals="8" coveredstatements="0"/>
            </class>
            <class name="CoveringArrayGenerationUtils.TestSuiteBuilder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="18" statements="11" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CoveringArrayGenerationUtils.StopWatch">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="6" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="mergeFactorSpaces(FactorSpace,FactorSpace) : FactorSpace" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="createFactorSpace(String,int,int) : FactorSpace" num="44" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parameterSpace(List&lt;Parameter&gt;,List&lt;Constraint&gt;) : ParameterSpace" num="57" count="0" type="method"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="factorSpace(List&lt;Parameter&gt;,List&lt;Constraint&gt;) : FactorSpace" num="64" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toFactorSpace(ParameterSpace) : FactorSpace" num="68" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="generateWithIpoGplus(FactorSpace,int) : List&lt;Tuple&gt;" num="82" count="0" type="method"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="join(List&lt;Tuple&gt;,List&lt;Tuple&gt;,Function&lt;Requirement, Joiner&gt;,int) : List&lt;Tuple&gt;" num="90" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="coveredTuples(int,Collection&lt;Tuple&gt;) : List&lt;Tuple&gt;" num="97" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="subtract(Collection&lt;T&gt;,Collection&lt;T&gt;) : List&lt;T&gt;" num="103" count="0" type="method"/>
            <line num="104" count="0" type="stmt"/>
            <line complexity="4" visibility="public" signature="findAllowedSuperTupleFor(Tuple,ParameterSpace) : Optional&lt;Tuple&gt;" num="115" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="125" type="cond"/>
            <line num="126" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="126" type="cond"/>
            <line num="129" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="139" type="cond"/>
            <line num="140" count="0" type="stmt"/>
            <line num="142" count="0" type="stmt"/>
            <line num="145" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="p(String,Object) : Parameter&lt;Object&gt;" num="153" count="0" type="method"/>
            <line num="154" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="allPossibleTuplesInFactors(int,List&lt;Factor&gt;) : List&lt;Tuple&gt;" num="157" count="0" type="method"/>
            <line num="158" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="allPossibleTuples(int,List&lt;Parameter&gt;) : List&lt;Tuple&gt;" num="167" count="0" type="method"/>
            <line num="168" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="allPossibleTuples(int,Parameter) : List&lt;Tuple&gt;" num="171" count="0" type="method"/>
            <line num="172" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="&lt;init&gt;, line 181()" num="181" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="182" type="cond"/>
            <line num="183" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="convertParameters(List&lt;Parameter&gt;) : List&lt;List&lt;Object&gt;&gt;" num="192" count="0" type="method"/>
            <line num="194" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="buildTestSuite(int,List&lt;Parameter&gt;,List&lt;Constraint&gt;) : TestSuite" num="199" count="0" type="method"/>
            <line num="200" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 201()" num="201" count="0" type="method"/>
            <line num="202" count="0" type="stmt"/>
            <line num="203" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="constraints(Constraint) : List&lt;Constraint&gt;" num="209" count="0" type="method"/>
            <line num="210" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="c(Predicate&lt;Tuple&gt;,String) : Constraint" num="213" count="0" type="method"/>
            <line num="214" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="parameters(Parameter) : List&lt;Parameter&gt;" num="217" count="0" type="method"/>
            <line num="218" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="failsIf(boolean) : AsBoolean&lt;? super I&gt;" num="221" count="0" type="method"/>
            <line num="222" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="assertCoveringArray(List&lt;Tuple&gt;,FactorSpace,int) : void" num="228" count="0" type="method"/>
            <line num="231" count="0" type="stmt"/>
            <line num="232" count="0" type="stmt"/>
            <line num="233" count="0" type="stmt"/>
            <line num="234" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="TestSuiteBuilder()" num="260" count="0" type="method"/>
            <line num="261" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="setStrength(int) : TestSuiteBuilder" num="264" count="0" type="method"/>
            <line num="265" count="0" type="stmt"/>
            <line num="266" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="addSeed(Tuple) : TestSuiteBuilder" num="269" count="0" type="method"/>
            <line num="270" count="0" type="stmt"/>
            <line num="271" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="addConstraint(String,Predicate&lt;Tuple&gt;,String) : TestSuiteBuilder" num="274" count="0" type="method"/>
            <line num="275" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="addParameter(String,Object) : TestSuiteBuilder" num="279" count="0" type="method"/>
            <line num="280" count="0" type="stmt"/>
            <line num="281" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="buildTestSuite() : TestSuite" num="284" count="0" type="method"/>
            <line num="285" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 288()" num="288" count="0" type="method"/>
            <line num="289" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="get() : long" num="303" count="0" type="method"/>
            <line num="304" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String) : void" num="307" count="0" type="method"/>
            <line num="308" count="0" type="stmt"/>
            <line num="309" count="0" type="stmt"/>
            <line num="310" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/testutils/testsuitequality/GenerationTestBase.java" name="GenerationTestBase.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="62" coveredmethods="0" methods="6" elements="21" classes="2" ncloc="51" statements="13" conditionals="2" coveredstatements="0"/>
            <class name="GenerationTestBase">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="3" elements="12" statements="7" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="GenerationTestBase.Report">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="9" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="beforeClass() : void" num="13" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
            <line complexity="2" visibility="protected" signature="exerciseGeneration(FactorSpaceSpecForExperiments,int,int) : void" num="19" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="25" type="cond"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="exerciseGeneration(FactorSpaceSpecForExperiments,int) : Report" num="30" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Report(String,List&lt;Tuple&gt;,long)" num="46" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="header() : String" num="58" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.experiments.join">
         <metrics coveredelements="0" complexity="47" loc="382" methods="36" classes="6" statements="95" coveredconditionals="0" coveredmethods="0" elements="139" ncloc="334" files="5" conditionals="8" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/experiments/join/JoinExperiment.java" name="JoinExperiment.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="23" loc="183" coveredmethods="0" methods="20" elements="72" classes="2" ncloc="158" statements="48" conditionals="4" coveredstatements="0"/>
            <class name="JoinExperiment">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="7" elements="35" statements="24" conditionals="4" coveredstatements="0"/>
            </class>
            <class name="JoinExperiment.Builder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="13" elements="37" statements="24" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="private" signature="JoinExperiment(JoinExperiment.Builder)" num="25" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="3" visibility="public" signature="exercise() : void" num="33" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="44" type="cond"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 59()" num="59" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="joinAndPrint() : void" num="69" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="formatCoveringArray(List&lt;Tuple&gt;,IntUnaryOperator,FactorSpaceSpecForExperiments) : String" num="81" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="exerciseJoin(List&lt;Tuple&gt;,List&lt;Tuple&gt;,int,Function&lt;Requirement, Joiner&gt;) : List&lt;Tuple&gt;" num="85" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="loadOrGenerateCoveringArray(FactorSpaceSpecForExperiments,int,BiFunction&lt;FactorSpace, Integer, List&lt;Tuple&gt;&gt;) : List&lt;Tuple&gt;" num="94" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="lhs(FactorSpaceSpecForExperiments) : Builder" num="116" count="0" type="method"/>
            <line num="117" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="lhs(FactorSpaceSpecForExperiments,int) : Builder" num="120" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="lhs(FactorSpaceSpecForExperiments,IntUnaryOperator) : Builder" num="124" count="0" type="method"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rhs(FactorSpaceSpecForExperiments) : Builder" num="130" count="0" type="method"/>
            <line num="131" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rhs(FactorSpaceSpecForExperiments,int) : Builder" num="134" count="0" type="method"/>
            <line num="135" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="rhs(FactorSpaceSpecForExperiments,IntUnaryOperator) : Builder" num="138" count="0" type="method"/>
            <line num="139" count="0" type="stmt"/>
            <line num="140" count="0" type="stmt"/>
            <line num="141" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="times(int) : Builder" num="144" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="joiner(Function&lt;Requirement, Joiner&gt;) : Builder" num="149" count="0" type="method"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="generator(BiFunction&lt;FactorSpace, Integer, List&lt;Tuple&gt;&gt;) : Builder" num="154" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="strength(int) : Builder" num="159" count="0" type="method"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="verification(boolean) : Builder" num="164" count="0" type="method"/>
            <line num="165" count="0" type="stmt"/>
            <line num="166" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : JoinExperiment" num="169" count="0" type="method"/>
            <line num="170" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="clone() : JoinExperiment.Builder" num="173" count="0" type="method"/>
            <line num="175" count="0" type="stmt"/>
            <line num="176" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/experiments/join/JoinExperimentExample.java" name="JoinExperimentExample.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="43" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="39" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="JoinExperimentExample">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="example1() : void" num="8" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="example1_1() : void" num="20" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="example2() : void" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/experiments/join/JoinExperimentUtils.java" name="JoinExperimentUtils.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="18" loc="128" coveredmethods="0" methods="10" elements="52" classes="1" ncloc="114" statements="38" conditionals="4" coveredstatements="0"/>
            <class name="JoinExperimentUtils">
               <metrics coveredelements="0" coveredconditionals="0" complexity="18" coveredmethods="0" methods="10" elements="52" statements="38" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="loadPregeneratedOrGenerateAndSaveCoveringArrayFor(FactorSpaceSpecForExperiments,int,BiFunction&lt;FactorSpace, Integer, List&lt;Tuple&gt;&gt;) : List&lt;Tuple&gt;" num="31" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="36" type="cond"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="loadPregeneratedOrGenerateAndSaveCoveringArrayFor(FactorSpaceSpecForExperiments,int,File,BiFunction&lt;FactorSpace, Integer, List&lt;Tuple&gt;&gt;) : List&lt;Tuple&gt;" num="45" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="convertToAbstractModel(FactorSpaceSpecForExperiments) : CompatFactorSpaceSpecForExperiments" num="65" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="loadPregeneratedCoveringArrayFor(FactorSpaceSpecForExperiments,int,File) : Optional&lt;List&lt;Tuple&gt;&gt;" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line num="74" count="0" type="stmt"/>
            <line num="75" count="0" type="stmt"/>
            <line num="80" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="fileFor(FactorSpaceSpecForExperiments,int,File) : File" num="91" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="signatureOf(FactorSpaceSpecForExperiments) : String" num="95" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="4" visibility="private" signature="saveTo(File,List&lt;Tuple&gt;) : void" num="99" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="3" visibility="private" signature="loadFrom(File) : List&lt;Tuple&gt;" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="convert(Tuple,String) : Tuple" num="114" count="0" type="method"/>
            <line num="115" count="0" type="stmt"/>
            <line num="116" count="0" type="stmt"/>
            <line num="120" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="requireArgument(T,Predicate&lt;T&gt;) : T" num="123" count="0" type="method"/>
            <line num="124" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="124" type="cond"/>
            <line num="125" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/experiments/join/JoinReport.java" name="JoinReport.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="23" coveredmethods="0" methods="3" elements="9" classes="1" ncloc="19" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="JoinReport">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="9" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="JoinReport(String,String,int,long)" num="9" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
            <line num="11" count="0" type="stmt"/>
            <line num="12" count="0" type="stmt"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="header() : String" num="16" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/experiments/join/Named.java" name="Named.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="5" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="4" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Named">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.examples.bankaccount">
         <metrics coveredelements="0" complexity="33" loc="207" methods="17" classes="3" statements="64" coveredconditionals="0" coveredmethods="0" elements="103" ncloc="180" files="2" conditionals="22" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/examples/bankaccount/BankAccount.java" name="BankAccount.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="40" coveredmethods="0" methods="5" elements="27" classes="2" ncloc="33" statements="14" conditionals="8" coveredstatements="0"/>
            <class name="BankAccount">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="5" elements="27" statements="14" conditionals="8" coveredstatements="0"/>
            </class>
            <class name="BankAccount.InsufficientBalance">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="open() : BankAccount" num="4" count="0" type="method"/>
            <line num="5" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="deposit(int) : void" num="10" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="11" type="cond"/>
            <line num="12" count="0" type="stmt"/>
            <line num="14" count="0" type="stmt"/>
            <line complexity="3" visibility="package" signature="withdraw(int) : void" num="17" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="18" type="cond"/>
            <line num="19" count="0" type="stmt"/>
            <line num="21" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="21" type="cond"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="2" visibility="package" signature="transferTo(BankAccount,int) : void" num="26" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="27" type="cond"/>
            <line num="28" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="getBalance() : int" num="34" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/examples/bankaccount/BankAccountExample.java" name="BankAccountExample.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="24" loc="167" coveredmethods="0" methods="12" elements="76" classes="1" ncloc="147" statements="50" conditionals="14" coveredstatements="0"/>
            <class name="BankAccountExample">
               <metrics coveredelements="0" coveredconditionals="0" complexity="24" coveredmethods="0" methods="12" elements="76" statements="50" conditionals="14" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="scenario() : Regex.Factory&lt;String&gt;" num="24" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="depositAmount() : Simple.Factory&lt;Integer&gt;" num="29" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="withdrawAmount() : Simple.Factory&lt;Integer&gt;" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="transferAmount() : Simple.Factory&lt;Integer&gt;" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="depositUsed(List&lt;String&gt;,int) : boolean" num="44" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="50" type="cond"/>
            <line num="51" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="withdrawUsed(List&lt;String&gt;,int) : boolean" num="57" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="63" type="cond"/>
            <line num="64" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="transferUsed(List&lt;String&gt;,int) : boolean" num="70" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="76" type="cond"/>
            <line num="77" count="0" type="stmt"/>
            <line num="79" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="overdraftNotHappens(List&lt;String&gt;,int,int,int) : boolean" num="83" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="5" visibility="private" signature="calculateBalance(List&lt;String&gt;,int,int,int) : int" num="93" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line num="99" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="99" type="cond"/>
            <line num="100" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="101" type="cond"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="103" type="cond"/>
            <line num="104" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="106" type="cond"/>
            <line num="107" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="whenPerformScenario$thenBalanceIsCorrect(List&lt;String&gt;,int,int,int) : void" num="113" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="125" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="printScenario(List&lt;String&gt;,int,int,int) : void" num="128" count="0" type="method"/>
            <line num="136" count="0" type="stmt"/>
            <line complexity="6" visibility="private" signature="perform(String,int,int,int) : int" num="139" count="0" type="method"/>
            <line num="145" count="0" type="stmt"/>
            <line num="146" count="0" type="stmt"/>
            <line num="147" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line num="151" count="0" type="stmt"/>
            <line num="152" count="0" type="stmt"/>
            <line num="153" count="0" type="stmt"/>
            <line num="154" count="0" type="stmt"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line num="158" count="0" type="stmt"/>
            <line num="159" count="0" type="stmt"/>
            <line num="160" count="0" type="stmt"/>
            <line num="161" count="0" type="stmt"/>
            <line num="162" count="0" type="stmt"/>
            <line num="163" count="0" type="stmt"/>
            <line num="165" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.tests.bugs">
         <metrics coveredelements="0" complexity="8" loc="76" methods="8" classes="3" statements="10" coveredconditionals="0" coveredmethods="0" elements="18" ncloc="64" files="2" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/bugs/Bug140.java" name="Bug140.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="50" coveredmethods="0" methods="7" elements="13" classes="2" ncloc="41" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="Bug140">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="Bug140.ConfigFactory">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="ConfigFactory()" num="18" count="0" type="method"/>
            <line complexity="1" visibility="protected" signature="defineRequirement(Requirement.Builder) : Requirement" num="21" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="a() : Parameter.Factory" num="26" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="b() : Parameter.Factory" num="31" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="c() : Parameter.Factory" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="aIsGreaterThanB(int,int) : boolean" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(int,int,int) : void" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/bugs/Bug140Test.java" name="Bug140Test.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="26" coveredmethods="0" methods="1" elements="5" classes="1" ncloc="23" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="Bug140Test">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="5" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="reproduceBug410() : void" num="13" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
            <line num="16" count="0" type="stmt"/>
            <line num="17" count="0" type="stmt"/>
            <line num="18" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.tests.features.generators">
         <metrics coveredelements="0" complexity="65" loc="688" methods="65" classes="9" statements="109" coveredconditionals="0" coveredmethods="0" elements="174" ncloc="616" files="2" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/features/generators/CoveringArrayQualityTest.java" name="CoveringArrayQualityTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="45" coveredmethods="0" methods="7" elements="14" classes="1" ncloc="34" statements="7" conditionals="0" coveredstatements="0"/>
            <class name="CoveringArrayQualityTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="14" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="generate3_3$t2() : void" num="9" count="0" type="method"/>
            <line num="11" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="generate3_4$t2() : void" num="14" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="generate3_5$t2() : void" num="19" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="generate2_3$t3() : void" num="26" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="generate2_4$t3() : void" num="31" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="generate2_5$t3() : void" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="generate2_6$t3() : void" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/features/generators/IpoGplusTest.java" name="IpoGplusTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="58" loc="643" coveredmethods="0" methods="58" elements="160" classes="8" ncloc="582" statements="102" conditionals="0" coveredstatements="0"/>
            <class name="IpoGplusTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="IpoGplusTest.InvolvedConstraints">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="11" elements="22" statements="11" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="IpoGplusTest.AssignmentsAllowedByPartiallyInvolvedConstraints">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="24" statements="19" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="IpoGplusTest.AssignmentsAllowedByPartiallyInvolvedConstraints.Fixture">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="22" statements="15" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="IpoGplusTest.SatisfiesAllOf">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="15" elements="30" statements="15" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="IpoGplusTest.ReplaceDontCareValues">
               <metrics coveredelements="0" coveredconditionals="0" complexity="13" coveredmethods="0" methods="13" elements="38" statements="25" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="IpoGplusTest.AllPossibleTuples">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="12" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="IpoGplusTest.TupleTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="12" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="getName() : String" num="28" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Tuple) : boolean" num="32" count="0" type="method"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="involvedKeys() : List&lt;String&gt;" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Tuple) : boolean" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="involvedKeys() : List&lt;String&gt;" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Tuple) : boolean" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="involvedKeys() : List&lt;String&gt;" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenFullyInvolvedConstraints$whenGetFullyInvolvedConstraints$thenReturned() : void" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenPartiallyInvolvedConstraints$whenGetFullyInvolvedConstraints$thenReturned() : void" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 106()" num="106" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 111()" num="111" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 121()" num="121" count="0" type="method"/>
            <line num="122" count="0" type="stmt"/>
            <line num="123" count="0" type="stmt"/>
            <line num="124" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 126()" num="126" count="0" type="method"/>
            <line num="127" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 136()" num="136" count="0" type="method"/>
            <line num="137" count="0" type="stmt"/>
            <line num="138" count="0" type="stmt"/>
            <line num="139" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 141()" num="141" count="0" type="method"/>
            <line num="142" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="Fixture(Tuple,List&lt;Factor&gt;,List&lt;Constraint&gt;)" num="154" count="0" type="method"/>
            <line num="155" count="0" type="stmt"/>
            <line num="156" count="0" type="stmt"/>
            <line num="157" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenSimpleExample$whenAssignmentsAllowedByAllPartiallyInvolvedConstraints() : void" num="161" count="0" type="method"/>
            <line num="163" count="0" type="stmt"/>
            <line num="164" count="0" type="stmt"/>
            <line num="171" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenSimpleExample$whenStreamTuplesUnderConstraints() : void" num="180" count="0" type="method"/>
            <line num="182" count="0" type="stmt"/>
            <line num="187" count="0" type="stmt"/>
            <line num="192" count="0" type="stmt"/>
            <line num="197" count="0" type="stmt"/>
            <line num="201" count="0" type="stmt"/>
            <line num="202" count="0" type="stmt"/>
            <line num="219" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testMemoization() : void" num="238" count="0" type="method"/>
            <line num="240" count="0" type="stmt"/>
            <line num="241" count="0" type="stmt"/>
            <line num="243" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenTwoFreeFactors$whenAssignmentsAllowedByAllPartiallyInvolvedConstraints() : void" num="246" count="0" type="method"/>
            <line num="248" count="0" type="stmt"/>
            <line num="249" count="0" type="stmt"/>
            <line num="256" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenTupleViolatingFullyCoveredConstraint$whenAssignmentsAllowedByAllPartiallyInvolvedConstraints() : void" num="266" count="0" type="method"/>
            <line num="268" count="0" type="stmt"/>
            <line num="269" count="0" type="stmt"/>
            <line num="276" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenEmptyConstraintList$whenSatisfiesAllOf$thenTrue() : void" num="284" count="0" type="method"/>
            <line num="286" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenConstraintsAllReturningTrue$whenSatisfiesAllOf$thenTrue() : void" num="289" count="0" type="method"/>
            <line num="291" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="293" count="0" type="method"/>
            <line num="295" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Tuple) : boolean" num="298" count="0" type="method"/>
            <line num="300" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="involvedKeys() : List&lt;String&gt;" num="303" count="0" type="method"/>
            <line num="305" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="309" count="0" type="method"/>
            <line num="311" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Tuple) : boolean" num="314" count="0" type="method"/>
            <line num="316" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="involvedKeys() : List&lt;String&gt;" num="319" count="0" type="method"/>
            <line num="321" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenConstraintsOneReturningFalse$whenSatisfiesAllOf$thenFalse() : void" num="327" count="0" type="method"/>
            <line num="329" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="331" count="0" type="method"/>
            <line num="333" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Tuple) : boolean" num="336" count="0" type="method"/>
            <line num="338" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="involvedKeys() : List&lt;String&gt;" num="341" count="0" type="method"/>
            <line num="343" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="347" count="0" type="method"/>
            <line num="349" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Tuple) : boolean" num="352" count="0" type="method"/>
            <line num="354" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="involvedKeys() : List&lt;String&gt;" num="357" count="0" type="method"/>
            <line num="359" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="374" count="0" type="method"/>
            <line num="376" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Tuple) : boolean" num="379" count="0" type="method"/>
            <line num="381" count="0" type="stmt"/>
            <line num="382" count="0" type="stmt"/>
            <line num="383" count="0" type="stmt"/>
            <line num="384" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="involvedKeys() : List&lt;String&gt;" num="387" count="0" type="method"/>
            <line num="389" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="given$whenReplaceDontCareValuesWithActualLevels$then() : void" num="399" count="0" type="method"/>
            <line num="401" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenCisDontCare$whenReplaceDontCareValuesWithActualLevels$then() : void" num="415" count="0" type="method"/>
            <line num="417" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenBandCareDontCare$whenReplaceDontCareValuesWithActualLevels$then() : void" num="431" count="0" type="method"/>
            <line num="433" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenABandCareDontCare$whenReplaceDontCareValuesWithActualLevels$thenWorksFine() : void" num="447" count="0" type="method"/>
            <line num="449" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenCisDontCareDontCare$whenAssignmentsForDontCaresUnderConstraints$thenWorksFine() : void" num="463" count="0" type="method"/>
            <line num="465" count="0" type="stmt"/>
            <line num="470" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenBandCareDontCareDontCare$whenAssignmentsForDontCaresUnderConstraints$thenWorksFine() : void" num="485" count="0" type="method"/>
            <line num="487" count="0" type="stmt"/>
            <line num="492" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenQuadraticEquationExample$whenReplaceDontCares$thenWorksFine() : void" num="510" count="0" type="method"/>
            <line num="512" count="0" type="stmt"/>
            <line num="517" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getName() : String" num="519" count="0" type="method"/>
            <line num="521" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(Tuple) : boolean" num="524" count="0" type="method"/>
            <line num="526" count="0" type="stmt"/>
            <line num="527" count="0" type="stmt"/>
            <line num="528" count="0" type="stmt"/>
            <line num="529" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="involvedKeys() : List&lt;String&gt;" num="532" count="0" type="method"/>
            <line num="534" count="0" type="stmt"/>
            <line num="538" count="0" type="stmt"/>
            <line num="543" count="0" type="stmt"/>
            <line num="549" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="given3FactorsWithStrength1$whenAllPossibleTuples$thenAllCovered() : void" num="563" count="0" type="method"/>
            <line num="565" count="0" type="stmt"/>
            <line num="571" count="0" type="stmt"/>
            <line num="575" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="given3FactorsWithStrength2$whenAllPossibleTuples$thenAllCovered() : void" num="578" count="0" type="method"/>
            <line num="580" count="0" type="stmt"/>
            <line num="586" count="0" type="stmt"/>
            <line num="590" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="given3FactorsAndStrength3$whenAllPossibleTuples$thenAllCovered() : void" num="593" count="0" type="method"/>
            <line num="595" count="0" type="stmt"/>
            <line num="601" count="0" type="stmt"/>
            <line num="605" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 611()" num="611" count="0" type="method"/>
            <line num="612" count="0" type="stmt"/>
            <line num="613" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenMatchingDontCareFactor$whenIncompleteTestsToCoverGivenTuple$thenChosen() : void" num="616" count="0" type="method"/>
            <line num="618" count="0" type="stmt"/>
            <line num="619" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenMatchingAbsentFactor$whenIncompleteTestsToCoverGivenTuple$thenChosen() : void" num="625" count="0" type="method"/>
            <line num="627" count="0" type="stmt"/>
            <line num="628" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenNoMatching$whenIncompleteTestsToCoverGivenTuple$thenNotChosen() : void" num="634" count="0" type="method"/>
            <line num="636" count="0" type="stmt"/>
            <line num="637" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.examples.flyingspaghettimonster">
         <metrics coveredelements="0" complexity="21" loc="138" methods="20" classes="3" statements="18" coveredconditionals="0" coveredmethods="0" elements="40" ncloc="120" files="3" conditionals="2" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/examples/flyingspaghettimonster/FlyingSpaghettiMonster.java" name="FlyingSpaghettiMonster.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="14" coveredmethods="0" methods="5" elements="5" classes="1" ncloc="13" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="FlyingSpaghettiMonster">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="5" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="cook(String) : void" num="4" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="eat() : void" num="6" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="serve() : void" num="8" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="takeOff() : void" num="10" count="0" type="method"/>
            <line complexity="1" visibility="public" signature="perch() : void" num="12" count="0" type="method"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/examples/flyingspaghettimonster/FlyingSpaghettiMonsterExample.java" name="FlyingSpaghettiMonsterExample.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="41" coveredmethods="0" methods="4" elements="13" classes="1" ncloc="37" statements="7" conditionals="2" coveredstatements="0"/>
            <class name="FlyingSpaghettiMonsterExample">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="4" elements="13" statements="7" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="check(Scenario&lt;FlyingSpaghettiMonster&gt;) : boolean" num="17" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="flyingSpaghettiMonster() : Parameter.Factory" num="21" count="0" type="method"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="performScenario(Scenario&lt;FlyingSpaghettiMonster&gt;) : void" num="26" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="visit(Edge&lt;FlyingSpaghettiMonster&gt;) : void" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="35" type="cond"/>
            <line num="36" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/examples/flyingspaghettimonster/FlyingSpaghettiMonsterSpec.java" name="FlyingSpaghettiMonsterSpec.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="83" coveredmethods="0" methods="11" elements="22" classes="1" ncloc="70" statements="11" conditionals="0" coveredstatements="0"/>
            <class name="FlyingSpaghettiMonsterSpec">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="11" elements="22" statements="11" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="cook(Expectation.Builder&lt;FlyingSpaghettiMonster&gt;,String) : Expectation&lt;FlyingSpaghettiMonster&gt;" num="12" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="takeOff(Expectation.Builder&lt;FlyingSpaghettiMonster&gt;) : Expectation&lt;FlyingSpaghettiMonster&gt;" num="18" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="serve(Expectation.Builder&lt;FlyingSpaghettiMonster&gt;) : Expectation&lt;FlyingSpaghettiMonster&gt;" num="25" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eat(Expectation.Builder&lt;FlyingSpaghettiMonster&gt;) : Expectation&lt;FlyingSpaghettiMonster&gt;" num="32" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="perch(Expectation.Builder&lt;FlyingSpaghettiMonster&gt;) : Expectation&lt;FlyingSpaghettiMonster&gt;" num="40" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="check(FlyingSpaghettiMonster) : boolean" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cook(Expectation.Builder&lt;FlyingSpaghettiMonster&gt;,String) : Expectation&lt;FlyingSpaghettiMonster&gt;" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="serve(Expectation.Builder&lt;FlyingSpaghettiMonster&gt;) : Expectation&lt;FlyingSpaghettiMonster&gt;" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="eat(Expectation.Builder&lt;FlyingSpaghettiMonster&gt;) : Expectation&lt;FlyingSpaghettiMonster&gt;" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="perch(Expectation.Builder&lt;FlyingSpaghettiMonster&gt;) : Expectation&lt;FlyingSpaghettiMonster&gt;" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="takeOff(Expectation.Builder&lt;FlyingSpaghettiMonster&gt;) : Expectation&lt;FlyingSpaghettiMonster&gt;" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.tests.features.pipeline.negative">
         <metrics coveredelements="0" complexity="7" loc="76" methods="2" classes="1" statements="10" coveredconditionals="0" coveredmethods="0" elements="22" ncloc="71" files="1" conditionals="10" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/features/pipeline/negative/NegativeGenerationTest.java" name="NegativeGenerationTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="76" coveredmethods="0" methods="2" elements="22" classes="1" ncloc="71" statements="10" conditionals="10" coveredstatements="0"/>
            <class name="NegativeGenerationTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="2" elements="22" statements="10" conditionals="10" coveredstatements="0"/>
            </class>
            <line complexity="6" visibility="public" signature="test() : void" num="18" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="39" type="cond"/>
            <line num="40" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="40" type="cond"/>
            <line num="41" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="41" type="cond"/>
            <line num="42" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="45" type="cond"/>
            <line num="46" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="61" type="cond"/>
            <line complexity="1" visibility="public" signature="requirement() : Requirement" num="70" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.tests.usecases.lifecycle">
         <metrics coveredelements="0" complexity="9" loc="91" methods="9" classes="2" statements="13" coveredconditionals="0" coveredmethods="0" elements="22" ncloc="74" files="2" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/usecases/lifecycle/BeforeAfter.java" name="BeforeAfter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="61" coveredmethods="0" methods="8" elements="17" classes="1" ncloc="48" statements="9" conditionals="0" coveredstatements="0"/>
            <class name="BeforeAfter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="8" elements="17" statements="9" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="a() : Parameter.Simple.Factory&lt;Integer&gt;" num="20" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="b() : Parameter.Simple.Factory&lt;Integer&gt;" num="25" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="c() : Parameter.Simple.Factory&lt;Integer&gt;" num="30" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="beforeClass() : void" num="36" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="before() : void" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(int,int,int) : void" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="after() : void" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="afterClass() : void" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/usecases/lifecycle/BeforeAfterTest.java" name="BeforeAfterTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="30" coveredmethods="0" methods="1" elements="5" classes="1" ncloc="26" statements="4" conditionals="0" coveredstatements="0"/>
            <class name="BeforeAfterTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="5" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testBeforeAfter() : void" num="14" count="0" type="method"/>
            <line num="17" count="0" type="stmt"/>
            <line num="18" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.examples.seed">
         <metrics coveredelements="0" complexity="3" loc="88" methods="3" classes="6" statements="3" coveredconditionals="0" coveredmethods="0" elements="6" ncloc="79" files="3" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/examples/seed/BankAccountExampleWithSeeds.java" name="BankAccountExampleWithSeeds.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="29" coveredmethods="0" methods="1" elements="2" classes="2" ncloc="27" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="BankAccountExampleWithSeeds">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="BankAccountExampleWithSeeds.Config">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="defineRequirement(Requirement.Builder) : Requirement" num="12" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/examples/seed/FlyingSpaghttiMonsterExampleWithSeeds.java" name="FlyingSpaghttiMonsterExampleWithSeeds.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="34" coveredmethods="0" methods="1" elements="2" classes="2" ncloc="31" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="FlyingSpaghttiMonsterExampleWithSeeds">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="FlyingSpaghttiMonsterExampleWithSeeds.Config">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="defineRequirement(Requirement.Builder) : Requirement" num="14" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/examples/seed/QuadraticEquationExampleWithSeeds.java" name="QuadraticEquationExampleWithSeeds.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="25" coveredmethods="0" methods="1" elements="2" classes="2" ncloc="21" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="QuadraticEquationExampleWithSeeds">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="QuadraticEquationExampleWithSeeds.Config">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="defineRequirement(Requirement.Builder) : Requirement" num="12" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.examples.join">
         <metrics coveredelements="0" complexity="5" loc="44" methods="5" classes="1" statements="6" coveredconditionals="0" coveredmethods="0" elements="11" ncloc="35" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/examples/join/JoinCA2$2$10_CA2$2$20.java" name="JoinCA2$2$10_CA2$2$20.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="44" coveredmethods="0" methods="5" elements="11" classes="1" ncloc="35" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="JoinCA2$2$10_CA2$2$20">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="11" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="printLhs() : void" num="20" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="printRhs() : void" num="25" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="printJoined() : void" num="30" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="printJoined2() : void" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="printCA(List&lt;T&gt;) : void" num="40" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.examples.parameterhelper">
         <metrics coveredelements="0" complexity="8" loc="84" methods="8" classes="1" statements="8" coveredconditionals="0" coveredmethods="0" elements="16" ncloc="69" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/examples/parameterhelper/ParameterHelperExample.java" name="ParameterHelperExample.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="84" coveredmethods="0" methods="8" elements="16" classes="1" ncloc="69" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="ParameterHelperExample">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="8" elements="16" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="scenario() : Parameter.Regex.Factory&lt;String&gt;" num="24" count="0" type="method"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="depositAmount() : Parameter.Simple.Factory&lt;Integer&gt;" num="29" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="withdrawAmount() : Parameter.Simple.Factory&lt;Integer&gt;" num="34" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="transferAmount() : Parameter.Simple.Factory&lt;Integer&gt;" num="39" count="0" type="method"/>
            <line num="41" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="flyingSpaghettiMonster() : Parameter.Factory" num="44" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="group() : Parameter.Factory" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="seq() : Parameter.Factory" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="printScenario(List&lt;String&gt;,int,int,int,Scenario&lt;FlyingSpaghettiMonster&gt;,List&lt;String&gt;,Tuple) : void" num="72" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.tests.usecases">
         <metrics coveredelements="0" complexity="1" loc="21" methods="1" classes="1" statements="1" coveredconditionals="0" coveredmethods="0" elements="2" ncloc="17" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/usecases/UseCasesTest.java" name="UseCasesTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="21" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="17" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="UseCasesTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="separatedParameterSpace() : void" num="11" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.examples.pict">
         <metrics coveredelements="0" complexity="22" loc="580" methods="21" classes="2" statements="25" coveredconditionals="0" coveredmethods="0" elements="48" ncloc="186" files="2" conditionals="2" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/examples/pict/Issue11.java" name="Issue11.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="99" coveredmethods="0" methods="8" elements="16" classes="1" ncloc="45" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="Issue11">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="8" elements="16" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="platform() : Parameter.Factory&lt;String&gt;" num="49" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="cpu() : Parameter.Factory&lt;String&gt;" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ram() : Parameter.Factory&lt;String&gt;" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="hdd() : Parameter.Factory&lt;String&gt;" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="os() : Parameter.Factory&lt;String&gt;" num="69" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="ie() : Parameter.Factory&lt;String&gt;" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="apps() : Parameter.Factory&lt;List&lt;String&gt;&gt;" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(List&lt;Object&gt;) : void" num="84" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/examples/pict/Issue13.java" name="Issue13.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="14" loc="481" coveredmethods="0" methods="13" elements="32" classes="1" ncloc="141" statements="17" conditionals="2" coveredstatements="0"/>
            <class name="Issue13">
               <metrics coveredelements="0" coveredconditionals="0" complexity="14" coveredmethods="0" methods="13" elements="32" statements="17" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="eingangskanal() : Parameter.Factory&lt;String&gt;" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="finanzinstrument() : Parameter.Factory&lt;String&gt;" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="produktzyklus() : Parameter.Factory&lt;String&gt;" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="dienstleistungsart() : Parameter.Factory&lt;String&gt;" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="orderart() : Parameter.Factory&lt;String&gt;" num="96" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="initiator() : Parameter.Factory&lt;String&gt;" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="auftragserteilung() : Parameter.Factory&lt;String&gt;" num="117" count="0" type="method"/>
            <line num="119" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="bereitstellungsdokumente() : Parameter.Factory&lt;String&gt;" num="130" count="0" type="method"/>
            <line num="132" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="udalStatus() : Parameter.Factory&lt;String&gt;" num="145" count="0" type="method"/>
            <line num="147" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="abruf_Infoblaetter() : Parameter.Factory&lt;String&gt;" num="160" count="0" type="method"/>
            <line num="162" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="constraint1(String,String,String,String,String,String,String,String) : boolean" num="181" count="0" type="method"/>
            <line num="193" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="193" type="cond"/>
            <line num="194" count="0" type="stmt"/>
            <line num="205" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(String,String,String,String,String,String,String,String,String,String) : void" num="449" count="0" type="method"/>
            <line num="462" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="main(String) : void" num="476" count="0" type="method"/>
            <line num="477" count="0" type="stmt"/>
            <line num="478" count="0" type="stmt"/>
            <line num="479" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.experiments">
         <metrics coveredelements="0" complexity="0" loc="16" methods="0" classes="1" statements="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="14" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/experiments/Experiments.java" name="Experiments.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="16" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="14" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="Experiments">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.experiments.join.acts">
         <metrics coveredelements="0" complexity="7" loc="98" methods="6" classes="1" statements="25" coveredconditionals="0" coveredmethods="0" elements="33" ncloc="86" files="1" conditionals="2" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/experiments/join/acts/ActsUtilsTest.java" name="ActsUtilsTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="7" loc="98" coveredmethods="0" methods="6" elements="33" classes="1" ncloc="86" statements="25" conditionals="2" coveredstatements="0"/>
            <class name="ActsUtilsTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="6" elements="33" statements="25" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="testGenerateAndReport() : void" num="23" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGenerateAndReportWithConstraints() : void" num="30" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testGenerateAndReportWithConstraintsWithStrength3() : void" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="2" visibility="private" signature="generateAndReportWithConstraints(File,int,int) : void" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="57" type="cond"/>
            <line num="58" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="testReadTestSuiteFromCsv() : void" num="66" count="0" type="method"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="readCsv() : Stream&lt;String&gt;" num="77" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.tests.errorhandling">
         <metrics coveredelements="0" complexity="3" loc="49" methods="3" classes="2" statements="2" coveredconditionals="0" coveredmethods="0" elements="5" ncloc="42" files="2" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/errorhandling/ErrorHandlingTest.java" name="ErrorHandlingTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="1" loc="25" coveredmethods="0" methods="1" elements="2" classes="1" ncloc="22" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="ErrorHandlingTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="failOnParameterFactoryCreation() : void" num="10" count="0" type="method"/>
            <line num="12" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/errorhandling/FailOnParameterFactoryCreation.java" name="FailOnParameterFactoryCreation.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="24" coveredmethods="0" methods="2" elements="3" classes="1" ncloc="20" statements="1" conditionals="0" coveredstatements="0"/>
            <class name="FailOnParameterFactoryCreation">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="3" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="a() : Parameter.Simple.Factory&lt;Integer&gt;" num="14" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(int) : void" num="19" count="0" type="method"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.tests.features.pipeline.stages">
         <metrics coveredelements="0" complexity="17" loc="434" methods="17" classes="4" statements="21" coveredconditionals="0" coveredmethods="0" elements="38" ncloc="390" files="4" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/features/pipeline/stages/EncodeTest.java" name="EncodeTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="102" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="94" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="EncodeTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="givenOneFactorWithConstantConstraint$whenEncode$thenFactorSpaceIsGenerated() : void" num="17" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenOneFactorWithNormalConstraint$whenEncode$thenFactorSpaceIsGenerated() : void" num="46" count="0" type="method"/>
            <line num="48" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenOneFactorWithImpossibleConstraint$whenEncode$thenFactorSpaceIsGenerated() : void" num="75" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/features/pipeline/stages/EngineTest.java" name="EngineTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="93" coveredmethods="0" methods="4" elements="9" classes="1" ncloc="85" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="EngineTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="givenOneFactorWithNoConstraint$whenEngine$thenTupleSetGenerated() : void" num="17" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenTwoFactorsWithNoConstraint$whenEngine$thenTupleSetGenerated() : void" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="given3FactorsWithNoConstraint$whenEngine$thenTupleSetGenerated() : void" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenOneFactorWithConstraint$whenEngine$thenTupleSetGenerated() : void" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/features/pipeline/stages/PartitionerTest.java" name="PartitionerTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="40" coveredmethods="0" methods="2" elements="7" classes="1" ncloc="32" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="PartitionerTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="7" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="givenSimpleFactorSpace$whenPartition$thenGivenFactorSpacePassedThrough() : void" num="13" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenFactorSpaceWithConstraint$whenPartition$thenGivenFactorSpacePassedThrough() : void" num="25" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/features/pipeline/stages/PreprocessTest.java" name="PreprocessTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="8" loc="199" coveredmethods="0" methods="8" elements="16" classes="1" ncloc="179" statements="8" conditionals="0" coveredstatements="0"/>
            <class name="PreprocessTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="8" coveredmethods="0" methods="8" elements="16" statements="8" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="givenOneSimpleParameter$whenPreprocess$thenParameterSpaceWithOneSimpleParameterIsReturned() : void" num="16" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenTwoSimpleParameters$whenPreprocess$thenParameterSpaceWithTwoSimpleParametersIsReturned() : void" num="28" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenSingleSimpleParameterUnderOneConstraint$whenPreprocess$thenParameterAndConstraintAreKept() : void" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenTwoSimpleParameterUnderOneConstraint$whenPreprocess$thenParametersAndConstraintAreKept() : void" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenCustomParameterWithNoConstraint$whenPreprocess$thenCustomParameterKept() : void" num="80" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenSingleCustomParameterUnderOneConstraint$whenPreprocess$thenConvertedToSimpleParameter() : void" num="91" count="0" type="method"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenTwoCustomParameterUnderOneConstraintInvolvingOneParameter$whenPreprocess$thenInvolvedOneConvertedInToSimpleWhileTheOtherKept() : void" num="119" count="0" type="method"/>
            <line num="121" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenTwoCustomParametersUnderOneConstraintInvolvingBoth$whenPreprocess$thenBothConvertedIntoSimpleParameters() : void" num="157" count="0" type="method"/>
            <line num="159" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.experiments.sandboxes">
         <metrics coveredelements="0" complexity="55" loc="513" methods="53" classes="9" statements="103" coveredconditionals="0" coveredmethods="0" elements="160" ncloc="428" files="3" conditionals="4" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/experiments/sandboxes/JoinSandbox1.java" name="JoinSandbox1.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="28" loc="304" coveredmethods="0" methods="27" elements="91" classes="1" ncloc="256" statements="62" conditionals="2" coveredstatements="0"/>
            <class name="JoinSandbox1">
               <metrics coveredelements="0" coveredconditionals="0" complexity="28" coveredmethods="0" methods="27" elements="91" statements="62" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="exerciseExperimentsFrom5To50() : void" num="19" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="22" type="cond"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="smallAndSmall() : void" num="27" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="smallAndSmallAtOnce() : void" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line num="84" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="medAndMed() : void" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line num="110" count="0" type="stmt"/>
            <line num="111" count="0" type="stmt"/>
            <line num="126" count="0" type="stmt"/>
            <line num="127" count="0" type="stmt"/>
            <line num="129" count="0" type="stmt"/>
            <line num="130" count="0" type="stmt"/>
            <line num="132" count="0" type="stmt"/>
            <line num="133" count="0" type="stmt"/>
            <line num="135" count="0" type="stmt"/>
            <line num="148" count="0" type="stmt"/>
            <line num="149" count="0" type="stmt"/>
            <line num="150" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="medAndMedAtOnce() : void" num="154" count="0" type="method"/>
            <line num="156" count="0" type="stmt"/>
            <line num="177" count="0" type="stmt"/>
            <line num="178" count="0" type="stmt"/>
            <line num="180" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test() : void" num="183" count="0" type="method"/>
            <line num="185" count="0" type="stmt"/>
            <line num="186" count="0" type="stmt"/>
            <line num="191" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test2$2$30() : void" num="194" count="0" type="method"/>
            <line num="196" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test2$2$25() : void" num="199" count="0" type="method"/>
            <line num="201" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test2$2$20() : void" num="204" count="0" type="method"/>
            <line num="206" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test2$2$15() : void" num="209" count="0" type="method"/>
            <line num="211" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test2$2$10() : void" num="214" count="0" type="method"/>
            <line num="216" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test3$2$10() : void" num="219" count="0" type="method"/>
            <line num="221" count="0" type="stmt"/>
            <line num="222" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test2$3$10() : void" num="225" count="0" type="method"/>
            <line num="227" count="0" type="stmt"/>
            <line num="228" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test2$2$5() : void" num="231" count="0" type="method"/>
            <line num="233" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test2$2$4() : void" num="236" count="0" type="method"/>
            <line num="238" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test2$2$3() : void" num="241" count="0" type="method"/>
            <line num="243" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test2$2$2() : void" num="246" count="0" type="method"/>
            <line num="248" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="uneven100a() : void" num="251" count="0" type="method"/>
            <line num="253" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="uneven100b() : void" num="256" count="0" type="method"/>
            <line num="258" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="uneven100c() : void" num="261" count="0" type="method"/>
            <line num="263" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="uneven100d() : void" num="266" count="0" type="method"/>
            <line num="268" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="uneven100e() : void" num="271" count="0" type="method"/>
            <line num="273" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="uneven60a() : void" num="276" count="0" type="method"/>
            <line num="278" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="even50() : void" num="281" count="0" type="method"/>
            <line num="283" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="even25() : void" num="286" count="0" type="method"/>
            <line num="288" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="even13() : void" num="292" count="0" type="method"/>
            <line num="294" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="even10() : void" num="298" count="0" type="method"/>
            <line num="300" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/experiments/sandboxes/JoinSandbox2.java" name="JoinSandbox2.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="22" loc="132" coveredmethods="0" methods="22" elements="44" classes="6" ncloc="107" statements="22" conditionals="0" coveredstatements="0"/>
            <class name="JoinSandbox2">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="JoinSandbox2.Base">
               <metrics coveredelements="0" coveredconditionals="0" complexity="1" coveredmethods="0" methods="1" elements="2" statements="1" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="JoinSandbox2.Even">
               <metrics coveredelements="0" coveredconditionals="0" complexity="7" coveredmethods="0" methods="7" elements="14" statements="7" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="JoinSandbox2.Uneven100">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="8" statements="4" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="JoinSandbox2.Uneven110">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="JoinSandbox2.Uneven120">
               <metrics coveredelements="0" coveredconditionals="0" complexity="5" coveredmethods="0" methods="5" elements="10" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="printHeader() : void" num="13" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenLhs10Rhs10$whenExercise$thenReported() : void" num="20" count="0" type="method"/>
            <line num="22" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenLhs20Rhs20$whenExercise$thenReported() : void" num="25" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenLhs30Rhs30$whenExercise$thenReported() : void" num="30" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenLhs40Rhs40$whenExercise$thenReported() : void" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenLhs50Rhs50$whenExercise$thenReported() : void" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenLhs55Rhs55$whenExercise$thenReported() : void" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenLhs60Rhs60$whenExercise$thenReported() : void" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenLhs60Rhs40$whenExercise$thenReported() : void" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenLhs70Rhs30$whenExercise$thenReported() : void" num="62" count="0" type="method"/>
            <line num="64" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenLhs80Rhs20$whenExercise$thenReported() : void" num="67" count="0" type="method"/>
            <line num="69" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenLhs90Rhs10$whenExercise$thenReported() : void" num="72" count="0" type="method"/>
            <line num="74" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenLhs60Rhs50$whenExercise$thenReported() : void" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenLhs70Rhs40$whenExercise$thenReported() : void" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenLhs80Rhs30$whenExercise$thenReported() : void" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenLhs90Rhs20$whenExercise$thenReported() : void" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenLhs100Rhs10$whenExercise$thenReported() : void" num="99" count="0" type="method"/>
            <line num="101" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenLhs70Rhs50$whenExercise$thenReported() : void" num="106" count="0" type="method"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenLhs80Rhs40$whenExercise$thenReported() : void" num="111" count="0" type="method"/>
            <line num="113" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenLhs90Rhs30$whenExercise$thenReported() : void" num="116" count="0" type="method"/>
            <line num="118" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenLhs100Rhs20$whenExercise$thenReported() : void" num="121" count="0" type="method"/>
            <line num="123" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="givenLhs110Rhs10$whenExercise$thenReported() : void" num="126" count="0" type="method"/>
            <line num="128" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/experiments/sandboxes/JoinSandbox3.java" name="JoinSandbox3.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="5" loc="77" coveredmethods="0" methods="4" elements="25" classes="2" ncloc="65" statements="19" conditionals="2" coveredstatements="0"/>
            <class name="JoinSandbox3">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="2" elements="20" statements="16" conditionals="2" coveredstatements="0"/>
            </class>
            <class name="JoinSandbox3.CoveringArrayGenerator">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="5" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="CoveringArrayGenerator(FactorSpace,int)" num="26" count="0" type="method"/>
            <line num="27" count="0" type="stmt"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="call() : List&lt;Tuple&gt;" num="31" count="0" type="method"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="test() : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="41" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="56" type="cond"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="generateCoveringArrayByCascading(FactorSpaceSpecForExperiments,FactorSpaceSpecForExperiments,FactorSpaceSpecForExperiments,ExecutorService) : List&lt;Tuple&gt;" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="69" count="0" type="stmt"/>
            <line num="71" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.extras.abstracter">
         <metrics coveredelements="0" complexity="26" loc="196" methods="26" classes="4" statements="38" coveredconditionals="0" coveredmethods="0" elements="64" ncloc="152" files="3" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/extras/abstracter/Abstractor.java" name="Abstractor.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="2" loc="24" coveredmethods="0" methods="2" elements="7" classes="1" ncloc="18" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="Abstractor">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="7" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="package" signature="toFactorSpace(FactorSpaceSpecForExperiments) : FactorSpace" num="13" count="0" type="method"/>
            <line num="14" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="encode(FactorSpace) : FactorSpace" num="17" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
            <line num="20" count="0" type="stmt"/>
            <line num="21" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/extras/abstracter/EncodedFactorSpace.java" name="EncodedFactorSpace.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="72" coveredmethods="0" methods="9" elements="20" classes="2" ncloc="55" statements="11" conditionals="0" coveredstatements="0"/>
            <class name="EncodedFactorSpace">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="EncodedFactorSpace.Builder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="9" elements="20" statements="11" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="Builder(FactorSpace)" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : EncodedFactorSpace" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConstraints() : List&lt;Constraint&gt;" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactors() : List&lt;Factor&gt;" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactor(String) : Factor" num="45" count="0" type="method"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="factorNameEncoder() : Function&lt;String, String&gt;" num="50" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="factorNameDecoder() : Function&lt;String, String&gt;" num="55" count="0" type="method"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="valueEncoder() : BiFunction&lt;String, Object, Integer&gt;" num="60" count="0" type="method"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="valueDecoder() : BiFunction&lt;String, Integer, Object&gt;" num="65" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/extras/abstracter/FactorSpaceEncoder.java" name="FactorSpaceEncoder.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="100" coveredmethods="0" methods="15" elements="37" classes="1" ncloc="79" statements="22" conditionals="0" coveredstatements="0"/>
            <class name="FactorSpaceEncoder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="15" elements="37" statements="22" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="addFactor(Factor) : FactorSpaceEncoder" num="20" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addConstraint(Constraint) : FactorSpaceEncoder" num="29" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line num="31" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="encoded() : EncodedFactorSpace" num="35" count="0" type="method"/>
            <line num="36" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="encodeFactorName(String) : String" num="39" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="encodeFactorName(int,int) : String" num="45" count="0" type="method"/>
            <line num="46" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="decodeFactorName(String) : String" num="49" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="factorNameEncoder() : Function&lt;String, String&gt;" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="factorNameDecoder() : Function&lt;String, String&gt;" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="factorIndexOf(String) : int" num="64" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="factorIndexInSameNumLevelsOf(String) : int" num="69" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="valueEncoder() : BiFunction&lt;String, Object, Integer&gt;" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="valueDecoder() : BiFunction&lt;String, Integer, Object&gt;" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getConstraints() : List&lt;Constraint&gt;" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactors() : List&lt;Factor&gt;" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="getFactor(String) : Factor" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.tests.usecases.pipeline">
         <metrics coveredelements="0" complexity="4" loc="47" methods="4" classes="1" statements="13" coveredconditionals="0" coveredmethods="0" elements="17" ncloc="35" files="1" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/tests/usecases/pipeline/ParameterFactoryBaseTest.java" name="ParameterFactoryBaseTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="47" coveredmethods="0" methods="4" elements="17" classes="1" ncloc="35" statements="13" conditionals="0" coveredstatements="0"/>
            <class name="ParameterFactoryBaseTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="17" statements="13" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="create(String) : Parameter&lt;String&gt;" num="17" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="compilableAndInstatiatable() : void" num="22" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="whenAddActualValue$thenAdded() : void" num="27" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line num="30" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="34" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="whenAddActualValues$thenAdded() : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="45" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.examples.beforesandafters">
         <metrics coveredelements="0" complexity="18" loc="137" methods="18" classes="2" statements="23" coveredconditionals="0" coveredmethods="0" elements="41" ncloc="115" files="2" conditionals="0" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/examples/beforesandafters/BeforeAfter.java" name="BeforeAfter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="15" loc="110" coveredmethods="0" methods="15" elements="35" classes="1" ncloc="92" statements="20" conditionals="0" coveredstatements="0"/>
            <class name="BeforeAfter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="15" coveredmethods="0" methods="15" elements="35" statements="20" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="a() : Parameter.Factory" num="18" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="b() : Parameter.Factory" num="23" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="c() : Parameter.Factory" num="28" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="d() : Parameter.Factory" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="e() : Parameter.Factory" num="38" count="0" type="method"/>
            <line num="40" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="f() : Parameter.Factory" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="aIsA2(String) : boolean" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="beforeClass() : void" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="beforeTestCase(String) : void" num="58" count="0" type="method"/>
            <line num="60" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="before(String) : void" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test1(String) : void" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test2(String) : void" num="73" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="after(String) : void" num="79" count="0" type="method"/>
            <line num="81" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="afterTestCase(String) : void" num="84" count="0" type="method"/>
            <line num="86" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="afterClass(TestSuite) : void" num="89" count="0" type="method"/>
            <line num="91" count="0" type="stmt"/>
            <line num="92" count="0" type="stmt"/>
            <line num="101" count="0" type="stmt"/>
            <line num="102" count="0" type="stmt"/>
            <line num="105" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/examples/beforesandafters/UnusedParameter.java" name="UnusedParameter.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="27" coveredmethods="0" methods="3" elements="6" classes="1" ncloc="23" statements="3" conditionals="0" coveredstatements="0"/>
            <class name="UnusedParameter">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="6" statements="3" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="used() : Parameter.Factory" num="13" count="0" type="method"/>
            <line num="15" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="notReferednced() : Parameter.Factory" num="18" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="test(boolean) : void" num="23" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.extras.normalizer.compat">
         <metrics coveredelements="0" complexity="11" loc="96" methods="10" classes="2" statements="21" coveredconditionals="0" coveredmethods="0" elements="33" ncloc="82" files="2" conditionals="2" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/extras/normalizer/compat/FactorSpaceSpecForExperiments.java" name="FactorSpaceSpecForExperiments.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="11" loc="87" coveredmethods="0" methods="10" elements="33" classes="1" ncloc="76" statements="21" conditionals="2" coveredstatements="0"/>
            <class name="FactorSpaceSpecForExperiments">
               <metrics coveredelements="0" coveredconditionals="0" complexity="11" coveredmethods="0" methods="10" elements="33" statements="21" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="addFactors(int,int) : FactorSpaceSpecForExperiments" num="23" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="25" type="cond"/>
            <line num="26" count="0" type="stmt"/>
            <line num="27" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addFactor(int) : FactorSpaceSpecForExperiments" num="30" count="0" type="method"/>
            <line num="31" count="0" type="stmt"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="addConstraint(Function&lt;List&lt;String&gt;, NormalizedConstraint&gt;) : FactorSpaceSpecForExperiments" num="36" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="firstFactorIndexOf(int) : int" num="41" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : FactorSpace" num="50" count="0" type="method"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 52()" num="52" count="0" type="method"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line num="62" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="prefix() : String" num="70" count="0" type="method"/>
            <line num="71" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="74" count="0" type="method"/>
            <line num="76" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="composeFactorName(IntSupplier) : String" num="81" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="factorSpecs() : Stream&lt;Map.Entry&lt;Integer, Integer&gt;&gt;" num="84" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/extras/normalizer/compat/NormalizedConstraint.java" name="NormalizedConstraint.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="0" loc="9" coveredmethods="0" methods="0" elements="0" classes="1" ncloc="6" statements="0" conditionals="0" coveredstatements="0"/>
            <class name="NormalizedConstraint">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
         </file>
      </package>
      <package name="com.github.dakusui.jcunit8.experiments.compat">
         <metrics coveredelements="0" complexity="75" loc="723" methods="72" classes="21" statements="156" coveredconditionals="0" coveredmethods="0" elements="234" ncloc="607" files="8" conditionals="6" coveredstatements="0"/>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/experiments/compat/CompatJoinExperimentUtils.java" name="CompatJoinExperimentUtils.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="4" loc="65" coveredmethods="0" methods="3" elements="27" classes="1" ncloc="52" statements="22" conditionals="2" coveredstatements="0"/>
            <class name="CompatJoinExperimentUtils">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="3" elements="27" statements="22" conditionals="2" coveredstatements="0"/>
            </class>
            <line complexity="2" visibility="public" signature="exerciseStandardExperiment10Times(int,int) : void" num="19" count="0" type="method"/>
            <line num="21" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="22" type="cond"/>
            <line num="23" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="exercise(int,int,int) : CompatJoinReport" num="27" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="exercise(int,int,int,int) : CompatJoinReport" num="31" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="40" count="0" type="stmt"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="54" count="0" type="stmt"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line num="59" count="0" type="stmt"/>
            <line num="60" count="0" type="stmt"/>
            <line num="61" count="0" type="stmt"/>
            <line num="63" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/experiments/compat/CompatJoinReport.java" name="CompatJoinReport.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="126" coveredmethods="0" methods="13" elements="44" classes="2" ncloc="101" statements="31" conditionals="0" coveredstatements="0"/>
            <class name="CompatJoinReport">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="15" statements="12" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="CompatJoinReport.Builder">
               <metrics coveredelements="0" coveredconditionals="0" complexity="10" coveredmethods="0" methods="10" elements="29" statements="19" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="CompatJoinReport(int,int,long,long,long,long,int,int,int,int)" num="15" count="0" type="method"/>
            <line num="16" count="0" type="stmt"/>
            <line num="17" count="0" type="stmt"/>
            <line num="18" count="0" type="stmt"/>
            <line num="19" count="0" type="stmt"/>
            <line num="20" count="0" type="stmt"/>
            <line num="21" count="0" type="stmt"/>
            <line num="22" count="0" type="stmt"/>
            <line num="23" count="0" type="stmt"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="header() : String" num="28" count="0" type="method"/>
            <line num="29" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="toString() : String" num="32" count="0" type="method"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="Builder(int,int)" num="66" count="0" type="method"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="timeLhs(long) : Builder" num="71" count="0" type="method"/>
            <line num="72" count="0" type="stmt"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="timeRhs(long) : Builder" num="76" count="0" type="method"/>
            <line num="77" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="timeMerged(long) : Builder" num="81" count="0" type="method"/>
            <line num="82" count="0" type="stmt"/>
            <line num="83" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="timeJoining(long) : Builder" num="86" count="0" type="method"/>
            <line num="87" count="0" type="stmt"/>
            <line num="88" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sizeLhs(int) : Builder" num="91" count="0" type="method"/>
            <line num="92" count="0" type="stmt"/>
            <line num="93" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sizeRhs(int) : Builder" num="96" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sizeMerged(int) : Builder" num="101" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line num="103" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="sizeJoining(int) : Builder" num="106" count="0" type="method"/>
            <line num="107" count="0" type="stmt"/>
            <line num="108" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="build() : CompatJoinReport" num="111" count="0" type="method"/>
            <line num="112" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/experiments/compat/ExperimentsTest.java" name="ExperimentsTest.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="13" loc="119" coveredmethods="0" methods="13" elements="37" classes="4" ncloc="98" statements="24" conditionals="0" coveredstatements="0"/>
            <class name="ExperimentsTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ExperimentsTest.JoinExperimentTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="20" statements="14" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ExperimentsTest.JoinExperimentWithStrength3Test">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="ExperimentsTest.JoinExperimentWithStrength3UsingWeakenProductMethodTest">
               <metrics coveredelements="0" coveredconditionals="0" complexity="4" coveredmethods="0" methods="4" elements="9" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="strength() : int" num="23" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="lhsFactorSpaceSpec() : FactorSpaceSpecForExperiments" num="28" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="whenJoinWith2_10$thenLetsSee() : void" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="whenJoinWith2_20$thenLetsSee() : void" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="whenJoinWith2_30$thenLetsSee() : void" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line num="50" count="0" type="stmt"/>
            <line num="51" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="whenJoinWith2_40$thenLetsSee() : void" num="54" count="0" type="method"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line num="58" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="strength() : int" num="68" count="0" type="method"/>
            <line num="70" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="lhsFactorSpaceSpec() : FactorSpaceSpecForExperiments" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="whenJoinWith2_10$thenLetsSee() : void" num="78" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="82" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="strength() : int" num="93" count="0" type="method"/>
            <line num="95" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="lhsFactorSpaceSpec() : FactorSpaceSpecForExperiments" num="98" count="0" type="method"/>
            <line num="100" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="whenJoinWith2_10$thenLetsSee() : void" num="103" count="0" type="method"/>
            <line num="105" count="0" type="stmt"/>
            <line num="106" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="joinerFactory() : Function&lt;Requirement, Joiner&gt;" num="114" count="0" type="method"/>
            <line num="116" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/experiments/compat/JoinExperiment10_n.java" name="JoinExperiment10_n.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="3" loc="27" coveredmethods="0" methods="3" elements="8" classes="1" ncloc="22" statements="5" conditionals="0" coveredstatements="0"/>
            <class name="JoinExperiment10_n">
               <metrics coveredelements="0" coveredconditionals="0" complexity="3" coveredmethods="0" methods="3" elements="8" statements="5" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="whenJoinWith10_5$thenLetsSee() : void" num="11" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line num="14" count="0" type="stmt"/>
            <line num="15" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="strength() : int" num="18" count="0" type="method"/>
            <line num="20" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="lhsFactorSpaceSpec() : FactorSpaceSpecForExperiments" num="23" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/experiments/compat/JoinExperimentBase.java" name="JoinExperimentBase.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="101" coveredmethods="0" methods="7" elements="34" classes="1" ncloc="88" statements="23" conditionals="4" coveredstatements="0"/>
            <class name="JoinExperimentBase">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="7" elements="34" statements="23" conditionals="4" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="afterClass() : void" num="30" count="0" type="method"/>
            <line num="32" count="0" type="stmt"/>
            <line num="33" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="factorSpeceSpec(String,int) : FactorSpaceSpecForExperiments" num="37" count="0" type="method"/>
            <line num="38" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="before() : void" num="41" count="0" type="method"/>
            <line num="43" count="0" type="stmt"/>
            <line num="44" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="44" type="cond"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line num="48" count="0" type="stmt"/>
            <line num="52" count="0" type="stmt"/>
            <line num="53" count="0" type="stmt"/>
            <line complexity="2" visibility="public" signature="exerciseJoin(int,FactorSpaceSpecForExperiments,List&lt;Tuple&gt;) : void" num="62" count="0" type="method"/>
            <line num="63" count="0" type="stmt"/>
            <line num="64" count="0" type="stmt"/>
            <line num="65" count="0" type="stmt"/>
            <line falsecount="0" truecount="0" num="65" type="cond"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line num="68" count="0" type="stmt"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="package" signature="&lt;init&gt;, line 79()" num="79" count="0" type="method"/>
            <line num="80" count="0" type="stmt"/>
            <line num="81" count="0" type="stmt"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="private" signature="exerciseJoin(List&lt;Tuple&gt;) : List&lt;Tuple&gt;" num="88" count="0" type="method"/>
            <line num="89" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="joinerFactory() : Function&lt;Requirement, Joiner&gt;" num="97" count="0" type="method"/>
            <line num="98" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/experiments/compat/JoinExperimentRhs2_n.java" name="JoinExperimentRhs2_n.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="9" loc="103" coveredmethods="0" methods="9" elements="36" classes="1" ncloc="90" statements="27" conditionals="0" coveredstatements="0"/>
            <class name="JoinExperimentRhs2_n">
               <metrics coveredelements="0" coveredconditionals="0" complexity="9" coveredmethods="0" methods="9" elements="36" statements="27" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="whenJoinWith2_10$thenLetsSee() : void" num="11" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line num="14" count="0" type="stmt"/>
            <line num="15" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="whenJoinWith2_20$thenLetsSee() : void" num="22" count="0" type="method"/>
            <line num="24" count="0" type="stmt"/>
            <line num="25" count="0" type="stmt"/>
            <line num="26" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="whenJoinWith2_30$thenLetsSee() : void" num="33" count="0" type="method"/>
            <line num="35" count="0" type="stmt"/>
            <line num="36" count="0" type="stmt"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="whenJoinWith2_40$thenLetsSee() : void" num="43" count="0" type="method"/>
            <line num="45" count="0" type="stmt"/>
            <line num="46" count="0" type="stmt"/>
            <line num="47" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="whenJoinWith2_50$thenLetsSee() : void" num="53" count="0" type="method"/>
            <line num="55" count="0" type="stmt"/>
            <line num="56" count="0" type="stmt"/>
            <line num="57" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="whenJoinWith2_60$thenLetsSee() : void" num="63" count="0" type="method"/>
            <line num="65" count="0" type="stmt"/>
            <line num="66" count="0" type="stmt"/>
            <line num="67" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="whenJoinWith2_70$thenLetsSee() : void" num="73" count="0" type="method"/>
            <line num="75" count="0" type="stmt"/>
            <line num="76" count="0" type="stmt"/>
            <line num="77" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="whenJoinWith2_80$thenLetsSee() : void" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line num="86" count="0" type="stmt"/>
            <line num="87" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="whenJoinWith2_90$thenLetsSee() : void" num="94" count="0" type="method"/>
            <line num="96" count="0" type="stmt"/>
            <line num="97" count="0" type="stmt"/>
            <line num="98" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/experiments/compat/JoinExperiments.java" name="JoinExperiments.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="18" loc="117" coveredmethods="0" methods="18" elements="36" classes="10" ncloc="98" statements="18" conditionals="0" coveredstatements="0"/>
            <class name="JoinExperiments">
               <metrics coveredelements="0" coveredconditionals="0" complexity="0" coveredmethods="0" methods="0" elements="0" statements="0" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="JoinExperiments.Lhs10">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="JoinExperiments.Lhs20">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="JoinExperiments.Lhs30">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="JoinExperiments.Lhs40">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="JoinExperiments.Lhs50">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="JoinExperiments.Lhs60">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="JoinExperiments.Lhs70">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="JoinExperiments.Lhs80">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <class name="JoinExperiments.Lhs90">
               <metrics coveredelements="0" coveredconditionals="0" complexity="2" coveredmethods="0" methods="2" elements="4" statements="2" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="protected" signature="strength() : int" num="11" count="0" type="method"/>
            <line num="13" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="lhsFactorSpaceSpec() : FactorSpaceSpecForExperiments" num="16" count="0" type="method"/>
            <line num="18" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="strength() : int" num="23" count="0" type="method"/>
            <line num="25" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="lhsFactorSpaceSpec() : FactorSpaceSpecForExperiments" num="28" count="0" type="method"/>
            <line num="30" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="strength() : int" num="35" count="0" type="method"/>
            <line num="37" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="lhsFactorSpaceSpec() : FactorSpaceSpecForExperiments" num="40" count="0" type="method"/>
            <line num="42" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="strength() : int" num="47" count="0" type="method"/>
            <line num="49" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="lhsFactorSpaceSpec() : FactorSpaceSpecForExperiments" num="52" count="0" type="method"/>
            <line num="54" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="strength() : int" num="59" count="0" type="method"/>
            <line num="61" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="lhsFactorSpaceSpec() : FactorSpaceSpecForExperiments" num="64" count="0" type="method"/>
            <line num="66" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="strength() : int" num="71" count="0" type="method"/>
            <line num="73" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="lhsFactorSpaceSpec() : FactorSpaceSpecForExperiments" num="76" count="0" type="method"/>
            <line num="78" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="strength() : int" num="83" count="0" type="method"/>
            <line num="85" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="lhsFactorSpaceSpec() : FactorSpaceSpecForExperiments" num="88" count="0" type="method"/>
            <line num="90" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="strength() : int" num="95" count="0" type="method"/>
            <line num="97" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="lhsFactorSpaceSpec() : FactorSpaceSpecForExperiments" num="100" count="0" type="method"/>
            <line num="102" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="strength() : int" num="107" count="0" type="method"/>
            <line num="109" count="0" type="stmt"/>
            <line complexity="1" visibility="protected" signature="lhsFactorSpaceSpec() : FactorSpaceSpecForExperiments" num="112" count="0" type="method"/>
            <line num="114" count="0" type="stmt"/>
         </file>
         <file path="/data/sorald-explanation/compilation-stats/./repo/src/test/java/com/github/dakusui/jcunit8/experiments/compat/StandardFactorSpaces.java" name="StandardFactorSpaces.java">
            <metrics coveredelements="0" coveredconditionals="0" complexity="6" loc="65" coveredmethods="0" methods="6" elements="12" classes="1" ncloc="58" statements="6" conditionals="0" coveredstatements="0"/>
            <class name="StandardFactorSpaces">
               <metrics coveredelements="0" coveredconditionals="0" complexity="6" coveredmethods="0" methods="6" elements="12" statements="6" conditionals="0" coveredstatements="0"/>
            </class>
            <line complexity="1" visibility="public" signature="generate3_4() : void" num="8" count="0" type="method"/>
            <line num="10" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="generate3_13() : void" num="17" count="0" type="method"/>
            <line num="19" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="generate4_15$3_17$2_29() : void" num="26" count="0" type="method"/>
            <line num="28" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="generate4_1$3_39$2_35() : void" num="37" count="0" type="method"/>
            <line num="39" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="generate2_100() : void" num="48" count="0" type="method"/>
            <line num="50" count="0" type="stmt"/>
            <line complexity="1" visibility="public" signature="generate10_20() : void" num="57" count="0" type="method"/>
            <line num="59" count="0" type="stmt"/>
         </file>
      </package>
   </project>
   <testproject name="jcunit 0.8.18-SNAPSHOT" timestamp="0">
      <metrics coveredelements="0" complexity="0" loc="0" methods="0" classes="0" statements="0" packages="0" coveredconditionals="0" coveredmethods="0" elements="0" ncloc="0" files="0" conditionals="0" coveredstatements="0"/>
   </testproject>
</coverage>